import{_ as l,b as i,o as a,a8 as e}from"./chunks/framework.BwoOF8WG.js";const f=JSON.parse('{"title":"设计模式","description":"","frontmatter":{},"headers":[],"relativePath":"material/endorsement/oop/design-mode.md","filePath":"material/endorsement/oop/design-mode.md"}'),t={name:"material/endorsement/oop/design-mode.md"},o=e('<h1 id="设计模式" tabindex="-1">设计模式 <a class="header-anchor" href="#设计模式" aria-label="Permalink to &quot;设计模式&quot;">​</a></h1><h2 id="创建型" tabindex="-1">创建型 <a class="header-anchor" href="#创建型" aria-label="Permalink to &quot;创建型&quot;">​</a></h2><ul><li>单例模式</li><li>工厂方法模式</li><li>抽象工厂模式</li><li>创造者模式(建造者模式)</li><li>原型模式</li></ul><h2 id="结构型" tabindex="-1">结构型 <a class="header-anchor" href="#结构型" aria-label="Permalink to &quot;结构型&quot;">​</a></h2><ul><li>代理模式</li><li>享元模式</li><li>适配器模式</li><li>装饰者模式</li><li>外观模式</li><li>组合模式</li><li>桥接模式</li></ul><h2 id="行为型" tabindex="-1">行为型 <a class="header-anchor" href="#行为型" aria-label="Permalink to &quot;行为型&quot;">​</a></h2><ul><li>观察者模式</li><li>策略模式</li><li>状态模式</li><li>模版方法模式</li><li>迭代器模式</li><li>命令模式</li><li>职责链模式</li><li>中介者模式</li><li>解释器模式</li><li>备忘录模式</li><li>访问者模式</li></ul><h2 id="架构型" tabindex="-1">架构型 <a class="header-anchor" href="#架构型" aria-label="Permalink to &quot;架构型&quot;">​</a></h2><ul><li>MVC 模式</li><li>MVP 模式</li><li>MVVM 模式</li><li>服务定位模式</li><li>依赖注入模式</li></ul><h2 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-label="Permalink to &quot;其他&quot;">​</a></h2><ul><li>模块模式</li><li>链模式</li><li>中间件模式</li></ul>',11),r=[o];function n(d,s,h,c,u,_){return a(),i("div",null,r)}const p=l(t,[["render",n]]);export{f as __pageData,p as default};
