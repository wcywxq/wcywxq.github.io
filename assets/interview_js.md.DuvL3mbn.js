import{_ as e,b as a,o as r,a8 as t}from"./chunks/framework.ZREswijJ.js";const m=JSON.parse('{"title":"JS 面试题","description":"","frontmatter":{},"headers":[],"relativePath":"interview/js.md","filePath":"interview/js.md"}'),o={name:"interview/js.md"},s=t('<h1 id="js-面试题" tabindex="-1">JS 面试题 <a class="header-anchor" href="#js-面试题" aria-label="Permalink to &quot;JS 面试题&quot;">​</a></h1><h2 id="js-中的数据类型" tabindex="-1">js 中的数据类型 <a class="header-anchor" href="#js-中的数据类型" aria-label="Permalink to &quot;js 中的数据类型&quot;">​</a></h2><h2 id="阐述-js-事件循环" tabindex="-1">阐述 js 事件循环 <a class="header-anchor" href="#阐述-js-事件循环" aria-label="Permalink to &quot;阐述 js 事件循环&quot;">​</a></h2><h2 id="js-中的-宏任务-和-微任务-都有哪些" tabindex="-1">js 中的&quot;宏任务&quot;和&quot;微任务&quot;都有哪些 <a class="header-anchor" href="#js-中的-宏任务-和-微任务-都有哪些" aria-label="Permalink to &quot;js 中的&quot;宏任务&quot;和&quot;微任务&quot;都有哪些&quot;">​</a></h2><h2 id="描述-js-中的上下文" tabindex="-1">描述 js 中的上下文 <a class="header-anchor" href="#描述-js-中的上下文" aria-label="Permalink to &quot;描述 js 中的上下文&quot;">​</a></h2><h2 id="for-和-foreach-的区别" tabindex="-1">for 和 forEach 的区别 <a class="header-anchor" href="#for-和-foreach-的区别" aria-label="Permalink to &quot;for 和 forEach 的区别&quot;">​</a></h2><h2 id="return-关键字是作用在什么位置的" tabindex="-1">return 关键字是作用在什么位置的 <a class="header-anchor" href="#return-关键字是作用在什么位置的" aria-label="Permalink to &quot;return 关键字是作用在什么位置的&quot;">​</a></h2><h2 id="foreach-可以使用关键字-break、continue、return-吗" tabindex="-1">forEach 可以使用关键字 break、continue、return 吗 <a class="header-anchor" href="#foreach-可以使用关键字-break、continue、return-吗" aria-label="Permalink to &quot;forEach 可以使用关键字 break、continue、return 吗&quot;">​</a></h2><h2 id="map、filter、some、every、reduce-内部是怎么实现的" tabindex="-1">map、filter、some、every、reduce 内部是怎么实现的 <a class="header-anchor" href="#map、filter、some、every、reduce-内部是怎么实现的" aria-label="Permalink to &quot;map、filter、some、every、reduce 内部是怎么实现的&quot;">​</a></h2>',9),n=[s];function i(h,c,l,u,d,f){return r(),a("div",null,n)}const q=e(o,[["render",i]]);export{m as __pageData,q as default};
