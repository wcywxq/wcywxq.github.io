import{_ as a,b as e,o as s,a8 as t}from"./chunks/framework.BwoOF8WG.js";const h=JSON.parse('{"title":"Canvas 和 Svg","description":"","frontmatter":{"title":"Canvas 和 Svg"},"headers":[],"relativePath":"material/endorsement/8.html/canvas-svg.md","filePath":"material/endorsement/8.html/canvas-svg.md"}'),l={name:"material/endorsement/8.html/canvas-svg.md"},i=t('<h2 id="canvas" tabindex="-1">Canvas <a class="header-anchor" href="#canvas" aria-label="Permalink to &quot;Canvas&quot;">​</a></h2><p>canvas 是画布，通过 js 来绘制 2D 图形，是逐像素进行渲染的，当其位置发生变化时，就会重新进行绘制。</p><p>canvas 的特点如下：</p><ol><li>依赖分辨率</li><li>不支持事件处理器</li><li>较弱的文本渲染能力</li><li>能够以 .png 或.jpg 的格式保存结果图像</li><li>最适合图像密集型游戏，其中许多对象会被频繁重新绘制</li></ol><p>矢量图也被称为面向对象的图像或绘图图像，在数学上定义为一系列由线连接的点。矢量文件中的图形元素称为对象，每个对象都是一个自称一体的实体，它具有颜色、形状、轮廓、大小和屏幕位置等属性</p><h2 id="svg" tabindex="-1">Svg <a class="header-anchor" href="#svg" aria-label="Permalink to &quot;Svg&quot;">​</a></h2><p>svg （Scalable Vector Graphics）是可缩放矢量图形，是基于可扩展标记语言 XML 描述的 2D 图形的语言，svg 基于 XML 就意味着 svg dom 中的每个元素都是可用的，可以为某个元素附加 js 事件处理器。在 svg 中，每个被绘制的图形均被视为对象。如果 svg 对象的属性发生变化，那么浏览器能够自动重现图形。</p><p>svg 的特点如下：</p><ol><li>不依赖分辨率</li><li>支持事件处理器</li><li>最适合带有大型渲染区域的应用程序（比如谷歌地图）</li><li>复杂度高会减慢渲染速度（任何过度使用 DOM 的应用程序速度都不是很快）</li><li>不适合游戏应用</li></ol>',9),n=[i];function o(r,c,v,_,p,d){return s(),e("div",null,n)}const g=a(l,[["render",o]]);export{h as __pageData,g as default};
