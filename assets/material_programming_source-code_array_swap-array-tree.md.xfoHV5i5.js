import{_ as s,b as i,o as a,a8 as n}from"./chunks/framework.BEMRIPir.js";const C=JSON.parse('{"title":"数组和树互转","description":"","frontmatter":{},"headers":[],"relativePath":"material/programming/source-code/array/swap-array-tree.md","filePath":"material/programming/source-code/array/swap-array-tree.md"}'),h={name:"material/programming/source-code/array/swap-array-tree.md"},l=n(`<h1 id="数组和树互转" tabindex="-1">数组和树互转 <a class="header-anchor" href="#数组和树互转" aria-label="Permalink to &quot;数组和树互转&quot;">​</a></h1><h2 id="树转数组" tabindex="-1">树转数组 <a class="header-anchor" href="#树转数组" aria-label="Permalink to &quot;树转数组&quot;">​</a></h2><p>对于给定的对象数组结构，描述的是一颗树的节点关系，要求实现一个函数，找出这颗树所有的链路，以二维数组形式输出。</p><ul><li>例如：</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes light-plus dark-plus vp-code" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;" tabindex="0"><code><span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">const</span><span style="--shiki-light:#0070C1;--shiki-dark:#4FC1FF;"> list</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> = [</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    { </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">id:</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;"> 6</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    { </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">id:</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;"> 2</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">children:</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> [</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">5</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">] },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    { </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">id:</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;"> 13</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    { </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">id:</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;"> 5</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">children:</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> [</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">10</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">11</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">] },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    { </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">id:</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;"> 1</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">children:</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> [</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">2</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">3</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">4</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">] },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    { </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">id:</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;"> 10</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    { </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">id:</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;"> 8</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">children:</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> [</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">13</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">] },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    { </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">id:</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;"> 4</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">children:</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> [</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">8</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">9</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">] },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    { </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">id:</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;"> 9</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    { </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">id:</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;"> 3</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">children:</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> [</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">6</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">7</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">] },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    { </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">id:</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;"> 11</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">children:</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> [</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">14</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">] },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    { </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">id:</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;"> 14</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    { </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">id:</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;"> 7</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">children:</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> [</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">12</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">] },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    { </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">id:</span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;"> 12</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> }</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><ul><li>输出：</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes light-plus dark-plus vp-code" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;" tabindex="0"><code><span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;">// [</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;">//   [ 1, 3, 6 ],</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;">//   [ 1, 4, 8, 13 ],</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;">//   [ 1, 2, 5, 10 ],</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;">//   [ 1, 4, 9 ],</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;">//   [ 1, 2, 5, 11, 14 ],</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;">//   [ 1, 3, 7, 12 ]</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;">// ]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li>实现：</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes light-plus dark-plus vp-code" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;" tabindex="0"><code><span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">function</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;"> parseArrToTree</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">arr</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">  const</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;"> dfs</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> = (</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">tree</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">path</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> = [], </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">res</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> = []) </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">=&gt;</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">    tree</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">forEach</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">node</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> =&gt;</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">      path</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">push</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">node</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">id</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">      node</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">children</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> &amp;&amp; </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">node</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">children</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">length</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        ? </span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">dfs</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">          node</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">children</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">map</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">id</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> =&gt;</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;"> arr</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">find</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">item</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> =&gt;</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;"> item</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">id</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> === </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">id</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">)),</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">          path</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">          res</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        )</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">        : </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">res</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">push</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">([...</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">path</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">])</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">      path</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">pop</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">()</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    })</span></span>
<span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#C586C0;">    return</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;"> res</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">  }</span></span>
<span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#C586C0;">  return</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;"> dfs</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">arr</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="数组转树" tabindex="-1">数组转树 <a class="header-anchor" href="#数组转树" aria-label="Permalink to &quot;数组转树&quot;">​</a></h2><p>将 flat 数组变成 tree 型结构</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes light-plus dark-plus vp-code" style="--shiki-light:#000000;--shiki-dark:#D4D4D4;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#1E1E1E;" tabindex="0"><code><span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;">/**</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;">* 将 flat 数组变成 tree 型结构</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;">* </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">@param</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;"> arr</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;">* </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">@param</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;"> isChild</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;">* </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">@param</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;"> customizer</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#6A9955;">*/</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">type</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> LoopTree</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">&lt;</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">T</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">&gt; = </span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">T</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> &amp; {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">  children</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">?: </span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">LoopTree</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">&lt;</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">T</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">&gt;[];</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">};</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">type</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> IsChildFunction</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">&lt;</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">T</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">&gt; = (</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">parentNode</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">T</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">childNode</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">T</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">=&gt;</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> boolean</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">type</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> IsChildConfig</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> = {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">  parentKey</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">string</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">  key</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">string</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">};</span></span>
<span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#C586C0;">export</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> function</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;"> array2tree</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">&lt;</span></span>
<span class="line"><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">  NodeValue</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> extends</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> { [</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">key</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">string</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">]: </span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">any</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> },</span></span>
<span class="line"><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">  CustomizerReturn</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">  ReadonlyNodeValue</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;"> extends</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> Readonly</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">&lt;</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">NodeValue</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">&gt;(</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">  arr</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">ReadonlyNodeValue</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">[],</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">  isChild</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">IsChildFunction</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">&lt;</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">ReadonlyNodeValue</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">&gt; | </span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">IsChildConfig</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">  customizer</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">?: (</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">node</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">ReadonlyNodeValue</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">=&gt;</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> CustomizerReturn</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">  const</span><span style="--shiki-light:#0070C1;--shiki-dark:#4FC1FF;"> root</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> = {} </span><span style="--shiki-light:#AF00DB;--shiki-dark:#C586C0;">as</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;"> ReadonlyNodeValue</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">  const</span><span style="--shiki-light:#0070C1;--shiki-dark:#4FC1FF;"> innerIsChildFunc</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">IsChildFunction</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">&lt;</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">ReadonlyNodeValue</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">&gt; =</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">    typeof</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;"> isChild</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> === </span><span style="--shiki-light:#A31515;--shiki-dark:#CE9178;">&quot;function&quot;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">      ? </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">isChild</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">      : (</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">pNode</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">node</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">=&gt;</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;"> pNode</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">[</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">isChild</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">key</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">] === </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">node</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">[</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">isChild</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">parentKey</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">];</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">  const</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;"> innerCustomizer</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> = (</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">node</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">ReadonlyNodeValue</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">    customizer</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> ? </span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">customizer</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">node</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">) : </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">node</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">  const</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;"> validateSelf</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> = (</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">node</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">ReadonlyNodeValue</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">=&gt;</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#C586C0;">    return</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;"> innerIsChildFunc</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">node</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">node</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">  };</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">  const</span><span style="--shiki-light:#0070C1;--shiki-dark:#4FC1FF;"> pushedFlag</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">Array</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">&lt;</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">boolean</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">&gt; = [];</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">  const</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;"> func</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> = (</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">    parent</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">ReadonlyNodeValue</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">    isRoot</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">boolean</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> = </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">true</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">  ): </span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">LoopTree</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">&lt;</span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">CustomizerReturn</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> | </span><span style="--shiki-light:#267F99;--shiki-dark:#4EC9B0;">NodeValue</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">&gt; </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">=&gt;</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">    const</span><span style="--shiki-light:#0070C1;--shiki-dark:#4FC1FF;"> node</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> = [];</span></span>
<span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#C586C0;">    for</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> (</span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">let</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;"> i</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> = </span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">0</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">; </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">i</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> &lt; </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">arr</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">length</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">; </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">i</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">++) {</span></span>
<span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#C586C0;">      if</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> (!</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">isRoot</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> &amp;&amp; </span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">validateSelf</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">parent</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">)) </span><span style="--shiki-light:#AF00DB;--shiki-dark:#C586C0;">break</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#C586C0;">      if</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> (</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">pushedFlag</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">[</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">i</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">]) </span><span style="--shiki-light:#AF00DB;--shiki-dark:#C586C0;">continue</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">      const</span><span style="--shiki-light:#0070C1;--shiki-dark:#4FC1FF;"> item</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> = </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">arr</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">[</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">i</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">];</span></span>
<span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#C586C0;">      if</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> (</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">innerIsChildFunc</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">parent</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">item</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">)) {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">        pushedFlag</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">[</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">i</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">] = </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">true</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">        const</span><span style="--shiki-light:#0070C1;--shiki-dark:#4FC1FF;"> child</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> = </span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">func</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">item</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">false</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">        node</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">push</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">child</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">      }</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#C586C0;">    return</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">      ...</span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">innerCustomizer</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">parent</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">),</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">      children:</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;"> node</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">length</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> &gt; </span><span style="--shiki-light:#098658;--shiki-dark:#B5CEA8;">0</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> ? </span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">node</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> : </span><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">undefined</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">    };</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">  };</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#569CD6;">  const</span><span style="--shiki-light:#0070C1;--shiki-dark:#4FC1FF;"> result</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> = </span><span style="--shiki-light:#795E26;--shiki-dark:#DCDCAA;">func</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">root</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#C586C0;">  return</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;"> result</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#001080;--shiki-dark:#9CDCFE;">children</span><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;"> || [];</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D4D4D4;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br></div></div>`,12),k=[l];function p(t,e,D,r,d,g){return a(),i("div",null,k)}const c=s(h,[["render",p]]);export{C as __pageData,c as default};
