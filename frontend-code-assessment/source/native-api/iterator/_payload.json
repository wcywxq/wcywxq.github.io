[{"data":1,"prerenderedAt":1486},["Reactive",2],{"navigation":3,"/frontend-code-assessment/source/native-api/iterator":430,"/frontend-code-assessment/source/native-api/iterator-surround":1482},[4,237,265,409,416],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,402],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396,399],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":379,"_path":380},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":382,"_path":383},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":385,"_path":386},"随机数","/frontend-code-assessment/scene/random-number",{"title":388,"_path":389},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":391,"_path":392},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":394,"_path":395},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":397,"_path":398},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":400,"_path":401},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":403,"_path":404,"children":405},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[406],{"title":407,"_path":408},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":410,"_path":411,"children":412},"项目","/pro",[413],{"title":414,"_path":415},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":417,"_path":418,"children":419},"后端语言","/backend-languages",[420],{"title":421,"_path":422,"children":423},"Python","/backend-languages/python",[424,427],{"title":425,"_path":426},"基础","/backend-languages/python/base",{"title":428,"_path":429},"函数","/backend-languages/python/function",{"_path":297,"_dir":431,"_draft":432,"_partial":432,"_locale":433,"title":296,"description":433,"body":434,"_type":1477,"_id":1478,"_source":1479,"_file":1480,"_extension":1481},"native-api",false,"",{"type":435,"children":436,"toc":1473},"root",[437,445,953,958,1467],{"type":438,"tag":439,"props":440,"children":442},"element","h2",{"id":441},"实现迭代器函数",[443],{"type":444,"value":441},"text",{"type":438,"tag":446,"props":447,"children":451},"pre",{"className":448,"code":449,"language":450,"meta":433,"style":433},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/*\n * 这是一个手写的迭代器(Iterator)\n * 满足迭代器协议的对象。\n * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n */\nvar it = makeIterator([\"a\", \"b\"]);\n\nit.next(); // { value: \"a\", done: false }\nit.next(); // { value: \"b\", done: false }\nit.next(); // { value: undefined, done: true }\n\nfunction makeIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n  };\n}\n","js",[452],{"type":438,"tag":453,"props":454,"children":455},"code",{"__ignoreMap":433},[456,468,477,486,495,504,565,575,610,639,668,676,705,733,748,772,804,869,917,931,944],{"type":438,"tag":457,"props":458,"children":461},"span",{"class":459,"line":460},"line",1,[462],{"type":438,"tag":457,"props":463,"children":465},{"style":464},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[466],{"type":444,"value":467},"/*\n",{"type":438,"tag":457,"props":469,"children":471},{"class":459,"line":470},2,[472],{"type":438,"tag":457,"props":473,"children":474},{"style":464},[475],{"type":444,"value":476}," * 这是一个手写的迭代器(Iterator)\n",{"type":438,"tag":457,"props":478,"children":480},{"class":459,"line":479},3,[481],{"type":438,"tag":457,"props":482,"children":483},{"style":464},[484],{"type":444,"value":485}," * 满足迭代器协议的对象。\n",{"type":438,"tag":457,"props":487,"children":489},{"class":459,"line":488},4,[490],{"type":438,"tag":457,"props":491,"children":492},{"style":464},[493],{"type":444,"value":494}," * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n",{"type":438,"tag":457,"props":496,"children":498},{"class":459,"line":497},5,[499],{"type":438,"tag":457,"props":500,"children":501},{"style":464},[502],{"type":444,"value":503}," */\n",{"type":438,"tag":457,"props":505,"children":507},{"class":459,"line":506},6,[508,514,520,526,532,538,544,550,555,560],{"type":438,"tag":457,"props":509,"children":511},{"style":510},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[512],{"type":444,"value":513},"var",{"type":438,"tag":457,"props":515,"children":517},{"style":516},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[518],{"type":444,"value":519}," it",{"type":438,"tag":457,"props":521,"children":523},{"style":522},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[524],{"type":444,"value":525}," =",{"type":438,"tag":457,"props":527,"children":529},{"style":528},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[530],{"type":444,"value":531}," makeIterator",{"type":438,"tag":457,"props":533,"children":535},{"style":534},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[536],{"type":444,"value":537},"([",{"type":438,"tag":457,"props":539,"children":541},{"style":540},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[542],{"type":444,"value":543},"\"a\"",{"type":438,"tag":457,"props":545,"children":547},{"style":546},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[548],{"type":444,"value":549},",",{"type":438,"tag":457,"props":551,"children":552},{"style":540},[553],{"type":444,"value":554}," \"b\"",{"type":438,"tag":457,"props":556,"children":557},{"style":534},[558],{"type":444,"value":559},"])",{"type":438,"tag":457,"props":561,"children":562},{"style":546},[563],{"type":444,"value":564},";\n",{"type":438,"tag":457,"props":566,"children":568},{"class":459,"line":567},7,[569],{"type":438,"tag":457,"props":570,"children":572},{"emptyLinePlaceholder":571},true,[573],{"type":444,"value":574},"\n",{"type":438,"tag":457,"props":576,"children":578},{"class":459,"line":577},8,[579,584,590,595,600,605],{"type":438,"tag":457,"props":580,"children":581},{"style":516},[582],{"type":444,"value":583},"it",{"type":438,"tag":457,"props":585,"children":587},{"style":586},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[588],{"type":444,"value":589},".",{"type":438,"tag":457,"props":591,"children":592},{"style":528},[593],{"type":444,"value":594},"next",{"type":438,"tag":457,"props":596,"children":597},{"style":534},[598],{"type":444,"value":599},"()",{"type":438,"tag":457,"props":601,"children":602},{"style":546},[603],{"type":444,"value":604},";",{"type":438,"tag":457,"props":606,"children":607},{"style":464},[608],{"type":444,"value":609}," // { value: \"a\", done: false }\n",{"type":438,"tag":457,"props":611,"children":613},{"class":459,"line":612},9,[614,618,622,626,630,634],{"type":438,"tag":457,"props":615,"children":616},{"style":516},[617],{"type":444,"value":583},{"type":438,"tag":457,"props":619,"children":620},{"style":586},[621],{"type":444,"value":589},{"type":438,"tag":457,"props":623,"children":624},{"style":528},[625],{"type":444,"value":594},{"type":438,"tag":457,"props":627,"children":628},{"style":534},[629],{"type":444,"value":599},{"type":438,"tag":457,"props":631,"children":632},{"style":546},[633],{"type":444,"value":604},{"type":438,"tag":457,"props":635,"children":636},{"style":464},[637],{"type":444,"value":638}," // { value: \"b\", done: false }\n",{"type":438,"tag":457,"props":640,"children":642},{"class":459,"line":641},10,[643,647,651,655,659,663],{"type":438,"tag":457,"props":644,"children":645},{"style":516},[646],{"type":444,"value":583},{"type":438,"tag":457,"props":648,"children":649},{"style":586},[650],{"type":444,"value":589},{"type":438,"tag":457,"props":652,"children":653},{"style":528},[654],{"type":444,"value":594},{"type":438,"tag":457,"props":656,"children":657},{"style":534},[658],{"type":444,"value":599},{"type":438,"tag":457,"props":660,"children":661},{"style":546},[662],{"type":444,"value":604},{"type":438,"tag":457,"props":664,"children":665},{"style":464},[666],{"type":444,"value":667}," // { value: undefined, done: true }\n",{"type":438,"tag":457,"props":669,"children":671},{"class":459,"line":670},11,[672],{"type":438,"tag":457,"props":673,"children":674},{"emptyLinePlaceholder":571},[675],{"type":444,"value":574},{"type":438,"tag":457,"props":677,"children":679},{"class":459,"line":678},12,[680,685,689,694,700],{"type":438,"tag":457,"props":681,"children":682},{"style":510},[683],{"type":444,"value":684},"function",{"type":438,"tag":457,"props":686,"children":687},{"style":528},[688],{"type":444,"value":531},{"type":438,"tag":457,"props":690,"children":691},{"style":534},[692],{"type":444,"value":693},"(",{"type":438,"tag":457,"props":695,"children":697},{"style":696},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[698],{"type":444,"value":699},"array",{"type":438,"tag":457,"props":701,"children":702},{"style":534},[703],{"type":444,"value":704},") {\n",{"type":438,"tag":457,"props":706,"children":708},{"class":459,"line":707},13,[709,714,719,723,729],{"type":438,"tag":457,"props":710,"children":711},{"style":510},[712],{"type":444,"value":713},"  var",{"type":438,"tag":457,"props":715,"children":716},{"style":516},[717],{"type":444,"value":718}," nextIndex",{"type":438,"tag":457,"props":720,"children":721},{"style":522},[722],{"type":444,"value":525},{"type":438,"tag":457,"props":724,"children":726},{"style":725},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[727],{"type":444,"value":728}," 0",{"type":438,"tag":457,"props":730,"children":731},{"style":546},[732],{"type":444,"value":564},{"type":438,"tag":457,"props":734,"children":736},{"class":459,"line":735},14,[737,743],{"type":438,"tag":457,"props":738,"children":740},{"style":739},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[741],{"type":444,"value":742},"  return",{"type":438,"tag":457,"props":744,"children":745},{"style":534},[746],{"type":444,"value":747}," {\n",{"type":438,"tag":457,"props":749,"children":751},{"class":459,"line":750},15,[752,757,762,767],{"type":438,"tag":457,"props":753,"children":754},{"style":528},[755],{"type":444,"value":756},"    next",{"type":438,"tag":457,"props":758,"children":759},{"style":546},[760],{"type":444,"value":761},":",{"type":438,"tag":457,"props":763,"children":764},{"style":510},[765],{"type":444,"value":766}," function",{"type":438,"tag":457,"props":768,"children":769},{"style":534},[770],{"type":444,"value":771}," () {\n",{"type":438,"tag":457,"props":773,"children":775},{"class":459,"line":774},16,[776,781,785,790,795,799],{"type":438,"tag":457,"props":777,"children":778},{"style":739},[779],{"type":444,"value":780},"      return",{"type":438,"tag":457,"props":782,"children":783},{"style":516},[784],{"type":444,"value":718},{"type":438,"tag":457,"props":786,"children":787},{"style":522},[788],{"type":444,"value":789}," \u003C",{"type":438,"tag":457,"props":791,"children":792},{"style":516},[793],{"type":444,"value":794}," array",{"type":438,"tag":457,"props":796,"children":797},{"style":586},[798],{"type":444,"value":589},{"type":438,"tag":457,"props":800,"children":801},{"style":534},[802],{"type":444,"value":803},"length\n",{"type":438,"tag":457,"props":805,"children":807},{"class":459,"line":806},17,[808,813,818,822,826,831,836,841,846,850,855,859,864],{"type":438,"tag":457,"props":809,"children":810},{"style":522},[811],{"type":444,"value":812},"        ?",{"type":438,"tag":457,"props":814,"children":815},{"style":534},[816],{"type":444,"value":817}," { value",{"type":438,"tag":457,"props":819,"children":820},{"style":546},[821],{"type":444,"value":761},{"type":438,"tag":457,"props":823,"children":824},{"style":516},[825],{"type":444,"value":794},{"type":438,"tag":457,"props":827,"children":828},{"style":534},[829],{"type":444,"value":830},"[",{"type":438,"tag":457,"props":832,"children":833},{"style":516},[834],{"type":444,"value":835},"nextIndex",{"type":438,"tag":457,"props":837,"children":838},{"style":522},[839],{"type":444,"value":840},"++",{"type":438,"tag":457,"props":842,"children":843},{"style":534},[844],{"type":444,"value":845},"]",{"type":438,"tag":457,"props":847,"children":848},{"style":546},[849],{"type":444,"value":549},{"type":438,"tag":457,"props":851,"children":852},{"style":534},[853],{"type":444,"value":854}," done",{"type":438,"tag":457,"props":856,"children":857},{"style":546},[858],{"type":444,"value":761},{"type":438,"tag":457,"props":860,"children":861},{"style":725},[862],{"type":444,"value":863}," false",{"type":438,"tag":457,"props":865,"children":866},{"style":534},[867],{"type":444,"value":868}," }\n",{"type":438,"tag":457,"props":870,"children":872},{"class":459,"line":871},18,[873,878,882,886,891,895,899,903,908,913],{"type":438,"tag":457,"props":874,"children":875},{"style":522},[876],{"type":444,"value":877},"        :",{"type":438,"tag":457,"props":879,"children":880},{"style":534},[881],{"type":444,"value":817},{"type":438,"tag":457,"props":883,"children":884},{"style":546},[885],{"type":444,"value":761},{"type":438,"tag":457,"props":887,"children":888},{"style":725},[889],{"type":444,"value":890}," undefined",{"type":438,"tag":457,"props":892,"children":893},{"style":546},[894],{"type":444,"value":549},{"type":438,"tag":457,"props":896,"children":897},{"style":534},[898],{"type":444,"value":854},{"type":438,"tag":457,"props":900,"children":901},{"style":546},[902],{"type":444,"value":761},{"type":438,"tag":457,"props":904,"children":905},{"style":725},[906],{"type":444,"value":907}," true",{"type":438,"tag":457,"props":909,"children":910},{"style":534},[911],{"type":444,"value":912}," }",{"type":438,"tag":457,"props":914,"children":915},{"style":546},[916],{"type":444,"value":564},{"type":438,"tag":457,"props":918,"children":920},{"class":459,"line":919},19,[921,926],{"type":438,"tag":457,"props":922,"children":923},{"style":534},[924],{"type":444,"value":925},"    }",{"type":438,"tag":457,"props":927,"children":928},{"style":546},[929],{"type":444,"value":930},",\n",{"type":438,"tag":457,"props":932,"children":934},{"class":459,"line":933},20,[935,940],{"type":438,"tag":457,"props":936,"children":937},{"style":534},[938],{"type":444,"value":939},"  }",{"type":438,"tag":457,"props":941,"children":942},{"style":546},[943],{"type":444,"value":564},{"type":438,"tag":457,"props":945,"children":947},{"class":459,"line":946},21,[948],{"type":438,"tag":457,"props":949,"children":950},{"style":534},[951],{"type":444,"value":952},"}\n",{"type":438,"tag":439,"props":954,"children":956},{"id":955},"可迭代的迭代器",[957],{"type":444,"value":955},{"type":438,"tag":446,"props":959,"children":961},{"className":448,"code":960,"language":450,"meta":433,"style":433},"/**\n * 使迭代器可迭代\n * makeIterator 函数生成的迭代器并没有实现可迭代协议\n * 所以不能在 for...of 等语法中使用。\n * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n * 从新名了下函数名称 createIterator\n */\nfunction createIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n    [Symbol.iterator]: function () {\n      console.log(\"返回的迭代器:\", this);\n      return this; // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n    },\n  };\n}\n\nvar iterator = createIterator([1, 2, 3]);\nconsole.log(...iterator);\n",[962],{"type":438,"tag":453,"props":963,"children":964},{"__ignoreMap":433},[965,973,981,989,997,1005,1013,1020,1044,1067,1078,1097,1124,1179,1222,1233,1271,1316,1336,1347,1358,1365,1373,1429],{"type":438,"tag":457,"props":966,"children":967},{"class":459,"line":460},[968],{"type":438,"tag":457,"props":969,"children":970},{"style":464},[971],{"type":444,"value":972},"/**\n",{"type":438,"tag":457,"props":974,"children":975},{"class":459,"line":470},[976],{"type":438,"tag":457,"props":977,"children":978},{"style":464},[979],{"type":444,"value":980}," * 使迭代器可迭代\n",{"type":438,"tag":457,"props":982,"children":983},{"class":459,"line":479},[984],{"type":438,"tag":457,"props":985,"children":986},{"style":464},[987],{"type":444,"value":988}," * makeIterator 函数生成的迭代器并没有实现可迭代协议\n",{"type":438,"tag":457,"props":990,"children":991},{"class":459,"line":488},[992],{"type":438,"tag":457,"props":993,"children":994},{"style":464},[995],{"type":444,"value":996}," * 所以不能在 for...of 等语法中使用。\n",{"type":438,"tag":457,"props":998,"children":999},{"class":459,"line":497},[1000],{"type":438,"tag":457,"props":1001,"children":1002},{"style":464},[1003],{"type":444,"value":1004}," * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n",{"type":438,"tag":457,"props":1006,"children":1007},{"class":459,"line":506},[1008],{"type":438,"tag":457,"props":1009,"children":1010},{"style":464},[1011],{"type":444,"value":1012}," * 从新名了下函数名称 createIterator\n",{"type":438,"tag":457,"props":1014,"children":1015},{"class":459,"line":567},[1016],{"type":438,"tag":457,"props":1017,"children":1018},{"style":464},[1019],{"type":444,"value":503},{"type":438,"tag":457,"props":1021,"children":1022},{"class":459,"line":577},[1023,1027,1032,1036,1040],{"type":438,"tag":457,"props":1024,"children":1025},{"style":510},[1026],{"type":444,"value":684},{"type":438,"tag":457,"props":1028,"children":1029},{"style":528},[1030],{"type":444,"value":1031}," createIterator",{"type":438,"tag":457,"props":1033,"children":1034},{"style":534},[1035],{"type":444,"value":693},{"type":438,"tag":457,"props":1037,"children":1038},{"style":696},[1039],{"type":444,"value":699},{"type":438,"tag":457,"props":1041,"children":1042},{"style":534},[1043],{"type":444,"value":704},{"type":438,"tag":457,"props":1045,"children":1046},{"class":459,"line":612},[1047,1051,1055,1059,1063],{"type":438,"tag":457,"props":1048,"children":1049},{"style":510},[1050],{"type":444,"value":713},{"type":438,"tag":457,"props":1052,"children":1053},{"style":516},[1054],{"type":444,"value":718},{"type":438,"tag":457,"props":1056,"children":1057},{"style":522},[1058],{"type":444,"value":525},{"type":438,"tag":457,"props":1060,"children":1061},{"style":725},[1062],{"type":444,"value":728},{"type":438,"tag":457,"props":1064,"children":1065},{"style":546},[1066],{"type":444,"value":564},{"type":438,"tag":457,"props":1068,"children":1069},{"class":459,"line":641},[1070,1074],{"type":438,"tag":457,"props":1071,"children":1072},{"style":739},[1073],{"type":444,"value":742},{"type":438,"tag":457,"props":1075,"children":1076},{"style":534},[1077],{"type":444,"value":747},{"type":438,"tag":457,"props":1079,"children":1080},{"class":459,"line":670},[1081,1085,1089,1093],{"type":438,"tag":457,"props":1082,"children":1083},{"style":528},[1084],{"type":444,"value":756},{"type":438,"tag":457,"props":1086,"children":1087},{"style":546},[1088],{"type":444,"value":761},{"type":438,"tag":457,"props":1090,"children":1091},{"style":510},[1092],{"type":444,"value":766},{"type":438,"tag":457,"props":1094,"children":1095},{"style":534},[1096],{"type":444,"value":771},{"type":438,"tag":457,"props":1098,"children":1099},{"class":459,"line":678},[1100,1104,1108,1112,1116,1120],{"type":438,"tag":457,"props":1101,"children":1102},{"style":739},[1103],{"type":444,"value":780},{"type":438,"tag":457,"props":1105,"children":1106},{"style":516},[1107],{"type":444,"value":718},{"type":438,"tag":457,"props":1109,"children":1110},{"style":522},[1111],{"type":444,"value":789},{"type":438,"tag":457,"props":1113,"children":1114},{"style":516},[1115],{"type":444,"value":794},{"type":438,"tag":457,"props":1117,"children":1118},{"style":586},[1119],{"type":444,"value":589},{"type":438,"tag":457,"props":1121,"children":1122},{"style":534},[1123],{"type":444,"value":803},{"type":438,"tag":457,"props":1125,"children":1126},{"class":459,"line":707},[1127,1131,1135,1139,1143,1147,1151,1155,1159,1163,1167,1171,1175],{"type":438,"tag":457,"props":1128,"children":1129},{"style":522},[1130],{"type":444,"value":812},{"type":438,"tag":457,"props":1132,"children":1133},{"style":534},[1134],{"type":444,"value":817},{"type":438,"tag":457,"props":1136,"children":1137},{"style":546},[1138],{"type":444,"value":761},{"type":438,"tag":457,"props":1140,"children":1141},{"style":516},[1142],{"type":444,"value":794},{"type":438,"tag":457,"props":1144,"children":1145},{"style":534},[1146],{"type":444,"value":830},{"type":438,"tag":457,"props":1148,"children":1149},{"style":516},[1150],{"type":444,"value":835},{"type":438,"tag":457,"props":1152,"children":1153},{"style":522},[1154],{"type":444,"value":840},{"type":438,"tag":457,"props":1156,"children":1157},{"style":534},[1158],{"type":444,"value":845},{"type":438,"tag":457,"props":1160,"children":1161},{"style":546},[1162],{"type":444,"value":549},{"type":438,"tag":457,"props":1164,"children":1165},{"style":534},[1166],{"type":444,"value":854},{"type":438,"tag":457,"props":1168,"children":1169},{"style":546},[1170],{"type":444,"value":761},{"type":438,"tag":457,"props":1172,"children":1173},{"style":725},[1174],{"type":444,"value":863},{"type":438,"tag":457,"props":1176,"children":1177},{"style":534},[1178],{"type":444,"value":868},{"type":438,"tag":457,"props":1180,"children":1181},{"class":459,"line":735},[1182,1186,1190,1194,1198,1202,1206,1210,1214,1218],{"type":438,"tag":457,"props":1183,"children":1184},{"style":522},[1185],{"type":444,"value":877},{"type":438,"tag":457,"props":1187,"children":1188},{"style":534},[1189],{"type":444,"value":817},{"type":438,"tag":457,"props":1191,"children":1192},{"style":546},[1193],{"type":444,"value":761},{"type":438,"tag":457,"props":1195,"children":1196},{"style":725},[1197],{"type":444,"value":890},{"type":438,"tag":457,"props":1199,"children":1200},{"style":546},[1201],{"type":444,"value":549},{"type":438,"tag":457,"props":1203,"children":1204},{"style":534},[1205],{"type":444,"value":854},{"type":438,"tag":457,"props":1207,"children":1208},{"style":546},[1209],{"type":444,"value":761},{"type":438,"tag":457,"props":1211,"children":1212},{"style":725},[1213],{"type":444,"value":907},{"type":438,"tag":457,"props":1215,"children":1216},{"style":534},[1217],{"type":444,"value":912},{"type":438,"tag":457,"props":1219,"children":1220},{"style":546},[1221],{"type":444,"value":564},{"type":438,"tag":457,"props":1223,"children":1224},{"class":459,"line":750},[1225,1229],{"type":438,"tag":457,"props":1226,"children":1227},{"style":534},[1228],{"type":444,"value":925},{"type":438,"tag":457,"props":1230,"children":1231},{"style":546},[1232],{"type":444,"value":930},{"type":438,"tag":457,"props":1234,"children":1235},{"class":459,"line":774},[1236,1241,1246,1250,1255,1259,1263,1267],{"type":438,"tag":457,"props":1237,"children":1238},{"style":534},[1239],{"type":444,"value":1240},"    [",{"type":438,"tag":457,"props":1242,"children":1243},{"style":516},[1244],{"type":444,"value":1245},"Symbol",{"type":438,"tag":457,"props":1247,"children":1248},{"style":586},[1249],{"type":444,"value":589},{"type":438,"tag":457,"props":1251,"children":1252},{"style":516},[1253],{"type":444,"value":1254},"iterator",{"type":438,"tag":457,"props":1256,"children":1257},{"style":534},[1258],{"type":444,"value":845},{"type":438,"tag":457,"props":1260,"children":1261},{"style":546},[1262],{"type":444,"value":761},{"type":438,"tag":457,"props":1264,"children":1265},{"style":510},[1266],{"type":444,"value":766},{"type":438,"tag":457,"props":1268,"children":1269},{"style":534},[1270],{"type":444,"value":771},{"type":438,"tag":457,"props":1272,"children":1273},{"class":459,"line":806},[1274,1279,1283,1288,1292,1297,1301,1307,1312],{"type":438,"tag":457,"props":1275,"children":1276},{"style":516},[1277],{"type":444,"value":1278},"      console",{"type":438,"tag":457,"props":1280,"children":1281},{"style":586},[1282],{"type":444,"value":589},{"type":438,"tag":457,"props":1284,"children":1285},{"style":528},[1286],{"type":444,"value":1287},"log",{"type":438,"tag":457,"props":1289,"children":1290},{"style":534},[1291],{"type":444,"value":693},{"type":438,"tag":457,"props":1293,"children":1294},{"style":540},[1295],{"type":444,"value":1296},"\"返回的迭代器:\"",{"type":438,"tag":457,"props":1298,"children":1299},{"style":546},[1300],{"type":444,"value":549},{"type":438,"tag":457,"props":1302,"children":1304},{"style":1303},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[1305],{"type":444,"value":1306}," this",{"type":438,"tag":457,"props":1308,"children":1309},{"style":534},[1310],{"type":444,"value":1311},")",{"type":438,"tag":457,"props":1313,"children":1314},{"style":546},[1315],{"type":444,"value":564},{"type":438,"tag":457,"props":1317,"children":1318},{"class":459,"line":871},[1319,1323,1327,1331],{"type":438,"tag":457,"props":1320,"children":1321},{"style":739},[1322],{"type":444,"value":780},{"type":438,"tag":457,"props":1324,"children":1325},{"style":1303},[1326],{"type":444,"value":1306},{"type":438,"tag":457,"props":1328,"children":1329},{"style":546},[1330],{"type":444,"value":604},{"type":438,"tag":457,"props":1332,"children":1333},{"style":464},[1334],{"type":444,"value":1335}," // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n",{"type":438,"tag":457,"props":1337,"children":1338},{"class":459,"line":919},[1339,1343],{"type":438,"tag":457,"props":1340,"children":1341},{"style":534},[1342],{"type":444,"value":925},{"type":438,"tag":457,"props":1344,"children":1345},{"style":546},[1346],{"type":444,"value":930},{"type":438,"tag":457,"props":1348,"children":1349},{"class":459,"line":933},[1350,1354],{"type":438,"tag":457,"props":1351,"children":1352},{"style":534},[1353],{"type":444,"value":939},{"type":438,"tag":457,"props":1355,"children":1356},{"style":546},[1357],{"type":444,"value":564},{"type":438,"tag":457,"props":1359,"children":1360},{"class":459,"line":946},[1361],{"type":438,"tag":457,"props":1362,"children":1363},{"style":534},[1364],{"type":444,"value":952},{"type":438,"tag":457,"props":1366,"children":1368},{"class":459,"line":1367},22,[1369],{"type":438,"tag":457,"props":1370,"children":1371},{"emptyLinePlaceholder":571},[1372],{"type":444,"value":574},{"type":438,"tag":457,"props":1374,"children":1376},{"class":459,"line":1375},23,[1377,1381,1386,1390,1394,1398,1403,1407,1412,1416,1421,1425],{"type":438,"tag":457,"props":1378,"children":1379},{"style":510},[1380],{"type":444,"value":513},{"type":438,"tag":457,"props":1382,"children":1383},{"style":516},[1384],{"type":444,"value":1385}," iterator",{"type":438,"tag":457,"props":1387,"children":1388},{"style":522},[1389],{"type":444,"value":525},{"type":438,"tag":457,"props":1391,"children":1392},{"style":528},[1393],{"type":444,"value":1031},{"type":438,"tag":457,"props":1395,"children":1396},{"style":534},[1397],{"type":444,"value":537},{"type":438,"tag":457,"props":1399,"children":1400},{"style":725},[1401],{"type":444,"value":1402},"1",{"type":438,"tag":457,"props":1404,"children":1405},{"style":546},[1406],{"type":444,"value":549},{"type":438,"tag":457,"props":1408,"children":1409},{"style":725},[1410],{"type":444,"value":1411}," 2",{"type":438,"tag":457,"props":1413,"children":1414},{"style":546},[1415],{"type":444,"value":549},{"type":438,"tag":457,"props":1417,"children":1418},{"style":725},[1419],{"type":444,"value":1420}," 3",{"type":438,"tag":457,"props":1422,"children":1423},{"style":534},[1424],{"type":444,"value":559},{"type":438,"tag":457,"props":1426,"children":1427},{"style":546},[1428],{"type":444,"value":564},{"type":438,"tag":457,"props":1430,"children":1432},{"class":459,"line":1431},24,[1433,1438,1442,1446,1450,1455,1459,1463],{"type":438,"tag":457,"props":1434,"children":1435},{"style":516},[1436],{"type":444,"value":1437},"console",{"type":438,"tag":457,"props":1439,"children":1440},{"style":586},[1441],{"type":444,"value":589},{"type":438,"tag":457,"props":1443,"children":1444},{"style":528},[1445],{"type":444,"value":1287},{"type":438,"tag":457,"props":1447,"children":1448},{"style":534},[1449],{"type":444,"value":693},{"type":438,"tag":457,"props":1451,"children":1452},{"style":522},[1453],{"type":444,"value":1454},"...",{"type":438,"tag":457,"props":1456,"children":1457},{"style":516},[1458],{"type":444,"value":1254},{"type":438,"tag":457,"props":1460,"children":1461},{"style":534},[1462],{"type":444,"value":1311},{"type":438,"tag":457,"props":1464,"children":1465},{"style":546},[1466],{"type":444,"value":564},{"type":438,"tag":1468,"props":1469,"children":1470},"style",{},[1471],{"type":444,"value":1472},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":433,"searchDepth":497,"depth":497,"links":1474},[1475,1476],{"id":441,"depth":470,"text":441},{"id":955,"depth":470,"text":955},"markdown","content:3.frontend-code-assessment:1.source:1.native-api:7.iterator.md","content","3.frontend-code-assessment/1.source/1.native-api/7.iterator.md","md",[1483,1485],{"_path":294,"title":293,"description":1484},"JSON.stringify() 方法将一个 js 对象或值转换为 json 字符串，如果指定了一个 replacer 函数，则可以选择性地替换值，或者指定的 replacer 是数组，则可选择性地仅包含数组指定的属性。",{"_path":304,"title":303,"description":433},1713426817247]