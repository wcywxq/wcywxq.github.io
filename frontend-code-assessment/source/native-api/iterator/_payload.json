[{"data":1,"prerenderedAt":1480},["Reactive",2],{"navigation":3,"/frontend-code-assessment/source/native-api/iterator":424,"/frontend-code-assessment/source/native-api/iterator-surround":1476},[4,237,265,403,410],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,396],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"随机数","/frontend-code-assessment/scene/random-number",{"title":382,"_path":383},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":385,"_path":386},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":388,"_path":389},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":391,"_path":392},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":394,"_path":395},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":397,"_path":398,"children":399},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[400],{"title":401,"_path":402},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":404,"_path":405,"children":406},"项目","/pro",[407],{"title":408,"_path":409},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":411,"_path":412,"children":413},"后端语言","/backend-languages",[414],{"title":415,"_path":416,"children":417},"Python","/backend-languages/python",[418,421],{"title":419,"_path":420},"基础","/backend-languages/python/base",{"title":422,"_path":423},"函数","/backend-languages/python/function",{"_path":297,"_dir":425,"_draft":426,"_partial":426,"_locale":427,"title":296,"description":427,"body":428,"_type":1471,"_id":1472,"_source":1473,"_file":1474,"_extension":1475},"native-api",false,"",{"type":429,"children":430,"toc":1467},"root",[431,439,947,952,1461],{"type":432,"tag":433,"props":434,"children":436},"element","h2",{"id":435},"实现迭代器函数",[437],{"type":438,"value":435},"text",{"type":432,"tag":440,"props":441,"children":445},"pre",{"className":442,"code":443,"language":444,"meta":427,"style":427},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/*\n * 这是一个手写的迭代器(Iterator)\n * 满足迭代器协议的对象。\n * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n */\nvar it = makeIterator([\"a\", \"b\"]);\n\nit.next(); // { value: \"a\", done: false }\nit.next(); // { value: \"b\", done: false }\nit.next(); // { value: undefined, done: true }\n\nfunction makeIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n  };\n}\n","js",[446],{"type":432,"tag":447,"props":448,"children":449},"code",{"__ignoreMap":427},[450,462,471,480,489,498,559,569,604,633,662,670,699,727,742,766,798,863,911,925,938],{"type":432,"tag":451,"props":452,"children":455},"span",{"class":453,"line":454},"line",1,[456],{"type":432,"tag":451,"props":457,"children":459},{"style":458},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[460],{"type":438,"value":461},"/*\n",{"type":432,"tag":451,"props":463,"children":465},{"class":453,"line":464},2,[466],{"type":432,"tag":451,"props":467,"children":468},{"style":458},[469],{"type":438,"value":470}," * 这是一个手写的迭代器(Iterator)\n",{"type":432,"tag":451,"props":472,"children":474},{"class":453,"line":473},3,[475],{"type":432,"tag":451,"props":476,"children":477},{"style":458},[478],{"type":438,"value":479}," * 满足迭代器协议的对象。\n",{"type":432,"tag":451,"props":481,"children":483},{"class":453,"line":482},4,[484],{"type":432,"tag":451,"props":485,"children":486},{"style":458},[487],{"type":438,"value":488}," * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n",{"type":432,"tag":451,"props":490,"children":492},{"class":453,"line":491},5,[493],{"type":432,"tag":451,"props":494,"children":495},{"style":458},[496],{"type":438,"value":497}," */\n",{"type":432,"tag":451,"props":499,"children":501},{"class":453,"line":500},6,[502,508,514,520,526,532,538,544,549,554],{"type":432,"tag":451,"props":503,"children":505},{"style":504},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[506],{"type":438,"value":507},"var",{"type":432,"tag":451,"props":509,"children":511},{"style":510},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[512],{"type":438,"value":513}," it",{"type":432,"tag":451,"props":515,"children":517},{"style":516},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[518],{"type":438,"value":519}," =",{"type":432,"tag":451,"props":521,"children":523},{"style":522},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[524],{"type":438,"value":525}," makeIterator",{"type":432,"tag":451,"props":527,"children":529},{"style":528},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[530],{"type":438,"value":531},"([",{"type":432,"tag":451,"props":533,"children":535},{"style":534},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[536],{"type":438,"value":537},"\"a\"",{"type":432,"tag":451,"props":539,"children":541},{"style":540},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[542],{"type":438,"value":543},",",{"type":432,"tag":451,"props":545,"children":546},{"style":534},[547],{"type":438,"value":548}," \"b\"",{"type":432,"tag":451,"props":550,"children":551},{"style":528},[552],{"type":438,"value":553},"])",{"type":432,"tag":451,"props":555,"children":556},{"style":540},[557],{"type":438,"value":558},";\n",{"type":432,"tag":451,"props":560,"children":562},{"class":453,"line":561},7,[563],{"type":432,"tag":451,"props":564,"children":566},{"emptyLinePlaceholder":565},true,[567],{"type":438,"value":568},"\n",{"type":432,"tag":451,"props":570,"children":572},{"class":453,"line":571},8,[573,578,584,589,594,599],{"type":432,"tag":451,"props":574,"children":575},{"style":510},[576],{"type":438,"value":577},"it",{"type":432,"tag":451,"props":579,"children":581},{"style":580},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[582],{"type":438,"value":583},".",{"type":432,"tag":451,"props":585,"children":586},{"style":522},[587],{"type":438,"value":588},"next",{"type":432,"tag":451,"props":590,"children":591},{"style":528},[592],{"type":438,"value":593},"()",{"type":432,"tag":451,"props":595,"children":596},{"style":540},[597],{"type":438,"value":598},";",{"type":432,"tag":451,"props":600,"children":601},{"style":458},[602],{"type":438,"value":603}," // { value: \"a\", done: false }\n",{"type":432,"tag":451,"props":605,"children":607},{"class":453,"line":606},9,[608,612,616,620,624,628],{"type":432,"tag":451,"props":609,"children":610},{"style":510},[611],{"type":438,"value":577},{"type":432,"tag":451,"props":613,"children":614},{"style":580},[615],{"type":438,"value":583},{"type":432,"tag":451,"props":617,"children":618},{"style":522},[619],{"type":438,"value":588},{"type":432,"tag":451,"props":621,"children":622},{"style":528},[623],{"type":438,"value":593},{"type":432,"tag":451,"props":625,"children":626},{"style":540},[627],{"type":438,"value":598},{"type":432,"tag":451,"props":629,"children":630},{"style":458},[631],{"type":438,"value":632}," // { value: \"b\", done: false }\n",{"type":432,"tag":451,"props":634,"children":636},{"class":453,"line":635},10,[637,641,645,649,653,657],{"type":432,"tag":451,"props":638,"children":639},{"style":510},[640],{"type":438,"value":577},{"type":432,"tag":451,"props":642,"children":643},{"style":580},[644],{"type":438,"value":583},{"type":432,"tag":451,"props":646,"children":647},{"style":522},[648],{"type":438,"value":588},{"type":432,"tag":451,"props":650,"children":651},{"style":528},[652],{"type":438,"value":593},{"type":432,"tag":451,"props":654,"children":655},{"style":540},[656],{"type":438,"value":598},{"type":432,"tag":451,"props":658,"children":659},{"style":458},[660],{"type":438,"value":661}," // { value: undefined, done: true }\n",{"type":432,"tag":451,"props":663,"children":665},{"class":453,"line":664},11,[666],{"type":432,"tag":451,"props":667,"children":668},{"emptyLinePlaceholder":565},[669],{"type":438,"value":568},{"type":432,"tag":451,"props":671,"children":673},{"class":453,"line":672},12,[674,679,683,688,694],{"type":432,"tag":451,"props":675,"children":676},{"style":504},[677],{"type":438,"value":678},"function",{"type":432,"tag":451,"props":680,"children":681},{"style":522},[682],{"type":438,"value":525},{"type":432,"tag":451,"props":684,"children":685},{"style":528},[686],{"type":438,"value":687},"(",{"type":432,"tag":451,"props":689,"children":691},{"style":690},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[692],{"type":438,"value":693},"array",{"type":432,"tag":451,"props":695,"children":696},{"style":528},[697],{"type":438,"value":698},") {\n",{"type":432,"tag":451,"props":700,"children":702},{"class":453,"line":701},13,[703,708,713,717,723],{"type":432,"tag":451,"props":704,"children":705},{"style":504},[706],{"type":438,"value":707},"  var",{"type":432,"tag":451,"props":709,"children":710},{"style":510},[711],{"type":438,"value":712}," nextIndex",{"type":432,"tag":451,"props":714,"children":715},{"style":516},[716],{"type":438,"value":519},{"type":432,"tag":451,"props":718,"children":720},{"style":719},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[721],{"type":438,"value":722}," 0",{"type":432,"tag":451,"props":724,"children":725},{"style":540},[726],{"type":438,"value":558},{"type":432,"tag":451,"props":728,"children":730},{"class":453,"line":729},14,[731,737],{"type":432,"tag":451,"props":732,"children":734},{"style":733},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[735],{"type":438,"value":736},"  return",{"type":432,"tag":451,"props":738,"children":739},{"style":528},[740],{"type":438,"value":741}," {\n",{"type":432,"tag":451,"props":743,"children":745},{"class":453,"line":744},15,[746,751,756,761],{"type":432,"tag":451,"props":747,"children":748},{"style":522},[749],{"type":438,"value":750},"    next",{"type":432,"tag":451,"props":752,"children":753},{"style":540},[754],{"type":438,"value":755},":",{"type":432,"tag":451,"props":757,"children":758},{"style":504},[759],{"type":438,"value":760}," function",{"type":432,"tag":451,"props":762,"children":763},{"style":528},[764],{"type":438,"value":765}," () {\n",{"type":432,"tag":451,"props":767,"children":769},{"class":453,"line":768},16,[770,775,779,784,789,793],{"type":432,"tag":451,"props":771,"children":772},{"style":733},[773],{"type":438,"value":774},"      return",{"type":432,"tag":451,"props":776,"children":777},{"style":510},[778],{"type":438,"value":712},{"type":432,"tag":451,"props":780,"children":781},{"style":516},[782],{"type":438,"value":783}," \u003C",{"type":432,"tag":451,"props":785,"children":786},{"style":510},[787],{"type":438,"value":788}," array",{"type":432,"tag":451,"props":790,"children":791},{"style":580},[792],{"type":438,"value":583},{"type":432,"tag":451,"props":794,"children":795},{"style":528},[796],{"type":438,"value":797},"length\n",{"type":432,"tag":451,"props":799,"children":801},{"class":453,"line":800},17,[802,807,812,816,820,825,830,835,840,844,849,853,858],{"type":432,"tag":451,"props":803,"children":804},{"style":516},[805],{"type":438,"value":806},"        ?",{"type":432,"tag":451,"props":808,"children":809},{"style":528},[810],{"type":438,"value":811}," { value",{"type":432,"tag":451,"props":813,"children":814},{"style":540},[815],{"type":438,"value":755},{"type":432,"tag":451,"props":817,"children":818},{"style":510},[819],{"type":438,"value":788},{"type":432,"tag":451,"props":821,"children":822},{"style":528},[823],{"type":438,"value":824},"[",{"type":432,"tag":451,"props":826,"children":827},{"style":510},[828],{"type":438,"value":829},"nextIndex",{"type":432,"tag":451,"props":831,"children":832},{"style":516},[833],{"type":438,"value":834},"++",{"type":432,"tag":451,"props":836,"children":837},{"style":528},[838],{"type":438,"value":839},"]",{"type":432,"tag":451,"props":841,"children":842},{"style":540},[843],{"type":438,"value":543},{"type":432,"tag":451,"props":845,"children":846},{"style":528},[847],{"type":438,"value":848}," done",{"type":432,"tag":451,"props":850,"children":851},{"style":540},[852],{"type":438,"value":755},{"type":432,"tag":451,"props":854,"children":855},{"style":719},[856],{"type":438,"value":857}," false",{"type":432,"tag":451,"props":859,"children":860},{"style":528},[861],{"type":438,"value":862}," }\n",{"type":432,"tag":451,"props":864,"children":866},{"class":453,"line":865},18,[867,872,876,880,885,889,893,897,902,907],{"type":432,"tag":451,"props":868,"children":869},{"style":516},[870],{"type":438,"value":871},"        :",{"type":432,"tag":451,"props":873,"children":874},{"style":528},[875],{"type":438,"value":811},{"type":432,"tag":451,"props":877,"children":878},{"style":540},[879],{"type":438,"value":755},{"type":432,"tag":451,"props":881,"children":882},{"style":719},[883],{"type":438,"value":884}," undefined",{"type":432,"tag":451,"props":886,"children":887},{"style":540},[888],{"type":438,"value":543},{"type":432,"tag":451,"props":890,"children":891},{"style":528},[892],{"type":438,"value":848},{"type":432,"tag":451,"props":894,"children":895},{"style":540},[896],{"type":438,"value":755},{"type":432,"tag":451,"props":898,"children":899},{"style":719},[900],{"type":438,"value":901}," true",{"type":432,"tag":451,"props":903,"children":904},{"style":528},[905],{"type":438,"value":906}," }",{"type":432,"tag":451,"props":908,"children":909},{"style":540},[910],{"type":438,"value":558},{"type":432,"tag":451,"props":912,"children":914},{"class":453,"line":913},19,[915,920],{"type":432,"tag":451,"props":916,"children":917},{"style":528},[918],{"type":438,"value":919},"    }",{"type":432,"tag":451,"props":921,"children":922},{"style":540},[923],{"type":438,"value":924},",\n",{"type":432,"tag":451,"props":926,"children":928},{"class":453,"line":927},20,[929,934],{"type":432,"tag":451,"props":930,"children":931},{"style":528},[932],{"type":438,"value":933},"  }",{"type":432,"tag":451,"props":935,"children":936},{"style":540},[937],{"type":438,"value":558},{"type":432,"tag":451,"props":939,"children":941},{"class":453,"line":940},21,[942],{"type":432,"tag":451,"props":943,"children":944},{"style":528},[945],{"type":438,"value":946},"}\n",{"type":432,"tag":433,"props":948,"children":950},{"id":949},"可迭代的迭代器",[951],{"type":438,"value":949},{"type":432,"tag":440,"props":953,"children":955},{"className":442,"code":954,"language":444,"meta":427,"style":427},"/**\n * 使迭代器可迭代\n * makeIterator 函数生成的迭代器并没有实现可迭代协议\n * 所以不能在 for...of 等语法中使用。\n * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n * 从新名了下函数名称 createIterator\n */\nfunction createIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n    [Symbol.iterator]: function () {\n      console.log(\"返回的迭代器:\", this);\n      return this; // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n    },\n  };\n}\n\nvar iterator = createIterator([1, 2, 3]);\nconsole.log(...iterator);\n",[956],{"type":432,"tag":447,"props":957,"children":958},{"__ignoreMap":427},[959,967,975,983,991,999,1007,1014,1038,1061,1072,1091,1118,1173,1216,1227,1265,1310,1330,1341,1352,1359,1367,1423],{"type":432,"tag":451,"props":960,"children":961},{"class":453,"line":454},[962],{"type":432,"tag":451,"props":963,"children":964},{"style":458},[965],{"type":438,"value":966},"/**\n",{"type":432,"tag":451,"props":968,"children":969},{"class":453,"line":464},[970],{"type":432,"tag":451,"props":971,"children":972},{"style":458},[973],{"type":438,"value":974}," * 使迭代器可迭代\n",{"type":432,"tag":451,"props":976,"children":977},{"class":453,"line":473},[978],{"type":432,"tag":451,"props":979,"children":980},{"style":458},[981],{"type":438,"value":982}," * makeIterator 函数生成的迭代器并没有实现可迭代协议\n",{"type":432,"tag":451,"props":984,"children":985},{"class":453,"line":482},[986],{"type":432,"tag":451,"props":987,"children":988},{"style":458},[989],{"type":438,"value":990}," * 所以不能在 for...of 等语法中使用。\n",{"type":432,"tag":451,"props":992,"children":993},{"class":453,"line":491},[994],{"type":432,"tag":451,"props":995,"children":996},{"style":458},[997],{"type":438,"value":998}," * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n",{"type":432,"tag":451,"props":1000,"children":1001},{"class":453,"line":500},[1002],{"type":432,"tag":451,"props":1003,"children":1004},{"style":458},[1005],{"type":438,"value":1006}," * 从新名了下函数名称 createIterator\n",{"type":432,"tag":451,"props":1008,"children":1009},{"class":453,"line":561},[1010],{"type":432,"tag":451,"props":1011,"children":1012},{"style":458},[1013],{"type":438,"value":497},{"type":432,"tag":451,"props":1015,"children":1016},{"class":453,"line":571},[1017,1021,1026,1030,1034],{"type":432,"tag":451,"props":1018,"children":1019},{"style":504},[1020],{"type":438,"value":678},{"type":432,"tag":451,"props":1022,"children":1023},{"style":522},[1024],{"type":438,"value":1025}," createIterator",{"type":432,"tag":451,"props":1027,"children":1028},{"style":528},[1029],{"type":438,"value":687},{"type":432,"tag":451,"props":1031,"children":1032},{"style":690},[1033],{"type":438,"value":693},{"type":432,"tag":451,"props":1035,"children":1036},{"style":528},[1037],{"type":438,"value":698},{"type":432,"tag":451,"props":1039,"children":1040},{"class":453,"line":606},[1041,1045,1049,1053,1057],{"type":432,"tag":451,"props":1042,"children":1043},{"style":504},[1044],{"type":438,"value":707},{"type":432,"tag":451,"props":1046,"children":1047},{"style":510},[1048],{"type":438,"value":712},{"type":432,"tag":451,"props":1050,"children":1051},{"style":516},[1052],{"type":438,"value":519},{"type":432,"tag":451,"props":1054,"children":1055},{"style":719},[1056],{"type":438,"value":722},{"type":432,"tag":451,"props":1058,"children":1059},{"style":540},[1060],{"type":438,"value":558},{"type":432,"tag":451,"props":1062,"children":1063},{"class":453,"line":635},[1064,1068],{"type":432,"tag":451,"props":1065,"children":1066},{"style":733},[1067],{"type":438,"value":736},{"type":432,"tag":451,"props":1069,"children":1070},{"style":528},[1071],{"type":438,"value":741},{"type":432,"tag":451,"props":1073,"children":1074},{"class":453,"line":664},[1075,1079,1083,1087],{"type":432,"tag":451,"props":1076,"children":1077},{"style":522},[1078],{"type":438,"value":750},{"type":432,"tag":451,"props":1080,"children":1081},{"style":540},[1082],{"type":438,"value":755},{"type":432,"tag":451,"props":1084,"children":1085},{"style":504},[1086],{"type":438,"value":760},{"type":432,"tag":451,"props":1088,"children":1089},{"style":528},[1090],{"type":438,"value":765},{"type":432,"tag":451,"props":1092,"children":1093},{"class":453,"line":672},[1094,1098,1102,1106,1110,1114],{"type":432,"tag":451,"props":1095,"children":1096},{"style":733},[1097],{"type":438,"value":774},{"type":432,"tag":451,"props":1099,"children":1100},{"style":510},[1101],{"type":438,"value":712},{"type":432,"tag":451,"props":1103,"children":1104},{"style":516},[1105],{"type":438,"value":783},{"type":432,"tag":451,"props":1107,"children":1108},{"style":510},[1109],{"type":438,"value":788},{"type":432,"tag":451,"props":1111,"children":1112},{"style":580},[1113],{"type":438,"value":583},{"type":432,"tag":451,"props":1115,"children":1116},{"style":528},[1117],{"type":438,"value":797},{"type":432,"tag":451,"props":1119,"children":1120},{"class":453,"line":701},[1121,1125,1129,1133,1137,1141,1145,1149,1153,1157,1161,1165,1169],{"type":432,"tag":451,"props":1122,"children":1123},{"style":516},[1124],{"type":438,"value":806},{"type":432,"tag":451,"props":1126,"children":1127},{"style":528},[1128],{"type":438,"value":811},{"type":432,"tag":451,"props":1130,"children":1131},{"style":540},[1132],{"type":438,"value":755},{"type":432,"tag":451,"props":1134,"children":1135},{"style":510},[1136],{"type":438,"value":788},{"type":432,"tag":451,"props":1138,"children":1139},{"style":528},[1140],{"type":438,"value":824},{"type":432,"tag":451,"props":1142,"children":1143},{"style":510},[1144],{"type":438,"value":829},{"type":432,"tag":451,"props":1146,"children":1147},{"style":516},[1148],{"type":438,"value":834},{"type":432,"tag":451,"props":1150,"children":1151},{"style":528},[1152],{"type":438,"value":839},{"type":432,"tag":451,"props":1154,"children":1155},{"style":540},[1156],{"type":438,"value":543},{"type":432,"tag":451,"props":1158,"children":1159},{"style":528},[1160],{"type":438,"value":848},{"type":432,"tag":451,"props":1162,"children":1163},{"style":540},[1164],{"type":438,"value":755},{"type":432,"tag":451,"props":1166,"children":1167},{"style":719},[1168],{"type":438,"value":857},{"type":432,"tag":451,"props":1170,"children":1171},{"style":528},[1172],{"type":438,"value":862},{"type":432,"tag":451,"props":1174,"children":1175},{"class":453,"line":729},[1176,1180,1184,1188,1192,1196,1200,1204,1208,1212],{"type":432,"tag":451,"props":1177,"children":1178},{"style":516},[1179],{"type":438,"value":871},{"type":432,"tag":451,"props":1181,"children":1182},{"style":528},[1183],{"type":438,"value":811},{"type":432,"tag":451,"props":1185,"children":1186},{"style":540},[1187],{"type":438,"value":755},{"type":432,"tag":451,"props":1189,"children":1190},{"style":719},[1191],{"type":438,"value":884},{"type":432,"tag":451,"props":1193,"children":1194},{"style":540},[1195],{"type":438,"value":543},{"type":432,"tag":451,"props":1197,"children":1198},{"style":528},[1199],{"type":438,"value":848},{"type":432,"tag":451,"props":1201,"children":1202},{"style":540},[1203],{"type":438,"value":755},{"type":432,"tag":451,"props":1205,"children":1206},{"style":719},[1207],{"type":438,"value":901},{"type":432,"tag":451,"props":1209,"children":1210},{"style":528},[1211],{"type":438,"value":906},{"type":432,"tag":451,"props":1213,"children":1214},{"style":540},[1215],{"type":438,"value":558},{"type":432,"tag":451,"props":1217,"children":1218},{"class":453,"line":744},[1219,1223],{"type":432,"tag":451,"props":1220,"children":1221},{"style":528},[1222],{"type":438,"value":919},{"type":432,"tag":451,"props":1224,"children":1225},{"style":540},[1226],{"type":438,"value":924},{"type":432,"tag":451,"props":1228,"children":1229},{"class":453,"line":768},[1230,1235,1240,1244,1249,1253,1257,1261],{"type":432,"tag":451,"props":1231,"children":1232},{"style":528},[1233],{"type":438,"value":1234},"    [",{"type":432,"tag":451,"props":1236,"children":1237},{"style":510},[1238],{"type":438,"value":1239},"Symbol",{"type":432,"tag":451,"props":1241,"children":1242},{"style":580},[1243],{"type":438,"value":583},{"type":432,"tag":451,"props":1245,"children":1246},{"style":510},[1247],{"type":438,"value":1248},"iterator",{"type":432,"tag":451,"props":1250,"children":1251},{"style":528},[1252],{"type":438,"value":839},{"type":432,"tag":451,"props":1254,"children":1255},{"style":540},[1256],{"type":438,"value":755},{"type":432,"tag":451,"props":1258,"children":1259},{"style":504},[1260],{"type":438,"value":760},{"type":432,"tag":451,"props":1262,"children":1263},{"style":528},[1264],{"type":438,"value":765},{"type":432,"tag":451,"props":1266,"children":1267},{"class":453,"line":800},[1268,1273,1277,1282,1286,1291,1295,1301,1306],{"type":432,"tag":451,"props":1269,"children":1270},{"style":510},[1271],{"type":438,"value":1272},"      console",{"type":432,"tag":451,"props":1274,"children":1275},{"style":580},[1276],{"type":438,"value":583},{"type":432,"tag":451,"props":1278,"children":1279},{"style":522},[1280],{"type":438,"value":1281},"log",{"type":432,"tag":451,"props":1283,"children":1284},{"style":528},[1285],{"type":438,"value":687},{"type":432,"tag":451,"props":1287,"children":1288},{"style":534},[1289],{"type":438,"value":1290},"\"返回的迭代器:\"",{"type":432,"tag":451,"props":1292,"children":1293},{"style":540},[1294],{"type":438,"value":543},{"type":432,"tag":451,"props":1296,"children":1298},{"style":1297},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[1299],{"type":438,"value":1300}," this",{"type":432,"tag":451,"props":1302,"children":1303},{"style":528},[1304],{"type":438,"value":1305},")",{"type":432,"tag":451,"props":1307,"children":1308},{"style":540},[1309],{"type":438,"value":558},{"type":432,"tag":451,"props":1311,"children":1312},{"class":453,"line":865},[1313,1317,1321,1325],{"type":432,"tag":451,"props":1314,"children":1315},{"style":733},[1316],{"type":438,"value":774},{"type":432,"tag":451,"props":1318,"children":1319},{"style":1297},[1320],{"type":438,"value":1300},{"type":432,"tag":451,"props":1322,"children":1323},{"style":540},[1324],{"type":438,"value":598},{"type":432,"tag":451,"props":1326,"children":1327},{"style":458},[1328],{"type":438,"value":1329}," // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n",{"type":432,"tag":451,"props":1331,"children":1332},{"class":453,"line":913},[1333,1337],{"type":432,"tag":451,"props":1334,"children":1335},{"style":528},[1336],{"type":438,"value":919},{"type":432,"tag":451,"props":1338,"children":1339},{"style":540},[1340],{"type":438,"value":924},{"type":432,"tag":451,"props":1342,"children":1343},{"class":453,"line":927},[1344,1348],{"type":432,"tag":451,"props":1345,"children":1346},{"style":528},[1347],{"type":438,"value":933},{"type":432,"tag":451,"props":1349,"children":1350},{"style":540},[1351],{"type":438,"value":558},{"type":432,"tag":451,"props":1353,"children":1354},{"class":453,"line":940},[1355],{"type":432,"tag":451,"props":1356,"children":1357},{"style":528},[1358],{"type":438,"value":946},{"type":432,"tag":451,"props":1360,"children":1362},{"class":453,"line":1361},22,[1363],{"type":432,"tag":451,"props":1364,"children":1365},{"emptyLinePlaceholder":565},[1366],{"type":438,"value":568},{"type":432,"tag":451,"props":1368,"children":1370},{"class":453,"line":1369},23,[1371,1375,1380,1384,1388,1392,1397,1401,1406,1410,1415,1419],{"type":432,"tag":451,"props":1372,"children":1373},{"style":504},[1374],{"type":438,"value":507},{"type":432,"tag":451,"props":1376,"children":1377},{"style":510},[1378],{"type":438,"value":1379}," iterator",{"type":432,"tag":451,"props":1381,"children":1382},{"style":516},[1383],{"type":438,"value":519},{"type":432,"tag":451,"props":1385,"children":1386},{"style":522},[1387],{"type":438,"value":1025},{"type":432,"tag":451,"props":1389,"children":1390},{"style":528},[1391],{"type":438,"value":531},{"type":432,"tag":451,"props":1393,"children":1394},{"style":719},[1395],{"type":438,"value":1396},"1",{"type":432,"tag":451,"props":1398,"children":1399},{"style":540},[1400],{"type":438,"value":543},{"type":432,"tag":451,"props":1402,"children":1403},{"style":719},[1404],{"type":438,"value":1405}," 2",{"type":432,"tag":451,"props":1407,"children":1408},{"style":540},[1409],{"type":438,"value":543},{"type":432,"tag":451,"props":1411,"children":1412},{"style":719},[1413],{"type":438,"value":1414}," 3",{"type":432,"tag":451,"props":1416,"children":1417},{"style":528},[1418],{"type":438,"value":553},{"type":432,"tag":451,"props":1420,"children":1421},{"style":540},[1422],{"type":438,"value":558},{"type":432,"tag":451,"props":1424,"children":1426},{"class":453,"line":1425},24,[1427,1432,1436,1440,1444,1449,1453,1457],{"type":432,"tag":451,"props":1428,"children":1429},{"style":510},[1430],{"type":438,"value":1431},"console",{"type":432,"tag":451,"props":1433,"children":1434},{"style":580},[1435],{"type":438,"value":583},{"type":432,"tag":451,"props":1437,"children":1438},{"style":522},[1439],{"type":438,"value":1281},{"type":432,"tag":451,"props":1441,"children":1442},{"style":528},[1443],{"type":438,"value":687},{"type":432,"tag":451,"props":1445,"children":1446},{"style":516},[1447],{"type":438,"value":1448},"...",{"type":432,"tag":451,"props":1450,"children":1451},{"style":510},[1452],{"type":438,"value":1248},{"type":432,"tag":451,"props":1454,"children":1455},{"style":528},[1456],{"type":438,"value":1305},{"type":432,"tag":451,"props":1458,"children":1459},{"style":540},[1460],{"type":438,"value":558},{"type":432,"tag":1462,"props":1463,"children":1464},"style",{},[1465],{"type":438,"value":1466},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":427,"searchDepth":491,"depth":491,"links":1468},[1469,1470],{"id":435,"depth":464,"text":435},{"id":949,"depth":464,"text":949},"markdown","content:3.frontend-code-assessment:1.source:1.native-api:7.iterator.md","content","3.frontend-code-assessment/1.source/1.native-api/7.iterator.md","md",[1477,1479],{"_path":294,"title":293,"description":1478},"JSON.stringify() 方法将一个 js 对象或值转换为 json 字符串，如果指定了一个 replacer 函数，则可以选择性地替换值，或者指定的 replacer 是数组，则可选择性地仅包含数组指定的属性。",{"_path":304,"title":303,"description":427},1713339877567]