[{"data":1,"prerenderedAt":1516},["Reactive",2],{"navigation":3,"/frontend-code-assessment/source/native-api/iterator":460,"/frontend-code-assessment/source/native-api/iterator-surround":1512},[4,263,292,437,445],{"title":5,"_path":6,"children":7,"icon":262},"算法","/algorithm",[8,25],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27,"children":28},"Leetcode 力扣","/algorithm/leetcode",[29,35,48],{"title":30,"_path":31,"children":32},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[33],{"title":34,"_path":31},"刷题索引",{"title":36,"_path":37,"children":38},"剑指 offer","/algorithm/leetcode/sword-ofter",[39,42,45],{"title":40,"_path":41},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":43,"_path":44},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":46,"_path":47},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":49,"_path":50,"children":51},"主题单","/algorithm/leetcode/major",[52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259],{"title":53,"_path":54},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":56,"_path":57},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":59,"_path":60},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":62,"_path":63},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":65,"_path":66},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":68,"_path":69},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":71,"_path":72},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":74,"_path":75},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":77,"_path":78},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":80,"_path":81},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":83,"_path":84},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":86,"_path":87},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":89,"_path":90},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":92,"_path":93},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":95,"_path":96},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":98,"_path":99},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":101,"_path":102},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":104,"_path":105},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":107,"_path":108},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":110,"_path":111},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":113,"_path":114},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":116,"_path":117},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":119,"_path":120},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":122,"_path":123},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":125,"_path":126},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":128,"_path":129},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":131,"_path":132},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":134,"_path":135},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":137,"_path":138},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":140,"_path":141},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":143,"_path":144},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":146,"_path":147},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":149,"_path":150},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":152,"_path":153},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":155,"_path":156},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":158,"_path":159},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":161,"_path":162},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":164,"_path":165},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":167,"_path":168},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":170,"_path":171},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":173,"_path":174},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":176,"_path":177},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":179,"_path":180},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":182,"_path":183},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":185,"_path":186},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":188,"_path":189},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":191,"_path":192},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":194,"_path":195},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":197,"_path":198},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":200,"_path":201},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":203,"_path":204},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":206,"_path":207},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":209,"_path":210},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":212,"_path":213},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":215,"_path":216},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":218,"_path":219},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":221,"_path":222},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":224,"_path":225},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":227,"_path":228},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":230,"_path":231},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":233,"_path":234},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":236,"_path":237},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":239,"_path":240},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":242,"_path":243},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":245,"_path":246},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":248,"_path":249},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":251,"_path":252},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":254,"_path":255},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":257,"_path":258},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":260,"_path":261},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":264,"_path":265,"children":266,"icon":291},"前端八股文","/frontend-endorsement",[267,278],{"title":268,"_path":269,"children":270},"构建工具","/frontend-endorsement/build-tools",[271],{"title":272,"_path":273,"children":274},"Webpack","/frontend-endorsement/build-tools/webpack",[275],{"title":276,"_path":277},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":279,"_path":280,"children":281},"Html","/frontend-endorsement/html",[282,285,288],{"title":283,"_path":284},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":286,"_path":287},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":289,"_path":290},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":293,"_path":294,"children":295,"icon":436},"前端代码考核","/frontend-code-assessment",[296,345,429],{"title":297,"_path":298,"children":299},"源码实现","/frontend-code-assessment/source",[300,325,338],{"title":301,"_path":302,"children":303},"原生 api","/frontend-code-assessment/source/native-api",[304,307,310,313,316,319,322],{"title":305,"_path":306},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":308,"_path":309},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":311,"_path":312},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":314,"_path":315},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":317,"_path":318},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":320,"_path":321},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":323,"_path":324},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":326,"_path":327,"children":328},"数组 Array","/frontend-code-assessment/source/array",[329,332,335],{"title":330,"_path":331},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":333,"_path":334},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":336,"_path":337},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":339,"_path":340,"children":341},"字符串 String","/frontend-code-assessment/source/string",[342],{"title":343,"_path":344},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":346,"_path":347,"children":348},"业务场景","/frontend-code-assessment/scene",[349,371,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426],{"title":350,"_path":351,"children":352},"Promise","/frontend-code-assessment/scene/promise",[353,356,359,362,365,368],{"title":354,"_path":355},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":357,"_path":358},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":360,"_path":361},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":363,"_path":364},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":366,"_path":367},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":369,"_path":370},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":372,"_path":373,"children":374},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[375],{"title":376,"_path":377},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":379,"_path":380},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":382,"_path":383},"倒计时","/frontend-code-assessment/scene/countdown",{"title":385,"_path":386},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":388,"_path":389},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":391,"_path":392},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":394,"_path":395},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":397,"_path":398},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":400,"_path":401},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":403,"_path":404},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":406,"_path":407},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":409,"_path":410},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":412,"_path":413},"随机数","/frontend-code-assessment/scene/random-number",{"title":415,"_path":416},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":418,"_path":419},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":421,"_path":422},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":424,"_path":425},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":427,"_path":428},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":430,"_path":431,"children":432},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[433],{"title":434,"_path":435},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":438,"_path":439,"children":440,"icon":444},"项目","/pro",[441],{"title":442,"_path":443},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":446,"_path":447,"children":448,"icon":459},"后端语言","/backend-languages",[449],{"title":450,"_path":451,"children":452},"Python","/backend-languages/python",[453,456],{"title":454,"_path":455},"基础","/backend-languages/python/base",{"title":457,"_path":458},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":324,"_dir":461,"_draft":462,"_partial":462,"_locale":463,"title":323,"description":463,"body":464,"_type":1507,"_id":1508,"_source":1509,"_file":1510,"_extension":1511},"native-api",false,"",{"type":465,"children":466,"toc":1503},"root",[467,475,983,988,1497],{"type":468,"tag":469,"props":470,"children":472},"element","h2",{"id":471},"实现迭代器函数",[473],{"type":474,"value":471},"text",{"type":468,"tag":476,"props":477,"children":481},"pre",{"className":478,"code":479,"language":480,"meta":463,"style":463},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/*\n * 这是一个手写的迭代器(Iterator)\n * 满足迭代器协议的对象。\n * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n */\nvar it = makeIterator([\"a\", \"b\"]);\n\nit.next(); // { value: \"a\", done: false }\nit.next(); // { value: \"b\", done: false }\nit.next(); // { value: undefined, done: true }\n\nfunction makeIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n  };\n}\n","js",[482],{"type":468,"tag":483,"props":484,"children":485},"code",{"__ignoreMap":463},[486,498,507,516,525,534,595,605,640,669,698,706,735,763,778,802,834,899,947,961,974],{"type":468,"tag":487,"props":488,"children":491},"span",{"class":489,"line":490},"line",1,[492],{"type":468,"tag":487,"props":493,"children":495},{"style":494},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[496],{"type":474,"value":497},"/*\n",{"type":468,"tag":487,"props":499,"children":501},{"class":489,"line":500},2,[502],{"type":468,"tag":487,"props":503,"children":504},{"style":494},[505],{"type":474,"value":506}," * 这是一个手写的迭代器(Iterator)\n",{"type":468,"tag":487,"props":508,"children":510},{"class":489,"line":509},3,[511],{"type":468,"tag":487,"props":512,"children":513},{"style":494},[514],{"type":474,"value":515}," * 满足迭代器协议的对象。\n",{"type":468,"tag":487,"props":517,"children":519},{"class":489,"line":518},4,[520],{"type":468,"tag":487,"props":521,"children":522},{"style":494},[523],{"type":474,"value":524}," * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n",{"type":468,"tag":487,"props":526,"children":528},{"class":489,"line":527},5,[529],{"type":468,"tag":487,"props":530,"children":531},{"style":494},[532],{"type":474,"value":533}," */\n",{"type":468,"tag":487,"props":535,"children":537},{"class":489,"line":536},6,[538,544,550,556,562,568,574,580,585,590],{"type":468,"tag":487,"props":539,"children":541},{"style":540},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[542],{"type":474,"value":543},"var",{"type":468,"tag":487,"props":545,"children":547},{"style":546},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[548],{"type":474,"value":549}," it",{"type":468,"tag":487,"props":551,"children":553},{"style":552},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[554],{"type":474,"value":555}," =",{"type":468,"tag":487,"props":557,"children":559},{"style":558},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[560],{"type":474,"value":561}," makeIterator",{"type":468,"tag":487,"props":563,"children":565},{"style":564},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[566],{"type":474,"value":567},"([",{"type":468,"tag":487,"props":569,"children":571},{"style":570},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[572],{"type":474,"value":573},"\"a\"",{"type":468,"tag":487,"props":575,"children":577},{"style":576},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[578],{"type":474,"value":579},",",{"type":468,"tag":487,"props":581,"children":582},{"style":570},[583],{"type":474,"value":584}," \"b\"",{"type":468,"tag":487,"props":586,"children":587},{"style":564},[588],{"type":474,"value":589},"])",{"type":468,"tag":487,"props":591,"children":592},{"style":576},[593],{"type":474,"value":594},";\n",{"type":468,"tag":487,"props":596,"children":598},{"class":489,"line":597},7,[599],{"type":468,"tag":487,"props":600,"children":602},{"emptyLinePlaceholder":601},true,[603],{"type":474,"value":604},"\n",{"type":468,"tag":487,"props":606,"children":608},{"class":489,"line":607},8,[609,614,620,625,630,635],{"type":468,"tag":487,"props":610,"children":611},{"style":546},[612],{"type":474,"value":613},"it",{"type":468,"tag":487,"props":615,"children":617},{"style":616},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[618],{"type":474,"value":619},".",{"type":468,"tag":487,"props":621,"children":622},{"style":558},[623],{"type":474,"value":624},"next",{"type":468,"tag":487,"props":626,"children":627},{"style":564},[628],{"type":474,"value":629},"()",{"type":468,"tag":487,"props":631,"children":632},{"style":576},[633],{"type":474,"value":634},";",{"type":468,"tag":487,"props":636,"children":637},{"style":494},[638],{"type":474,"value":639}," // { value: \"a\", done: false }\n",{"type":468,"tag":487,"props":641,"children":643},{"class":489,"line":642},9,[644,648,652,656,660,664],{"type":468,"tag":487,"props":645,"children":646},{"style":546},[647],{"type":474,"value":613},{"type":468,"tag":487,"props":649,"children":650},{"style":616},[651],{"type":474,"value":619},{"type":468,"tag":487,"props":653,"children":654},{"style":558},[655],{"type":474,"value":624},{"type":468,"tag":487,"props":657,"children":658},{"style":564},[659],{"type":474,"value":629},{"type":468,"tag":487,"props":661,"children":662},{"style":576},[663],{"type":474,"value":634},{"type":468,"tag":487,"props":665,"children":666},{"style":494},[667],{"type":474,"value":668}," // { value: \"b\", done: false }\n",{"type":468,"tag":487,"props":670,"children":672},{"class":489,"line":671},10,[673,677,681,685,689,693],{"type":468,"tag":487,"props":674,"children":675},{"style":546},[676],{"type":474,"value":613},{"type":468,"tag":487,"props":678,"children":679},{"style":616},[680],{"type":474,"value":619},{"type":468,"tag":487,"props":682,"children":683},{"style":558},[684],{"type":474,"value":624},{"type":468,"tag":487,"props":686,"children":687},{"style":564},[688],{"type":474,"value":629},{"type":468,"tag":487,"props":690,"children":691},{"style":576},[692],{"type":474,"value":634},{"type":468,"tag":487,"props":694,"children":695},{"style":494},[696],{"type":474,"value":697}," // { value: undefined, done: true }\n",{"type":468,"tag":487,"props":699,"children":701},{"class":489,"line":700},11,[702],{"type":468,"tag":487,"props":703,"children":704},{"emptyLinePlaceholder":601},[705],{"type":474,"value":604},{"type":468,"tag":487,"props":707,"children":709},{"class":489,"line":708},12,[710,715,719,724,730],{"type":468,"tag":487,"props":711,"children":712},{"style":540},[713],{"type":474,"value":714},"function",{"type":468,"tag":487,"props":716,"children":717},{"style":558},[718],{"type":474,"value":561},{"type":468,"tag":487,"props":720,"children":721},{"style":564},[722],{"type":474,"value":723},"(",{"type":468,"tag":487,"props":725,"children":727},{"style":726},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[728],{"type":474,"value":729},"array",{"type":468,"tag":487,"props":731,"children":732},{"style":564},[733],{"type":474,"value":734},") {\n",{"type":468,"tag":487,"props":736,"children":738},{"class":489,"line":737},13,[739,744,749,753,759],{"type":468,"tag":487,"props":740,"children":741},{"style":540},[742],{"type":474,"value":743},"  var",{"type":468,"tag":487,"props":745,"children":746},{"style":546},[747],{"type":474,"value":748}," nextIndex",{"type":468,"tag":487,"props":750,"children":751},{"style":552},[752],{"type":474,"value":555},{"type":468,"tag":487,"props":754,"children":756},{"style":755},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[757],{"type":474,"value":758}," 0",{"type":468,"tag":487,"props":760,"children":761},{"style":576},[762],{"type":474,"value":594},{"type":468,"tag":487,"props":764,"children":766},{"class":489,"line":765},14,[767,773],{"type":468,"tag":487,"props":768,"children":770},{"style":769},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[771],{"type":474,"value":772},"  return",{"type":468,"tag":487,"props":774,"children":775},{"style":564},[776],{"type":474,"value":777}," {\n",{"type":468,"tag":487,"props":779,"children":781},{"class":489,"line":780},15,[782,787,792,797],{"type":468,"tag":487,"props":783,"children":784},{"style":558},[785],{"type":474,"value":786},"    next",{"type":468,"tag":487,"props":788,"children":789},{"style":576},[790],{"type":474,"value":791},":",{"type":468,"tag":487,"props":793,"children":794},{"style":540},[795],{"type":474,"value":796}," function",{"type":468,"tag":487,"props":798,"children":799},{"style":564},[800],{"type":474,"value":801}," () {\n",{"type":468,"tag":487,"props":803,"children":805},{"class":489,"line":804},16,[806,811,815,820,825,829],{"type":468,"tag":487,"props":807,"children":808},{"style":769},[809],{"type":474,"value":810},"      return",{"type":468,"tag":487,"props":812,"children":813},{"style":546},[814],{"type":474,"value":748},{"type":468,"tag":487,"props":816,"children":817},{"style":552},[818],{"type":474,"value":819}," \u003C",{"type":468,"tag":487,"props":821,"children":822},{"style":546},[823],{"type":474,"value":824}," array",{"type":468,"tag":487,"props":826,"children":827},{"style":616},[828],{"type":474,"value":619},{"type":468,"tag":487,"props":830,"children":831},{"style":564},[832],{"type":474,"value":833},"length\n",{"type":468,"tag":487,"props":835,"children":837},{"class":489,"line":836},17,[838,843,848,852,856,861,866,871,876,880,885,889,894],{"type":468,"tag":487,"props":839,"children":840},{"style":552},[841],{"type":474,"value":842},"        ?",{"type":468,"tag":487,"props":844,"children":845},{"style":564},[846],{"type":474,"value":847}," { value",{"type":468,"tag":487,"props":849,"children":850},{"style":576},[851],{"type":474,"value":791},{"type":468,"tag":487,"props":853,"children":854},{"style":546},[855],{"type":474,"value":824},{"type":468,"tag":487,"props":857,"children":858},{"style":564},[859],{"type":474,"value":860},"[",{"type":468,"tag":487,"props":862,"children":863},{"style":546},[864],{"type":474,"value":865},"nextIndex",{"type":468,"tag":487,"props":867,"children":868},{"style":552},[869],{"type":474,"value":870},"++",{"type":468,"tag":487,"props":872,"children":873},{"style":564},[874],{"type":474,"value":875},"]",{"type":468,"tag":487,"props":877,"children":878},{"style":576},[879],{"type":474,"value":579},{"type":468,"tag":487,"props":881,"children":882},{"style":564},[883],{"type":474,"value":884}," done",{"type":468,"tag":487,"props":886,"children":887},{"style":576},[888],{"type":474,"value":791},{"type":468,"tag":487,"props":890,"children":891},{"style":755},[892],{"type":474,"value":893}," false",{"type":468,"tag":487,"props":895,"children":896},{"style":564},[897],{"type":474,"value":898}," }\n",{"type":468,"tag":487,"props":900,"children":902},{"class":489,"line":901},18,[903,908,912,916,921,925,929,933,938,943],{"type":468,"tag":487,"props":904,"children":905},{"style":552},[906],{"type":474,"value":907},"        :",{"type":468,"tag":487,"props":909,"children":910},{"style":564},[911],{"type":474,"value":847},{"type":468,"tag":487,"props":913,"children":914},{"style":576},[915],{"type":474,"value":791},{"type":468,"tag":487,"props":917,"children":918},{"style":755},[919],{"type":474,"value":920}," undefined",{"type":468,"tag":487,"props":922,"children":923},{"style":576},[924],{"type":474,"value":579},{"type":468,"tag":487,"props":926,"children":927},{"style":564},[928],{"type":474,"value":884},{"type":468,"tag":487,"props":930,"children":931},{"style":576},[932],{"type":474,"value":791},{"type":468,"tag":487,"props":934,"children":935},{"style":755},[936],{"type":474,"value":937}," true",{"type":468,"tag":487,"props":939,"children":940},{"style":564},[941],{"type":474,"value":942}," }",{"type":468,"tag":487,"props":944,"children":945},{"style":576},[946],{"type":474,"value":594},{"type":468,"tag":487,"props":948,"children":950},{"class":489,"line":949},19,[951,956],{"type":468,"tag":487,"props":952,"children":953},{"style":564},[954],{"type":474,"value":955},"    }",{"type":468,"tag":487,"props":957,"children":958},{"style":576},[959],{"type":474,"value":960},",\n",{"type":468,"tag":487,"props":962,"children":964},{"class":489,"line":963},20,[965,970],{"type":468,"tag":487,"props":966,"children":967},{"style":564},[968],{"type":474,"value":969},"  }",{"type":468,"tag":487,"props":971,"children":972},{"style":576},[973],{"type":474,"value":594},{"type":468,"tag":487,"props":975,"children":977},{"class":489,"line":976},21,[978],{"type":468,"tag":487,"props":979,"children":980},{"style":564},[981],{"type":474,"value":982},"}\n",{"type":468,"tag":469,"props":984,"children":986},{"id":985},"可迭代的迭代器",[987],{"type":474,"value":985},{"type":468,"tag":476,"props":989,"children":991},{"className":478,"code":990,"language":480,"meta":463,"style":463},"/**\n * 使迭代器可迭代\n * makeIterator 函数生成的迭代器并没有实现可迭代协议\n * 所以不能在 for...of 等语法中使用。\n * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n * 从新名了下函数名称 createIterator\n */\nfunction createIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n    [Symbol.iterator]: function () {\n      console.log(\"返回的迭代器:\", this);\n      return this; // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n    },\n  };\n}\n\nvar iterator = createIterator([1, 2, 3]);\nconsole.log(...iterator);\n",[992],{"type":468,"tag":483,"props":993,"children":994},{"__ignoreMap":463},[995,1003,1011,1019,1027,1035,1043,1050,1074,1097,1108,1127,1154,1209,1252,1263,1301,1346,1366,1377,1388,1395,1403,1459],{"type":468,"tag":487,"props":996,"children":997},{"class":489,"line":490},[998],{"type":468,"tag":487,"props":999,"children":1000},{"style":494},[1001],{"type":474,"value":1002},"/**\n",{"type":468,"tag":487,"props":1004,"children":1005},{"class":489,"line":500},[1006],{"type":468,"tag":487,"props":1007,"children":1008},{"style":494},[1009],{"type":474,"value":1010}," * 使迭代器可迭代\n",{"type":468,"tag":487,"props":1012,"children":1013},{"class":489,"line":509},[1014],{"type":468,"tag":487,"props":1015,"children":1016},{"style":494},[1017],{"type":474,"value":1018}," * makeIterator 函数生成的迭代器并没有实现可迭代协议\n",{"type":468,"tag":487,"props":1020,"children":1021},{"class":489,"line":518},[1022],{"type":468,"tag":487,"props":1023,"children":1024},{"style":494},[1025],{"type":474,"value":1026}," * 所以不能在 for...of 等语法中使用。\n",{"type":468,"tag":487,"props":1028,"children":1029},{"class":489,"line":527},[1030],{"type":468,"tag":487,"props":1031,"children":1032},{"style":494},[1033],{"type":474,"value":1034}," * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n",{"type":468,"tag":487,"props":1036,"children":1037},{"class":489,"line":536},[1038],{"type":468,"tag":487,"props":1039,"children":1040},{"style":494},[1041],{"type":474,"value":1042}," * 从新名了下函数名称 createIterator\n",{"type":468,"tag":487,"props":1044,"children":1045},{"class":489,"line":597},[1046],{"type":468,"tag":487,"props":1047,"children":1048},{"style":494},[1049],{"type":474,"value":533},{"type":468,"tag":487,"props":1051,"children":1052},{"class":489,"line":607},[1053,1057,1062,1066,1070],{"type":468,"tag":487,"props":1054,"children":1055},{"style":540},[1056],{"type":474,"value":714},{"type":468,"tag":487,"props":1058,"children":1059},{"style":558},[1060],{"type":474,"value":1061}," createIterator",{"type":468,"tag":487,"props":1063,"children":1064},{"style":564},[1065],{"type":474,"value":723},{"type":468,"tag":487,"props":1067,"children":1068},{"style":726},[1069],{"type":474,"value":729},{"type":468,"tag":487,"props":1071,"children":1072},{"style":564},[1073],{"type":474,"value":734},{"type":468,"tag":487,"props":1075,"children":1076},{"class":489,"line":642},[1077,1081,1085,1089,1093],{"type":468,"tag":487,"props":1078,"children":1079},{"style":540},[1080],{"type":474,"value":743},{"type":468,"tag":487,"props":1082,"children":1083},{"style":546},[1084],{"type":474,"value":748},{"type":468,"tag":487,"props":1086,"children":1087},{"style":552},[1088],{"type":474,"value":555},{"type":468,"tag":487,"props":1090,"children":1091},{"style":755},[1092],{"type":474,"value":758},{"type":468,"tag":487,"props":1094,"children":1095},{"style":576},[1096],{"type":474,"value":594},{"type":468,"tag":487,"props":1098,"children":1099},{"class":489,"line":671},[1100,1104],{"type":468,"tag":487,"props":1101,"children":1102},{"style":769},[1103],{"type":474,"value":772},{"type":468,"tag":487,"props":1105,"children":1106},{"style":564},[1107],{"type":474,"value":777},{"type":468,"tag":487,"props":1109,"children":1110},{"class":489,"line":700},[1111,1115,1119,1123],{"type":468,"tag":487,"props":1112,"children":1113},{"style":558},[1114],{"type":474,"value":786},{"type":468,"tag":487,"props":1116,"children":1117},{"style":576},[1118],{"type":474,"value":791},{"type":468,"tag":487,"props":1120,"children":1121},{"style":540},[1122],{"type":474,"value":796},{"type":468,"tag":487,"props":1124,"children":1125},{"style":564},[1126],{"type":474,"value":801},{"type":468,"tag":487,"props":1128,"children":1129},{"class":489,"line":708},[1130,1134,1138,1142,1146,1150],{"type":468,"tag":487,"props":1131,"children":1132},{"style":769},[1133],{"type":474,"value":810},{"type":468,"tag":487,"props":1135,"children":1136},{"style":546},[1137],{"type":474,"value":748},{"type":468,"tag":487,"props":1139,"children":1140},{"style":552},[1141],{"type":474,"value":819},{"type":468,"tag":487,"props":1143,"children":1144},{"style":546},[1145],{"type":474,"value":824},{"type":468,"tag":487,"props":1147,"children":1148},{"style":616},[1149],{"type":474,"value":619},{"type":468,"tag":487,"props":1151,"children":1152},{"style":564},[1153],{"type":474,"value":833},{"type":468,"tag":487,"props":1155,"children":1156},{"class":489,"line":737},[1157,1161,1165,1169,1173,1177,1181,1185,1189,1193,1197,1201,1205],{"type":468,"tag":487,"props":1158,"children":1159},{"style":552},[1160],{"type":474,"value":842},{"type":468,"tag":487,"props":1162,"children":1163},{"style":564},[1164],{"type":474,"value":847},{"type":468,"tag":487,"props":1166,"children":1167},{"style":576},[1168],{"type":474,"value":791},{"type":468,"tag":487,"props":1170,"children":1171},{"style":546},[1172],{"type":474,"value":824},{"type":468,"tag":487,"props":1174,"children":1175},{"style":564},[1176],{"type":474,"value":860},{"type":468,"tag":487,"props":1178,"children":1179},{"style":546},[1180],{"type":474,"value":865},{"type":468,"tag":487,"props":1182,"children":1183},{"style":552},[1184],{"type":474,"value":870},{"type":468,"tag":487,"props":1186,"children":1187},{"style":564},[1188],{"type":474,"value":875},{"type":468,"tag":487,"props":1190,"children":1191},{"style":576},[1192],{"type":474,"value":579},{"type":468,"tag":487,"props":1194,"children":1195},{"style":564},[1196],{"type":474,"value":884},{"type":468,"tag":487,"props":1198,"children":1199},{"style":576},[1200],{"type":474,"value":791},{"type":468,"tag":487,"props":1202,"children":1203},{"style":755},[1204],{"type":474,"value":893},{"type":468,"tag":487,"props":1206,"children":1207},{"style":564},[1208],{"type":474,"value":898},{"type":468,"tag":487,"props":1210,"children":1211},{"class":489,"line":765},[1212,1216,1220,1224,1228,1232,1236,1240,1244,1248],{"type":468,"tag":487,"props":1213,"children":1214},{"style":552},[1215],{"type":474,"value":907},{"type":468,"tag":487,"props":1217,"children":1218},{"style":564},[1219],{"type":474,"value":847},{"type":468,"tag":487,"props":1221,"children":1222},{"style":576},[1223],{"type":474,"value":791},{"type":468,"tag":487,"props":1225,"children":1226},{"style":755},[1227],{"type":474,"value":920},{"type":468,"tag":487,"props":1229,"children":1230},{"style":576},[1231],{"type":474,"value":579},{"type":468,"tag":487,"props":1233,"children":1234},{"style":564},[1235],{"type":474,"value":884},{"type":468,"tag":487,"props":1237,"children":1238},{"style":576},[1239],{"type":474,"value":791},{"type":468,"tag":487,"props":1241,"children":1242},{"style":755},[1243],{"type":474,"value":937},{"type":468,"tag":487,"props":1245,"children":1246},{"style":564},[1247],{"type":474,"value":942},{"type":468,"tag":487,"props":1249,"children":1250},{"style":576},[1251],{"type":474,"value":594},{"type":468,"tag":487,"props":1253,"children":1254},{"class":489,"line":780},[1255,1259],{"type":468,"tag":487,"props":1256,"children":1257},{"style":564},[1258],{"type":474,"value":955},{"type":468,"tag":487,"props":1260,"children":1261},{"style":576},[1262],{"type":474,"value":960},{"type":468,"tag":487,"props":1264,"children":1265},{"class":489,"line":804},[1266,1271,1276,1280,1285,1289,1293,1297],{"type":468,"tag":487,"props":1267,"children":1268},{"style":564},[1269],{"type":474,"value":1270},"    [",{"type":468,"tag":487,"props":1272,"children":1273},{"style":546},[1274],{"type":474,"value":1275},"Symbol",{"type":468,"tag":487,"props":1277,"children":1278},{"style":616},[1279],{"type":474,"value":619},{"type":468,"tag":487,"props":1281,"children":1282},{"style":546},[1283],{"type":474,"value":1284},"iterator",{"type":468,"tag":487,"props":1286,"children":1287},{"style":564},[1288],{"type":474,"value":875},{"type":468,"tag":487,"props":1290,"children":1291},{"style":576},[1292],{"type":474,"value":791},{"type":468,"tag":487,"props":1294,"children":1295},{"style":540},[1296],{"type":474,"value":796},{"type":468,"tag":487,"props":1298,"children":1299},{"style":564},[1300],{"type":474,"value":801},{"type":468,"tag":487,"props":1302,"children":1303},{"class":489,"line":836},[1304,1309,1313,1318,1322,1327,1331,1337,1342],{"type":468,"tag":487,"props":1305,"children":1306},{"style":546},[1307],{"type":474,"value":1308},"      console",{"type":468,"tag":487,"props":1310,"children":1311},{"style":616},[1312],{"type":474,"value":619},{"type":468,"tag":487,"props":1314,"children":1315},{"style":558},[1316],{"type":474,"value":1317},"log",{"type":468,"tag":487,"props":1319,"children":1320},{"style":564},[1321],{"type":474,"value":723},{"type":468,"tag":487,"props":1323,"children":1324},{"style":570},[1325],{"type":474,"value":1326},"\"返回的迭代器:\"",{"type":468,"tag":487,"props":1328,"children":1329},{"style":576},[1330],{"type":474,"value":579},{"type":468,"tag":487,"props":1332,"children":1334},{"style":1333},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[1335],{"type":474,"value":1336}," this",{"type":468,"tag":487,"props":1338,"children":1339},{"style":564},[1340],{"type":474,"value":1341},")",{"type":468,"tag":487,"props":1343,"children":1344},{"style":576},[1345],{"type":474,"value":594},{"type":468,"tag":487,"props":1347,"children":1348},{"class":489,"line":901},[1349,1353,1357,1361],{"type":468,"tag":487,"props":1350,"children":1351},{"style":769},[1352],{"type":474,"value":810},{"type":468,"tag":487,"props":1354,"children":1355},{"style":1333},[1356],{"type":474,"value":1336},{"type":468,"tag":487,"props":1358,"children":1359},{"style":576},[1360],{"type":474,"value":634},{"type":468,"tag":487,"props":1362,"children":1363},{"style":494},[1364],{"type":474,"value":1365}," // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n",{"type":468,"tag":487,"props":1367,"children":1368},{"class":489,"line":949},[1369,1373],{"type":468,"tag":487,"props":1370,"children":1371},{"style":564},[1372],{"type":474,"value":955},{"type":468,"tag":487,"props":1374,"children":1375},{"style":576},[1376],{"type":474,"value":960},{"type":468,"tag":487,"props":1378,"children":1379},{"class":489,"line":963},[1380,1384],{"type":468,"tag":487,"props":1381,"children":1382},{"style":564},[1383],{"type":474,"value":969},{"type":468,"tag":487,"props":1385,"children":1386},{"style":576},[1387],{"type":474,"value":594},{"type":468,"tag":487,"props":1389,"children":1390},{"class":489,"line":976},[1391],{"type":468,"tag":487,"props":1392,"children":1393},{"style":564},[1394],{"type":474,"value":982},{"type":468,"tag":487,"props":1396,"children":1398},{"class":489,"line":1397},22,[1399],{"type":468,"tag":487,"props":1400,"children":1401},{"emptyLinePlaceholder":601},[1402],{"type":474,"value":604},{"type":468,"tag":487,"props":1404,"children":1406},{"class":489,"line":1405},23,[1407,1411,1416,1420,1424,1428,1433,1437,1442,1446,1451,1455],{"type":468,"tag":487,"props":1408,"children":1409},{"style":540},[1410],{"type":474,"value":543},{"type":468,"tag":487,"props":1412,"children":1413},{"style":546},[1414],{"type":474,"value":1415}," iterator",{"type":468,"tag":487,"props":1417,"children":1418},{"style":552},[1419],{"type":474,"value":555},{"type":468,"tag":487,"props":1421,"children":1422},{"style":558},[1423],{"type":474,"value":1061},{"type":468,"tag":487,"props":1425,"children":1426},{"style":564},[1427],{"type":474,"value":567},{"type":468,"tag":487,"props":1429,"children":1430},{"style":755},[1431],{"type":474,"value":1432},"1",{"type":468,"tag":487,"props":1434,"children":1435},{"style":576},[1436],{"type":474,"value":579},{"type":468,"tag":487,"props":1438,"children":1439},{"style":755},[1440],{"type":474,"value":1441}," 2",{"type":468,"tag":487,"props":1443,"children":1444},{"style":576},[1445],{"type":474,"value":579},{"type":468,"tag":487,"props":1447,"children":1448},{"style":755},[1449],{"type":474,"value":1450}," 3",{"type":468,"tag":487,"props":1452,"children":1453},{"style":564},[1454],{"type":474,"value":589},{"type":468,"tag":487,"props":1456,"children":1457},{"style":576},[1458],{"type":474,"value":594},{"type":468,"tag":487,"props":1460,"children":1462},{"class":489,"line":1461},24,[1463,1468,1472,1476,1480,1485,1489,1493],{"type":468,"tag":487,"props":1464,"children":1465},{"style":546},[1466],{"type":474,"value":1467},"console",{"type":468,"tag":487,"props":1469,"children":1470},{"style":616},[1471],{"type":474,"value":619},{"type":468,"tag":487,"props":1473,"children":1474},{"style":558},[1475],{"type":474,"value":1317},{"type":468,"tag":487,"props":1477,"children":1478},{"style":564},[1479],{"type":474,"value":723},{"type":468,"tag":487,"props":1481,"children":1482},{"style":552},[1483],{"type":474,"value":1484},"...",{"type":468,"tag":487,"props":1486,"children":1487},{"style":546},[1488],{"type":474,"value":1284},{"type":468,"tag":487,"props":1490,"children":1491},{"style":564},[1492],{"type":474,"value":1341},{"type":468,"tag":487,"props":1494,"children":1495},{"style":576},[1496],{"type":474,"value":594},{"type":468,"tag":1498,"props":1499,"children":1500},"style",{},[1501],{"type":474,"value":1502},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":463,"searchDepth":527,"depth":527,"links":1504},[1505,1506],{"id":471,"depth":500,"text":471},{"id":985,"depth":500,"text":985},"markdown","content:3.frontend-code-assessment:1.source:1.native-api:7.iterator.md","content","3.frontend-code-assessment/1.source/1.native-api/7.iterator.md","md",[1513,1515],{"_path":321,"title":320,"description":1514},"JSON.stringify() 方法将一个 js 对象或值转换为 json 字符串，如果指定了一个 replacer 函数，则可以选择性地替换值，或者指定的 replacer 是数组，则可选择性地仅包含数组指定的属性。",{"_path":331,"title":330,"description":463},1713626056478]