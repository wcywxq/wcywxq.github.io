[{"data":1,"prerenderedAt":1519},["Reactive",2],{"navigation":3,"/frontend-code-assessment/source/native-api/iterator":463,"/frontend-code-assessment/source/native-api/iterator-surround":1515},[4,266,295,440,448],{"title":5,"_path":6,"children":7,"icon":265},"算法","/algorithm",[8,28],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30,"children":31},"Leetcode 力扣","/algorithm/leetcode",[32,38,51],{"title":33,"_path":34,"children":35},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[36],{"title":37,"_path":34},"刷题索引",{"title":39,"_path":40,"children":41},"剑指 offer","/algorithm/leetcode/sword-ofter",[42,45,48],{"title":43,"_path":44},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":46,"_path":47},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":49,"_path":50},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":52,"_path":53,"children":54},"主题单","/algorithm/leetcode/major",[55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262],{"title":56,"_path":57},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":59,"_path":60},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":62,"_path":63},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":65,"_path":66},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":68,"_path":69},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":71,"_path":72},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":74,"_path":75},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":77,"_path":78},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":80,"_path":81},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":83,"_path":84},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":86,"_path":87},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":89,"_path":90},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":92,"_path":93},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":95,"_path":96},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":98,"_path":99},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":101,"_path":102},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":104,"_path":105},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":107,"_path":108},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":110,"_path":111},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":113,"_path":114},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":116,"_path":117},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":119,"_path":120},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":122,"_path":123},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":125,"_path":126},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":128,"_path":129},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":131,"_path":132},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":134,"_path":135},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":137,"_path":138},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":140,"_path":141},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":143,"_path":144},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":146,"_path":147},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":149,"_path":150},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":152,"_path":153},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":155,"_path":156},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":158,"_path":159},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":161,"_path":162},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":164,"_path":165},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":167,"_path":168},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":170,"_path":171},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":173,"_path":174},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":176,"_path":177},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":179,"_path":180},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":182,"_path":183},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":185,"_path":186},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":188,"_path":189},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":191,"_path":192},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":194,"_path":195},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":197,"_path":198},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":200,"_path":201},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":203,"_path":204},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":206,"_path":207},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":209,"_path":210},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":212,"_path":213},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":215,"_path":216},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":218,"_path":219},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":221,"_path":222},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":224,"_path":225},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":227,"_path":228},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":230,"_path":231},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":233,"_path":234},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":236,"_path":237},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":239,"_path":240},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":242,"_path":243},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":245,"_path":246},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":248,"_path":249},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":251,"_path":252},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":254,"_path":255},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":257,"_path":258},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":260,"_path":261},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":263,"_path":264},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":267,"_path":268,"children":269,"icon":294},"前端八股文","/frontend-endorsement",[270,281],{"title":271,"_path":272,"children":273},"构建工具","/frontend-endorsement/build-tools",[274],{"title":275,"_path":276,"children":277},"Webpack","/frontend-endorsement/build-tools/webpack",[278],{"title":279,"_path":280},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":282,"_path":283,"children":284},"Html","/frontend-endorsement/html",[285,288,291],{"title":286,"_path":287},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":289,"_path":290},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":292,"_path":293},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":296,"_path":297,"children":298,"icon":439},"前端代码考核","/frontend-code-assessment",[299,348,432],{"title":300,"_path":301,"children":302},"源码实现","/frontend-code-assessment/source",[303,328,341],{"title":304,"_path":305,"children":306},"原生 api","/frontend-code-assessment/source/native-api",[307,310,313,316,319,322,325],{"title":308,"_path":309},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":311,"_path":312},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":314,"_path":315},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":317,"_path":318},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":320,"_path":321},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":323,"_path":324},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":326,"_path":327},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":329,"_path":330,"children":331},"数组 Array","/frontend-code-assessment/source/array",[332,335,338],{"title":333,"_path":334},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":336,"_path":337},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":339,"_path":340},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":342,"_path":343,"children":344},"字符串 String","/frontend-code-assessment/source/string",[345],{"title":346,"_path":347},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":349,"_path":350,"children":351},"业务场景","/frontend-code-assessment/scene",[352,374,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429],{"title":353,"_path":354,"children":355},"Promise","/frontend-code-assessment/scene/promise",[356,359,362,365,368,371],{"title":357,"_path":358},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":360,"_path":361},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":363,"_path":364},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":366,"_path":367},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":369,"_path":370},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":372,"_path":373},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":375,"_path":376,"children":377},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[378],{"title":379,"_path":380},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":382,"_path":383},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":385,"_path":386},"倒计时","/frontend-code-assessment/scene/countdown",{"title":388,"_path":389},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":391,"_path":392},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":394,"_path":395},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":397,"_path":398},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":400,"_path":401},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":403,"_path":404},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":406,"_path":407},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":409,"_path":410},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":412,"_path":413},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":415,"_path":416},"随机数","/frontend-code-assessment/scene/random-number",{"title":418,"_path":419},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":421,"_path":422},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":424,"_path":425},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":427,"_path":428},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":430,"_path":431},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":433,"_path":434,"children":435},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[436],{"title":437,"_path":438},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":441,"_path":442,"children":443,"icon":447},"项目","/pro",[444],{"title":445,"_path":446},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":449,"_path":450,"children":451,"icon":462},"后端语言","/backend-languages",[452],{"title":453,"_path":454,"children":455},"Python","/backend-languages/python",[456,459],{"title":457,"_path":458},"基础","/backend-languages/python/base",{"title":460,"_path":461},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":327,"_dir":464,"_draft":465,"_partial":465,"_locale":466,"title":326,"description":466,"body":467,"_type":1510,"_id":1511,"_source":1512,"_file":1513,"_extension":1514},"native-api",false,"",{"type":468,"children":469,"toc":1506},"root",[470,478,986,991,1500],{"type":471,"tag":472,"props":473,"children":475},"element","h2",{"id":474},"实现迭代器函数",[476],{"type":477,"value":474},"text",{"type":471,"tag":479,"props":480,"children":484},"pre",{"className":481,"code":482,"language":483,"meta":466,"style":466},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/*\n * 这是一个手写的迭代器(Iterator)\n * 满足迭代器协议的对象。\n * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n */\nvar it = makeIterator([\"a\", \"b\"]);\n\nit.next(); // { value: \"a\", done: false }\nit.next(); // { value: \"b\", done: false }\nit.next(); // { value: undefined, done: true }\n\nfunction makeIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n  };\n}\n","js",[485],{"type":471,"tag":486,"props":487,"children":488},"code",{"__ignoreMap":466},[489,501,510,519,528,537,598,608,643,672,701,709,738,766,781,805,837,902,950,964,977],{"type":471,"tag":490,"props":491,"children":494},"span",{"class":492,"line":493},"line",1,[495],{"type":471,"tag":490,"props":496,"children":498},{"style":497},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[499],{"type":477,"value":500},"/*\n",{"type":471,"tag":490,"props":502,"children":504},{"class":492,"line":503},2,[505],{"type":471,"tag":490,"props":506,"children":507},{"style":497},[508],{"type":477,"value":509}," * 这是一个手写的迭代器(Iterator)\n",{"type":471,"tag":490,"props":511,"children":513},{"class":492,"line":512},3,[514],{"type":471,"tag":490,"props":515,"children":516},{"style":497},[517],{"type":477,"value":518}," * 满足迭代器协议的对象。\n",{"type":471,"tag":490,"props":520,"children":522},{"class":492,"line":521},4,[523],{"type":471,"tag":490,"props":524,"children":525},{"style":497},[526],{"type":477,"value":527}," * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n",{"type":471,"tag":490,"props":529,"children":531},{"class":492,"line":530},5,[532],{"type":471,"tag":490,"props":533,"children":534},{"style":497},[535],{"type":477,"value":536}," */\n",{"type":471,"tag":490,"props":538,"children":540},{"class":492,"line":539},6,[541,547,553,559,565,571,577,583,588,593],{"type":471,"tag":490,"props":542,"children":544},{"style":543},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[545],{"type":477,"value":546},"var",{"type":471,"tag":490,"props":548,"children":550},{"style":549},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[551],{"type":477,"value":552}," it",{"type":471,"tag":490,"props":554,"children":556},{"style":555},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[557],{"type":477,"value":558}," =",{"type":471,"tag":490,"props":560,"children":562},{"style":561},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[563],{"type":477,"value":564}," makeIterator",{"type":471,"tag":490,"props":566,"children":568},{"style":567},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[569],{"type":477,"value":570},"([",{"type":471,"tag":490,"props":572,"children":574},{"style":573},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[575],{"type":477,"value":576},"\"a\"",{"type":471,"tag":490,"props":578,"children":580},{"style":579},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[581],{"type":477,"value":582},",",{"type":471,"tag":490,"props":584,"children":585},{"style":573},[586],{"type":477,"value":587}," \"b\"",{"type":471,"tag":490,"props":589,"children":590},{"style":567},[591],{"type":477,"value":592},"])",{"type":471,"tag":490,"props":594,"children":595},{"style":579},[596],{"type":477,"value":597},";\n",{"type":471,"tag":490,"props":599,"children":601},{"class":492,"line":600},7,[602],{"type":471,"tag":490,"props":603,"children":605},{"emptyLinePlaceholder":604},true,[606],{"type":477,"value":607},"\n",{"type":471,"tag":490,"props":609,"children":611},{"class":492,"line":610},8,[612,617,623,628,633,638],{"type":471,"tag":490,"props":613,"children":614},{"style":549},[615],{"type":477,"value":616},"it",{"type":471,"tag":490,"props":618,"children":620},{"style":619},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[621],{"type":477,"value":622},".",{"type":471,"tag":490,"props":624,"children":625},{"style":561},[626],{"type":477,"value":627},"next",{"type":471,"tag":490,"props":629,"children":630},{"style":567},[631],{"type":477,"value":632},"()",{"type":471,"tag":490,"props":634,"children":635},{"style":579},[636],{"type":477,"value":637},";",{"type":471,"tag":490,"props":639,"children":640},{"style":497},[641],{"type":477,"value":642}," // { value: \"a\", done: false }\n",{"type":471,"tag":490,"props":644,"children":646},{"class":492,"line":645},9,[647,651,655,659,663,667],{"type":471,"tag":490,"props":648,"children":649},{"style":549},[650],{"type":477,"value":616},{"type":471,"tag":490,"props":652,"children":653},{"style":619},[654],{"type":477,"value":622},{"type":471,"tag":490,"props":656,"children":657},{"style":561},[658],{"type":477,"value":627},{"type":471,"tag":490,"props":660,"children":661},{"style":567},[662],{"type":477,"value":632},{"type":471,"tag":490,"props":664,"children":665},{"style":579},[666],{"type":477,"value":637},{"type":471,"tag":490,"props":668,"children":669},{"style":497},[670],{"type":477,"value":671}," // { value: \"b\", done: false }\n",{"type":471,"tag":490,"props":673,"children":675},{"class":492,"line":674},10,[676,680,684,688,692,696],{"type":471,"tag":490,"props":677,"children":678},{"style":549},[679],{"type":477,"value":616},{"type":471,"tag":490,"props":681,"children":682},{"style":619},[683],{"type":477,"value":622},{"type":471,"tag":490,"props":685,"children":686},{"style":561},[687],{"type":477,"value":627},{"type":471,"tag":490,"props":689,"children":690},{"style":567},[691],{"type":477,"value":632},{"type":471,"tag":490,"props":693,"children":694},{"style":579},[695],{"type":477,"value":637},{"type":471,"tag":490,"props":697,"children":698},{"style":497},[699],{"type":477,"value":700}," // { value: undefined, done: true }\n",{"type":471,"tag":490,"props":702,"children":704},{"class":492,"line":703},11,[705],{"type":471,"tag":490,"props":706,"children":707},{"emptyLinePlaceholder":604},[708],{"type":477,"value":607},{"type":471,"tag":490,"props":710,"children":712},{"class":492,"line":711},12,[713,718,722,727,733],{"type":471,"tag":490,"props":714,"children":715},{"style":543},[716],{"type":477,"value":717},"function",{"type":471,"tag":490,"props":719,"children":720},{"style":561},[721],{"type":477,"value":564},{"type":471,"tag":490,"props":723,"children":724},{"style":567},[725],{"type":477,"value":726},"(",{"type":471,"tag":490,"props":728,"children":730},{"style":729},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[731],{"type":477,"value":732},"array",{"type":471,"tag":490,"props":734,"children":735},{"style":567},[736],{"type":477,"value":737},") {\n",{"type":471,"tag":490,"props":739,"children":741},{"class":492,"line":740},13,[742,747,752,756,762],{"type":471,"tag":490,"props":743,"children":744},{"style":543},[745],{"type":477,"value":746},"  var",{"type":471,"tag":490,"props":748,"children":749},{"style":549},[750],{"type":477,"value":751}," nextIndex",{"type":471,"tag":490,"props":753,"children":754},{"style":555},[755],{"type":477,"value":558},{"type":471,"tag":490,"props":757,"children":759},{"style":758},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[760],{"type":477,"value":761}," 0",{"type":471,"tag":490,"props":763,"children":764},{"style":579},[765],{"type":477,"value":597},{"type":471,"tag":490,"props":767,"children":769},{"class":492,"line":768},14,[770,776],{"type":471,"tag":490,"props":771,"children":773},{"style":772},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[774],{"type":477,"value":775},"  return",{"type":471,"tag":490,"props":777,"children":778},{"style":567},[779],{"type":477,"value":780}," {\n",{"type":471,"tag":490,"props":782,"children":784},{"class":492,"line":783},15,[785,790,795,800],{"type":471,"tag":490,"props":786,"children":787},{"style":561},[788],{"type":477,"value":789},"    next",{"type":471,"tag":490,"props":791,"children":792},{"style":579},[793],{"type":477,"value":794},":",{"type":471,"tag":490,"props":796,"children":797},{"style":543},[798],{"type":477,"value":799}," function",{"type":471,"tag":490,"props":801,"children":802},{"style":567},[803],{"type":477,"value":804}," () {\n",{"type":471,"tag":490,"props":806,"children":808},{"class":492,"line":807},16,[809,814,818,823,828,832],{"type":471,"tag":490,"props":810,"children":811},{"style":772},[812],{"type":477,"value":813},"      return",{"type":471,"tag":490,"props":815,"children":816},{"style":549},[817],{"type":477,"value":751},{"type":471,"tag":490,"props":819,"children":820},{"style":555},[821],{"type":477,"value":822}," \u003C",{"type":471,"tag":490,"props":824,"children":825},{"style":549},[826],{"type":477,"value":827}," array",{"type":471,"tag":490,"props":829,"children":830},{"style":619},[831],{"type":477,"value":622},{"type":471,"tag":490,"props":833,"children":834},{"style":567},[835],{"type":477,"value":836},"length\n",{"type":471,"tag":490,"props":838,"children":840},{"class":492,"line":839},17,[841,846,851,855,859,864,869,874,879,883,888,892,897],{"type":471,"tag":490,"props":842,"children":843},{"style":555},[844],{"type":477,"value":845},"        ?",{"type":471,"tag":490,"props":847,"children":848},{"style":567},[849],{"type":477,"value":850}," { value",{"type":471,"tag":490,"props":852,"children":853},{"style":579},[854],{"type":477,"value":794},{"type":471,"tag":490,"props":856,"children":857},{"style":549},[858],{"type":477,"value":827},{"type":471,"tag":490,"props":860,"children":861},{"style":567},[862],{"type":477,"value":863},"[",{"type":471,"tag":490,"props":865,"children":866},{"style":549},[867],{"type":477,"value":868},"nextIndex",{"type":471,"tag":490,"props":870,"children":871},{"style":555},[872],{"type":477,"value":873},"++",{"type":471,"tag":490,"props":875,"children":876},{"style":567},[877],{"type":477,"value":878},"]",{"type":471,"tag":490,"props":880,"children":881},{"style":579},[882],{"type":477,"value":582},{"type":471,"tag":490,"props":884,"children":885},{"style":567},[886],{"type":477,"value":887}," done",{"type":471,"tag":490,"props":889,"children":890},{"style":579},[891],{"type":477,"value":794},{"type":471,"tag":490,"props":893,"children":894},{"style":758},[895],{"type":477,"value":896}," false",{"type":471,"tag":490,"props":898,"children":899},{"style":567},[900],{"type":477,"value":901}," }\n",{"type":471,"tag":490,"props":903,"children":905},{"class":492,"line":904},18,[906,911,915,919,924,928,932,936,941,946],{"type":471,"tag":490,"props":907,"children":908},{"style":555},[909],{"type":477,"value":910},"        :",{"type":471,"tag":490,"props":912,"children":913},{"style":567},[914],{"type":477,"value":850},{"type":471,"tag":490,"props":916,"children":917},{"style":579},[918],{"type":477,"value":794},{"type":471,"tag":490,"props":920,"children":921},{"style":758},[922],{"type":477,"value":923}," undefined",{"type":471,"tag":490,"props":925,"children":926},{"style":579},[927],{"type":477,"value":582},{"type":471,"tag":490,"props":929,"children":930},{"style":567},[931],{"type":477,"value":887},{"type":471,"tag":490,"props":933,"children":934},{"style":579},[935],{"type":477,"value":794},{"type":471,"tag":490,"props":937,"children":938},{"style":758},[939],{"type":477,"value":940}," true",{"type":471,"tag":490,"props":942,"children":943},{"style":567},[944],{"type":477,"value":945}," }",{"type":471,"tag":490,"props":947,"children":948},{"style":579},[949],{"type":477,"value":597},{"type":471,"tag":490,"props":951,"children":953},{"class":492,"line":952},19,[954,959],{"type":471,"tag":490,"props":955,"children":956},{"style":567},[957],{"type":477,"value":958},"    }",{"type":471,"tag":490,"props":960,"children":961},{"style":579},[962],{"type":477,"value":963},",\n",{"type":471,"tag":490,"props":965,"children":967},{"class":492,"line":966},20,[968,973],{"type":471,"tag":490,"props":969,"children":970},{"style":567},[971],{"type":477,"value":972},"  }",{"type":471,"tag":490,"props":974,"children":975},{"style":579},[976],{"type":477,"value":597},{"type":471,"tag":490,"props":978,"children":980},{"class":492,"line":979},21,[981],{"type":471,"tag":490,"props":982,"children":983},{"style":567},[984],{"type":477,"value":985},"}\n",{"type":471,"tag":472,"props":987,"children":989},{"id":988},"可迭代的迭代器",[990],{"type":477,"value":988},{"type":471,"tag":479,"props":992,"children":994},{"className":481,"code":993,"language":483,"meta":466,"style":466},"/**\n * 使迭代器可迭代\n * makeIterator 函数生成的迭代器并没有实现可迭代协议\n * 所以不能在 for...of 等语法中使用。\n * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n * 从新名了下函数名称 createIterator\n */\nfunction createIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n    [Symbol.iterator]: function () {\n      console.log(\"返回的迭代器:\", this);\n      return this; // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n    },\n  };\n}\n\nvar iterator = createIterator([1, 2, 3]);\nconsole.log(...iterator);\n",[995],{"type":471,"tag":486,"props":996,"children":997},{"__ignoreMap":466},[998,1006,1014,1022,1030,1038,1046,1053,1077,1100,1111,1130,1157,1212,1255,1266,1304,1349,1369,1380,1391,1398,1406,1462],{"type":471,"tag":490,"props":999,"children":1000},{"class":492,"line":493},[1001],{"type":471,"tag":490,"props":1002,"children":1003},{"style":497},[1004],{"type":477,"value":1005},"/**\n",{"type":471,"tag":490,"props":1007,"children":1008},{"class":492,"line":503},[1009],{"type":471,"tag":490,"props":1010,"children":1011},{"style":497},[1012],{"type":477,"value":1013}," * 使迭代器可迭代\n",{"type":471,"tag":490,"props":1015,"children":1016},{"class":492,"line":512},[1017],{"type":471,"tag":490,"props":1018,"children":1019},{"style":497},[1020],{"type":477,"value":1021}," * makeIterator 函数生成的迭代器并没有实现可迭代协议\n",{"type":471,"tag":490,"props":1023,"children":1024},{"class":492,"line":521},[1025],{"type":471,"tag":490,"props":1026,"children":1027},{"style":497},[1028],{"type":477,"value":1029}," * 所以不能在 for...of 等语法中使用。\n",{"type":471,"tag":490,"props":1031,"children":1032},{"class":492,"line":530},[1033],{"type":471,"tag":490,"props":1034,"children":1035},{"style":497},[1036],{"type":477,"value":1037}," * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n",{"type":471,"tag":490,"props":1039,"children":1040},{"class":492,"line":539},[1041],{"type":471,"tag":490,"props":1042,"children":1043},{"style":497},[1044],{"type":477,"value":1045}," * 从新名了下函数名称 createIterator\n",{"type":471,"tag":490,"props":1047,"children":1048},{"class":492,"line":600},[1049],{"type":471,"tag":490,"props":1050,"children":1051},{"style":497},[1052],{"type":477,"value":536},{"type":471,"tag":490,"props":1054,"children":1055},{"class":492,"line":610},[1056,1060,1065,1069,1073],{"type":471,"tag":490,"props":1057,"children":1058},{"style":543},[1059],{"type":477,"value":717},{"type":471,"tag":490,"props":1061,"children":1062},{"style":561},[1063],{"type":477,"value":1064}," createIterator",{"type":471,"tag":490,"props":1066,"children":1067},{"style":567},[1068],{"type":477,"value":726},{"type":471,"tag":490,"props":1070,"children":1071},{"style":729},[1072],{"type":477,"value":732},{"type":471,"tag":490,"props":1074,"children":1075},{"style":567},[1076],{"type":477,"value":737},{"type":471,"tag":490,"props":1078,"children":1079},{"class":492,"line":645},[1080,1084,1088,1092,1096],{"type":471,"tag":490,"props":1081,"children":1082},{"style":543},[1083],{"type":477,"value":746},{"type":471,"tag":490,"props":1085,"children":1086},{"style":549},[1087],{"type":477,"value":751},{"type":471,"tag":490,"props":1089,"children":1090},{"style":555},[1091],{"type":477,"value":558},{"type":471,"tag":490,"props":1093,"children":1094},{"style":758},[1095],{"type":477,"value":761},{"type":471,"tag":490,"props":1097,"children":1098},{"style":579},[1099],{"type":477,"value":597},{"type":471,"tag":490,"props":1101,"children":1102},{"class":492,"line":674},[1103,1107],{"type":471,"tag":490,"props":1104,"children":1105},{"style":772},[1106],{"type":477,"value":775},{"type":471,"tag":490,"props":1108,"children":1109},{"style":567},[1110],{"type":477,"value":780},{"type":471,"tag":490,"props":1112,"children":1113},{"class":492,"line":703},[1114,1118,1122,1126],{"type":471,"tag":490,"props":1115,"children":1116},{"style":561},[1117],{"type":477,"value":789},{"type":471,"tag":490,"props":1119,"children":1120},{"style":579},[1121],{"type":477,"value":794},{"type":471,"tag":490,"props":1123,"children":1124},{"style":543},[1125],{"type":477,"value":799},{"type":471,"tag":490,"props":1127,"children":1128},{"style":567},[1129],{"type":477,"value":804},{"type":471,"tag":490,"props":1131,"children":1132},{"class":492,"line":711},[1133,1137,1141,1145,1149,1153],{"type":471,"tag":490,"props":1134,"children":1135},{"style":772},[1136],{"type":477,"value":813},{"type":471,"tag":490,"props":1138,"children":1139},{"style":549},[1140],{"type":477,"value":751},{"type":471,"tag":490,"props":1142,"children":1143},{"style":555},[1144],{"type":477,"value":822},{"type":471,"tag":490,"props":1146,"children":1147},{"style":549},[1148],{"type":477,"value":827},{"type":471,"tag":490,"props":1150,"children":1151},{"style":619},[1152],{"type":477,"value":622},{"type":471,"tag":490,"props":1154,"children":1155},{"style":567},[1156],{"type":477,"value":836},{"type":471,"tag":490,"props":1158,"children":1159},{"class":492,"line":740},[1160,1164,1168,1172,1176,1180,1184,1188,1192,1196,1200,1204,1208],{"type":471,"tag":490,"props":1161,"children":1162},{"style":555},[1163],{"type":477,"value":845},{"type":471,"tag":490,"props":1165,"children":1166},{"style":567},[1167],{"type":477,"value":850},{"type":471,"tag":490,"props":1169,"children":1170},{"style":579},[1171],{"type":477,"value":794},{"type":471,"tag":490,"props":1173,"children":1174},{"style":549},[1175],{"type":477,"value":827},{"type":471,"tag":490,"props":1177,"children":1178},{"style":567},[1179],{"type":477,"value":863},{"type":471,"tag":490,"props":1181,"children":1182},{"style":549},[1183],{"type":477,"value":868},{"type":471,"tag":490,"props":1185,"children":1186},{"style":555},[1187],{"type":477,"value":873},{"type":471,"tag":490,"props":1189,"children":1190},{"style":567},[1191],{"type":477,"value":878},{"type":471,"tag":490,"props":1193,"children":1194},{"style":579},[1195],{"type":477,"value":582},{"type":471,"tag":490,"props":1197,"children":1198},{"style":567},[1199],{"type":477,"value":887},{"type":471,"tag":490,"props":1201,"children":1202},{"style":579},[1203],{"type":477,"value":794},{"type":471,"tag":490,"props":1205,"children":1206},{"style":758},[1207],{"type":477,"value":896},{"type":471,"tag":490,"props":1209,"children":1210},{"style":567},[1211],{"type":477,"value":901},{"type":471,"tag":490,"props":1213,"children":1214},{"class":492,"line":768},[1215,1219,1223,1227,1231,1235,1239,1243,1247,1251],{"type":471,"tag":490,"props":1216,"children":1217},{"style":555},[1218],{"type":477,"value":910},{"type":471,"tag":490,"props":1220,"children":1221},{"style":567},[1222],{"type":477,"value":850},{"type":471,"tag":490,"props":1224,"children":1225},{"style":579},[1226],{"type":477,"value":794},{"type":471,"tag":490,"props":1228,"children":1229},{"style":758},[1230],{"type":477,"value":923},{"type":471,"tag":490,"props":1232,"children":1233},{"style":579},[1234],{"type":477,"value":582},{"type":471,"tag":490,"props":1236,"children":1237},{"style":567},[1238],{"type":477,"value":887},{"type":471,"tag":490,"props":1240,"children":1241},{"style":579},[1242],{"type":477,"value":794},{"type":471,"tag":490,"props":1244,"children":1245},{"style":758},[1246],{"type":477,"value":940},{"type":471,"tag":490,"props":1248,"children":1249},{"style":567},[1250],{"type":477,"value":945},{"type":471,"tag":490,"props":1252,"children":1253},{"style":579},[1254],{"type":477,"value":597},{"type":471,"tag":490,"props":1256,"children":1257},{"class":492,"line":783},[1258,1262],{"type":471,"tag":490,"props":1259,"children":1260},{"style":567},[1261],{"type":477,"value":958},{"type":471,"tag":490,"props":1263,"children":1264},{"style":579},[1265],{"type":477,"value":963},{"type":471,"tag":490,"props":1267,"children":1268},{"class":492,"line":807},[1269,1274,1279,1283,1288,1292,1296,1300],{"type":471,"tag":490,"props":1270,"children":1271},{"style":567},[1272],{"type":477,"value":1273},"    [",{"type":471,"tag":490,"props":1275,"children":1276},{"style":549},[1277],{"type":477,"value":1278},"Symbol",{"type":471,"tag":490,"props":1280,"children":1281},{"style":619},[1282],{"type":477,"value":622},{"type":471,"tag":490,"props":1284,"children":1285},{"style":549},[1286],{"type":477,"value":1287},"iterator",{"type":471,"tag":490,"props":1289,"children":1290},{"style":567},[1291],{"type":477,"value":878},{"type":471,"tag":490,"props":1293,"children":1294},{"style":579},[1295],{"type":477,"value":794},{"type":471,"tag":490,"props":1297,"children":1298},{"style":543},[1299],{"type":477,"value":799},{"type":471,"tag":490,"props":1301,"children":1302},{"style":567},[1303],{"type":477,"value":804},{"type":471,"tag":490,"props":1305,"children":1306},{"class":492,"line":839},[1307,1312,1316,1321,1325,1330,1334,1340,1345],{"type":471,"tag":490,"props":1308,"children":1309},{"style":549},[1310],{"type":477,"value":1311},"      console",{"type":471,"tag":490,"props":1313,"children":1314},{"style":619},[1315],{"type":477,"value":622},{"type":471,"tag":490,"props":1317,"children":1318},{"style":561},[1319],{"type":477,"value":1320},"log",{"type":471,"tag":490,"props":1322,"children":1323},{"style":567},[1324],{"type":477,"value":726},{"type":471,"tag":490,"props":1326,"children":1327},{"style":573},[1328],{"type":477,"value":1329},"\"返回的迭代器:\"",{"type":471,"tag":490,"props":1331,"children":1332},{"style":579},[1333],{"type":477,"value":582},{"type":471,"tag":490,"props":1335,"children":1337},{"style":1336},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[1338],{"type":477,"value":1339}," this",{"type":471,"tag":490,"props":1341,"children":1342},{"style":567},[1343],{"type":477,"value":1344},")",{"type":471,"tag":490,"props":1346,"children":1347},{"style":579},[1348],{"type":477,"value":597},{"type":471,"tag":490,"props":1350,"children":1351},{"class":492,"line":904},[1352,1356,1360,1364],{"type":471,"tag":490,"props":1353,"children":1354},{"style":772},[1355],{"type":477,"value":813},{"type":471,"tag":490,"props":1357,"children":1358},{"style":1336},[1359],{"type":477,"value":1339},{"type":471,"tag":490,"props":1361,"children":1362},{"style":579},[1363],{"type":477,"value":637},{"type":471,"tag":490,"props":1365,"children":1366},{"style":497},[1367],{"type":477,"value":1368}," // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n",{"type":471,"tag":490,"props":1370,"children":1371},{"class":492,"line":952},[1372,1376],{"type":471,"tag":490,"props":1373,"children":1374},{"style":567},[1375],{"type":477,"value":958},{"type":471,"tag":490,"props":1377,"children":1378},{"style":579},[1379],{"type":477,"value":963},{"type":471,"tag":490,"props":1381,"children":1382},{"class":492,"line":966},[1383,1387],{"type":471,"tag":490,"props":1384,"children":1385},{"style":567},[1386],{"type":477,"value":972},{"type":471,"tag":490,"props":1388,"children":1389},{"style":579},[1390],{"type":477,"value":597},{"type":471,"tag":490,"props":1392,"children":1393},{"class":492,"line":979},[1394],{"type":471,"tag":490,"props":1395,"children":1396},{"style":567},[1397],{"type":477,"value":985},{"type":471,"tag":490,"props":1399,"children":1401},{"class":492,"line":1400},22,[1402],{"type":471,"tag":490,"props":1403,"children":1404},{"emptyLinePlaceholder":604},[1405],{"type":477,"value":607},{"type":471,"tag":490,"props":1407,"children":1409},{"class":492,"line":1408},23,[1410,1414,1419,1423,1427,1431,1436,1440,1445,1449,1454,1458],{"type":471,"tag":490,"props":1411,"children":1412},{"style":543},[1413],{"type":477,"value":546},{"type":471,"tag":490,"props":1415,"children":1416},{"style":549},[1417],{"type":477,"value":1418}," iterator",{"type":471,"tag":490,"props":1420,"children":1421},{"style":555},[1422],{"type":477,"value":558},{"type":471,"tag":490,"props":1424,"children":1425},{"style":561},[1426],{"type":477,"value":1064},{"type":471,"tag":490,"props":1428,"children":1429},{"style":567},[1430],{"type":477,"value":570},{"type":471,"tag":490,"props":1432,"children":1433},{"style":758},[1434],{"type":477,"value":1435},"1",{"type":471,"tag":490,"props":1437,"children":1438},{"style":579},[1439],{"type":477,"value":582},{"type":471,"tag":490,"props":1441,"children":1442},{"style":758},[1443],{"type":477,"value":1444}," 2",{"type":471,"tag":490,"props":1446,"children":1447},{"style":579},[1448],{"type":477,"value":582},{"type":471,"tag":490,"props":1450,"children":1451},{"style":758},[1452],{"type":477,"value":1453}," 3",{"type":471,"tag":490,"props":1455,"children":1456},{"style":567},[1457],{"type":477,"value":592},{"type":471,"tag":490,"props":1459,"children":1460},{"style":579},[1461],{"type":477,"value":597},{"type":471,"tag":490,"props":1463,"children":1465},{"class":492,"line":1464},24,[1466,1471,1475,1479,1483,1488,1492,1496],{"type":471,"tag":490,"props":1467,"children":1468},{"style":549},[1469],{"type":477,"value":1470},"console",{"type":471,"tag":490,"props":1472,"children":1473},{"style":619},[1474],{"type":477,"value":622},{"type":471,"tag":490,"props":1476,"children":1477},{"style":561},[1478],{"type":477,"value":1320},{"type":471,"tag":490,"props":1480,"children":1481},{"style":567},[1482],{"type":477,"value":726},{"type":471,"tag":490,"props":1484,"children":1485},{"style":555},[1486],{"type":477,"value":1487},"...",{"type":471,"tag":490,"props":1489,"children":1490},{"style":549},[1491],{"type":477,"value":1287},{"type":471,"tag":490,"props":1493,"children":1494},{"style":567},[1495],{"type":477,"value":1344},{"type":471,"tag":490,"props":1497,"children":1498},{"style":579},[1499],{"type":477,"value":597},{"type":471,"tag":1501,"props":1502,"children":1503},"style",{},[1504],{"type":477,"value":1505},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":466,"searchDepth":530,"depth":530,"links":1507},[1508,1509],{"id":474,"depth":503,"text":474},{"id":988,"depth":503,"text":988},"markdown","content:3.frontend-code-assessment:1.source:1.native-api:7.iterator.md","content","3.frontend-code-assessment/1.source/1.native-api/7.iterator.md","md",[1516,1518],{"_path":324,"title":323,"description":1517},"JSON.stringify() 方法将一个 js 对象或值转换为 json 字符串，如果指定了一个 replacer 函数，则可以选择性地替换值，或者指定的 replacer 是数组，则可选择性地仅包含数组指定的属性。",{"_path":334,"title":333,"description":466},1713695850336]