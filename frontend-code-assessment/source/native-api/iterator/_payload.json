[{"data":1,"prerenderedAt":1483},["Reactive",2],{"navigation":3,"/frontend-code-assessment/source/native-api/iterator":427,"/frontend-code-assessment/source/native-api/iterator-surround":1479},[4,237,265,406,413],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,399],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":382,"_path":383},"随机数","/frontend-code-assessment/scene/random-number",{"title":385,"_path":386},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":388,"_path":389},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":391,"_path":392},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":394,"_path":395},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":397,"_path":398},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":400,"_path":401,"children":402},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[403],{"title":404,"_path":405},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":407,"_path":408,"children":409},"项目","/pro",[410],{"title":411,"_path":412},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":414,"_path":415,"children":416},"后端语言","/backend-languages",[417],{"title":418,"_path":419,"children":420},"Python","/backend-languages/python",[421,424],{"title":422,"_path":423},"基础","/backend-languages/python/base",{"title":425,"_path":426},"函数","/backend-languages/python/function",{"_path":297,"_dir":428,"_draft":429,"_partial":429,"_locale":430,"title":296,"description":430,"body":431,"_type":1474,"_id":1475,"_source":1476,"_file":1477,"_extension":1478},"native-api",false,"",{"type":432,"children":433,"toc":1470},"root",[434,442,950,955,1464],{"type":435,"tag":436,"props":437,"children":439},"element","h2",{"id":438},"实现迭代器函数",[440],{"type":441,"value":438},"text",{"type":435,"tag":443,"props":444,"children":448},"pre",{"className":445,"code":446,"language":447,"meta":430,"style":430},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/*\n * 这是一个手写的迭代器(Iterator)\n * 满足迭代器协议的对象。\n * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n */\nvar it = makeIterator([\"a\", \"b\"]);\n\nit.next(); // { value: \"a\", done: false }\nit.next(); // { value: \"b\", done: false }\nit.next(); // { value: undefined, done: true }\n\nfunction makeIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n  };\n}\n","js",[449],{"type":435,"tag":450,"props":451,"children":452},"code",{"__ignoreMap":430},[453,465,474,483,492,501,562,572,607,636,665,673,702,730,745,769,801,866,914,928,941],{"type":435,"tag":454,"props":455,"children":458},"span",{"class":456,"line":457},"line",1,[459],{"type":435,"tag":454,"props":460,"children":462},{"style":461},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[463],{"type":441,"value":464},"/*\n",{"type":435,"tag":454,"props":466,"children":468},{"class":456,"line":467},2,[469],{"type":435,"tag":454,"props":470,"children":471},{"style":461},[472],{"type":441,"value":473}," * 这是一个手写的迭代器(Iterator)\n",{"type":435,"tag":454,"props":475,"children":477},{"class":456,"line":476},3,[478],{"type":435,"tag":454,"props":479,"children":480},{"style":461},[481],{"type":441,"value":482}," * 满足迭代器协议的对象。\n",{"type":435,"tag":454,"props":484,"children":486},{"class":456,"line":485},4,[487],{"type":435,"tag":454,"props":488,"children":489},{"style":461},[490],{"type":441,"value":491}," * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n",{"type":435,"tag":454,"props":493,"children":495},{"class":456,"line":494},5,[496],{"type":435,"tag":454,"props":497,"children":498},{"style":461},[499],{"type":441,"value":500}," */\n",{"type":435,"tag":454,"props":502,"children":504},{"class":456,"line":503},6,[505,511,517,523,529,535,541,547,552,557],{"type":435,"tag":454,"props":506,"children":508},{"style":507},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[509],{"type":441,"value":510},"var",{"type":435,"tag":454,"props":512,"children":514},{"style":513},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[515],{"type":441,"value":516}," it",{"type":435,"tag":454,"props":518,"children":520},{"style":519},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[521],{"type":441,"value":522}," =",{"type":435,"tag":454,"props":524,"children":526},{"style":525},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[527],{"type":441,"value":528}," makeIterator",{"type":435,"tag":454,"props":530,"children":532},{"style":531},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[533],{"type":441,"value":534},"([",{"type":435,"tag":454,"props":536,"children":538},{"style":537},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[539],{"type":441,"value":540},"\"a\"",{"type":435,"tag":454,"props":542,"children":544},{"style":543},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[545],{"type":441,"value":546},",",{"type":435,"tag":454,"props":548,"children":549},{"style":537},[550],{"type":441,"value":551}," \"b\"",{"type":435,"tag":454,"props":553,"children":554},{"style":531},[555],{"type":441,"value":556},"])",{"type":435,"tag":454,"props":558,"children":559},{"style":543},[560],{"type":441,"value":561},";\n",{"type":435,"tag":454,"props":563,"children":565},{"class":456,"line":564},7,[566],{"type":435,"tag":454,"props":567,"children":569},{"emptyLinePlaceholder":568},true,[570],{"type":441,"value":571},"\n",{"type":435,"tag":454,"props":573,"children":575},{"class":456,"line":574},8,[576,581,587,592,597,602],{"type":435,"tag":454,"props":577,"children":578},{"style":513},[579],{"type":441,"value":580},"it",{"type":435,"tag":454,"props":582,"children":584},{"style":583},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[585],{"type":441,"value":586},".",{"type":435,"tag":454,"props":588,"children":589},{"style":525},[590],{"type":441,"value":591},"next",{"type":435,"tag":454,"props":593,"children":594},{"style":531},[595],{"type":441,"value":596},"()",{"type":435,"tag":454,"props":598,"children":599},{"style":543},[600],{"type":441,"value":601},";",{"type":435,"tag":454,"props":603,"children":604},{"style":461},[605],{"type":441,"value":606}," // { value: \"a\", done: false }\n",{"type":435,"tag":454,"props":608,"children":610},{"class":456,"line":609},9,[611,615,619,623,627,631],{"type":435,"tag":454,"props":612,"children":613},{"style":513},[614],{"type":441,"value":580},{"type":435,"tag":454,"props":616,"children":617},{"style":583},[618],{"type":441,"value":586},{"type":435,"tag":454,"props":620,"children":621},{"style":525},[622],{"type":441,"value":591},{"type":435,"tag":454,"props":624,"children":625},{"style":531},[626],{"type":441,"value":596},{"type":435,"tag":454,"props":628,"children":629},{"style":543},[630],{"type":441,"value":601},{"type":435,"tag":454,"props":632,"children":633},{"style":461},[634],{"type":441,"value":635}," // { value: \"b\", done: false }\n",{"type":435,"tag":454,"props":637,"children":639},{"class":456,"line":638},10,[640,644,648,652,656,660],{"type":435,"tag":454,"props":641,"children":642},{"style":513},[643],{"type":441,"value":580},{"type":435,"tag":454,"props":645,"children":646},{"style":583},[647],{"type":441,"value":586},{"type":435,"tag":454,"props":649,"children":650},{"style":525},[651],{"type":441,"value":591},{"type":435,"tag":454,"props":653,"children":654},{"style":531},[655],{"type":441,"value":596},{"type":435,"tag":454,"props":657,"children":658},{"style":543},[659],{"type":441,"value":601},{"type":435,"tag":454,"props":661,"children":662},{"style":461},[663],{"type":441,"value":664}," // { value: undefined, done: true }\n",{"type":435,"tag":454,"props":666,"children":668},{"class":456,"line":667},11,[669],{"type":435,"tag":454,"props":670,"children":671},{"emptyLinePlaceholder":568},[672],{"type":441,"value":571},{"type":435,"tag":454,"props":674,"children":676},{"class":456,"line":675},12,[677,682,686,691,697],{"type":435,"tag":454,"props":678,"children":679},{"style":507},[680],{"type":441,"value":681},"function",{"type":435,"tag":454,"props":683,"children":684},{"style":525},[685],{"type":441,"value":528},{"type":435,"tag":454,"props":687,"children":688},{"style":531},[689],{"type":441,"value":690},"(",{"type":435,"tag":454,"props":692,"children":694},{"style":693},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[695],{"type":441,"value":696},"array",{"type":435,"tag":454,"props":698,"children":699},{"style":531},[700],{"type":441,"value":701},") {\n",{"type":435,"tag":454,"props":703,"children":705},{"class":456,"line":704},13,[706,711,716,720,726],{"type":435,"tag":454,"props":707,"children":708},{"style":507},[709],{"type":441,"value":710},"  var",{"type":435,"tag":454,"props":712,"children":713},{"style":513},[714],{"type":441,"value":715}," nextIndex",{"type":435,"tag":454,"props":717,"children":718},{"style":519},[719],{"type":441,"value":522},{"type":435,"tag":454,"props":721,"children":723},{"style":722},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[724],{"type":441,"value":725}," 0",{"type":435,"tag":454,"props":727,"children":728},{"style":543},[729],{"type":441,"value":561},{"type":435,"tag":454,"props":731,"children":733},{"class":456,"line":732},14,[734,740],{"type":435,"tag":454,"props":735,"children":737},{"style":736},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[738],{"type":441,"value":739},"  return",{"type":435,"tag":454,"props":741,"children":742},{"style":531},[743],{"type":441,"value":744}," {\n",{"type":435,"tag":454,"props":746,"children":748},{"class":456,"line":747},15,[749,754,759,764],{"type":435,"tag":454,"props":750,"children":751},{"style":525},[752],{"type":441,"value":753},"    next",{"type":435,"tag":454,"props":755,"children":756},{"style":543},[757],{"type":441,"value":758},":",{"type":435,"tag":454,"props":760,"children":761},{"style":507},[762],{"type":441,"value":763}," function",{"type":435,"tag":454,"props":765,"children":766},{"style":531},[767],{"type":441,"value":768}," () {\n",{"type":435,"tag":454,"props":770,"children":772},{"class":456,"line":771},16,[773,778,782,787,792,796],{"type":435,"tag":454,"props":774,"children":775},{"style":736},[776],{"type":441,"value":777},"      return",{"type":435,"tag":454,"props":779,"children":780},{"style":513},[781],{"type":441,"value":715},{"type":435,"tag":454,"props":783,"children":784},{"style":519},[785],{"type":441,"value":786}," \u003C",{"type":435,"tag":454,"props":788,"children":789},{"style":513},[790],{"type":441,"value":791}," array",{"type":435,"tag":454,"props":793,"children":794},{"style":583},[795],{"type":441,"value":586},{"type":435,"tag":454,"props":797,"children":798},{"style":531},[799],{"type":441,"value":800},"length\n",{"type":435,"tag":454,"props":802,"children":804},{"class":456,"line":803},17,[805,810,815,819,823,828,833,838,843,847,852,856,861],{"type":435,"tag":454,"props":806,"children":807},{"style":519},[808],{"type":441,"value":809},"        ?",{"type":435,"tag":454,"props":811,"children":812},{"style":531},[813],{"type":441,"value":814}," { value",{"type":435,"tag":454,"props":816,"children":817},{"style":543},[818],{"type":441,"value":758},{"type":435,"tag":454,"props":820,"children":821},{"style":513},[822],{"type":441,"value":791},{"type":435,"tag":454,"props":824,"children":825},{"style":531},[826],{"type":441,"value":827},"[",{"type":435,"tag":454,"props":829,"children":830},{"style":513},[831],{"type":441,"value":832},"nextIndex",{"type":435,"tag":454,"props":834,"children":835},{"style":519},[836],{"type":441,"value":837},"++",{"type":435,"tag":454,"props":839,"children":840},{"style":531},[841],{"type":441,"value":842},"]",{"type":435,"tag":454,"props":844,"children":845},{"style":543},[846],{"type":441,"value":546},{"type":435,"tag":454,"props":848,"children":849},{"style":531},[850],{"type":441,"value":851}," done",{"type":435,"tag":454,"props":853,"children":854},{"style":543},[855],{"type":441,"value":758},{"type":435,"tag":454,"props":857,"children":858},{"style":722},[859],{"type":441,"value":860}," false",{"type":435,"tag":454,"props":862,"children":863},{"style":531},[864],{"type":441,"value":865}," }\n",{"type":435,"tag":454,"props":867,"children":869},{"class":456,"line":868},18,[870,875,879,883,888,892,896,900,905,910],{"type":435,"tag":454,"props":871,"children":872},{"style":519},[873],{"type":441,"value":874},"        :",{"type":435,"tag":454,"props":876,"children":877},{"style":531},[878],{"type":441,"value":814},{"type":435,"tag":454,"props":880,"children":881},{"style":543},[882],{"type":441,"value":758},{"type":435,"tag":454,"props":884,"children":885},{"style":722},[886],{"type":441,"value":887}," undefined",{"type":435,"tag":454,"props":889,"children":890},{"style":543},[891],{"type":441,"value":546},{"type":435,"tag":454,"props":893,"children":894},{"style":531},[895],{"type":441,"value":851},{"type":435,"tag":454,"props":897,"children":898},{"style":543},[899],{"type":441,"value":758},{"type":435,"tag":454,"props":901,"children":902},{"style":722},[903],{"type":441,"value":904}," true",{"type":435,"tag":454,"props":906,"children":907},{"style":531},[908],{"type":441,"value":909}," }",{"type":435,"tag":454,"props":911,"children":912},{"style":543},[913],{"type":441,"value":561},{"type":435,"tag":454,"props":915,"children":917},{"class":456,"line":916},19,[918,923],{"type":435,"tag":454,"props":919,"children":920},{"style":531},[921],{"type":441,"value":922},"    }",{"type":435,"tag":454,"props":924,"children":925},{"style":543},[926],{"type":441,"value":927},",\n",{"type":435,"tag":454,"props":929,"children":931},{"class":456,"line":930},20,[932,937],{"type":435,"tag":454,"props":933,"children":934},{"style":531},[935],{"type":441,"value":936},"  }",{"type":435,"tag":454,"props":938,"children":939},{"style":543},[940],{"type":441,"value":561},{"type":435,"tag":454,"props":942,"children":944},{"class":456,"line":943},21,[945],{"type":435,"tag":454,"props":946,"children":947},{"style":531},[948],{"type":441,"value":949},"}\n",{"type":435,"tag":436,"props":951,"children":953},{"id":952},"可迭代的迭代器",[954],{"type":441,"value":952},{"type":435,"tag":443,"props":956,"children":958},{"className":445,"code":957,"language":447,"meta":430,"style":430},"/**\n * 使迭代器可迭代\n * makeIterator 函数生成的迭代器并没有实现可迭代协议\n * 所以不能在 for...of 等语法中使用。\n * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n * 从新名了下函数名称 createIterator\n */\nfunction createIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n    [Symbol.iterator]: function () {\n      console.log(\"返回的迭代器:\", this);\n      return this; // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n    },\n  };\n}\n\nvar iterator = createIterator([1, 2, 3]);\nconsole.log(...iterator);\n",[959],{"type":435,"tag":450,"props":960,"children":961},{"__ignoreMap":430},[962,970,978,986,994,1002,1010,1017,1041,1064,1075,1094,1121,1176,1219,1230,1268,1313,1333,1344,1355,1362,1370,1426],{"type":435,"tag":454,"props":963,"children":964},{"class":456,"line":457},[965],{"type":435,"tag":454,"props":966,"children":967},{"style":461},[968],{"type":441,"value":969},"/**\n",{"type":435,"tag":454,"props":971,"children":972},{"class":456,"line":467},[973],{"type":435,"tag":454,"props":974,"children":975},{"style":461},[976],{"type":441,"value":977}," * 使迭代器可迭代\n",{"type":435,"tag":454,"props":979,"children":980},{"class":456,"line":476},[981],{"type":435,"tag":454,"props":982,"children":983},{"style":461},[984],{"type":441,"value":985}," * makeIterator 函数生成的迭代器并没有实现可迭代协议\n",{"type":435,"tag":454,"props":987,"children":988},{"class":456,"line":485},[989],{"type":435,"tag":454,"props":990,"children":991},{"style":461},[992],{"type":441,"value":993}," * 所以不能在 for...of 等语法中使用。\n",{"type":435,"tag":454,"props":995,"children":996},{"class":456,"line":494},[997],{"type":435,"tag":454,"props":998,"children":999},{"style":461},[1000],{"type":441,"value":1001}," * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n",{"type":435,"tag":454,"props":1003,"children":1004},{"class":456,"line":503},[1005],{"type":435,"tag":454,"props":1006,"children":1007},{"style":461},[1008],{"type":441,"value":1009}," * 从新名了下函数名称 createIterator\n",{"type":435,"tag":454,"props":1011,"children":1012},{"class":456,"line":564},[1013],{"type":435,"tag":454,"props":1014,"children":1015},{"style":461},[1016],{"type":441,"value":500},{"type":435,"tag":454,"props":1018,"children":1019},{"class":456,"line":574},[1020,1024,1029,1033,1037],{"type":435,"tag":454,"props":1021,"children":1022},{"style":507},[1023],{"type":441,"value":681},{"type":435,"tag":454,"props":1025,"children":1026},{"style":525},[1027],{"type":441,"value":1028}," createIterator",{"type":435,"tag":454,"props":1030,"children":1031},{"style":531},[1032],{"type":441,"value":690},{"type":435,"tag":454,"props":1034,"children":1035},{"style":693},[1036],{"type":441,"value":696},{"type":435,"tag":454,"props":1038,"children":1039},{"style":531},[1040],{"type":441,"value":701},{"type":435,"tag":454,"props":1042,"children":1043},{"class":456,"line":609},[1044,1048,1052,1056,1060],{"type":435,"tag":454,"props":1045,"children":1046},{"style":507},[1047],{"type":441,"value":710},{"type":435,"tag":454,"props":1049,"children":1050},{"style":513},[1051],{"type":441,"value":715},{"type":435,"tag":454,"props":1053,"children":1054},{"style":519},[1055],{"type":441,"value":522},{"type":435,"tag":454,"props":1057,"children":1058},{"style":722},[1059],{"type":441,"value":725},{"type":435,"tag":454,"props":1061,"children":1062},{"style":543},[1063],{"type":441,"value":561},{"type":435,"tag":454,"props":1065,"children":1066},{"class":456,"line":638},[1067,1071],{"type":435,"tag":454,"props":1068,"children":1069},{"style":736},[1070],{"type":441,"value":739},{"type":435,"tag":454,"props":1072,"children":1073},{"style":531},[1074],{"type":441,"value":744},{"type":435,"tag":454,"props":1076,"children":1077},{"class":456,"line":667},[1078,1082,1086,1090],{"type":435,"tag":454,"props":1079,"children":1080},{"style":525},[1081],{"type":441,"value":753},{"type":435,"tag":454,"props":1083,"children":1084},{"style":543},[1085],{"type":441,"value":758},{"type":435,"tag":454,"props":1087,"children":1088},{"style":507},[1089],{"type":441,"value":763},{"type":435,"tag":454,"props":1091,"children":1092},{"style":531},[1093],{"type":441,"value":768},{"type":435,"tag":454,"props":1095,"children":1096},{"class":456,"line":675},[1097,1101,1105,1109,1113,1117],{"type":435,"tag":454,"props":1098,"children":1099},{"style":736},[1100],{"type":441,"value":777},{"type":435,"tag":454,"props":1102,"children":1103},{"style":513},[1104],{"type":441,"value":715},{"type":435,"tag":454,"props":1106,"children":1107},{"style":519},[1108],{"type":441,"value":786},{"type":435,"tag":454,"props":1110,"children":1111},{"style":513},[1112],{"type":441,"value":791},{"type":435,"tag":454,"props":1114,"children":1115},{"style":583},[1116],{"type":441,"value":586},{"type":435,"tag":454,"props":1118,"children":1119},{"style":531},[1120],{"type":441,"value":800},{"type":435,"tag":454,"props":1122,"children":1123},{"class":456,"line":704},[1124,1128,1132,1136,1140,1144,1148,1152,1156,1160,1164,1168,1172],{"type":435,"tag":454,"props":1125,"children":1126},{"style":519},[1127],{"type":441,"value":809},{"type":435,"tag":454,"props":1129,"children":1130},{"style":531},[1131],{"type":441,"value":814},{"type":435,"tag":454,"props":1133,"children":1134},{"style":543},[1135],{"type":441,"value":758},{"type":435,"tag":454,"props":1137,"children":1138},{"style":513},[1139],{"type":441,"value":791},{"type":435,"tag":454,"props":1141,"children":1142},{"style":531},[1143],{"type":441,"value":827},{"type":435,"tag":454,"props":1145,"children":1146},{"style":513},[1147],{"type":441,"value":832},{"type":435,"tag":454,"props":1149,"children":1150},{"style":519},[1151],{"type":441,"value":837},{"type":435,"tag":454,"props":1153,"children":1154},{"style":531},[1155],{"type":441,"value":842},{"type":435,"tag":454,"props":1157,"children":1158},{"style":543},[1159],{"type":441,"value":546},{"type":435,"tag":454,"props":1161,"children":1162},{"style":531},[1163],{"type":441,"value":851},{"type":435,"tag":454,"props":1165,"children":1166},{"style":543},[1167],{"type":441,"value":758},{"type":435,"tag":454,"props":1169,"children":1170},{"style":722},[1171],{"type":441,"value":860},{"type":435,"tag":454,"props":1173,"children":1174},{"style":531},[1175],{"type":441,"value":865},{"type":435,"tag":454,"props":1177,"children":1178},{"class":456,"line":732},[1179,1183,1187,1191,1195,1199,1203,1207,1211,1215],{"type":435,"tag":454,"props":1180,"children":1181},{"style":519},[1182],{"type":441,"value":874},{"type":435,"tag":454,"props":1184,"children":1185},{"style":531},[1186],{"type":441,"value":814},{"type":435,"tag":454,"props":1188,"children":1189},{"style":543},[1190],{"type":441,"value":758},{"type":435,"tag":454,"props":1192,"children":1193},{"style":722},[1194],{"type":441,"value":887},{"type":435,"tag":454,"props":1196,"children":1197},{"style":543},[1198],{"type":441,"value":546},{"type":435,"tag":454,"props":1200,"children":1201},{"style":531},[1202],{"type":441,"value":851},{"type":435,"tag":454,"props":1204,"children":1205},{"style":543},[1206],{"type":441,"value":758},{"type":435,"tag":454,"props":1208,"children":1209},{"style":722},[1210],{"type":441,"value":904},{"type":435,"tag":454,"props":1212,"children":1213},{"style":531},[1214],{"type":441,"value":909},{"type":435,"tag":454,"props":1216,"children":1217},{"style":543},[1218],{"type":441,"value":561},{"type":435,"tag":454,"props":1220,"children":1221},{"class":456,"line":747},[1222,1226],{"type":435,"tag":454,"props":1223,"children":1224},{"style":531},[1225],{"type":441,"value":922},{"type":435,"tag":454,"props":1227,"children":1228},{"style":543},[1229],{"type":441,"value":927},{"type":435,"tag":454,"props":1231,"children":1232},{"class":456,"line":771},[1233,1238,1243,1247,1252,1256,1260,1264],{"type":435,"tag":454,"props":1234,"children":1235},{"style":531},[1236],{"type":441,"value":1237},"    [",{"type":435,"tag":454,"props":1239,"children":1240},{"style":513},[1241],{"type":441,"value":1242},"Symbol",{"type":435,"tag":454,"props":1244,"children":1245},{"style":583},[1246],{"type":441,"value":586},{"type":435,"tag":454,"props":1248,"children":1249},{"style":513},[1250],{"type":441,"value":1251},"iterator",{"type":435,"tag":454,"props":1253,"children":1254},{"style":531},[1255],{"type":441,"value":842},{"type":435,"tag":454,"props":1257,"children":1258},{"style":543},[1259],{"type":441,"value":758},{"type":435,"tag":454,"props":1261,"children":1262},{"style":507},[1263],{"type":441,"value":763},{"type":435,"tag":454,"props":1265,"children":1266},{"style":531},[1267],{"type":441,"value":768},{"type":435,"tag":454,"props":1269,"children":1270},{"class":456,"line":803},[1271,1276,1280,1285,1289,1294,1298,1304,1309],{"type":435,"tag":454,"props":1272,"children":1273},{"style":513},[1274],{"type":441,"value":1275},"      console",{"type":435,"tag":454,"props":1277,"children":1278},{"style":583},[1279],{"type":441,"value":586},{"type":435,"tag":454,"props":1281,"children":1282},{"style":525},[1283],{"type":441,"value":1284},"log",{"type":435,"tag":454,"props":1286,"children":1287},{"style":531},[1288],{"type":441,"value":690},{"type":435,"tag":454,"props":1290,"children":1291},{"style":537},[1292],{"type":441,"value":1293},"\"返回的迭代器:\"",{"type":435,"tag":454,"props":1295,"children":1296},{"style":543},[1297],{"type":441,"value":546},{"type":435,"tag":454,"props":1299,"children":1301},{"style":1300},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[1302],{"type":441,"value":1303}," this",{"type":435,"tag":454,"props":1305,"children":1306},{"style":531},[1307],{"type":441,"value":1308},")",{"type":435,"tag":454,"props":1310,"children":1311},{"style":543},[1312],{"type":441,"value":561},{"type":435,"tag":454,"props":1314,"children":1315},{"class":456,"line":868},[1316,1320,1324,1328],{"type":435,"tag":454,"props":1317,"children":1318},{"style":736},[1319],{"type":441,"value":777},{"type":435,"tag":454,"props":1321,"children":1322},{"style":1300},[1323],{"type":441,"value":1303},{"type":435,"tag":454,"props":1325,"children":1326},{"style":543},[1327],{"type":441,"value":601},{"type":435,"tag":454,"props":1329,"children":1330},{"style":461},[1331],{"type":441,"value":1332}," // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n",{"type":435,"tag":454,"props":1334,"children":1335},{"class":456,"line":916},[1336,1340],{"type":435,"tag":454,"props":1337,"children":1338},{"style":531},[1339],{"type":441,"value":922},{"type":435,"tag":454,"props":1341,"children":1342},{"style":543},[1343],{"type":441,"value":927},{"type":435,"tag":454,"props":1345,"children":1346},{"class":456,"line":930},[1347,1351],{"type":435,"tag":454,"props":1348,"children":1349},{"style":531},[1350],{"type":441,"value":936},{"type":435,"tag":454,"props":1352,"children":1353},{"style":543},[1354],{"type":441,"value":561},{"type":435,"tag":454,"props":1356,"children":1357},{"class":456,"line":943},[1358],{"type":435,"tag":454,"props":1359,"children":1360},{"style":531},[1361],{"type":441,"value":949},{"type":435,"tag":454,"props":1363,"children":1365},{"class":456,"line":1364},22,[1366],{"type":435,"tag":454,"props":1367,"children":1368},{"emptyLinePlaceholder":568},[1369],{"type":441,"value":571},{"type":435,"tag":454,"props":1371,"children":1373},{"class":456,"line":1372},23,[1374,1378,1383,1387,1391,1395,1400,1404,1409,1413,1418,1422],{"type":435,"tag":454,"props":1375,"children":1376},{"style":507},[1377],{"type":441,"value":510},{"type":435,"tag":454,"props":1379,"children":1380},{"style":513},[1381],{"type":441,"value":1382}," iterator",{"type":435,"tag":454,"props":1384,"children":1385},{"style":519},[1386],{"type":441,"value":522},{"type":435,"tag":454,"props":1388,"children":1389},{"style":525},[1390],{"type":441,"value":1028},{"type":435,"tag":454,"props":1392,"children":1393},{"style":531},[1394],{"type":441,"value":534},{"type":435,"tag":454,"props":1396,"children":1397},{"style":722},[1398],{"type":441,"value":1399},"1",{"type":435,"tag":454,"props":1401,"children":1402},{"style":543},[1403],{"type":441,"value":546},{"type":435,"tag":454,"props":1405,"children":1406},{"style":722},[1407],{"type":441,"value":1408}," 2",{"type":435,"tag":454,"props":1410,"children":1411},{"style":543},[1412],{"type":441,"value":546},{"type":435,"tag":454,"props":1414,"children":1415},{"style":722},[1416],{"type":441,"value":1417}," 3",{"type":435,"tag":454,"props":1419,"children":1420},{"style":531},[1421],{"type":441,"value":556},{"type":435,"tag":454,"props":1423,"children":1424},{"style":543},[1425],{"type":441,"value":561},{"type":435,"tag":454,"props":1427,"children":1429},{"class":456,"line":1428},24,[1430,1435,1439,1443,1447,1452,1456,1460],{"type":435,"tag":454,"props":1431,"children":1432},{"style":513},[1433],{"type":441,"value":1434},"console",{"type":435,"tag":454,"props":1436,"children":1437},{"style":583},[1438],{"type":441,"value":586},{"type":435,"tag":454,"props":1440,"children":1441},{"style":525},[1442],{"type":441,"value":1284},{"type":435,"tag":454,"props":1444,"children":1445},{"style":531},[1446],{"type":441,"value":690},{"type":435,"tag":454,"props":1448,"children":1449},{"style":519},[1450],{"type":441,"value":1451},"...",{"type":435,"tag":454,"props":1453,"children":1454},{"style":513},[1455],{"type":441,"value":1251},{"type":435,"tag":454,"props":1457,"children":1458},{"style":531},[1459],{"type":441,"value":1308},{"type":435,"tag":454,"props":1461,"children":1462},{"style":543},[1463],{"type":441,"value":561},{"type":435,"tag":1465,"props":1466,"children":1467},"style",{},[1468],{"type":441,"value":1469},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":430,"searchDepth":494,"depth":494,"links":1471},[1472,1473],{"id":438,"depth":467,"text":438},{"id":952,"depth":467,"text":952},"markdown","content:3.frontend-code-assessment:1.source:1.native-api:7.iterator.md","content","3.frontend-code-assessment/1.source/1.native-api/7.iterator.md","md",[1480,1482],{"_path":294,"title":293,"description":1481},"JSON.stringify() 方法将一个 js 对象或值转换为 json 字符串，如果指定了一个 replacer 函数，则可以选择性地替换值，或者指定的 replacer 是数组，则可选择性地仅包含数组指定的属性。",{"_path":304,"title":303,"description":430},1713426455333]