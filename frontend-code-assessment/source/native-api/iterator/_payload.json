[{"data":1,"prerenderedAt":1508},["Reactive",2],{"navigation":3,"/frontend-code-assessment/source/native-api/iterator":452,"/frontend-code-assessment/source/native-api/iterator-surround":1504},[4,259,287,431,438],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately",{"title":260,"_path":261,"children":262},"前端八股文","/frontend-endorsement",[263,274],{"title":264,"_path":265,"children":266},"构建工具","/frontend-endorsement/build-tools",[267],{"title":268,"_path":269,"children":270},"Webpack","/frontend-endorsement/build-tools/webpack",[271],{"title":272,"_path":273},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":275,"_path":276,"children":277},"Html","/frontend-endorsement/html",[278,281,284],{"title":279,"_path":280},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":282,"_path":283},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":285,"_path":286},"离线存储","/frontend-endorsement/html/offline-storage",{"title":288,"_path":289,"children":290},"前端代码考核","/frontend-code-assessment",[291,340,424],{"title":292,"_path":293,"children":294},"源码实现","/frontend-code-assessment/source",[295,320,333],{"title":296,"_path":297,"children":298},"原生 api","/frontend-code-assessment/source/native-api",[299,302,305,308,311,314,317],{"title":300,"_path":301},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":303,"_path":304},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":306,"_path":307},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":309,"_path":310},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":312,"_path":313},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":315,"_path":316},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":318,"_path":319},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":321,"_path":322,"children":323},"数组 Array","/frontend-code-assessment/source/array",[324,327,330],{"title":325,"_path":326},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":328,"_path":329},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":331,"_path":332},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":334,"_path":335,"children":336},"字符串 String","/frontend-code-assessment/source/string",[337],{"title":338,"_path":339},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":341,"_path":342,"children":343},"业务场景","/frontend-code-assessment/scene",[344,366,373,376,379,382,385,388,391,394,397,400,403,406,409,412,415,418,421],{"title":345,"_path":346,"children":347},"Promise","/frontend-code-assessment/scene/promise",[348,351,354,357,360,363],{"title":349,"_path":350},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":352,"_path":353},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":355,"_path":356},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":358,"_path":359},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":361,"_path":362},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":364,"_path":365},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":367,"_path":368,"children":369},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[370],{"title":371,"_path":372},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":374,"_path":375},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":377,"_path":378},"倒计时","/frontend-code-assessment/scene/countdown",{"title":380,"_path":381},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":383,"_path":384},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":386,"_path":387},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":389,"_path":390},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":392,"_path":393},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":395,"_path":396},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":398,"_path":399},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":401,"_path":402},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":404,"_path":405},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":407,"_path":408},"随机数","/frontend-code-assessment/scene/random-number",{"title":410,"_path":411},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":413,"_path":414},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":416,"_path":417},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":419,"_path":420},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":422,"_path":423},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":425,"_path":426,"children":427},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[428],{"title":429,"_path":430},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":432,"_path":433,"children":434},"项目","/pro",[435],{"title":436,"_path":437},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":439,"_path":440,"children":441},"后端语言","/backend-languages",[442],{"title":443,"_path":444,"children":445},"Python","/backend-languages/python",[446,449],{"title":447,"_path":448},"基础","/backend-languages/python/base",{"title":450,"_path":451},"函数","/backend-languages/python/function",{"_path":319,"_dir":453,"_draft":454,"_partial":454,"_locale":455,"title":318,"description":455,"body":456,"_type":1499,"_id":1500,"_source":1501,"_file":1502,"_extension":1503},"native-api",false,"",{"type":457,"children":458,"toc":1495},"root",[459,467,975,980,1489],{"type":460,"tag":461,"props":462,"children":464},"element","h2",{"id":463},"实现迭代器函数",[465],{"type":466,"value":463},"text",{"type":460,"tag":468,"props":469,"children":473},"pre",{"className":470,"code":471,"language":472,"meta":455,"style":455},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/*\n * 这是一个手写的迭代器(Iterator)\n * 满足迭代器协议的对象。\n * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n */\nvar it = makeIterator([\"a\", \"b\"]);\n\nit.next(); // { value: \"a\", done: false }\nit.next(); // { value: \"b\", done: false }\nit.next(); // { value: undefined, done: true }\n\nfunction makeIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n  };\n}\n","js",[474],{"type":460,"tag":475,"props":476,"children":477},"code",{"__ignoreMap":455},[478,490,499,508,517,526,587,597,632,661,690,698,727,755,770,794,826,891,939,953,966],{"type":460,"tag":479,"props":480,"children":483},"span",{"class":481,"line":482},"line",1,[484],{"type":460,"tag":479,"props":485,"children":487},{"style":486},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[488],{"type":466,"value":489},"/*\n",{"type":460,"tag":479,"props":491,"children":493},{"class":481,"line":492},2,[494],{"type":460,"tag":479,"props":495,"children":496},{"style":486},[497],{"type":466,"value":498}," * 这是一个手写的迭代器(Iterator)\n",{"type":460,"tag":479,"props":500,"children":502},{"class":481,"line":501},3,[503],{"type":460,"tag":479,"props":504,"children":505},{"style":486},[506],{"type":466,"value":507}," * 满足迭代器协议的对象。\n",{"type":460,"tag":479,"props":509,"children":511},{"class":481,"line":510},4,[512],{"type":460,"tag":479,"props":513,"children":514},{"style":486},[515],{"type":466,"value":516}," * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n",{"type":460,"tag":479,"props":518,"children":520},{"class":481,"line":519},5,[521],{"type":460,"tag":479,"props":522,"children":523},{"style":486},[524],{"type":466,"value":525}," */\n",{"type":460,"tag":479,"props":527,"children":529},{"class":481,"line":528},6,[530,536,542,548,554,560,566,572,577,582],{"type":460,"tag":479,"props":531,"children":533},{"style":532},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[534],{"type":466,"value":535},"var",{"type":460,"tag":479,"props":537,"children":539},{"style":538},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[540],{"type":466,"value":541}," it",{"type":460,"tag":479,"props":543,"children":545},{"style":544},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[546],{"type":466,"value":547}," =",{"type":460,"tag":479,"props":549,"children":551},{"style":550},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[552],{"type":466,"value":553}," makeIterator",{"type":460,"tag":479,"props":555,"children":557},{"style":556},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[558],{"type":466,"value":559},"([",{"type":460,"tag":479,"props":561,"children":563},{"style":562},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[564],{"type":466,"value":565},"\"a\"",{"type":460,"tag":479,"props":567,"children":569},{"style":568},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[570],{"type":466,"value":571},",",{"type":460,"tag":479,"props":573,"children":574},{"style":562},[575],{"type":466,"value":576}," \"b\"",{"type":460,"tag":479,"props":578,"children":579},{"style":556},[580],{"type":466,"value":581},"])",{"type":460,"tag":479,"props":583,"children":584},{"style":568},[585],{"type":466,"value":586},";\n",{"type":460,"tag":479,"props":588,"children":590},{"class":481,"line":589},7,[591],{"type":460,"tag":479,"props":592,"children":594},{"emptyLinePlaceholder":593},true,[595],{"type":466,"value":596},"\n",{"type":460,"tag":479,"props":598,"children":600},{"class":481,"line":599},8,[601,606,612,617,622,627],{"type":460,"tag":479,"props":602,"children":603},{"style":538},[604],{"type":466,"value":605},"it",{"type":460,"tag":479,"props":607,"children":609},{"style":608},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[610],{"type":466,"value":611},".",{"type":460,"tag":479,"props":613,"children":614},{"style":550},[615],{"type":466,"value":616},"next",{"type":460,"tag":479,"props":618,"children":619},{"style":556},[620],{"type":466,"value":621},"()",{"type":460,"tag":479,"props":623,"children":624},{"style":568},[625],{"type":466,"value":626},";",{"type":460,"tag":479,"props":628,"children":629},{"style":486},[630],{"type":466,"value":631}," // { value: \"a\", done: false }\n",{"type":460,"tag":479,"props":633,"children":635},{"class":481,"line":634},9,[636,640,644,648,652,656],{"type":460,"tag":479,"props":637,"children":638},{"style":538},[639],{"type":466,"value":605},{"type":460,"tag":479,"props":641,"children":642},{"style":608},[643],{"type":466,"value":611},{"type":460,"tag":479,"props":645,"children":646},{"style":550},[647],{"type":466,"value":616},{"type":460,"tag":479,"props":649,"children":650},{"style":556},[651],{"type":466,"value":621},{"type":460,"tag":479,"props":653,"children":654},{"style":568},[655],{"type":466,"value":626},{"type":460,"tag":479,"props":657,"children":658},{"style":486},[659],{"type":466,"value":660}," // { value: \"b\", done: false }\n",{"type":460,"tag":479,"props":662,"children":664},{"class":481,"line":663},10,[665,669,673,677,681,685],{"type":460,"tag":479,"props":666,"children":667},{"style":538},[668],{"type":466,"value":605},{"type":460,"tag":479,"props":670,"children":671},{"style":608},[672],{"type":466,"value":611},{"type":460,"tag":479,"props":674,"children":675},{"style":550},[676],{"type":466,"value":616},{"type":460,"tag":479,"props":678,"children":679},{"style":556},[680],{"type":466,"value":621},{"type":460,"tag":479,"props":682,"children":683},{"style":568},[684],{"type":466,"value":626},{"type":460,"tag":479,"props":686,"children":687},{"style":486},[688],{"type":466,"value":689}," // { value: undefined, done: true }\n",{"type":460,"tag":479,"props":691,"children":693},{"class":481,"line":692},11,[694],{"type":460,"tag":479,"props":695,"children":696},{"emptyLinePlaceholder":593},[697],{"type":466,"value":596},{"type":460,"tag":479,"props":699,"children":701},{"class":481,"line":700},12,[702,707,711,716,722],{"type":460,"tag":479,"props":703,"children":704},{"style":532},[705],{"type":466,"value":706},"function",{"type":460,"tag":479,"props":708,"children":709},{"style":550},[710],{"type":466,"value":553},{"type":460,"tag":479,"props":712,"children":713},{"style":556},[714],{"type":466,"value":715},"(",{"type":460,"tag":479,"props":717,"children":719},{"style":718},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[720],{"type":466,"value":721},"array",{"type":460,"tag":479,"props":723,"children":724},{"style":556},[725],{"type":466,"value":726},") {\n",{"type":460,"tag":479,"props":728,"children":730},{"class":481,"line":729},13,[731,736,741,745,751],{"type":460,"tag":479,"props":732,"children":733},{"style":532},[734],{"type":466,"value":735},"  var",{"type":460,"tag":479,"props":737,"children":738},{"style":538},[739],{"type":466,"value":740}," nextIndex",{"type":460,"tag":479,"props":742,"children":743},{"style":544},[744],{"type":466,"value":547},{"type":460,"tag":479,"props":746,"children":748},{"style":747},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[749],{"type":466,"value":750}," 0",{"type":460,"tag":479,"props":752,"children":753},{"style":568},[754],{"type":466,"value":586},{"type":460,"tag":479,"props":756,"children":758},{"class":481,"line":757},14,[759,765],{"type":460,"tag":479,"props":760,"children":762},{"style":761},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[763],{"type":466,"value":764},"  return",{"type":460,"tag":479,"props":766,"children":767},{"style":556},[768],{"type":466,"value":769}," {\n",{"type":460,"tag":479,"props":771,"children":773},{"class":481,"line":772},15,[774,779,784,789],{"type":460,"tag":479,"props":775,"children":776},{"style":550},[777],{"type":466,"value":778},"    next",{"type":460,"tag":479,"props":780,"children":781},{"style":568},[782],{"type":466,"value":783},":",{"type":460,"tag":479,"props":785,"children":786},{"style":532},[787],{"type":466,"value":788}," function",{"type":460,"tag":479,"props":790,"children":791},{"style":556},[792],{"type":466,"value":793}," () {\n",{"type":460,"tag":479,"props":795,"children":797},{"class":481,"line":796},16,[798,803,807,812,817,821],{"type":460,"tag":479,"props":799,"children":800},{"style":761},[801],{"type":466,"value":802},"      return",{"type":460,"tag":479,"props":804,"children":805},{"style":538},[806],{"type":466,"value":740},{"type":460,"tag":479,"props":808,"children":809},{"style":544},[810],{"type":466,"value":811}," \u003C",{"type":460,"tag":479,"props":813,"children":814},{"style":538},[815],{"type":466,"value":816}," array",{"type":460,"tag":479,"props":818,"children":819},{"style":608},[820],{"type":466,"value":611},{"type":460,"tag":479,"props":822,"children":823},{"style":556},[824],{"type":466,"value":825},"length\n",{"type":460,"tag":479,"props":827,"children":829},{"class":481,"line":828},17,[830,835,840,844,848,853,858,863,868,872,877,881,886],{"type":460,"tag":479,"props":831,"children":832},{"style":544},[833],{"type":466,"value":834},"        ?",{"type":460,"tag":479,"props":836,"children":837},{"style":556},[838],{"type":466,"value":839}," { value",{"type":460,"tag":479,"props":841,"children":842},{"style":568},[843],{"type":466,"value":783},{"type":460,"tag":479,"props":845,"children":846},{"style":538},[847],{"type":466,"value":816},{"type":460,"tag":479,"props":849,"children":850},{"style":556},[851],{"type":466,"value":852},"[",{"type":460,"tag":479,"props":854,"children":855},{"style":538},[856],{"type":466,"value":857},"nextIndex",{"type":460,"tag":479,"props":859,"children":860},{"style":544},[861],{"type":466,"value":862},"++",{"type":460,"tag":479,"props":864,"children":865},{"style":556},[866],{"type":466,"value":867},"]",{"type":460,"tag":479,"props":869,"children":870},{"style":568},[871],{"type":466,"value":571},{"type":460,"tag":479,"props":873,"children":874},{"style":556},[875],{"type":466,"value":876}," done",{"type":460,"tag":479,"props":878,"children":879},{"style":568},[880],{"type":466,"value":783},{"type":460,"tag":479,"props":882,"children":883},{"style":747},[884],{"type":466,"value":885}," false",{"type":460,"tag":479,"props":887,"children":888},{"style":556},[889],{"type":466,"value":890}," }\n",{"type":460,"tag":479,"props":892,"children":894},{"class":481,"line":893},18,[895,900,904,908,913,917,921,925,930,935],{"type":460,"tag":479,"props":896,"children":897},{"style":544},[898],{"type":466,"value":899},"        :",{"type":460,"tag":479,"props":901,"children":902},{"style":556},[903],{"type":466,"value":839},{"type":460,"tag":479,"props":905,"children":906},{"style":568},[907],{"type":466,"value":783},{"type":460,"tag":479,"props":909,"children":910},{"style":747},[911],{"type":466,"value":912}," undefined",{"type":460,"tag":479,"props":914,"children":915},{"style":568},[916],{"type":466,"value":571},{"type":460,"tag":479,"props":918,"children":919},{"style":556},[920],{"type":466,"value":876},{"type":460,"tag":479,"props":922,"children":923},{"style":568},[924],{"type":466,"value":783},{"type":460,"tag":479,"props":926,"children":927},{"style":747},[928],{"type":466,"value":929}," true",{"type":460,"tag":479,"props":931,"children":932},{"style":556},[933],{"type":466,"value":934}," }",{"type":460,"tag":479,"props":936,"children":937},{"style":568},[938],{"type":466,"value":586},{"type":460,"tag":479,"props":940,"children":942},{"class":481,"line":941},19,[943,948],{"type":460,"tag":479,"props":944,"children":945},{"style":556},[946],{"type":466,"value":947},"    }",{"type":460,"tag":479,"props":949,"children":950},{"style":568},[951],{"type":466,"value":952},",\n",{"type":460,"tag":479,"props":954,"children":956},{"class":481,"line":955},20,[957,962],{"type":460,"tag":479,"props":958,"children":959},{"style":556},[960],{"type":466,"value":961},"  }",{"type":460,"tag":479,"props":963,"children":964},{"style":568},[965],{"type":466,"value":586},{"type":460,"tag":479,"props":967,"children":969},{"class":481,"line":968},21,[970],{"type":460,"tag":479,"props":971,"children":972},{"style":556},[973],{"type":466,"value":974},"}\n",{"type":460,"tag":461,"props":976,"children":978},{"id":977},"可迭代的迭代器",[979],{"type":466,"value":977},{"type":460,"tag":468,"props":981,"children":983},{"className":470,"code":982,"language":472,"meta":455,"style":455},"/**\n * 使迭代器可迭代\n * makeIterator 函数生成的迭代器并没有实现可迭代协议\n * 所以不能在 for...of 等语法中使用。\n * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n * 从新名了下函数名称 createIterator\n */\nfunction createIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n    [Symbol.iterator]: function () {\n      console.log(\"返回的迭代器:\", this);\n      return this; // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n    },\n  };\n}\n\nvar iterator = createIterator([1, 2, 3]);\nconsole.log(...iterator);\n",[984],{"type":460,"tag":475,"props":985,"children":986},{"__ignoreMap":455},[987,995,1003,1011,1019,1027,1035,1042,1066,1089,1100,1119,1146,1201,1244,1255,1293,1338,1358,1369,1380,1387,1395,1451],{"type":460,"tag":479,"props":988,"children":989},{"class":481,"line":482},[990],{"type":460,"tag":479,"props":991,"children":992},{"style":486},[993],{"type":466,"value":994},"/**\n",{"type":460,"tag":479,"props":996,"children":997},{"class":481,"line":492},[998],{"type":460,"tag":479,"props":999,"children":1000},{"style":486},[1001],{"type":466,"value":1002}," * 使迭代器可迭代\n",{"type":460,"tag":479,"props":1004,"children":1005},{"class":481,"line":501},[1006],{"type":460,"tag":479,"props":1007,"children":1008},{"style":486},[1009],{"type":466,"value":1010}," * makeIterator 函数生成的迭代器并没有实现可迭代协议\n",{"type":460,"tag":479,"props":1012,"children":1013},{"class":481,"line":510},[1014],{"type":460,"tag":479,"props":1015,"children":1016},{"style":486},[1017],{"type":466,"value":1018}," * 所以不能在 for...of 等语法中使用。\n",{"type":460,"tag":479,"props":1020,"children":1021},{"class":481,"line":519},[1022],{"type":460,"tag":479,"props":1023,"children":1024},{"style":486},[1025],{"type":466,"value":1026}," * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n",{"type":460,"tag":479,"props":1028,"children":1029},{"class":481,"line":528},[1030],{"type":460,"tag":479,"props":1031,"children":1032},{"style":486},[1033],{"type":466,"value":1034}," * 从新名了下函数名称 createIterator\n",{"type":460,"tag":479,"props":1036,"children":1037},{"class":481,"line":589},[1038],{"type":460,"tag":479,"props":1039,"children":1040},{"style":486},[1041],{"type":466,"value":525},{"type":460,"tag":479,"props":1043,"children":1044},{"class":481,"line":599},[1045,1049,1054,1058,1062],{"type":460,"tag":479,"props":1046,"children":1047},{"style":532},[1048],{"type":466,"value":706},{"type":460,"tag":479,"props":1050,"children":1051},{"style":550},[1052],{"type":466,"value":1053}," createIterator",{"type":460,"tag":479,"props":1055,"children":1056},{"style":556},[1057],{"type":466,"value":715},{"type":460,"tag":479,"props":1059,"children":1060},{"style":718},[1061],{"type":466,"value":721},{"type":460,"tag":479,"props":1063,"children":1064},{"style":556},[1065],{"type":466,"value":726},{"type":460,"tag":479,"props":1067,"children":1068},{"class":481,"line":634},[1069,1073,1077,1081,1085],{"type":460,"tag":479,"props":1070,"children":1071},{"style":532},[1072],{"type":466,"value":735},{"type":460,"tag":479,"props":1074,"children":1075},{"style":538},[1076],{"type":466,"value":740},{"type":460,"tag":479,"props":1078,"children":1079},{"style":544},[1080],{"type":466,"value":547},{"type":460,"tag":479,"props":1082,"children":1083},{"style":747},[1084],{"type":466,"value":750},{"type":460,"tag":479,"props":1086,"children":1087},{"style":568},[1088],{"type":466,"value":586},{"type":460,"tag":479,"props":1090,"children":1091},{"class":481,"line":663},[1092,1096],{"type":460,"tag":479,"props":1093,"children":1094},{"style":761},[1095],{"type":466,"value":764},{"type":460,"tag":479,"props":1097,"children":1098},{"style":556},[1099],{"type":466,"value":769},{"type":460,"tag":479,"props":1101,"children":1102},{"class":481,"line":692},[1103,1107,1111,1115],{"type":460,"tag":479,"props":1104,"children":1105},{"style":550},[1106],{"type":466,"value":778},{"type":460,"tag":479,"props":1108,"children":1109},{"style":568},[1110],{"type":466,"value":783},{"type":460,"tag":479,"props":1112,"children":1113},{"style":532},[1114],{"type":466,"value":788},{"type":460,"tag":479,"props":1116,"children":1117},{"style":556},[1118],{"type":466,"value":793},{"type":460,"tag":479,"props":1120,"children":1121},{"class":481,"line":700},[1122,1126,1130,1134,1138,1142],{"type":460,"tag":479,"props":1123,"children":1124},{"style":761},[1125],{"type":466,"value":802},{"type":460,"tag":479,"props":1127,"children":1128},{"style":538},[1129],{"type":466,"value":740},{"type":460,"tag":479,"props":1131,"children":1132},{"style":544},[1133],{"type":466,"value":811},{"type":460,"tag":479,"props":1135,"children":1136},{"style":538},[1137],{"type":466,"value":816},{"type":460,"tag":479,"props":1139,"children":1140},{"style":608},[1141],{"type":466,"value":611},{"type":460,"tag":479,"props":1143,"children":1144},{"style":556},[1145],{"type":466,"value":825},{"type":460,"tag":479,"props":1147,"children":1148},{"class":481,"line":729},[1149,1153,1157,1161,1165,1169,1173,1177,1181,1185,1189,1193,1197],{"type":460,"tag":479,"props":1150,"children":1151},{"style":544},[1152],{"type":466,"value":834},{"type":460,"tag":479,"props":1154,"children":1155},{"style":556},[1156],{"type":466,"value":839},{"type":460,"tag":479,"props":1158,"children":1159},{"style":568},[1160],{"type":466,"value":783},{"type":460,"tag":479,"props":1162,"children":1163},{"style":538},[1164],{"type":466,"value":816},{"type":460,"tag":479,"props":1166,"children":1167},{"style":556},[1168],{"type":466,"value":852},{"type":460,"tag":479,"props":1170,"children":1171},{"style":538},[1172],{"type":466,"value":857},{"type":460,"tag":479,"props":1174,"children":1175},{"style":544},[1176],{"type":466,"value":862},{"type":460,"tag":479,"props":1178,"children":1179},{"style":556},[1180],{"type":466,"value":867},{"type":460,"tag":479,"props":1182,"children":1183},{"style":568},[1184],{"type":466,"value":571},{"type":460,"tag":479,"props":1186,"children":1187},{"style":556},[1188],{"type":466,"value":876},{"type":460,"tag":479,"props":1190,"children":1191},{"style":568},[1192],{"type":466,"value":783},{"type":460,"tag":479,"props":1194,"children":1195},{"style":747},[1196],{"type":466,"value":885},{"type":460,"tag":479,"props":1198,"children":1199},{"style":556},[1200],{"type":466,"value":890},{"type":460,"tag":479,"props":1202,"children":1203},{"class":481,"line":757},[1204,1208,1212,1216,1220,1224,1228,1232,1236,1240],{"type":460,"tag":479,"props":1205,"children":1206},{"style":544},[1207],{"type":466,"value":899},{"type":460,"tag":479,"props":1209,"children":1210},{"style":556},[1211],{"type":466,"value":839},{"type":460,"tag":479,"props":1213,"children":1214},{"style":568},[1215],{"type":466,"value":783},{"type":460,"tag":479,"props":1217,"children":1218},{"style":747},[1219],{"type":466,"value":912},{"type":460,"tag":479,"props":1221,"children":1222},{"style":568},[1223],{"type":466,"value":571},{"type":460,"tag":479,"props":1225,"children":1226},{"style":556},[1227],{"type":466,"value":876},{"type":460,"tag":479,"props":1229,"children":1230},{"style":568},[1231],{"type":466,"value":783},{"type":460,"tag":479,"props":1233,"children":1234},{"style":747},[1235],{"type":466,"value":929},{"type":460,"tag":479,"props":1237,"children":1238},{"style":556},[1239],{"type":466,"value":934},{"type":460,"tag":479,"props":1241,"children":1242},{"style":568},[1243],{"type":466,"value":586},{"type":460,"tag":479,"props":1245,"children":1246},{"class":481,"line":772},[1247,1251],{"type":460,"tag":479,"props":1248,"children":1249},{"style":556},[1250],{"type":466,"value":947},{"type":460,"tag":479,"props":1252,"children":1253},{"style":568},[1254],{"type":466,"value":952},{"type":460,"tag":479,"props":1256,"children":1257},{"class":481,"line":796},[1258,1263,1268,1272,1277,1281,1285,1289],{"type":460,"tag":479,"props":1259,"children":1260},{"style":556},[1261],{"type":466,"value":1262},"    [",{"type":460,"tag":479,"props":1264,"children":1265},{"style":538},[1266],{"type":466,"value":1267},"Symbol",{"type":460,"tag":479,"props":1269,"children":1270},{"style":608},[1271],{"type":466,"value":611},{"type":460,"tag":479,"props":1273,"children":1274},{"style":538},[1275],{"type":466,"value":1276},"iterator",{"type":460,"tag":479,"props":1278,"children":1279},{"style":556},[1280],{"type":466,"value":867},{"type":460,"tag":479,"props":1282,"children":1283},{"style":568},[1284],{"type":466,"value":783},{"type":460,"tag":479,"props":1286,"children":1287},{"style":532},[1288],{"type":466,"value":788},{"type":460,"tag":479,"props":1290,"children":1291},{"style":556},[1292],{"type":466,"value":793},{"type":460,"tag":479,"props":1294,"children":1295},{"class":481,"line":828},[1296,1301,1305,1310,1314,1319,1323,1329,1334],{"type":460,"tag":479,"props":1297,"children":1298},{"style":538},[1299],{"type":466,"value":1300},"      console",{"type":460,"tag":479,"props":1302,"children":1303},{"style":608},[1304],{"type":466,"value":611},{"type":460,"tag":479,"props":1306,"children":1307},{"style":550},[1308],{"type":466,"value":1309},"log",{"type":460,"tag":479,"props":1311,"children":1312},{"style":556},[1313],{"type":466,"value":715},{"type":460,"tag":479,"props":1315,"children":1316},{"style":562},[1317],{"type":466,"value":1318},"\"返回的迭代器:\"",{"type":460,"tag":479,"props":1320,"children":1321},{"style":568},[1322],{"type":466,"value":571},{"type":460,"tag":479,"props":1324,"children":1326},{"style":1325},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[1327],{"type":466,"value":1328}," this",{"type":460,"tag":479,"props":1330,"children":1331},{"style":556},[1332],{"type":466,"value":1333},")",{"type":460,"tag":479,"props":1335,"children":1336},{"style":568},[1337],{"type":466,"value":586},{"type":460,"tag":479,"props":1339,"children":1340},{"class":481,"line":893},[1341,1345,1349,1353],{"type":460,"tag":479,"props":1342,"children":1343},{"style":761},[1344],{"type":466,"value":802},{"type":460,"tag":479,"props":1346,"children":1347},{"style":1325},[1348],{"type":466,"value":1328},{"type":460,"tag":479,"props":1350,"children":1351},{"style":568},[1352],{"type":466,"value":626},{"type":460,"tag":479,"props":1354,"children":1355},{"style":486},[1356],{"type":466,"value":1357}," // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n",{"type":460,"tag":479,"props":1359,"children":1360},{"class":481,"line":941},[1361,1365],{"type":460,"tag":479,"props":1362,"children":1363},{"style":556},[1364],{"type":466,"value":947},{"type":460,"tag":479,"props":1366,"children":1367},{"style":568},[1368],{"type":466,"value":952},{"type":460,"tag":479,"props":1370,"children":1371},{"class":481,"line":955},[1372,1376],{"type":460,"tag":479,"props":1373,"children":1374},{"style":556},[1375],{"type":466,"value":961},{"type":460,"tag":479,"props":1377,"children":1378},{"style":568},[1379],{"type":466,"value":586},{"type":460,"tag":479,"props":1381,"children":1382},{"class":481,"line":968},[1383],{"type":460,"tag":479,"props":1384,"children":1385},{"style":556},[1386],{"type":466,"value":974},{"type":460,"tag":479,"props":1388,"children":1390},{"class":481,"line":1389},22,[1391],{"type":460,"tag":479,"props":1392,"children":1393},{"emptyLinePlaceholder":593},[1394],{"type":466,"value":596},{"type":460,"tag":479,"props":1396,"children":1398},{"class":481,"line":1397},23,[1399,1403,1408,1412,1416,1420,1425,1429,1434,1438,1443,1447],{"type":460,"tag":479,"props":1400,"children":1401},{"style":532},[1402],{"type":466,"value":535},{"type":460,"tag":479,"props":1404,"children":1405},{"style":538},[1406],{"type":466,"value":1407}," iterator",{"type":460,"tag":479,"props":1409,"children":1410},{"style":544},[1411],{"type":466,"value":547},{"type":460,"tag":479,"props":1413,"children":1414},{"style":550},[1415],{"type":466,"value":1053},{"type":460,"tag":479,"props":1417,"children":1418},{"style":556},[1419],{"type":466,"value":559},{"type":460,"tag":479,"props":1421,"children":1422},{"style":747},[1423],{"type":466,"value":1424},"1",{"type":460,"tag":479,"props":1426,"children":1427},{"style":568},[1428],{"type":466,"value":571},{"type":460,"tag":479,"props":1430,"children":1431},{"style":747},[1432],{"type":466,"value":1433}," 2",{"type":460,"tag":479,"props":1435,"children":1436},{"style":568},[1437],{"type":466,"value":571},{"type":460,"tag":479,"props":1439,"children":1440},{"style":747},[1441],{"type":466,"value":1442}," 3",{"type":460,"tag":479,"props":1444,"children":1445},{"style":556},[1446],{"type":466,"value":581},{"type":460,"tag":479,"props":1448,"children":1449},{"style":568},[1450],{"type":466,"value":586},{"type":460,"tag":479,"props":1452,"children":1454},{"class":481,"line":1453},24,[1455,1460,1464,1468,1472,1477,1481,1485],{"type":460,"tag":479,"props":1456,"children":1457},{"style":538},[1458],{"type":466,"value":1459},"console",{"type":460,"tag":479,"props":1461,"children":1462},{"style":608},[1463],{"type":466,"value":611},{"type":460,"tag":479,"props":1465,"children":1466},{"style":550},[1467],{"type":466,"value":1309},{"type":460,"tag":479,"props":1469,"children":1470},{"style":556},[1471],{"type":466,"value":715},{"type":460,"tag":479,"props":1473,"children":1474},{"style":544},[1475],{"type":466,"value":1476},"...",{"type":460,"tag":479,"props":1478,"children":1479},{"style":538},[1480],{"type":466,"value":1276},{"type":460,"tag":479,"props":1482,"children":1483},{"style":556},[1484],{"type":466,"value":1333},{"type":460,"tag":479,"props":1486,"children":1487},{"style":568},[1488],{"type":466,"value":586},{"type":460,"tag":1490,"props":1491,"children":1492},"style",{},[1493],{"type":466,"value":1494},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":455,"searchDepth":519,"depth":519,"links":1496},[1497,1498],{"id":463,"depth":492,"text":463},{"id":977,"depth":492,"text":977},"markdown","content:3.frontend-code-assessment:1.source:1.native-api:7.iterator.md","content","3.frontend-code-assessment/1.source/1.native-api/7.iterator.md","md",[1505,1507],{"_path":316,"title":315,"description":1506},"JSON.stringify() 方法将一个 js 对象或值转换为 json 字符串，如果指定了一个 replacer 函数，则可以选择性地替换值，或者指定的 replacer 是数组，则可选择性地仅包含数组指定的属性。",{"_path":326,"title":325,"description":455},1713457427052]