[{"data":1,"prerenderedAt":1522},["Reactive",2],{"navigation":3,"/frontend-code-assessment/source/native-api/iterator":466,"/frontend-code-assessment/source/native-api/iterator-surround":1518},[4,269,298,443,451],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"前端八股文","/frontend-endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/frontend-endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/frontend-endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/frontend-endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":442},"前端代码考核","/frontend-code-assessment",[302,351,435],{"title":303,"_path":304,"children":305},"源码实现","/frontend-code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/frontend-code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/frontend-code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/frontend-code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/frontend-code-assessment/scene",[355,377,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432],{"title":356,"_path":357,"children":358},"Promise","/frontend-code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[381],{"title":382,"_path":383},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":385,"_path":386},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":388,"_path":389},"倒计时","/frontend-code-assessment/scene/countdown",{"title":391,"_path":392},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":394,"_path":395},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":397,"_path":398},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":400,"_path":401},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":403,"_path":404},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":406,"_path":407},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":409,"_path":410},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":412,"_path":413},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":415,"_path":416},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":418,"_path":419},"随机数","/frontend-code-assessment/scene/random-number",{"title":421,"_path":422},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":424,"_path":425},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":427,"_path":428},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":430,"_path":431},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":433,"_path":434},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":436,"_path":437,"children":438},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[439],{"title":440,"_path":441},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":444,"_path":445,"children":446,"icon":450},"项目","/pro",[447],{"title":448,"_path":449},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":452,"_path":453,"children":454,"icon":465},"后端语言","/backend-languages",[455],{"title":456,"_path":457,"children":458},"Python","/backend-languages/python",[459,462],{"title":460,"_path":461},"基础","/backend-languages/python/base",{"title":463,"_path":464},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":330,"_dir":467,"_draft":468,"_partial":468,"_locale":469,"title":329,"description":469,"body":470,"_type":1513,"_id":1514,"_source":1515,"_file":1516,"_extension":1517},"native-api",false,"",{"type":471,"children":472,"toc":1509},"root",[473,481,989,994,1503],{"type":474,"tag":475,"props":476,"children":478},"element","h2",{"id":477},"实现迭代器函数",[479],{"type":480,"value":477},"text",{"type":474,"tag":482,"props":483,"children":487},"pre",{"className":484,"code":485,"language":486,"meta":469,"style":469},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/*\n * 这是一个手写的迭代器(Iterator)\n * 满足迭代器协议的对象。\n * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n */\nvar it = makeIterator([\"a\", \"b\"]);\n\nit.next(); // { value: \"a\", done: false }\nit.next(); // { value: \"b\", done: false }\nit.next(); // { value: undefined, done: true }\n\nfunction makeIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n  };\n}\n","js",[488],{"type":474,"tag":489,"props":490,"children":491},"code",{"__ignoreMap":469},[492,504,513,522,531,540,601,611,646,675,704,712,741,769,784,808,840,905,953,967,980],{"type":474,"tag":493,"props":494,"children":497},"span",{"class":495,"line":496},"line",1,[498],{"type":474,"tag":493,"props":499,"children":501},{"style":500},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[502],{"type":480,"value":503},"/*\n",{"type":474,"tag":493,"props":505,"children":507},{"class":495,"line":506},2,[508],{"type":474,"tag":493,"props":509,"children":510},{"style":500},[511],{"type":480,"value":512}," * 这是一个手写的迭代器(Iterator)\n",{"type":474,"tag":493,"props":514,"children":516},{"class":495,"line":515},3,[517],{"type":474,"tag":493,"props":518,"children":519},{"style":500},[520],{"type":480,"value":521}," * 满足迭代器协议的对象。\n",{"type":474,"tag":493,"props":523,"children":525},{"class":495,"line":524},4,[526],{"type":474,"tag":493,"props":527,"children":528},{"style":500},[529],{"type":480,"value":530}," * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n",{"type":474,"tag":493,"props":532,"children":534},{"class":495,"line":533},5,[535],{"type":474,"tag":493,"props":536,"children":537},{"style":500},[538],{"type":480,"value":539}," */\n",{"type":474,"tag":493,"props":541,"children":543},{"class":495,"line":542},6,[544,550,556,562,568,574,580,586,591,596],{"type":474,"tag":493,"props":545,"children":547},{"style":546},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[548],{"type":480,"value":549},"var",{"type":474,"tag":493,"props":551,"children":553},{"style":552},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[554],{"type":480,"value":555}," it",{"type":474,"tag":493,"props":557,"children":559},{"style":558},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[560],{"type":480,"value":561}," =",{"type":474,"tag":493,"props":563,"children":565},{"style":564},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[566],{"type":480,"value":567}," makeIterator",{"type":474,"tag":493,"props":569,"children":571},{"style":570},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[572],{"type":480,"value":573},"([",{"type":474,"tag":493,"props":575,"children":577},{"style":576},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[578],{"type":480,"value":579},"\"a\"",{"type":474,"tag":493,"props":581,"children":583},{"style":582},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[584],{"type":480,"value":585},",",{"type":474,"tag":493,"props":587,"children":588},{"style":576},[589],{"type":480,"value":590}," \"b\"",{"type":474,"tag":493,"props":592,"children":593},{"style":570},[594],{"type":480,"value":595},"])",{"type":474,"tag":493,"props":597,"children":598},{"style":582},[599],{"type":480,"value":600},";\n",{"type":474,"tag":493,"props":602,"children":604},{"class":495,"line":603},7,[605],{"type":474,"tag":493,"props":606,"children":608},{"emptyLinePlaceholder":607},true,[609],{"type":480,"value":610},"\n",{"type":474,"tag":493,"props":612,"children":614},{"class":495,"line":613},8,[615,620,626,631,636,641],{"type":474,"tag":493,"props":616,"children":617},{"style":552},[618],{"type":480,"value":619},"it",{"type":474,"tag":493,"props":621,"children":623},{"style":622},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[624],{"type":480,"value":625},".",{"type":474,"tag":493,"props":627,"children":628},{"style":564},[629],{"type":480,"value":630},"next",{"type":474,"tag":493,"props":632,"children":633},{"style":570},[634],{"type":480,"value":635},"()",{"type":474,"tag":493,"props":637,"children":638},{"style":582},[639],{"type":480,"value":640},";",{"type":474,"tag":493,"props":642,"children":643},{"style":500},[644],{"type":480,"value":645}," // { value: \"a\", done: false }\n",{"type":474,"tag":493,"props":647,"children":649},{"class":495,"line":648},9,[650,654,658,662,666,670],{"type":474,"tag":493,"props":651,"children":652},{"style":552},[653],{"type":480,"value":619},{"type":474,"tag":493,"props":655,"children":656},{"style":622},[657],{"type":480,"value":625},{"type":474,"tag":493,"props":659,"children":660},{"style":564},[661],{"type":480,"value":630},{"type":474,"tag":493,"props":663,"children":664},{"style":570},[665],{"type":480,"value":635},{"type":474,"tag":493,"props":667,"children":668},{"style":582},[669],{"type":480,"value":640},{"type":474,"tag":493,"props":671,"children":672},{"style":500},[673],{"type":480,"value":674}," // { value: \"b\", done: false }\n",{"type":474,"tag":493,"props":676,"children":678},{"class":495,"line":677},10,[679,683,687,691,695,699],{"type":474,"tag":493,"props":680,"children":681},{"style":552},[682],{"type":480,"value":619},{"type":474,"tag":493,"props":684,"children":685},{"style":622},[686],{"type":480,"value":625},{"type":474,"tag":493,"props":688,"children":689},{"style":564},[690],{"type":480,"value":630},{"type":474,"tag":493,"props":692,"children":693},{"style":570},[694],{"type":480,"value":635},{"type":474,"tag":493,"props":696,"children":697},{"style":582},[698],{"type":480,"value":640},{"type":474,"tag":493,"props":700,"children":701},{"style":500},[702],{"type":480,"value":703}," // { value: undefined, done: true }\n",{"type":474,"tag":493,"props":705,"children":707},{"class":495,"line":706},11,[708],{"type":474,"tag":493,"props":709,"children":710},{"emptyLinePlaceholder":607},[711],{"type":480,"value":610},{"type":474,"tag":493,"props":713,"children":715},{"class":495,"line":714},12,[716,721,725,730,736],{"type":474,"tag":493,"props":717,"children":718},{"style":546},[719],{"type":480,"value":720},"function",{"type":474,"tag":493,"props":722,"children":723},{"style":564},[724],{"type":480,"value":567},{"type":474,"tag":493,"props":726,"children":727},{"style":570},[728],{"type":480,"value":729},"(",{"type":474,"tag":493,"props":731,"children":733},{"style":732},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[734],{"type":480,"value":735},"array",{"type":474,"tag":493,"props":737,"children":738},{"style":570},[739],{"type":480,"value":740},") {\n",{"type":474,"tag":493,"props":742,"children":744},{"class":495,"line":743},13,[745,750,755,759,765],{"type":474,"tag":493,"props":746,"children":747},{"style":546},[748],{"type":480,"value":749},"  var",{"type":474,"tag":493,"props":751,"children":752},{"style":552},[753],{"type":480,"value":754}," nextIndex",{"type":474,"tag":493,"props":756,"children":757},{"style":558},[758],{"type":480,"value":561},{"type":474,"tag":493,"props":760,"children":762},{"style":761},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[763],{"type":480,"value":764}," 0",{"type":474,"tag":493,"props":766,"children":767},{"style":582},[768],{"type":480,"value":600},{"type":474,"tag":493,"props":770,"children":772},{"class":495,"line":771},14,[773,779],{"type":474,"tag":493,"props":774,"children":776},{"style":775},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[777],{"type":480,"value":778},"  return",{"type":474,"tag":493,"props":780,"children":781},{"style":570},[782],{"type":480,"value":783}," {\n",{"type":474,"tag":493,"props":785,"children":787},{"class":495,"line":786},15,[788,793,798,803],{"type":474,"tag":493,"props":789,"children":790},{"style":564},[791],{"type":480,"value":792},"    next",{"type":474,"tag":493,"props":794,"children":795},{"style":582},[796],{"type":480,"value":797},":",{"type":474,"tag":493,"props":799,"children":800},{"style":546},[801],{"type":480,"value":802}," function",{"type":474,"tag":493,"props":804,"children":805},{"style":570},[806],{"type":480,"value":807}," () {\n",{"type":474,"tag":493,"props":809,"children":811},{"class":495,"line":810},16,[812,817,821,826,831,835],{"type":474,"tag":493,"props":813,"children":814},{"style":775},[815],{"type":480,"value":816},"      return",{"type":474,"tag":493,"props":818,"children":819},{"style":552},[820],{"type":480,"value":754},{"type":474,"tag":493,"props":822,"children":823},{"style":558},[824],{"type":480,"value":825}," \u003C",{"type":474,"tag":493,"props":827,"children":828},{"style":552},[829],{"type":480,"value":830}," array",{"type":474,"tag":493,"props":832,"children":833},{"style":622},[834],{"type":480,"value":625},{"type":474,"tag":493,"props":836,"children":837},{"style":570},[838],{"type":480,"value":839},"length\n",{"type":474,"tag":493,"props":841,"children":843},{"class":495,"line":842},17,[844,849,854,858,862,867,872,877,882,886,891,895,900],{"type":474,"tag":493,"props":845,"children":846},{"style":558},[847],{"type":480,"value":848},"        ?",{"type":474,"tag":493,"props":850,"children":851},{"style":570},[852],{"type":480,"value":853}," { value",{"type":474,"tag":493,"props":855,"children":856},{"style":582},[857],{"type":480,"value":797},{"type":474,"tag":493,"props":859,"children":860},{"style":552},[861],{"type":480,"value":830},{"type":474,"tag":493,"props":863,"children":864},{"style":570},[865],{"type":480,"value":866},"[",{"type":474,"tag":493,"props":868,"children":869},{"style":552},[870],{"type":480,"value":871},"nextIndex",{"type":474,"tag":493,"props":873,"children":874},{"style":558},[875],{"type":480,"value":876},"++",{"type":474,"tag":493,"props":878,"children":879},{"style":570},[880],{"type":480,"value":881},"]",{"type":474,"tag":493,"props":883,"children":884},{"style":582},[885],{"type":480,"value":585},{"type":474,"tag":493,"props":887,"children":888},{"style":570},[889],{"type":480,"value":890}," done",{"type":474,"tag":493,"props":892,"children":893},{"style":582},[894],{"type":480,"value":797},{"type":474,"tag":493,"props":896,"children":897},{"style":761},[898],{"type":480,"value":899}," false",{"type":474,"tag":493,"props":901,"children":902},{"style":570},[903],{"type":480,"value":904}," }\n",{"type":474,"tag":493,"props":906,"children":908},{"class":495,"line":907},18,[909,914,918,922,927,931,935,939,944,949],{"type":474,"tag":493,"props":910,"children":911},{"style":558},[912],{"type":480,"value":913},"        :",{"type":474,"tag":493,"props":915,"children":916},{"style":570},[917],{"type":480,"value":853},{"type":474,"tag":493,"props":919,"children":920},{"style":582},[921],{"type":480,"value":797},{"type":474,"tag":493,"props":923,"children":924},{"style":761},[925],{"type":480,"value":926}," undefined",{"type":474,"tag":493,"props":928,"children":929},{"style":582},[930],{"type":480,"value":585},{"type":474,"tag":493,"props":932,"children":933},{"style":570},[934],{"type":480,"value":890},{"type":474,"tag":493,"props":936,"children":937},{"style":582},[938],{"type":480,"value":797},{"type":474,"tag":493,"props":940,"children":941},{"style":761},[942],{"type":480,"value":943}," true",{"type":474,"tag":493,"props":945,"children":946},{"style":570},[947],{"type":480,"value":948}," }",{"type":474,"tag":493,"props":950,"children":951},{"style":582},[952],{"type":480,"value":600},{"type":474,"tag":493,"props":954,"children":956},{"class":495,"line":955},19,[957,962],{"type":474,"tag":493,"props":958,"children":959},{"style":570},[960],{"type":480,"value":961},"    }",{"type":474,"tag":493,"props":963,"children":964},{"style":582},[965],{"type":480,"value":966},",\n",{"type":474,"tag":493,"props":968,"children":970},{"class":495,"line":969},20,[971,976],{"type":474,"tag":493,"props":972,"children":973},{"style":570},[974],{"type":480,"value":975},"  }",{"type":474,"tag":493,"props":977,"children":978},{"style":582},[979],{"type":480,"value":600},{"type":474,"tag":493,"props":981,"children":983},{"class":495,"line":982},21,[984],{"type":474,"tag":493,"props":985,"children":986},{"style":570},[987],{"type":480,"value":988},"}\n",{"type":474,"tag":475,"props":990,"children":992},{"id":991},"可迭代的迭代器",[993],{"type":480,"value":991},{"type":474,"tag":482,"props":995,"children":997},{"className":484,"code":996,"language":486,"meta":469,"style":469},"/**\n * 使迭代器可迭代\n * makeIterator 函数生成的迭代器并没有实现可迭代协议\n * 所以不能在 for...of 等语法中使用。\n * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n * 从新名了下函数名称 createIterator\n */\nfunction createIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n    [Symbol.iterator]: function () {\n      console.log(\"返回的迭代器:\", this);\n      return this; // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n    },\n  };\n}\n\nvar iterator = createIterator([1, 2, 3]);\nconsole.log(...iterator);\n",[998],{"type":474,"tag":489,"props":999,"children":1000},{"__ignoreMap":469},[1001,1009,1017,1025,1033,1041,1049,1056,1080,1103,1114,1133,1160,1215,1258,1269,1307,1352,1372,1383,1394,1401,1409,1465],{"type":474,"tag":493,"props":1002,"children":1003},{"class":495,"line":496},[1004],{"type":474,"tag":493,"props":1005,"children":1006},{"style":500},[1007],{"type":480,"value":1008},"/**\n",{"type":474,"tag":493,"props":1010,"children":1011},{"class":495,"line":506},[1012],{"type":474,"tag":493,"props":1013,"children":1014},{"style":500},[1015],{"type":480,"value":1016}," * 使迭代器可迭代\n",{"type":474,"tag":493,"props":1018,"children":1019},{"class":495,"line":515},[1020],{"type":474,"tag":493,"props":1021,"children":1022},{"style":500},[1023],{"type":480,"value":1024}," * makeIterator 函数生成的迭代器并没有实现可迭代协议\n",{"type":474,"tag":493,"props":1026,"children":1027},{"class":495,"line":524},[1028],{"type":474,"tag":493,"props":1029,"children":1030},{"style":500},[1031],{"type":480,"value":1032}," * 所以不能在 for...of 等语法中使用。\n",{"type":474,"tag":493,"props":1034,"children":1035},{"class":495,"line":533},[1036],{"type":474,"tag":493,"props":1037,"children":1038},{"style":500},[1039],{"type":480,"value":1040}," * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n",{"type":474,"tag":493,"props":1042,"children":1043},{"class":495,"line":542},[1044],{"type":474,"tag":493,"props":1045,"children":1046},{"style":500},[1047],{"type":480,"value":1048}," * 从新名了下函数名称 createIterator\n",{"type":474,"tag":493,"props":1050,"children":1051},{"class":495,"line":603},[1052],{"type":474,"tag":493,"props":1053,"children":1054},{"style":500},[1055],{"type":480,"value":539},{"type":474,"tag":493,"props":1057,"children":1058},{"class":495,"line":613},[1059,1063,1068,1072,1076],{"type":474,"tag":493,"props":1060,"children":1061},{"style":546},[1062],{"type":480,"value":720},{"type":474,"tag":493,"props":1064,"children":1065},{"style":564},[1066],{"type":480,"value":1067}," createIterator",{"type":474,"tag":493,"props":1069,"children":1070},{"style":570},[1071],{"type":480,"value":729},{"type":474,"tag":493,"props":1073,"children":1074},{"style":732},[1075],{"type":480,"value":735},{"type":474,"tag":493,"props":1077,"children":1078},{"style":570},[1079],{"type":480,"value":740},{"type":474,"tag":493,"props":1081,"children":1082},{"class":495,"line":648},[1083,1087,1091,1095,1099],{"type":474,"tag":493,"props":1084,"children":1085},{"style":546},[1086],{"type":480,"value":749},{"type":474,"tag":493,"props":1088,"children":1089},{"style":552},[1090],{"type":480,"value":754},{"type":474,"tag":493,"props":1092,"children":1093},{"style":558},[1094],{"type":480,"value":561},{"type":474,"tag":493,"props":1096,"children":1097},{"style":761},[1098],{"type":480,"value":764},{"type":474,"tag":493,"props":1100,"children":1101},{"style":582},[1102],{"type":480,"value":600},{"type":474,"tag":493,"props":1104,"children":1105},{"class":495,"line":677},[1106,1110],{"type":474,"tag":493,"props":1107,"children":1108},{"style":775},[1109],{"type":480,"value":778},{"type":474,"tag":493,"props":1111,"children":1112},{"style":570},[1113],{"type":480,"value":783},{"type":474,"tag":493,"props":1115,"children":1116},{"class":495,"line":706},[1117,1121,1125,1129],{"type":474,"tag":493,"props":1118,"children":1119},{"style":564},[1120],{"type":480,"value":792},{"type":474,"tag":493,"props":1122,"children":1123},{"style":582},[1124],{"type":480,"value":797},{"type":474,"tag":493,"props":1126,"children":1127},{"style":546},[1128],{"type":480,"value":802},{"type":474,"tag":493,"props":1130,"children":1131},{"style":570},[1132],{"type":480,"value":807},{"type":474,"tag":493,"props":1134,"children":1135},{"class":495,"line":714},[1136,1140,1144,1148,1152,1156],{"type":474,"tag":493,"props":1137,"children":1138},{"style":775},[1139],{"type":480,"value":816},{"type":474,"tag":493,"props":1141,"children":1142},{"style":552},[1143],{"type":480,"value":754},{"type":474,"tag":493,"props":1145,"children":1146},{"style":558},[1147],{"type":480,"value":825},{"type":474,"tag":493,"props":1149,"children":1150},{"style":552},[1151],{"type":480,"value":830},{"type":474,"tag":493,"props":1153,"children":1154},{"style":622},[1155],{"type":480,"value":625},{"type":474,"tag":493,"props":1157,"children":1158},{"style":570},[1159],{"type":480,"value":839},{"type":474,"tag":493,"props":1161,"children":1162},{"class":495,"line":743},[1163,1167,1171,1175,1179,1183,1187,1191,1195,1199,1203,1207,1211],{"type":474,"tag":493,"props":1164,"children":1165},{"style":558},[1166],{"type":480,"value":848},{"type":474,"tag":493,"props":1168,"children":1169},{"style":570},[1170],{"type":480,"value":853},{"type":474,"tag":493,"props":1172,"children":1173},{"style":582},[1174],{"type":480,"value":797},{"type":474,"tag":493,"props":1176,"children":1177},{"style":552},[1178],{"type":480,"value":830},{"type":474,"tag":493,"props":1180,"children":1181},{"style":570},[1182],{"type":480,"value":866},{"type":474,"tag":493,"props":1184,"children":1185},{"style":552},[1186],{"type":480,"value":871},{"type":474,"tag":493,"props":1188,"children":1189},{"style":558},[1190],{"type":480,"value":876},{"type":474,"tag":493,"props":1192,"children":1193},{"style":570},[1194],{"type":480,"value":881},{"type":474,"tag":493,"props":1196,"children":1197},{"style":582},[1198],{"type":480,"value":585},{"type":474,"tag":493,"props":1200,"children":1201},{"style":570},[1202],{"type":480,"value":890},{"type":474,"tag":493,"props":1204,"children":1205},{"style":582},[1206],{"type":480,"value":797},{"type":474,"tag":493,"props":1208,"children":1209},{"style":761},[1210],{"type":480,"value":899},{"type":474,"tag":493,"props":1212,"children":1213},{"style":570},[1214],{"type":480,"value":904},{"type":474,"tag":493,"props":1216,"children":1217},{"class":495,"line":771},[1218,1222,1226,1230,1234,1238,1242,1246,1250,1254],{"type":474,"tag":493,"props":1219,"children":1220},{"style":558},[1221],{"type":480,"value":913},{"type":474,"tag":493,"props":1223,"children":1224},{"style":570},[1225],{"type":480,"value":853},{"type":474,"tag":493,"props":1227,"children":1228},{"style":582},[1229],{"type":480,"value":797},{"type":474,"tag":493,"props":1231,"children":1232},{"style":761},[1233],{"type":480,"value":926},{"type":474,"tag":493,"props":1235,"children":1236},{"style":582},[1237],{"type":480,"value":585},{"type":474,"tag":493,"props":1239,"children":1240},{"style":570},[1241],{"type":480,"value":890},{"type":474,"tag":493,"props":1243,"children":1244},{"style":582},[1245],{"type":480,"value":797},{"type":474,"tag":493,"props":1247,"children":1248},{"style":761},[1249],{"type":480,"value":943},{"type":474,"tag":493,"props":1251,"children":1252},{"style":570},[1253],{"type":480,"value":948},{"type":474,"tag":493,"props":1255,"children":1256},{"style":582},[1257],{"type":480,"value":600},{"type":474,"tag":493,"props":1259,"children":1260},{"class":495,"line":786},[1261,1265],{"type":474,"tag":493,"props":1262,"children":1263},{"style":570},[1264],{"type":480,"value":961},{"type":474,"tag":493,"props":1266,"children":1267},{"style":582},[1268],{"type":480,"value":966},{"type":474,"tag":493,"props":1270,"children":1271},{"class":495,"line":810},[1272,1277,1282,1286,1291,1295,1299,1303],{"type":474,"tag":493,"props":1273,"children":1274},{"style":570},[1275],{"type":480,"value":1276},"    [",{"type":474,"tag":493,"props":1278,"children":1279},{"style":552},[1280],{"type":480,"value":1281},"Symbol",{"type":474,"tag":493,"props":1283,"children":1284},{"style":622},[1285],{"type":480,"value":625},{"type":474,"tag":493,"props":1287,"children":1288},{"style":552},[1289],{"type":480,"value":1290},"iterator",{"type":474,"tag":493,"props":1292,"children":1293},{"style":570},[1294],{"type":480,"value":881},{"type":474,"tag":493,"props":1296,"children":1297},{"style":582},[1298],{"type":480,"value":797},{"type":474,"tag":493,"props":1300,"children":1301},{"style":546},[1302],{"type":480,"value":802},{"type":474,"tag":493,"props":1304,"children":1305},{"style":570},[1306],{"type":480,"value":807},{"type":474,"tag":493,"props":1308,"children":1309},{"class":495,"line":842},[1310,1315,1319,1324,1328,1333,1337,1343,1348],{"type":474,"tag":493,"props":1311,"children":1312},{"style":552},[1313],{"type":480,"value":1314},"      console",{"type":474,"tag":493,"props":1316,"children":1317},{"style":622},[1318],{"type":480,"value":625},{"type":474,"tag":493,"props":1320,"children":1321},{"style":564},[1322],{"type":480,"value":1323},"log",{"type":474,"tag":493,"props":1325,"children":1326},{"style":570},[1327],{"type":480,"value":729},{"type":474,"tag":493,"props":1329,"children":1330},{"style":576},[1331],{"type":480,"value":1332},"\"返回的迭代器:\"",{"type":474,"tag":493,"props":1334,"children":1335},{"style":582},[1336],{"type":480,"value":585},{"type":474,"tag":493,"props":1338,"children":1340},{"style":1339},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[1341],{"type":480,"value":1342}," this",{"type":474,"tag":493,"props":1344,"children":1345},{"style":570},[1346],{"type":480,"value":1347},")",{"type":474,"tag":493,"props":1349,"children":1350},{"style":582},[1351],{"type":480,"value":600},{"type":474,"tag":493,"props":1353,"children":1354},{"class":495,"line":907},[1355,1359,1363,1367],{"type":474,"tag":493,"props":1356,"children":1357},{"style":775},[1358],{"type":480,"value":816},{"type":474,"tag":493,"props":1360,"children":1361},{"style":1339},[1362],{"type":480,"value":1342},{"type":474,"tag":493,"props":1364,"children":1365},{"style":582},[1366],{"type":480,"value":640},{"type":474,"tag":493,"props":1368,"children":1369},{"style":500},[1370],{"type":480,"value":1371}," // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n",{"type":474,"tag":493,"props":1373,"children":1374},{"class":495,"line":955},[1375,1379],{"type":474,"tag":493,"props":1376,"children":1377},{"style":570},[1378],{"type":480,"value":961},{"type":474,"tag":493,"props":1380,"children":1381},{"style":582},[1382],{"type":480,"value":966},{"type":474,"tag":493,"props":1384,"children":1385},{"class":495,"line":969},[1386,1390],{"type":474,"tag":493,"props":1387,"children":1388},{"style":570},[1389],{"type":480,"value":975},{"type":474,"tag":493,"props":1391,"children":1392},{"style":582},[1393],{"type":480,"value":600},{"type":474,"tag":493,"props":1395,"children":1396},{"class":495,"line":982},[1397],{"type":474,"tag":493,"props":1398,"children":1399},{"style":570},[1400],{"type":480,"value":988},{"type":474,"tag":493,"props":1402,"children":1404},{"class":495,"line":1403},22,[1405],{"type":474,"tag":493,"props":1406,"children":1407},{"emptyLinePlaceholder":607},[1408],{"type":480,"value":610},{"type":474,"tag":493,"props":1410,"children":1412},{"class":495,"line":1411},23,[1413,1417,1422,1426,1430,1434,1439,1443,1448,1452,1457,1461],{"type":474,"tag":493,"props":1414,"children":1415},{"style":546},[1416],{"type":480,"value":549},{"type":474,"tag":493,"props":1418,"children":1419},{"style":552},[1420],{"type":480,"value":1421}," iterator",{"type":474,"tag":493,"props":1423,"children":1424},{"style":558},[1425],{"type":480,"value":561},{"type":474,"tag":493,"props":1427,"children":1428},{"style":564},[1429],{"type":480,"value":1067},{"type":474,"tag":493,"props":1431,"children":1432},{"style":570},[1433],{"type":480,"value":573},{"type":474,"tag":493,"props":1435,"children":1436},{"style":761},[1437],{"type":480,"value":1438},"1",{"type":474,"tag":493,"props":1440,"children":1441},{"style":582},[1442],{"type":480,"value":585},{"type":474,"tag":493,"props":1444,"children":1445},{"style":761},[1446],{"type":480,"value":1447}," 2",{"type":474,"tag":493,"props":1449,"children":1450},{"style":582},[1451],{"type":480,"value":585},{"type":474,"tag":493,"props":1453,"children":1454},{"style":761},[1455],{"type":480,"value":1456}," 3",{"type":474,"tag":493,"props":1458,"children":1459},{"style":570},[1460],{"type":480,"value":595},{"type":474,"tag":493,"props":1462,"children":1463},{"style":582},[1464],{"type":480,"value":600},{"type":474,"tag":493,"props":1466,"children":1468},{"class":495,"line":1467},24,[1469,1474,1478,1482,1486,1491,1495,1499],{"type":474,"tag":493,"props":1470,"children":1471},{"style":552},[1472],{"type":480,"value":1473},"console",{"type":474,"tag":493,"props":1475,"children":1476},{"style":622},[1477],{"type":480,"value":625},{"type":474,"tag":493,"props":1479,"children":1480},{"style":564},[1481],{"type":480,"value":1323},{"type":474,"tag":493,"props":1483,"children":1484},{"style":570},[1485],{"type":480,"value":729},{"type":474,"tag":493,"props":1487,"children":1488},{"style":558},[1489],{"type":480,"value":1490},"...",{"type":474,"tag":493,"props":1492,"children":1493},{"style":552},[1494],{"type":480,"value":1290},{"type":474,"tag":493,"props":1496,"children":1497},{"style":570},[1498],{"type":480,"value":1347},{"type":474,"tag":493,"props":1500,"children":1501},{"style":582},[1502],{"type":480,"value":600},{"type":474,"tag":1504,"props":1505,"children":1506},"style",{},[1507],{"type":480,"value":1508},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":469,"searchDepth":533,"depth":533,"links":1510},[1511,1512],{"id":477,"depth":506,"text":477},{"id":991,"depth":506,"text":991},"markdown","content:3.frontend-code-assessment:1.source:1.native-api:7.iterator.md","content","3.frontend-code-assessment/1.source/1.native-api/7.iterator.md","md",[1519,1521],{"_path":327,"title":326,"description":1520},"JSON.stringify() 方法将一个 js 对象或值转换为 json 字符串，如果指定了一个 replacer 函数，则可以选择性地替换值，或者指定的 replacer 是数组，则可选择性地仅包含数组指定的属性。",{"_path":337,"title":336,"description":469},1714007218037]