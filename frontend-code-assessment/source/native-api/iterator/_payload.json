[{"data":1,"prerenderedAt":1513},["Reactive",2],{"navigation":3,"/frontend-code-assessment/source/native-api/iterator":457,"/frontend-code-assessment/source/native-api/iterator-surround":1509},[4,260,289,434,442],{"title":5,"_path":6,"children":7,"icon":259},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":261,"_path":262,"children":263,"icon":288},"前端八股文","/frontend-endorsement",[264,275],{"title":265,"_path":266,"children":267},"构建工具","/frontend-endorsement/build-tools",[268],{"title":269,"_path":270,"children":271},"Webpack","/frontend-endorsement/build-tools/webpack",[272],{"title":273,"_path":274},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":276,"_path":277,"children":278},"Html","/frontend-endorsement/html",[279,282,285],{"title":280,"_path":281},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":283,"_path":284},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":286,"_path":287},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":290,"_path":291,"children":292,"icon":433},"前端代码考核","/frontend-code-assessment",[293,342,426],{"title":294,"_path":295,"children":296},"源码实现","/frontend-code-assessment/source",[297,322,335],{"title":298,"_path":299,"children":300},"原生 api","/frontend-code-assessment/source/native-api",[301,304,307,310,313,316,319],{"title":302,"_path":303},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":305,"_path":306},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":308,"_path":309},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":311,"_path":312},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":314,"_path":315},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":317,"_path":318},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":320,"_path":321},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":323,"_path":324,"children":325},"数组 Array","/frontend-code-assessment/source/array",[326,329,332],{"title":327,"_path":328},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":330,"_path":331},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":333,"_path":334},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":336,"_path":337,"children":338},"字符串 String","/frontend-code-assessment/source/string",[339],{"title":340,"_path":341},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":343,"_path":344,"children":345},"业务场景","/frontend-code-assessment/scene",[346,368,375,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423],{"title":347,"_path":348,"children":349},"Promise","/frontend-code-assessment/scene/promise",[350,353,356,359,362,365],{"title":351,"_path":352},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":354,"_path":355},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":357,"_path":358},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":360,"_path":361},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":363,"_path":364},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":366,"_path":367},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":369,"_path":370,"children":371},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[372],{"title":373,"_path":374},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":376,"_path":377},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":379,"_path":380},"倒计时","/frontend-code-assessment/scene/countdown",{"title":382,"_path":383},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":385,"_path":386},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":388,"_path":389},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":391,"_path":392},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":394,"_path":395},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":397,"_path":398},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":400,"_path":401},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":403,"_path":404},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":406,"_path":407},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":409,"_path":410},"随机数","/frontend-code-assessment/scene/random-number",{"title":412,"_path":413},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":415,"_path":416},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":418,"_path":419},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":421,"_path":422},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":424,"_path":425},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":427,"_path":428,"children":429},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[430],{"title":431,"_path":432},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":435,"_path":436,"children":437,"icon":441},"项目","/pro",[438],{"title":439,"_path":440},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":443,"_path":444,"children":445,"icon":456},"后端语言","/backend-languages",[446],{"title":447,"_path":448,"children":449},"Python","/backend-languages/python",[450,453],{"title":451,"_path":452},"基础","/backend-languages/python/base",{"title":454,"_path":455},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":321,"_dir":458,"_draft":459,"_partial":459,"_locale":460,"title":320,"description":460,"body":461,"_type":1504,"_id":1505,"_source":1506,"_file":1507,"_extension":1508},"native-api",false,"",{"type":462,"children":463,"toc":1500},"root",[464,472,980,985,1494],{"type":465,"tag":466,"props":467,"children":469},"element","h2",{"id":468},"实现迭代器函数",[470],{"type":471,"value":468},"text",{"type":465,"tag":473,"props":474,"children":478},"pre",{"className":475,"code":476,"language":477,"meta":460,"style":460},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/*\n * 这是一个手写的迭代器(Iterator)\n * 满足迭代器协议的对象。\n * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n */\nvar it = makeIterator([\"a\", \"b\"]);\n\nit.next(); // { value: \"a\", done: false }\nit.next(); // { value: \"b\", done: false }\nit.next(); // { value: undefined, done: true }\n\nfunction makeIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n  };\n}\n","js",[479],{"type":465,"tag":480,"props":481,"children":482},"code",{"__ignoreMap":460},[483,495,504,513,522,531,592,602,637,666,695,703,732,760,775,799,831,896,944,958,971],{"type":465,"tag":484,"props":485,"children":488},"span",{"class":486,"line":487},"line",1,[489],{"type":465,"tag":484,"props":490,"children":492},{"style":491},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[493],{"type":471,"value":494},"/*\n",{"type":465,"tag":484,"props":496,"children":498},{"class":486,"line":497},2,[499],{"type":465,"tag":484,"props":500,"children":501},{"style":491},[502],{"type":471,"value":503}," * 这是一个手写的迭代器(Iterator)\n",{"type":465,"tag":484,"props":505,"children":507},{"class":486,"line":506},3,[508],{"type":465,"tag":484,"props":509,"children":510},{"style":491},[511],{"type":471,"value":512}," * 满足迭代器协议的对象。\n",{"type":465,"tag":484,"props":514,"children":516},{"class":486,"line":515},4,[517],{"type":465,"tag":484,"props":518,"children":519},{"style":491},[520],{"type":471,"value":521}," * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n",{"type":465,"tag":484,"props":523,"children":525},{"class":486,"line":524},5,[526],{"type":465,"tag":484,"props":527,"children":528},{"style":491},[529],{"type":471,"value":530}," */\n",{"type":465,"tag":484,"props":532,"children":534},{"class":486,"line":533},6,[535,541,547,553,559,565,571,577,582,587],{"type":465,"tag":484,"props":536,"children":538},{"style":537},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[539],{"type":471,"value":540},"var",{"type":465,"tag":484,"props":542,"children":544},{"style":543},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[545],{"type":471,"value":546}," it",{"type":465,"tag":484,"props":548,"children":550},{"style":549},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[551],{"type":471,"value":552}," =",{"type":465,"tag":484,"props":554,"children":556},{"style":555},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[557],{"type":471,"value":558}," makeIterator",{"type":465,"tag":484,"props":560,"children":562},{"style":561},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[563],{"type":471,"value":564},"([",{"type":465,"tag":484,"props":566,"children":568},{"style":567},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[569],{"type":471,"value":570},"\"a\"",{"type":465,"tag":484,"props":572,"children":574},{"style":573},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[575],{"type":471,"value":576},",",{"type":465,"tag":484,"props":578,"children":579},{"style":567},[580],{"type":471,"value":581}," \"b\"",{"type":465,"tag":484,"props":583,"children":584},{"style":561},[585],{"type":471,"value":586},"])",{"type":465,"tag":484,"props":588,"children":589},{"style":573},[590],{"type":471,"value":591},";\n",{"type":465,"tag":484,"props":593,"children":595},{"class":486,"line":594},7,[596],{"type":465,"tag":484,"props":597,"children":599},{"emptyLinePlaceholder":598},true,[600],{"type":471,"value":601},"\n",{"type":465,"tag":484,"props":603,"children":605},{"class":486,"line":604},8,[606,611,617,622,627,632],{"type":465,"tag":484,"props":607,"children":608},{"style":543},[609],{"type":471,"value":610},"it",{"type":465,"tag":484,"props":612,"children":614},{"style":613},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[615],{"type":471,"value":616},".",{"type":465,"tag":484,"props":618,"children":619},{"style":555},[620],{"type":471,"value":621},"next",{"type":465,"tag":484,"props":623,"children":624},{"style":561},[625],{"type":471,"value":626},"()",{"type":465,"tag":484,"props":628,"children":629},{"style":573},[630],{"type":471,"value":631},";",{"type":465,"tag":484,"props":633,"children":634},{"style":491},[635],{"type":471,"value":636}," // { value: \"a\", done: false }\n",{"type":465,"tag":484,"props":638,"children":640},{"class":486,"line":639},9,[641,645,649,653,657,661],{"type":465,"tag":484,"props":642,"children":643},{"style":543},[644],{"type":471,"value":610},{"type":465,"tag":484,"props":646,"children":647},{"style":613},[648],{"type":471,"value":616},{"type":465,"tag":484,"props":650,"children":651},{"style":555},[652],{"type":471,"value":621},{"type":465,"tag":484,"props":654,"children":655},{"style":561},[656],{"type":471,"value":626},{"type":465,"tag":484,"props":658,"children":659},{"style":573},[660],{"type":471,"value":631},{"type":465,"tag":484,"props":662,"children":663},{"style":491},[664],{"type":471,"value":665}," // { value: \"b\", done: false }\n",{"type":465,"tag":484,"props":667,"children":669},{"class":486,"line":668},10,[670,674,678,682,686,690],{"type":465,"tag":484,"props":671,"children":672},{"style":543},[673],{"type":471,"value":610},{"type":465,"tag":484,"props":675,"children":676},{"style":613},[677],{"type":471,"value":616},{"type":465,"tag":484,"props":679,"children":680},{"style":555},[681],{"type":471,"value":621},{"type":465,"tag":484,"props":683,"children":684},{"style":561},[685],{"type":471,"value":626},{"type":465,"tag":484,"props":687,"children":688},{"style":573},[689],{"type":471,"value":631},{"type":465,"tag":484,"props":691,"children":692},{"style":491},[693],{"type":471,"value":694}," // { value: undefined, done: true }\n",{"type":465,"tag":484,"props":696,"children":698},{"class":486,"line":697},11,[699],{"type":465,"tag":484,"props":700,"children":701},{"emptyLinePlaceholder":598},[702],{"type":471,"value":601},{"type":465,"tag":484,"props":704,"children":706},{"class":486,"line":705},12,[707,712,716,721,727],{"type":465,"tag":484,"props":708,"children":709},{"style":537},[710],{"type":471,"value":711},"function",{"type":465,"tag":484,"props":713,"children":714},{"style":555},[715],{"type":471,"value":558},{"type":465,"tag":484,"props":717,"children":718},{"style":561},[719],{"type":471,"value":720},"(",{"type":465,"tag":484,"props":722,"children":724},{"style":723},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[725],{"type":471,"value":726},"array",{"type":465,"tag":484,"props":728,"children":729},{"style":561},[730],{"type":471,"value":731},") {\n",{"type":465,"tag":484,"props":733,"children":735},{"class":486,"line":734},13,[736,741,746,750,756],{"type":465,"tag":484,"props":737,"children":738},{"style":537},[739],{"type":471,"value":740},"  var",{"type":465,"tag":484,"props":742,"children":743},{"style":543},[744],{"type":471,"value":745}," nextIndex",{"type":465,"tag":484,"props":747,"children":748},{"style":549},[749],{"type":471,"value":552},{"type":465,"tag":484,"props":751,"children":753},{"style":752},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[754],{"type":471,"value":755}," 0",{"type":465,"tag":484,"props":757,"children":758},{"style":573},[759],{"type":471,"value":591},{"type":465,"tag":484,"props":761,"children":763},{"class":486,"line":762},14,[764,770],{"type":465,"tag":484,"props":765,"children":767},{"style":766},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[768],{"type":471,"value":769},"  return",{"type":465,"tag":484,"props":771,"children":772},{"style":561},[773],{"type":471,"value":774}," {\n",{"type":465,"tag":484,"props":776,"children":778},{"class":486,"line":777},15,[779,784,789,794],{"type":465,"tag":484,"props":780,"children":781},{"style":555},[782],{"type":471,"value":783},"    next",{"type":465,"tag":484,"props":785,"children":786},{"style":573},[787],{"type":471,"value":788},":",{"type":465,"tag":484,"props":790,"children":791},{"style":537},[792],{"type":471,"value":793}," function",{"type":465,"tag":484,"props":795,"children":796},{"style":561},[797],{"type":471,"value":798}," () {\n",{"type":465,"tag":484,"props":800,"children":802},{"class":486,"line":801},16,[803,808,812,817,822,826],{"type":465,"tag":484,"props":804,"children":805},{"style":766},[806],{"type":471,"value":807},"      return",{"type":465,"tag":484,"props":809,"children":810},{"style":543},[811],{"type":471,"value":745},{"type":465,"tag":484,"props":813,"children":814},{"style":549},[815],{"type":471,"value":816}," \u003C",{"type":465,"tag":484,"props":818,"children":819},{"style":543},[820],{"type":471,"value":821}," array",{"type":465,"tag":484,"props":823,"children":824},{"style":613},[825],{"type":471,"value":616},{"type":465,"tag":484,"props":827,"children":828},{"style":561},[829],{"type":471,"value":830},"length\n",{"type":465,"tag":484,"props":832,"children":834},{"class":486,"line":833},17,[835,840,845,849,853,858,863,868,873,877,882,886,891],{"type":465,"tag":484,"props":836,"children":837},{"style":549},[838],{"type":471,"value":839},"        ?",{"type":465,"tag":484,"props":841,"children":842},{"style":561},[843],{"type":471,"value":844}," { value",{"type":465,"tag":484,"props":846,"children":847},{"style":573},[848],{"type":471,"value":788},{"type":465,"tag":484,"props":850,"children":851},{"style":543},[852],{"type":471,"value":821},{"type":465,"tag":484,"props":854,"children":855},{"style":561},[856],{"type":471,"value":857},"[",{"type":465,"tag":484,"props":859,"children":860},{"style":543},[861],{"type":471,"value":862},"nextIndex",{"type":465,"tag":484,"props":864,"children":865},{"style":549},[866],{"type":471,"value":867},"++",{"type":465,"tag":484,"props":869,"children":870},{"style":561},[871],{"type":471,"value":872},"]",{"type":465,"tag":484,"props":874,"children":875},{"style":573},[876],{"type":471,"value":576},{"type":465,"tag":484,"props":878,"children":879},{"style":561},[880],{"type":471,"value":881}," done",{"type":465,"tag":484,"props":883,"children":884},{"style":573},[885],{"type":471,"value":788},{"type":465,"tag":484,"props":887,"children":888},{"style":752},[889],{"type":471,"value":890}," false",{"type":465,"tag":484,"props":892,"children":893},{"style":561},[894],{"type":471,"value":895}," }\n",{"type":465,"tag":484,"props":897,"children":899},{"class":486,"line":898},18,[900,905,909,913,918,922,926,930,935,940],{"type":465,"tag":484,"props":901,"children":902},{"style":549},[903],{"type":471,"value":904},"        :",{"type":465,"tag":484,"props":906,"children":907},{"style":561},[908],{"type":471,"value":844},{"type":465,"tag":484,"props":910,"children":911},{"style":573},[912],{"type":471,"value":788},{"type":465,"tag":484,"props":914,"children":915},{"style":752},[916],{"type":471,"value":917}," undefined",{"type":465,"tag":484,"props":919,"children":920},{"style":573},[921],{"type":471,"value":576},{"type":465,"tag":484,"props":923,"children":924},{"style":561},[925],{"type":471,"value":881},{"type":465,"tag":484,"props":927,"children":928},{"style":573},[929],{"type":471,"value":788},{"type":465,"tag":484,"props":931,"children":932},{"style":752},[933],{"type":471,"value":934}," true",{"type":465,"tag":484,"props":936,"children":937},{"style":561},[938],{"type":471,"value":939}," }",{"type":465,"tag":484,"props":941,"children":942},{"style":573},[943],{"type":471,"value":591},{"type":465,"tag":484,"props":945,"children":947},{"class":486,"line":946},19,[948,953],{"type":465,"tag":484,"props":949,"children":950},{"style":561},[951],{"type":471,"value":952},"    }",{"type":465,"tag":484,"props":954,"children":955},{"style":573},[956],{"type":471,"value":957},",\n",{"type":465,"tag":484,"props":959,"children":961},{"class":486,"line":960},20,[962,967],{"type":465,"tag":484,"props":963,"children":964},{"style":561},[965],{"type":471,"value":966},"  }",{"type":465,"tag":484,"props":968,"children":969},{"style":573},[970],{"type":471,"value":591},{"type":465,"tag":484,"props":972,"children":974},{"class":486,"line":973},21,[975],{"type":465,"tag":484,"props":976,"children":977},{"style":561},[978],{"type":471,"value":979},"}\n",{"type":465,"tag":466,"props":981,"children":983},{"id":982},"可迭代的迭代器",[984],{"type":471,"value":982},{"type":465,"tag":473,"props":986,"children":988},{"className":475,"code":987,"language":477,"meta":460,"style":460},"/**\n * 使迭代器可迭代\n * makeIterator 函数生成的迭代器并没有实现可迭代协议\n * 所以不能在 for...of 等语法中使用。\n * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n * 从新名了下函数名称 createIterator\n */\nfunction createIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n    [Symbol.iterator]: function () {\n      console.log(\"返回的迭代器:\", this);\n      return this; // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n    },\n  };\n}\n\nvar iterator = createIterator([1, 2, 3]);\nconsole.log(...iterator);\n",[989],{"type":465,"tag":480,"props":990,"children":991},{"__ignoreMap":460},[992,1000,1008,1016,1024,1032,1040,1047,1071,1094,1105,1124,1151,1206,1249,1260,1298,1343,1363,1374,1385,1392,1400,1456],{"type":465,"tag":484,"props":993,"children":994},{"class":486,"line":487},[995],{"type":465,"tag":484,"props":996,"children":997},{"style":491},[998],{"type":471,"value":999},"/**\n",{"type":465,"tag":484,"props":1001,"children":1002},{"class":486,"line":497},[1003],{"type":465,"tag":484,"props":1004,"children":1005},{"style":491},[1006],{"type":471,"value":1007}," * 使迭代器可迭代\n",{"type":465,"tag":484,"props":1009,"children":1010},{"class":486,"line":506},[1011],{"type":465,"tag":484,"props":1012,"children":1013},{"style":491},[1014],{"type":471,"value":1015}," * makeIterator 函数生成的迭代器并没有实现可迭代协议\n",{"type":465,"tag":484,"props":1017,"children":1018},{"class":486,"line":515},[1019],{"type":465,"tag":484,"props":1020,"children":1021},{"style":491},[1022],{"type":471,"value":1023}," * 所以不能在 for...of 等语法中使用。\n",{"type":465,"tag":484,"props":1025,"children":1026},{"class":486,"line":524},[1027],{"type":465,"tag":484,"props":1028,"children":1029},{"style":491},[1030],{"type":471,"value":1031}," * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n",{"type":465,"tag":484,"props":1033,"children":1034},{"class":486,"line":533},[1035],{"type":465,"tag":484,"props":1036,"children":1037},{"style":491},[1038],{"type":471,"value":1039}," * 从新名了下函数名称 createIterator\n",{"type":465,"tag":484,"props":1041,"children":1042},{"class":486,"line":594},[1043],{"type":465,"tag":484,"props":1044,"children":1045},{"style":491},[1046],{"type":471,"value":530},{"type":465,"tag":484,"props":1048,"children":1049},{"class":486,"line":604},[1050,1054,1059,1063,1067],{"type":465,"tag":484,"props":1051,"children":1052},{"style":537},[1053],{"type":471,"value":711},{"type":465,"tag":484,"props":1055,"children":1056},{"style":555},[1057],{"type":471,"value":1058}," createIterator",{"type":465,"tag":484,"props":1060,"children":1061},{"style":561},[1062],{"type":471,"value":720},{"type":465,"tag":484,"props":1064,"children":1065},{"style":723},[1066],{"type":471,"value":726},{"type":465,"tag":484,"props":1068,"children":1069},{"style":561},[1070],{"type":471,"value":731},{"type":465,"tag":484,"props":1072,"children":1073},{"class":486,"line":639},[1074,1078,1082,1086,1090],{"type":465,"tag":484,"props":1075,"children":1076},{"style":537},[1077],{"type":471,"value":740},{"type":465,"tag":484,"props":1079,"children":1080},{"style":543},[1081],{"type":471,"value":745},{"type":465,"tag":484,"props":1083,"children":1084},{"style":549},[1085],{"type":471,"value":552},{"type":465,"tag":484,"props":1087,"children":1088},{"style":752},[1089],{"type":471,"value":755},{"type":465,"tag":484,"props":1091,"children":1092},{"style":573},[1093],{"type":471,"value":591},{"type":465,"tag":484,"props":1095,"children":1096},{"class":486,"line":668},[1097,1101],{"type":465,"tag":484,"props":1098,"children":1099},{"style":766},[1100],{"type":471,"value":769},{"type":465,"tag":484,"props":1102,"children":1103},{"style":561},[1104],{"type":471,"value":774},{"type":465,"tag":484,"props":1106,"children":1107},{"class":486,"line":697},[1108,1112,1116,1120],{"type":465,"tag":484,"props":1109,"children":1110},{"style":555},[1111],{"type":471,"value":783},{"type":465,"tag":484,"props":1113,"children":1114},{"style":573},[1115],{"type":471,"value":788},{"type":465,"tag":484,"props":1117,"children":1118},{"style":537},[1119],{"type":471,"value":793},{"type":465,"tag":484,"props":1121,"children":1122},{"style":561},[1123],{"type":471,"value":798},{"type":465,"tag":484,"props":1125,"children":1126},{"class":486,"line":705},[1127,1131,1135,1139,1143,1147],{"type":465,"tag":484,"props":1128,"children":1129},{"style":766},[1130],{"type":471,"value":807},{"type":465,"tag":484,"props":1132,"children":1133},{"style":543},[1134],{"type":471,"value":745},{"type":465,"tag":484,"props":1136,"children":1137},{"style":549},[1138],{"type":471,"value":816},{"type":465,"tag":484,"props":1140,"children":1141},{"style":543},[1142],{"type":471,"value":821},{"type":465,"tag":484,"props":1144,"children":1145},{"style":613},[1146],{"type":471,"value":616},{"type":465,"tag":484,"props":1148,"children":1149},{"style":561},[1150],{"type":471,"value":830},{"type":465,"tag":484,"props":1152,"children":1153},{"class":486,"line":734},[1154,1158,1162,1166,1170,1174,1178,1182,1186,1190,1194,1198,1202],{"type":465,"tag":484,"props":1155,"children":1156},{"style":549},[1157],{"type":471,"value":839},{"type":465,"tag":484,"props":1159,"children":1160},{"style":561},[1161],{"type":471,"value":844},{"type":465,"tag":484,"props":1163,"children":1164},{"style":573},[1165],{"type":471,"value":788},{"type":465,"tag":484,"props":1167,"children":1168},{"style":543},[1169],{"type":471,"value":821},{"type":465,"tag":484,"props":1171,"children":1172},{"style":561},[1173],{"type":471,"value":857},{"type":465,"tag":484,"props":1175,"children":1176},{"style":543},[1177],{"type":471,"value":862},{"type":465,"tag":484,"props":1179,"children":1180},{"style":549},[1181],{"type":471,"value":867},{"type":465,"tag":484,"props":1183,"children":1184},{"style":561},[1185],{"type":471,"value":872},{"type":465,"tag":484,"props":1187,"children":1188},{"style":573},[1189],{"type":471,"value":576},{"type":465,"tag":484,"props":1191,"children":1192},{"style":561},[1193],{"type":471,"value":881},{"type":465,"tag":484,"props":1195,"children":1196},{"style":573},[1197],{"type":471,"value":788},{"type":465,"tag":484,"props":1199,"children":1200},{"style":752},[1201],{"type":471,"value":890},{"type":465,"tag":484,"props":1203,"children":1204},{"style":561},[1205],{"type":471,"value":895},{"type":465,"tag":484,"props":1207,"children":1208},{"class":486,"line":762},[1209,1213,1217,1221,1225,1229,1233,1237,1241,1245],{"type":465,"tag":484,"props":1210,"children":1211},{"style":549},[1212],{"type":471,"value":904},{"type":465,"tag":484,"props":1214,"children":1215},{"style":561},[1216],{"type":471,"value":844},{"type":465,"tag":484,"props":1218,"children":1219},{"style":573},[1220],{"type":471,"value":788},{"type":465,"tag":484,"props":1222,"children":1223},{"style":752},[1224],{"type":471,"value":917},{"type":465,"tag":484,"props":1226,"children":1227},{"style":573},[1228],{"type":471,"value":576},{"type":465,"tag":484,"props":1230,"children":1231},{"style":561},[1232],{"type":471,"value":881},{"type":465,"tag":484,"props":1234,"children":1235},{"style":573},[1236],{"type":471,"value":788},{"type":465,"tag":484,"props":1238,"children":1239},{"style":752},[1240],{"type":471,"value":934},{"type":465,"tag":484,"props":1242,"children":1243},{"style":561},[1244],{"type":471,"value":939},{"type":465,"tag":484,"props":1246,"children":1247},{"style":573},[1248],{"type":471,"value":591},{"type":465,"tag":484,"props":1250,"children":1251},{"class":486,"line":777},[1252,1256],{"type":465,"tag":484,"props":1253,"children":1254},{"style":561},[1255],{"type":471,"value":952},{"type":465,"tag":484,"props":1257,"children":1258},{"style":573},[1259],{"type":471,"value":957},{"type":465,"tag":484,"props":1261,"children":1262},{"class":486,"line":801},[1263,1268,1273,1277,1282,1286,1290,1294],{"type":465,"tag":484,"props":1264,"children":1265},{"style":561},[1266],{"type":471,"value":1267},"    [",{"type":465,"tag":484,"props":1269,"children":1270},{"style":543},[1271],{"type":471,"value":1272},"Symbol",{"type":465,"tag":484,"props":1274,"children":1275},{"style":613},[1276],{"type":471,"value":616},{"type":465,"tag":484,"props":1278,"children":1279},{"style":543},[1280],{"type":471,"value":1281},"iterator",{"type":465,"tag":484,"props":1283,"children":1284},{"style":561},[1285],{"type":471,"value":872},{"type":465,"tag":484,"props":1287,"children":1288},{"style":573},[1289],{"type":471,"value":788},{"type":465,"tag":484,"props":1291,"children":1292},{"style":537},[1293],{"type":471,"value":793},{"type":465,"tag":484,"props":1295,"children":1296},{"style":561},[1297],{"type":471,"value":798},{"type":465,"tag":484,"props":1299,"children":1300},{"class":486,"line":833},[1301,1306,1310,1315,1319,1324,1328,1334,1339],{"type":465,"tag":484,"props":1302,"children":1303},{"style":543},[1304],{"type":471,"value":1305},"      console",{"type":465,"tag":484,"props":1307,"children":1308},{"style":613},[1309],{"type":471,"value":616},{"type":465,"tag":484,"props":1311,"children":1312},{"style":555},[1313],{"type":471,"value":1314},"log",{"type":465,"tag":484,"props":1316,"children":1317},{"style":561},[1318],{"type":471,"value":720},{"type":465,"tag":484,"props":1320,"children":1321},{"style":567},[1322],{"type":471,"value":1323},"\"返回的迭代器:\"",{"type":465,"tag":484,"props":1325,"children":1326},{"style":573},[1327],{"type":471,"value":576},{"type":465,"tag":484,"props":1329,"children":1331},{"style":1330},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[1332],{"type":471,"value":1333}," this",{"type":465,"tag":484,"props":1335,"children":1336},{"style":561},[1337],{"type":471,"value":1338},")",{"type":465,"tag":484,"props":1340,"children":1341},{"style":573},[1342],{"type":471,"value":591},{"type":465,"tag":484,"props":1344,"children":1345},{"class":486,"line":898},[1346,1350,1354,1358],{"type":465,"tag":484,"props":1347,"children":1348},{"style":766},[1349],{"type":471,"value":807},{"type":465,"tag":484,"props":1351,"children":1352},{"style":1330},[1353],{"type":471,"value":1333},{"type":465,"tag":484,"props":1355,"children":1356},{"style":573},[1357],{"type":471,"value":631},{"type":465,"tag":484,"props":1359,"children":1360},{"style":491},[1361],{"type":471,"value":1362}," // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n",{"type":465,"tag":484,"props":1364,"children":1365},{"class":486,"line":946},[1366,1370],{"type":465,"tag":484,"props":1367,"children":1368},{"style":561},[1369],{"type":471,"value":952},{"type":465,"tag":484,"props":1371,"children":1372},{"style":573},[1373],{"type":471,"value":957},{"type":465,"tag":484,"props":1375,"children":1376},{"class":486,"line":960},[1377,1381],{"type":465,"tag":484,"props":1378,"children":1379},{"style":561},[1380],{"type":471,"value":966},{"type":465,"tag":484,"props":1382,"children":1383},{"style":573},[1384],{"type":471,"value":591},{"type":465,"tag":484,"props":1386,"children":1387},{"class":486,"line":973},[1388],{"type":465,"tag":484,"props":1389,"children":1390},{"style":561},[1391],{"type":471,"value":979},{"type":465,"tag":484,"props":1393,"children":1395},{"class":486,"line":1394},22,[1396],{"type":465,"tag":484,"props":1397,"children":1398},{"emptyLinePlaceholder":598},[1399],{"type":471,"value":601},{"type":465,"tag":484,"props":1401,"children":1403},{"class":486,"line":1402},23,[1404,1408,1413,1417,1421,1425,1430,1434,1439,1443,1448,1452],{"type":465,"tag":484,"props":1405,"children":1406},{"style":537},[1407],{"type":471,"value":540},{"type":465,"tag":484,"props":1409,"children":1410},{"style":543},[1411],{"type":471,"value":1412}," iterator",{"type":465,"tag":484,"props":1414,"children":1415},{"style":549},[1416],{"type":471,"value":552},{"type":465,"tag":484,"props":1418,"children":1419},{"style":555},[1420],{"type":471,"value":1058},{"type":465,"tag":484,"props":1422,"children":1423},{"style":561},[1424],{"type":471,"value":564},{"type":465,"tag":484,"props":1426,"children":1427},{"style":752},[1428],{"type":471,"value":1429},"1",{"type":465,"tag":484,"props":1431,"children":1432},{"style":573},[1433],{"type":471,"value":576},{"type":465,"tag":484,"props":1435,"children":1436},{"style":752},[1437],{"type":471,"value":1438}," 2",{"type":465,"tag":484,"props":1440,"children":1441},{"style":573},[1442],{"type":471,"value":576},{"type":465,"tag":484,"props":1444,"children":1445},{"style":752},[1446],{"type":471,"value":1447}," 3",{"type":465,"tag":484,"props":1449,"children":1450},{"style":561},[1451],{"type":471,"value":586},{"type":465,"tag":484,"props":1453,"children":1454},{"style":573},[1455],{"type":471,"value":591},{"type":465,"tag":484,"props":1457,"children":1459},{"class":486,"line":1458},24,[1460,1465,1469,1473,1477,1482,1486,1490],{"type":465,"tag":484,"props":1461,"children":1462},{"style":543},[1463],{"type":471,"value":1464},"console",{"type":465,"tag":484,"props":1466,"children":1467},{"style":613},[1468],{"type":471,"value":616},{"type":465,"tag":484,"props":1470,"children":1471},{"style":555},[1472],{"type":471,"value":1314},{"type":465,"tag":484,"props":1474,"children":1475},{"style":561},[1476],{"type":471,"value":720},{"type":465,"tag":484,"props":1478,"children":1479},{"style":549},[1480],{"type":471,"value":1481},"...",{"type":465,"tag":484,"props":1483,"children":1484},{"style":543},[1485],{"type":471,"value":1281},{"type":465,"tag":484,"props":1487,"children":1488},{"style":561},[1489],{"type":471,"value":1338},{"type":465,"tag":484,"props":1491,"children":1492},{"style":573},[1493],{"type":471,"value":591},{"type":465,"tag":1495,"props":1496,"children":1497},"style",{},[1498],{"type":471,"value":1499},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":460,"searchDepth":524,"depth":524,"links":1501},[1502,1503],{"id":468,"depth":497,"text":468},{"id":982,"depth":497,"text":982},"markdown","content:3.frontend-code-assessment:1.source:1.native-api:7.iterator.md","content","3.frontend-code-assessment/1.source/1.native-api/7.iterator.md","md",[1510,1512],{"_path":318,"title":317,"description":1511},"JSON.stringify() 方法将一个 js 对象或值转换为 json 字符串，如果指定了一个 replacer 函数，则可以选择性地替换值，或者指定的 replacer 是数组，则可选择性地仅包含数组指定的属性。",{"_path":328,"title":327,"description":460},1713597609776]