[{"data":1,"prerenderedAt":912},["Reactive",2],{"navigation":3,"/frontend-code-assessment/source/native-api/new":457,"/frontend-code-assessment/source/native-api/new-surround":909},[4,260,289,434,442],{"title":5,"_path":6,"children":7,"icon":259},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":261,"_path":262,"children":263,"icon":288},"前端八股文","/frontend-endorsement",[264,275],{"title":265,"_path":266,"children":267},"构建工具","/frontend-endorsement/build-tools",[268],{"title":269,"_path":270,"children":271},"Webpack","/frontend-endorsement/build-tools/webpack",[272],{"title":273,"_path":274},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":276,"_path":277,"children":278},"Html","/frontend-endorsement/html",[279,282,285],{"title":280,"_path":281},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":283,"_path":284},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":286,"_path":287},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":290,"_path":291,"children":292,"icon":433},"前端代码考核","/frontend-code-assessment",[293,342,426],{"title":294,"_path":295,"children":296},"源码实现","/frontend-code-assessment/source",[297,322,335],{"title":298,"_path":299,"children":300},"原生 api","/frontend-code-assessment/source/native-api",[301,304,307,310,313,316,319],{"title":302,"_path":303},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":305,"_path":306},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":308,"_path":309},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":311,"_path":312},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":314,"_path":315},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":317,"_path":318},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":320,"_path":321},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":323,"_path":324,"children":325},"数组 Array","/frontend-code-assessment/source/array",[326,329,332],{"title":327,"_path":328},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":330,"_path":331},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":333,"_path":334},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":336,"_path":337,"children":338},"字符串 String","/frontend-code-assessment/source/string",[339],{"title":340,"_path":341},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":343,"_path":344,"children":345},"业务场景","/frontend-code-assessment/scene",[346,368,375,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423],{"title":347,"_path":348,"children":349},"Promise","/frontend-code-assessment/scene/promise",[350,353,356,359,362,365],{"title":351,"_path":352},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":354,"_path":355},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":357,"_path":358},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":360,"_path":361},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":363,"_path":364},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":366,"_path":367},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":369,"_path":370,"children":371},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[372],{"title":373,"_path":374},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":376,"_path":377},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":379,"_path":380},"倒计时","/frontend-code-assessment/scene/countdown",{"title":382,"_path":383},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":385,"_path":386},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":388,"_path":389},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":391,"_path":392},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":394,"_path":395},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":397,"_path":398},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":400,"_path":401},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":403,"_path":404},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":406,"_path":407},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":409,"_path":410},"随机数","/frontend-code-assessment/scene/random-number",{"title":412,"_path":413},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":415,"_path":416},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":418,"_path":419},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":421,"_path":422},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":424,"_path":425},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":427,"_path":428,"children":429},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[430],{"title":431,"_path":432},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":435,"_path":436,"children":437,"icon":441},"项目","/pro",[438],{"title":439,"_path":440},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":443,"_path":444,"children":445,"icon":456},"后端语言","/backend-languages",[446],{"title":447,"_path":448,"children":449},"Python","/backend-languages/python",[450,453],{"title":451,"_path":452},"基础","/backend-languages/python/base",{"title":454,"_path":455},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":309,"_dir":458,"_draft":459,"_partial":459,"_locale":460,"title":308,"description":461,"body":462,"_type":904,"_id":905,"_source":906,"_file":907,"_extension":908},"native-api",false,"","在调用 new 的过程中会发生以上 4 件事情：",{"type":463,"children":464,"toc":902},"root",[465,472,505,510,738,743,896],{"type":466,"tag":467,"props":468,"children":469},"element","p",{},[470],{"type":471,"value":461},"text",{"type":466,"tag":473,"props":474,"children":475},"ol",{},[476,482,495,500],{"type":466,"tag":477,"props":478,"children":479},"li",{},[480],{"type":471,"value":481},"创建一个新的空对象",{"type":466,"tag":477,"props":483,"children":484},{},[485,487,493],{"type":471,"value":486},"设置原型，将构造函数的作用域赋给新对象（也就是将对象的 ",{"type":466,"tag":488,"props":489,"children":490},"strong",{},[491],{"type":471,"value":492},"proto",{"type":471,"value":494},"属性指向构造函数的 prototype 属性）",{"type":466,"tag":477,"props":496,"children":497},{},[498],{"type":471,"value":499},"指向构造函数中的代码，构造函数中的 this 指向该对象（也就是为这个对象添加属性或方法）",{"type":466,"tag":477,"props":501,"children":502},{},[503],{"type":471,"value":504},"返回新的对象",{"type":466,"tag":467,"props":506,"children":507},{},[508],{"type":471,"value":509},"方式一：",{"type":466,"tag":511,"props":512,"children":516},"pre",{"className":513,"code":514,"language":515,"meta":460,"style":460},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","function newFactory(fn, ...args) {\n  // method1\n  const obj = new Object();\n  obj.__proto__ = newFactory.prototype;\n  newFactory.apply(obj, args);\n  return obj;\n}\n","js",[517],{"type":466,"tag":518,"props":519,"children":520},"code",{"__ignoreMap":460},[521,573,583,623,666,711,729],{"type":466,"tag":522,"props":523,"children":526},"span",{"class":524,"line":525},"line",1,[527,533,539,545,551,557,563,568],{"type":466,"tag":522,"props":528,"children":530},{"style":529},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[531],{"type":471,"value":532},"function",{"type":466,"tag":522,"props":534,"children":536},{"style":535},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[537],{"type":471,"value":538}," newFactory",{"type":466,"tag":522,"props":540,"children":542},{"style":541},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[543],{"type":471,"value":544},"(",{"type":466,"tag":522,"props":546,"children":548},{"style":547},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[549],{"type":471,"value":550},"fn",{"type":466,"tag":522,"props":552,"children":554},{"style":553},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[555],{"type":471,"value":556},",",{"type":466,"tag":522,"props":558,"children":560},{"style":559},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[561],{"type":471,"value":562}," ...",{"type":466,"tag":522,"props":564,"children":565},{"style":547},[566],{"type":471,"value":567},"args",{"type":466,"tag":522,"props":569,"children":570},{"style":541},[571],{"type":471,"value":572},") {\n",{"type":466,"tag":522,"props":574,"children":576},{"class":524,"line":575},2,[577],{"type":466,"tag":522,"props":578,"children":580},{"style":579},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[581],{"type":471,"value":582},"  // method1\n",{"type":466,"tag":522,"props":584,"children":586},{"class":524,"line":585},3,[587,592,598,603,608,613,618],{"type":466,"tag":522,"props":588,"children":589},{"style":529},[590],{"type":471,"value":591},"  const",{"type":466,"tag":522,"props":593,"children":595},{"style":594},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[596],{"type":471,"value":597}," obj",{"type":466,"tag":522,"props":599,"children":600},{"style":559},[601],{"type":471,"value":602}," =",{"type":466,"tag":522,"props":604,"children":605},{"style":559},[606],{"type":471,"value":607}," new",{"type":466,"tag":522,"props":609,"children":610},{"style":535},[611],{"type":471,"value":612}," Object",{"type":466,"tag":522,"props":614,"children":615},{"style":541},[616],{"type":471,"value":617},"()",{"type":466,"tag":522,"props":619,"children":620},{"style":553},[621],{"type":471,"value":622},";\n",{"type":466,"tag":522,"props":624,"children":626},{"class":524,"line":625},4,[627,632,638,643,648,653,657,662],{"type":466,"tag":522,"props":628,"children":629},{"style":594},[630],{"type":471,"value":631},"  obj",{"type":466,"tag":522,"props":633,"children":635},{"style":634},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[636],{"type":471,"value":637},".",{"type":466,"tag":522,"props":639,"children":640},{"style":541},[641],{"type":471,"value":642},"__proto__ ",{"type":466,"tag":522,"props":644,"children":645},{"style":559},[646],{"type":471,"value":647},"=",{"type":466,"tag":522,"props":649,"children":651},{"style":650},"--shiki-light:#DC3EB7;--shiki-default:#DC3EB7;--shiki-dark:#39BAE6",[652],{"type":471,"value":538},{"type":466,"tag":522,"props":654,"children":655},{"style":634},[656],{"type":471,"value":637},{"type":466,"tag":522,"props":658,"children":659},{"style":541},[660],{"type":471,"value":661},"prototype",{"type":466,"tag":522,"props":663,"children":664},{"style":553},[665],{"type":471,"value":622},{"type":466,"tag":522,"props":667,"children":669},{"class":524,"line":668},5,[670,675,679,684,688,693,697,702,707],{"type":466,"tag":522,"props":671,"children":672},{"style":594},[673],{"type":471,"value":674},"  newFactory",{"type":466,"tag":522,"props":676,"children":677},{"style":634},[678],{"type":471,"value":637},{"type":466,"tag":522,"props":680,"children":681},{"style":535},[682],{"type":471,"value":683},"apply",{"type":466,"tag":522,"props":685,"children":686},{"style":541},[687],{"type":471,"value":544},{"type":466,"tag":522,"props":689,"children":690},{"style":594},[691],{"type":471,"value":692},"obj",{"type":466,"tag":522,"props":694,"children":695},{"style":553},[696],{"type":471,"value":556},{"type":466,"tag":522,"props":698,"children":699},{"style":594},[700],{"type":471,"value":701}," args",{"type":466,"tag":522,"props":703,"children":704},{"style":541},[705],{"type":471,"value":706},")",{"type":466,"tag":522,"props":708,"children":709},{"style":553},[710],{"type":471,"value":622},{"type":466,"tag":522,"props":712,"children":714},{"class":524,"line":713},6,[715,721,725],{"type":466,"tag":522,"props":716,"children":718},{"style":717},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[719],{"type":471,"value":720},"  return",{"type":466,"tag":522,"props":722,"children":723},{"style":594},[724],{"type":471,"value":597},{"type":466,"tag":522,"props":726,"children":727},{"style":553},[728],{"type":471,"value":622},{"type":466,"tag":522,"props":730,"children":732},{"class":524,"line":731},7,[733],{"type":466,"tag":522,"props":734,"children":735},{"style":541},[736],{"type":471,"value":737},"}\n",{"type":466,"tag":467,"props":739,"children":740},{},[741],{"type":471,"value":742},"方式二：",{"type":466,"tag":511,"props":744,"children":746},{"className":513,"code":745,"language":515,"meta":460,"style":460},"function newFactory(fn, ...args) {\n  const obj = Object.create(fn.prototype);\n  fn.apply(obj, args);\n  return obj;\n}\n",[747],{"type":466,"tag":518,"props":748,"children":749},{"__ignoreMap":460},[750,785,834,874,889],{"type":466,"tag":522,"props":751,"children":752},{"class":524,"line":525},[753,757,761,765,769,773,777,781],{"type":466,"tag":522,"props":754,"children":755},{"style":529},[756],{"type":471,"value":532},{"type":466,"tag":522,"props":758,"children":759},{"style":535},[760],{"type":471,"value":538},{"type":466,"tag":522,"props":762,"children":763},{"style":541},[764],{"type":471,"value":544},{"type":466,"tag":522,"props":766,"children":767},{"style":547},[768],{"type":471,"value":550},{"type":466,"tag":522,"props":770,"children":771},{"style":553},[772],{"type":471,"value":556},{"type":466,"tag":522,"props":774,"children":775},{"style":559},[776],{"type":471,"value":562},{"type":466,"tag":522,"props":778,"children":779},{"style":547},[780],{"type":471,"value":567},{"type":466,"tag":522,"props":782,"children":783},{"style":541},[784],{"type":471,"value":572},{"type":466,"tag":522,"props":786,"children":787},{"class":524,"line":575},[788,792,796,800,804,808,813,817,821,825,830],{"type":466,"tag":522,"props":789,"children":790},{"style":529},[791],{"type":471,"value":591},{"type":466,"tag":522,"props":793,"children":794},{"style":594},[795],{"type":471,"value":597},{"type":466,"tag":522,"props":797,"children":798},{"style":559},[799],{"type":471,"value":602},{"type":466,"tag":522,"props":801,"children":802},{"style":594},[803],{"type":471,"value":612},{"type":466,"tag":522,"props":805,"children":806},{"style":634},[807],{"type":471,"value":637},{"type":466,"tag":522,"props":809,"children":810},{"style":535},[811],{"type":471,"value":812},"create",{"type":466,"tag":522,"props":814,"children":815},{"style":541},[816],{"type":471,"value":544},{"type":466,"tag":522,"props":818,"children":819},{"style":650},[820],{"type":471,"value":550},{"type":466,"tag":522,"props":822,"children":823},{"style":634},[824],{"type":471,"value":637},{"type":466,"tag":522,"props":826,"children":827},{"style":541},[828],{"type":471,"value":829},"prototype)",{"type":466,"tag":522,"props":831,"children":832},{"style":553},[833],{"type":471,"value":622},{"type":466,"tag":522,"props":835,"children":836},{"class":524,"line":585},[837,842,846,850,854,858,862,866,870],{"type":466,"tag":522,"props":838,"children":839},{"style":594},[840],{"type":471,"value":841},"  fn",{"type":466,"tag":522,"props":843,"children":844},{"style":634},[845],{"type":471,"value":637},{"type":466,"tag":522,"props":847,"children":848},{"style":535},[849],{"type":471,"value":683},{"type":466,"tag":522,"props":851,"children":852},{"style":541},[853],{"type":471,"value":544},{"type":466,"tag":522,"props":855,"children":856},{"style":594},[857],{"type":471,"value":692},{"type":466,"tag":522,"props":859,"children":860},{"style":553},[861],{"type":471,"value":556},{"type":466,"tag":522,"props":863,"children":864},{"style":594},[865],{"type":471,"value":701},{"type":466,"tag":522,"props":867,"children":868},{"style":541},[869],{"type":471,"value":706},{"type":466,"tag":522,"props":871,"children":872},{"style":553},[873],{"type":471,"value":622},{"type":466,"tag":522,"props":875,"children":876},{"class":524,"line":625},[877,881,885],{"type":466,"tag":522,"props":878,"children":879},{"style":717},[880],{"type":471,"value":720},{"type":466,"tag":522,"props":882,"children":883},{"style":594},[884],{"type":471,"value":597},{"type":466,"tag":522,"props":886,"children":887},{"style":553},[888],{"type":471,"value":622},{"type":466,"tag":522,"props":890,"children":891},{"class":524,"line":668},[892],{"type":466,"tag":522,"props":893,"children":894},{"style":541},[895],{"type":471,"value":737},{"type":466,"tag":897,"props":898,"children":899},"style",{},[900],{"type":471,"value":901},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":460,"searchDepth":668,"depth":668,"links":903},[],"markdown","content:3.frontend-code-assessment:1.source:1.native-api:3.new.md","content","3.frontend-code-assessment/1.source/1.native-api/3.new.md","md",[910,911],{"_path":306,"title":305,"description":460},{"_path":312,"title":311,"description":460},1713599625286]