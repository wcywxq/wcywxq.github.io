[{"data":1,"prerenderedAt":887},["Reactive",2],{"navigation":3,"/frontend-code-assessment/source/native-api/instanceof":424,"/frontend-code-assessment/source/native-api/instanceof-surround":883},[4,237,265,403,410],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,396],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"随机数","/frontend-code-assessment/scene/random-number",{"title":382,"_path":383},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":385,"_path":386},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":388,"_path":389},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":391,"_path":392},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":394,"_path":395},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":397,"_path":398,"children":399},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[400],{"title":401,"_path":402},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":404,"_path":405,"children":406},"项目","/pro",[407],{"title":408,"_path":409},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":411,"_path":412,"children":413},"后端语言","/backend-languages",[414],{"title":415,"_path":416,"children":417},"Python","/backend-languages/python",[418,421],{"title":419,"_path":420},"基础","/backend-languages/python/base",{"title":422,"_path":423},"函数","/backend-languages/python/function",{"_path":288,"_dir":425,"_draft":426,"_partial":426,"_locale":427,"title":287,"description":427,"body":428,"_type":878,"_id":879,"_source":880,"_file":881,"_extension":882},"native-api",false,"",{"type":429,"children":430,"toc":876},"root",[431,453,870],{"type":432,"tag":433,"props":434,"children":435},"element","ol",{},[436,443,448],{"type":432,"tag":437,"props":438,"children":439},"li",{},[440],{"type":441,"value":442},"text","首先获取原型的类型",{"type":432,"tag":437,"props":444,"children":445},{},[446],{"type":441,"value":447},"然后获取对象的类型",{"type":432,"tag":437,"props":449,"children":450},{},[451],{"type":441,"value":452},"然后一直循环判断对象的原型是否等于类型的原型，直到对象原型为 null，因为原型链最终为 null",{"type":432,"tag":454,"props":455,"children":459},"pre",{"className":456,"code":457,"language":458,"meta":427,"style":427},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","function _instanceof(target, origin) {\n  if (typeof target !== \"object\" || target === null) return false;\n  if (typeof origin !== \"function\") {\n    throw new TypeError(\"origin must be function\");\n  }\n  let proto = Object.getPrototypeOf(target); // 相当于: proto = target.__proto__\n  while (proto) {\n    if (proto === origin.prototype) return true;\n    proto = Object.getPrototypeOf(proto);\n  }\n  return false;\n}\n","js",[460],{"type":432,"tag":461,"props":462,"children":463},"code",{"__ignoreMap":427},[464,510,588,621,658,667,725,747,795,836,844,861],{"type":432,"tag":465,"props":466,"children":469},"span",{"class":467,"line":468},"line",1,[470,476,482,488,494,500,505],{"type":432,"tag":465,"props":471,"children":473},{"style":472},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[474],{"type":441,"value":475},"function",{"type":432,"tag":465,"props":477,"children":479},{"style":478},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[480],{"type":441,"value":481}," _instanceof",{"type":432,"tag":465,"props":483,"children":485},{"style":484},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[486],{"type":441,"value":487},"(",{"type":432,"tag":465,"props":489,"children":491},{"style":490},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[492],{"type":441,"value":493},"target",{"type":432,"tag":465,"props":495,"children":497},{"style":496},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[498],{"type":441,"value":499},",",{"type":432,"tag":465,"props":501,"children":502},{"style":490},[503],{"type":441,"value":504}," origin",{"type":432,"tag":465,"props":506,"children":507},{"style":484},[508],{"type":441,"value":509},") {\n",{"type":432,"tag":465,"props":511,"children":513},{"class":467,"line":512},2,[514,520,525,531,537,542,548,553,557,562,568,573,578,583],{"type":432,"tag":465,"props":515,"children":517},{"style":516},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[518],{"type":441,"value":519},"  if",{"type":432,"tag":465,"props":521,"children":522},{"style":484},[523],{"type":441,"value":524}," (",{"type":432,"tag":465,"props":526,"children":528},{"style":527},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[529],{"type":441,"value":530},"typeof",{"type":432,"tag":465,"props":532,"children":534},{"style":533},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[535],{"type":441,"value":536}," target",{"type":432,"tag":465,"props":538,"children":539},{"style":527},[540],{"type":441,"value":541}," !==",{"type":432,"tag":465,"props":543,"children":545},{"style":544},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[546],{"type":441,"value":547}," \"object\"",{"type":432,"tag":465,"props":549,"children":550},{"style":527},[551],{"type":441,"value":552}," ||",{"type":432,"tag":465,"props":554,"children":555},{"style":533},[556],{"type":441,"value":536},{"type":432,"tag":465,"props":558,"children":559},{"style":527},[560],{"type":441,"value":561}," ===",{"type":432,"tag":465,"props":563,"children":565},{"style":564},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[566],{"type":441,"value":567}," null",{"type":432,"tag":465,"props":569,"children":570},{"style":484},[571],{"type":441,"value":572},") ",{"type":432,"tag":465,"props":574,"children":575},{"style":516},[576],{"type":441,"value":577},"return",{"type":432,"tag":465,"props":579,"children":580},{"style":564},[581],{"type":441,"value":582}," false",{"type":432,"tag":465,"props":584,"children":585},{"style":496},[586],{"type":441,"value":587},";\n",{"type":432,"tag":465,"props":589,"children":591},{"class":467,"line":590},3,[592,596,600,604,608,612,617],{"type":432,"tag":465,"props":593,"children":594},{"style":516},[595],{"type":441,"value":519},{"type":432,"tag":465,"props":597,"children":598},{"style":484},[599],{"type":441,"value":524},{"type":432,"tag":465,"props":601,"children":602},{"style":527},[603],{"type":441,"value":530},{"type":432,"tag":465,"props":605,"children":606},{"style":533},[607],{"type":441,"value":504},{"type":432,"tag":465,"props":609,"children":610},{"style":527},[611],{"type":441,"value":541},{"type":432,"tag":465,"props":613,"children":614},{"style":544},[615],{"type":441,"value":616}," \"function\"",{"type":432,"tag":465,"props":618,"children":619},{"style":484},[620],{"type":441,"value":509},{"type":432,"tag":465,"props":622,"children":624},{"class":467,"line":623},4,[625,630,635,640,644,649,654],{"type":432,"tag":465,"props":626,"children":627},{"style":516},[628],{"type":441,"value":629},"    throw",{"type":432,"tag":465,"props":631,"children":632},{"style":527},[633],{"type":441,"value":634}," new",{"type":432,"tag":465,"props":636,"children":637},{"style":478},[638],{"type":441,"value":639}," TypeError",{"type":432,"tag":465,"props":641,"children":642},{"style":484},[643],{"type":441,"value":487},{"type":432,"tag":465,"props":645,"children":646},{"style":544},[647],{"type":441,"value":648},"\"origin must be function\"",{"type":432,"tag":465,"props":650,"children":651},{"style":484},[652],{"type":441,"value":653},")",{"type":432,"tag":465,"props":655,"children":656},{"style":496},[657],{"type":441,"value":587},{"type":432,"tag":465,"props":659,"children":661},{"class":467,"line":660},5,[662],{"type":432,"tag":465,"props":663,"children":664},{"style":484},[665],{"type":441,"value":666},"  }\n",{"type":432,"tag":465,"props":668,"children":670},{"class":467,"line":669},6,[671,676,681,686,691,697,702,706,710,714,719],{"type":432,"tag":465,"props":672,"children":673},{"style":472},[674],{"type":441,"value":675},"  let",{"type":432,"tag":465,"props":677,"children":678},{"style":533},[679],{"type":441,"value":680}," proto",{"type":432,"tag":465,"props":682,"children":683},{"style":527},[684],{"type":441,"value":685}," =",{"type":432,"tag":465,"props":687,"children":688},{"style":533},[689],{"type":441,"value":690}," Object",{"type":432,"tag":465,"props":692,"children":694},{"style":693},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[695],{"type":441,"value":696},".",{"type":432,"tag":465,"props":698,"children":699},{"style":478},[700],{"type":441,"value":701},"getPrototypeOf",{"type":432,"tag":465,"props":703,"children":704},{"style":484},[705],{"type":441,"value":487},{"type":432,"tag":465,"props":707,"children":708},{"style":533},[709],{"type":441,"value":493},{"type":432,"tag":465,"props":711,"children":712},{"style":484},[713],{"type":441,"value":653},{"type":432,"tag":465,"props":715,"children":716},{"style":496},[717],{"type":441,"value":718},";",{"type":432,"tag":465,"props":720,"children":722},{"style":721},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[723],{"type":441,"value":724}," // 相当于: proto = target.__proto__\n",{"type":432,"tag":465,"props":726,"children":728},{"class":467,"line":727},7,[729,734,738,743],{"type":432,"tag":465,"props":730,"children":731},{"style":516},[732],{"type":441,"value":733},"  while",{"type":432,"tag":465,"props":735,"children":736},{"style":484},[737],{"type":441,"value":524},{"type":432,"tag":465,"props":739,"children":740},{"style":533},[741],{"type":441,"value":742},"proto",{"type":432,"tag":465,"props":744,"children":745},{"style":484},[746],{"type":441,"value":509},{"type":432,"tag":465,"props":748,"children":750},{"class":467,"line":749},8,[751,756,760,764,768,773,777,782,786,791],{"type":432,"tag":465,"props":752,"children":753},{"style":516},[754],{"type":441,"value":755},"    if",{"type":432,"tag":465,"props":757,"children":758},{"style":484},[759],{"type":441,"value":524},{"type":432,"tag":465,"props":761,"children":762},{"style":533},[763],{"type":441,"value":742},{"type":432,"tag":465,"props":765,"children":766},{"style":527},[767],{"type":441,"value":561},{"type":432,"tag":465,"props":769,"children":771},{"style":770},"--shiki-light:#DC3EB7;--shiki-default:#DC3EB7;--shiki-dark:#39BAE6",[772],{"type":441,"value":504},{"type":432,"tag":465,"props":774,"children":775},{"style":693},[776],{"type":441,"value":696},{"type":432,"tag":465,"props":778,"children":779},{"style":484},[780],{"type":441,"value":781},"prototype) ",{"type":432,"tag":465,"props":783,"children":784},{"style":516},[785],{"type":441,"value":577},{"type":432,"tag":465,"props":787,"children":788},{"style":564},[789],{"type":441,"value":790}," true",{"type":432,"tag":465,"props":792,"children":793},{"style":496},[794],{"type":441,"value":587},{"type":432,"tag":465,"props":796,"children":798},{"class":467,"line":797},9,[799,804,808,812,816,820,824,828,832],{"type":432,"tag":465,"props":800,"children":801},{"style":533},[802],{"type":441,"value":803},"    proto",{"type":432,"tag":465,"props":805,"children":806},{"style":527},[807],{"type":441,"value":685},{"type":432,"tag":465,"props":809,"children":810},{"style":533},[811],{"type":441,"value":690},{"type":432,"tag":465,"props":813,"children":814},{"style":693},[815],{"type":441,"value":696},{"type":432,"tag":465,"props":817,"children":818},{"style":478},[819],{"type":441,"value":701},{"type":432,"tag":465,"props":821,"children":822},{"style":484},[823],{"type":441,"value":487},{"type":432,"tag":465,"props":825,"children":826},{"style":533},[827],{"type":441,"value":742},{"type":432,"tag":465,"props":829,"children":830},{"style":484},[831],{"type":441,"value":653},{"type":432,"tag":465,"props":833,"children":834},{"style":496},[835],{"type":441,"value":587},{"type":432,"tag":465,"props":837,"children":839},{"class":467,"line":838},10,[840],{"type":432,"tag":465,"props":841,"children":842},{"style":484},[843],{"type":441,"value":666},{"type":432,"tag":465,"props":845,"children":847},{"class":467,"line":846},11,[848,853,857],{"type":432,"tag":465,"props":849,"children":850},{"style":516},[851],{"type":441,"value":852},"  return",{"type":432,"tag":465,"props":854,"children":855},{"style":564},[856],{"type":441,"value":582},{"type":432,"tag":465,"props":858,"children":859},{"style":496},[860],{"type":441,"value":587},{"type":432,"tag":465,"props":862,"children":864},{"class":467,"line":863},12,[865],{"type":432,"tag":465,"props":866,"children":867},{"style":484},[868],{"type":441,"value":869},"}\n",{"type":432,"tag":871,"props":872,"children":873},"style",{},[874],{"type":441,"value":875},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":427,"searchDepth":660,"depth":660,"links":877},[],"markdown","content:3.frontend-code-assessment:1.source:1.native-api:4.instanceof.md","content","3.frontend-code-assessment/1.source/1.native-api/4.instanceof.md","md",[884,886],{"_path":285,"title":284,"description":885},"在调用 new 的过程中会发生以上 4 件事情：",{"_path":291,"title":290,"description":427},1713339877450]