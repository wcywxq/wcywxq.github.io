[{"data":1,"prerenderedAt":893},["Reactive",2],{"navigation":3,"/frontend-code-assessment/source/native-api/instanceof":430,"/frontend-code-assessment/source/native-api/instanceof-surround":889},[4,237,265,409,416],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,402],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396,399],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":379,"_path":380},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":382,"_path":383},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":385,"_path":386},"随机数","/frontend-code-assessment/scene/random-number",{"title":388,"_path":389},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":391,"_path":392},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":394,"_path":395},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":397,"_path":398},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":400,"_path":401},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":403,"_path":404,"children":405},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[406],{"title":407,"_path":408},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":410,"_path":411,"children":412},"项目","/pro",[413],{"title":414,"_path":415},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":417,"_path":418,"children":419},"后端语言","/backend-languages",[420],{"title":421,"_path":422,"children":423},"Python","/backend-languages/python",[424,427],{"title":425,"_path":426},"基础","/backend-languages/python/base",{"title":428,"_path":429},"函数","/backend-languages/python/function",{"_path":288,"_dir":431,"_draft":432,"_partial":432,"_locale":433,"title":287,"description":433,"body":434,"_type":884,"_id":885,"_source":886,"_file":887,"_extension":888},"native-api",false,"",{"type":435,"children":436,"toc":882},"root",[437,459,876],{"type":438,"tag":439,"props":440,"children":441},"element","ol",{},[442,449,454],{"type":438,"tag":443,"props":444,"children":445},"li",{},[446],{"type":447,"value":448},"text","首先获取原型的类型",{"type":438,"tag":443,"props":450,"children":451},{},[452],{"type":447,"value":453},"然后获取对象的类型",{"type":438,"tag":443,"props":455,"children":456},{},[457],{"type":447,"value":458},"然后一直循环判断对象的原型是否等于类型的原型，直到对象原型为 null，因为原型链最终为 null",{"type":438,"tag":460,"props":461,"children":465},"pre",{"className":462,"code":463,"language":464,"meta":433,"style":433},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","function _instanceof(target, origin) {\n  if (typeof target !== \"object\" || target === null) return false;\n  if (typeof origin !== \"function\") {\n    throw new TypeError(\"origin must be function\");\n  }\n  let proto = Object.getPrototypeOf(target); // 相当于: proto = target.__proto__\n  while (proto) {\n    if (proto === origin.prototype) return true;\n    proto = Object.getPrototypeOf(proto);\n  }\n  return false;\n}\n","js",[466],{"type":438,"tag":467,"props":468,"children":469},"code",{"__ignoreMap":433},[470,516,594,627,664,673,731,753,801,842,850,867],{"type":438,"tag":471,"props":472,"children":475},"span",{"class":473,"line":474},"line",1,[476,482,488,494,500,506,511],{"type":438,"tag":471,"props":477,"children":479},{"style":478},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[480],{"type":447,"value":481},"function",{"type":438,"tag":471,"props":483,"children":485},{"style":484},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[486],{"type":447,"value":487}," _instanceof",{"type":438,"tag":471,"props":489,"children":491},{"style":490},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[492],{"type":447,"value":493},"(",{"type":438,"tag":471,"props":495,"children":497},{"style":496},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[498],{"type":447,"value":499},"target",{"type":438,"tag":471,"props":501,"children":503},{"style":502},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[504],{"type":447,"value":505},",",{"type":438,"tag":471,"props":507,"children":508},{"style":496},[509],{"type":447,"value":510}," origin",{"type":438,"tag":471,"props":512,"children":513},{"style":490},[514],{"type":447,"value":515},") {\n",{"type":438,"tag":471,"props":517,"children":519},{"class":473,"line":518},2,[520,526,531,537,543,548,554,559,563,568,574,579,584,589],{"type":438,"tag":471,"props":521,"children":523},{"style":522},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[524],{"type":447,"value":525},"  if",{"type":438,"tag":471,"props":527,"children":528},{"style":490},[529],{"type":447,"value":530}," (",{"type":438,"tag":471,"props":532,"children":534},{"style":533},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[535],{"type":447,"value":536},"typeof",{"type":438,"tag":471,"props":538,"children":540},{"style":539},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[541],{"type":447,"value":542}," target",{"type":438,"tag":471,"props":544,"children":545},{"style":533},[546],{"type":447,"value":547}," !==",{"type":438,"tag":471,"props":549,"children":551},{"style":550},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[552],{"type":447,"value":553}," \"object\"",{"type":438,"tag":471,"props":555,"children":556},{"style":533},[557],{"type":447,"value":558}," ||",{"type":438,"tag":471,"props":560,"children":561},{"style":539},[562],{"type":447,"value":542},{"type":438,"tag":471,"props":564,"children":565},{"style":533},[566],{"type":447,"value":567}," ===",{"type":438,"tag":471,"props":569,"children":571},{"style":570},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[572],{"type":447,"value":573}," null",{"type":438,"tag":471,"props":575,"children":576},{"style":490},[577],{"type":447,"value":578},") ",{"type":438,"tag":471,"props":580,"children":581},{"style":522},[582],{"type":447,"value":583},"return",{"type":438,"tag":471,"props":585,"children":586},{"style":570},[587],{"type":447,"value":588}," false",{"type":438,"tag":471,"props":590,"children":591},{"style":502},[592],{"type":447,"value":593},";\n",{"type":438,"tag":471,"props":595,"children":597},{"class":473,"line":596},3,[598,602,606,610,614,618,623],{"type":438,"tag":471,"props":599,"children":600},{"style":522},[601],{"type":447,"value":525},{"type":438,"tag":471,"props":603,"children":604},{"style":490},[605],{"type":447,"value":530},{"type":438,"tag":471,"props":607,"children":608},{"style":533},[609],{"type":447,"value":536},{"type":438,"tag":471,"props":611,"children":612},{"style":539},[613],{"type":447,"value":510},{"type":438,"tag":471,"props":615,"children":616},{"style":533},[617],{"type":447,"value":547},{"type":438,"tag":471,"props":619,"children":620},{"style":550},[621],{"type":447,"value":622}," \"function\"",{"type":438,"tag":471,"props":624,"children":625},{"style":490},[626],{"type":447,"value":515},{"type":438,"tag":471,"props":628,"children":630},{"class":473,"line":629},4,[631,636,641,646,650,655,660],{"type":438,"tag":471,"props":632,"children":633},{"style":522},[634],{"type":447,"value":635},"    throw",{"type":438,"tag":471,"props":637,"children":638},{"style":533},[639],{"type":447,"value":640}," new",{"type":438,"tag":471,"props":642,"children":643},{"style":484},[644],{"type":447,"value":645}," TypeError",{"type":438,"tag":471,"props":647,"children":648},{"style":490},[649],{"type":447,"value":493},{"type":438,"tag":471,"props":651,"children":652},{"style":550},[653],{"type":447,"value":654},"\"origin must be function\"",{"type":438,"tag":471,"props":656,"children":657},{"style":490},[658],{"type":447,"value":659},")",{"type":438,"tag":471,"props":661,"children":662},{"style":502},[663],{"type":447,"value":593},{"type":438,"tag":471,"props":665,"children":667},{"class":473,"line":666},5,[668],{"type":438,"tag":471,"props":669,"children":670},{"style":490},[671],{"type":447,"value":672},"  }\n",{"type":438,"tag":471,"props":674,"children":676},{"class":473,"line":675},6,[677,682,687,692,697,703,708,712,716,720,725],{"type":438,"tag":471,"props":678,"children":679},{"style":478},[680],{"type":447,"value":681},"  let",{"type":438,"tag":471,"props":683,"children":684},{"style":539},[685],{"type":447,"value":686}," proto",{"type":438,"tag":471,"props":688,"children":689},{"style":533},[690],{"type":447,"value":691}," =",{"type":438,"tag":471,"props":693,"children":694},{"style":539},[695],{"type":447,"value":696}," Object",{"type":438,"tag":471,"props":698,"children":700},{"style":699},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[701],{"type":447,"value":702},".",{"type":438,"tag":471,"props":704,"children":705},{"style":484},[706],{"type":447,"value":707},"getPrototypeOf",{"type":438,"tag":471,"props":709,"children":710},{"style":490},[711],{"type":447,"value":493},{"type":438,"tag":471,"props":713,"children":714},{"style":539},[715],{"type":447,"value":499},{"type":438,"tag":471,"props":717,"children":718},{"style":490},[719],{"type":447,"value":659},{"type":438,"tag":471,"props":721,"children":722},{"style":502},[723],{"type":447,"value":724},";",{"type":438,"tag":471,"props":726,"children":728},{"style":727},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[729],{"type":447,"value":730}," // 相当于: proto = target.__proto__\n",{"type":438,"tag":471,"props":732,"children":734},{"class":473,"line":733},7,[735,740,744,749],{"type":438,"tag":471,"props":736,"children":737},{"style":522},[738],{"type":447,"value":739},"  while",{"type":438,"tag":471,"props":741,"children":742},{"style":490},[743],{"type":447,"value":530},{"type":438,"tag":471,"props":745,"children":746},{"style":539},[747],{"type":447,"value":748},"proto",{"type":438,"tag":471,"props":750,"children":751},{"style":490},[752],{"type":447,"value":515},{"type":438,"tag":471,"props":754,"children":756},{"class":473,"line":755},8,[757,762,766,770,774,779,783,788,792,797],{"type":438,"tag":471,"props":758,"children":759},{"style":522},[760],{"type":447,"value":761},"    if",{"type":438,"tag":471,"props":763,"children":764},{"style":490},[765],{"type":447,"value":530},{"type":438,"tag":471,"props":767,"children":768},{"style":539},[769],{"type":447,"value":748},{"type":438,"tag":471,"props":771,"children":772},{"style":533},[773],{"type":447,"value":567},{"type":438,"tag":471,"props":775,"children":777},{"style":776},"--shiki-light:#DC3EB7;--shiki-default:#DC3EB7;--shiki-dark:#39BAE6",[778],{"type":447,"value":510},{"type":438,"tag":471,"props":780,"children":781},{"style":699},[782],{"type":447,"value":702},{"type":438,"tag":471,"props":784,"children":785},{"style":490},[786],{"type":447,"value":787},"prototype) ",{"type":438,"tag":471,"props":789,"children":790},{"style":522},[791],{"type":447,"value":583},{"type":438,"tag":471,"props":793,"children":794},{"style":570},[795],{"type":447,"value":796}," true",{"type":438,"tag":471,"props":798,"children":799},{"style":502},[800],{"type":447,"value":593},{"type":438,"tag":471,"props":802,"children":804},{"class":473,"line":803},9,[805,810,814,818,822,826,830,834,838],{"type":438,"tag":471,"props":806,"children":807},{"style":539},[808],{"type":447,"value":809},"    proto",{"type":438,"tag":471,"props":811,"children":812},{"style":533},[813],{"type":447,"value":691},{"type":438,"tag":471,"props":815,"children":816},{"style":539},[817],{"type":447,"value":696},{"type":438,"tag":471,"props":819,"children":820},{"style":699},[821],{"type":447,"value":702},{"type":438,"tag":471,"props":823,"children":824},{"style":484},[825],{"type":447,"value":707},{"type":438,"tag":471,"props":827,"children":828},{"style":490},[829],{"type":447,"value":493},{"type":438,"tag":471,"props":831,"children":832},{"style":539},[833],{"type":447,"value":748},{"type":438,"tag":471,"props":835,"children":836},{"style":490},[837],{"type":447,"value":659},{"type":438,"tag":471,"props":839,"children":840},{"style":502},[841],{"type":447,"value":593},{"type":438,"tag":471,"props":843,"children":845},{"class":473,"line":844},10,[846],{"type":438,"tag":471,"props":847,"children":848},{"style":490},[849],{"type":447,"value":672},{"type":438,"tag":471,"props":851,"children":853},{"class":473,"line":852},11,[854,859,863],{"type":438,"tag":471,"props":855,"children":856},{"style":522},[857],{"type":447,"value":858},"  return",{"type":438,"tag":471,"props":860,"children":861},{"style":570},[862],{"type":447,"value":588},{"type":438,"tag":471,"props":864,"children":865},{"style":502},[866],{"type":447,"value":593},{"type":438,"tag":471,"props":868,"children":870},{"class":473,"line":869},12,[871],{"type":438,"tag":471,"props":872,"children":873},{"style":490},[874],{"type":447,"value":875},"}\n",{"type":438,"tag":877,"props":878,"children":879},"style",{},[880],{"type":447,"value":881},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":433,"searchDepth":666,"depth":666,"links":883},[],"markdown","content:3.frontend-code-assessment:1.source:1.native-api:4.instanceof.md","content","3.frontend-code-assessment/1.source/1.native-api/4.instanceof.md","md",[890,892],{"_path":285,"title":284,"description":891},"在调用 new 的过程中会发生以上 4 件事情：",{"_path":291,"title":290,"description":433},1713426817123]