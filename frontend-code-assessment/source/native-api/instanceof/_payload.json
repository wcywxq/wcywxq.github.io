[{"data":1,"prerenderedAt":926},["Reactive",2],{"navigation":3,"/frontend-code-assessment/source/native-api/instanceof":463,"/frontend-code-assessment/source/native-api/instanceof-surround":922},[4,266,295,440,448],{"title":5,"_path":6,"children":7,"icon":265},"算法","/algorithm",[8,28],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30,"children":31},"Leetcode 力扣","/algorithm/leetcode",[32,38,51],{"title":33,"_path":34,"children":35},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[36],{"title":37,"_path":34},"刷题索引",{"title":39,"_path":40,"children":41},"剑指 offer","/algorithm/leetcode/sword-ofter",[42,45,48],{"title":43,"_path":44},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":46,"_path":47},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":49,"_path":50},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":52,"_path":53,"children":54},"主题单","/algorithm/leetcode/major",[55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262],{"title":56,"_path":57},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":59,"_path":60},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":62,"_path":63},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":65,"_path":66},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":68,"_path":69},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":71,"_path":72},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":74,"_path":75},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":77,"_path":78},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":80,"_path":81},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":83,"_path":84},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":86,"_path":87},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":89,"_path":90},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":92,"_path":93},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":95,"_path":96},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":98,"_path":99},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":101,"_path":102},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":104,"_path":105},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":107,"_path":108},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":110,"_path":111},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":113,"_path":114},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":116,"_path":117},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":119,"_path":120},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":122,"_path":123},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":125,"_path":126},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":128,"_path":129},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":131,"_path":132},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":134,"_path":135},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":137,"_path":138},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":140,"_path":141},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":143,"_path":144},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":146,"_path":147},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":149,"_path":150},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":152,"_path":153},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":155,"_path":156},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":158,"_path":159},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":161,"_path":162},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":164,"_path":165},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":167,"_path":168},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":170,"_path":171},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":173,"_path":174},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":176,"_path":177},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":179,"_path":180},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":182,"_path":183},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":185,"_path":186},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":188,"_path":189},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":191,"_path":192},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":194,"_path":195},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":197,"_path":198},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":200,"_path":201},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":203,"_path":204},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":206,"_path":207},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":209,"_path":210},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":212,"_path":213},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":215,"_path":216},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":218,"_path":219},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":221,"_path":222},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":224,"_path":225},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":227,"_path":228},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":230,"_path":231},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":233,"_path":234},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":236,"_path":237},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":239,"_path":240},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":242,"_path":243},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":245,"_path":246},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":248,"_path":249},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":251,"_path":252},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":254,"_path":255},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":257,"_path":258},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":260,"_path":261},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":263,"_path":264},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":267,"_path":268,"children":269,"icon":294},"前端八股文","/frontend-endorsement",[270,281],{"title":271,"_path":272,"children":273},"构建工具","/frontend-endorsement/build-tools",[274],{"title":275,"_path":276,"children":277},"Webpack","/frontend-endorsement/build-tools/webpack",[278],{"title":279,"_path":280},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":282,"_path":283,"children":284},"Html","/frontend-endorsement/html",[285,288,291],{"title":286,"_path":287},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":289,"_path":290},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":292,"_path":293},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":296,"_path":297,"children":298,"icon":439},"前端代码考核","/frontend-code-assessment",[299,348,432],{"title":300,"_path":301,"children":302},"源码实现","/frontend-code-assessment/source",[303,328,341],{"title":304,"_path":305,"children":306},"原生 api","/frontend-code-assessment/source/native-api",[307,310,313,316,319,322,325],{"title":308,"_path":309},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":311,"_path":312},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":314,"_path":315},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":317,"_path":318},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":320,"_path":321},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":323,"_path":324},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":326,"_path":327},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":329,"_path":330,"children":331},"数组 Array","/frontend-code-assessment/source/array",[332,335,338],{"title":333,"_path":334},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":336,"_path":337},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":339,"_path":340},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":342,"_path":343,"children":344},"字符串 String","/frontend-code-assessment/source/string",[345],{"title":346,"_path":347},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":349,"_path":350,"children":351},"业务场景","/frontend-code-assessment/scene",[352,374,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429],{"title":353,"_path":354,"children":355},"Promise","/frontend-code-assessment/scene/promise",[356,359,362,365,368,371],{"title":357,"_path":358},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":360,"_path":361},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":363,"_path":364},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":366,"_path":367},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":369,"_path":370},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":372,"_path":373},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":375,"_path":376,"children":377},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[378],{"title":379,"_path":380},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":382,"_path":383},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":385,"_path":386},"倒计时","/frontend-code-assessment/scene/countdown",{"title":388,"_path":389},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":391,"_path":392},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":394,"_path":395},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":397,"_path":398},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":400,"_path":401},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":403,"_path":404},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":406,"_path":407},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":409,"_path":410},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":412,"_path":413},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":415,"_path":416},"随机数","/frontend-code-assessment/scene/random-number",{"title":418,"_path":419},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":421,"_path":422},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":424,"_path":425},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":427,"_path":428},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":430,"_path":431},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":433,"_path":434,"children":435},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[436],{"title":437,"_path":438},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":441,"_path":442,"children":443,"icon":447},"项目","/pro",[444],{"title":445,"_path":446},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":449,"_path":450,"children":451,"icon":462},"后端语言","/backend-languages",[452],{"title":453,"_path":454,"children":455},"Python","/backend-languages/python",[456,459],{"title":457,"_path":458},"基础","/backend-languages/python/base",{"title":460,"_path":461},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":318,"_dir":464,"_draft":465,"_partial":465,"_locale":466,"title":317,"description":466,"body":467,"_type":917,"_id":918,"_source":919,"_file":920,"_extension":921},"native-api",false,"",{"type":468,"children":469,"toc":915},"root",[470,492,909],{"type":471,"tag":472,"props":473,"children":474},"element","ol",{},[475,482,487],{"type":471,"tag":476,"props":477,"children":478},"li",{},[479],{"type":480,"value":481},"text","首先获取原型的类型",{"type":471,"tag":476,"props":483,"children":484},{},[485],{"type":480,"value":486},"然后获取对象的类型",{"type":471,"tag":476,"props":488,"children":489},{},[490],{"type":480,"value":491},"然后一直循环判断对象的原型是否等于类型的原型，直到对象原型为 null，因为原型链最终为 null",{"type":471,"tag":493,"props":494,"children":498},"pre",{"className":495,"code":496,"language":497,"meta":466,"style":466},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","function _instanceof(target, origin) {\n  if (typeof target !== \"object\" || target === null) return false;\n  if (typeof origin !== \"function\") {\n    throw new TypeError(\"origin must be function\");\n  }\n  let proto = Object.getPrototypeOf(target); // 相当于: proto = target.__proto__\n  while (proto) {\n    if (proto === origin.prototype) return true;\n    proto = Object.getPrototypeOf(proto);\n  }\n  return false;\n}\n","js",[499],{"type":471,"tag":500,"props":501,"children":502},"code",{"__ignoreMap":466},[503,549,627,660,697,706,764,786,834,875,883,900],{"type":471,"tag":504,"props":505,"children":508},"span",{"class":506,"line":507},"line",1,[509,515,521,527,533,539,544],{"type":471,"tag":504,"props":510,"children":512},{"style":511},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[513],{"type":480,"value":514},"function",{"type":471,"tag":504,"props":516,"children":518},{"style":517},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[519],{"type":480,"value":520}," _instanceof",{"type":471,"tag":504,"props":522,"children":524},{"style":523},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[525],{"type":480,"value":526},"(",{"type":471,"tag":504,"props":528,"children":530},{"style":529},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[531],{"type":480,"value":532},"target",{"type":471,"tag":504,"props":534,"children":536},{"style":535},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[537],{"type":480,"value":538},",",{"type":471,"tag":504,"props":540,"children":541},{"style":529},[542],{"type":480,"value":543}," origin",{"type":471,"tag":504,"props":545,"children":546},{"style":523},[547],{"type":480,"value":548},") {\n",{"type":471,"tag":504,"props":550,"children":552},{"class":506,"line":551},2,[553,559,564,570,576,581,587,592,596,601,607,612,617,622],{"type":471,"tag":504,"props":554,"children":556},{"style":555},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[557],{"type":480,"value":558},"  if",{"type":471,"tag":504,"props":560,"children":561},{"style":523},[562],{"type":480,"value":563}," (",{"type":471,"tag":504,"props":565,"children":567},{"style":566},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[568],{"type":480,"value":569},"typeof",{"type":471,"tag":504,"props":571,"children":573},{"style":572},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[574],{"type":480,"value":575}," target",{"type":471,"tag":504,"props":577,"children":578},{"style":566},[579],{"type":480,"value":580}," !==",{"type":471,"tag":504,"props":582,"children":584},{"style":583},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[585],{"type":480,"value":586}," \"object\"",{"type":471,"tag":504,"props":588,"children":589},{"style":566},[590],{"type":480,"value":591}," ||",{"type":471,"tag":504,"props":593,"children":594},{"style":572},[595],{"type":480,"value":575},{"type":471,"tag":504,"props":597,"children":598},{"style":566},[599],{"type":480,"value":600}," ===",{"type":471,"tag":504,"props":602,"children":604},{"style":603},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[605],{"type":480,"value":606}," null",{"type":471,"tag":504,"props":608,"children":609},{"style":523},[610],{"type":480,"value":611},") ",{"type":471,"tag":504,"props":613,"children":614},{"style":555},[615],{"type":480,"value":616},"return",{"type":471,"tag":504,"props":618,"children":619},{"style":603},[620],{"type":480,"value":621}," false",{"type":471,"tag":504,"props":623,"children":624},{"style":535},[625],{"type":480,"value":626},";\n",{"type":471,"tag":504,"props":628,"children":630},{"class":506,"line":629},3,[631,635,639,643,647,651,656],{"type":471,"tag":504,"props":632,"children":633},{"style":555},[634],{"type":480,"value":558},{"type":471,"tag":504,"props":636,"children":637},{"style":523},[638],{"type":480,"value":563},{"type":471,"tag":504,"props":640,"children":641},{"style":566},[642],{"type":480,"value":569},{"type":471,"tag":504,"props":644,"children":645},{"style":572},[646],{"type":480,"value":543},{"type":471,"tag":504,"props":648,"children":649},{"style":566},[650],{"type":480,"value":580},{"type":471,"tag":504,"props":652,"children":653},{"style":583},[654],{"type":480,"value":655}," \"function\"",{"type":471,"tag":504,"props":657,"children":658},{"style":523},[659],{"type":480,"value":548},{"type":471,"tag":504,"props":661,"children":663},{"class":506,"line":662},4,[664,669,674,679,683,688,693],{"type":471,"tag":504,"props":665,"children":666},{"style":555},[667],{"type":480,"value":668},"    throw",{"type":471,"tag":504,"props":670,"children":671},{"style":566},[672],{"type":480,"value":673}," new",{"type":471,"tag":504,"props":675,"children":676},{"style":517},[677],{"type":480,"value":678}," TypeError",{"type":471,"tag":504,"props":680,"children":681},{"style":523},[682],{"type":480,"value":526},{"type":471,"tag":504,"props":684,"children":685},{"style":583},[686],{"type":480,"value":687},"\"origin must be function\"",{"type":471,"tag":504,"props":689,"children":690},{"style":523},[691],{"type":480,"value":692},")",{"type":471,"tag":504,"props":694,"children":695},{"style":535},[696],{"type":480,"value":626},{"type":471,"tag":504,"props":698,"children":700},{"class":506,"line":699},5,[701],{"type":471,"tag":504,"props":702,"children":703},{"style":523},[704],{"type":480,"value":705},"  }\n",{"type":471,"tag":504,"props":707,"children":709},{"class":506,"line":708},6,[710,715,720,725,730,736,741,745,749,753,758],{"type":471,"tag":504,"props":711,"children":712},{"style":511},[713],{"type":480,"value":714},"  let",{"type":471,"tag":504,"props":716,"children":717},{"style":572},[718],{"type":480,"value":719}," proto",{"type":471,"tag":504,"props":721,"children":722},{"style":566},[723],{"type":480,"value":724}," =",{"type":471,"tag":504,"props":726,"children":727},{"style":572},[728],{"type":480,"value":729}," Object",{"type":471,"tag":504,"props":731,"children":733},{"style":732},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[734],{"type":480,"value":735},".",{"type":471,"tag":504,"props":737,"children":738},{"style":517},[739],{"type":480,"value":740},"getPrototypeOf",{"type":471,"tag":504,"props":742,"children":743},{"style":523},[744],{"type":480,"value":526},{"type":471,"tag":504,"props":746,"children":747},{"style":572},[748],{"type":480,"value":532},{"type":471,"tag":504,"props":750,"children":751},{"style":523},[752],{"type":480,"value":692},{"type":471,"tag":504,"props":754,"children":755},{"style":535},[756],{"type":480,"value":757},";",{"type":471,"tag":504,"props":759,"children":761},{"style":760},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[762],{"type":480,"value":763}," // 相当于: proto = target.__proto__\n",{"type":471,"tag":504,"props":765,"children":767},{"class":506,"line":766},7,[768,773,777,782],{"type":471,"tag":504,"props":769,"children":770},{"style":555},[771],{"type":480,"value":772},"  while",{"type":471,"tag":504,"props":774,"children":775},{"style":523},[776],{"type":480,"value":563},{"type":471,"tag":504,"props":778,"children":779},{"style":572},[780],{"type":480,"value":781},"proto",{"type":471,"tag":504,"props":783,"children":784},{"style":523},[785],{"type":480,"value":548},{"type":471,"tag":504,"props":787,"children":789},{"class":506,"line":788},8,[790,795,799,803,807,812,816,821,825,830],{"type":471,"tag":504,"props":791,"children":792},{"style":555},[793],{"type":480,"value":794},"    if",{"type":471,"tag":504,"props":796,"children":797},{"style":523},[798],{"type":480,"value":563},{"type":471,"tag":504,"props":800,"children":801},{"style":572},[802],{"type":480,"value":781},{"type":471,"tag":504,"props":804,"children":805},{"style":566},[806],{"type":480,"value":600},{"type":471,"tag":504,"props":808,"children":810},{"style":809},"--shiki-light:#DC3EB7;--shiki-default:#DC3EB7;--shiki-dark:#39BAE6",[811],{"type":480,"value":543},{"type":471,"tag":504,"props":813,"children":814},{"style":732},[815],{"type":480,"value":735},{"type":471,"tag":504,"props":817,"children":818},{"style":523},[819],{"type":480,"value":820},"prototype) ",{"type":471,"tag":504,"props":822,"children":823},{"style":555},[824],{"type":480,"value":616},{"type":471,"tag":504,"props":826,"children":827},{"style":603},[828],{"type":480,"value":829}," true",{"type":471,"tag":504,"props":831,"children":832},{"style":535},[833],{"type":480,"value":626},{"type":471,"tag":504,"props":835,"children":837},{"class":506,"line":836},9,[838,843,847,851,855,859,863,867,871],{"type":471,"tag":504,"props":839,"children":840},{"style":572},[841],{"type":480,"value":842},"    proto",{"type":471,"tag":504,"props":844,"children":845},{"style":566},[846],{"type":480,"value":724},{"type":471,"tag":504,"props":848,"children":849},{"style":572},[850],{"type":480,"value":729},{"type":471,"tag":504,"props":852,"children":853},{"style":732},[854],{"type":480,"value":735},{"type":471,"tag":504,"props":856,"children":857},{"style":517},[858],{"type":480,"value":740},{"type":471,"tag":504,"props":860,"children":861},{"style":523},[862],{"type":480,"value":526},{"type":471,"tag":504,"props":864,"children":865},{"style":572},[866],{"type":480,"value":781},{"type":471,"tag":504,"props":868,"children":869},{"style":523},[870],{"type":480,"value":692},{"type":471,"tag":504,"props":872,"children":873},{"style":535},[874],{"type":480,"value":626},{"type":471,"tag":504,"props":876,"children":878},{"class":506,"line":877},10,[879],{"type":471,"tag":504,"props":880,"children":881},{"style":523},[882],{"type":480,"value":705},{"type":471,"tag":504,"props":884,"children":886},{"class":506,"line":885},11,[887,892,896],{"type":471,"tag":504,"props":888,"children":889},{"style":555},[890],{"type":480,"value":891},"  return",{"type":471,"tag":504,"props":893,"children":894},{"style":603},[895],{"type":480,"value":621},{"type":471,"tag":504,"props":897,"children":898},{"style":535},[899],{"type":480,"value":626},{"type":471,"tag":504,"props":901,"children":903},{"class":506,"line":902},12,[904],{"type":471,"tag":504,"props":905,"children":906},{"style":523},[907],{"type":480,"value":908},"}\n",{"type":471,"tag":910,"props":911,"children":912},"style",{},[913],{"type":480,"value":914},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":466,"searchDepth":699,"depth":699,"links":916},[],"markdown","content:3.frontend-code-assessment:1.source:1.native-api:4.instanceof.md","content","3.frontend-code-assessment/1.source/1.native-api/4.instanceof.md","md",[923,925],{"_path":315,"title":314,"description":924},"在调用 new 的过程中会发生以上 4 件事情：",{"_path":321,"title":320,"description":466},1713695850296]