[{"data":1,"prerenderedAt":868},["Reactive",2],{"navigation":3,"/frontend-code-assessment/source/native-api/instanceof":405,"/frontend-code-assessment/source/native-api/instanceof-surround":864},[4,237,265,384,391],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,377],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,347,350,353,356,359,362,365,368,371,374],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":348,"_path":349},"倒计时","/frontend-code-assessment/scene/countdown",{"title":351,"_path":352},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":354,"_path":355},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":357,"_path":358},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":360,"_path":361},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":363,"_path":364},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":366,"_path":367},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":369,"_path":370},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":372,"_path":373},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":375,"_path":376},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":378,"_path":379,"children":380},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[381],{"title":382,"_path":383},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":385,"_path":386,"children":387},"项目","/pro",[388],{"title":389,"_path":390},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":392,"_path":393,"children":394},"后端语言","/backend-languages",[395],{"title":396,"_path":397,"children":398},"Python","/backend-languages/python",[399,402],{"title":400,"_path":401},"基础","/backend-languages/python/base",{"title":403,"_path":404},"函数","/backend-languages/python/function",{"_path":288,"_dir":406,"_draft":407,"_partial":407,"_locale":408,"title":287,"description":408,"body":409,"_type":859,"_id":860,"_source":861,"_file":862,"_extension":863},"native-api",false,"",{"type":410,"children":411,"toc":857},"root",[412,434,851],{"type":413,"tag":414,"props":415,"children":416},"element","ol",{},[417,424,429],{"type":413,"tag":418,"props":419,"children":420},"li",{},[421],{"type":422,"value":423},"text","首先获取原型的类型",{"type":413,"tag":418,"props":425,"children":426},{},[427],{"type":422,"value":428},"然后获取对象的类型",{"type":413,"tag":418,"props":430,"children":431},{},[432],{"type":422,"value":433},"然后一直循环判断对象的原型是否等于类型的原型，直到对象原型为 null，因为原型链最终为 null",{"type":413,"tag":435,"props":436,"children":440},"pre",{"className":437,"code":438,"language":439,"meta":408,"style":408},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","function _instanceof(target, origin) {\n  if (typeof target !== \"object\" || target === null) return false;\n  if (typeof origin !== \"function\") {\n    throw new TypeError(\"origin must be function\");\n  }\n  let proto = Object.getPrototypeOf(target); // 相当于: proto = target.__proto__\n  while (proto) {\n    if (proto === origin.prototype) return true;\n    proto = Object.getPrototypeOf(proto);\n  }\n  return false;\n}\n","js",[441],{"type":413,"tag":442,"props":443,"children":444},"code",{"__ignoreMap":408},[445,491,569,602,639,648,706,728,776,817,825,842],{"type":413,"tag":446,"props":447,"children":450},"span",{"class":448,"line":449},"line",1,[451,457,463,469,475,481,486],{"type":413,"tag":446,"props":452,"children":454},{"style":453},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[455],{"type":422,"value":456},"function",{"type":413,"tag":446,"props":458,"children":460},{"style":459},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[461],{"type":422,"value":462}," _instanceof",{"type":413,"tag":446,"props":464,"children":466},{"style":465},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[467],{"type":422,"value":468},"(",{"type":413,"tag":446,"props":470,"children":472},{"style":471},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[473],{"type":422,"value":474},"target",{"type":413,"tag":446,"props":476,"children":478},{"style":477},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[479],{"type":422,"value":480},",",{"type":413,"tag":446,"props":482,"children":483},{"style":471},[484],{"type":422,"value":485}," origin",{"type":413,"tag":446,"props":487,"children":488},{"style":465},[489],{"type":422,"value":490},") {\n",{"type":413,"tag":446,"props":492,"children":494},{"class":448,"line":493},2,[495,501,506,512,518,523,529,534,538,543,549,554,559,564],{"type":413,"tag":446,"props":496,"children":498},{"style":497},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[499],{"type":422,"value":500},"  if",{"type":413,"tag":446,"props":502,"children":503},{"style":465},[504],{"type":422,"value":505}," (",{"type":413,"tag":446,"props":507,"children":509},{"style":508},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[510],{"type":422,"value":511},"typeof",{"type":413,"tag":446,"props":513,"children":515},{"style":514},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[516],{"type":422,"value":517}," target",{"type":413,"tag":446,"props":519,"children":520},{"style":508},[521],{"type":422,"value":522}," !==",{"type":413,"tag":446,"props":524,"children":526},{"style":525},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[527],{"type":422,"value":528}," \"object\"",{"type":413,"tag":446,"props":530,"children":531},{"style":508},[532],{"type":422,"value":533}," ||",{"type":413,"tag":446,"props":535,"children":536},{"style":514},[537],{"type":422,"value":517},{"type":413,"tag":446,"props":539,"children":540},{"style":508},[541],{"type":422,"value":542}," ===",{"type":413,"tag":446,"props":544,"children":546},{"style":545},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[547],{"type":422,"value":548}," null",{"type":413,"tag":446,"props":550,"children":551},{"style":465},[552],{"type":422,"value":553},") ",{"type":413,"tag":446,"props":555,"children":556},{"style":497},[557],{"type":422,"value":558},"return",{"type":413,"tag":446,"props":560,"children":561},{"style":545},[562],{"type":422,"value":563}," false",{"type":413,"tag":446,"props":565,"children":566},{"style":477},[567],{"type":422,"value":568},";\n",{"type":413,"tag":446,"props":570,"children":572},{"class":448,"line":571},3,[573,577,581,585,589,593,598],{"type":413,"tag":446,"props":574,"children":575},{"style":497},[576],{"type":422,"value":500},{"type":413,"tag":446,"props":578,"children":579},{"style":465},[580],{"type":422,"value":505},{"type":413,"tag":446,"props":582,"children":583},{"style":508},[584],{"type":422,"value":511},{"type":413,"tag":446,"props":586,"children":587},{"style":514},[588],{"type":422,"value":485},{"type":413,"tag":446,"props":590,"children":591},{"style":508},[592],{"type":422,"value":522},{"type":413,"tag":446,"props":594,"children":595},{"style":525},[596],{"type":422,"value":597}," \"function\"",{"type":413,"tag":446,"props":599,"children":600},{"style":465},[601],{"type":422,"value":490},{"type":413,"tag":446,"props":603,"children":605},{"class":448,"line":604},4,[606,611,616,621,625,630,635],{"type":413,"tag":446,"props":607,"children":608},{"style":497},[609],{"type":422,"value":610},"    throw",{"type":413,"tag":446,"props":612,"children":613},{"style":508},[614],{"type":422,"value":615}," new",{"type":413,"tag":446,"props":617,"children":618},{"style":459},[619],{"type":422,"value":620}," TypeError",{"type":413,"tag":446,"props":622,"children":623},{"style":465},[624],{"type":422,"value":468},{"type":413,"tag":446,"props":626,"children":627},{"style":525},[628],{"type":422,"value":629},"\"origin must be function\"",{"type":413,"tag":446,"props":631,"children":632},{"style":465},[633],{"type":422,"value":634},")",{"type":413,"tag":446,"props":636,"children":637},{"style":477},[638],{"type":422,"value":568},{"type":413,"tag":446,"props":640,"children":642},{"class":448,"line":641},5,[643],{"type":413,"tag":446,"props":644,"children":645},{"style":465},[646],{"type":422,"value":647},"  }\n",{"type":413,"tag":446,"props":649,"children":651},{"class":448,"line":650},6,[652,657,662,667,672,678,683,687,691,695,700],{"type":413,"tag":446,"props":653,"children":654},{"style":453},[655],{"type":422,"value":656},"  let",{"type":413,"tag":446,"props":658,"children":659},{"style":514},[660],{"type":422,"value":661}," proto",{"type":413,"tag":446,"props":663,"children":664},{"style":508},[665],{"type":422,"value":666}," =",{"type":413,"tag":446,"props":668,"children":669},{"style":514},[670],{"type":422,"value":671}," Object",{"type":413,"tag":446,"props":673,"children":675},{"style":674},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[676],{"type":422,"value":677},".",{"type":413,"tag":446,"props":679,"children":680},{"style":459},[681],{"type":422,"value":682},"getPrototypeOf",{"type":413,"tag":446,"props":684,"children":685},{"style":465},[686],{"type":422,"value":468},{"type":413,"tag":446,"props":688,"children":689},{"style":514},[690],{"type":422,"value":474},{"type":413,"tag":446,"props":692,"children":693},{"style":465},[694],{"type":422,"value":634},{"type":413,"tag":446,"props":696,"children":697},{"style":477},[698],{"type":422,"value":699},";",{"type":413,"tag":446,"props":701,"children":703},{"style":702},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[704],{"type":422,"value":705}," // 相当于: proto = target.__proto__\n",{"type":413,"tag":446,"props":707,"children":709},{"class":448,"line":708},7,[710,715,719,724],{"type":413,"tag":446,"props":711,"children":712},{"style":497},[713],{"type":422,"value":714},"  while",{"type":413,"tag":446,"props":716,"children":717},{"style":465},[718],{"type":422,"value":505},{"type":413,"tag":446,"props":720,"children":721},{"style":514},[722],{"type":422,"value":723},"proto",{"type":413,"tag":446,"props":725,"children":726},{"style":465},[727],{"type":422,"value":490},{"type":413,"tag":446,"props":729,"children":731},{"class":448,"line":730},8,[732,737,741,745,749,754,758,763,767,772],{"type":413,"tag":446,"props":733,"children":734},{"style":497},[735],{"type":422,"value":736},"    if",{"type":413,"tag":446,"props":738,"children":739},{"style":465},[740],{"type":422,"value":505},{"type":413,"tag":446,"props":742,"children":743},{"style":514},[744],{"type":422,"value":723},{"type":413,"tag":446,"props":746,"children":747},{"style":508},[748],{"type":422,"value":542},{"type":413,"tag":446,"props":750,"children":752},{"style":751},"--shiki-light:#DC3EB7;--shiki-default:#DC3EB7;--shiki-dark:#39BAE6",[753],{"type":422,"value":485},{"type":413,"tag":446,"props":755,"children":756},{"style":674},[757],{"type":422,"value":677},{"type":413,"tag":446,"props":759,"children":760},{"style":465},[761],{"type":422,"value":762},"prototype) ",{"type":413,"tag":446,"props":764,"children":765},{"style":497},[766],{"type":422,"value":558},{"type":413,"tag":446,"props":768,"children":769},{"style":545},[770],{"type":422,"value":771}," true",{"type":413,"tag":446,"props":773,"children":774},{"style":477},[775],{"type":422,"value":568},{"type":413,"tag":446,"props":777,"children":779},{"class":448,"line":778},9,[780,785,789,793,797,801,805,809,813],{"type":413,"tag":446,"props":781,"children":782},{"style":514},[783],{"type":422,"value":784},"    proto",{"type":413,"tag":446,"props":786,"children":787},{"style":508},[788],{"type":422,"value":666},{"type":413,"tag":446,"props":790,"children":791},{"style":514},[792],{"type":422,"value":671},{"type":413,"tag":446,"props":794,"children":795},{"style":674},[796],{"type":422,"value":677},{"type":413,"tag":446,"props":798,"children":799},{"style":459},[800],{"type":422,"value":682},{"type":413,"tag":446,"props":802,"children":803},{"style":465},[804],{"type":422,"value":468},{"type":413,"tag":446,"props":806,"children":807},{"style":514},[808],{"type":422,"value":723},{"type":413,"tag":446,"props":810,"children":811},{"style":465},[812],{"type":422,"value":634},{"type":413,"tag":446,"props":814,"children":815},{"style":477},[816],{"type":422,"value":568},{"type":413,"tag":446,"props":818,"children":820},{"class":448,"line":819},10,[821],{"type":413,"tag":446,"props":822,"children":823},{"style":465},[824],{"type":422,"value":647},{"type":413,"tag":446,"props":826,"children":828},{"class":448,"line":827},11,[829,834,838],{"type":413,"tag":446,"props":830,"children":831},{"style":497},[832],{"type":422,"value":833},"  return",{"type":413,"tag":446,"props":835,"children":836},{"style":545},[837],{"type":422,"value":563},{"type":413,"tag":446,"props":839,"children":840},{"style":477},[841],{"type":422,"value":568},{"type":413,"tag":446,"props":843,"children":845},{"class":448,"line":844},12,[846],{"type":413,"tag":446,"props":847,"children":848},{"style":465},[849],{"type":422,"value":850},"}\n",{"type":413,"tag":852,"props":853,"children":854},"style",{},[855],{"type":422,"value":856},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":408,"searchDepth":641,"depth":641,"links":858},[],"markdown","content:3.frontend-code-assessment:1.source:1.native-api:4.instanceof.md","content","3.frontend-code-assessment/1.source/1.native-api/4.instanceof.md","md",[865,867],{"_path":285,"title":284,"description":866},"在调用 new 的过程中会发生以上 4 件事情：",{"_path":291,"title":290,"description":408},1713320367616]