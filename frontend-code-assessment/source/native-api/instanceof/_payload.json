[{"data":1,"prerenderedAt":923},["Reactive",2],{"navigation":3,"/frontend-code-assessment/source/native-api/instanceof":460,"/frontend-code-assessment/source/native-api/instanceof-surround":919},[4,263,292,437,445],{"title":5,"_path":6,"children":7,"icon":262},"算法","/algorithm",[8,25],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27,"children":28},"Leetcode 力扣","/algorithm/leetcode",[29,35,48],{"title":30,"_path":31,"children":32},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[33],{"title":34,"_path":31},"刷题索引",{"title":36,"_path":37,"children":38},"剑指 offer","/algorithm/leetcode/sword-ofter",[39,42,45],{"title":40,"_path":41},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":43,"_path":44},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":46,"_path":47},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":49,"_path":50,"children":51},"主题单","/algorithm/leetcode/major",[52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259],{"title":53,"_path":54},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":56,"_path":57},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":59,"_path":60},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":62,"_path":63},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":65,"_path":66},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":68,"_path":69},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":71,"_path":72},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":74,"_path":75},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":77,"_path":78},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":80,"_path":81},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":83,"_path":84},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":86,"_path":87},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":89,"_path":90},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":92,"_path":93},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":95,"_path":96},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":98,"_path":99},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":101,"_path":102},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":104,"_path":105},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":107,"_path":108},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":110,"_path":111},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":113,"_path":114},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":116,"_path":117},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":119,"_path":120},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":122,"_path":123},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":125,"_path":126},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":128,"_path":129},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":131,"_path":132},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":134,"_path":135},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":137,"_path":138},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":140,"_path":141},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":143,"_path":144},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":146,"_path":147},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":149,"_path":150},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":152,"_path":153},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":155,"_path":156},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":158,"_path":159},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":161,"_path":162},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":164,"_path":165},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":167,"_path":168},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":170,"_path":171},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":173,"_path":174},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":176,"_path":177},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":179,"_path":180},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":182,"_path":183},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":185,"_path":186},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":188,"_path":189},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":191,"_path":192},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":194,"_path":195},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":197,"_path":198},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":200,"_path":201},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":203,"_path":204},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":206,"_path":207},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":209,"_path":210},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":212,"_path":213},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":215,"_path":216},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":218,"_path":219},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":221,"_path":222},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":224,"_path":225},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":227,"_path":228},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":230,"_path":231},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":233,"_path":234},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":236,"_path":237},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":239,"_path":240},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":242,"_path":243},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":245,"_path":246},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":248,"_path":249},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":251,"_path":252},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":254,"_path":255},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":257,"_path":258},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":260,"_path":261},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":264,"_path":265,"children":266,"icon":291},"前端八股文","/frontend-endorsement",[267,278],{"title":268,"_path":269,"children":270},"构建工具","/frontend-endorsement/build-tools",[271],{"title":272,"_path":273,"children":274},"Webpack","/frontend-endorsement/build-tools/webpack",[275],{"title":276,"_path":277},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":279,"_path":280,"children":281},"Html","/frontend-endorsement/html",[282,285,288],{"title":283,"_path":284},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":286,"_path":287},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":289,"_path":290},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":293,"_path":294,"children":295,"icon":436},"前端代码考核","/frontend-code-assessment",[296,345,429],{"title":297,"_path":298,"children":299},"源码实现","/frontend-code-assessment/source",[300,325,338],{"title":301,"_path":302,"children":303},"原生 api","/frontend-code-assessment/source/native-api",[304,307,310,313,316,319,322],{"title":305,"_path":306},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":308,"_path":309},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":311,"_path":312},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":314,"_path":315},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":317,"_path":318},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":320,"_path":321},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":323,"_path":324},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":326,"_path":327,"children":328},"数组 Array","/frontend-code-assessment/source/array",[329,332,335],{"title":330,"_path":331},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":333,"_path":334},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":336,"_path":337},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":339,"_path":340,"children":341},"字符串 String","/frontend-code-assessment/source/string",[342],{"title":343,"_path":344},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":346,"_path":347,"children":348},"业务场景","/frontend-code-assessment/scene",[349,371,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426],{"title":350,"_path":351,"children":352},"Promise","/frontend-code-assessment/scene/promise",[353,356,359,362,365,368],{"title":354,"_path":355},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":357,"_path":358},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":360,"_path":361},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":363,"_path":364},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":366,"_path":367},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":369,"_path":370},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":372,"_path":373,"children":374},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[375],{"title":376,"_path":377},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":379,"_path":380},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":382,"_path":383},"倒计时","/frontend-code-assessment/scene/countdown",{"title":385,"_path":386},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":388,"_path":389},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":391,"_path":392},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":394,"_path":395},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":397,"_path":398},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":400,"_path":401},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":403,"_path":404},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":406,"_path":407},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":409,"_path":410},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":412,"_path":413},"随机数","/frontend-code-assessment/scene/random-number",{"title":415,"_path":416},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":418,"_path":419},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":421,"_path":422},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":424,"_path":425},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":427,"_path":428},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":430,"_path":431,"children":432},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[433],{"title":434,"_path":435},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":438,"_path":439,"children":440,"icon":444},"项目","/pro",[441],{"title":442,"_path":443},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":446,"_path":447,"children":448,"icon":459},"后端语言","/backend-languages",[449],{"title":450,"_path":451,"children":452},"Python","/backend-languages/python",[453,456],{"title":454,"_path":455},"基础","/backend-languages/python/base",{"title":457,"_path":458},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":315,"_dir":461,"_draft":462,"_partial":462,"_locale":463,"title":314,"description":463,"body":464,"_type":914,"_id":915,"_source":916,"_file":917,"_extension":918},"native-api",false,"",{"type":465,"children":466,"toc":912},"root",[467,489,906],{"type":468,"tag":469,"props":470,"children":471},"element","ol",{},[472,479,484],{"type":468,"tag":473,"props":474,"children":475},"li",{},[476],{"type":477,"value":478},"text","首先获取原型的类型",{"type":468,"tag":473,"props":480,"children":481},{},[482],{"type":477,"value":483},"然后获取对象的类型",{"type":468,"tag":473,"props":485,"children":486},{},[487],{"type":477,"value":488},"然后一直循环判断对象的原型是否等于类型的原型，直到对象原型为 null，因为原型链最终为 null",{"type":468,"tag":490,"props":491,"children":495},"pre",{"className":492,"code":493,"language":494,"meta":463,"style":463},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","function _instanceof(target, origin) {\n  if (typeof target !== \"object\" || target === null) return false;\n  if (typeof origin !== \"function\") {\n    throw new TypeError(\"origin must be function\");\n  }\n  let proto = Object.getPrototypeOf(target); // 相当于: proto = target.__proto__\n  while (proto) {\n    if (proto === origin.prototype) return true;\n    proto = Object.getPrototypeOf(proto);\n  }\n  return false;\n}\n","js",[496],{"type":468,"tag":497,"props":498,"children":499},"code",{"__ignoreMap":463},[500,546,624,657,694,703,761,783,831,872,880,897],{"type":468,"tag":501,"props":502,"children":505},"span",{"class":503,"line":504},"line",1,[506,512,518,524,530,536,541],{"type":468,"tag":501,"props":507,"children":509},{"style":508},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[510],{"type":477,"value":511},"function",{"type":468,"tag":501,"props":513,"children":515},{"style":514},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[516],{"type":477,"value":517}," _instanceof",{"type":468,"tag":501,"props":519,"children":521},{"style":520},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[522],{"type":477,"value":523},"(",{"type":468,"tag":501,"props":525,"children":527},{"style":526},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[528],{"type":477,"value":529},"target",{"type":468,"tag":501,"props":531,"children":533},{"style":532},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[534],{"type":477,"value":535},",",{"type":468,"tag":501,"props":537,"children":538},{"style":526},[539],{"type":477,"value":540}," origin",{"type":468,"tag":501,"props":542,"children":543},{"style":520},[544],{"type":477,"value":545},") {\n",{"type":468,"tag":501,"props":547,"children":549},{"class":503,"line":548},2,[550,556,561,567,573,578,584,589,593,598,604,609,614,619],{"type":468,"tag":501,"props":551,"children":553},{"style":552},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[554],{"type":477,"value":555},"  if",{"type":468,"tag":501,"props":557,"children":558},{"style":520},[559],{"type":477,"value":560}," (",{"type":468,"tag":501,"props":562,"children":564},{"style":563},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[565],{"type":477,"value":566},"typeof",{"type":468,"tag":501,"props":568,"children":570},{"style":569},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[571],{"type":477,"value":572}," target",{"type":468,"tag":501,"props":574,"children":575},{"style":563},[576],{"type":477,"value":577}," !==",{"type":468,"tag":501,"props":579,"children":581},{"style":580},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[582],{"type":477,"value":583}," \"object\"",{"type":468,"tag":501,"props":585,"children":586},{"style":563},[587],{"type":477,"value":588}," ||",{"type":468,"tag":501,"props":590,"children":591},{"style":569},[592],{"type":477,"value":572},{"type":468,"tag":501,"props":594,"children":595},{"style":563},[596],{"type":477,"value":597}," ===",{"type":468,"tag":501,"props":599,"children":601},{"style":600},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[602],{"type":477,"value":603}," null",{"type":468,"tag":501,"props":605,"children":606},{"style":520},[607],{"type":477,"value":608},") ",{"type":468,"tag":501,"props":610,"children":611},{"style":552},[612],{"type":477,"value":613},"return",{"type":468,"tag":501,"props":615,"children":616},{"style":600},[617],{"type":477,"value":618}," false",{"type":468,"tag":501,"props":620,"children":621},{"style":532},[622],{"type":477,"value":623},";\n",{"type":468,"tag":501,"props":625,"children":627},{"class":503,"line":626},3,[628,632,636,640,644,648,653],{"type":468,"tag":501,"props":629,"children":630},{"style":552},[631],{"type":477,"value":555},{"type":468,"tag":501,"props":633,"children":634},{"style":520},[635],{"type":477,"value":560},{"type":468,"tag":501,"props":637,"children":638},{"style":563},[639],{"type":477,"value":566},{"type":468,"tag":501,"props":641,"children":642},{"style":569},[643],{"type":477,"value":540},{"type":468,"tag":501,"props":645,"children":646},{"style":563},[647],{"type":477,"value":577},{"type":468,"tag":501,"props":649,"children":650},{"style":580},[651],{"type":477,"value":652}," \"function\"",{"type":468,"tag":501,"props":654,"children":655},{"style":520},[656],{"type":477,"value":545},{"type":468,"tag":501,"props":658,"children":660},{"class":503,"line":659},4,[661,666,671,676,680,685,690],{"type":468,"tag":501,"props":662,"children":663},{"style":552},[664],{"type":477,"value":665},"    throw",{"type":468,"tag":501,"props":667,"children":668},{"style":563},[669],{"type":477,"value":670}," new",{"type":468,"tag":501,"props":672,"children":673},{"style":514},[674],{"type":477,"value":675}," TypeError",{"type":468,"tag":501,"props":677,"children":678},{"style":520},[679],{"type":477,"value":523},{"type":468,"tag":501,"props":681,"children":682},{"style":580},[683],{"type":477,"value":684},"\"origin must be function\"",{"type":468,"tag":501,"props":686,"children":687},{"style":520},[688],{"type":477,"value":689},")",{"type":468,"tag":501,"props":691,"children":692},{"style":532},[693],{"type":477,"value":623},{"type":468,"tag":501,"props":695,"children":697},{"class":503,"line":696},5,[698],{"type":468,"tag":501,"props":699,"children":700},{"style":520},[701],{"type":477,"value":702},"  }\n",{"type":468,"tag":501,"props":704,"children":706},{"class":503,"line":705},6,[707,712,717,722,727,733,738,742,746,750,755],{"type":468,"tag":501,"props":708,"children":709},{"style":508},[710],{"type":477,"value":711},"  let",{"type":468,"tag":501,"props":713,"children":714},{"style":569},[715],{"type":477,"value":716}," proto",{"type":468,"tag":501,"props":718,"children":719},{"style":563},[720],{"type":477,"value":721}," =",{"type":468,"tag":501,"props":723,"children":724},{"style":569},[725],{"type":477,"value":726}," Object",{"type":468,"tag":501,"props":728,"children":730},{"style":729},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[731],{"type":477,"value":732},".",{"type":468,"tag":501,"props":734,"children":735},{"style":514},[736],{"type":477,"value":737},"getPrototypeOf",{"type":468,"tag":501,"props":739,"children":740},{"style":520},[741],{"type":477,"value":523},{"type":468,"tag":501,"props":743,"children":744},{"style":569},[745],{"type":477,"value":529},{"type":468,"tag":501,"props":747,"children":748},{"style":520},[749],{"type":477,"value":689},{"type":468,"tag":501,"props":751,"children":752},{"style":532},[753],{"type":477,"value":754},";",{"type":468,"tag":501,"props":756,"children":758},{"style":757},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[759],{"type":477,"value":760}," // 相当于: proto = target.__proto__\n",{"type":468,"tag":501,"props":762,"children":764},{"class":503,"line":763},7,[765,770,774,779],{"type":468,"tag":501,"props":766,"children":767},{"style":552},[768],{"type":477,"value":769},"  while",{"type":468,"tag":501,"props":771,"children":772},{"style":520},[773],{"type":477,"value":560},{"type":468,"tag":501,"props":775,"children":776},{"style":569},[777],{"type":477,"value":778},"proto",{"type":468,"tag":501,"props":780,"children":781},{"style":520},[782],{"type":477,"value":545},{"type":468,"tag":501,"props":784,"children":786},{"class":503,"line":785},8,[787,792,796,800,804,809,813,818,822,827],{"type":468,"tag":501,"props":788,"children":789},{"style":552},[790],{"type":477,"value":791},"    if",{"type":468,"tag":501,"props":793,"children":794},{"style":520},[795],{"type":477,"value":560},{"type":468,"tag":501,"props":797,"children":798},{"style":569},[799],{"type":477,"value":778},{"type":468,"tag":501,"props":801,"children":802},{"style":563},[803],{"type":477,"value":597},{"type":468,"tag":501,"props":805,"children":807},{"style":806},"--shiki-light:#DC3EB7;--shiki-default:#DC3EB7;--shiki-dark:#39BAE6",[808],{"type":477,"value":540},{"type":468,"tag":501,"props":810,"children":811},{"style":729},[812],{"type":477,"value":732},{"type":468,"tag":501,"props":814,"children":815},{"style":520},[816],{"type":477,"value":817},"prototype) ",{"type":468,"tag":501,"props":819,"children":820},{"style":552},[821],{"type":477,"value":613},{"type":468,"tag":501,"props":823,"children":824},{"style":600},[825],{"type":477,"value":826}," true",{"type":468,"tag":501,"props":828,"children":829},{"style":532},[830],{"type":477,"value":623},{"type":468,"tag":501,"props":832,"children":834},{"class":503,"line":833},9,[835,840,844,848,852,856,860,864,868],{"type":468,"tag":501,"props":836,"children":837},{"style":569},[838],{"type":477,"value":839},"    proto",{"type":468,"tag":501,"props":841,"children":842},{"style":563},[843],{"type":477,"value":721},{"type":468,"tag":501,"props":845,"children":846},{"style":569},[847],{"type":477,"value":726},{"type":468,"tag":501,"props":849,"children":850},{"style":729},[851],{"type":477,"value":732},{"type":468,"tag":501,"props":853,"children":854},{"style":514},[855],{"type":477,"value":737},{"type":468,"tag":501,"props":857,"children":858},{"style":520},[859],{"type":477,"value":523},{"type":468,"tag":501,"props":861,"children":862},{"style":569},[863],{"type":477,"value":778},{"type":468,"tag":501,"props":865,"children":866},{"style":520},[867],{"type":477,"value":689},{"type":468,"tag":501,"props":869,"children":870},{"style":532},[871],{"type":477,"value":623},{"type":468,"tag":501,"props":873,"children":875},{"class":503,"line":874},10,[876],{"type":468,"tag":501,"props":877,"children":878},{"style":520},[879],{"type":477,"value":702},{"type":468,"tag":501,"props":881,"children":883},{"class":503,"line":882},11,[884,889,893],{"type":468,"tag":501,"props":885,"children":886},{"style":552},[887],{"type":477,"value":888},"  return",{"type":468,"tag":501,"props":890,"children":891},{"style":600},[892],{"type":477,"value":618},{"type":468,"tag":501,"props":894,"children":895},{"style":532},[896],{"type":477,"value":623},{"type":468,"tag":501,"props":898,"children":900},{"class":503,"line":899},12,[901],{"type":468,"tag":501,"props":902,"children":903},{"style":520},[904],{"type":477,"value":905},"}\n",{"type":468,"tag":907,"props":908,"children":909},"style",{},[910],{"type":477,"value":911},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":463,"searchDepth":696,"depth":696,"links":913},[],"markdown","content:3.frontend-code-assessment:1.source:1.native-api:4.instanceof.md","content","3.frontend-code-assessment/1.source/1.native-api/4.instanceof.md","md",[920,922],{"_path":312,"title":311,"description":921},"在调用 new 的过程中会发生以上 4 件事情：",{"_path":318,"title":317,"description":463},1713626056458]