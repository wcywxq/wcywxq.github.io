[{"data":1,"prerenderedAt":890},["Reactive",2],{"navigation":3,"/frontend-code-assessment/source/native-api/instanceof":427,"/frontend-code-assessment/source/native-api/instanceof-surround":886},[4,237,265,406,413],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,399],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":382,"_path":383},"随机数","/frontend-code-assessment/scene/random-number",{"title":385,"_path":386},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":388,"_path":389},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":391,"_path":392},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":394,"_path":395},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":397,"_path":398},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":400,"_path":401,"children":402},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[403],{"title":404,"_path":405},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":407,"_path":408,"children":409},"项目","/pro",[410],{"title":411,"_path":412},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":414,"_path":415,"children":416},"后端语言","/backend-languages",[417],{"title":418,"_path":419,"children":420},"Python","/backend-languages/python",[421,424],{"title":422,"_path":423},"基础","/backend-languages/python/base",{"title":425,"_path":426},"函数","/backend-languages/python/function",{"_path":288,"_dir":428,"_draft":429,"_partial":429,"_locale":430,"title":287,"description":430,"body":431,"_type":881,"_id":882,"_source":883,"_file":884,"_extension":885},"native-api",false,"",{"type":432,"children":433,"toc":879},"root",[434,456,873],{"type":435,"tag":436,"props":437,"children":438},"element","ol",{},[439,446,451],{"type":435,"tag":440,"props":441,"children":442},"li",{},[443],{"type":444,"value":445},"text","首先获取原型的类型",{"type":435,"tag":440,"props":447,"children":448},{},[449],{"type":444,"value":450},"然后获取对象的类型",{"type":435,"tag":440,"props":452,"children":453},{},[454],{"type":444,"value":455},"然后一直循环判断对象的原型是否等于类型的原型，直到对象原型为 null，因为原型链最终为 null",{"type":435,"tag":457,"props":458,"children":462},"pre",{"className":459,"code":460,"language":461,"meta":430,"style":430},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","function _instanceof(target, origin) {\n  if (typeof target !== \"object\" || target === null) return false;\n  if (typeof origin !== \"function\") {\n    throw new TypeError(\"origin must be function\");\n  }\n  let proto = Object.getPrototypeOf(target); // 相当于: proto = target.__proto__\n  while (proto) {\n    if (proto === origin.prototype) return true;\n    proto = Object.getPrototypeOf(proto);\n  }\n  return false;\n}\n","js",[463],{"type":435,"tag":464,"props":465,"children":466},"code",{"__ignoreMap":430},[467,513,591,624,661,670,728,750,798,839,847,864],{"type":435,"tag":468,"props":469,"children":472},"span",{"class":470,"line":471},"line",1,[473,479,485,491,497,503,508],{"type":435,"tag":468,"props":474,"children":476},{"style":475},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[477],{"type":444,"value":478},"function",{"type":435,"tag":468,"props":480,"children":482},{"style":481},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[483],{"type":444,"value":484}," _instanceof",{"type":435,"tag":468,"props":486,"children":488},{"style":487},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[489],{"type":444,"value":490},"(",{"type":435,"tag":468,"props":492,"children":494},{"style":493},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[495],{"type":444,"value":496},"target",{"type":435,"tag":468,"props":498,"children":500},{"style":499},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[501],{"type":444,"value":502},",",{"type":435,"tag":468,"props":504,"children":505},{"style":493},[506],{"type":444,"value":507}," origin",{"type":435,"tag":468,"props":509,"children":510},{"style":487},[511],{"type":444,"value":512},") {\n",{"type":435,"tag":468,"props":514,"children":516},{"class":470,"line":515},2,[517,523,528,534,540,545,551,556,560,565,571,576,581,586],{"type":435,"tag":468,"props":518,"children":520},{"style":519},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[521],{"type":444,"value":522},"  if",{"type":435,"tag":468,"props":524,"children":525},{"style":487},[526],{"type":444,"value":527}," (",{"type":435,"tag":468,"props":529,"children":531},{"style":530},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[532],{"type":444,"value":533},"typeof",{"type":435,"tag":468,"props":535,"children":537},{"style":536},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[538],{"type":444,"value":539}," target",{"type":435,"tag":468,"props":541,"children":542},{"style":530},[543],{"type":444,"value":544}," !==",{"type":435,"tag":468,"props":546,"children":548},{"style":547},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[549],{"type":444,"value":550}," \"object\"",{"type":435,"tag":468,"props":552,"children":553},{"style":530},[554],{"type":444,"value":555}," ||",{"type":435,"tag":468,"props":557,"children":558},{"style":536},[559],{"type":444,"value":539},{"type":435,"tag":468,"props":561,"children":562},{"style":530},[563],{"type":444,"value":564}," ===",{"type":435,"tag":468,"props":566,"children":568},{"style":567},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[569],{"type":444,"value":570}," null",{"type":435,"tag":468,"props":572,"children":573},{"style":487},[574],{"type":444,"value":575},") ",{"type":435,"tag":468,"props":577,"children":578},{"style":519},[579],{"type":444,"value":580},"return",{"type":435,"tag":468,"props":582,"children":583},{"style":567},[584],{"type":444,"value":585}," false",{"type":435,"tag":468,"props":587,"children":588},{"style":499},[589],{"type":444,"value":590},";\n",{"type":435,"tag":468,"props":592,"children":594},{"class":470,"line":593},3,[595,599,603,607,611,615,620],{"type":435,"tag":468,"props":596,"children":597},{"style":519},[598],{"type":444,"value":522},{"type":435,"tag":468,"props":600,"children":601},{"style":487},[602],{"type":444,"value":527},{"type":435,"tag":468,"props":604,"children":605},{"style":530},[606],{"type":444,"value":533},{"type":435,"tag":468,"props":608,"children":609},{"style":536},[610],{"type":444,"value":507},{"type":435,"tag":468,"props":612,"children":613},{"style":530},[614],{"type":444,"value":544},{"type":435,"tag":468,"props":616,"children":617},{"style":547},[618],{"type":444,"value":619}," \"function\"",{"type":435,"tag":468,"props":621,"children":622},{"style":487},[623],{"type":444,"value":512},{"type":435,"tag":468,"props":625,"children":627},{"class":470,"line":626},4,[628,633,638,643,647,652,657],{"type":435,"tag":468,"props":629,"children":630},{"style":519},[631],{"type":444,"value":632},"    throw",{"type":435,"tag":468,"props":634,"children":635},{"style":530},[636],{"type":444,"value":637}," new",{"type":435,"tag":468,"props":639,"children":640},{"style":481},[641],{"type":444,"value":642}," TypeError",{"type":435,"tag":468,"props":644,"children":645},{"style":487},[646],{"type":444,"value":490},{"type":435,"tag":468,"props":648,"children":649},{"style":547},[650],{"type":444,"value":651},"\"origin must be function\"",{"type":435,"tag":468,"props":653,"children":654},{"style":487},[655],{"type":444,"value":656},")",{"type":435,"tag":468,"props":658,"children":659},{"style":499},[660],{"type":444,"value":590},{"type":435,"tag":468,"props":662,"children":664},{"class":470,"line":663},5,[665],{"type":435,"tag":468,"props":666,"children":667},{"style":487},[668],{"type":444,"value":669},"  }\n",{"type":435,"tag":468,"props":671,"children":673},{"class":470,"line":672},6,[674,679,684,689,694,700,705,709,713,717,722],{"type":435,"tag":468,"props":675,"children":676},{"style":475},[677],{"type":444,"value":678},"  let",{"type":435,"tag":468,"props":680,"children":681},{"style":536},[682],{"type":444,"value":683}," proto",{"type":435,"tag":468,"props":685,"children":686},{"style":530},[687],{"type":444,"value":688}," =",{"type":435,"tag":468,"props":690,"children":691},{"style":536},[692],{"type":444,"value":693}," Object",{"type":435,"tag":468,"props":695,"children":697},{"style":696},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[698],{"type":444,"value":699},".",{"type":435,"tag":468,"props":701,"children":702},{"style":481},[703],{"type":444,"value":704},"getPrototypeOf",{"type":435,"tag":468,"props":706,"children":707},{"style":487},[708],{"type":444,"value":490},{"type":435,"tag":468,"props":710,"children":711},{"style":536},[712],{"type":444,"value":496},{"type":435,"tag":468,"props":714,"children":715},{"style":487},[716],{"type":444,"value":656},{"type":435,"tag":468,"props":718,"children":719},{"style":499},[720],{"type":444,"value":721},";",{"type":435,"tag":468,"props":723,"children":725},{"style":724},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[726],{"type":444,"value":727}," // 相当于: proto = target.__proto__\n",{"type":435,"tag":468,"props":729,"children":731},{"class":470,"line":730},7,[732,737,741,746],{"type":435,"tag":468,"props":733,"children":734},{"style":519},[735],{"type":444,"value":736},"  while",{"type":435,"tag":468,"props":738,"children":739},{"style":487},[740],{"type":444,"value":527},{"type":435,"tag":468,"props":742,"children":743},{"style":536},[744],{"type":444,"value":745},"proto",{"type":435,"tag":468,"props":747,"children":748},{"style":487},[749],{"type":444,"value":512},{"type":435,"tag":468,"props":751,"children":753},{"class":470,"line":752},8,[754,759,763,767,771,776,780,785,789,794],{"type":435,"tag":468,"props":755,"children":756},{"style":519},[757],{"type":444,"value":758},"    if",{"type":435,"tag":468,"props":760,"children":761},{"style":487},[762],{"type":444,"value":527},{"type":435,"tag":468,"props":764,"children":765},{"style":536},[766],{"type":444,"value":745},{"type":435,"tag":468,"props":768,"children":769},{"style":530},[770],{"type":444,"value":564},{"type":435,"tag":468,"props":772,"children":774},{"style":773},"--shiki-light:#DC3EB7;--shiki-default:#DC3EB7;--shiki-dark:#39BAE6",[775],{"type":444,"value":507},{"type":435,"tag":468,"props":777,"children":778},{"style":696},[779],{"type":444,"value":699},{"type":435,"tag":468,"props":781,"children":782},{"style":487},[783],{"type":444,"value":784},"prototype) ",{"type":435,"tag":468,"props":786,"children":787},{"style":519},[788],{"type":444,"value":580},{"type":435,"tag":468,"props":790,"children":791},{"style":567},[792],{"type":444,"value":793}," true",{"type":435,"tag":468,"props":795,"children":796},{"style":499},[797],{"type":444,"value":590},{"type":435,"tag":468,"props":799,"children":801},{"class":470,"line":800},9,[802,807,811,815,819,823,827,831,835],{"type":435,"tag":468,"props":803,"children":804},{"style":536},[805],{"type":444,"value":806},"    proto",{"type":435,"tag":468,"props":808,"children":809},{"style":530},[810],{"type":444,"value":688},{"type":435,"tag":468,"props":812,"children":813},{"style":536},[814],{"type":444,"value":693},{"type":435,"tag":468,"props":816,"children":817},{"style":696},[818],{"type":444,"value":699},{"type":435,"tag":468,"props":820,"children":821},{"style":481},[822],{"type":444,"value":704},{"type":435,"tag":468,"props":824,"children":825},{"style":487},[826],{"type":444,"value":490},{"type":435,"tag":468,"props":828,"children":829},{"style":536},[830],{"type":444,"value":745},{"type":435,"tag":468,"props":832,"children":833},{"style":487},[834],{"type":444,"value":656},{"type":435,"tag":468,"props":836,"children":837},{"style":499},[838],{"type":444,"value":590},{"type":435,"tag":468,"props":840,"children":842},{"class":470,"line":841},10,[843],{"type":435,"tag":468,"props":844,"children":845},{"style":487},[846],{"type":444,"value":669},{"type":435,"tag":468,"props":848,"children":850},{"class":470,"line":849},11,[851,856,860],{"type":435,"tag":468,"props":852,"children":853},{"style":519},[854],{"type":444,"value":855},"  return",{"type":435,"tag":468,"props":857,"children":858},{"style":567},[859],{"type":444,"value":585},{"type":435,"tag":468,"props":861,"children":862},{"style":499},[863],{"type":444,"value":590},{"type":435,"tag":468,"props":865,"children":867},{"class":470,"line":866},12,[868],{"type":435,"tag":468,"props":869,"children":870},{"style":487},[871],{"type":444,"value":872},"}\n",{"type":435,"tag":874,"props":875,"children":876},"style",{},[877],{"type":444,"value":878},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":430,"searchDepth":663,"depth":663,"links":880},[],"markdown","content:3.frontend-code-assessment:1.source:1.native-api:4.instanceof.md","content","3.frontend-code-assessment/1.source/1.native-api/4.instanceof.md","md",[887,889],{"_path":285,"title":284,"description":888},"在调用 new 的过程中会发生以上 4 件事情：",{"_path":291,"title":290,"description":430},1713426455283]