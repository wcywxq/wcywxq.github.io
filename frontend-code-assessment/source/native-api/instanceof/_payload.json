[{"data":1,"prerenderedAt":929},["Reactive",2],{"navigation":3,"/frontend-code-assessment/source/native-api/instanceof":466,"/frontend-code-assessment/source/native-api/instanceof-surround":925},[4,269,298,443,451],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"前端八股文","/frontend-endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/frontend-endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/frontend-endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/frontend-endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":442},"前端代码考核","/frontend-code-assessment",[302,351,435],{"title":303,"_path":304,"children":305},"源码实现","/frontend-code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/frontend-code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/frontend-code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/frontend-code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/frontend-code-assessment/scene",[355,377,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432],{"title":356,"_path":357,"children":358},"Promise","/frontend-code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[381],{"title":382,"_path":383},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":385,"_path":386},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":388,"_path":389},"倒计时","/frontend-code-assessment/scene/countdown",{"title":391,"_path":392},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":394,"_path":395},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":397,"_path":398},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":400,"_path":401},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":403,"_path":404},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":406,"_path":407},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":409,"_path":410},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":412,"_path":413},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":415,"_path":416},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":418,"_path":419},"随机数","/frontend-code-assessment/scene/random-number",{"title":421,"_path":422},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":424,"_path":425},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":427,"_path":428},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":430,"_path":431},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":433,"_path":434},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":436,"_path":437,"children":438},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[439],{"title":440,"_path":441},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":444,"_path":445,"children":446,"icon":450},"项目","/pro",[447],{"title":448,"_path":449},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":452,"_path":453,"children":454,"icon":465},"后端语言","/backend-languages",[455],{"title":456,"_path":457,"children":458},"Python","/backend-languages/python",[459,462],{"title":460,"_path":461},"基础","/backend-languages/python/base",{"title":463,"_path":464},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":321,"_dir":467,"_draft":468,"_partial":468,"_locale":469,"title":320,"description":469,"body":470,"_type":920,"_id":921,"_source":922,"_file":923,"_extension":924},"native-api",false,"",{"type":471,"children":472,"toc":918},"root",[473,495,912],{"type":474,"tag":475,"props":476,"children":477},"element","ol",{},[478,485,490],{"type":474,"tag":479,"props":480,"children":481},"li",{},[482],{"type":483,"value":484},"text","首先获取原型的类型",{"type":474,"tag":479,"props":486,"children":487},{},[488],{"type":483,"value":489},"然后获取对象的类型",{"type":474,"tag":479,"props":491,"children":492},{},[493],{"type":483,"value":494},"然后一直循环判断对象的原型是否等于类型的原型，直到对象原型为 null，因为原型链最终为 null",{"type":474,"tag":496,"props":497,"children":501},"pre",{"className":498,"code":499,"language":500,"meta":469,"style":469},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","function _instanceof(target, origin) {\n  if (typeof target !== \"object\" || target === null) return false;\n  if (typeof origin !== \"function\") {\n    throw new TypeError(\"origin must be function\");\n  }\n  let proto = Object.getPrototypeOf(target); // 相当于: proto = target.__proto__\n  while (proto) {\n    if (proto === origin.prototype) return true;\n    proto = Object.getPrototypeOf(proto);\n  }\n  return false;\n}\n","js",[502],{"type":474,"tag":503,"props":504,"children":505},"code",{"__ignoreMap":469},[506,552,630,663,700,709,767,789,837,878,886,903],{"type":474,"tag":507,"props":508,"children":511},"span",{"class":509,"line":510},"line",1,[512,518,524,530,536,542,547],{"type":474,"tag":507,"props":513,"children":515},{"style":514},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[516],{"type":483,"value":517},"function",{"type":474,"tag":507,"props":519,"children":521},{"style":520},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[522],{"type":483,"value":523}," _instanceof",{"type":474,"tag":507,"props":525,"children":527},{"style":526},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[528],{"type":483,"value":529},"(",{"type":474,"tag":507,"props":531,"children":533},{"style":532},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[534],{"type":483,"value":535},"target",{"type":474,"tag":507,"props":537,"children":539},{"style":538},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[540],{"type":483,"value":541},",",{"type":474,"tag":507,"props":543,"children":544},{"style":532},[545],{"type":483,"value":546}," origin",{"type":474,"tag":507,"props":548,"children":549},{"style":526},[550],{"type":483,"value":551},") {\n",{"type":474,"tag":507,"props":553,"children":555},{"class":509,"line":554},2,[556,562,567,573,579,584,590,595,599,604,610,615,620,625],{"type":474,"tag":507,"props":557,"children":559},{"style":558},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[560],{"type":483,"value":561},"  if",{"type":474,"tag":507,"props":563,"children":564},{"style":526},[565],{"type":483,"value":566}," (",{"type":474,"tag":507,"props":568,"children":570},{"style":569},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[571],{"type":483,"value":572},"typeof",{"type":474,"tag":507,"props":574,"children":576},{"style":575},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[577],{"type":483,"value":578}," target",{"type":474,"tag":507,"props":580,"children":581},{"style":569},[582],{"type":483,"value":583}," !==",{"type":474,"tag":507,"props":585,"children":587},{"style":586},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[588],{"type":483,"value":589}," \"object\"",{"type":474,"tag":507,"props":591,"children":592},{"style":569},[593],{"type":483,"value":594}," ||",{"type":474,"tag":507,"props":596,"children":597},{"style":575},[598],{"type":483,"value":578},{"type":474,"tag":507,"props":600,"children":601},{"style":569},[602],{"type":483,"value":603}," ===",{"type":474,"tag":507,"props":605,"children":607},{"style":606},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[608],{"type":483,"value":609}," null",{"type":474,"tag":507,"props":611,"children":612},{"style":526},[613],{"type":483,"value":614},") ",{"type":474,"tag":507,"props":616,"children":617},{"style":558},[618],{"type":483,"value":619},"return",{"type":474,"tag":507,"props":621,"children":622},{"style":606},[623],{"type":483,"value":624}," false",{"type":474,"tag":507,"props":626,"children":627},{"style":538},[628],{"type":483,"value":629},";\n",{"type":474,"tag":507,"props":631,"children":633},{"class":509,"line":632},3,[634,638,642,646,650,654,659],{"type":474,"tag":507,"props":635,"children":636},{"style":558},[637],{"type":483,"value":561},{"type":474,"tag":507,"props":639,"children":640},{"style":526},[641],{"type":483,"value":566},{"type":474,"tag":507,"props":643,"children":644},{"style":569},[645],{"type":483,"value":572},{"type":474,"tag":507,"props":647,"children":648},{"style":575},[649],{"type":483,"value":546},{"type":474,"tag":507,"props":651,"children":652},{"style":569},[653],{"type":483,"value":583},{"type":474,"tag":507,"props":655,"children":656},{"style":586},[657],{"type":483,"value":658}," \"function\"",{"type":474,"tag":507,"props":660,"children":661},{"style":526},[662],{"type":483,"value":551},{"type":474,"tag":507,"props":664,"children":666},{"class":509,"line":665},4,[667,672,677,682,686,691,696],{"type":474,"tag":507,"props":668,"children":669},{"style":558},[670],{"type":483,"value":671},"    throw",{"type":474,"tag":507,"props":673,"children":674},{"style":569},[675],{"type":483,"value":676}," new",{"type":474,"tag":507,"props":678,"children":679},{"style":520},[680],{"type":483,"value":681}," TypeError",{"type":474,"tag":507,"props":683,"children":684},{"style":526},[685],{"type":483,"value":529},{"type":474,"tag":507,"props":687,"children":688},{"style":586},[689],{"type":483,"value":690},"\"origin must be function\"",{"type":474,"tag":507,"props":692,"children":693},{"style":526},[694],{"type":483,"value":695},")",{"type":474,"tag":507,"props":697,"children":698},{"style":538},[699],{"type":483,"value":629},{"type":474,"tag":507,"props":701,"children":703},{"class":509,"line":702},5,[704],{"type":474,"tag":507,"props":705,"children":706},{"style":526},[707],{"type":483,"value":708},"  }\n",{"type":474,"tag":507,"props":710,"children":712},{"class":509,"line":711},6,[713,718,723,728,733,739,744,748,752,756,761],{"type":474,"tag":507,"props":714,"children":715},{"style":514},[716],{"type":483,"value":717},"  let",{"type":474,"tag":507,"props":719,"children":720},{"style":575},[721],{"type":483,"value":722}," proto",{"type":474,"tag":507,"props":724,"children":725},{"style":569},[726],{"type":483,"value":727}," =",{"type":474,"tag":507,"props":729,"children":730},{"style":575},[731],{"type":483,"value":732}," Object",{"type":474,"tag":507,"props":734,"children":736},{"style":735},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[737],{"type":483,"value":738},".",{"type":474,"tag":507,"props":740,"children":741},{"style":520},[742],{"type":483,"value":743},"getPrototypeOf",{"type":474,"tag":507,"props":745,"children":746},{"style":526},[747],{"type":483,"value":529},{"type":474,"tag":507,"props":749,"children":750},{"style":575},[751],{"type":483,"value":535},{"type":474,"tag":507,"props":753,"children":754},{"style":526},[755],{"type":483,"value":695},{"type":474,"tag":507,"props":757,"children":758},{"style":538},[759],{"type":483,"value":760},";",{"type":474,"tag":507,"props":762,"children":764},{"style":763},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[765],{"type":483,"value":766}," // 相当于: proto = target.__proto__\n",{"type":474,"tag":507,"props":768,"children":770},{"class":509,"line":769},7,[771,776,780,785],{"type":474,"tag":507,"props":772,"children":773},{"style":558},[774],{"type":483,"value":775},"  while",{"type":474,"tag":507,"props":777,"children":778},{"style":526},[779],{"type":483,"value":566},{"type":474,"tag":507,"props":781,"children":782},{"style":575},[783],{"type":483,"value":784},"proto",{"type":474,"tag":507,"props":786,"children":787},{"style":526},[788],{"type":483,"value":551},{"type":474,"tag":507,"props":790,"children":792},{"class":509,"line":791},8,[793,798,802,806,810,815,819,824,828,833],{"type":474,"tag":507,"props":794,"children":795},{"style":558},[796],{"type":483,"value":797},"    if",{"type":474,"tag":507,"props":799,"children":800},{"style":526},[801],{"type":483,"value":566},{"type":474,"tag":507,"props":803,"children":804},{"style":575},[805],{"type":483,"value":784},{"type":474,"tag":507,"props":807,"children":808},{"style":569},[809],{"type":483,"value":603},{"type":474,"tag":507,"props":811,"children":813},{"style":812},"--shiki-light:#DC3EB7;--shiki-default:#DC3EB7;--shiki-dark:#39BAE6",[814],{"type":483,"value":546},{"type":474,"tag":507,"props":816,"children":817},{"style":735},[818],{"type":483,"value":738},{"type":474,"tag":507,"props":820,"children":821},{"style":526},[822],{"type":483,"value":823},"prototype) ",{"type":474,"tag":507,"props":825,"children":826},{"style":558},[827],{"type":483,"value":619},{"type":474,"tag":507,"props":829,"children":830},{"style":606},[831],{"type":483,"value":832}," true",{"type":474,"tag":507,"props":834,"children":835},{"style":538},[836],{"type":483,"value":629},{"type":474,"tag":507,"props":838,"children":840},{"class":509,"line":839},9,[841,846,850,854,858,862,866,870,874],{"type":474,"tag":507,"props":842,"children":843},{"style":575},[844],{"type":483,"value":845},"    proto",{"type":474,"tag":507,"props":847,"children":848},{"style":569},[849],{"type":483,"value":727},{"type":474,"tag":507,"props":851,"children":852},{"style":575},[853],{"type":483,"value":732},{"type":474,"tag":507,"props":855,"children":856},{"style":735},[857],{"type":483,"value":738},{"type":474,"tag":507,"props":859,"children":860},{"style":520},[861],{"type":483,"value":743},{"type":474,"tag":507,"props":863,"children":864},{"style":526},[865],{"type":483,"value":529},{"type":474,"tag":507,"props":867,"children":868},{"style":575},[869],{"type":483,"value":784},{"type":474,"tag":507,"props":871,"children":872},{"style":526},[873],{"type":483,"value":695},{"type":474,"tag":507,"props":875,"children":876},{"style":538},[877],{"type":483,"value":629},{"type":474,"tag":507,"props":879,"children":881},{"class":509,"line":880},10,[882],{"type":474,"tag":507,"props":883,"children":884},{"style":526},[885],{"type":483,"value":708},{"type":474,"tag":507,"props":887,"children":889},{"class":509,"line":888},11,[890,895,899],{"type":474,"tag":507,"props":891,"children":892},{"style":558},[893],{"type":483,"value":894},"  return",{"type":474,"tag":507,"props":896,"children":897},{"style":606},[898],{"type":483,"value":624},{"type":474,"tag":507,"props":900,"children":901},{"style":538},[902],{"type":483,"value":629},{"type":474,"tag":507,"props":904,"children":906},{"class":509,"line":905},12,[907],{"type":474,"tag":507,"props":908,"children":909},{"style":526},[910],{"type":483,"value":911},"}\n",{"type":474,"tag":913,"props":914,"children":915},"style",{},[916],{"type":483,"value":917},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":469,"searchDepth":702,"depth":702,"links":919},[],"markdown","content:3.frontend-code-assessment:1.source:1.native-api:4.instanceof.md","content","3.frontend-code-assessment/1.source/1.native-api/4.instanceof.md","md",[926,928],{"_path":318,"title":317,"description":927},"在调用 new 的过程中会发生以上 4 件事情：",{"_path":324,"title":323,"description":469},1713712686817]