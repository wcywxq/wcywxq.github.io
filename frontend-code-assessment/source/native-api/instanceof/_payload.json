[{"data":1,"prerenderedAt":920},["Reactive",2],{"navigation":3,"/frontend-code-assessment/source/native-api/instanceof":457,"/frontend-code-assessment/source/native-api/instanceof-surround":916},[4,260,289,434,442],{"title":5,"_path":6,"children":7,"icon":259},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":261,"_path":262,"children":263,"icon":288},"前端八股文","/frontend-endorsement",[264,275],{"title":265,"_path":266,"children":267},"构建工具","/frontend-endorsement/build-tools",[268],{"title":269,"_path":270,"children":271},"Webpack","/frontend-endorsement/build-tools/webpack",[272],{"title":273,"_path":274},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":276,"_path":277,"children":278},"Html","/frontend-endorsement/html",[279,282,285],{"title":280,"_path":281},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":283,"_path":284},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":286,"_path":287},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":290,"_path":291,"children":292,"icon":433},"前端代码考核","/frontend-code-assessment",[293,342,426],{"title":294,"_path":295,"children":296},"源码实现","/frontend-code-assessment/source",[297,322,335],{"title":298,"_path":299,"children":300},"原生 api","/frontend-code-assessment/source/native-api",[301,304,307,310,313,316,319],{"title":302,"_path":303},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":305,"_path":306},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":308,"_path":309},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":311,"_path":312},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":314,"_path":315},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":317,"_path":318},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":320,"_path":321},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":323,"_path":324,"children":325},"数组 Array","/frontend-code-assessment/source/array",[326,329,332],{"title":327,"_path":328},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":330,"_path":331},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":333,"_path":334},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":336,"_path":337,"children":338},"字符串 String","/frontend-code-assessment/source/string",[339],{"title":340,"_path":341},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":343,"_path":344,"children":345},"业务场景","/frontend-code-assessment/scene",[346,368,375,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423],{"title":347,"_path":348,"children":349},"Promise","/frontend-code-assessment/scene/promise",[350,353,356,359,362,365],{"title":351,"_path":352},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":354,"_path":355},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":357,"_path":358},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":360,"_path":361},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":363,"_path":364},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":366,"_path":367},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":369,"_path":370,"children":371},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[372],{"title":373,"_path":374},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":376,"_path":377},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":379,"_path":380},"倒计时","/frontend-code-assessment/scene/countdown",{"title":382,"_path":383},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":385,"_path":386},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":388,"_path":389},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":391,"_path":392},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":394,"_path":395},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":397,"_path":398},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":400,"_path":401},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":403,"_path":404},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":406,"_path":407},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":409,"_path":410},"随机数","/frontend-code-assessment/scene/random-number",{"title":412,"_path":413},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":415,"_path":416},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":418,"_path":419},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":421,"_path":422},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":424,"_path":425},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":427,"_path":428,"children":429},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[430],{"title":431,"_path":432},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":435,"_path":436,"children":437,"icon":441},"项目","/pro",[438],{"title":439,"_path":440},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":443,"_path":444,"children":445,"icon":456},"后端语言","/backend-languages",[446],{"title":447,"_path":448,"children":449},"Python","/backend-languages/python",[450,453],{"title":451,"_path":452},"基础","/backend-languages/python/base",{"title":454,"_path":455},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":312,"_dir":458,"_draft":459,"_partial":459,"_locale":460,"title":311,"description":460,"body":461,"_type":911,"_id":912,"_source":913,"_file":914,"_extension":915},"native-api",false,"",{"type":462,"children":463,"toc":909},"root",[464,486,903],{"type":465,"tag":466,"props":467,"children":468},"element","ol",{},[469,476,481],{"type":465,"tag":470,"props":471,"children":472},"li",{},[473],{"type":474,"value":475},"text","首先获取原型的类型",{"type":465,"tag":470,"props":477,"children":478},{},[479],{"type":474,"value":480},"然后获取对象的类型",{"type":465,"tag":470,"props":482,"children":483},{},[484],{"type":474,"value":485},"然后一直循环判断对象的原型是否等于类型的原型，直到对象原型为 null，因为原型链最终为 null",{"type":465,"tag":487,"props":488,"children":492},"pre",{"className":489,"code":490,"language":491,"meta":460,"style":460},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","function _instanceof(target, origin) {\n  if (typeof target !== \"object\" || target === null) return false;\n  if (typeof origin !== \"function\") {\n    throw new TypeError(\"origin must be function\");\n  }\n  let proto = Object.getPrototypeOf(target); // 相当于: proto = target.__proto__\n  while (proto) {\n    if (proto === origin.prototype) return true;\n    proto = Object.getPrototypeOf(proto);\n  }\n  return false;\n}\n","js",[493],{"type":465,"tag":494,"props":495,"children":496},"code",{"__ignoreMap":460},[497,543,621,654,691,700,758,780,828,869,877,894],{"type":465,"tag":498,"props":499,"children":502},"span",{"class":500,"line":501},"line",1,[503,509,515,521,527,533,538],{"type":465,"tag":498,"props":504,"children":506},{"style":505},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[507],{"type":474,"value":508},"function",{"type":465,"tag":498,"props":510,"children":512},{"style":511},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[513],{"type":474,"value":514}," _instanceof",{"type":465,"tag":498,"props":516,"children":518},{"style":517},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[519],{"type":474,"value":520},"(",{"type":465,"tag":498,"props":522,"children":524},{"style":523},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[525],{"type":474,"value":526},"target",{"type":465,"tag":498,"props":528,"children":530},{"style":529},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[531],{"type":474,"value":532},",",{"type":465,"tag":498,"props":534,"children":535},{"style":523},[536],{"type":474,"value":537}," origin",{"type":465,"tag":498,"props":539,"children":540},{"style":517},[541],{"type":474,"value":542},") {\n",{"type":465,"tag":498,"props":544,"children":546},{"class":500,"line":545},2,[547,553,558,564,570,575,581,586,590,595,601,606,611,616],{"type":465,"tag":498,"props":548,"children":550},{"style":549},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[551],{"type":474,"value":552},"  if",{"type":465,"tag":498,"props":554,"children":555},{"style":517},[556],{"type":474,"value":557}," (",{"type":465,"tag":498,"props":559,"children":561},{"style":560},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[562],{"type":474,"value":563},"typeof",{"type":465,"tag":498,"props":565,"children":567},{"style":566},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[568],{"type":474,"value":569}," target",{"type":465,"tag":498,"props":571,"children":572},{"style":560},[573],{"type":474,"value":574}," !==",{"type":465,"tag":498,"props":576,"children":578},{"style":577},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[579],{"type":474,"value":580}," \"object\"",{"type":465,"tag":498,"props":582,"children":583},{"style":560},[584],{"type":474,"value":585}," ||",{"type":465,"tag":498,"props":587,"children":588},{"style":566},[589],{"type":474,"value":569},{"type":465,"tag":498,"props":591,"children":592},{"style":560},[593],{"type":474,"value":594}," ===",{"type":465,"tag":498,"props":596,"children":598},{"style":597},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[599],{"type":474,"value":600}," null",{"type":465,"tag":498,"props":602,"children":603},{"style":517},[604],{"type":474,"value":605},") ",{"type":465,"tag":498,"props":607,"children":608},{"style":549},[609],{"type":474,"value":610},"return",{"type":465,"tag":498,"props":612,"children":613},{"style":597},[614],{"type":474,"value":615}," false",{"type":465,"tag":498,"props":617,"children":618},{"style":529},[619],{"type":474,"value":620},";\n",{"type":465,"tag":498,"props":622,"children":624},{"class":500,"line":623},3,[625,629,633,637,641,645,650],{"type":465,"tag":498,"props":626,"children":627},{"style":549},[628],{"type":474,"value":552},{"type":465,"tag":498,"props":630,"children":631},{"style":517},[632],{"type":474,"value":557},{"type":465,"tag":498,"props":634,"children":635},{"style":560},[636],{"type":474,"value":563},{"type":465,"tag":498,"props":638,"children":639},{"style":566},[640],{"type":474,"value":537},{"type":465,"tag":498,"props":642,"children":643},{"style":560},[644],{"type":474,"value":574},{"type":465,"tag":498,"props":646,"children":647},{"style":577},[648],{"type":474,"value":649}," \"function\"",{"type":465,"tag":498,"props":651,"children":652},{"style":517},[653],{"type":474,"value":542},{"type":465,"tag":498,"props":655,"children":657},{"class":500,"line":656},4,[658,663,668,673,677,682,687],{"type":465,"tag":498,"props":659,"children":660},{"style":549},[661],{"type":474,"value":662},"    throw",{"type":465,"tag":498,"props":664,"children":665},{"style":560},[666],{"type":474,"value":667}," new",{"type":465,"tag":498,"props":669,"children":670},{"style":511},[671],{"type":474,"value":672}," TypeError",{"type":465,"tag":498,"props":674,"children":675},{"style":517},[676],{"type":474,"value":520},{"type":465,"tag":498,"props":678,"children":679},{"style":577},[680],{"type":474,"value":681},"\"origin must be function\"",{"type":465,"tag":498,"props":683,"children":684},{"style":517},[685],{"type":474,"value":686},")",{"type":465,"tag":498,"props":688,"children":689},{"style":529},[690],{"type":474,"value":620},{"type":465,"tag":498,"props":692,"children":694},{"class":500,"line":693},5,[695],{"type":465,"tag":498,"props":696,"children":697},{"style":517},[698],{"type":474,"value":699},"  }\n",{"type":465,"tag":498,"props":701,"children":703},{"class":500,"line":702},6,[704,709,714,719,724,730,735,739,743,747,752],{"type":465,"tag":498,"props":705,"children":706},{"style":505},[707],{"type":474,"value":708},"  let",{"type":465,"tag":498,"props":710,"children":711},{"style":566},[712],{"type":474,"value":713}," proto",{"type":465,"tag":498,"props":715,"children":716},{"style":560},[717],{"type":474,"value":718}," =",{"type":465,"tag":498,"props":720,"children":721},{"style":566},[722],{"type":474,"value":723}," Object",{"type":465,"tag":498,"props":725,"children":727},{"style":726},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[728],{"type":474,"value":729},".",{"type":465,"tag":498,"props":731,"children":732},{"style":511},[733],{"type":474,"value":734},"getPrototypeOf",{"type":465,"tag":498,"props":736,"children":737},{"style":517},[738],{"type":474,"value":520},{"type":465,"tag":498,"props":740,"children":741},{"style":566},[742],{"type":474,"value":526},{"type":465,"tag":498,"props":744,"children":745},{"style":517},[746],{"type":474,"value":686},{"type":465,"tag":498,"props":748,"children":749},{"style":529},[750],{"type":474,"value":751},";",{"type":465,"tag":498,"props":753,"children":755},{"style":754},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[756],{"type":474,"value":757}," // 相当于: proto = target.__proto__\n",{"type":465,"tag":498,"props":759,"children":761},{"class":500,"line":760},7,[762,767,771,776],{"type":465,"tag":498,"props":763,"children":764},{"style":549},[765],{"type":474,"value":766},"  while",{"type":465,"tag":498,"props":768,"children":769},{"style":517},[770],{"type":474,"value":557},{"type":465,"tag":498,"props":772,"children":773},{"style":566},[774],{"type":474,"value":775},"proto",{"type":465,"tag":498,"props":777,"children":778},{"style":517},[779],{"type":474,"value":542},{"type":465,"tag":498,"props":781,"children":783},{"class":500,"line":782},8,[784,789,793,797,801,806,810,815,819,824],{"type":465,"tag":498,"props":785,"children":786},{"style":549},[787],{"type":474,"value":788},"    if",{"type":465,"tag":498,"props":790,"children":791},{"style":517},[792],{"type":474,"value":557},{"type":465,"tag":498,"props":794,"children":795},{"style":566},[796],{"type":474,"value":775},{"type":465,"tag":498,"props":798,"children":799},{"style":560},[800],{"type":474,"value":594},{"type":465,"tag":498,"props":802,"children":804},{"style":803},"--shiki-light:#DC3EB7;--shiki-default:#DC3EB7;--shiki-dark:#39BAE6",[805],{"type":474,"value":537},{"type":465,"tag":498,"props":807,"children":808},{"style":726},[809],{"type":474,"value":729},{"type":465,"tag":498,"props":811,"children":812},{"style":517},[813],{"type":474,"value":814},"prototype) ",{"type":465,"tag":498,"props":816,"children":817},{"style":549},[818],{"type":474,"value":610},{"type":465,"tag":498,"props":820,"children":821},{"style":597},[822],{"type":474,"value":823}," true",{"type":465,"tag":498,"props":825,"children":826},{"style":529},[827],{"type":474,"value":620},{"type":465,"tag":498,"props":829,"children":831},{"class":500,"line":830},9,[832,837,841,845,849,853,857,861,865],{"type":465,"tag":498,"props":833,"children":834},{"style":566},[835],{"type":474,"value":836},"    proto",{"type":465,"tag":498,"props":838,"children":839},{"style":560},[840],{"type":474,"value":718},{"type":465,"tag":498,"props":842,"children":843},{"style":566},[844],{"type":474,"value":723},{"type":465,"tag":498,"props":846,"children":847},{"style":726},[848],{"type":474,"value":729},{"type":465,"tag":498,"props":850,"children":851},{"style":511},[852],{"type":474,"value":734},{"type":465,"tag":498,"props":854,"children":855},{"style":517},[856],{"type":474,"value":520},{"type":465,"tag":498,"props":858,"children":859},{"style":566},[860],{"type":474,"value":775},{"type":465,"tag":498,"props":862,"children":863},{"style":517},[864],{"type":474,"value":686},{"type":465,"tag":498,"props":866,"children":867},{"style":529},[868],{"type":474,"value":620},{"type":465,"tag":498,"props":870,"children":872},{"class":500,"line":871},10,[873],{"type":465,"tag":498,"props":874,"children":875},{"style":517},[876],{"type":474,"value":699},{"type":465,"tag":498,"props":878,"children":880},{"class":500,"line":879},11,[881,886,890],{"type":465,"tag":498,"props":882,"children":883},{"style":549},[884],{"type":474,"value":885},"  return",{"type":465,"tag":498,"props":887,"children":888},{"style":597},[889],{"type":474,"value":615},{"type":465,"tag":498,"props":891,"children":892},{"style":529},[893],{"type":474,"value":620},{"type":465,"tag":498,"props":895,"children":897},{"class":500,"line":896},12,[898],{"type":465,"tag":498,"props":899,"children":900},{"style":517},[901],{"type":474,"value":902},"}\n",{"type":465,"tag":904,"props":905,"children":906},"style",{},[907],{"type":474,"value":908},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":460,"searchDepth":693,"depth":693,"links":910},[],"markdown","content:3.frontend-code-assessment:1.source:1.native-api:4.instanceof.md","content","3.frontend-code-assessment/1.source/1.native-api/4.instanceof.md","md",[917,919],{"_path":309,"title":308,"description":918},"在调用 new 的过程中会发生以上 4 件事情：",{"_path":315,"title":314,"description":460},1713599625293]