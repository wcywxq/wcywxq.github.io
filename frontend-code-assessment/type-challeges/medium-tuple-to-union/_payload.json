[{"data":1,"prerenderedAt":901},["Reactive",2],{"navigation":3,"/frontend-code-assessment/type-challeges/medium-tuple-to-union":405,"/frontend-code-assessment/type-challeges/medium-tuple-to-union-surround":896},[4,237,265,384,391],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR 169. 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR 187. 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数相加","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,377],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,347,350,353,356,359,362,365,368,371,374],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":348,"_path":349},"倒计时","/frontend-code-assessment/scene/countdown",{"title":351,"_path":352},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":354,"_path":355},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":357,"_path":358},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":360,"_path":361},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":363,"_path":364},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":366,"_path":367},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":369,"_path":370},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":372,"_path":373},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":375,"_path":376},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":378,"_path":379,"children":380},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[381],{"title":382,"_path":383},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":385,"_path":386,"children":387},"项目","/pro",[388],{"title":389,"_path":390},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":392,"_path":393,"children":394},"后端语言","/backend-languages",[395],{"title":396,"_path":397,"children":398},"Python","/backend-languages/python",[399,402],{"title":400,"_path":401},"基础","/backend-languages/python/base",{"title":403,"_path":404},"函数","/backend-languages/python/function",{"_path":383,"_dir":406,"_draft":407,"_partial":407,"_locale":408,"title":382,"description":409,"body":410,"_type":891,"_id":892,"_source":893,"_file":894,"_extension":895},"type-challeges",false,"","实现泛型TupleToUnion\u003CT>，它返回元组所有值的合集。",{"type":411,"children":412,"toc":885},"root",[413,430,435,569,576,648,654,790,796,879],{"type":414,"tag":415,"props":416,"children":417},"element","p",{},[418,421,428],{"type":419,"value":420},"text","实现泛型",{"type":414,"tag":422,"props":423,"children":425},"code",{"className":424},[],[426],{"type":419,"value":427},"TupleToUnion\u003CT>",{"type":419,"value":429},"，它返回元组所有值的合集。",{"type":414,"tag":415,"props":431,"children":432},{},[433],{"type":419,"value":434},"例如",{"type":414,"tag":436,"props":437,"children":441},"pre",{"className":438,"code":439,"language":440,"meta":408,"style":408},"language-ts shiki shiki-themes slack-ochin slack-ochin ayu-dark","type Arr = [\"1\", \"2\", \"3\"];\n\ntype Test = TupleToUnion\u003CArr>; // expected to be '1' | '2' | '3'\n","ts",[442],{"type":414,"tag":422,"props":443,"children":444},{"__ignoreMap":408},[445,511,521],{"type":414,"tag":446,"props":447,"children":450},"span",{"class":448,"line":449},"line",1,[451,457,463,469,475,481,487,492,496,501,506],{"type":414,"tag":446,"props":452,"children":454},{"style":453},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[455],{"type":419,"value":456},"type",{"type":414,"tag":446,"props":458,"children":460},{"style":459},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF",[461],{"type":419,"value":462}," Arr",{"type":414,"tag":446,"props":464,"children":466},{"style":465},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[467],{"type":419,"value":468}," =",{"type":414,"tag":446,"props":470,"children":472},{"style":471},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[473],{"type":419,"value":474}," [",{"type":414,"tag":446,"props":476,"children":478},{"style":477},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[479],{"type":419,"value":480},"\"1\"",{"type":414,"tag":446,"props":482,"children":484},{"style":483},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[485],{"type":419,"value":486},",",{"type":414,"tag":446,"props":488,"children":489},{"style":477},[490],{"type":419,"value":491}," \"2\"",{"type":414,"tag":446,"props":493,"children":494},{"style":483},[495],{"type":419,"value":486},{"type":414,"tag":446,"props":497,"children":498},{"style":477},[499],{"type":419,"value":500}," \"3\"",{"type":414,"tag":446,"props":502,"children":503},{"style":471},[504],{"type":419,"value":505},"]",{"type":414,"tag":446,"props":507,"children":508},{"style":483},[509],{"type":419,"value":510},";\n",{"type":414,"tag":446,"props":512,"children":514},{"class":448,"line":513},2,[515],{"type":414,"tag":446,"props":516,"children":518},{"emptyLinePlaceholder":517},true,[519],{"type":419,"value":520},"\n",{"type":414,"tag":446,"props":522,"children":524},{"class":448,"line":523},3,[525,529,534,538,543,548,553,558,563],{"type":414,"tag":446,"props":526,"children":527},{"style":453},[528],{"type":419,"value":456},{"type":414,"tag":446,"props":530,"children":531},{"style":459},[532],{"type":419,"value":533}," Test",{"type":414,"tag":446,"props":535,"children":536},{"style":465},[537],{"type":419,"value":468},{"type":414,"tag":446,"props":539,"children":540},{"style":459},[541],{"type":419,"value":542}," TupleToUnion",{"type":414,"tag":446,"props":544,"children":545},{"style":471},[546],{"type":419,"value":547},"\u003C",{"type":414,"tag":446,"props":549,"children":550},{"style":459},[551],{"type":419,"value":552},"Arr",{"type":414,"tag":446,"props":554,"children":555},{"style":471},[556],{"type":419,"value":557},">",{"type":414,"tag":446,"props":559,"children":560},{"style":483},[561],{"type":419,"value":562},";",{"type":414,"tag":446,"props":564,"children":566},{"style":565},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[567],{"type":419,"value":568}," // expected to be '1' | '2' | '3'\n",{"type":414,"tag":570,"props":571,"children":573},"h2",{"id":572},"method-1",[574],{"type":419,"value":575},"method 1",{"type":414,"tag":436,"props":577,"children":579},{"className":438,"code":578,"language":440,"meta":408,"style":408},"type TupleToUnion\u003CT extends any[]> = T[number];\n",[580],{"type":414,"tag":422,"props":581,"children":582},{"__ignoreMap":408},[583],{"type":414,"tag":446,"props":584,"children":585},{"class":448,"line":449},[586,590,594,598,603,609,615,620,625,630,635,640,644],{"type":414,"tag":446,"props":587,"children":588},{"style":453},[589],{"type":419,"value":456},{"type":414,"tag":446,"props":591,"children":592},{"style":459},[593],{"type":419,"value":542},{"type":414,"tag":446,"props":595,"children":596},{"style":471},[597],{"type":419,"value":547},{"type":414,"tag":446,"props":599,"children":600},{"style":459},[601],{"type":419,"value":602},"T",{"type":414,"tag":446,"props":604,"children":606},{"style":605},"--shiki-light:#DA5221;--shiki-default:#DA5221;--shiki-dark:#FF8F40",[607],{"type":419,"value":608}," extends",{"type":414,"tag":446,"props":610,"children":612},{"style":611},"--shiki-light:#DC3EB7;--shiki-default:#DC3EB7;--shiki-dark:#39BAE6",[613],{"type":419,"value":614}," any",{"type":414,"tag":446,"props":616,"children":617},{"style":471},[618],{"type":419,"value":619},"[]> ",{"type":414,"tag":446,"props":621,"children":622},{"style":465},[623],{"type":419,"value":624},"=",{"type":414,"tag":446,"props":626,"children":627},{"style":459},[628],{"type":419,"value":629}," T",{"type":414,"tag":446,"props":631,"children":632},{"style":471},[633],{"type":419,"value":634},"[",{"type":414,"tag":446,"props":636,"children":637},{"style":611},[638],{"type":419,"value":639},"number",{"type":414,"tag":446,"props":641,"children":642},{"style":471},[643],{"type":419,"value":505},{"type":414,"tag":446,"props":645,"children":646},{"style":483},[647],{"type":419,"value":510},{"type":414,"tag":570,"props":649,"children":651},{"id":650},"method-2",[652],{"type":419,"value":653},"method 2",{"type":414,"tag":436,"props":655,"children":657},{"className":438,"code":656,"language":440,"meta":408,"style":408},"type TupleToUnion\u003CT extends unknown[]> = T extends [infer P, ...infer R]\n  ? P | TupleToUnion\u003CR>\n  : never;\n",[658],{"type":414,"tag":422,"props":659,"children":660},{"__ignoreMap":408},[661,738,773],{"type":414,"tag":446,"props":662,"children":663},{"class":448,"line":449},[664,668,672,676,680,684,689,693,697,701,705,709,714,719,723,728,733],{"type":414,"tag":446,"props":665,"children":666},{"style":453},[667],{"type":419,"value":456},{"type":414,"tag":446,"props":669,"children":670},{"style":459},[671],{"type":419,"value":542},{"type":414,"tag":446,"props":673,"children":674},{"style":471},[675],{"type":419,"value":547},{"type":414,"tag":446,"props":677,"children":678},{"style":459},[679],{"type":419,"value":602},{"type":414,"tag":446,"props":681,"children":682},{"style":605},[683],{"type":419,"value":608},{"type":414,"tag":446,"props":685,"children":686},{"style":611},[687],{"type":419,"value":688}," unknown",{"type":414,"tag":446,"props":690,"children":691},{"style":471},[692],{"type":419,"value":619},{"type":414,"tag":446,"props":694,"children":695},{"style":465},[696],{"type":419,"value":624},{"type":414,"tag":446,"props":698,"children":699},{"style":459},[700],{"type":419,"value":629},{"type":414,"tag":446,"props":702,"children":703},{"style":605},[704],{"type":419,"value":608},{"type":414,"tag":446,"props":706,"children":707},{"style":471},[708],{"type":419,"value":474},{"type":414,"tag":446,"props":710,"children":711},{"style":465},[712],{"type":419,"value":713},"infer",{"type":414,"tag":446,"props":715,"children":716},{"style":459},[717],{"type":419,"value":718}," P",{"type":414,"tag":446,"props":720,"children":721},{"style":483},[722],{"type":419,"value":486},{"type":414,"tag":446,"props":724,"children":725},{"style":465},[726],{"type":419,"value":727}," ...infer",{"type":414,"tag":446,"props":729,"children":730},{"style":459},[731],{"type":419,"value":732}," R",{"type":414,"tag":446,"props":734,"children":735},{"style":471},[736],{"type":419,"value":737},"]\n",{"type":414,"tag":446,"props":739,"children":740},{"class":448,"line":513},[741,746,750,755,759,763,768],{"type":414,"tag":446,"props":742,"children":743},{"style":465},[744],{"type":419,"value":745},"  ?",{"type":414,"tag":446,"props":747,"children":748},{"style":459},[749],{"type":419,"value":718},{"type":414,"tag":446,"props":751,"children":752},{"style":465},[753],{"type":419,"value":754}," |",{"type":414,"tag":446,"props":756,"children":757},{"style":459},[758],{"type":419,"value":542},{"type":414,"tag":446,"props":760,"children":761},{"style":471},[762],{"type":419,"value":547},{"type":414,"tag":446,"props":764,"children":765},{"style":459},[766],{"type":419,"value":767},"R",{"type":414,"tag":446,"props":769,"children":770},{"style":471},[771],{"type":419,"value":772},">\n",{"type":414,"tag":446,"props":774,"children":775},{"class":448,"line":523},[776,781,786],{"type":414,"tag":446,"props":777,"children":778},{"style":465},[779],{"type":419,"value":780},"  :",{"type":414,"tag":446,"props":782,"children":783},{"style":611},[784],{"type":419,"value":785}," never",{"type":414,"tag":446,"props":787,"children":788},{"style":483},[789],{"type":419,"value":510},{"type":414,"tag":570,"props":791,"children":793},{"id":792},"method-3",[794],{"type":419,"value":795},"method 3",{"type":414,"tag":436,"props":797,"children":799},{"className":438,"code":798,"language":440,"meta":408,"style":408},"type TupleToUnion\u003CT> = T extends (infer P)[] ? P : never;\n",[800],{"type":414,"tag":422,"props":801,"children":802},{"__ignoreMap":408},[803],{"type":414,"tag":446,"props":804,"children":805},{"class":448,"line":449},[806,810,814,818,822,827,831,835,839,844,848,852,857,862,866,871,875],{"type":414,"tag":446,"props":807,"children":808},{"style":453},[809],{"type":419,"value":456},{"type":414,"tag":446,"props":811,"children":812},{"style":459},[813],{"type":419,"value":542},{"type":414,"tag":446,"props":815,"children":816},{"style":471},[817],{"type":419,"value":547},{"type":414,"tag":446,"props":819,"children":820},{"style":459},[821],{"type":419,"value":602},{"type":414,"tag":446,"props":823,"children":824},{"style":471},[825],{"type":419,"value":826},"> ",{"type":414,"tag":446,"props":828,"children":829},{"style":465},[830],{"type":419,"value":624},{"type":414,"tag":446,"props":832,"children":833},{"style":459},[834],{"type":419,"value":629},{"type":414,"tag":446,"props":836,"children":837},{"style":605},[838],{"type":419,"value":608},{"type":414,"tag":446,"props":840,"children":841},{"style":471},[842],{"type":419,"value":843}," (",{"type":414,"tag":446,"props":845,"children":846},{"style":465},[847],{"type":419,"value":713},{"type":414,"tag":446,"props":849,"children":850},{"style":459},[851],{"type":419,"value":718},{"type":414,"tag":446,"props":853,"children":854},{"style":471},[855],{"type":419,"value":856},")[] ",{"type":414,"tag":446,"props":858,"children":859},{"style":465},[860],{"type":419,"value":861},"?",{"type":414,"tag":446,"props":863,"children":864},{"style":459},[865],{"type":419,"value":718},{"type":414,"tag":446,"props":867,"children":868},{"style":465},[869],{"type":419,"value":870}," :",{"type":414,"tag":446,"props":872,"children":873},{"style":611},[874],{"type":419,"value":785},{"type":414,"tag":446,"props":876,"children":877},{"style":483},[878],{"type":419,"value":510},{"type":414,"tag":880,"props":881,"children":882},"style",{},[883],{"type":419,"value":884},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":408,"searchDepth":886,"depth":886,"links":887},5,[888,889,890],{"id":572,"depth":513,"text":575},{"id":650,"depth":513,"text":653},{"id":792,"depth":513,"text":795},"markdown","content:3.frontend-code-assessment:3.type-challeges:10.medium-tuple-to-union.md","content","3.frontend-code-assessment/3.type-challeges/10.medium-tuple-to-union.md","md",[897,899],{"_path":376,"title":375,"description":898},"给 xhr 添加 hook，从而实现在各个阶段打印日志",{"_path":390,"title":389,"description":900},"Pinia",1713186269686]