[{"data":1,"prerenderedAt":893},["Reactive",2],{"navigation":3,"/frontend-code-assessment/type-challeges/medium-tuple-to-union":398,"/frontend-code-assessment/type-challeges/medium-tuple-to-union-surround":889},[4,237,265,384],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR 169. 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR 187. 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数相加","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,377],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,347,350,353,356,359,362,365,368,371,374],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":348,"_path":349},"倒计时","/frontend-code-assessment/scene/countdown",{"title":351,"_path":352},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":354,"_path":355},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":357,"_path":358},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":360,"_path":361},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":363,"_path":364},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":366,"_path":367},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":369,"_path":370},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":372,"_path":373},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":375,"_path":376},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":378,"_path":379,"children":380},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[381],{"title":382,"_path":383},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":385,"_path":386,"children":387},"后端语言","/backend-languages",[388],{"title":389,"_path":390,"children":391},"Python","/backend-languages/python",[392,395],{"title":393,"_path":394},"基础","/backend-languages/python/base",{"title":396,"_path":397},"函数","/backend-languages/python/function",{"_path":383,"_dir":399,"_draft":400,"_partial":400,"_locale":401,"title":382,"description":402,"body":403,"_type":884,"_id":885,"_source":886,"_file":887,"_extension":888},"type-challeges",false,"","实现泛型TupleToUnion\u003CT>，它返回元组所有值的合集。",{"type":404,"children":405,"toc":878},"root",[406,423,428,562,569,641,647,783,789,872],{"type":407,"tag":408,"props":409,"children":410},"element","p",{},[411,414,421],{"type":412,"value":413},"text","实现泛型",{"type":407,"tag":415,"props":416,"children":418},"code",{"className":417},[],[419],{"type":412,"value":420},"TupleToUnion\u003CT>",{"type":412,"value":422},"，它返回元组所有值的合集。",{"type":407,"tag":408,"props":424,"children":425},{},[426],{"type":412,"value":427},"例如",{"type":407,"tag":429,"props":430,"children":434},"pre",{"className":431,"code":432,"language":433,"meta":401,"style":401},"language-ts shiki shiki-themes slack-ochin slack-ochin ayu-dark","type Arr = [\"1\", \"2\", \"3\"];\n\ntype Test = TupleToUnion\u003CArr>; // expected to be '1' | '2' | '3'\n","ts",[435],{"type":407,"tag":415,"props":436,"children":437},{"__ignoreMap":401},[438,504,514],{"type":407,"tag":439,"props":440,"children":443},"span",{"class":441,"line":442},"line",1,[444,450,456,462,468,474,480,485,489,494,499],{"type":407,"tag":439,"props":445,"children":447},{"style":446},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[448],{"type":412,"value":449},"type",{"type":407,"tag":439,"props":451,"children":453},{"style":452},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF",[454],{"type":412,"value":455}," Arr",{"type":407,"tag":439,"props":457,"children":459},{"style":458},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[460],{"type":412,"value":461}," =",{"type":407,"tag":439,"props":463,"children":465},{"style":464},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[466],{"type":412,"value":467}," [",{"type":407,"tag":439,"props":469,"children":471},{"style":470},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[472],{"type":412,"value":473},"\"1\"",{"type":407,"tag":439,"props":475,"children":477},{"style":476},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[478],{"type":412,"value":479},",",{"type":407,"tag":439,"props":481,"children":482},{"style":470},[483],{"type":412,"value":484}," \"2\"",{"type":407,"tag":439,"props":486,"children":487},{"style":476},[488],{"type":412,"value":479},{"type":407,"tag":439,"props":490,"children":491},{"style":470},[492],{"type":412,"value":493}," \"3\"",{"type":407,"tag":439,"props":495,"children":496},{"style":464},[497],{"type":412,"value":498},"]",{"type":407,"tag":439,"props":500,"children":501},{"style":476},[502],{"type":412,"value":503},";\n",{"type":407,"tag":439,"props":505,"children":507},{"class":441,"line":506},2,[508],{"type":407,"tag":439,"props":509,"children":511},{"emptyLinePlaceholder":510},true,[512],{"type":412,"value":513},"\n",{"type":407,"tag":439,"props":515,"children":517},{"class":441,"line":516},3,[518,522,527,531,536,541,546,551,556],{"type":407,"tag":439,"props":519,"children":520},{"style":446},[521],{"type":412,"value":449},{"type":407,"tag":439,"props":523,"children":524},{"style":452},[525],{"type":412,"value":526}," Test",{"type":407,"tag":439,"props":528,"children":529},{"style":458},[530],{"type":412,"value":461},{"type":407,"tag":439,"props":532,"children":533},{"style":452},[534],{"type":412,"value":535}," TupleToUnion",{"type":407,"tag":439,"props":537,"children":538},{"style":464},[539],{"type":412,"value":540},"\u003C",{"type":407,"tag":439,"props":542,"children":543},{"style":452},[544],{"type":412,"value":545},"Arr",{"type":407,"tag":439,"props":547,"children":548},{"style":464},[549],{"type":412,"value":550},">",{"type":407,"tag":439,"props":552,"children":553},{"style":476},[554],{"type":412,"value":555},";",{"type":407,"tag":439,"props":557,"children":559},{"style":558},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[560],{"type":412,"value":561}," // expected to be '1' | '2' | '3'\n",{"type":407,"tag":563,"props":564,"children":566},"h2",{"id":565},"method-1",[567],{"type":412,"value":568},"method 1",{"type":407,"tag":429,"props":570,"children":572},{"className":431,"code":571,"language":433,"meta":401,"style":401},"type TupleToUnion\u003CT extends any[]> = T[number];\n",[573],{"type":407,"tag":415,"props":574,"children":575},{"__ignoreMap":401},[576],{"type":407,"tag":439,"props":577,"children":578},{"class":441,"line":442},[579,583,587,591,596,602,608,613,618,623,628,633,637],{"type":407,"tag":439,"props":580,"children":581},{"style":446},[582],{"type":412,"value":449},{"type":407,"tag":439,"props":584,"children":585},{"style":452},[586],{"type":412,"value":535},{"type":407,"tag":439,"props":588,"children":589},{"style":464},[590],{"type":412,"value":540},{"type":407,"tag":439,"props":592,"children":593},{"style":452},[594],{"type":412,"value":595},"T",{"type":407,"tag":439,"props":597,"children":599},{"style":598},"--shiki-light:#DA5221;--shiki-default:#DA5221;--shiki-dark:#FF8F40",[600],{"type":412,"value":601}," extends",{"type":407,"tag":439,"props":603,"children":605},{"style":604},"--shiki-light:#DC3EB7;--shiki-default:#DC3EB7;--shiki-dark:#39BAE6",[606],{"type":412,"value":607}," any",{"type":407,"tag":439,"props":609,"children":610},{"style":464},[611],{"type":412,"value":612},"[]> ",{"type":407,"tag":439,"props":614,"children":615},{"style":458},[616],{"type":412,"value":617},"=",{"type":407,"tag":439,"props":619,"children":620},{"style":452},[621],{"type":412,"value":622}," T",{"type":407,"tag":439,"props":624,"children":625},{"style":464},[626],{"type":412,"value":627},"[",{"type":407,"tag":439,"props":629,"children":630},{"style":604},[631],{"type":412,"value":632},"number",{"type":407,"tag":439,"props":634,"children":635},{"style":464},[636],{"type":412,"value":498},{"type":407,"tag":439,"props":638,"children":639},{"style":476},[640],{"type":412,"value":503},{"type":407,"tag":563,"props":642,"children":644},{"id":643},"method-2",[645],{"type":412,"value":646},"method 2",{"type":407,"tag":429,"props":648,"children":650},{"className":431,"code":649,"language":433,"meta":401,"style":401},"type TupleToUnion\u003CT extends unknown[]> = T extends [infer P, ...infer R]\n  ? P | TupleToUnion\u003CR>\n  : never;\n",[651],{"type":407,"tag":415,"props":652,"children":653},{"__ignoreMap":401},[654,731,766],{"type":407,"tag":439,"props":655,"children":656},{"class":441,"line":442},[657,661,665,669,673,677,682,686,690,694,698,702,707,712,716,721,726],{"type":407,"tag":439,"props":658,"children":659},{"style":446},[660],{"type":412,"value":449},{"type":407,"tag":439,"props":662,"children":663},{"style":452},[664],{"type":412,"value":535},{"type":407,"tag":439,"props":666,"children":667},{"style":464},[668],{"type":412,"value":540},{"type":407,"tag":439,"props":670,"children":671},{"style":452},[672],{"type":412,"value":595},{"type":407,"tag":439,"props":674,"children":675},{"style":598},[676],{"type":412,"value":601},{"type":407,"tag":439,"props":678,"children":679},{"style":604},[680],{"type":412,"value":681}," unknown",{"type":407,"tag":439,"props":683,"children":684},{"style":464},[685],{"type":412,"value":612},{"type":407,"tag":439,"props":687,"children":688},{"style":458},[689],{"type":412,"value":617},{"type":407,"tag":439,"props":691,"children":692},{"style":452},[693],{"type":412,"value":622},{"type":407,"tag":439,"props":695,"children":696},{"style":598},[697],{"type":412,"value":601},{"type":407,"tag":439,"props":699,"children":700},{"style":464},[701],{"type":412,"value":467},{"type":407,"tag":439,"props":703,"children":704},{"style":458},[705],{"type":412,"value":706},"infer",{"type":407,"tag":439,"props":708,"children":709},{"style":452},[710],{"type":412,"value":711}," P",{"type":407,"tag":439,"props":713,"children":714},{"style":476},[715],{"type":412,"value":479},{"type":407,"tag":439,"props":717,"children":718},{"style":458},[719],{"type":412,"value":720}," ...infer",{"type":407,"tag":439,"props":722,"children":723},{"style":452},[724],{"type":412,"value":725}," R",{"type":407,"tag":439,"props":727,"children":728},{"style":464},[729],{"type":412,"value":730},"]\n",{"type":407,"tag":439,"props":732,"children":733},{"class":441,"line":506},[734,739,743,748,752,756,761],{"type":407,"tag":439,"props":735,"children":736},{"style":458},[737],{"type":412,"value":738},"  ?",{"type":407,"tag":439,"props":740,"children":741},{"style":452},[742],{"type":412,"value":711},{"type":407,"tag":439,"props":744,"children":745},{"style":458},[746],{"type":412,"value":747}," |",{"type":407,"tag":439,"props":749,"children":750},{"style":452},[751],{"type":412,"value":535},{"type":407,"tag":439,"props":753,"children":754},{"style":464},[755],{"type":412,"value":540},{"type":407,"tag":439,"props":757,"children":758},{"style":452},[759],{"type":412,"value":760},"R",{"type":407,"tag":439,"props":762,"children":763},{"style":464},[764],{"type":412,"value":765},">\n",{"type":407,"tag":439,"props":767,"children":768},{"class":441,"line":516},[769,774,779],{"type":407,"tag":439,"props":770,"children":771},{"style":458},[772],{"type":412,"value":773},"  :",{"type":407,"tag":439,"props":775,"children":776},{"style":604},[777],{"type":412,"value":778}," never",{"type":407,"tag":439,"props":780,"children":781},{"style":476},[782],{"type":412,"value":503},{"type":407,"tag":563,"props":784,"children":786},{"id":785},"method-3",[787],{"type":412,"value":788},"method 3",{"type":407,"tag":429,"props":790,"children":792},{"className":431,"code":791,"language":433,"meta":401,"style":401},"type TupleToUnion\u003CT> = T extends (infer P)[] ? P : never;\n",[793],{"type":407,"tag":415,"props":794,"children":795},{"__ignoreMap":401},[796],{"type":407,"tag":439,"props":797,"children":798},{"class":441,"line":442},[799,803,807,811,815,820,824,828,832,837,841,845,850,855,859,864,868],{"type":407,"tag":439,"props":800,"children":801},{"style":446},[802],{"type":412,"value":449},{"type":407,"tag":439,"props":804,"children":805},{"style":452},[806],{"type":412,"value":535},{"type":407,"tag":439,"props":808,"children":809},{"style":464},[810],{"type":412,"value":540},{"type":407,"tag":439,"props":812,"children":813},{"style":452},[814],{"type":412,"value":595},{"type":407,"tag":439,"props":816,"children":817},{"style":464},[818],{"type":412,"value":819},"> ",{"type":407,"tag":439,"props":821,"children":822},{"style":458},[823],{"type":412,"value":617},{"type":407,"tag":439,"props":825,"children":826},{"style":452},[827],{"type":412,"value":622},{"type":407,"tag":439,"props":829,"children":830},{"style":598},[831],{"type":412,"value":601},{"type":407,"tag":439,"props":833,"children":834},{"style":464},[835],{"type":412,"value":836}," (",{"type":407,"tag":439,"props":838,"children":839},{"style":458},[840],{"type":412,"value":706},{"type":407,"tag":439,"props":842,"children":843},{"style":452},[844],{"type":412,"value":711},{"type":407,"tag":439,"props":846,"children":847},{"style":464},[848],{"type":412,"value":849},")[] ",{"type":407,"tag":439,"props":851,"children":852},{"style":458},[853],{"type":412,"value":854},"?",{"type":407,"tag":439,"props":856,"children":857},{"style":452},[858],{"type":412,"value":711},{"type":407,"tag":439,"props":860,"children":861},{"style":458},[862],{"type":412,"value":863}," :",{"type":407,"tag":439,"props":865,"children":866},{"style":604},[867],{"type":412,"value":778},{"type":407,"tag":439,"props":869,"children":870},{"style":476},[871],{"type":412,"value":503},{"type":407,"tag":873,"props":874,"children":875},"style",{},[876],{"type":412,"value":877},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":401,"searchDepth":879,"depth":879,"links":880},5,[881,882,883],{"id":565,"depth":506,"text":568},{"id":643,"depth":506,"text":646},{"id":785,"depth":506,"text":788},"markdown","content:3.frontend-code-assessment:3.type-challeges:10.medium-tuple-to-union.md","content","3.frontend-code-assessment/3.type-challeges/10.medium-tuple-to-union.md","md",[890,892],{"_path":376,"title":375,"description":891},"给 xhr 添加 hook，从而实现在各个阶段打印日志",{"_path":394,"title":393,"description":401},1713153300858]