[{"data":1,"prerenderedAt":959},["Reactive",2],{"navigation":3,"/frontend-code-assessment/type-challeges/medium-tuple-to-union":463,"/frontend-code-assessment/type-challeges/medium-tuple-to-union-surround":954},[4,266,295,440,448],{"title":5,"_path":6,"children":7,"icon":265},"算法","/algorithm",[8,28],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30,"children":31},"Leetcode 力扣","/algorithm/leetcode",[32,38,51],{"title":33,"_path":34,"children":35},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[36],{"title":37,"_path":34},"刷题索引",{"title":39,"_path":40,"children":41},"剑指 offer","/algorithm/leetcode/sword-ofter",[42,45,48],{"title":43,"_path":44},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":46,"_path":47},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":49,"_path":50},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":52,"_path":53,"children":54},"主题单","/algorithm/leetcode/major",[55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262],{"title":56,"_path":57},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":59,"_path":60},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":62,"_path":63},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":65,"_path":66},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":68,"_path":69},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":71,"_path":72},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":74,"_path":75},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":77,"_path":78},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":80,"_path":81},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":83,"_path":84},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":86,"_path":87},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":89,"_path":90},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":92,"_path":93},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":95,"_path":96},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":98,"_path":99},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":101,"_path":102},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":104,"_path":105},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":107,"_path":108},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":110,"_path":111},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":113,"_path":114},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":116,"_path":117},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":119,"_path":120},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":122,"_path":123},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":125,"_path":126},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":128,"_path":129},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":131,"_path":132},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":134,"_path":135},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":137,"_path":138},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":140,"_path":141},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":143,"_path":144},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":146,"_path":147},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":149,"_path":150},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":152,"_path":153},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":155,"_path":156},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":158,"_path":159},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":161,"_path":162},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":164,"_path":165},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":167,"_path":168},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":170,"_path":171},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":173,"_path":174},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":176,"_path":177},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":179,"_path":180},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":182,"_path":183},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":185,"_path":186},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":188,"_path":189},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":191,"_path":192},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":194,"_path":195},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":197,"_path":198},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":200,"_path":201},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":203,"_path":204},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":206,"_path":207},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":209,"_path":210},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":212,"_path":213},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":215,"_path":216},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":218,"_path":219},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":221,"_path":222},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":224,"_path":225},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":227,"_path":228},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":230,"_path":231},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":233,"_path":234},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":236,"_path":237},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":239,"_path":240},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":242,"_path":243},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":245,"_path":246},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":248,"_path":249},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":251,"_path":252},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":254,"_path":255},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":257,"_path":258},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":260,"_path":261},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":263,"_path":264},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":267,"_path":268,"children":269,"icon":294},"前端八股文","/frontend-endorsement",[270,281],{"title":271,"_path":272,"children":273},"构建工具","/frontend-endorsement/build-tools",[274],{"title":275,"_path":276,"children":277},"Webpack","/frontend-endorsement/build-tools/webpack",[278],{"title":279,"_path":280},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":282,"_path":283,"children":284},"Html","/frontend-endorsement/html",[285,288,291],{"title":286,"_path":287},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":289,"_path":290},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":292,"_path":293},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":296,"_path":297,"children":298,"icon":439},"前端代码考核","/frontend-code-assessment",[299,348,432],{"title":300,"_path":301,"children":302},"源码实现","/frontend-code-assessment/source",[303,328,341],{"title":304,"_path":305,"children":306},"原生 api","/frontend-code-assessment/source/native-api",[307,310,313,316,319,322,325],{"title":308,"_path":309},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":311,"_path":312},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":314,"_path":315},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":317,"_path":318},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":320,"_path":321},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":323,"_path":324},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":326,"_path":327},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":329,"_path":330,"children":331},"数组 Array","/frontend-code-assessment/source/array",[332,335,338],{"title":333,"_path":334},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":336,"_path":337},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":339,"_path":340},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":342,"_path":343,"children":344},"字符串 String","/frontend-code-assessment/source/string",[345],{"title":346,"_path":347},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":349,"_path":350,"children":351},"业务场景","/frontend-code-assessment/scene",[352,374,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429],{"title":353,"_path":354,"children":355},"Promise","/frontend-code-assessment/scene/promise",[356,359,362,365,368,371],{"title":357,"_path":358},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":360,"_path":361},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":363,"_path":364},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":366,"_path":367},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":369,"_path":370},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":372,"_path":373},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":375,"_path":376,"children":377},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[378],{"title":379,"_path":380},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":382,"_path":383},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":385,"_path":386},"倒计时","/frontend-code-assessment/scene/countdown",{"title":388,"_path":389},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":391,"_path":392},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":394,"_path":395},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":397,"_path":398},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":400,"_path":401},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":403,"_path":404},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":406,"_path":407},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":409,"_path":410},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":412,"_path":413},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":415,"_path":416},"随机数","/frontend-code-assessment/scene/random-number",{"title":418,"_path":419},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":421,"_path":422},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":424,"_path":425},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":427,"_path":428},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":430,"_path":431},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":433,"_path":434,"children":435},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[436],{"title":437,"_path":438},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":441,"_path":442,"children":443,"icon":447},"项目","/pro",[444],{"title":445,"_path":446},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":449,"_path":450,"children":451,"icon":462},"后端语言","/backend-languages",[452],{"title":453,"_path":454,"children":455},"Python","/backend-languages/python",[456,459],{"title":457,"_path":458},"基础","/backend-languages/python/base",{"title":460,"_path":461},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":438,"_dir":464,"_draft":465,"_partial":465,"_locale":466,"title":437,"description":467,"body":468,"_type":949,"_id":950,"_source":951,"_file":952,"_extension":953},"type-challeges",false,"","实现泛型TupleToUnion\u003CT>，它返回元组所有值的合集。",{"type":469,"children":470,"toc":943},"root",[471,488,493,627,634,706,712,848,854,937],{"type":472,"tag":473,"props":474,"children":475},"element","p",{},[476,479,486],{"type":477,"value":478},"text","实现泛型",{"type":472,"tag":480,"props":481,"children":483},"code",{"className":482},[],[484],{"type":477,"value":485},"TupleToUnion\u003CT>",{"type":477,"value":487},"，它返回元组所有值的合集。",{"type":472,"tag":473,"props":489,"children":490},{},[491],{"type":477,"value":492},"例如",{"type":472,"tag":494,"props":495,"children":499},"pre",{"className":496,"code":497,"language":498,"meta":466,"style":466},"language-ts shiki shiki-themes slack-ochin slack-ochin ayu-dark","type Arr = [\"1\", \"2\", \"3\"];\n\ntype Test = TupleToUnion\u003CArr>; // expected to be '1' | '2' | '3'\n","ts",[500],{"type":472,"tag":480,"props":501,"children":502},{"__ignoreMap":466},[503,569,579],{"type":472,"tag":504,"props":505,"children":508},"span",{"class":506,"line":507},"line",1,[509,515,521,527,533,539,545,550,554,559,564],{"type":472,"tag":504,"props":510,"children":512},{"style":511},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[513],{"type":477,"value":514},"type",{"type":472,"tag":504,"props":516,"children":518},{"style":517},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF",[519],{"type":477,"value":520}," Arr",{"type":472,"tag":504,"props":522,"children":524},{"style":523},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[525],{"type":477,"value":526}," =",{"type":472,"tag":504,"props":528,"children":530},{"style":529},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[531],{"type":477,"value":532}," [",{"type":472,"tag":504,"props":534,"children":536},{"style":535},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[537],{"type":477,"value":538},"\"1\"",{"type":472,"tag":504,"props":540,"children":542},{"style":541},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[543],{"type":477,"value":544},",",{"type":472,"tag":504,"props":546,"children":547},{"style":535},[548],{"type":477,"value":549}," \"2\"",{"type":472,"tag":504,"props":551,"children":552},{"style":541},[553],{"type":477,"value":544},{"type":472,"tag":504,"props":555,"children":556},{"style":535},[557],{"type":477,"value":558}," \"3\"",{"type":472,"tag":504,"props":560,"children":561},{"style":529},[562],{"type":477,"value":563},"]",{"type":472,"tag":504,"props":565,"children":566},{"style":541},[567],{"type":477,"value":568},";\n",{"type":472,"tag":504,"props":570,"children":572},{"class":506,"line":571},2,[573],{"type":472,"tag":504,"props":574,"children":576},{"emptyLinePlaceholder":575},true,[577],{"type":477,"value":578},"\n",{"type":472,"tag":504,"props":580,"children":582},{"class":506,"line":581},3,[583,587,592,596,601,606,611,616,621],{"type":472,"tag":504,"props":584,"children":585},{"style":511},[586],{"type":477,"value":514},{"type":472,"tag":504,"props":588,"children":589},{"style":517},[590],{"type":477,"value":591}," Test",{"type":472,"tag":504,"props":593,"children":594},{"style":523},[595],{"type":477,"value":526},{"type":472,"tag":504,"props":597,"children":598},{"style":517},[599],{"type":477,"value":600}," TupleToUnion",{"type":472,"tag":504,"props":602,"children":603},{"style":529},[604],{"type":477,"value":605},"\u003C",{"type":472,"tag":504,"props":607,"children":608},{"style":517},[609],{"type":477,"value":610},"Arr",{"type":472,"tag":504,"props":612,"children":613},{"style":529},[614],{"type":477,"value":615},">",{"type":472,"tag":504,"props":617,"children":618},{"style":541},[619],{"type":477,"value":620},";",{"type":472,"tag":504,"props":622,"children":624},{"style":623},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[625],{"type":477,"value":626}," // expected to be '1' | '2' | '3'\n",{"type":472,"tag":628,"props":629,"children":631},"h2",{"id":630},"method-1",[632],{"type":477,"value":633},"method 1",{"type":472,"tag":494,"props":635,"children":637},{"className":496,"code":636,"language":498,"meta":466,"style":466},"type TupleToUnion\u003CT extends any[]> = T[number];\n",[638],{"type":472,"tag":480,"props":639,"children":640},{"__ignoreMap":466},[641],{"type":472,"tag":504,"props":642,"children":643},{"class":506,"line":507},[644,648,652,656,661,667,673,678,683,688,693,698,702],{"type":472,"tag":504,"props":645,"children":646},{"style":511},[647],{"type":477,"value":514},{"type":472,"tag":504,"props":649,"children":650},{"style":517},[651],{"type":477,"value":600},{"type":472,"tag":504,"props":653,"children":654},{"style":529},[655],{"type":477,"value":605},{"type":472,"tag":504,"props":657,"children":658},{"style":517},[659],{"type":477,"value":660},"T",{"type":472,"tag":504,"props":662,"children":664},{"style":663},"--shiki-light:#DA5221;--shiki-default:#DA5221;--shiki-dark:#FF8F40",[665],{"type":477,"value":666}," extends",{"type":472,"tag":504,"props":668,"children":670},{"style":669},"--shiki-light:#DC3EB7;--shiki-default:#DC3EB7;--shiki-dark:#39BAE6",[671],{"type":477,"value":672}," any",{"type":472,"tag":504,"props":674,"children":675},{"style":529},[676],{"type":477,"value":677},"[]> ",{"type":472,"tag":504,"props":679,"children":680},{"style":523},[681],{"type":477,"value":682},"=",{"type":472,"tag":504,"props":684,"children":685},{"style":517},[686],{"type":477,"value":687}," T",{"type":472,"tag":504,"props":689,"children":690},{"style":529},[691],{"type":477,"value":692},"[",{"type":472,"tag":504,"props":694,"children":695},{"style":669},[696],{"type":477,"value":697},"number",{"type":472,"tag":504,"props":699,"children":700},{"style":529},[701],{"type":477,"value":563},{"type":472,"tag":504,"props":703,"children":704},{"style":541},[705],{"type":477,"value":568},{"type":472,"tag":628,"props":707,"children":709},{"id":708},"method-2",[710],{"type":477,"value":711},"method 2",{"type":472,"tag":494,"props":713,"children":715},{"className":496,"code":714,"language":498,"meta":466,"style":466},"type TupleToUnion\u003CT extends unknown[]> = T extends [infer P, ...infer R]\n  ? P | TupleToUnion\u003CR>\n  : never;\n",[716],{"type":472,"tag":480,"props":717,"children":718},{"__ignoreMap":466},[719,796,831],{"type":472,"tag":504,"props":720,"children":721},{"class":506,"line":507},[722,726,730,734,738,742,747,751,755,759,763,767,772,777,781,786,791],{"type":472,"tag":504,"props":723,"children":724},{"style":511},[725],{"type":477,"value":514},{"type":472,"tag":504,"props":727,"children":728},{"style":517},[729],{"type":477,"value":600},{"type":472,"tag":504,"props":731,"children":732},{"style":529},[733],{"type":477,"value":605},{"type":472,"tag":504,"props":735,"children":736},{"style":517},[737],{"type":477,"value":660},{"type":472,"tag":504,"props":739,"children":740},{"style":663},[741],{"type":477,"value":666},{"type":472,"tag":504,"props":743,"children":744},{"style":669},[745],{"type":477,"value":746}," unknown",{"type":472,"tag":504,"props":748,"children":749},{"style":529},[750],{"type":477,"value":677},{"type":472,"tag":504,"props":752,"children":753},{"style":523},[754],{"type":477,"value":682},{"type":472,"tag":504,"props":756,"children":757},{"style":517},[758],{"type":477,"value":687},{"type":472,"tag":504,"props":760,"children":761},{"style":663},[762],{"type":477,"value":666},{"type":472,"tag":504,"props":764,"children":765},{"style":529},[766],{"type":477,"value":532},{"type":472,"tag":504,"props":768,"children":769},{"style":523},[770],{"type":477,"value":771},"infer",{"type":472,"tag":504,"props":773,"children":774},{"style":517},[775],{"type":477,"value":776}," P",{"type":472,"tag":504,"props":778,"children":779},{"style":541},[780],{"type":477,"value":544},{"type":472,"tag":504,"props":782,"children":783},{"style":523},[784],{"type":477,"value":785}," ...infer",{"type":472,"tag":504,"props":787,"children":788},{"style":517},[789],{"type":477,"value":790}," R",{"type":472,"tag":504,"props":792,"children":793},{"style":529},[794],{"type":477,"value":795},"]\n",{"type":472,"tag":504,"props":797,"children":798},{"class":506,"line":571},[799,804,808,813,817,821,826],{"type":472,"tag":504,"props":800,"children":801},{"style":523},[802],{"type":477,"value":803},"  ?",{"type":472,"tag":504,"props":805,"children":806},{"style":517},[807],{"type":477,"value":776},{"type":472,"tag":504,"props":809,"children":810},{"style":523},[811],{"type":477,"value":812}," |",{"type":472,"tag":504,"props":814,"children":815},{"style":517},[816],{"type":477,"value":600},{"type":472,"tag":504,"props":818,"children":819},{"style":529},[820],{"type":477,"value":605},{"type":472,"tag":504,"props":822,"children":823},{"style":517},[824],{"type":477,"value":825},"R",{"type":472,"tag":504,"props":827,"children":828},{"style":529},[829],{"type":477,"value":830},">\n",{"type":472,"tag":504,"props":832,"children":833},{"class":506,"line":581},[834,839,844],{"type":472,"tag":504,"props":835,"children":836},{"style":523},[837],{"type":477,"value":838},"  :",{"type":472,"tag":504,"props":840,"children":841},{"style":669},[842],{"type":477,"value":843}," never",{"type":472,"tag":504,"props":845,"children":846},{"style":541},[847],{"type":477,"value":568},{"type":472,"tag":628,"props":849,"children":851},{"id":850},"method-3",[852],{"type":477,"value":853},"method 3",{"type":472,"tag":494,"props":855,"children":857},{"className":496,"code":856,"language":498,"meta":466,"style":466},"type TupleToUnion\u003CT> = T extends (infer P)[] ? P : never;\n",[858],{"type":472,"tag":480,"props":859,"children":860},{"__ignoreMap":466},[861],{"type":472,"tag":504,"props":862,"children":863},{"class":506,"line":507},[864,868,872,876,880,885,889,893,897,902,906,910,915,920,924,929,933],{"type":472,"tag":504,"props":865,"children":866},{"style":511},[867],{"type":477,"value":514},{"type":472,"tag":504,"props":869,"children":870},{"style":517},[871],{"type":477,"value":600},{"type":472,"tag":504,"props":873,"children":874},{"style":529},[875],{"type":477,"value":605},{"type":472,"tag":504,"props":877,"children":878},{"style":517},[879],{"type":477,"value":660},{"type":472,"tag":504,"props":881,"children":882},{"style":529},[883],{"type":477,"value":884},"> ",{"type":472,"tag":504,"props":886,"children":887},{"style":523},[888],{"type":477,"value":682},{"type":472,"tag":504,"props":890,"children":891},{"style":517},[892],{"type":477,"value":687},{"type":472,"tag":504,"props":894,"children":895},{"style":663},[896],{"type":477,"value":666},{"type":472,"tag":504,"props":898,"children":899},{"style":529},[900],{"type":477,"value":901}," (",{"type":472,"tag":504,"props":903,"children":904},{"style":523},[905],{"type":477,"value":771},{"type":472,"tag":504,"props":907,"children":908},{"style":517},[909],{"type":477,"value":776},{"type":472,"tag":504,"props":911,"children":912},{"style":529},[913],{"type":477,"value":914},")[] ",{"type":472,"tag":504,"props":916,"children":917},{"style":523},[918],{"type":477,"value":919},"?",{"type":472,"tag":504,"props":921,"children":922},{"style":517},[923],{"type":477,"value":776},{"type":472,"tag":504,"props":925,"children":926},{"style":523},[927],{"type":477,"value":928}," :",{"type":472,"tag":504,"props":930,"children":931},{"style":669},[932],{"type":477,"value":843},{"type":472,"tag":504,"props":934,"children":935},{"style":541},[936],{"type":477,"value":568},{"type":472,"tag":938,"props":939,"children":940},"style",{},[941],{"type":477,"value":942},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":466,"searchDepth":944,"depth":944,"links":945},5,[946,947,948],{"id":630,"depth":571,"text":633},{"id":708,"depth":571,"text":711},{"id":850,"depth":571,"text":853},"markdown","content:3.frontend-code-assessment:3.type-challeges:10.medium-tuple-to-union.md","content","3.frontend-code-assessment/3.type-challeges/10.medium-tuple-to-union.md","md",[955,957],{"_path":431,"title":430,"description":956},"给 xhr 添加 hook，从而实现在各个阶段打印日志",{"_path":446,"title":445,"description":958},"Pinia",1713695849985]