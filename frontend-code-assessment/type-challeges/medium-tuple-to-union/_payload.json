[{"data":1,"prerenderedAt":948},["Reactive",2],{"navigation":3,"/frontend-code-assessment/type-challeges/medium-tuple-to-union":452,"/frontend-code-assessment/type-challeges/medium-tuple-to-union-surround":943},[4,259,287,431,438],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately",{"title":260,"_path":261,"children":262},"前端八股文","/frontend-endorsement",[263,274],{"title":264,"_path":265,"children":266},"构建工具","/frontend-endorsement/build-tools",[267],{"title":268,"_path":269,"children":270},"Webpack","/frontend-endorsement/build-tools/webpack",[271],{"title":272,"_path":273},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":275,"_path":276,"children":277},"Html","/frontend-endorsement/html",[278,281,284],{"title":279,"_path":280},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":282,"_path":283},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":285,"_path":286},"离线存储","/frontend-endorsement/html/offline-storage",{"title":288,"_path":289,"children":290},"前端代码考核","/frontend-code-assessment",[291,340,424],{"title":292,"_path":293,"children":294},"源码实现","/frontend-code-assessment/source",[295,320,333],{"title":296,"_path":297,"children":298},"原生 api","/frontend-code-assessment/source/native-api",[299,302,305,308,311,314,317],{"title":300,"_path":301},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":303,"_path":304},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":306,"_path":307},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":309,"_path":310},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":312,"_path":313},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":315,"_path":316},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":318,"_path":319},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":321,"_path":322,"children":323},"数组 Array","/frontend-code-assessment/source/array",[324,327,330],{"title":325,"_path":326},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":328,"_path":329},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":331,"_path":332},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":334,"_path":335,"children":336},"字符串 String","/frontend-code-assessment/source/string",[337],{"title":338,"_path":339},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":341,"_path":342,"children":343},"业务场景","/frontend-code-assessment/scene",[344,366,373,376,379,382,385,388,391,394,397,400,403,406,409,412,415,418,421],{"title":345,"_path":346,"children":347},"Promise","/frontend-code-assessment/scene/promise",[348,351,354,357,360,363],{"title":349,"_path":350},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":352,"_path":353},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":355,"_path":356},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":358,"_path":359},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":361,"_path":362},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":364,"_path":365},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":367,"_path":368,"children":369},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[370],{"title":371,"_path":372},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":374,"_path":375},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":377,"_path":378},"倒计时","/frontend-code-assessment/scene/countdown",{"title":380,"_path":381},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":383,"_path":384},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":386,"_path":387},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":389,"_path":390},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":392,"_path":393},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":395,"_path":396},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":398,"_path":399},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":401,"_path":402},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":404,"_path":405},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":407,"_path":408},"随机数","/frontend-code-assessment/scene/random-number",{"title":410,"_path":411},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":413,"_path":414},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":416,"_path":417},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":419,"_path":420},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":422,"_path":423},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":425,"_path":426,"children":427},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[428],{"title":429,"_path":430},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":432,"_path":433,"children":434},"项目","/pro",[435],{"title":436,"_path":437},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":439,"_path":440,"children":441},"后端语言","/backend-languages",[442],{"title":443,"_path":444,"children":445},"Python","/backend-languages/python",[446,449],{"title":447,"_path":448},"基础","/backend-languages/python/base",{"title":450,"_path":451},"函数","/backend-languages/python/function",{"_path":430,"_dir":453,"_draft":454,"_partial":454,"_locale":455,"title":429,"description":456,"body":457,"_type":938,"_id":939,"_source":940,"_file":941,"_extension":942},"type-challeges",false,"","实现泛型TupleToUnion\u003CT>，它返回元组所有值的合集。",{"type":458,"children":459,"toc":932},"root",[460,477,482,616,623,695,701,837,843,926],{"type":461,"tag":462,"props":463,"children":464},"element","p",{},[465,468,475],{"type":466,"value":467},"text","实现泛型",{"type":461,"tag":469,"props":470,"children":472},"code",{"className":471},[],[473],{"type":466,"value":474},"TupleToUnion\u003CT>",{"type":466,"value":476},"，它返回元组所有值的合集。",{"type":461,"tag":462,"props":478,"children":479},{},[480],{"type":466,"value":481},"例如",{"type":461,"tag":483,"props":484,"children":488},"pre",{"className":485,"code":486,"language":487,"meta":455,"style":455},"language-ts shiki shiki-themes slack-ochin slack-ochin ayu-dark","type Arr = [\"1\", \"2\", \"3\"];\n\ntype Test = TupleToUnion\u003CArr>; // expected to be '1' | '2' | '3'\n","ts",[489],{"type":461,"tag":469,"props":490,"children":491},{"__ignoreMap":455},[492,558,568],{"type":461,"tag":493,"props":494,"children":497},"span",{"class":495,"line":496},"line",1,[498,504,510,516,522,528,534,539,543,548,553],{"type":461,"tag":493,"props":499,"children":501},{"style":500},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[502],{"type":466,"value":503},"type",{"type":461,"tag":493,"props":505,"children":507},{"style":506},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF",[508],{"type":466,"value":509}," Arr",{"type":461,"tag":493,"props":511,"children":513},{"style":512},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[514],{"type":466,"value":515}," =",{"type":461,"tag":493,"props":517,"children":519},{"style":518},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[520],{"type":466,"value":521}," [",{"type":461,"tag":493,"props":523,"children":525},{"style":524},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[526],{"type":466,"value":527},"\"1\"",{"type":461,"tag":493,"props":529,"children":531},{"style":530},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[532],{"type":466,"value":533},",",{"type":461,"tag":493,"props":535,"children":536},{"style":524},[537],{"type":466,"value":538}," \"2\"",{"type":461,"tag":493,"props":540,"children":541},{"style":530},[542],{"type":466,"value":533},{"type":461,"tag":493,"props":544,"children":545},{"style":524},[546],{"type":466,"value":547}," \"3\"",{"type":461,"tag":493,"props":549,"children":550},{"style":518},[551],{"type":466,"value":552},"]",{"type":461,"tag":493,"props":554,"children":555},{"style":530},[556],{"type":466,"value":557},";\n",{"type":461,"tag":493,"props":559,"children":561},{"class":495,"line":560},2,[562],{"type":461,"tag":493,"props":563,"children":565},{"emptyLinePlaceholder":564},true,[566],{"type":466,"value":567},"\n",{"type":461,"tag":493,"props":569,"children":571},{"class":495,"line":570},3,[572,576,581,585,590,595,600,605,610],{"type":461,"tag":493,"props":573,"children":574},{"style":500},[575],{"type":466,"value":503},{"type":461,"tag":493,"props":577,"children":578},{"style":506},[579],{"type":466,"value":580}," Test",{"type":461,"tag":493,"props":582,"children":583},{"style":512},[584],{"type":466,"value":515},{"type":461,"tag":493,"props":586,"children":587},{"style":506},[588],{"type":466,"value":589}," TupleToUnion",{"type":461,"tag":493,"props":591,"children":592},{"style":518},[593],{"type":466,"value":594},"\u003C",{"type":461,"tag":493,"props":596,"children":597},{"style":506},[598],{"type":466,"value":599},"Arr",{"type":461,"tag":493,"props":601,"children":602},{"style":518},[603],{"type":466,"value":604},">",{"type":461,"tag":493,"props":606,"children":607},{"style":530},[608],{"type":466,"value":609},";",{"type":461,"tag":493,"props":611,"children":613},{"style":612},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[614],{"type":466,"value":615}," // expected to be '1' | '2' | '3'\n",{"type":461,"tag":617,"props":618,"children":620},"h2",{"id":619},"method-1",[621],{"type":466,"value":622},"method 1",{"type":461,"tag":483,"props":624,"children":626},{"className":485,"code":625,"language":487,"meta":455,"style":455},"type TupleToUnion\u003CT extends any[]> = T[number];\n",[627],{"type":461,"tag":469,"props":628,"children":629},{"__ignoreMap":455},[630],{"type":461,"tag":493,"props":631,"children":632},{"class":495,"line":496},[633,637,641,645,650,656,662,667,672,677,682,687,691],{"type":461,"tag":493,"props":634,"children":635},{"style":500},[636],{"type":466,"value":503},{"type":461,"tag":493,"props":638,"children":639},{"style":506},[640],{"type":466,"value":589},{"type":461,"tag":493,"props":642,"children":643},{"style":518},[644],{"type":466,"value":594},{"type":461,"tag":493,"props":646,"children":647},{"style":506},[648],{"type":466,"value":649},"T",{"type":461,"tag":493,"props":651,"children":653},{"style":652},"--shiki-light:#DA5221;--shiki-default:#DA5221;--shiki-dark:#FF8F40",[654],{"type":466,"value":655}," extends",{"type":461,"tag":493,"props":657,"children":659},{"style":658},"--shiki-light:#DC3EB7;--shiki-default:#DC3EB7;--shiki-dark:#39BAE6",[660],{"type":466,"value":661}," any",{"type":461,"tag":493,"props":663,"children":664},{"style":518},[665],{"type":466,"value":666},"[]> ",{"type":461,"tag":493,"props":668,"children":669},{"style":512},[670],{"type":466,"value":671},"=",{"type":461,"tag":493,"props":673,"children":674},{"style":506},[675],{"type":466,"value":676}," T",{"type":461,"tag":493,"props":678,"children":679},{"style":518},[680],{"type":466,"value":681},"[",{"type":461,"tag":493,"props":683,"children":684},{"style":658},[685],{"type":466,"value":686},"number",{"type":461,"tag":493,"props":688,"children":689},{"style":518},[690],{"type":466,"value":552},{"type":461,"tag":493,"props":692,"children":693},{"style":530},[694],{"type":466,"value":557},{"type":461,"tag":617,"props":696,"children":698},{"id":697},"method-2",[699],{"type":466,"value":700},"method 2",{"type":461,"tag":483,"props":702,"children":704},{"className":485,"code":703,"language":487,"meta":455,"style":455},"type TupleToUnion\u003CT extends unknown[]> = T extends [infer P, ...infer R]\n  ? P | TupleToUnion\u003CR>\n  : never;\n",[705],{"type":461,"tag":469,"props":706,"children":707},{"__ignoreMap":455},[708,785,820],{"type":461,"tag":493,"props":709,"children":710},{"class":495,"line":496},[711,715,719,723,727,731,736,740,744,748,752,756,761,766,770,775,780],{"type":461,"tag":493,"props":712,"children":713},{"style":500},[714],{"type":466,"value":503},{"type":461,"tag":493,"props":716,"children":717},{"style":506},[718],{"type":466,"value":589},{"type":461,"tag":493,"props":720,"children":721},{"style":518},[722],{"type":466,"value":594},{"type":461,"tag":493,"props":724,"children":725},{"style":506},[726],{"type":466,"value":649},{"type":461,"tag":493,"props":728,"children":729},{"style":652},[730],{"type":466,"value":655},{"type":461,"tag":493,"props":732,"children":733},{"style":658},[734],{"type":466,"value":735}," unknown",{"type":461,"tag":493,"props":737,"children":738},{"style":518},[739],{"type":466,"value":666},{"type":461,"tag":493,"props":741,"children":742},{"style":512},[743],{"type":466,"value":671},{"type":461,"tag":493,"props":745,"children":746},{"style":506},[747],{"type":466,"value":676},{"type":461,"tag":493,"props":749,"children":750},{"style":652},[751],{"type":466,"value":655},{"type":461,"tag":493,"props":753,"children":754},{"style":518},[755],{"type":466,"value":521},{"type":461,"tag":493,"props":757,"children":758},{"style":512},[759],{"type":466,"value":760},"infer",{"type":461,"tag":493,"props":762,"children":763},{"style":506},[764],{"type":466,"value":765}," P",{"type":461,"tag":493,"props":767,"children":768},{"style":530},[769],{"type":466,"value":533},{"type":461,"tag":493,"props":771,"children":772},{"style":512},[773],{"type":466,"value":774}," ...infer",{"type":461,"tag":493,"props":776,"children":777},{"style":506},[778],{"type":466,"value":779}," R",{"type":461,"tag":493,"props":781,"children":782},{"style":518},[783],{"type":466,"value":784},"]\n",{"type":461,"tag":493,"props":786,"children":787},{"class":495,"line":560},[788,793,797,802,806,810,815],{"type":461,"tag":493,"props":789,"children":790},{"style":512},[791],{"type":466,"value":792},"  ?",{"type":461,"tag":493,"props":794,"children":795},{"style":506},[796],{"type":466,"value":765},{"type":461,"tag":493,"props":798,"children":799},{"style":512},[800],{"type":466,"value":801}," |",{"type":461,"tag":493,"props":803,"children":804},{"style":506},[805],{"type":466,"value":589},{"type":461,"tag":493,"props":807,"children":808},{"style":518},[809],{"type":466,"value":594},{"type":461,"tag":493,"props":811,"children":812},{"style":506},[813],{"type":466,"value":814},"R",{"type":461,"tag":493,"props":816,"children":817},{"style":518},[818],{"type":466,"value":819},">\n",{"type":461,"tag":493,"props":821,"children":822},{"class":495,"line":570},[823,828,833],{"type":461,"tag":493,"props":824,"children":825},{"style":512},[826],{"type":466,"value":827},"  :",{"type":461,"tag":493,"props":829,"children":830},{"style":658},[831],{"type":466,"value":832}," never",{"type":461,"tag":493,"props":834,"children":835},{"style":530},[836],{"type":466,"value":557},{"type":461,"tag":617,"props":838,"children":840},{"id":839},"method-3",[841],{"type":466,"value":842},"method 3",{"type":461,"tag":483,"props":844,"children":846},{"className":485,"code":845,"language":487,"meta":455,"style":455},"type TupleToUnion\u003CT> = T extends (infer P)[] ? P : never;\n",[847],{"type":461,"tag":469,"props":848,"children":849},{"__ignoreMap":455},[850],{"type":461,"tag":493,"props":851,"children":852},{"class":495,"line":496},[853,857,861,865,869,874,878,882,886,891,895,899,904,909,913,918,922],{"type":461,"tag":493,"props":854,"children":855},{"style":500},[856],{"type":466,"value":503},{"type":461,"tag":493,"props":858,"children":859},{"style":506},[860],{"type":466,"value":589},{"type":461,"tag":493,"props":862,"children":863},{"style":518},[864],{"type":466,"value":594},{"type":461,"tag":493,"props":866,"children":867},{"style":506},[868],{"type":466,"value":649},{"type":461,"tag":493,"props":870,"children":871},{"style":518},[872],{"type":466,"value":873},"> ",{"type":461,"tag":493,"props":875,"children":876},{"style":512},[877],{"type":466,"value":671},{"type":461,"tag":493,"props":879,"children":880},{"style":506},[881],{"type":466,"value":676},{"type":461,"tag":493,"props":883,"children":884},{"style":652},[885],{"type":466,"value":655},{"type":461,"tag":493,"props":887,"children":888},{"style":518},[889],{"type":466,"value":890}," (",{"type":461,"tag":493,"props":892,"children":893},{"style":512},[894],{"type":466,"value":760},{"type":461,"tag":493,"props":896,"children":897},{"style":506},[898],{"type":466,"value":765},{"type":461,"tag":493,"props":900,"children":901},{"style":518},[902],{"type":466,"value":903},")[] ",{"type":461,"tag":493,"props":905,"children":906},{"style":512},[907],{"type":466,"value":908},"?",{"type":461,"tag":493,"props":910,"children":911},{"style":506},[912],{"type":466,"value":765},{"type":461,"tag":493,"props":914,"children":915},{"style":512},[916],{"type":466,"value":917}," :",{"type":461,"tag":493,"props":919,"children":920},{"style":658},[921],{"type":466,"value":832},{"type":461,"tag":493,"props":923,"children":924},{"style":530},[925],{"type":466,"value":557},{"type":461,"tag":927,"props":928,"children":929},"style",{},[930],{"type":466,"value":931},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":455,"searchDepth":933,"depth":933,"links":934},5,[935,936,937],{"id":619,"depth":560,"text":622},{"id":697,"depth":560,"text":700},{"id":839,"depth":560,"text":842},"markdown","content:3.frontend-code-assessment:3.type-challeges:10.medium-tuple-to-union.md","content","3.frontend-code-assessment/3.type-challeges/10.medium-tuple-to-union.md","md",[944,946],{"_path":423,"title":422,"description":945},"给 xhr 添加 hook，从而实现在各个阶段打印日志",{"_path":437,"title":436,"description":947},"Pinia",1713457430902]