[{"data":1,"prerenderedAt":920},["Reactive",2],{"navigation":3,"/frontend-code-assessment/type-challeges/medium-tuple-to-union":424,"/frontend-code-assessment/type-challeges/medium-tuple-to-union-surround":915},[4,237,265,403,410],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,396],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"随机数","/frontend-code-assessment/scene/random-number",{"title":382,"_path":383},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":385,"_path":386},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":388,"_path":389},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":391,"_path":392},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":394,"_path":395},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":397,"_path":398,"children":399},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[400],{"title":401,"_path":402},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":404,"_path":405,"children":406},"项目","/pro",[407],{"title":408,"_path":409},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":411,"_path":412,"children":413},"后端语言","/backend-languages",[414],{"title":415,"_path":416,"children":417},"Python","/backend-languages/python",[418,421],{"title":419,"_path":420},"基础","/backend-languages/python/base",{"title":422,"_path":423},"函数","/backend-languages/python/function",{"_path":402,"_dir":425,"_draft":426,"_partial":426,"_locale":427,"title":401,"description":428,"body":429,"_type":910,"_id":911,"_source":912,"_file":913,"_extension":914},"type-challeges",false,"","实现泛型TupleToUnion\u003CT>，它返回元组所有值的合集。",{"type":430,"children":431,"toc":904},"root",[432,449,454,588,595,667,673,809,815,898],{"type":433,"tag":434,"props":435,"children":436},"element","p",{},[437,440,447],{"type":438,"value":439},"text","实现泛型",{"type":433,"tag":441,"props":442,"children":444},"code",{"className":443},[],[445],{"type":438,"value":446},"TupleToUnion\u003CT>",{"type":438,"value":448},"，它返回元组所有值的合集。",{"type":433,"tag":434,"props":450,"children":451},{},[452],{"type":438,"value":453},"例如",{"type":433,"tag":455,"props":456,"children":460},"pre",{"className":457,"code":458,"language":459,"meta":427,"style":427},"language-ts shiki shiki-themes slack-ochin slack-ochin ayu-dark","type Arr = [\"1\", \"2\", \"3\"];\n\ntype Test = TupleToUnion\u003CArr>; // expected to be '1' | '2' | '3'\n","ts",[461],{"type":433,"tag":441,"props":462,"children":463},{"__ignoreMap":427},[464,530,540],{"type":433,"tag":465,"props":466,"children":469},"span",{"class":467,"line":468},"line",1,[470,476,482,488,494,500,506,511,515,520,525],{"type":433,"tag":465,"props":471,"children":473},{"style":472},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[474],{"type":438,"value":475},"type",{"type":433,"tag":465,"props":477,"children":479},{"style":478},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF",[480],{"type":438,"value":481}," Arr",{"type":433,"tag":465,"props":483,"children":485},{"style":484},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[486],{"type":438,"value":487}," =",{"type":433,"tag":465,"props":489,"children":491},{"style":490},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[492],{"type":438,"value":493}," [",{"type":433,"tag":465,"props":495,"children":497},{"style":496},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[498],{"type":438,"value":499},"\"1\"",{"type":433,"tag":465,"props":501,"children":503},{"style":502},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[504],{"type":438,"value":505},",",{"type":433,"tag":465,"props":507,"children":508},{"style":496},[509],{"type":438,"value":510}," \"2\"",{"type":433,"tag":465,"props":512,"children":513},{"style":502},[514],{"type":438,"value":505},{"type":433,"tag":465,"props":516,"children":517},{"style":496},[518],{"type":438,"value":519}," \"3\"",{"type":433,"tag":465,"props":521,"children":522},{"style":490},[523],{"type":438,"value":524},"]",{"type":433,"tag":465,"props":526,"children":527},{"style":502},[528],{"type":438,"value":529},";\n",{"type":433,"tag":465,"props":531,"children":533},{"class":467,"line":532},2,[534],{"type":433,"tag":465,"props":535,"children":537},{"emptyLinePlaceholder":536},true,[538],{"type":438,"value":539},"\n",{"type":433,"tag":465,"props":541,"children":543},{"class":467,"line":542},3,[544,548,553,557,562,567,572,577,582],{"type":433,"tag":465,"props":545,"children":546},{"style":472},[547],{"type":438,"value":475},{"type":433,"tag":465,"props":549,"children":550},{"style":478},[551],{"type":438,"value":552}," Test",{"type":433,"tag":465,"props":554,"children":555},{"style":484},[556],{"type":438,"value":487},{"type":433,"tag":465,"props":558,"children":559},{"style":478},[560],{"type":438,"value":561}," TupleToUnion",{"type":433,"tag":465,"props":563,"children":564},{"style":490},[565],{"type":438,"value":566},"\u003C",{"type":433,"tag":465,"props":568,"children":569},{"style":478},[570],{"type":438,"value":571},"Arr",{"type":433,"tag":465,"props":573,"children":574},{"style":490},[575],{"type":438,"value":576},">",{"type":433,"tag":465,"props":578,"children":579},{"style":502},[580],{"type":438,"value":581},";",{"type":433,"tag":465,"props":583,"children":585},{"style":584},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[586],{"type":438,"value":587}," // expected to be '1' | '2' | '3'\n",{"type":433,"tag":589,"props":590,"children":592},"h2",{"id":591},"method-1",[593],{"type":438,"value":594},"method 1",{"type":433,"tag":455,"props":596,"children":598},{"className":457,"code":597,"language":459,"meta":427,"style":427},"type TupleToUnion\u003CT extends any[]> = T[number];\n",[599],{"type":433,"tag":441,"props":600,"children":601},{"__ignoreMap":427},[602],{"type":433,"tag":465,"props":603,"children":604},{"class":467,"line":468},[605,609,613,617,622,628,634,639,644,649,654,659,663],{"type":433,"tag":465,"props":606,"children":607},{"style":472},[608],{"type":438,"value":475},{"type":433,"tag":465,"props":610,"children":611},{"style":478},[612],{"type":438,"value":561},{"type":433,"tag":465,"props":614,"children":615},{"style":490},[616],{"type":438,"value":566},{"type":433,"tag":465,"props":618,"children":619},{"style":478},[620],{"type":438,"value":621},"T",{"type":433,"tag":465,"props":623,"children":625},{"style":624},"--shiki-light:#DA5221;--shiki-default:#DA5221;--shiki-dark:#FF8F40",[626],{"type":438,"value":627}," extends",{"type":433,"tag":465,"props":629,"children":631},{"style":630},"--shiki-light:#DC3EB7;--shiki-default:#DC3EB7;--shiki-dark:#39BAE6",[632],{"type":438,"value":633}," any",{"type":433,"tag":465,"props":635,"children":636},{"style":490},[637],{"type":438,"value":638},"[]> ",{"type":433,"tag":465,"props":640,"children":641},{"style":484},[642],{"type":438,"value":643},"=",{"type":433,"tag":465,"props":645,"children":646},{"style":478},[647],{"type":438,"value":648}," T",{"type":433,"tag":465,"props":650,"children":651},{"style":490},[652],{"type":438,"value":653},"[",{"type":433,"tag":465,"props":655,"children":656},{"style":630},[657],{"type":438,"value":658},"number",{"type":433,"tag":465,"props":660,"children":661},{"style":490},[662],{"type":438,"value":524},{"type":433,"tag":465,"props":664,"children":665},{"style":502},[666],{"type":438,"value":529},{"type":433,"tag":589,"props":668,"children":670},{"id":669},"method-2",[671],{"type":438,"value":672},"method 2",{"type":433,"tag":455,"props":674,"children":676},{"className":457,"code":675,"language":459,"meta":427,"style":427},"type TupleToUnion\u003CT extends unknown[]> = T extends [infer P, ...infer R]\n  ? P | TupleToUnion\u003CR>\n  : never;\n",[677],{"type":433,"tag":441,"props":678,"children":679},{"__ignoreMap":427},[680,757,792],{"type":433,"tag":465,"props":681,"children":682},{"class":467,"line":468},[683,687,691,695,699,703,708,712,716,720,724,728,733,738,742,747,752],{"type":433,"tag":465,"props":684,"children":685},{"style":472},[686],{"type":438,"value":475},{"type":433,"tag":465,"props":688,"children":689},{"style":478},[690],{"type":438,"value":561},{"type":433,"tag":465,"props":692,"children":693},{"style":490},[694],{"type":438,"value":566},{"type":433,"tag":465,"props":696,"children":697},{"style":478},[698],{"type":438,"value":621},{"type":433,"tag":465,"props":700,"children":701},{"style":624},[702],{"type":438,"value":627},{"type":433,"tag":465,"props":704,"children":705},{"style":630},[706],{"type":438,"value":707}," unknown",{"type":433,"tag":465,"props":709,"children":710},{"style":490},[711],{"type":438,"value":638},{"type":433,"tag":465,"props":713,"children":714},{"style":484},[715],{"type":438,"value":643},{"type":433,"tag":465,"props":717,"children":718},{"style":478},[719],{"type":438,"value":648},{"type":433,"tag":465,"props":721,"children":722},{"style":624},[723],{"type":438,"value":627},{"type":433,"tag":465,"props":725,"children":726},{"style":490},[727],{"type":438,"value":493},{"type":433,"tag":465,"props":729,"children":730},{"style":484},[731],{"type":438,"value":732},"infer",{"type":433,"tag":465,"props":734,"children":735},{"style":478},[736],{"type":438,"value":737}," P",{"type":433,"tag":465,"props":739,"children":740},{"style":502},[741],{"type":438,"value":505},{"type":433,"tag":465,"props":743,"children":744},{"style":484},[745],{"type":438,"value":746}," ...infer",{"type":433,"tag":465,"props":748,"children":749},{"style":478},[750],{"type":438,"value":751}," R",{"type":433,"tag":465,"props":753,"children":754},{"style":490},[755],{"type":438,"value":756},"]\n",{"type":433,"tag":465,"props":758,"children":759},{"class":467,"line":532},[760,765,769,774,778,782,787],{"type":433,"tag":465,"props":761,"children":762},{"style":484},[763],{"type":438,"value":764},"  ?",{"type":433,"tag":465,"props":766,"children":767},{"style":478},[768],{"type":438,"value":737},{"type":433,"tag":465,"props":770,"children":771},{"style":484},[772],{"type":438,"value":773}," |",{"type":433,"tag":465,"props":775,"children":776},{"style":478},[777],{"type":438,"value":561},{"type":433,"tag":465,"props":779,"children":780},{"style":490},[781],{"type":438,"value":566},{"type":433,"tag":465,"props":783,"children":784},{"style":478},[785],{"type":438,"value":786},"R",{"type":433,"tag":465,"props":788,"children":789},{"style":490},[790],{"type":438,"value":791},">\n",{"type":433,"tag":465,"props":793,"children":794},{"class":467,"line":542},[795,800,805],{"type":433,"tag":465,"props":796,"children":797},{"style":484},[798],{"type":438,"value":799},"  :",{"type":433,"tag":465,"props":801,"children":802},{"style":630},[803],{"type":438,"value":804}," never",{"type":433,"tag":465,"props":806,"children":807},{"style":502},[808],{"type":438,"value":529},{"type":433,"tag":589,"props":810,"children":812},{"id":811},"method-3",[813],{"type":438,"value":814},"method 3",{"type":433,"tag":455,"props":816,"children":818},{"className":457,"code":817,"language":459,"meta":427,"style":427},"type TupleToUnion\u003CT> = T extends (infer P)[] ? P : never;\n",[819],{"type":433,"tag":441,"props":820,"children":821},{"__ignoreMap":427},[822],{"type":433,"tag":465,"props":823,"children":824},{"class":467,"line":468},[825,829,833,837,841,846,850,854,858,863,867,871,876,881,885,890,894],{"type":433,"tag":465,"props":826,"children":827},{"style":472},[828],{"type":438,"value":475},{"type":433,"tag":465,"props":830,"children":831},{"style":478},[832],{"type":438,"value":561},{"type":433,"tag":465,"props":834,"children":835},{"style":490},[836],{"type":438,"value":566},{"type":433,"tag":465,"props":838,"children":839},{"style":478},[840],{"type":438,"value":621},{"type":433,"tag":465,"props":842,"children":843},{"style":490},[844],{"type":438,"value":845},"> ",{"type":433,"tag":465,"props":847,"children":848},{"style":484},[849],{"type":438,"value":643},{"type":433,"tag":465,"props":851,"children":852},{"style":478},[853],{"type":438,"value":648},{"type":433,"tag":465,"props":855,"children":856},{"style":624},[857],{"type":438,"value":627},{"type":433,"tag":465,"props":859,"children":860},{"style":490},[861],{"type":438,"value":862}," (",{"type":433,"tag":465,"props":864,"children":865},{"style":484},[866],{"type":438,"value":732},{"type":433,"tag":465,"props":868,"children":869},{"style":478},[870],{"type":438,"value":737},{"type":433,"tag":465,"props":872,"children":873},{"style":490},[874],{"type":438,"value":875},")[] ",{"type":433,"tag":465,"props":877,"children":878},{"style":484},[879],{"type":438,"value":880},"?",{"type":433,"tag":465,"props":882,"children":883},{"style":478},[884],{"type":438,"value":737},{"type":433,"tag":465,"props":886,"children":887},{"style":484},[888],{"type":438,"value":889}," :",{"type":433,"tag":465,"props":891,"children":892},{"style":630},[893],{"type":438,"value":804},{"type":433,"tag":465,"props":895,"children":896},{"style":502},[897],{"type":438,"value":529},{"type":433,"tag":899,"props":900,"children":901},"style",{},[902],{"type":438,"value":903},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":427,"searchDepth":905,"depth":905,"links":906},5,[907,908,909],{"id":591,"depth":532,"text":594},{"id":669,"depth":532,"text":672},{"id":811,"depth":532,"text":814},"markdown","content:3.frontend-code-assessment:3.type-challeges:10.medium-tuple-to-union.md","content","3.frontend-code-assessment/3.type-challeges/10.medium-tuple-to-union.md","md",[916,918],{"_path":395,"title":394,"description":917},"给 xhr 添加 hook，从而实现在各个阶段打印日志",{"_path":409,"title":408,"description":919},"Pinia",1713339879192]