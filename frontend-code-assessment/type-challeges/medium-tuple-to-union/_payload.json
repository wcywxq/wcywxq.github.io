[{"data":1,"prerenderedAt":953},["Reactive",2],{"navigation":3,"/frontend-code-assessment/type-challeges/medium-tuple-to-union":457,"/frontend-code-assessment/type-challeges/medium-tuple-to-union-surround":948},[4,260,289,434,442],{"title":5,"_path":6,"children":7,"icon":259},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":261,"_path":262,"children":263,"icon":288},"前端八股文","/frontend-endorsement",[264,275],{"title":265,"_path":266,"children":267},"构建工具","/frontend-endorsement/build-tools",[268],{"title":269,"_path":270,"children":271},"Webpack","/frontend-endorsement/build-tools/webpack",[272],{"title":273,"_path":274},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":276,"_path":277,"children":278},"Html","/frontend-endorsement/html",[279,282,285],{"title":280,"_path":281},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":283,"_path":284},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":286,"_path":287},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":290,"_path":291,"children":292,"icon":433},"前端代码考核","/frontend-code-assessment",[293,342,426],{"title":294,"_path":295,"children":296},"源码实现","/frontend-code-assessment/source",[297,322,335],{"title":298,"_path":299,"children":300},"原生 api","/frontend-code-assessment/source/native-api",[301,304,307,310,313,316,319],{"title":302,"_path":303},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":305,"_path":306},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":308,"_path":309},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":311,"_path":312},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":314,"_path":315},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":317,"_path":318},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":320,"_path":321},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":323,"_path":324,"children":325},"数组 Array","/frontend-code-assessment/source/array",[326,329,332],{"title":327,"_path":328},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":330,"_path":331},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":333,"_path":334},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":336,"_path":337,"children":338},"字符串 String","/frontend-code-assessment/source/string",[339],{"title":340,"_path":341},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":343,"_path":344,"children":345},"业务场景","/frontend-code-assessment/scene",[346,368,375,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423],{"title":347,"_path":348,"children":349},"Promise","/frontend-code-assessment/scene/promise",[350,353,356,359,362,365],{"title":351,"_path":352},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":354,"_path":355},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":357,"_path":358},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":360,"_path":361},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":363,"_path":364},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":366,"_path":367},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":369,"_path":370,"children":371},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[372],{"title":373,"_path":374},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":376,"_path":377},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":379,"_path":380},"倒计时","/frontend-code-assessment/scene/countdown",{"title":382,"_path":383},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":385,"_path":386},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":388,"_path":389},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":391,"_path":392},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":394,"_path":395},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":397,"_path":398},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":400,"_path":401},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":403,"_path":404},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":406,"_path":407},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":409,"_path":410},"随机数","/frontend-code-assessment/scene/random-number",{"title":412,"_path":413},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":415,"_path":416},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":418,"_path":419},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":421,"_path":422},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":424,"_path":425},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":427,"_path":428,"children":429},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[430],{"title":431,"_path":432},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":435,"_path":436,"children":437,"icon":441},"项目","/pro",[438],{"title":439,"_path":440},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":443,"_path":444,"children":445,"icon":456},"后端语言","/backend-languages",[446],{"title":447,"_path":448,"children":449},"Python","/backend-languages/python",[450,453],{"title":451,"_path":452},"基础","/backend-languages/python/base",{"title":454,"_path":455},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":432,"_dir":458,"_draft":459,"_partial":459,"_locale":460,"title":431,"description":461,"body":462,"_type":943,"_id":944,"_source":945,"_file":946,"_extension":947},"type-challeges",false,"","实现泛型TupleToUnion\u003CT>，它返回元组所有值的合集。",{"type":463,"children":464,"toc":937},"root",[465,482,487,621,628,700,706,842,848,931],{"type":466,"tag":467,"props":468,"children":469},"element","p",{},[470,473,480],{"type":471,"value":472},"text","实现泛型",{"type":466,"tag":474,"props":475,"children":477},"code",{"className":476},[],[478],{"type":471,"value":479},"TupleToUnion\u003CT>",{"type":471,"value":481},"，它返回元组所有值的合集。",{"type":466,"tag":467,"props":483,"children":484},{},[485],{"type":471,"value":486},"例如",{"type":466,"tag":488,"props":489,"children":493},"pre",{"className":490,"code":491,"language":492,"meta":460,"style":460},"language-ts shiki shiki-themes slack-ochin slack-ochin ayu-dark","type Arr = [\"1\", \"2\", \"3\"];\n\ntype Test = TupleToUnion\u003CArr>; // expected to be '1' | '2' | '3'\n","ts",[494],{"type":466,"tag":474,"props":495,"children":496},{"__ignoreMap":460},[497,563,573],{"type":466,"tag":498,"props":499,"children":502},"span",{"class":500,"line":501},"line",1,[503,509,515,521,527,533,539,544,548,553,558],{"type":466,"tag":498,"props":504,"children":506},{"style":505},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[507],{"type":471,"value":508},"type",{"type":466,"tag":498,"props":510,"children":512},{"style":511},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF",[513],{"type":471,"value":514}," Arr",{"type":466,"tag":498,"props":516,"children":518},{"style":517},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[519],{"type":471,"value":520}," =",{"type":466,"tag":498,"props":522,"children":524},{"style":523},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[525],{"type":471,"value":526}," [",{"type":466,"tag":498,"props":528,"children":530},{"style":529},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[531],{"type":471,"value":532},"\"1\"",{"type":466,"tag":498,"props":534,"children":536},{"style":535},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[537],{"type":471,"value":538},",",{"type":466,"tag":498,"props":540,"children":541},{"style":529},[542],{"type":471,"value":543}," \"2\"",{"type":466,"tag":498,"props":545,"children":546},{"style":535},[547],{"type":471,"value":538},{"type":466,"tag":498,"props":549,"children":550},{"style":529},[551],{"type":471,"value":552}," \"3\"",{"type":466,"tag":498,"props":554,"children":555},{"style":523},[556],{"type":471,"value":557},"]",{"type":466,"tag":498,"props":559,"children":560},{"style":535},[561],{"type":471,"value":562},";\n",{"type":466,"tag":498,"props":564,"children":566},{"class":500,"line":565},2,[567],{"type":466,"tag":498,"props":568,"children":570},{"emptyLinePlaceholder":569},true,[571],{"type":471,"value":572},"\n",{"type":466,"tag":498,"props":574,"children":576},{"class":500,"line":575},3,[577,581,586,590,595,600,605,610,615],{"type":466,"tag":498,"props":578,"children":579},{"style":505},[580],{"type":471,"value":508},{"type":466,"tag":498,"props":582,"children":583},{"style":511},[584],{"type":471,"value":585}," Test",{"type":466,"tag":498,"props":587,"children":588},{"style":517},[589],{"type":471,"value":520},{"type":466,"tag":498,"props":591,"children":592},{"style":511},[593],{"type":471,"value":594}," TupleToUnion",{"type":466,"tag":498,"props":596,"children":597},{"style":523},[598],{"type":471,"value":599},"\u003C",{"type":466,"tag":498,"props":601,"children":602},{"style":511},[603],{"type":471,"value":604},"Arr",{"type":466,"tag":498,"props":606,"children":607},{"style":523},[608],{"type":471,"value":609},">",{"type":466,"tag":498,"props":611,"children":612},{"style":535},[613],{"type":471,"value":614},";",{"type":466,"tag":498,"props":616,"children":618},{"style":617},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[619],{"type":471,"value":620}," // expected to be '1' | '2' | '3'\n",{"type":466,"tag":622,"props":623,"children":625},"h2",{"id":624},"method-1",[626],{"type":471,"value":627},"method 1",{"type":466,"tag":488,"props":629,"children":631},{"className":490,"code":630,"language":492,"meta":460,"style":460},"type TupleToUnion\u003CT extends any[]> = T[number];\n",[632],{"type":466,"tag":474,"props":633,"children":634},{"__ignoreMap":460},[635],{"type":466,"tag":498,"props":636,"children":637},{"class":500,"line":501},[638,642,646,650,655,661,667,672,677,682,687,692,696],{"type":466,"tag":498,"props":639,"children":640},{"style":505},[641],{"type":471,"value":508},{"type":466,"tag":498,"props":643,"children":644},{"style":511},[645],{"type":471,"value":594},{"type":466,"tag":498,"props":647,"children":648},{"style":523},[649],{"type":471,"value":599},{"type":466,"tag":498,"props":651,"children":652},{"style":511},[653],{"type":471,"value":654},"T",{"type":466,"tag":498,"props":656,"children":658},{"style":657},"--shiki-light:#DA5221;--shiki-default:#DA5221;--shiki-dark:#FF8F40",[659],{"type":471,"value":660}," extends",{"type":466,"tag":498,"props":662,"children":664},{"style":663},"--shiki-light:#DC3EB7;--shiki-default:#DC3EB7;--shiki-dark:#39BAE6",[665],{"type":471,"value":666}," any",{"type":466,"tag":498,"props":668,"children":669},{"style":523},[670],{"type":471,"value":671},"[]> ",{"type":466,"tag":498,"props":673,"children":674},{"style":517},[675],{"type":471,"value":676},"=",{"type":466,"tag":498,"props":678,"children":679},{"style":511},[680],{"type":471,"value":681}," T",{"type":466,"tag":498,"props":683,"children":684},{"style":523},[685],{"type":471,"value":686},"[",{"type":466,"tag":498,"props":688,"children":689},{"style":663},[690],{"type":471,"value":691},"number",{"type":466,"tag":498,"props":693,"children":694},{"style":523},[695],{"type":471,"value":557},{"type":466,"tag":498,"props":697,"children":698},{"style":535},[699],{"type":471,"value":562},{"type":466,"tag":622,"props":701,"children":703},{"id":702},"method-2",[704],{"type":471,"value":705},"method 2",{"type":466,"tag":488,"props":707,"children":709},{"className":490,"code":708,"language":492,"meta":460,"style":460},"type TupleToUnion\u003CT extends unknown[]> = T extends [infer P, ...infer R]\n  ? P | TupleToUnion\u003CR>\n  : never;\n",[710],{"type":466,"tag":474,"props":711,"children":712},{"__ignoreMap":460},[713,790,825],{"type":466,"tag":498,"props":714,"children":715},{"class":500,"line":501},[716,720,724,728,732,736,741,745,749,753,757,761,766,771,775,780,785],{"type":466,"tag":498,"props":717,"children":718},{"style":505},[719],{"type":471,"value":508},{"type":466,"tag":498,"props":721,"children":722},{"style":511},[723],{"type":471,"value":594},{"type":466,"tag":498,"props":725,"children":726},{"style":523},[727],{"type":471,"value":599},{"type":466,"tag":498,"props":729,"children":730},{"style":511},[731],{"type":471,"value":654},{"type":466,"tag":498,"props":733,"children":734},{"style":657},[735],{"type":471,"value":660},{"type":466,"tag":498,"props":737,"children":738},{"style":663},[739],{"type":471,"value":740}," unknown",{"type":466,"tag":498,"props":742,"children":743},{"style":523},[744],{"type":471,"value":671},{"type":466,"tag":498,"props":746,"children":747},{"style":517},[748],{"type":471,"value":676},{"type":466,"tag":498,"props":750,"children":751},{"style":511},[752],{"type":471,"value":681},{"type":466,"tag":498,"props":754,"children":755},{"style":657},[756],{"type":471,"value":660},{"type":466,"tag":498,"props":758,"children":759},{"style":523},[760],{"type":471,"value":526},{"type":466,"tag":498,"props":762,"children":763},{"style":517},[764],{"type":471,"value":765},"infer",{"type":466,"tag":498,"props":767,"children":768},{"style":511},[769],{"type":471,"value":770}," P",{"type":466,"tag":498,"props":772,"children":773},{"style":535},[774],{"type":471,"value":538},{"type":466,"tag":498,"props":776,"children":777},{"style":517},[778],{"type":471,"value":779}," ...infer",{"type":466,"tag":498,"props":781,"children":782},{"style":511},[783],{"type":471,"value":784}," R",{"type":466,"tag":498,"props":786,"children":787},{"style":523},[788],{"type":471,"value":789},"]\n",{"type":466,"tag":498,"props":791,"children":792},{"class":500,"line":565},[793,798,802,807,811,815,820],{"type":466,"tag":498,"props":794,"children":795},{"style":517},[796],{"type":471,"value":797},"  ?",{"type":466,"tag":498,"props":799,"children":800},{"style":511},[801],{"type":471,"value":770},{"type":466,"tag":498,"props":803,"children":804},{"style":517},[805],{"type":471,"value":806}," |",{"type":466,"tag":498,"props":808,"children":809},{"style":511},[810],{"type":471,"value":594},{"type":466,"tag":498,"props":812,"children":813},{"style":523},[814],{"type":471,"value":599},{"type":466,"tag":498,"props":816,"children":817},{"style":511},[818],{"type":471,"value":819},"R",{"type":466,"tag":498,"props":821,"children":822},{"style":523},[823],{"type":471,"value":824},">\n",{"type":466,"tag":498,"props":826,"children":827},{"class":500,"line":575},[828,833,838],{"type":466,"tag":498,"props":829,"children":830},{"style":517},[831],{"type":471,"value":832},"  :",{"type":466,"tag":498,"props":834,"children":835},{"style":663},[836],{"type":471,"value":837}," never",{"type":466,"tag":498,"props":839,"children":840},{"style":535},[841],{"type":471,"value":562},{"type":466,"tag":622,"props":843,"children":845},{"id":844},"method-3",[846],{"type":471,"value":847},"method 3",{"type":466,"tag":488,"props":849,"children":851},{"className":490,"code":850,"language":492,"meta":460,"style":460},"type TupleToUnion\u003CT> = T extends (infer P)[] ? P : never;\n",[852],{"type":466,"tag":474,"props":853,"children":854},{"__ignoreMap":460},[855],{"type":466,"tag":498,"props":856,"children":857},{"class":500,"line":501},[858,862,866,870,874,879,883,887,891,896,900,904,909,914,918,923,927],{"type":466,"tag":498,"props":859,"children":860},{"style":505},[861],{"type":471,"value":508},{"type":466,"tag":498,"props":863,"children":864},{"style":511},[865],{"type":471,"value":594},{"type":466,"tag":498,"props":867,"children":868},{"style":523},[869],{"type":471,"value":599},{"type":466,"tag":498,"props":871,"children":872},{"style":511},[873],{"type":471,"value":654},{"type":466,"tag":498,"props":875,"children":876},{"style":523},[877],{"type":471,"value":878},"> ",{"type":466,"tag":498,"props":880,"children":881},{"style":517},[882],{"type":471,"value":676},{"type":466,"tag":498,"props":884,"children":885},{"style":511},[886],{"type":471,"value":681},{"type":466,"tag":498,"props":888,"children":889},{"style":657},[890],{"type":471,"value":660},{"type":466,"tag":498,"props":892,"children":893},{"style":523},[894],{"type":471,"value":895}," (",{"type":466,"tag":498,"props":897,"children":898},{"style":517},[899],{"type":471,"value":765},{"type":466,"tag":498,"props":901,"children":902},{"style":511},[903],{"type":471,"value":770},{"type":466,"tag":498,"props":905,"children":906},{"style":523},[907],{"type":471,"value":908},")[] ",{"type":466,"tag":498,"props":910,"children":911},{"style":517},[912],{"type":471,"value":913},"?",{"type":466,"tag":498,"props":915,"children":916},{"style":511},[917],{"type":471,"value":770},{"type":466,"tag":498,"props":919,"children":920},{"style":517},[921],{"type":471,"value":922}," :",{"type":466,"tag":498,"props":924,"children":925},{"style":663},[926],{"type":471,"value":837},{"type":466,"tag":498,"props":928,"children":929},{"style":535},[930],{"type":471,"value":562},{"type":466,"tag":932,"props":933,"children":934},"style",{},[935],{"type":471,"value":936},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":460,"searchDepth":938,"depth":938,"links":939},5,[940,941,942],{"id":624,"depth":565,"text":627},{"id":702,"depth":565,"text":705},{"id":844,"depth":565,"text":847},"markdown","content:3.frontend-code-assessment:3.type-challeges:10.medium-tuple-to-union.md","content","3.frontend-code-assessment/3.type-challeges/10.medium-tuple-to-union.md","md",[949,951],{"_path":425,"title":424,"description":950},"给 xhr 添加 hook，从而实现在各个阶段打印日志",{"_path":440,"title":439,"description":952},"Pinia",1713597608950]