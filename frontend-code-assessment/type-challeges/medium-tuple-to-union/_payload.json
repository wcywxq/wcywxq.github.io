[{"data":1,"prerenderedAt":962},["Reactive",2],{"navigation":3,"/frontend-code-assessment/type-challeges/medium-tuple-to-union":466,"/frontend-code-assessment/type-challeges/medium-tuple-to-union-surround":957},[4,269,298,443,451],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"前端八股文","/frontend-endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/frontend-endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/frontend-endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/frontend-endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":442},"前端代码考核","/frontend-code-assessment",[302,351,435],{"title":303,"_path":304,"children":305},"源码实现","/frontend-code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/frontend-code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/frontend-code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/frontend-code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/frontend-code-assessment/scene",[355,377,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432],{"title":356,"_path":357,"children":358},"Promise","/frontend-code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[381],{"title":382,"_path":383},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":385,"_path":386},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":388,"_path":389},"倒计时","/frontend-code-assessment/scene/countdown",{"title":391,"_path":392},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":394,"_path":395},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":397,"_path":398},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":400,"_path":401},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":403,"_path":404},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":406,"_path":407},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":409,"_path":410},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":412,"_path":413},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":415,"_path":416},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":418,"_path":419},"随机数","/frontend-code-assessment/scene/random-number",{"title":421,"_path":422},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":424,"_path":425},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":427,"_path":428},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":430,"_path":431},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":433,"_path":434},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":436,"_path":437,"children":438},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[439],{"title":440,"_path":441},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":444,"_path":445,"children":446,"icon":450},"项目","/pro",[447],{"title":448,"_path":449},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":452,"_path":453,"children":454,"icon":465},"后端语言","/backend-languages",[455],{"title":456,"_path":457,"children":458},"Python","/backend-languages/python",[459,462],{"title":460,"_path":461},"基础","/backend-languages/python/base",{"title":463,"_path":464},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":441,"_dir":467,"_draft":468,"_partial":468,"_locale":469,"title":440,"description":470,"body":471,"_type":952,"_id":953,"_source":954,"_file":955,"_extension":956},"type-challeges",false,"","实现泛型TupleToUnion\u003CT>，它返回元组所有值的合集。",{"type":472,"children":473,"toc":946},"root",[474,491,496,630,637,709,715,851,857,940],{"type":475,"tag":476,"props":477,"children":478},"element","p",{},[479,482,489],{"type":480,"value":481},"text","实现泛型",{"type":475,"tag":483,"props":484,"children":486},"code",{"className":485},[],[487],{"type":480,"value":488},"TupleToUnion\u003CT>",{"type":480,"value":490},"，它返回元组所有值的合集。",{"type":475,"tag":476,"props":492,"children":493},{},[494],{"type":480,"value":495},"例如",{"type":475,"tag":497,"props":498,"children":502},"pre",{"className":499,"code":500,"language":501,"meta":469,"style":469},"language-ts shiki shiki-themes slack-ochin slack-ochin ayu-dark","type Arr = [\"1\", \"2\", \"3\"];\n\ntype Test = TupleToUnion\u003CArr>; // expected to be '1' | '2' | '3'\n","ts",[503],{"type":475,"tag":483,"props":504,"children":505},{"__ignoreMap":469},[506,572,582],{"type":475,"tag":507,"props":508,"children":511},"span",{"class":509,"line":510},"line",1,[512,518,524,530,536,542,548,553,557,562,567],{"type":475,"tag":507,"props":513,"children":515},{"style":514},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[516],{"type":480,"value":517},"type",{"type":475,"tag":507,"props":519,"children":521},{"style":520},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF",[522],{"type":480,"value":523}," Arr",{"type":475,"tag":507,"props":525,"children":527},{"style":526},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[528],{"type":480,"value":529}," =",{"type":475,"tag":507,"props":531,"children":533},{"style":532},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[534],{"type":480,"value":535}," [",{"type":475,"tag":507,"props":537,"children":539},{"style":538},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[540],{"type":480,"value":541},"\"1\"",{"type":475,"tag":507,"props":543,"children":545},{"style":544},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[546],{"type":480,"value":547},",",{"type":475,"tag":507,"props":549,"children":550},{"style":538},[551],{"type":480,"value":552}," \"2\"",{"type":475,"tag":507,"props":554,"children":555},{"style":544},[556],{"type":480,"value":547},{"type":475,"tag":507,"props":558,"children":559},{"style":538},[560],{"type":480,"value":561}," \"3\"",{"type":475,"tag":507,"props":563,"children":564},{"style":532},[565],{"type":480,"value":566},"]",{"type":475,"tag":507,"props":568,"children":569},{"style":544},[570],{"type":480,"value":571},";\n",{"type":475,"tag":507,"props":573,"children":575},{"class":509,"line":574},2,[576],{"type":475,"tag":507,"props":577,"children":579},{"emptyLinePlaceholder":578},true,[580],{"type":480,"value":581},"\n",{"type":475,"tag":507,"props":583,"children":585},{"class":509,"line":584},3,[586,590,595,599,604,609,614,619,624],{"type":475,"tag":507,"props":587,"children":588},{"style":514},[589],{"type":480,"value":517},{"type":475,"tag":507,"props":591,"children":592},{"style":520},[593],{"type":480,"value":594}," Test",{"type":475,"tag":507,"props":596,"children":597},{"style":526},[598],{"type":480,"value":529},{"type":475,"tag":507,"props":600,"children":601},{"style":520},[602],{"type":480,"value":603}," TupleToUnion",{"type":475,"tag":507,"props":605,"children":606},{"style":532},[607],{"type":480,"value":608},"\u003C",{"type":475,"tag":507,"props":610,"children":611},{"style":520},[612],{"type":480,"value":613},"Arr",{"type":475,"tag":507,"props":615,"children":616},{"style":532},[617],{"type":480,"value":618},">",{"type":475,"tag":507,"props":620,"children":621},{"style":544},[622],{"type":480,"value":623},";",{"type":475,"tag":507,"props":625,"children":627},{"style":626},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[628],{"type":480,"value":629}," // expected to be '1' | '2' | '3'\n",{"type":475,"tag":631,"props":632,"children":634},"h2",{"id":633},"method-1",[635],{"type":480,"value":636},"method 1",{"type":475,"tag":497,"props":638,"children":640},{"className":499,"code":639,"language":501,"meta":469,"style":469},"type TupleToUnion\u003CT extends any[]> = T[number];\n",[641],{"type":475,"tag":483,"props":642,"children":643},{"__ignoreMap":469},[644],{"type":475,"tag":507,"props":645,"children":646},{"class":509,"line":510},[647,651,655,659,664,670,676,681,686,691,696,701,705],{"type":475,"tag":507,"props":648,"children":649},{"style":514},[650],{"type":480,"value":517},{"type":475,"tag":507,"props":652,"children":653},{"style":520},[654],{"type":480,"value":603},{"type":475,"tag":507,"props":656,"children":657},{"style":532},[658],{"type":480,"value":608},{"type":475,"tag":507,"props":660,"children":661},{"style":520},[662],{"type":480,"value":663},"T",{"type":475,"tag":507,"props":665,"children":667},{"style":666},"--shiki-light:#DA5221;--shiki-default:#DA5221;--shiki-dark:#FF8F40",[668],{"type":480,"value":669}," extends",{"type":475,"tag":507,"props":671,"children":673},{"style":672},"--shiki-light:#DC3EB7;--shiki-default:#DC3EB7;--shiki-dark:#39BAE6",[674],{"type":480,"value":675}," any",{"type":475,"tag":507,"props":677,"children":678},{"style":532},[679],{"type":480,"value":680},"[]> ",{"type":475,"tag":507,"props":682,"children":683},{"style":526},[684],{"type":480,"value":685},"=",{"type":475,"tag":507,"props":687,"children":688},{"style":520},[689],{"type":480,"value":690}," T",{"type":475,"tag":507,"props":692,"children":693},{"style":532},[694],{"type":480,"value":695},"[",{"type":475,"tag":507,"props":697,"children":698},{"style":672},[699],{"type":480,"value":700},"number",{"type":475,"tag":507,"props":702,"children":703},{"style":532},[704],{"type":480,"value":566},{"type":475,"tag":507,"props":706,"children":707},{"style":544},[708],{"type":480,"value":571},{"type":475,"tag":631,"props":710,"children":712},{"id":711},"method-2",[713],{"type":480,"value":714},"method 2",{"type":475,"tag":497,"props":716,"children":718},{"className":499,"code":717,"language":501,"meta":469,"style":469},"type TupleToUnion\u003CT extends unknown[]> = T extends [infer P, ...infer R]\n  ? P | TupleToUnion\u003CR>\n  : never;\n",[719],{"type":475,"tag":483,"props":720,"children":721},{"__ignoreMap":469},[722,799,834],{"type":475,"tag":507,"props":723,"children":724},{"class":509,"line":510},[725,729,733,737,741,745,750,754,758,762,766,770,775,780,784,789,794],{"type":475,"tag":507,"props":726,"children":727},{"style":514},[728],{"type":480,"value":517},{"type":475,"tag":507,"props":730,"children":731},{"style":520},[732],{"type":480,"value":603},{"type":475,"tag":507,"props":734,"children":735},{"style":532},[736],{"type":480,"value":608},{"type":475,"tag":507,"props":738,"children":739},{"style":520},[740],{"type":480,"value":663},{"type":475,"tag":507,"props":742,"children":743},{"style":666},[744],{"type":480,"value":669},{"type":475,"tag":507,"props":746,"children":747},{"style":672},[748],{"type":480,"value":749}," unknown",{"type":475,"tag":507,"props":751,"children":752},{"style":532},[753],{"type":480,"value":680},{"type":475,"tag":507,"props":755,"children":756},{"style":526},[757],{"type":480,"value":685},{"type":475,"tag":507,"props":759,"children":760},{"style":520},[761],{"type":480,"value":690},{"type":475,"tag":507,"props":763,"children":764},{"style":666},[765],{"type":480,"value":669},{"type":475,"tag":507,"props":767,"children":768},{"style":532},[769],{"type":480,"value":535},{"type":475,"tag":507,"props":771,"children":772},{"style":526},[773],{"type":480,"value":774},"infer",{"type":475,"tag":507,"props":776,"children":777},{"style":520},[778],{"type":480,"value":779}," P",{"type":475,"tag":507,"props":781,"children":782},{"style":544},[783],{"type":480,"value":547},{"type":475,"tag":507,"props":785,"children":786},{"style":526},[787],{"type":480,"value":788}," ...infer",{"type":475,"tag":507,"props":790,"children":791},{"style":520},[792],{"type":480,"value":793}," R",{"type":475,"tag":507,"props":795,"children":796},{"style":532},[797],{"type":480,"value":798},"]\n",{"type":475,"tag":507,"props":800,"children":801},{"class":509,"line":574},[802,807,811,816,820,824,829],{"type":475,"tag":507,"props":803,"children":804},{"style":526},[805],{"type":480,"value":806},"  ?",{"type":475,"tag":507,"props":808,"children":809},{"style":520},[810],{"type":480,"value":779},{"type":475,"tag":507,"props":812,"children":813},{"style":526},[814],{"type":480,"value":815}," |",{"type":475,"tag":507,"props":817,"children":818},{"style":520},[819],{"type":480,"value":603},{"type":475,"tag":507,"props":821,"children":822},{"style":532},[823],{"type":480,"value":608},{"type":475,"tag":507,"props":825,"children":826},{"style":520},[827],{"type":480,"value":828},"R",{"type":475,"tag":507,"props":830,"children":831},{"style":532},[832],{"type":480,"value":833},">\n",{"type":475,"tag":507,"props":835,"children":836},{"class":509,"line":584},[837,842,847],{"type":475,"tag":507,"props":838,"children":839},{"style":526},[840],{"type":480,"value":841},"  :",{"type":475,"tag":507,"props":843,"children":844},{"style":672},[845],{"type":480,"value":846}," never",{"type":475,"tag":507,"props":848,"children":849},{"style":544},[850],{"type":480,"value":571},{"type":475,"tag":631,"props":852,"children":854},{"id":853},"method-3",[855],{"type":480,"value":856},"method 3",{"type":475,"tag":497,"props":858,"children":860},{"className":499,"code":859,"language":501,"meta":469,"style":469},"type TupleToUnion\u003CT> = T extends (infer P)[] ? P : never;\n",[861],{"type":475,"tag":483,"props":862,"children":863},{"__ignoreMap":469},[864],{"type":475,"tag":507,"props":865,"children":866},{"class":509,"line":510},[867,871,875,879,883,888,892,896,900,905,909,913,918,923,927,932,936],{"type":475,"tag":507,"props":868,"children":869},{"style":514},[870],{"type":480,"value":517},{"type":475,"tag":507,"props":872,"children":873},{"style":520},[874],{"type":480,"value":603},{"type":475,"tag":507,"props":876,"children":877},{"style":532},[878],{"type":480,"value":608},{"type":475,"tag":507,"props":880,"children":881},{"style":520},[882],{"type":480,"value":663},{"type":475,"tag":507,"props":884,"children":885},{"style":532},[886],{"type":480,"value":887},"> ",{"type":475,"tag":507,"props":889,"children":890},{"style":526},[891],{"type":480,"value":685},{"type":475,"tag":507,"props":893,"children":894},{"style":520},[895],{"type":480,"value":690},{"type":475,"tag":507,"props":897,"children":898},{"style":666},[899],{"type":480,"value":669},{"type":475,"tag":507,"props":901,"children":902},{"style":532},[903],{"type":480,"value":904}," (",{"type":475,"tag":507,"props":906,"children":907},{"style":526},[908],{"type":480,"value":774},{"type":475,"tag":507,"props":910,"children":911},{"style":520},[912],{"type":480,"value":779},{"type":475,"tag":507,"props":914,"children":915},{"style":532},[916],{"type":480,"value":917},")[] ",{"type":475,"tag":507,"props":919,"children":920},{"style":526},[921],{"type":480,"value":922},"?",{"type":475,"tag":507,"props":924,"children":925},{"style":520},[926],{"type":480,"value":779},{"type":475,"tag":507,"props":928,"children":929},{"style":526},[930],{"type":480,"value":931}," :",{"type":475,"tag":507,"props":933,"children":934},{"style":672},[935],{"type":480,"value":846},{"type":475,"tag":507,"props":937,"children":938},{"style":544},[939],{"type":480,"value":571},{"type":475,"tag":941,"props":942,"children":943},"style",{},[944],{"type":480,"value":945},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":469,"searchDepth":947,"depth":947,"links":948},5,[949,950,951],{"id":633,"depth":574,"text":636},{"id":711,"depth":574,"text":714},{"id":853,"depth":574,"text":856},"markdown","content:3.frontend-code-assessment:3.type-challeges:10.medium-tuple-to-union.md","content","3.frontend-code-assessment/3.type-challeges/10.medium-tuple-to-union.md","md",[958,960],{"_path":434,"title":433,"description":959},"给 xhr 添加 hook，从而实现在各个阶段打印日志",{"_path":449,"title":448,"description":961},"Pinia",1714007217756]