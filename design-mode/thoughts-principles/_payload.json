[{"data":1,"prerenderedAt":2972},["Reactive",2],{"navigation":3,"/design-mode/thoughts-principles":503,"/design-mode/thoughts-principles-surround":2969},[4,269,298,471,479,488],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":470},"代码考核","/code-assessment",[302,370,463],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":371,"_path":372,"children":373},"业务场景","/code-assessment/scene",[374,399,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460],{"title":375,"_path":376,"children":377},"Promise","/code-assessment/scene/promise",[378,381,384,387,390,393,396],{"title":379,"_path":380},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":382,"_path":383},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":385,"_path":386},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":388,"_path":389},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":391,"_path":392},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":394,"_path":395},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":397,"_path":398},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":400,"_path":401,"children":402},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[403,406],{"title":404,"_path":405},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":407,"_path":408},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":410,"_path":411},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":413,"_path":414},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":416,"_path":417},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":419,"_path":420},"倒计时","/code-assessment/scene/countdown",{"title":422,"_path":423},"日期格式化","/code-assessment/scene/date-format",{"title":425,"_path":426},"实现前端路由","/code-assessment/scene/frontend-route",{"title":428,"_path":429},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":431,"_path":432},"lodash.get","/code-assessment/scene/lodash-get",{"title":434,"_path":435},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":437,"_path":438},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":440,"_path":441},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":443,"_path":444},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":446,"_path":447},"随机数","/code-assessment/scene/random-number",{"title":449,"_path":450},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":452,"_path":453},"sku 算法实现","/code-assessment/scene/sku",{"title":455,"_path":456},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":458,"_path":459},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":461,"_path":462},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":464,"_path":465,"children":466},"Ts 类型挑战","/code-assessment/type-challeges",[467],{"title":468,"_path":469},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":472,"_path":473,"children":474,"icon":478},"项目","/project",[475],{"title":476,"_path":477},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":480,"_path":481,"children":482,"icon":487},"设计模式","/design-mode",[483,484],{"title":480,"_path":481},{"title":485,"_path":486},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":489,"_path":490,"children":491,"icon":502},"后端语言","/backend-languages",[492],{"title":493,"_path":494,"children":495},"Python","/backend-languages/python",[496,499],{"title":497,"_path":498},"基础","/backend-languages/python/base",{"title":500,"_path":501},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":486,"_dir":504,"_draft":505,"_partial":505,"_locale":506,"title":485,"description":507,"body":508,"_type":2964,"_id":2965,"_source":2966,"_file":2967,"_extension":2968},"design-mode",false,"","SOLID 是一个面向对象设计和编程中的五个基本原则的缩写，它们旨在帮助开发者设计更加灵活、可维护和可扩展的软件系统。这些原则由 Robert C. Martin 等人提出，它们包括以下五个原则：",{"type":509,"children":510,"toc":2957},"root",[511,518,548,553,559,564,702,707,721,726,853,858,863,868,873,1252,1257,1262,1454,1459,1464,1469,1474,1479,1484,1814,1819,2035,2040,2045,2050,2055,2060,2065,2269,2274,2279,2403,2408,2413,2418,2423,2650,2655,2660,2946,2951],{"type":512,"tag":513,"props":514,"children":515},"element","p",{},[516],{"type":517,"value":507},"text",{"type":512,"tag":519,"props":520,"children":521},"ul",{},[522,528,533,538,543],{"type":512,"tag":523,"props":524,"children":525},"li",{},[526],{"type":517,"value":527},"单一职责原则（Single Responsibility Principle，SRP）",{"type":512,"tag":523,"props":529,"children":530},{},[531],{"type":517,"value":532},"开放/封闭原则（Open/Closed Principle，OCP）",{"type":512,"tag":523,"props":534,"children":535},{},[536],{"type":517,"value":537},"里氏替换原则（Liskov Substitution Principle，LSP）",{"type":512,"tag":523,"props":539,"children":540},{},[541],{"type":517,"value":542},"接口隔离原则（Interface Segregation Principle，ISP）",{"type":512,"tag":523,"props":544,"children":545},{},[546],{"type":517,"value":547},"依赖反转原则（Dependency Inversion Principle，DIP）",{"type":512,"tag":513,"props":549,"children":550},{},[551],{"type":517,"value":552},"这些原则共同促使开发者创建具有高内聚、低耦合、易扩展和易维护性的软件系统。遵循这些原则有助于构建更健壮的面向对象系统，提高代码质量和可维护性。",{"type":512,"tag":554,"props":555,"children":557},"h2",{"id":556},"单一职责原则",[558],{"type":517,"value":556},{"type":512,"tag":513,"props":560,"children":561},{},[562],{"type":517,"value":563},"单一职责原则（Single Responsibility Principle，SRP）要求一个类或者模块只负责完成一个职责（或者功能）。 假设我们有一个简单的厨师类，它负责烹饪和洗碗两个职责：",{"type":512,"tag":565,"props":566,"children":570},"pre",{"className":567,"code":568,"language":569,"meta":506,"style":506},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","class Chef {\n  cookDish(dish) {\n    // 烹饪菜品的具体实现\n  }\n\n  washDishes() {\n    // 洗碗的具体实现\n  }\n}\n","js",[571],{"type":512,"tag":572,"props":573,"children":574},"code",{"__ignoreMap":506},[575,599,629,639,648,658,676,685,693],{"type":512,"tag":576,"props":577,"children":580},"span",{"class":578,"line":579},"line",1,[581,587,593],{"type":512,"tag":576,"props":582,"children":584},{"style":583},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[585],{"type":517,"value":586},"class",{"type":512,"tag":576,"props":588,"children":590},{"style":589},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[591],{"type":517,"value":592}," Chef",{"type":512,"tag":576,"props":594,"children":596},{"style":595},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[597],{"type":517,"value":598}," {\n",{"type":512,"tag":576,"props":600,"children":602},{"class":578,"line":601},2,[603,609,614,620,625],{"type":512,"tag":576,"props":604,"children":606},{"style":605},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[607],{"type":517,"value":608},"  cookDish",{"type":512,"tag":576,"props":610,"children":611},{"style":595},[612],{"type":517,"value":613},"(",{"type":512,"tag":576,"props":615,"children":617},{"style":616},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[618],{"type":517,"value":619},"dish",{"type":512,"tag":576,"props":621,"children":622},{"style":595},[623],{"type":517,"value":624},")",{"type":512,"tag":576,"props":626,"children":627},{"style":595},[628],{"type":517,"value":598},{"type":512,"tag":576,"props":630,"children":632},{"class":578,"line":631},3,[633],{"type":512,"tag":576,"props":634,"children":636},{"style":635},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[637],{"type":517,"value":638},"    // 烹饪菜品的具体实现\n",{"type":512,"tag":576,"props":640,"children":642},{"class":578,"line":641},4,[643],{"type":512,"tag":576,"props":644,"children":645},{"style":595},[646],{"type":517,"value":647},"  }\n",{"type":512,"tag":576,"props":649,"children":651},{"class":578,"line":650},5,[652],{"type":512,"tag":576,"props":653,"children":655},{"emptyLinePlaceholder":654},true,[656],{"type":517,"value":657},"\n",{"type":512,"tag":576,"props":659,"children":661},{"class":578,"line":660},6,[662,667,672],{"type":512,"tag":576,"props":663,"children":664},{"style":605},[665],{"type":517,"value":666},"  washDishes",{"type":512,"tag":576,"props":668,"children":669},{"style":595},[670],{"type":517,"value":671},"()",{"type":512,"tag":576,"props":673,"children":674},{"style":595},[675],{"type":517,"value":598},{"type":512,"tag":576,"props":677,"children":679},{"class":578,"line":678},7,[680],{"type":512,"tag":576,"props":681,"children":682},{"style":635},[683],{"type":517,"value":684},"    // 洗碗的具体实现\n",{"type":512,"tag":576,"props":686,"children":688},{"class":578,"line":687},8,[689],{"type":512,"tag":576,"props":690,"children":691},{"style":595},[692],{"type":517,"value":647},{"type":512,"tag":576,"props":694,"children":696},{"class":578,"line":695},9,[697],{"type":512,"tag":576,"props":698,"children":699},{"style":595},[700],{"type":517,"value":701},"}\n",{"type":512,"tag":513,"props":703,"children":704},{},[705],{"type":517,"value":706},"这个类违反了单一职责原则，因为它有两个职责：烹饪和洗碗。这样的设计可能导致以下问题：",{"type":512,"tag":708,"props":709,"children":710},"ol",{},[711,716],{"type":512,"tag":523,"props":712,"children":713},{},[714],{"type":517,"value":715},"如果厨师的烹饪逻辑变化，需要修改 cookDish 方法，这可能会影响洗碗的部分。",{"type":512,"tag":523,"props":717,"children":718},{},[719],{"type":517,"value":720},"如果洗碗的逻辑变化，需要修改 washDishes 方法，这可能会影响烹饪的部分。",{"type":512,"tag":513,"props":722,"children":723},{},[724],{"type":517,"value":725},"按照单一职责原则，我们应该将这两个职责分开，分别由不同的类负责：",{"type":512,"tag":565,"props":727,"children":729},{"className":567,"code":728,"language":569,"meta":506,"style":506},"class Chef {\n  cookDish(dish) {\n    // 烹饪菜品的具体实现\n  }\n}\n\nclass Dishwasher {\n  washDishes() {\n    // 洗碗的具体实现\n  }\n}\n",[730],{"type":512,"tag":572,"props":731,"children":732},{"__ignoreMap":506},[733,748,771,778,785,792,799,815,830,837,845],{"type":512,"tag":576,"props":734,"children":735},{"class":578,"line":579},[736,740,744],{"type":512,"tag":576,"props":737,"children":738},{"style":583},[739],{"type":517,"value":586},{"type":512,"tag":576,"props":741,"children":742},{"style":589},[743],{"type":517,"value":592},{"type":512,"tag":576,"props":745,"children":746},{"style":595},[747],{"type":517,"value":598},{"type":512,"tag":576,"props":749,"children":750},{"class":578,"line":601},[751,755,759,763,767],{"type":512,"tag":576,"props":752,"children":753},{"style":605},[754],{"type":517,"value":608},{"type":512,"tag":576,"props":756,"children":757},{"style":595},[758],{"type":517,"value":613},{"type":512,"tag":576,"props":760,"children":761},{"style":616},[762],{"type":517,"value":619},{"type":512,"tag":576,"props":764,"children":765},{"style":595},[766],{"type":517,"value":624},{"type":512,"tag":576,"props":768,"children":769},{"style":595},[770],{"type":517,"value":598},{"type":512,"tag":576,"props":772,"children":773},{"class":578,"line":631},[774],{"type":512,"tag":576,"props":775,"children":776},{"style":635},[777],{"type":517,"value":638},{"type":512,"tag":576,"props":779,"children":780},{"class":578,"line":641},[781],{"type":512,"tag":576,"props":782,"children":783},{"style":595},[784],{"type":517,"value":647},{"type":512,"tag":576,"props":786,"children":787},{"class":578,"line":650},[788],{"type":512,"tag":576,"props":789,"children":790},{"style":595},[791],{"type":517,"value":701},{"type":512,"tag":576,"props":793,"children":794},{"class":578,"line":660},[795],{"type":512,"tag":576,"props":796,"children":797},{"emptyLinePlaceholder":654},[798],{"type":517,"value":657},{"type":512,"tag":576,"props":800,"children":801},{"class":578,"line":678},[802,806,811],{"type":512,"tag":576,"props":803,"children":804},{"style":583},[805],{"type":517,"value":586},{"type":512,"tag":576,"props":807,"children":808},{"style":589},[809],{"type":517,"value":810}," Dishwasher",{"type":512,"tag":576,"props":812,"children":813},{"style":595},[814],{"type":517,"value":598},{"type":512,"tag":576,"props":816,"children":817},{"class":578,"line":687},[818,822,826],{"type":512,"tag":576,"props":819,"children":820},{"style":605},[821],{"type":517,"value":666},{"type":512,"tag":576,"props":823,"children":824},{"style":595},[825],{"type":517,"value":671},{"type":512,"tag":576,"props":827,"children":828},{"style":595},[829],{"type":517,"value":598},{"type":512,"tag":576,"props":831,"children":832},{"class":578,"line":695},[833],{"type":512,"tag":576,"props":834,"children":835},{"style":635},[836],{"type":517,"value":684},{"type":512,"tag":576,"props":838,"children":840},{"class":578,"line":839},10,[841],{"type":512,"tag":576,"props":842,"children":843},{"style":595},[844],{"type":517,"value":647},{"type":512,"tag":576,"props":846,"children":848},{"class":578,"line":847},11,[849],{"type":512,"tag":576,"props":850,"children":851},{"style":595},[852],{"type":517,"value":701},{"type":512,"tag":513,"props":854,"children":855},{},[856],{"type":517,"value":857},"这样，Chef 类专注于烹饪，而 Dishwasher 类专注于洗碗。每个类都有一个单一的职责，使得代码更清晰、易于理解，并且在未来的变更中更具弹性。",{"type":512,"tag":554,"props":859,"children":861},{"id":860},"开放封闭原则",[862],{"type":517,"value":860},{"type":512,"tag":513,"props":864,"children":865},{},[866],{"type":517,"value":867},"开关封闭原则（Open/Closed Principle，OCP）要求软件实体（例如类、模块、函数等）应该对扩展开放，对修改关闭。简而言之，一个模块在扩展新功能时不应该修改原有的代码，而是通过添加新的代码来实现扩展。",{"type":512,"tag":513,"props":869,"children":870},{},[871],{"type":517,"value":872},"考虑一个动物园的场景。我们有一些动物，每个动物都会发出叫声。初始设计如下：",{"type":512,"tag":565,"props":874,"children":876},{"className":567,"code":875,"language":569,"meta":506,"style":506},"class Animal {\n  constructor(name) {\n    this.name = name;\n  }\n\n  makeSound() {\n    // 默认的叫声\n    console.log(\"Some generic animal sound\");\n  }\n}\n\nclass Lion extends Animal {\n  makeSound() {\n    console.log(\"Roar!\");\n  }\n}\n\nclass Elephant extends Animal {\n  makeSound() {\n    console.log(\"Trumpet!\");\n  }\n}\n",[877],{"type":512,"tag":572,"props":878,"children":879},{"__ignoreMap":506},[880,896,921,954,961,968,984,992,1034,1041,1048,1055,1081,1097,1134,1142,1150,1158,1183,1199,1236,1244],{"type":512,"tag":576,"props":881,"children":882},{"class":578,"line":579},[883,887,892],{"type":512,"tag":576,"props":884,"children":885},{"style":583},[886],{"type":517,"value":586},{"type":512,"tag":576,"props":888,"children":889},{"style":589},[890],{"type":517,"value":891}," Animal",{"type":512,"tag":576,"props":893,"children":894},{"style":595},[895],{"type":517,"value":598},{"type":512,"tag":576,"props":897,"children":898},{"class":578,"line":601},[899,904,908,913,917],{"type":512,"tag":576,"props":900,"children":901},{"style":583},[902],{"type":517,"value":903},"  constructor",{"type":512,"tag":576,"props":905,"children":906},{"style":595},[907],{"type":517,"value":613},{"type":512,"tag":576,"props":909,"children":910},{"style":616},[911],{"type":517,"value":912},"name",{"type":512,"tag":576,"props":914,"children":915},{"style":595},[916],{"type":517,"value":624},{"type":512,"tag":576,"props":918,"children":919},{"style":595},[920],{"type":517,"value":598},{"type":512,"tag":576,"props":922,"children":923},{"class":578,"line":631},[924,930,935,939,944,949],{"type":512,"tag":576,"props":925,"children":927},{"style":926},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[928],{"type":517,"value":929},"    this",{"type":512,"tag":576,"props":931,"children":932},{"style":595},[933],{"type":517,"value":934},".",{"type":512,"tag":576,"props":936,"children":937},{"style":616},[938],{"type":517,"value":912},{"type":512,"tag":576,"props":940,"children":941},{"style":595},[942],{"type":517,"value":943}," =",{"type":512,"tag":576,"props":945,"children":946},{"style":616},[947],{"type":517,"value":948}," name",{"type":512,"tag":576,"props":950,"children":951},{"style":595},[952],{"type":517,"value":953},";\n",{"type":512,"tag":576,"props":955,"children":956},{"class":578,"line":641},[957],{"type":512,"tag":576,"props":958,"children":959},{"style":595},[960],{"type":517,"value":647},{"type":512,"tag":576,"props":962,"children":963},{"class":578,"line":650},[964],{"type":512,"tag":576,"props":965,"children":966},{"emptyLinePlaceholder":654},[967],{"type":517,"value":657},{"type":512,"tag":576,"props":969,"children":970},{"class":578,"line":660},[971,976,980],{"type":512,"tag":576,"props":972,"children":973},{"style":605},[974],{"type":517,"value":975},"  makeSound",{"type":512,"tag":576,"props":977,"children":978},{"style":595},[979],{"type":517,"value":671},{"type":512,"tag":576,"props":981,"children":982},{"style":595},[983],{"type":517,"value":598},{"type":512,"tag":576,"props":985,"children":986},{"class":578,"line":678},[987],{"type":512,"tag":576,"props":988,"children":989},{"style":635},[990],{"type":517,"value":991},"    // 默认的叫声\n",{"type":512,"tag":576,"props":993,"children":994},{"class":578,"line":687},[995,1000,1004,1009,1013,1019,1025,1029],{"type":512,"tag":576,"props":996,"children":997},{"style":616},[998],{"type":517,"value":999},"    console",{"type":512,"tag":576,"props":1001,"children":1002},{"style":595},[1003],{"type":517,"value":934},{"type":512,"tag":576,"props":1005,"children":1006},{"style":605},[1007],{"type":517,"value":1008},"log",{"type":512,"tag":576,"props":1010,"children":1011},{"style":595},[1012],{"type":517,"value":613},{"type":512,"tag":576,"props":1014,"children":1016},{"style":1015},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1017],{"type":517,"value":1018},"\"",{"type":512,"tag":576,"props":1020,"children":1022},{"style":1021},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[1023],{"type":517,"value":1024},"Some generic animal sound",{"type":512,"tag":576,"props":1026,"children":1027},{"style":1015},[1028],{"type":517,"value":1018},{"type":512,"tag":576,"props":1030,"children":1031},{"style":595},[1032],{"type":517,"value":1033},");\n",{"type":512,"tag":576,"props":1035,"children":1036},{"class":578,"line":695},[1037],{"type":512,"tag":576,"props":1038,"children":1039},{"style":595},[1040],{"type":517,"value":647},{"type":512,"tag":576,"props":1042,"children":1043},{"class":578,"line":839},[1044],{"type":512,"tag":576,"props":1045,"children":1046},{"style":595},[1047],{"type":517,"value":701},{"type":512,"tag":576,"props":1049,"children":1050},{"class":578,"line":847},[1051],{"type":512,"tag":576,"props":1052,"children":1053},{"emptyLinePlaceholder":654},[1054],{"type":517,"value":657},{"type":512,"tag":576,"props":1056,"children":1058},{"class":578,"line":1057},12,[1059,1063,1068,1073,1077],{"type":512,"tag":576,"props":1060,"children":1061},{"style":583},[1062],{"type":517,"value":586},{"type":512,"tag":576,"props":1064,"children":1065},{"style":589},[1066],{"type":517,"value":1067}," Lion",{"type":512,"tag":576,"props":1069,"children":1070},{"style":583},[1071],{"type":517,"value":1072}," extends",{"type":512,"tag":576,"props":1074,"children":1075},{"style":605},[1076],{"type":517,"value":891},{"type":512,"tag":576,"props":1078,"children":1079},{"style":595},[1080],{"type":517,"value":598},{"type":512,"tag":576,"props":1082,"children":1084},{"class":578,"line":1083},13,[1085,1089,1093],{"type":512,"tag":576,"props":1086,"children":1087},{"style":605},[1088],{"type":517,"value":975},{"type":512,"tag":576,"props":1090,"children":1091},{"style":595},[1092],{"type":517,"value":671},{"type":512,"tag":576,"props":1094,"children":1095},{"style":595},[1096],{"type":517,"value":598},{"type":512,"tag":576,"props":1098,"children":1100},{"class":578,"line":1099},14,[1101,1105,1109,1113,1117,1121,1126,1130],{"type":512,"tag":576,"props":1102,"children":1103},{"style":616},[1104],{"type":517,"value":999},{"type":512,"tag":576,"props":1106,"children":1107},{"style":595},[1108],{"type":517,"value":934},{"type":512,"tag":576,"props":1110,"children":1111},{"style":605},[1112],{"type":517,"value":1008},{"type":512,"tag":576,"props":1114,"children":1115},{"style":595},[1116],{"type":517,"value":613},{"type":512,"tag":576,"props":1118,"children":1119},{"style":1015},[1120],{"type":517,"value":1018},{"type":512,"tag":576,"props":1122,"children":1123},{"style":1021},[1124],{"type":517,"value":1125},"Roar!",{"type":512,"tag":576,"props":1127,"children":1128},{"style":1015},[1129],{"type":517,"value":1018},{"type":512,"tag":576,"props":1131,"children":1132},{"style":595},[1133],{"type":517,"value":1033},{"type":512,"tag":576,"props":1135,"children":1137},{"class":578,"line":1136},15,[1138],{"type":512,"tag":576,"props":1139,"children":1140},{"style":595},[1141],{"type":517,"value":647},{"type":512,"tag":576,"props":1143,"children":1145},{"class":578,"line":1144},16,[1146],{"type":512,"tag":576,"props":1147,"children":1148},{"style":595},[1149],{"type":517,"value":701},{"type":512,"tag":576,"props":1151,"children":1153},{"class":578,"line":1152},17,[1154],{"type":512,"tag":576,"props":1155,"children":1156},{"emptyLinePlaceholder":654},[1157],{"type":517,"value":657},{"type":512,"tag":576,"props":1159,"children":1161},{"class":578,"line":1160},18,[1162,1166,1171,1175,1179],{"type":512,"tag":576,"props":1163,"children":1164},{"style":583},[1165],{"type":517,"value":586},{"type":512,"tag":576,"props":1167,"children":1168},{"style":589},[1169],{"type":517,"value":1170}," Elephant",{"type":512,"tag":576,"props":1172,"children":1173},{"style":583},[1174],{"type":517,"value":1072},{"type":512,"tag":576,"props":1176,"children":1177},{"style":605},[1178],{"type":517,"value":891},{"type":512,"tag":576,"props":1180,"children":1181},{"style":595},[1182],{"type":517,"value":598},{"type":512,"tag":576,"props":1184,"children":1186},{"class":578,"line":1185},19,[1187,1191,1195],{"type":512,"tag":576,"props":1188,"children":1189},{"style":605},[1190],{"type":517,"value":975},{"type":512,"tag":576,"props":1192,"children":1193},{"style":595},[1194],{"type":517,"value":671},{"type":512,"tag":576,"props":1196,"children":1197},{"style":595},[1198],{"type":517,"value":598},{"type":512,"tag":576,"props":1200,"children":1202},{"class":578,"line":1201},20,[1203,1207,1211,1215,1219,1223,1228,1232],{"type":512,"tag":576,"props":1204,"children":1205},{"style":616},[1206],{"type":517,"value":999},{"type":512,"tag":576,"props":1208,"children":1209},{"style":595},[1210],{"type":517,"value":934},{"type":512,"tag":576,"props":1212,"children":1213},{"style":605},[1214],{"type":517,"value":1008},{"type":512,"tag":576,"props":1216,"children":1217},{"style":595},[1218],{"type":517,"value":613},{"type":512,"tag":576,"props":1220,"children":1221},{"style":1015},[1222],{"type":517,"value":1018},{"type":512,"tag":576,"props":1224,"children":1225},{"style":1021},[1226],{"type":517,"value":1227},"Trumpet!",{"type":512,"tag":576,"props":1229,"children":1230},{"style":1015},[1231],{"type":517,"value":1018},{"type":512,"tag":576,"props":1233,"children":1234},{"style":595},[1235],{"type":517,"value":1033},{"type":512,"tag":576,"props":1237,"children":1239},{"class":578,"line":1238},21,[1240],{"type":512,"tag":576,"props":1241,"children":1242},{"style":595},[1243],{"type":517,"value":647},{"type":512,"tag":576,"props":1245,"children":1247},{"class":578,"line":1246},22,[1248],{"type":512,"tag":576,"props":1249,"children":1250},{"style":595},[1251],{"type":517,"value":701},{"type":512,"tag":513,"props":1253,"children":1254},{},[1255],{"type":517,"value":1256},"在这个设计中，Animal 类是一个基类，而 Lion 和 Elephant 是它的子类。每个动物都有自己的叫声，通过重写 makeSound 方法来实现。",{"type":512,"tag":513,"props":1258,"children":1259},{},[1260],{"type":517,"value":1261},"现在，假设我们要添加一些新的动物，比如鹦鹉和狗，按照开放/封闭原则，我们应该扩展而不是修改现有的代码：",{"type":512,"tag":565,"props":1263,"children":1265},{"className":567,"code":1264,"language":569,"meta":506,"style":506},"class Parrot extends Animal {\n  makeSound() {\n    console.log(\"Squawk!\");\n  }\n}\n\nclass Dog extends Animal {\n  makeSound() {\n    console.log(\"Bark!\");\n  }\n}\n",[1266],{"type":512,"tag":572,"props":1267,"children":1268},{"__ignoreMap":506},[1269,1293,1308,1344,1351,1358,1365,1389,1404,1440,1447],{"type":512,"tag":576,"props":1270,"children":1271},{"class":578,"line":579},[1272,1276,1281,1285,1289],{"type":512,"tag":576,"props":1273,"children":1274},{"style":583},[1275],{"type":517,"value":586},{"type":512,"tag":576,"props":1277,"children":1278},{"style":589},[1279],{"type":517,"value":1280}," Parrot",{"type":512,"tag":576,"props":1282,"children":1283},{"style":583},[1284],{"type":517,"value":1072},{"type":512,"tag":576,"props":1286,"children":1287},{"style":605},[1288],{"type":517,"value":891},{"type":512,"tag":576,"props":1290,"children":1291},{"style":595},[1292],{"type":517,"value":598},{"type":512,"tag":576,"props":1294,"children":1295},{"class":578,"line":601},[1296,1300,1304],{"type":512,"tag":576,"props":1297,"children":1298},{"style":605},[1299],{"type":517,"value":975},{"type":512,"tag":576,"props":1301,"children":1302},{"style":595},[1303],{"type":517,"value":671},{"type":512,"tag":576,"props":1305,"children":1306},{"style":595},[1307],{"type":517,"value":598},{"type":512,"tag":576,"props":1309,"children":1310},{"class":578,"line":631},[1311,1315,1319,1323,1327,1331,1336,1340],{"type":512,"tag":576,"props":1312,"children":1313},{"style":616},[1314],{"type":517,"value":999},{"type":512,"tag":576,"props":1316,"children":1317},{"style":595},[1318],{"type":517,"value":934},{"type":512,"tag":576,"props":1320,"children":1321},{"style":605},[1322],{"type":517,"value":1008},{"type":512,"tag":576,"props":1324,"children":1325},{"style":595},[1326],{"type":517,"value":613},{"type":512,"tag":576,"props":1328,"children":1329},{"style":1015},[1330],{"type":517,"value":1018},{"type":512,"tag":576,"props":1332,"children":1333},{"style":1021},[1334],{"type":517,"value":1335},"Squawk!",{"type":512,"tag":576,"props":1337,"children":1338},{"style":1015},[1339],{"type":517,"value":1018},{"type":512,"tag":576,"props":1341,"children":1342},{"style":595},[1343],{"type":517,"value":1033},{"type":512,"tag":576,"props":1345,"children":1346},{"class":578,"line":641},[1347],{"type":512,"tag":576,"props":1348,"children":1349},{"style":595},[1350],{"type":517,"value":647},{"type":512,"tag":576,"props":1352,"children":1353},{"class":578,"line":650},[1354],{"type":512,"tag":576,"props":1355,"children":1356},{"style":595},[1357],{"type":517,"value":701},{"type":512,"tag":576,"props":1359,"children":1360},{"class":578,"line":660},[1361],{"type":512,"tag":576,"props":1362,"children":1363},{"emptyLinePlaceholder":654},[1364],{"type":517,"value":657},{"type":512,"tag":576,"props":1366,"children":1367},{"class":578,"line":678},[1368,1372,1377,1381,1385],{"type":512,"tag":576,"props":1369,"children":1370},{"style":583},[1371],{"type":517,"value":586},{"type":512,"tag":576,"props":1373,"children":1374},{"style":589},[1375],{"type":517,"value":1376}," Dog",{"type":512,"tag":576,"props":1378,"children":1379},{"style":583},[1380],{"type":517,"value":1072},{"type":512,"tag":576,"props":1382,"children":1383},{"style":605},[1384],{"type":517,"value":891},{"type":512,"tag":576,"props":1386,"children":1387},{"style":595},[1388],{"type":517,"value":598},{"type":512,"tag":576,"props":1390,"children":1391},{"class":578,"line":687},[1392,1396,1400],{"type":512,"tag":576,"props":1393,"children":1394},{"style":605},[1395],{"type":517,"value":975},{"type":512,"tag":576,"props":1397,"children":1398},{"style":595},[1399],{"type":517,"value":671},{"type":512,"tag":576,"props":1401,"children":1402},{"style":595},[1403],{"type":517,"value":598},{"type":512,"tag":576,"props":1405,"children":1406},{"class":578,"line":695},[1407,1411,1415,1419,1423,1427,1432,1436],{"type":512,"tag":576,"props":1408,"children":1409},{"style":616},[1410],{"type":517,"value":999},{"type":512,"tag":576,"props":1412,"children":1413},{"style":595},[1414],{"type":517,"value":934},{"type":512,"tag":576,"props":1416,"children":1417},{"style":605},[1418],{"type":517,"value":1008},{"type":512,"tag":576,"props":1420,"children":1421},{"style":595},[1422],{"type":517,"value":613},{"type":512,"tag":576,"props":1424,"children":1425},{"style":1015},[1426],{"type":517,"value":1018},{"type":512,"tag":576,"props":1428,"children":1429},{"style":1021},[1430],{"type":517,"value":1431},"Bark!",{"type":512,"tag":576,"props":1433,"children":1434},{"style":1015},[1435],{"type":517,"value":1018},{"type":512,"tag":576,"props":1437,"children":1438},{"style":595},[1439],{"type":517,"value":1033},{"type":512,"tag":576,"props":1441,"children":1442},{"class":578,"line":839},[1443],{"type":512,"tag":576,"props":1444,"children":1445},{"style":595},[1446],{"type":517,"value":647},{"type":512,"tag":576,"props":1448,"children":1449},{"class":578,"line":847},[1450],{"type":512,"tag":576,"props":1451,"children":1452},{"style":595},[1453],{"type":517,"value":701},{"type":512,"tag":513,"props":1455,"children":1456},{},[1457],{"type":517,"value":1458},"这样，我们通过扩展 Animal 类，而不是修改它，来添加新的功能（新的动物）。这符合开放/封闭原则，因为我们对于现有代码的修改是关闭的，我们只是通过扩展来引入新的功能。",{"type":512,"tag":513,"props":1460,"children":1461},{},[1462],{"type":517,"value":1463},"使用开放/封闭原则可以使代码更加稳定，降低对现有代码的影响，同时也更容易应对变化和扩展。",{"type":512,"tag":554,"props":1465,"children":1467},{"id":1466},"里式替换原则",[1468],{"type":517,"value":1466},{"type":512,"tag":513,"props":1470,"children":1471},{},[1472],{"type":517,"value":1473},"里氏替换原则（Liskov Substitution Principle，LSP） 是 SOLID 原则之一，它强调子类型（派生类或子类）必须能够替换掉它们的基类型（基类或父类）并出现在基类能够工作的任何地方，而不破坏程序的正确性。",{"type":512,"tag":513,"props":1475,"children":1476},{},[1477],{"type":517,"value":1478},"通俗地说，如果一个类是基类的子类，那么在任何需要基类的地方，都可以使用这个子类而不产生错误。子类应该保持基类的行为，并且可以扩展或修改基类的行为，但不应该破坏基类原有的约定。",{"type":512,"tag":513,"props":1480,"children":1481},{},[1482],{"type":517,"value":1483},"假设我们有一个表示矩形的基类 Rectangle：",{"type":512,"tag":565,"props":1485,"children":1487},{"className":567,"code":1486,"language":569,"meta":506,"style":506},"class Rectangle {\n  constructor(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n\n  setWidth(width) {\n    this.width = width;\n  }\n\n  setHeight(height) {\n    this.height = height;\n  }\n\n  getArea() {\n    return this.width * this.height;\n  }\n}\n",[1488],{"type":512,"tag":572,"props":1489,"children":1490},{"__ignoreMap":506},[1491,1507,1541,1569,1597,1604,1611,1635,1662,1669,1676,1700,1727,1734,1741,1757,1800,1807],{"type":512,"tag":576,"props":1492,"children":1493},{"class":578,"line":579},[1494,1498,1503],{"type":512,"tag":576,"props":1495,"children":1496},{"style":583},[1497],{"type":517,"value":586},{"type":512,"tag":576,"props":1499,"children":1500},{"style":589},[1501],{"type":517,"value":1502}," Rectangle",{"type":512,"tag":576,"props":1504,"children":1505},{"style":595},[1506],{"type":517,"value":598},{"type":512,"tag":576,"props":1508,"children":1509},{"class":578,"line":601},[1510,1514,1518,1523,1528,1533,1537],{"type":512,"tag":576,"props":1511,"children":1512},{"style":583},[1513],{"type":517,"value":903},{"type":512,"tag":576,"props":1515,"children":1516},{"style":595},[1517],{"type":517,"value":613},{"type":512,"tag":576,"props":1519,"children":1520},{"style":616},[1521],{"type":517,"value":1522},"width",{"type":512,"tag":576,"props":1524,"children":1525},{"style":595},[1526],{"type":517,"value":1527},",",{"type":512,"tag":576,"props":1529,"children":1530},{"style":616},[1531],{"type":517,"value":1532}," height",{"type":512,"tag":576,"props":1534,"children":1535},{"style":595},[1536],{"type":517,"value":624},{"type":512,"tag":576,"props":1538,"children":1539},{"style":595},[1540],{"type":517,"value":598},{"type":512,"tag":576,"props":1542,"children":1543},{"class":578,"line":631},[1544,1548,1552,1556,1560,1565],{"type":512,"tag":576,"props":1545,"children":1546},{"style":926},[1547],{"type":517,"value":929},{"type":512,"tag":576,"props":1549,"children":1550},{"style":595},[1551],{"type":517,"value":934},{"type":512,"tag":576,"props":1553,"children":1554},{"style":616},[1555],{"type":517,"value":1522},{"type":512,"tag":576,"props":1557,"children":1558},{"style":595},[1559],{"type":517,"value":943},{"type":512,"tag":576,"props":1561,"children":1562},{"style":616},[1563],{"type":517,"value":1564}," width",{"type":512,"tag":576,"props":1566,"children":1567},{"style":595},[1568],{"type":517,"value":953},{"type":512,"tag":576,"props":1570,"children":1571},{"class":578,"line":641},[1572,1576,1580,1585,1589,1593],{"type":512,"tag":576,"props":1573,"children":1574},{"style":926},[1575],{"type":517,"value":929},{"type":512,"tag":576,"props":1577,"children":1578},{"style":595},[1579],{"type":517,"value":934},{"type":512,"tag":576,"props":1581,"children":1582},{"style":616},[1583],{"type":517,"value":1584},"height",{"type":512,"tag":576,"props":1586,"children":1587},{"style":595},[1588],{"type":517,"value":943},{"type":512,"tag":576,"props":1590,"children":1591},{"style":616},[1592],{"type":517,"value":1532},{"type":512,"tag":576,"props":1594,"children":1595},{"style":595},[1596],{"type":517,"value":953},{"type":512,"tag":576,"props":1598,"children":1599},{"class":578,"line":650},[1600],{"type":512,"tag":576,"props":1601,"children":1602},{"style":595},[1603],{"type":517,"value":647},{"type":512,"tag":576,"props":1605,"children":1606},{"class":578,"line":660},[1607],{"type":512,"tag":576,"props":1608,"children":1609},{"emptyLinePlaceholder":654},[1610],{"type":517,"value":657},{"type":512,"tag":576,"props":1612,"children":1613},{"class":578,"line":678},[1614,1619,1623,1627,1631],{"type":512,"tag":576,"props":1615,"children":1616},{"style":605},[1617],{"type":517,"value":1618},"  setWidth",{"type":512,"tag":576,"props":1620,"children":1621},{"style":595},[1622],{"type":517,"value":613},{"type":512,"tag":576,"props":1624,"children":1625},{"style":616},[1626],{"type":517,"value":1522},{"type":512,"tag":576,"props":1628,"children":1629},{"style":595},[1630],{"type":517,"value":624},{"type":512,"tag":576,"props":1632,"children":1633},{"style":595},[1634],{"type":517,"value":598},{"type":512,"tag":576,"props":1636,"children":1637},{"class":578,"line":687},[1638,1642,1646,1650,1654,1658],{"type":512,"tag":576,"props":1639,"children":1640},{"style":926},[1641],{"type":517,"value":929},{"type":512,"tag":576,"props":1643,"children":1644},{"style":595},[1645],{"type":517,"value":934},{"type":512,"tag":576,"props":1647,"children":1648},{"style":616},[1649],{"type":517,"value":1522},{"type":512,"tag":576,"props":1651,"children":1652},{"style":595},[1653],{"type":517,"value":943},{"type":512,"tag":576,"props":1655,"children":1656},{"style":616},[1657],{"type":517,"value":1564},{"type":512,"tag":576,"props":1659,"children":1660},{"style":595},[1661],{"type":517,"value":953},{"type":512,"tag":576,"props":1663,"children":1664},{"class":578,"line":695},[1665],{"type":512,"tag":576,"props":1666,"children":1667},{"style":595},[1668],{"type":517,"value":647},{"type":512,"tag":576,"props":1670,"children":1671},{"class":578,"line":839},[1672],{"type":512,"tag":576,"props":1673,"children":1674},{"emptyLinePlaceholder":654},[1675],{"type":517,"value":657},{"type":512,"tag":576,"props":1677,"children":1678},{"class":578,"line":847},[1679,1684,1688,1692,1696],{"type":512,"tag":576,"props":1680,"children":1681},{"style":605},[1682],{"type":517,"value":1683},"  setHeight",{"type":512,"tag":576,"props":1685,"children":1686},{"style":595},[1687],{"type":517,"value":613},{"type":512,"tag":576,"props":1689,"children":1690},{"style":616},[1691],{"type":517,"value":1584},{"type":512,"tag":576,"props":1693,"children":1694},{"style":595},[1695],{"type":517,"value":624},{"type":512,"tag":576,"props":1697,"children":1698},{"style":595},[1699],{"type":517,"value":598},{"type":512,"tag":576,"props":1701,"children":1702},{"class":578,"line":1057},[1703,1707,1711,1715,1719,1723],{"type":512,"tag":576,"props":1704,"children":1705},{"style":926},[1706],{"type":517,"value":929},{"type":512,"tag":576,"props":1708,"children":1709},{"style":595},[1710],{"type":517,"value":934},{"type":512,"tag":576,"props":1712,"children":1713},{"style":616},[1714],{"type":517,"value":1584},{"type":512,"tag":576,"props":1716,"children":1717},{"style":595},[1718],{"type":517,"value":943},{"type":512,"tag":576,"props":1720,"children":1721},{"style":616},[1722],{"type":517,"value":1532},{"type":512,"tag":576,"props":1724,"children":1725},{"style":595},[1726],{"type":517,"value":953},{"type":512,"tag":576,"props":1728,"children":1729},{"class":578,"line":1083},[1730],{"type":512,"tag":576,"props":1731,"children":1732},{"style":595},[1733],{"type":517,"value":647},{"type":512,"tag":576,"props":1735,"children":1736},{"class":578,"line":1099},[1737],{"type":512,"tag":576,"props":1738,"children":1739},{"emptyLinePlaceholder":654},[1740],{"type":517,"value":657},{"type":512,"tag":576,"props":1742,"children":1743},{"class":578,"line":1136},[1744,1749,1753],{"type":512,"tag":576,"props":1745,"children":1746},{"style":605},[1747],{"type":517,"value":1748},"  getArea",{"type":512,"tag":576,"props":1750,"children":1751},{"style":595},[1752],{"type":517,"value":671},{"type":512,"tag":576,"props":1754,"children":1755},{"style":595},[1756],{"type":517,"value":598},{"type":512,"tag":576,"props":1758,"children":1759},{"class":578,"line":1144},[1760,1766,1771,1775,1779,1784,1788,1792,1796],{"type":512,"tag":576,"props":1761,"children":1763},{"style":1762},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[1764],{"type":517,"value":1765},"    return",{"type":512,"tag":576,"props":1767,"children":1768},{"style":926},[1769],{"type":517,"value":1770}," this",{"type":512,"tag":576,"props":1772,"children":1773},{"style":595},[1774],{"type":517,"value":934},{"type":512,"tag":576,"props":1776,"children":1777},{"style":616},[1778],{"type":517,"value":1522},{"type":512,"tag":576,"props":1780,"children":1781},{"style":583},[1782],{"type":517,"value":1783}," *",{"type":512,"tag":576,"props":1785,"children":1786},{"style":926},[1787],{"type":517,"value":1770},{"type":512,"tag":576,"props":1789,"children":1790},{"style":595},[1791],{"type":517,"value":934},{"type":512,"tag":576,"props":1793,"children":1794},{"style":616},[1795],{"type":517,"value":1584},{"type":512,"tag":576,"props":1797,"children":1798},{"style":595},[1799],{"type":517,"value":953},{"type":512,"tag":576,"props":1801,"children":1802},{"class":578,"line":1152},[1803],{"type":512,"tag":576,"props":1804,"children":1805},{"style":595},[1806],{"type":517,"value":647},{"type":512,"tag":576,"props":1808,"children":1809},{"class":578,"line":1160},[1810],{"type":512,"tag":576,"props":1811,"children":1812},{"style":595},[1813],{"type":517,"value":701},{"type":512,"tag":513,"props":1815,"children":1816},{},[1817],{"type":517,"value":1818},"现在，我们创建了一个子类 Square 继承自 Rectangle，表示正方形。在正方形中，宽和高应该始终相等。",{"type":512,"tag":565,"props":1820,"children":1822},{"className":567,"code":1821,"language":569,"meta":506,"style":506},"class Square extends Rectangle {\n  setWidth(width) {\n    super.setWidth(width);\n    super.setHeight(width);\n  }\n\n  setHeight(height) {\n    super.setWidth(height);\n    super.setHeight(height);\n  }\n}\n",[1823],{"type":512,"tag":572,"props":1824,"children":1825},{"__ignoreMap":506},[1826,1850,1873,1902,1930,1937,1944,1967,1994,2021,2028],{"type":512,"tag":576,"props":1827,"children":1828},{"class":578,"line":579},[1829,1833,1838,1842,1846],{"type":512,"tag":576,"props":1830,"children":1831},{"style":583},[1832],{"type":517,"value":586},{"type":512,"tag":576,"props":1834,"children":1835},{"style":589},[1836],{"type":517,"value":1837}," Square",{"type":512,"tag":576,"props":1839,"children":1840},{"style":583},[1841],{"type":517,"value":1072},{"type":512,"tag":576,"props":1843,"children":1844},{"style":605},[1845],{"type":517,"value":1502},{"type":512,"tag":576,"props":1847,"children":1848},{"style":595},[1849],{"type":517,"value":598},{"type":512,"tag":576,"props":1851,"children":1852},{"class":578,"line":601},[1853,1857,1861,1865,1869],{"type":512,"tag":576,"props":1854,"children":1855},{"style":605},[1856],{"type":517,"value":1618},{"type":512,"tag":576,"props":1858,"children":1859},{"style":595},[1860],{"type":517,"value":613},{"type":512,"tag":576,"props":1862,"children":1863},{"style":616},[1864],{"type":517,"value":1522},{"type":512,"tag":576,"props":1866,"children":1867},{"style":595},[1868],{"type":517,"value":624},{"type":512,"tag":576,"props":1870,"children":1871},{"style":595},[1872],{"type":517,"value":598},{"type":512,"tag":576,"props":1874,"children":1875},{"class":578,"line":631},[1876,1881,1885,1890,1894,1898],{"type":512,"tag":576,"props":1877,"children":1878},{"style":926},[1879],{"type":517,"value":1880},"    super",{"type":512,"tag":576,"props":1882,"children":1883},{"style":595},[1884],{"type":517,"value":934},{"type":512,"tag":576,"props":1886,"children":1887},{"style":605},[1888],{"type":517,"value":1889},"setWidth",{"type":512,"tag":576,"props":1891,"children":1892},{"style":595},[1893],{"type":517,"value":613},{"type":512,"tag":576,"props":1895,"children":1896},{"style":616},[1897],{"type":517,"value":1522},{"type":512,"tag":576,"props":1899,"children":1900},{"style":595},[1901],{"type":517,"value":1033},{"type":512,"tag":576,"props":1903,"children":1904},{"class":578,"line":641},[1905,1909,1913,1918,1922,1926],{"type":512,"tag":576,"props":1906,"children":1907},{"style":926},[1908],{"type":517,"value":1880},{"type":512,"tag":576,"props":1910,"children":1911},{"style":595},[1912],{"type":517,"value":934},{"type":512,"tag":576,"props":1914,"children":1915},{"style":605},[1916],{"type":517,"value":1917},"setHeight",{"type":512,"tag":576,"props":1919,"children":1920},{"style":595},[1921],{"type":517,"value":613},{"type":512,"tag":576,"props":1923,"children":1924},{"style":616},[1925],{"type":517,"value":1522},{"type":512,"tag":576,"props":1927,"children":1928},{"style":595},[1929],{"type":517,"value":1033},{"type":512,"tag":576,"props":1931,"children":1932},{"class":578,"line":650},[1933],{"type":512,"tag":576,"props":1934,"children":1935},{"style":595},[1936],{"type":517,"value":647},{"type":512,"tag":576,"props":1938,"children":1939},{"class":578,"line":660},[1940],{"type":512,"tag":576,"props":1941,"children":1942},{"emptyLinePlaceholder":654},[1943],{"type":517,"value":657},{"type":512,"tag":576,"props":1945,"children":1946},{"class":578,"line":678},[1947,1951,1955,1959,1963],{"type":512,"tag":576,"props":1948,"children":1949},{"style":605},[1950],{"type":517,"value":1683},{"type":512,"tag":576,"props":1952,"children":1953},{"style":595},[1954],{"type":517,"value":613},{"type":512,"tag":576,"props":1956,"children":1957},{"style":616},[1958],{"type":517,"value":1584},{"type":512,"tag":576,"props":1960,"children":1961},{"style":595},[1962],{"type":517,"value":624},{"type":512,"tag":576,"props":1964,"children":1965},{"style":595},[1966],{"type":517,"value":598},{"type":512,"tag":576,"props":1968,"children":1969},{"class":578,"line":687},[1970,1974,1978,1982,1986,1990],{"type":512,"tag":576,"props":1971,"children":1972},{"style":926},[1973],{"type":517,"value":1880},{"type":512,"tag":576,"props":1975,"children":1976},{"style":595},[1977],{"type":517,"value":934},{"type":512,"tag":576,"props":1979,"children":1980},{"style":605},[1981],{"type":517,"value":1889},{"type":512,"tag":576,"props":1983,"children":1984},{"style":595},[1985],{"type":517,"value":613},{"type":512,"tag":576,"props":1987,"children":1988},{"style":616},[1989],{"type":517,"value":1584},{"type":512,"tag":576,"props":1991,"children":1992},{"style":595},[1993],{"type":517,"value":1033},{"type":512,"tag":576,"props":1995,"children":1996},{"class":578,"line":695},[1997,2001,2005,2009,2013,2017],{"type":512,"tag":576,"props":1998,"children":1999},{"style":926},[2000],{"type":517,"value":1880},{"type":512,"tag":576,"props":2002,"children":2003},{"style":595},[2004],{"type":517,"value":934},{"type":512,"tag":576,"props":2006,"children":2007},{"style":605},[2008],{"type":517,"value":1917},{"type":512,"tag":576,"props":2010,"children":2011},{"style":595},[2012],{"type":517,"value":613},{"type":512,"tag":576,"props":2014,"children":2015},{"style":616},[2016],{"type":517,"value":1584},{"type":512,"tag":576,"props":2018,"children":2019},{"style":595},[2020],{"type":517,"value":1033},{"type":512,"tag":576,"props":2022,"children":2023},{"class":578,"line":839},[2024],{"type":512,"tag":576,"props":2025,"children":2026},{"style":595},[2027],{"type":517,"value":647},{"type":512,"tag":576,"props":2029,"children":2030},{"class":578,"line":847},[2031],{"type":512,"tag":576,"props":2032,"children":2033},{"style":595},[2034],{"type":517,"value":701},{"type":512,"tag":513,"props":2036,"children":2037},{},[2038],{"type":517,"value":2039},"这里的问题是，Square 子类在修改宽度或高度时，通过覆写 setWidth 和 setHeight 方法，强制宽和高相等，这与基类的行为不一致。如果在需要 Rectangle 的地方使用了 Square，可能会导致程序逻辑错误。",{"type":512,"tag":513,"props":2041,"children":2042},{},[2043],{"type":517,"value":2044},"这违反了里氏替换原则，因为子类修改了父类的预期行为。为了符合里氏替换原则，可能需要重新设计类的继承结构，或者使用更精确的命名来表达实际意图。",{"type":512,"tag":554,"props":2046,"children":2048},{"id":2047},"接口隔离原则",[2049],{"type":517,"value":2047},{"type":512,"tag":513,"props":2051,"children":2052},{},[2053],{"type":517,"value":2054},"接口隔离原则（Interface Segregation Principle，ISP） 是 SOLID 原则之一，它强调一个类不应该被强迫实现它不需要的接口。简而言之，一个类对另一个类的依赖应该建立在最小的接口上。",{"type":512,"tag":513,"props":2056,"children":2057},{},[2058],{"type":517,"value":2059},"在通俗的语言中，接口隔离原则告诉我们不应该让一个类依赖它不需要的接口，否则会导致类需要实现一些它根本不需要的方法。",{"type":512,"tag":513,"props":2061,"children":2062},{},[2063],{"type":517,"value":2064},"举例说明，假设我们有一个动物园的系统，其中有两种动物，一种会飞，一种会游泳：",{"type":512,"tag":565,"props":2066,"children":2068},{"className":567,"code":2067,"language":569,"meta":506,"style":506},"// 不遵循接口隔离原则的设计\nclass Bird {\n  fly() {\n    // 实现飞行逻辑\n  }\n\n  swim() {\n    // 这是一个鸟类不需要的方法，违反接口隔离原则\n  }\n}\n\nclass Fish {\n  swim() {\n    // 实现游泳逻辑\n  }\n\n  fly() {\n    // 这是一个鱼类不需要的方法，违反接口隔离原则\n  }\n}\n",[2069],{"type":512,"tag":572,"props":2070,"children":2071},{"__ignoreMap":506},[2072,2080,2096,2112,2120,2127,2134,2150,2158,2165,2172,2179,2195,2210,2218,2225,2232,2247,2255,2262],{"type":512,"tag":576,"props":2073,"children":2074},{"class":578,"line":579},[2075],{"type":512,"tag":576,"props":2076,"children":2077},{"style":635},[2078],{"type":517,"value":2079},"// 不遵循接口隔离原则的设计\n",{"type":512,"tag":576,"props":2081,"children":2082},{"class":578,"line":601},[2083,2087,2092],{"type":512,"tag":576,"props":2084,"children":2085},{"style":583},[2086],{"type":517,"value":586},{"type":512,"tag":576,"props":2088,"children":2089},{"style":589},[2090],{"type":517,"value":2091}," Bird",{"type":512,"tag":576,"props":2093,"children":2094},{"style":595},[2095],{"type":517,"value":598},{"type":512,"tag":576,"props":2097,"children":2098},{"class":578,"line":631},[2099,2104,2108],{"type":512,"tag":576,"props":2100,"children":2101},{"style":605},[2102],{"type":517,"value":2103},"  fly",{"type":512,"tag":576,"props":2105,"children":2106},{"style":595},[2107],{"type":517,"value":671},{"type":512,"tag":576,"props":2109,"children":2110},{"style":595},[2111],{"type":517,"value":598},{"type":512,"tag":576,"props":2113,"children":2114},{"class":578,"line":641},[2115],{"type":512,"tag":576,"props":2116,"children":2117},{"style":635},[2118],{"type":517,"value":2119},"    // 实现飞行逻辑\n",{"type":512,"tag":576,"props":2121,"children":2122},{"class":578,"line":650},[2123],{"type":512,"tag":576,"props":2124,"children":2125},{"style":595},[2126],{"type":517,"value":647},{"type":512,"tag":576,"props":2128,"children":2129},{"class":578,"line":660},[2130],{"type":512,"tag":576,"props":2131,"children":2132},{"emptyLinePlaceholder":654},[2133],{"type":517,"value":657},{"type":512,"tag":576,"props":2135,"children":2136},{"class":578,"line":678},[2137,2142,2146],{"type":512,"tag":576,"props":2138,"children":2139},{"style":605},[2140],{"type":517,"value":2141},"  swim",{"type":512,"tag":576,"props":2143,"children":2144},{"style":595},[2145],{"type":517,"value":671},{"type":512,"tag":576,"props":2147,"children":2148},{"style":595},[2149],{"type":517,"value":598},{"type":512,"tag":576,"props":2151,"children":2152},{"class":578,"line":687},[2153],{"type":512,"tag":576,"props":2154,"children":2155},{"style":635},[2156],{"type":517,"value":2157},"    // 这是一个鸟类不需要的方法，违反接口隔离原则\n",{"type":512,"tag":576,"props":2159,"children":2160},{"class":578,"line":695},[2161],{"type":512,"tag":576,"props":2162,"children":2163},{"style":595},[2164],{"type":517,"value":647},{"type":512,"tag":576,"props":2166,"children":2167},{"class":578,"line":839},[2168],{"type":512,"tag":576,"props":2169,"children":2170},{"style":595},[2171],{"type":517,"value":701},{"type":512,"tag":576,"props":2173,"children":2174},{"class":578,"line":847},[2175],{"type":512,"tag":576,"props":2176,"children":2177},{"emptyLinePlaceholder":654},[2178],{"type":517,"value":657},{"type":512,"tag":576,"props":2180,"children":2181},{"class":578,"line":1057},[2182,2186,2191],{"type":512,"tag":576,"props":2183,"children":2184},{"style":583},[2185],{"type":517,"value":586},{"type":512,"tag":576,"props":2187,"children":2188},{"style":589},[2189],{"type":517,"value":2190}," Fish",{"type":512,"tag":576,"props":2192,"children":2193},{"style":595},[2194],{"type":517,"value":598},{"type":512,"tag":576,"props":2196,"children":2197},{"class":578,"line":1083},[2198,2202,2206],{"type":512,"tag":576,"props":2199,"children":2200},{"style":605},[2201],{"type":517,"value":2141},{"type":512,"tag":576,"props":2203,"children":2204},{"style":595},[2205],{"type":517,"value":671},{"type":512,"tag":576,"props":2207,"children":2208},{"style":595},[2209],{"type":517,"value":598},{"type":512,"tag":576,"props":2211,"children":2212},{"class":578,"line":1099},[2213],{"type":512,"tag":576,"props":2214,"children":2215},{"style":635},[2216],{"type":517,"value":2217},"    // 实现游泳逻辑\n",{"type":512,"tag":576,"props":2219,"children":2220},{"class":578,"line":1136},[2221],{"type":512,"tag":576,"props":2222,"children":2223},{"style":595},[2224],{"type":517,"value":647},{"type":512,"tag":576,"props":2226,"children":2227},{"class":578,"line":1144},[2228],{"type":512,"tag":576,"props":2229,"children":2230},{"emptyLinePlaceholder":654},[2231],{"type":517,"value":657},{"type":512,"tag":576,"props":2233,"children":2234},{"class":578,"line":1152},[2235,2239,2243],{"type":512,"tag":576,"props":2236,"children":2237},{"style":605},[2238],{"type":517,"value":2103},{"type":512,"tag":576,"props":2240,"children":2241},{"style":595},[2242],{"type":517,"value":671},{"type":512,"tag":576,"props":2244,"children":2245},{"style":595},[2246],{"type":517,"value":598},{"type":512,"tag":576,"props":2248,"children":2249},{"class":578,"line":1160},[2250],{"type":512,"tag":576,"props":2251,"children":2252},{"style":635},[2253],{"type":517,"value":2254},"    // 这是一个鱼类不需要的方法，违反接口隔离原则\n",{"type":512,"tag":576,"props":2256,"children":2257},{"class":578,"line":1185},[2258],{"type":512,"tag":576,"props":2259,"children":2260},{"style":595},[2261],{"type":517,"value":647},{"type":512,"tag":576,"props":2263,"children":2264},{"class":578,"line":1201},[2265],{"type":512,"tag":576,"props":2266,"children":2267},{"style":595},[2268],{"type":517,"value":701},{"type":512,"tag":513,"props":2270,"children":2271},{},[2272],{"type":517,"value":2273},"在这个例子中，Bird 类实现了 fly 和 swim 两个方法，而 Fish 类也实现了 swim 和 fly 两个方法。这违反了接口隔离原则，因为每个类都被迫实现了它们不需要的方法。",{"type":512,"tag":513,"props":2275,"children":2276},{},[2277],{"type":517,"value":2278},"为了符合接口隔离原则，我们可以将接口拆分成更小的部分，让每个类只实现它们需要的方法：",{"type":512,"tag":565,"props":2280,"children":2282},{"className":567,"code":2281,"language":569,"meta":506,"style":506},"// 遵循接口隔离原则的设计\nclass Bird {\n  fly() {\n    // 实现飞行逻辑\n  }\n}\n\nclass Fish {\n  swim() {\n    // 实现游泳逻辑\n  }\n}\n",[2283],{"type":512,"tag":572,"props":2284,"children":2285},{"__ignoreMap":506},[2286,2294,2309,2324,2331,2338,2345,2352,2367,2382,2389,2396],{"type":512,"tag":576,"props":2287,"children":2288},{"class":578,"line":579},[2289],{"type":512,"tag":576,"props":2290,"children":2291},{"style":635},[2292],{"type":517,"value":2293},"// 遵循接口隔离原则的设计\n",{"type":512,"tag":576,"props":2295,"children":2296},{"class":578,"line":601},[2297,2301,2305],{"type":512,"tag":576,"props":2298,"children":2299},{"style":583},[2300],{"type":517,"value":586},{"type":512,"tag":576,"props":2302,"children":2303},{"style":589},[2304],{"type":517,"value":2091},{"type":512,"tag":576,"props":2306,"children":2307},{"style":595},[2308],{"type":517,"value":598},{"type":512,"tag":576,"props":2310,"children":2311},{"class":578,"line":631},[2312,2316,2320],{"type":512,"tag":576,"props":2313,"children":2314},{"style":605},[2315],{"type":517,"value":2103},{"type":512,"tag":576,"props":2317,"children":2318},{"style":595},[2319],{"type":517,"value":671},{"type":512,"tag":576,"props":2321,"children":2322},{"style":595},[2323],{"type":517,"value":598},{"type":512,"tag":576,"props":2325,"children":2326},{"class":578,"line":641},[2327],{"type":512,"tag":576,"props":2328,"children":2329},{"style":635},[2330],{"type":517,"value":2119},{"type":512,"tag":576,"props":2332,"children":2333},{"class":578,"line":650},[2334],{"type":512,"tag":576,"props":2335,"children":2336},{"style":595},[2337],{"type":517,"value":647},{"type":512,"tag":576,"props":2339,"children":2340},{"class":578,"line":660},[2341],{"type":512,"tag":576,"props":2342,"children":2343},{"style":595},[2344],{"type":517,"value":701},{"type":512,"tag":576,"props":2346,"children":2347},{"class":578,"line":678},[2348],{"type":512,"tag":576,"props":2349,"children":2350},{"emptyLinePlaceholder":654},[2351],{"type":517,"value":657},{"type":512,"tag":576,"props":2353,"children":2354},{"class":578,"line":687},[2355,2359,2363],{"type":512,"tag":576,"props":2356,"children":2357},{"style":583},[2358],{"type":517,"value":586},{"type":512,"tag":576,"props":2360,"children":2361},{"style":589},[2362],{"type":517,"value":2190},{"type":512,"tag":576,"props":2364,"children":2365},{"style":595},[2366],{"type":517,"value":598},{"type":512,"tag":576,"props":2368,"children":2369},{"class":578,"line":695},[2370,2374,2378],{"type":512,"tag":576,"props":2371,"children":2372},{"style":605},[2373],{"type":517,"value":2141},{"type":512,"tag":576,"props":2375,"children":2376},{"style":595},[2377],{"type":517,"value":671},{"type":512,"tag":576,"props":2379,"children":2380},{"style":595},[2381],{"type":517,"value":598},{"type":512,"tag":576,"props":2383,"children":2384},{"class":578,"line":839},[2385],{"type":512,"tag":576,"props":2386,"children":2387},{"style":635},[2388],{"type":517,"value":2217},{"type":512,"tag":576,"props":2390,"children":2391},{"class":578,"line":847},[2392],{"type":512,"tag":576,"props":2393,"children":2394},{"style":595},[2395],{"type":517,"value":647},{"type":512,"tag":576,"props":2397,"children":2398},{"class":578,"line":1057},[2399],{"type":512,"tag":576,"props":2400,"children":2401},{"style":595},[2402],{"type":517,"value":701},{"type":512,"tag":513,"props":2404,"children":2405},{},[2406],{"type":517,"value":2407},"这样，每个类都只依赖于它们需要的接口，不再强迫实现不必要的方法。接口隔离原则的目标是使接口更具体，更贴近类的实际需求，从而提高系统的灵活性和可维护性。",{"type":512,"tag":554,"props":2409,"children":2411},{"id":2410},"依赖反转原则",[2412],{"type":517,"value":2410},{"type":512,"tag":513,"props":2414,"children":2415},{},[2416],{"type":517,"value":2417},"依赖反转原则（Dependency Inversion Principle，DIP） 是 SOLID 原则之一，它强调高层模块不应该依赖于低层模块，而两者都应该依赖于抽象。抽象不应该依赖于细节，细节应该依赖于抽象。简而言之，依赖反转原则倡导通过抽象来解耦高层和低层模块之间的依赖关系。",{"type":512,"tag":513,"props":2419,"children":2420},{},[2421],{"type":517,"value":2422},"举例说明，考虑一个简单的报告生成系统，有一个高层模块 ReportGenerator 负责生成报告：",{"type":512,"tag":565,"props":2424,"children":2426},{"className":567,"code":2425,"language":569,"meta":506,"style":506},"// 不遵循依赖反转原则的设计\nclass ReportGenerator {\n  constructor() {\n    this.pdfGenerator = new PDFGenerator(); // 依赖于具体的 PDF 生成器\n  }\n\n  generateReport() {\n    // 生成报告的逻辑\n    this.pdfGenerator.generatePDF();\n  }\n}\n\nclass PDFGenerator {\n  generatePDF() {\n    // 具体的 PDF 生成逻辑\n  }\n}\n",[2427],{"type":512,"tag":572,"props":2428,"children":2429},{"__ignoreMap":506},[2430,2438,2454,2469,2509,2516,2523,2539,2547,2576,2583,2590,2597,2612,2628,2636,2643],{"type":512,"tag":576,"props":2431,"children":2432},{"class":578,"line":579},[2433],{"type":512,"tag":576,"props":2434,"children":2435},{"style":635},[2436],{"type":517,"value":2437},"// 不遵循依赖反转原则的设计\n",{"type":512,"tag":576,"props":2439,"children":2440},{"class":578,"line":601},[2441,2445,2450],{"type":512,"tag":576,"props":2442,"children":2443},{"style":583},[2444],{"type":517,"value":586},{"type":512,"tag":576,"props":2446,"children":2447},{"style":589},[2448],{"type":517,"value":2449}," ReportGenerator",{"type":512,"tag":576,"props":2451,"children":2452},{"style":595},[2453],{"type":517,"value":598},{"type":512,"tag":576,"props":2455,"children":2456},{"class":578,"line":631},[2457,2461,2465],{"type":512,"tag":576,"props":2458,"children":2459},{"style":583},[2460],{"type":517,"value":903},{"type":512,"tag":576,"props":2462,"children":2463},{"style":595},[2464],{"type":517,"value":671},{"type":512,"tag":576,"props":2466,"children":2467},{"style":595},[2468],{"type":517,"value":598},{"type":512,"tag":576,"props":2470,"children":2471},{"class":578,"line":641},[2472,2476,2480,2485,2489,2494,2499,2504],{"type":512,"tag":576,"props":2473,"children":2474},{"style":926},[2475],{"type":517,"value":929},{"type":512,"tag":576,"props":2477,"children":2478},{"style":595},[2479],{"type":517,"value":934},{"type":512,"tag":576,"props":2481,"children":2482},{"style":616},[2483],{"type":517,"value":2484},"pdfGenerator",{"type":512,"tag":576,"props":2486,"children":2487},{"style":595},[2488],{"type":517,"value":943},{"type":512,"tag":576,"props":2490,"children":2491},{"style":583},[2492],{"type":517,"value":2493}," new",{"type":512,"tag":576,"props":2495,"children":2496},{"style":605},[2497],{"type":517,"value":2498}," PDFGenerator",{"type":512,"tag":576,"props":2500,"children":2501},{"style":595},[2502],{"type":517,"value":2503},"();",{"type":512,"tag":576,"props":2505,"children":2506},{"style":635},[2507],{"type":517,"value":2508}," // 依赖于具体的 PDF 生成器\n",{"type":512,"tag":576,"props":2510,"children":2511},{"class":578,"line":650},[2512],{"type":512,"tag":576,"props":2513,"children":2514},{"style":595},[2515],{"type":517,"value":647},{"type":512,"tag":576,"props":2517,"children":2518},{"class":578,"line":660},[2519],{"type":512,"tag":576,"props":2520,"children":2521},{"emptyLinePlaceholder":654},[2522],{"type":517,"value":657},{"type":512,"tag":576,"props":2524,"children":2525},{"class":578,"line":678},[2526,2531,2535],{"type":512,"tag":576,"props":2527,"children":2528},{"style":605},[2529],{"type":517,"value":2530},"  generateReport",{"type":512,"tag":576,"props":2532,"children":2533},{"style":595},[2534],{"type":517,"value":671},{"type":512,"tag":576,"props":2536,"children":2537},{"style":595},[2538],{"type":517,"value":598},{"type":512,"tag":576,"props":2540,"children":2541},{"class":578,"line":687},[2542],{"type":512,"tag":576,"props":2543,"children":2544},{"style":635},[2545],{"type":517,"value":2546},"    // 生成报告的逻辑\n",{"type":512,"tag":576,"props":2548,"children":2549},{"class":578,"line":695},[2550,2554,2558,2562,2566,2571],{"type":512,"tag":576,"props":2551,"children":2552},{"style":926},[2553],{"type":517,"value":929},{"type":512,"tag":576,"props":2555,"children":2556},{"style":595},[2557],{"type":517,"value":934},{"type":512,"tag":576,"props":2559,"children":2560},{"style":616},[2561],{"type":517,"value":2484},{"type":512,"tag":576,"props":2563,"children":2564},{"style":595},[2565],{"type":517,"value":934},{"type":512,"tag":576,"props":2567,"children":2568},{"style":605},[2569],{"type":517,"value":2570},"generatePDF",{"type":512,"tag":576,"props":2572,"children":2573},{"style":595},[2574],{"type":517,"value":2575},"();\n",{"type":512,"tag":576,"props":2577,"children":2578},{"class":578,"line":839},[2579],{"type":512,"tag":576,"props":2580,"children":2581},{"style":595},[2582],{"type":517,"value":647},{"type":512,"tag":576,"props":2584,"children":2585},{"class":578,"line":847},[2586],{"type":512,"tag":576,"props":2587,"children":2588},{"style":595},[2589],{"type":517,"value":701},{"type":512,"tag":576,"props":2591,"children":2592},{"class":578,"line":1057},[2593],{"type":512,"tag":576,"props":2594,"children":2595},{"emptyLinePlaceholder":654},[2596],{"type":517,"value":657},{"type":512,"tag":576,"props":2598,"children":2599},{"class":578,"line":1083},[2600,2604,2608],{"type":512,"tag":576,"props":2601,"children":2602},{"style":583},[2603],{"type":517,"value":586},{"type":512,"tag":576,"props":2605,"children":2606},{"style":589},[2607],{"type":517,"value":2498},{"type":512,"tag":576,"props":2609,"children":2610},{"style":595},[2611],{"type":517,"value":598},{"type":512,"tag":576,"props":2613,"children":2614},{"class":578,"line":1099},[2615,2620,2624],{"type":512,"tag":576,"props":2616,"children":2617},{"style":605},[2618],{"type":517,"value":2619},"  generatePDF",{"type":512,"tag":576,"props":2621,"children":2622},{"style":595},[2623],{"type":517,"value":671},{"type":512,"tag":576,"props":2625,"children":2626},{"style":595},[2627],{"type":517,"value":598},{"type":512,"tag":576,"props":2629,"children":2630},{"class":578,"line":1136},[2631],{"type":512,"tag":576,"props":2632,"children":2633},{"style":635},[2634],{"type":517,"value":2635},"    // 具体的 PDF 生成逻辑\n",{"type":512,"tag":576,"props":2637,"children":2638},{"class":578,"line":1144},[2639],{"type":512,"tag":576,"props":2640,"children":2641},{"style":595},[2642],{"type":517,"value":647},{"type":512,"tag":576,"props":2644,"children":2645},{"class":578,"line":1152},[2646],{"type":512,"tag":576,"props":2647,"children":2648},{"style":595},[2649],{"type":517,"value":701},{"type":512,"tag":513,"props":2651,"children":2652},{},[2653],{"type":517,"value":2654},"在这个设计中，ReportGenerator 直接依赖于具体的 PDFGenerator 类，这违反了依赖反转原则。如果我们想使用其他类型的报告生成器，例如 HTMLGenerator，就需要修改 ReportGenerator 类。",{"type":512,"tag":513,"props":2656,"children":2657},{},[2658],{"type":517,"value":2659},"为了符合依赖反转原则，我们应该通过抽象来解耦高层和低层模块：",{"type":512,"tag":565,"props":2661,"children":2663},{"className":567,"code":2662,"language":569,"meta":506,"style":506},"// 遵循依赖反转原则的设计\nclass ReportGenerator {\n  constructor(generator) {\n    this.generator = generator; // 依赖于抽象的报告生成器接口\n  }\n\n  generateReport() {\n    // 生成报告的逻辑\n    this.generator.generate();\n  }\n}\n\nclass PDFGenerator {\n  generate() {\n    // 具体的 PDF 生成逻辑\n  }\n}\n\nclass HTMLGenerator {\n  generate() {\n    // 具体的 HTML 生成逻辑\n  }\n}\n",[2664],{"type":512,"tag":572,"props":2665,"children":2666},{"__ignoreMap":506},[2667,2675,2690,2714,2748,2755,2762,2777,2784,2812,2819,2826,2833,2848,2864,2871,2878,2885,2892,2908,2923,2931,2938],{"type":512,"tag":576,"props":2668,"children":2669},{"class":578,"line":579},[2670],{"type":512,"tag":576,"props":2671,"children":2672},{"style":635},[2673],{"type":517,"value":2674},"// 遵循依赖反转原则的设计\n",{"type":512,"tag":576,"props":2676,"children":2677},{"class":578,"line":601},[2678,2682,2686],{"type":512,"tag":576,"props":2679,"children":2680},{"style":583},[2681],{"type":517,"value":586},{"type":512,"tag":576,"props":2683,"children":2684},{"style":589},[2685],{"type":517,"value":2449},{"type":512,"tag":576,"props":2687,"children":2688},{"style":595},[2689],{"type":517,"value":598},{"type":512,"tag":576,"props":2691,"children":2692},{"class":578,"line":631},[2693,2697,2701,2706,2710],{"type":512,"tag":576,"props":2694,"children":2695},{"style":583},[2696],{"type":517,"value":903},{"type":512,"tag":576,"props":2698,"children":2699},{"style":595},[2700],{"type":517,"value":613},{"type":512,"tag":576,"props":2702,"children":2703},{"style":616},[2704],{"type":517,"value":2705},"generator",{"type":512,"tag":576,"props":2707,"children":2708},{"style":595},[2709],{"type":517,"value":624},{"type":512,"tag":576,"props":2711,"children":2712},{"style":595},[2713],{"type":517,"value":598},{"type":512,"tag":576,"props":2715,"children":2716},{"class":578,"line":641},[2717,2721,2725,2729,2733,2738,2743],{"type":512,"tag":576,"props":2718,"children":2719},{"style":926},[2720],{"type":517,"value":929},{"type":512,"tag":576,"props":2722,"children":2723},{"style":595},[2724],{"type":517,"value":934},{"type":512,"tag":576,"props":2726,"children":2727},{"style":616},[2728],{"type":517,"value":2705},{"type":512,"tag":576,"props":2730,"children":2731},{"style":595},[2732],{"type":517,"value":943},{"type":512,"tag":576,"props":2734,"children":2735},{"style":616},[2736],{"type":517,"value":2737}," generator",{"type":512,"tag":576,"props":2739,"children":2740},{"style":595},[2741],{"type":517,"value":2742},";",{"type":512,"tag":576,"props":2744,"children":2745},{"style":635},[2746],{"type":517,"value":2747}," // 依赖于抽象的报告生成器接口\n",{"type":512,"tag":576,"props":2749,"children":2750},{"class":578,"line":650},[2751],{"type":512,"tag":576,"props":2752,"children":2753},{"style":595},[2754],{"type":517,"value":647},{"type":512,"tag":576,"props":2756,"children":2757},{"class":578,"line":660},[2758],{"type":512,"tag":576,"props":2759,"children":2760},{"emptyLinePlaceholder":654},[2761],{"type":517,"value":657},{"type":512,"tag":576,"props":2763,"children":2764},{"class":578,"line":678},[2765,2769,2773],{"type":512,"tag":576,"props":2766,"children":2767},{"style":605},[2768],{"type":517,"value":2530},{"type":512,"tag":576,"props":2770,"children":2771},{"style":595},[2772],{"type":517,"value":671},{"type":512,"tag":576,"props":2774,"children":2775},{"style":595},[2776],{"type":517,"value":598},{"type":512,"tag":576,"props":2778,"children":2779},{"class":578,"line":687},[2780],{"type":512,"tag":576,"props":2781,"children":2782},{"style":635},[2783],{"type":517,"value":2546},{"type":512,"tag":576,"props":2785,"children":2786},{"class":578,"line":695},[2787,2791,2795,2799,2803,2808],{"type":512,"tag":576,"props":2788,"children":2789},{"style":926},[2790],{"type":517,"value":929},{"type":512,"tag":576,"props":2792,"children":2793},{"style":595},[2794],{"type":517,"value":934},{"type":512,"tag":576,"props":2796,"children":2797},{"style":616},[2798],{"type":517,"value":2705},{"type":512,"tag":576,"props":2800,"children":2801},{"style":595},[2802],{"type":517,"value":934},{"type":512,"tag":576,"props":2804,"children":2805},{"style":605},[2806],{"type":517,"value":2807},"generate",{"type":512,"tag":576,"props":2809,"children":2810},{"style":595},[2811],{"type":517,"value":2575},{"type":512,"tag":576,"props":2813,"children":2814},{"class":578,"line":839},[2815],{"type":512,"tag":576,"props":2816,"children":2817},{"style":595},[2818],{"type":517,"value":647},{"type":512,"tag":576,"props":2820,"children":2821},{"class":578,"line":847},[2822],{"type":512,"tag":576,"props":2823,"children":2824},{"style":595},[2825],{"type":517,"value":701},{"type":512,"tag":576,"props":2827,"children":2828},{"class":578,"line":1057},[2829],{"type":512,"tag":576,"props":2830,"children":2831},{"emptyLinePlaceholder":654},[2832],{"type":517,"value":657},{"type":512,"tag":576,"props":2834,"children":2835},{"class":578,"line":1083},[2836,2840,2844],{"type":512,"tag":576,"props":2837,"children":2838},{"style":583},[2839],{"type":517,"value":586},{"type":512,"tag":576,"props":2841,"children":2842},{"style":589},[2843],{"type":517,"value":2498},{"type":512,"tag":576,"props":2845,"children":2846},{"style":595},[2847],{"type":517,"value":598},{"type":512,"tag":576,"props":2849,"children":2850},{"class":578,"line":1099},[2851,2856,2860],{"type":512,"tag":576,"props":2852,"children":2853},{"style":605},[2854],{"type":517,"value":2855},"  generate",{"type":512,"tag":576,"props":2857,"children":2858},{"style":595},[2859],{"type":517,"value":671},{"type":512,"tag":576,"props":2861,"children":2862},{"style":595},[2863],{"type":517,"value":598},{"type":512,"tag":576,"props":2865,"children":2866},{"class":578,"line":1136},[2867],{"type":512,"tag":576,"props":2868,"children":2869},{"style":635},[2870],{"type":517,"value":2635},{"type":512,"tag":576,"props":2872,"children":2873},{"class":578,"line":1144},[2874],{"type":512,"tag":576,"props":2875,"children":2876},{"style":595},[2877],{"type":517,"value":647},{"type":512,"tag":576,"props":2879,"children":2880},{"class":578,"line":1152},[2881],{"type":512,"tag":576,"props":2882,"children":2883},{"style":595},[2884],{"type":517,"value":701},{"type":512,"tag":576,"props":2886,"children":2887},{"class":578,"line":1160},[2888],{"type":512,"tag":576,"props":2889,"children":2890},{"emptyLinePlaceholder":654},[2891],{"type":517,"value":657},{"type":512,"tag":576,"props":2893,"children":2894},{"class":578,"line":1185},[2895,2899,2904],{"type":512,"tag":576,"props":2896,"children":2897},{"style":583},[2898],{"type":517,"value":586},{"type":512,"tag":576,"props":2900,"children":2901},{"style":589},[2902],{"type":517,"value":2903}," HTMLGenerator",{"type":512,"tag":576,"props":2905,"children":2906},{"style":595},[2907],{"type":517,"value":598},{"type":512,"tag":576,"props":2909,"children":2910},{"class":578,"line":1201},[2911,2915,2919],{"type":512,"tag":576,"props":2912,"children":2913},{"style":605},[2914],{"type":517,"value":2855},{"type":512,"tag":576,"props":2916,"children":2917},{"style":595},[2918],{"type":517,"value":671},{"type":512,"tag":576,"props":2920,"children":2921},{"style":595},[2922],{"type":517,"value":598},{"type":512,"tag":576,"props":2924,"children":2925},{"class":578,"line":1238},[2926],{"type":512,"tag":576,"props":2927,"children":2928},{"style":635},[2929],{"type":517,"value":2930},"    // 具体的 HTML 生成逻辑\n",{"type":512,"tag":576,"props":2932,"children":2933},{"class":578,"line":1246},[2934],{"type":512,"tag":576,"props":2935,"children":2936},{"style":595},[2937],{"type":517,"value":647},{"type":512,"tag":576,"props":2939,"children":2941},{"class":578,"line":2940},23,[2942],{"type":512,"tag":576,"props":2943,"children":2944},{"style":595},[2945],{"type":517,"value":701},{"type":512,"tag":513,"props":2947,"children":2948},{},[2949],{"type":517,"value":2950},"现在，ReportGenerator 不再直接依赖于具体的实现，而是依赖于抽象的报告生成器接口。这使得我们可以轻松地扩展系统，例如添加新的报告生成器，而不需要修改 ReportGenerator 类。这样的设计更加灵活，符合依赖反转原则。",{"type":512,"tag":2952,"props":2953,"children":2954},"style",{},[2955],{"type":517,"value":2956},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":506,"searchDepth":650,"depth":650,"links":2958},[2959,2960,2961,2962,2963],{"id":556,"depth":601,"text":556},{"id":860,"depth":601,"text":860},{"id":1466,"depth":601,"text":1466},{"id":2047,"depth":601,"text":2047},{"id":2410,"depth":601,"text":2410},"markdown","content:4.design-mode:1.thoughts-principles.md","content","4.design-mode/1.thoughts-principles.md","md",[2970,2971],{"_path":481,"title":480,"description":506},{"_path":498,"title":497,"description":506},1714056097632]