[{"data":1,"prerenderedAt":2975},["Reactive",2],{"navigation":3,"/design-mode/thoughts-principles":506,"/design-mode/thoughts-principles-surround":2972},[4,269,298,474,482,491],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":473},"代码考核","/code-assessment",[302,373,466],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":374,"_path":375,"children":376},"业务场景","/code-assessment/scene",[377,402,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463],{"title":378,"_path":379,"children":380},"Promise","/code-assessment/scene/promise",[381,384,387,390,393,396,399],{"title":382,"_path":383},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":385,"_path":386},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":388,"_path":389},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":391,"_path":392},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":394,"_path":395},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":397,"_path":398},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":400,"_path":401},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":403,"_path":404,"children":405},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[406,409],{"title":407,"_path":408},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":410,"_path":411},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":413,"_path":414},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":416,"_path":417},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":419,"_path":420},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":422,"_path":423},"倒计时","/code-assessment/scene/countdown",{"title":425,"_path":426},"日期格式化","/code-assessment/scene/date-format",{"title":428,"_path":429},"实现前端路由","/code-assessment/scene/frontend-route",{"title":431,"_path":432},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":434,"_path":435},"lodash.get","/code-assessment/scene/lodash-get",{"title":437,"_path":438},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":440,"_path":441},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":443,"_path":444},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":446,"_path":447},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":449,"_path":450},"随机数","/code-assessment/scene/random-number",{"title":452,"_path":453},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":455,"_path":456},"sku 算法实现","/code-assessment/scene/sku",{"title":458,"_path":459},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":461,"_path":462},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":464,"_path":465},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":467,"_path":468,"children":469},"Ts 类型挑战","/code-assessment/type-challeges",[470],{"title":471,"_path":472},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":475,"_path":476,"children":477,"icon":481},"项目","/project",[478],{"title":479,"_path":480},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":483,"_path":484,"children":485,"icon":490},"设计模式","/design-mode",[486,487],{"title":483,"_path":484},{"title":488,"_path":489},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":492,"_path":493,"children":494,"icon":505},"后端语言","/backend-languages",[495],{"title":496,"_path":497,"children":498},"Python","/backend-languages/python",[499,502],{"title":500,"_path":501},"基础","/backend-languages/python/base",{"title":503,"_path":504},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":489,"_dir":507,"_draft":508,"_partial":508,"_locale":509,"title":488,"description":510,"body":511,"_type":2967,"_id":2968,"_source":2969,"_file":2970,"_extension":2971},"design-mode",false,"","SOLID 是一个面向对象设计和编程中的五个基本原则的缩写，它们旨在帮助开发者设计更加灵活、可维护和可扩展的软件系统。这些原则由 Robert C. Martin 等人提出，它们包括以下五个原则：",{"type":512,"children":513,"toc":2960},"root",[514,521,551,556,562,567,705,710,724,729,856,861,866,871,876,1255,1260,1265,1457,1462,1467,1472,1477,1482,1487,1817,1822,2038,2043,2048,2053,2058,2063,2068,2272,2277,2282,2406,2411,2416,2421,2426,2653,2658,2663,2949,2954],{"type":515,"tag":516,"props":517,"children":518},"element","p",{},[519],{"type":520,"value":510},"text",{"type":515,"tag":522,"props":523,"children":524},"ul",{},[525,531,536,541,546],{"type":515,"tag":526,"props":527,"children":528},"li",{},[529],{"type":520,"value":530},"单一职责原则（Single Responsibility Principle，SRP）",{"type":515,"tag":526,"props":532,"children":533},{},[534],{"type":520,"value":535},"开放/封闭原则（Open/Closed Principle，OCP）",{"type":515,"tag":526,"props":537,"children":538},{},[539],{"type":520,"value":540},"里氏替换原则（Liskov Substitution Principle，LSP）",{"type":515,"tag":526,"props":542,"children":543},{},[544],{"type":520,"value":545},"接口隔离原则（Interface Segregation Principle，ISP）",{"type":515,"tag":526,"props":547,"children":548},{},[549],{"type":520,"value":550},"依赖反转原则（Dependency Inversion Principle，DIP）",{"type":515,"tag":516,"props":552,"children":553},{},[554],{"type":520,"value":555},"这些原则共同促使开发者创建具有高内聚、低耦合、易扩展和易维护性的软件系统。遵循这些原则有助于构建更健壮的面向对象系统，提高代码质量和可维护性。",{"type":515,"tag":557,"props":558,"children":560},"h2",{"id":559},"单一职责原则",[561],{"type":520,"value":559},{"type":515,"tag":516,"props":563,"children":564},{},[565],{"type":520,"value":566},"单一职责原则（Single Responsibility Principle，SRP）要求一个类或者模块只负责完成一个职责（或者功能）。 假设我们有一个简单的厨师类，它负责烹饪和洗碗两个职责：",{"type":515,"tag":568,"props":569,"children":573},"pre",{"className":570,"code":571,"language":572,"meta":509,"style":509},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","class Chef {\n  cookDish(dish) {\n    // 烹饪菜品的具体实现\n  }\n\n  washDishes() {\n    // 洗碗的具体实现\n  }\n}\n","js",[574],{"type":515,"tag":575,"props":576,"children":577},"code",{"__ignoreMap":509},[578,602,632,642,651,661,679,688,696],{"type":515,"tag":579,"props":580,"children":583},"span",{"class":581,"line":582},"line",1,[584,590,596],{"type":515,"tag":579,"props":585,"children":587},{"style":586},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[588],{"type":520,"value":589},"class",{"type":515,"tag":579,"props":591,"children":593},{"style":592},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[594],{"type":520,"value":595}," Chef",{"type":515,"tag":579,"props":597,"children":599},{"style":598},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[600],{"type":520,"value":601}," {\n",{"type":515,"tag":579,"props":603,"children":605},{"class":581,"line":604},2,[606,612,617,623,628],{"type":515,"tag":579,"props":607,"children":609},{"style":608},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[610],{"type":520,"value":611},"  cookDish",{"type":515,"tag":579,"props":613,"children":614},{"style":598},[615],{"type":520,"value":616},"(",{"type":515,"tag":579,"props":618,"children":620},{"style":619},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[621],{"type":520,"value":622},"dish",{"type":515,"tag":579,"props":624,"children":625},{"style":598},[626],{"type":520,"value":627},")",{"type":515,"tag":579,"props":629,"children":630},{"style":598},[631],{"type":520,"value":601},{"type":515,"tag":579,"props":633,"children":635},{"class":581,"line":634},3,[636],{"type":515,"tag":579,"props":637,"children":639},{"style":638},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[640],{"type":520,"value":641},"    // 烹饪菜品的具体实现\n",{"type":515,"tag":579,"props":643,"children":645},{"class":581,"line":644},4,[646],{"type":515,"tag":579,"props":647,"children":648},{"style":598},[649],{"type":520,"value":650},"  }\n",{"type":515,"tag":579,"props":652,"children":654},{"class":581,"line":653},5,[655],{"type":515,"tag":579,"props":656,"children":658},{"emptyLinePlaceholder":657},true,[659],{"type":520,"value":660},"\n",{"type":515,"tag":579,"props":662,"children":664},{"class":581,"line":663},6,[665,670,675],{"type":515,"tag":579,"props":666,"children":667},{"style":608},[668],{"type":520,"value":669},"  washDishes",{"type":515,"tag":579,"props":671,"children":672},{"style":598},[673],{"type":520,"value":674},"()",{"type":515,"tag":579,"props":676,"children":677},{"style":598},[678],{"type":520,"value":601},{"type":515,"tag":579,"props":680,"children":682},{"class":581,"line":681},7,[683],{"type":515,"tag":579,"props":684,"children":685},{"style":638},[686],{"type":520,"value":687},"    // 洗碗的具体实现\n",{"type":515,"tag":579,"props":689,"children":691},{"class":581,"line":690},8,[692],{"type":515,"tag":579,"props":693,"children":694},{"style":598},[695],{"type":520,"value":650},{"type":515,"tag":579,"props":697,"children":699},{"class":581,"line":698},9,[700],{"type":515,"tag":579,"props":701,"children":702},{"style":598},[703],{"type":520,"value":704},"}\n",{"type":515,"tag":516,"props":706,"children":707},{},[708],{"type":520,"value":709},"这个类违反了单一职责原则，因为它有两个职责：烹饪和洗碗。这样的设计可能导致以下问题：",{"type":515,"tag":711,"props":712,"children":713},"ol",{},[714,719],{"type":515,"tag":526,"props":715,"children":716},{},[717],{"type":520,"value":718},"如果厨师的烹饪逻辑变化，需要修改 cookDish 方法，这可能会影响洗碗的部分。",{"type":515,"tag":526,"props":720,"children":721},{},[722],{"type":520,"value":723},"如果洗碗的逻辑变化，需要修改 washDishes 方法，这可能会影响烹饪的部分。",{"type":515,"tag":516,"props":725,"children":726},{},[727],{"type":520,"value":728},"按照单一职责原则，我们应该将这两个职责分开，分别由不同的类负责：",{"type":515,"tag":568,"props":730,"children":732},{"className":570,"code":731,"language":572,"meta":509,"style":509},"class Chef {\n  cookDish(dish) {\n    // 烹饪菜品的具体实现\n  }\n}\n\nclass Dishwasher {\n  washDishes() {\n    // 洗碗的具体实现\n  }\n}\n",[733],{"type":515,"tag":575,"props":734,"children":735},{"__ignoreMap":509},[736,751,774,781,788,795,802,818,833,840,848],{"type":515,"tag":579,"props":737,"children":738},{"class":581,"line":582},[739,743,747],{"type":515,"tag":579,"props":740,"children":741},{"style":586},[742],{"type":520,"value":589},{"type":515,"tag":579,"props":744,"children":745},{"style":592},[746],{"type":520,"value":595},{"type":515,"tag":579,"props":748,"children":749},{"style":598},[750],{"type":520,"value":601},{"type":515,"tag":579,"props":752,"children":753},{"class":581,"line":604},[754,758,762,766,770],{"type":515,"tag":579,"props":755,"children":756},{"style":608},[757],{"type":520,"value":611},{"type":515,"tag":579,"props":759,"children":760},{"style":598},[761],{"type":520,"value":616},{"type":515,"tag":579,"props":763,"children":764},{"style":619},[765],{"type":520,"value":622},{"type":515,"tag":579,"props":767,"children":768},{"style":598},[769],{"type":520,"value":627},{"type":515,"tag":579,"props":771,"children":772},{"style":598},[773],{"type":520,"value":601},{"type":515,"tag":579,"props":775,"children":776},{"class":581,"line":634},[777],{"type":515,"tag":579,"props":778,"children":779},{"style":638},[780],{"type":520,"value":641},{"type":515,"tag":579,"props":782,"children":783},{"class":581,"line":644},[784],{"type":515,"tag":579,"props":785,"children":786},{"style":598},[787],{"type":520,"value":650},{"type":515,"tag":579,"props":789,"children":790},{"class":581,"line":653},[791],{"type":515,"tag":579,"props":792,"children":793},{"style":598},[794],{"type":520,"value":704},{"type":515,"tag":579,"props":796,"children":797},{"class":581,"line":663},[798],{"type":515,"tag":579,"props":799,"children":800},{"emptyLinePlaceholder":657},[801],{"type":520,"value":660},{"type":515,"tag":579,"props":803,"children":804},{"class":581,"line":681},[805,809,814],{"type":515,"tag":579,"props":806,"children":807},{"style":586},[808],{"type":520,"value":589},{"type":515,"tag":579,"props":810,"children":811},{"style":592},[812],{"type":520,"value":813}," Dishwasher",{"type":515,"tag":579,"props":815,"children":816},{"style":598},[817],{"type":520,"value":601},{"type":515,"tag":579,"props":819,"children":820},{"class":581,"line":690},[821,825,829],{"type":515,"tag":579,"props":822,"children":823},{"style":608},[824],{"type":520,"value":669},{"type":515,"tag":579,"props":826,"children":827},{"style":598},[828],{"type":520,"value":674},{"type":515,"tag":579,"props":830,"children":831},{"style":598},[832],{"type":520,"value":601},{"type":515,"tag":579,"props":834,"children":835},{"class":581,"line":698},[836],{"type":515,"tag":579,"props":837,"children":838},{"style":638},[839],{"type":520,"value":687},{"type":515,"tag":579,"props":841,"children":843},{"class":581,"line":842},10,[844],{"type":515,"tag":579,"props":845,"children":846},{"style":598},[847],{"type":520,"value":650},{"type":515,"tag":579,"props":849,"children":851},{"class":581,"line":850},11,[852],{"type":515,"tag":579,"props":853,"children":854},{"style":598},[855],{"type":520,"value":704},{"type":515,"tag":516,"props":857,"children":858},{},[859],{"type":520,"value":860},"这样，Chef 类专注于烹饪，而 Dishwasher 类专注于洗碗。每个类都有一个单一的职责，使得代码更清晰、易于理解，并且在未来的变更中更具弹性。",{"type":515,"tag":557,"props":862,"children":864},{"id":863},"开放封闭原则",[865],{"type":520,"value":863},{"type":515,"tag":516,"props":867,"children":868},{},[869],{"type":520,"value":870},"开关封闭原则（Open/Closed Principle，OCP）要求软件实体（例如类、模块、函数等）应该对扩展开放，对修改关闭。简而言之，一个模块在扩展新功能时不应该修改原有的代码，而是通过添加新的代码来实现扩展。",{"type":515,"tag":516,"props":872,"children":873},{},[874],{"type":520,"value":875},"考虑一个动物园的场景。我们有一些动物，每个动物都会发出叫声。初始设计如下：",{"type":515,"tag":568,"props":877,"children":879},{"className":570,"code":878,"language":572,"meta":509,"style":509},"class Animal {\n  constructor(name) {\n    this.name = name;\n  }\n\n  makeSound() {\n    // 默认的叫声\n    console.log(\"Some generic animal sound\");\n  }\n}\n\nclass Lion extends Animal {\n  makeSound() {\n    console.log(\"Roar!\");\n  }\n}\n\nclass Elephant extends Animal {\n  makeSound() {\n    console.log(\"Trumpet!\");\n  }\n}\n",[880],{"type":515,"tag":575,"props":881,"children":882},{"__ignoreMap":509},[883,899,924,957,964,971,987,995,1037,1044,1051,1058,1084,1100,1137,1145,1153,1161,1186,1202,1239,1247],{"type":515,"tag":579,"props":884,"children":885},{"class":581,"line":582},[886,890,895],{"type":515,"tag":579,"props":887,"children":888},{"style":586},[889],{"type":520,"value":589},{"type":515,"tag":579,"props":891,"children":892},{"style":592},[893],{"type":520,"value":894}," Animal",{"type":515,"tag":579,"props":896,"children":897},{"style":598},[898],{"type":520,"value":601},{"type":515,"tag":579,"props":900,"children":901},{"class":581,"line":604},[902,907,911,916,920],{"type":515,"tag":579,"props":903,"children":904},{"style":586},[905],{"type":520,"value":906},"  constructor",{"type":515,"tag":579,"props":908,"children":909},{"style":598},[910],{"type":520,"value":616},{"type":515,"tag":579,"props":912,"children":913},{"style":619},[914],{"type":520,"value":915},"name",{"type":515,"tag":579,"props":917,"children":918},{"style":598},[919],{"type":520,"value":627},{"type":515,"tag":579,"props":921,"children":922},{"style":598},[923],{"type":520,"value":601},{"type":515,"tag":579,"props":925,"children":926},{"class":581,"line":634},[927,933,938,942,947,952],{"type":515,"tag":579,"props":928,"children":930},{"style":929},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[931],{"type":520,"value":932},"    this",{"type":515,"tag":579,"props":934,"children":935},{"style":598},[936],{"type":520,"value":937},".",{"type":515,"tag":579,"props":939,"children":940},{"style":619},[941],{"type":520,"value":915},{"type":515,"tag":579,"props":943,"children":944},{"style":598},[945],{"type":520,"value":946}," =",{"type":515,"tag":579,"props":948,"children":949},{"style":619},[950],{"type":520,"value":951}," name",{"type":515,"tag":579,"props":953,"children":954},{"style":598},[955],{"type":520,"value":956},";\n",{"type":515,"tag":579,"props":958,"children":959},{"class":581,"line":644},[960],{"type":515,"tag":579,"props":961,"children":962},{"style":598},[963],{"type":520,"value":650},{"type":515,"tag":579,"props":965,"children":966},{"class":581,"line":653},[967],{"type":515,"tag":579,"props":968,"children":969},{"emptyLinePlaceholder":657},[970],{"type":520,"value":660},{"type":515,"tag":579,"props":972,"children":973},{"class":581,"line":663},[974,979,983],{"type":515,"tag":579,"props":975,"children":976},{"style":608},[977],{"type":520,"value":978},"  makeSound",{"type":515,"tag":579,"props":980,"children":981},{"style":598},[982],{"type":520,"value":674},{"type":515,"tag":579,"props":984,"children":985},{"style":598},[986],{"type":520,"value":601},{"type":515,"tag":579,"props":988,"children":989},{"class":581,"line":681},[990],{"type":515,"tag":579,"props":991,"children":992},{"style":638},[993],{"type":520,"value":994},"    // 默认的叫声\n",{"type":515,"tag":579,"props":996,"children":997},{"class":581,"line":690},[998,1003,1007,1012,1016,1022,1028,1032],{"type":515,"tag":579,"props":999,"children":1000},{"style":619},[1001],{"type":520,"value":1002},"    console",{"type":515,"tag":579,"props":1004,"children":1005},{"style":598},[1006],{"type":520,"value":937},{"type":515,"tag":579,"props":1008,"children":1009},{"style":608},[1010],{"type":520,"value":1011},"log",{"type":515,"tag":579,"props":1013,"children":1014},{"style":598},[1015],{"type":520,"value":616},{"type":515,"tag":579,"props":1017,"children":1019},{"style":1018},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1020],{"type":520,"value":1021},"\"",{"type":515,"tag":579,"props":1023,"children":1025},{"style":1024},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[1026],{"type":520,"value":1027},"Some generic animal sound",{"type":515,"tag":579,"props":1029,"children":1030},{"style":1018},[1031],{"type":520,"value":1021},{"type":515,"tag":579,"props":1033,"children":1034},{"style":598},[1035],{"type":520,"value":1036},");\n",{"type":515,"tag":579,"props":1038,"children":1039},{"class":581,"line":698},[1040],{"type":515,"tag":579,"props":1041,"children":1042},{"style":598},[1043],{"type":520,"value":650},{"type":515,"tag":579,"props":1045,"children":1046},{"class":581,"line":842},[1047],{"type":515,"tag":579,"props":1048,"children":1049},{"style":598},[1050],{"type":520,"value":704},{"type":515,"tag":579,"props":1052,"children":1053},{"class":581,"line":850},[1054],{"type":515,"tag":579,"props":1055,"children":1056},{"emptyLinePlaceholder":657},[1057],{"type":520,"value":660},{"type":515,"tag":579,"props":1059,"children":1061},{"class":581,"line":1060},12,[1062,1066,1071,1076,1080],{"type":515,"tag":579,"props":1063,"children":1064},{"style":586},[1065],{"type":520,"value":589},{"type":515,"tag":579,"props":1067,"children":1068},{"style":592},[1069],{"type":520,"value":1070}," Lion",{"type":515,"tag":579,"props":1072,"children":1073},{"style":586},[1074],{"type":520,"value":1075}," extends",{"type":515,"tag":579,"props":1077,"children":1078},{"style":608},[1079],{"type":520,"value":894},{"type":515,"tag":579,"props":1081,"children":1082},{"style":598},[1083],{"type":520,"value":601},{"type":515,"tag":579,"props":1085,"children":1087},{"class":581,"line":1086},13,[1088,1092,1096],{"type":515,"tag":579,"props":1089,"children":1090},{"style":608},[1091],{"type":520,"value":978},{"type":515,"tag":579,"props":1093,"children":1094},{"style":598},[1095],{"type":520,"value":674},{"type":515,"tag":579,"props":1097,"children":1098},{"style":598},[1099],{"type":520,"value":601},{"type":515,"tag":579,"props":1101,"children":1103},{"class":581,"line":1102},14,[1104,1108,1112,1116,1120,1124,1129,1133],{"type":515,"tag":579,"props":1105,"children":1106},{"style":619},[1107],{"type":520,"value":1002},{"type":515,"tag":579,"props":1109,"children":1110},{"style":598},[1111],{"type":520,"value":937},{"type":515,"tag":579,"props":1113,"children":1114},{"style":608},[1115],{"type":520,"value":1011},{"type":515,"tag":579,"props":1117,"children":1118},{"style":598},[1119],{"type":520,"value":616},{"type":515,"tag":579,"props":1121,"children":1122},{"style":1018},[1123],{"type":520,"value":1021},{"type":515,"tag":579,"props":1125,"children":1126},{"style":1024},[1127],{"type":520,"value":1128},"Roar!",{"type":515,"tag":579,"props":1130,"children":1131},{"style":1018},[1132],{"type":520,"value":1021},{"type":515,"tag":579,"props":1134,"children":1135},{"style":598},[1136],{"type":520,"value":1036},{"type":515,"tag":579,"props":1138,"children":1140},{"class":581,"line":1139},15,[1141],{"type":515,"tag":579,"props":1142,"children":1143},{"style":598},[1144],{"type":520,"value":650},{"type":515,"tag":579,"props":1146,"children":1148},{"class":581,"line":1147},16,[1149],{"type":515,"tag":579,"props":1150,"children":1151},{"style":598},[1152],{"type":520,"value":704},{"type":515,"tag":579,"props":1154,"children":1156},{"class":581,"line":1155},17,[1157],{"type":515,"tag":579,"props":1158,"children":1159},{"emptyLinePlaceholder":657},[1160],{"type":520,"value":660},{"type":515,"tag":579,"props":1162,"children":1164},{"class":581,"line":1163},18,[1165,1169,1174,1178,1182],{"type":515,"tag":579,"props":1166,"children":1167},{"style":586},[1168],{"type":520,"value":589},{"type":515,"tag":579,"props":1170,"children":1171},{"style":592},[1172],{"type":520,"value":1173}," Elephant",{"type":515,"tag":579,"props":1175,"children":1176},{"style":586},[1177],{"type":520,"value":1075},{"type":515,"tag":579,"props":1179,"children":1180},{"style":608},[1181],{"type":520,"value":894},{"type":515,"tag":579,"props":1183,"children":1184},{"style":598},[1185],{"type":520,"value":601},{"type":515,"tag":579,"props":1187,"children":1189},{"class":581,"line":1188},19,[1190,1194,1198],{"type":515,"tag":579,"props":1191,"children":1192},{"style":608},[1193],{"type":520,"value":978},{"type":515,"tag":579,"props":1195,"children":1196},{"style":598},[1197],{"type":520,"value":674},{"type":515,"tag":579,"props":1199,"children":1200},{"style":598},[1201],{"type":520,"value":601},{"type":515,"tag":579,"props":1203,"children":1205},{"class":581,"line":1204},20,[1206,1210,1214,1218,1222,1226,1231,1235],{"type":515,"tag":579,"props":1207,"children":1208},{"style":619},[1209],{"type":520,"value":1002},{"type":515,"tag":579,"props":1211,"children":1212},{"style":598},[1213],{"type":520,"value":937},{"type":515,"tag":579,"props":1215,"children":1216},{"style":608},[1217],{"type":520,"value":1011},{"type":515,"tag":579,"props":1219,"children":1220},{"style":598},[1221],{"type":520,"value":616},{"type":515,"tag":579,"props":1223,"children":1224},{"style":1018},[1225],{"type":520,"value":1021},{"type":515,"tag":579,"props":1227,"children":1228},{"style":1024},[1229],{"type":520,"value":1230},"Trumpet!",{"type":515,"tag":579,"props":1232,"children":1233},{"style":1018},[1234],{"type":520,"value":1021},{"type":515,"tag":579,"props":1236,"children":1237},{"style":598},[1238],{"type":520,"value":1036},{"type":515,"tag":579,"props":1240,"children":1242},{"class":581,"line":1241},21,[1243],{"type":515,"tag":579,"props":1244,"children":1245},{"style":598},[1246],{"type":520,"value":650},{"type":515,"tag":579,"props":1248,"children":1250},{"class":581,"line":1249},22,[1251],{"type":515,"tag":579,"props":1252,"children":1253},{"style":598},[1254],{"type":520,"value":704},{"type":515,"tag":516,"props":1256,"children":1257},{},[1258],{"type":520,"value":1259},"在这个设计中，Animal 类是一个基类，而 Lion 和 Elephant 是它的子类。每个动物都有自己的叫声，通过重写 makeSound 方法来实现。",{"type":515,"tag":516,"props":1261,"children":1262},{},[1263],{"type":520,"value":1264},"现在，假设我们要添加一些新的动物，比如鹦鹉和狗，按照开放/封闭原则，我们应该扩展而不是修改现有的代码：",{"type":515,"tag":568,"props":1266,"children":1268},{"className":570,"code":1267,"language":572,"meta":509,"style":509},"class Parrot extends Animal {\n  makeSound() {\n    console.log(\"Squawk!\");\n  }\n}\n\nclass Dog extends Animal {\n  makeSound() {\n    console.log(\"Bark!\");\n  }\n}\n",[1269],{"type":515,"tag":575,"props":1270,"children":1271},{"__ignoreMap":509},[1272,1296,1311,1347,1354,1361,1368,1392,1407,1443,1450],{"type":515,"tag":579,"props":1273,"children":1274},{"class":581,"line":582},[1275,1279,1284,1288,1292],{"type":515,"tag":579,"props":1276,"children":1277},{"style":586},[1278],{"type":520,"value":589},{"type":515,"tag":579,"props":1280,"children":1281},{"style":592},[1282],{"type":520,"value":1283}," Parrot",{"type":515,"tag":579,"props":1285,"children":1286},{"style":586},[1287],{"type":520,"value":1075},{"type":515,"tag":579,"props":1289,"children":1290},{"style":608},[1291],{"type":520,"value":894},{"type":515,"tag":579,"props":1293,"children":1294},{"style":598},[1295],{"type":520,"value":601},{"type":515,"tag":579,"props":1297,"children":1298},{"class":581,"line":604},[1299,1303,1307],{"type":515,"tag":579,"props":1300,"children":1301},{"style":608},[1302],{"type":520,"value":978},{"type":515,"tag":579,"props":1304,"children":1305},{"style":598},[1306],{"type":520,"value":674},{"type":515,"tag":579,"props":1308,"children":1309},{"style":598},[1310],{"type":520,"value":601},{"type":515,"tag":579,"props":1312,"children":1313},{"class":581,"line":634},[1314,1318,1322,1326,1330,1334,1339,1343],{"type":515,"tag":579,"props":1315,"children":1316},{"style":619},[1317],{"type":520,"value":1002},{"type":515,"tag":579,"props":1319,"children":1320},{"style":598},[1321],{"type":520,"value":937},{"type":515,"tag":579,"props":1323,"children":1324},{"style":608},[1325],{"type":520,"value":1011},{"type":515,"tag":579,"props":1327,"children":1328},{"style":598},[1329],{"type":520,"value":616},{"type":515,"tag":579,"props":1331,"children":1332},{"style":1018},[1333],{"type":520,"value":1021},{"type":515,"tag":579,"props":1335,"children":1336},{"style":1024},[1337],{"type":520,"value":1338},"Squawk!",{"type":515,"tag":579,"props":1340,"children":1341},{"style":1018},[1342],{"type":520,"value":1021},{"type":515,"tag":579,"props":1344,"children":1345},{"style":598},[1346],{"type":520,"value":1036},{"type":515,"tag":579,"props":1348,"children":1349},{"class":581,"line":644},[1350],{"type":515,"tag":579,"props":1351,"children":1352},{"style":598},[1353],{"type":520,"value":650},{"type":515,"tag":579,"props":1355,"children":1356},{"class":581,"line":653},[1357],{"type":515,"tag":579,"props":1358,"children":1359},{"style":598},[1360],{"type":520,"value":704},{"type":515,"tag":579,"props":1362,"children":1363},{"class":581,"line":663},[1364],{"type":515,"tag":579,"props":1365,"children":1366},{"emptyLinePlaceholder":657},[1367],{"type":520,"value":660},{"type":515,"tag":579,"props":1369,"children":1370},{"class":581,"line":681},[1371,1375,1380,1384,1388],{"type":515,"tag":579,"props":1372,"children":1373},{"style":586},[1374],{"type":520,"value":589},{"type":515,"tag":579,"props":1376,"children":1377},{"style":592},[1378],{"type":520,"value":1379}," Dog",{"type":515,"tag":579,"props":1381,"children":1382},{"style":586},[1383],{"type":520,"value":1075},{"type":515,"tag":579,"props":1385,"children":1386},{"style":608},[1387],{"type":520,"value":894},{"type":515,"tag":579,"props":1389,"children":1390},{"style":598},[1391],{"type":520,"value":601},{"type":515,"tag":579,"props":1393,"children":1394},{"class":581,"line":690},[1395,1399,1403],{"type":515,"tag":579,"props":1396,"children":1397},{"style":608},[1398],{"type":520,"value":978},{"type":515,"tag":579,"props":1400,"children":1401},{"style":598},[1402],{"type":520,"value":674},{"type":515,"tag":579,"props":1404,"children":1405},{"style":598},[1406],{"type":520,"value":601},{"type":515,"tag":579,"props":1408,"children":1409},{"class":581,"line":698},[1410,1414,1418,1422,1426,1430,1435,1439],{"type":515,"tag":579,"props":1411,"children":1412},{"style":619},[1413],{"type":520,"value":1002},{"type":515,"tag":579,"props":1415,"children":1416},{"style":598},[1417],{"type":520,"value":937},{"type":515,"tag":579,"props":1419,"children":1420},{"style":608},[1421],{"type":520,"value":1011},{"type":515,"tag":579,"props":1423,"children":1424},{"style":598},[1425],{"type":520,"value":616},{"type":515,"tag":579,"props":1427,"children":1428},{"style":1018},[1429],{"type":520,"value":1021},{"type":515,"tag":579,"props":1431,"children":1432},{"style":1024},[1433],{"type":520,"value":1434},"Bark!",{"type":515,"tag":579,"props":1436,"children":1437},{"style":1018},[1438],{"type":520,"value":1021},{"type":515,"tag":579,"props":1440,"children":1441},{"style":598},[1442],{"type":520,"value":1036},{"type":515,"tag":579,"props":1444,"children":1445},{"class":581,"line":842},[1446],{"type":515,"tag":579,"props":1447,"children":1448},{"style":598},[1449],{"type":520,"value":650},{"type":515,"tag":579,"props":1451,"children":1452},{"class":581,"line":850},[1453],{"type":515,"tag":579,"props":1454,"children":1455},{"style":598},[1456],{"type":520,"value":704},{"type":515,"tag":516,"props":1458,"children":1459},{},[1460],{"type":520,"value":1461},"这样，我们通过扩展 Animal 类，而不是修改它，来添加新的功能（新的动物）。这符合开放/封闭原则，因为我们对于现有代码的修改是关闭的，我们只是通过扩展来引入新的功能。",{"type":515,"tag":516,"props":1463,"children":1464},{},[1465],{"type":520,"value":1466},"使用开放/封闭原则可以使代码更加稳定，降低对现有代码的影响，同时也更容易应对变化和扩展。",{"type":515,"tag":557,"props":1468,"children":1470},{"id":1469},"里式替换原则",[1471],{"type":520,"value":1469},{"type":515,"tag":516,"props":1473,"children":1474},{},[1475],{"type":520,"value":1476},"里氏替换原则（Liskov Substitution Principle，LSP） 是 SOLID 原则之一，它强调子类型（派生类或子类）必须能够替换掉它们的基类型（基类或父类）并出现在基类能够工作的任何地方，而不破坏程序的正确性。",{"type":515,"tag":516,"props":1478,"children":1479},{},[1480],{"type":520,"value":1481},"通俗地说，如果一个类是基类的子类，那么在任何需要基类的地方，都可以使用这个子类而不产生错误。子类应该保持基类的行为，并且可以扩展或修改基类的行为，但不应该破坏基类原有的约定。",{"type":515,"tag":516,"props":1483,"children":1484},{},[1485],{"type":520,"value":1486},"假设我们有一个表示矩形的基类 Rectangle：",{"type":515,"tag":568,"props":1488,"children":1490},{"className":570,"code":1489,"language":572,"meta":509,"style":509},"class Rectangle {\n  constructor(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n\n  setWidth(width) {\n    this.width = width;\n  }\n\n  setHeight(height) {\n    this.height = height;\n  }\n\n  getArea() {\n    return this.width * this.height;\n  }\n}\n",[1491],{"type":515,"tag":575,"props":1492,"children":1493},{"__ignoreMap":509},[1494,1510,1544,1572,1600,1607,1614,1638,1665,1672,1679,1703,1730,1737,1744,1760,1803,1810],{"type":515,"tag":579,"props":1495,"children":1496},{"class":581,"line":582},[1497,1501,1506],{"type":515,"tag":579,"props":1498,"children":1499},{"style":586},[1500],{"type":520,"value":589},{"type":515,"tag":579,"props":1502,"children":1503},{"style":592},[1504],{"type":520,"value":1505}," Rectangle",{"type":515,"tag":579,"props":1507,"children":1508},{"style":598},[1509],{"type":520,"value":601},{"type":515,"tag":579,"props":1511,"children":1512},{"class":581,"line":604},[1513,1517,1521,1526,1531,1536,1540],{"type":515,"tag":579,"props":1514,"children":1515},{"style":586},[1516],{"type":520,"value":906},{"type":515,"tag":579,"props":1518,"children":1519},{"style":598},[1520],{"type":520,"value":616},{"type":515,"tag":579,"props":1522,"children":1523},{"style":619},[1524],{"type":520,"value":1525},"width",{"type":515,"tag":579,"props":1527,"children":1528},{"style":598},[1529],{"type":520,"value":1530},",",{"type":515,"tag":579,"props":1532,"children":1533},{"style":619},[1534],{"type":520,"value":1535}," height",{"type":515,"tag":579,"props":1537,"children":1538},{"style":598},[1539],{"type":520,"value":627},{"type":515,"tag":579,"props":1541,"children":1542},{"style":598},[1543],{"type":520,"value":601},{"type":515,"tag":579,"props":1545,"children":1546},{"class":581,"line":634},[1547,1551,1555,1559,1563,1568],{"type":515,"tag":579,"props":1548,"children":1549},{"style":929},[1550],{"type":520,"value":932},{"type":515,"tag":579,"props":1552,"children":1553},{"style":598},[1554],{"type":520,"value":937},{"type":515,"tag":579,"props":1556,"children":1557},{"style":619},[1558],{"type":520,"value":1525},{"type":515,"tag":579,"props":1560,"children":1561},{"style":598},[1562],{"type":520,"value":946},{"type":515,"tag":579,"props":1564,"children":1565},{"style":619},[1566],{"type":520,"value":1567}," width",{"type":515,"tag":579,"props":1569,"children":1570},{"style":598},[1571],{"type":520,"value":956},{"type":515,"tag":579,"props":1573,"children":1574},{"class":581,"line":644},[1575,1579,1583,1588,1592,1596],{"type":515,"tag":579,"props":1576,"children":1577},{"style":929},[1578],{"type":520,"value":932},{"type":515,"tag":579,"props":1580,"children":1581},{"style":598},[1582],{"type":520,"value":937},{"type":515,"tag":579,"props":1584,"children":1585},{"style":619},[1586],{"type":520,"value":1587},"height",{"type":515,"tag":579,"props":1589,"children":1590},{"style":598},[1591],{"type":520,"value":946},{"type":515,"tag":579,"props":1593,"children":1594},{"style":619},[1595],{"type":520,"value":1535},{"type":515,"tag":579,"props":1597,"children":1598},{"style":598},[1599],{"type":520,"value":956},{"type":515,"tag":579,"props":1601,"children":1602},{"class":581,"line":653},[1603],{"type":515,"tag":579,"props":1604,"children":1605},{"style":598},[1606],{"type":520,"value":650},{"type":515,"tag":579,"props":1608,"children":1609},{"class":581,"line":663},[1610],{"type":515,"tag":579,"props":1611,"children":1612},{"emptyLinePlaceholder":657},[1613],{"type":520,"value":660},{"type":515,"tag":579,"props":1615,"children":1616},{"class":581,"line":681},[1617,1622,1626,1630,1634],{"type":515,"tag":579,"props":1618,"children":1619},{"style":608},[1620],{"type":520,"value":1621},"  setWidth",{"type":515,"tag":579,"props":1623,"children":1624},{"style":598},[1625],{"type":520,"value":616},{"type":515,"tag":579,"props":1627,"children":1628},{"style":619},[1629],{"type":520,"value":1525},{"type":515,"tag":579,"props":1631,"children":1632},{"style":598},[1633],{"type":520,"value":627},{"type":515,"tag":579,"props":1635,"children":1636},{"style":598},[1637],{"type":520,"value":601},{"type":515,"tag":579,"props":1639,"children":1640},{"class":581,"line":690},[1641,1645,1649,1653,1657,1661],{"type":515,"tag":579,"props":1642,"children":1643},{"style":929},[1644],{"type":520,"value":932},{"type":515,"tag":579,"props":1646,"children":1647},{"style":598},[1648],{"type":520,"value":937},{"type":515,"tag":579,"props":1650,"children":1651},{"style":619},[1652],{"type":520,"value":1525},{"type":515,"tag":579,"props":1654,"children":1655},{"style":598},[1656],{"type":520,"value":946},{"type":515,"tag":579,"props":1658,"children":1659},{"style":619},[1660],{"type":520,"value":1567},{"type":515,"tag":579,"props":1662,"children":1663},{"style":598},[1664],{"type":520,"value":956},{"type":515,"tag":579,"props":1666,"children":1667},{"class":581,"line":698},[1668],{"type":515,"tag":579,"props":1669,"children":1670},{"style":598},[1671],{"type":520,"value":650},{"type":515,"tag":579,"props":1673,"children":1674},{"class":581,"line":842},[1675],{"type":515,"tag":579,"props":1676,"children":1677},{"emptyLinePlaceholder":657},[1678],{"type":520,"value":660},{"type":515,"tag":579,"props":1680,"children":1681},{"class":581,"line":850},[1682,1687,1691,1695,1699],{"type":515,"tag":579,"props":1683,"children":1684},{"style":608},[1685],{"type":520,"value":1686},"  setHeight",{"type":515,"tag":579,"props":1688,"children":1689},{"style":598},[1690],{"type":520,"value":616},{"type":515,"tag":579,"props":1692,"children":1693},{"style":619},[1694],{"type":520,"value":1587},{"type":515,"tag":579,"props":1696,"children":1697},{"style":598},[1698],{"type":520,"value":627},{"type":515,"tag":579,"props":1700,"children":1701},{"style":598},[1702],{"type":520,"value":601},{"type":515,"tag":579,"props":1704,"children":1705},{"class":581,"line":1060},[1706,1710,1714,1718,1722,1726],{"type":515,"tag":579,"props":1707,"children":1708},{"style":929},[1709],{"type":520,"value":932},{"type":515,"tag":579,"props":1711,"children":1712},{"style":598},[1713],{"type":520,"value":937},{"type":515,"tag":579,"props":1715,"children":1716},{"style":619},[1717],{"type":520,"value":1587},{"type":515,"tag":579,"props":1719,"children":1720},{"style":598},[1721],{"type":520,"value":946},{"type":515,"tag":579,"props":1723,"children":1724},{"style":619},[1725],{"type":520,"value":1535},{"type":515,"tag":579,"props":1727,"children":1728},{"style":598},[1729],{"type":520,"value":956},{"type":515,"tag":579,"props":1731,"children":1732},{"class":581,"line":1086},[1733],{"type":515,"tag":579,"props":1734,"children":1735},{"style":598},[1736],{"type":520,"value":650},{"type":515,"tag":579,"props":1738,"children":1739},{"class":581,"line":1102},[1740],{"type":515,"tag":579,"props":1741,"children":1742},{"emptyLinePlaceholder":657},[1743],{"type":520,"value":660},{"type":515,"tag":579,"props":1745,"children":1746},{"class":581,"line":1139},[1747,1752,1756],{"type":515,"tag":579,"props":1748,"children":1749},{"style":608},[1750],{"type":520,"value":1751},"  getArea",{"type":515,"tag":579,"props":1753,"children":1754},{"style":598},[1755],{"type":520,"value":674},{"type":515,"tag":579,"props":1757,"children":1758},{"style":598},[1759],{"type":520,"value":601},{"type":515,"tag":579,"props":1761,"children":1762},{"class":581,"line":1147},[1763,1769,1774,1778,1782,1787,1791,1795,1799],{"type":515,"tag":579,"props":1764,"children":1766},{"style":1765},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[1767],{"type":520,"value":1768},"    return",{"type":515,"tag":579,"props":1770,"children":1771},{"style":929},[1772],{"type":520,"value":1773}," this",{"type":515,"tag":579,"props":1775,"children":1776},{"style":598},[1777],{"type":520,"value":937},{"type":515,"tag":579,"props":1779,"children":1780},{"style":619},[1781],{"type":520,"value":1525},{"type":515,"tag":579,"props":1783,"children":1784},{"style":586},[1785],{"type":520,"value":1786}," *",{"type":515,"tag":579,"props":1788,"children":1789},{"style":929},[1790],{"type":520,"value":1773},{"type":515,"tag":579,"props":1792,"children":1793},{"style":598},[1794],{"type":520,"value":937},{"type":515,"tag":579,"props":1796,"children":1797},{"style":619},[1798],{"type":520,"value":1587},{"type":515,"tag":579,"props":1800,"children":1801},{"style":598},[1802],{"type":520,"value":956},{"type":515,"tag":579,"props":1804,"children":1805},{"class":581,"line":1155},[1806],{"type":515,"tag":579,"props":1807,"children":1808},{"style":598},[1809],{"type":520,"value":650},{"type":515,"tag":579,"props":1811,"children":1812},{"class":581,"line":1163},[1813],{"type":515,"tag":579,"props":1814,"children":1815},{"style":598},[1816],{"type":520,"value":704},{"type":515,"tag":516,"props":1818,"children":1819},{},[1820],{"type":520,"value":1821},"现在，我们创建了一个子类 Square 继承自 Rectangle，表示正方形。在正方形中，宽和高应该始终相等。",{"type":515,"tag":568,"props":1823,"children":1825},{"className":570,"code":1824,"language":572,"meta":509,"style":509},"class Square extends Rectangle {\n  setWidth(width) {\n    super.setWidth(width);\n    super.setHeight(width);\n  }\n\n  setHeight(height) {\n    super.setWidth(height);\n    super.setHeight(height);\n  }\n}\n",[1826],{"type":515,"tag":575,"props":1827,"children":1828},{"__ignoreMap":509},[1829,1853,1876,1905,1933,1940,1947,1970,1997,2024,2031],{"type":515,"tag":579,"props":1830,"children":1831},{"class":581,"line":582},[1832,1836,1841,1845,1849],{"type":515,"tag":579,"props":1833,"children":1834},{"style":586},[1835],{"type":520,"value":589},{"type":515,"tag":579,"props":1837,"children":1838},{"style":592},[1839],{"type":520,"value":1840}," Square",{"type":515,"tag":579,"props":1842,"children":1843},{"style":586},[1844],{"type":520,"value":1075},{"type":515,"tag":579,"props":1846,"children":1847},{"style":608},[1848],{"type":520,"value":1505},{"type":515,"tag":579,"props":1850,"children":1851},{"style":598},[1852],{"type":520,"value":601},{"type":515,"tag":579,"props":1854,"children":1855},{"class":581,"line":604},[1856,1860,1864,1868,1872],{"type":515,"tag":579,"props":1857,"children":1858},{"style":608},[1859],{"type":520,"value":1621},{"type":515,"tag":579,"props":1861,"children":1862},{"style":598},[1863],{"type":520,"value":616},{"type":515,"tag":579,"props":1865,"children":1866},{"style":619},[1867],{"type":520,"value":1525},{"type":515,"tag":579,"props":1869,"children":1870},{"style":598},[1871],{"type":520,"value":627},{"type":515,"tag":579,"props":1873,"children":1874},{"style":598},[1875],{"type":520,"value":601},{"type":515,"tag":579,"props":1877,"children":1878},{"class":581,"line":634},[1879,1884,1888,1893,1897,1901],{"type":515,"tag":579,"props":1880,"children":1881},{"style":929},[1882],{"type":520,"value":1883},"    super",{"type":515,"tag":579,"props":1885,"children":1886},{"style":598},[1887],{"type":520,"value":937},{"type":515,"tag":579,"props":1889,"children":1890},{"style":608},[1891],{"type":520,"value":1892},"setWidth",{"type":515,"tag":579,"props":1894,"children":1895},{"style":598},[1896],{"type":520,"value":616},{"type":515,"tag":579,"props":1898,"children":1899},{"style":619},[1900],{"type":520,"value":1525},{"type":515,"tag":579,"props":1902,"children":1903},{"style":598},[1904],{"type":520,"value":1036},{"type":515,"tag":579,"props":1906,"children":1907},{"class":581,"line":644},[1908,1912,1916,1921,1925,1929],{"type":515,"tag":579,"props":1909,"children":1910},{"style":929},[1911],{"type":520,"value":1883},{"type":515,"tag":579,"props":1913,"children":1914},{"style":598},[1915],{"type":520,"value":937},{"type":515,"tag":579,"props":1917,"children":1918},{"style":608},[1919],{"type":520,"value":1920},"setHeight",{"type":515,"tag":579,"props":1922,"children":1923},{"style":598},[1924],{"type":520,"value":616},{"type":515,"tag":579,"props":1926,"children":1927},{"style":619},[1928],{"type":520,"value":1525},{"type":515,"tag":579,"props":1930,"children":1931},{"style":598},[1932],{"type":520,"value":1036},{"type":515,"tag":579,"props":1934,"children":1935},{"class":581,"line":653},[1936],{"type":515,"tag":579,"props":1937,"children":1938},{"style":598},[1939],{"type":520,"value":650},{"type":515,"tag":579,"props":1941,"children":1942},{"class":581,"line":663},[1943],{"type":515,"tag":579,"props":1944,"children":1945},{"emptyLinePlaceholder":657},[1946],{"type":520,"value":660},{"type":515,"tag":579,"props":1948,"children":1949},{"class":581,"line":681},[1950,1954,1958,1962,1966],{"type":515,"tag":579,"props":1951,"children":1952},{"style":608},[1953],{"type":520,"value":1686},{"type":515,"tag":579,"props":1955,"children":1956},{"style":598},[1957],{"type":520,"value":616},{"type":515,"tag":579,"props":1959,"children":1960},{"style":619},[1961],{"type":520,"value":1587},{"type":515,"tag":579,"props":1963,"children":1964},{"style":598},[1965],{"type":520,"value":627},{"type":515,"tag":579,"props":1967,"children":1968},{"style":598},[1969],{"type":520,"value":601},{"type":515,"tag":579,"props":1971,"children":1972},{"class":581,"line":690},[1973,1977,1981,1985,1989,1993],{"type":515,"tag":579,"props":1974,"children":1975},{"style":929},[1976],{"type":520,"value":1883},{"type":515,"tag":579,"props":1978,"children":1979},{"style":598},[1980],{"type":520,"value":937},{"type":515,"tag":579,"props":1982,"children":1983},{"style":608},[1984],{"type":520,"value":1892},{"type":515,"tag":579,"props":1986,"children":1987},{"style":598},[1988],{"type":520,"value":616},{"type":515,"tag":579,"props":1990,"children":1991},{"style":619},[1992],{"type":520,"value":1587},{"type":515,"tag":579,"props":1994,"children":1995},{"style":598},[1996],{"type":520,"value":1036},{"type":515,"tag":579,"props":1998,"children":1999},{"class":581,"line":698},[2000,2004,2008,2012,2016,2020],{"type":515,"tag":579,"props":2001,"children":2002},{"style":929},[2003],{"type":520,"value":1883},{"type":515,"tag":579,"props":2005,"children":2006},{"style":598},[2007],{"type":520,"value":937},{"type":515,"tag":579,"props":2009,"children":2010},{"style":608},[2011],{"type":520,"value":1920},{"type":515,"tag":579,"props":2013,"children":2014},{"style":598},[2015],{"type":520,"value":616},{"type":515,"tag":579,"props":2017,"children":2018},{"style":619},[2019],{"type":520,"value":1587},{"type":515,"tag":579,"props":2021,"children":2022},{"style":598},[2023],{"type":520,"value":1036},{"type":515,"tag":579,"props":2025,"children":2026},{"class":581,"line":842},[2027],{"type":515,"tag":579,"props":2028,"children":2029},{"style":598},[2030],{"type":520,"value":650},{"type":515,"tag":579,"props":2032,"children":2033},{"class":581,"line":850},[2034],{"type":515,"tag":579,"props":2035,"children":2036},{"style":598},[2037],{"type":520,"value":704},{"type":515,"tag":516,"props":2039,"children":2040},{},[2041],{"type":520,"value":2042},"这里的问题是，Square 子类在修改宽度或高度时，通过覆写 setWidth 和 setHeight 方法，强制宽和高相等，这与基类的行为不一致。如果在需要 Rectangle 的地方使用了 Square，可能会导致程序逻辑错误。",{"type":515,"tag":516,"props":2044,"children":2045},{},[2046],{"type":520,"value":2047},"这违反了里氏替换原则，因为子类修改了父类的预期行为。为了符合里氏替换原则，可能需要重新设计类的继承结构，或者使用更精确的命名来表达实际意图。",{"type":515,"tag":557,"props":2049,"children":2051},{"id":2050},"接口隔离原则",[2052],{"type":520,"value":2050},{"type":515,"tag":516,"props":2054,"children":2055},{},[2056],{"type":520,"value":2057},"接口隔离原则（Interface Segregation Principle，ISP） 是 SOLID 原则之一，它强调一个类不应该被强迫实现它不需要的接口。简而言之，一个类对另一个类的依赖应该建立在最小的接口上。",{"type":515,"tag":516,"props":2059,"children":2060},{},[2061],{"type":520,"value":2062},"在通俗的语言中，接口隔离原则告诉我们不应该让一个类依赖它不需要的接口，否则会导致类需要实现一些它根本不需要的方法。",{"type":515,"tag":516,"props":2064,"children":2065},{},[2066],{"type":520,"value":2067},"举例说明，假设我们有一个动物园的系统，其中有两种动物，一种会飞，一种会游泳：",{"type":515,"tag":568,"props":2069,"children":2071},{"className":570,"code":2070,"language":572,"meta":509,"style":509},"// 不遵循接口隔离原则的设计\nclass Bird {\n  fly() {\n    // 实现飞行逻辑\n  }\n\n  swim() {\n    // 这是一个鸟类不需要的方法，违反接口隔离原则\n  }\n}\n\nclass Fish {\n  swim() {\n    // 实现游泳逻辑\n  }\n\n  fly() {\n    // 这是一个鱼类不需要的方法，违反接口隔离原则\n  }\n}\n",[2072],{"type":515,"tag":575,"props":2073,"children":2074},{"__ignoreMap":509},[2075,2083,2099,2115,2123,2130,2137,2153,2161,2168,2175,2182,2198,2213,2221,2228,2235,2250,2258,2265],{"type":515,"tag":579,"props":2076,"children":2077},{"class":581,"line":582},[2078],{"type":515,"tag":579,"props":2079,"children":2080},{"style":638},[2081],{"type":520,"value":2082},"// 不遵循接口隔离原则的设计\n",{"type":515,"tag":579,"props":2084,"children":2085},{"class":581,"line":604},[2086,2090,2095],{"type":515,"tag":579,"props":2087,"children":2088},{"style":586},[2089],{"type":520,"value":589},{"type":515,"tag":579,"props":2091,"children":2092},{"style":592},[2093],{"type":520,"value":2094}," Bird",{"type":515,"tag":579,"props":2096,"children":2097},{"style":598},[2098],{"type":520,"value":601},{"type":515,"tag":579,"props":2100,"children":2101},{"class":581,"line":634},[2102,2107,2111],{"type":515,"tag":579,"props":2103,"children":2104},{"style":608},[2105],{"type":520,"value":2106},"  fly",{"type":515,"tag":579,"props":2108,"children":2109},{"style":598},[2110],{"type":520,"value":674},{"type":515,"tag":579,"props":2112,"children":2113},{"style":598},[2114],{"type":520,"value":601},{"type":515,"tag":579,"props":2116,"children":2117},{"class":581,"line":644},[2118],{"type":515,"tag":579,"props":2119,"children":2120},{"style":638},[2121],{"type":520,"value":2122},"    // 实现飞行逻辑\n",{"type":515,"tag":579,"props":2124,"children":2125},{"class":581,"line":653},[2126],{"type":515,"tag":579,"props":2127,"children":2128},{"style":598},[2129],{"type":520,"value":650},{"type":515,"tag":579,"props":2131,"children":2132},{"class":581,"line":663},[2133],{"type":515,"tag":579,"props":2134,"children":2135},{"emptyLinePlaceholder":657},[2136],{"type":520,"value":660},{"type":515,"tag":579,"props":2138,"children":2139},{"class":581,"line":681},[2140,2145,2149],{"type":515,"tag":579,"props":2141,"children":2142},{"style":608},[2143],{"type":520,"value":2144},"  swim",{"type":515,"tag":579,"props":2146,"children":2147},{"style":598},[2148],{"type":520,"value":674},{"type":515,"tag":579,"props":2150,"children":2151},{"style":598},[2152],{"type":520,"value":601},{"type":515,"tag":579,"props":2154,"children":2155},{"class":581,"line":690},[2156],{"type":515,"tag":579,"props":2157,"children":2158},{"style":638},[2159],{"type":520,"value":2160},"    // 这是一个鸟类不需要的方法，违反接口隔离原则\n",{"type":515,"tag":579,"props":2162,"children":2163},{"class":581,"line":698},[2164],{"type":515,"tag":579,"props":2165,"children":2166},{"style":598},[2167],{"type":520,"value":650},{"type":515,"tag":579,"props":2169,"children":2170},{"class":581,"line":842},[2171],{"type":515,"tag":579,"props":2172,"children":2173},{"style":598},[2174],{"type":520,"value":704},{"type":515,"tag":579,"props":2176,"children":2177},{"class":581,"line":850},[2178],{"type":515,"tag":579,"props":2179,"children":2180},{"emptyLinePlaceholder":657},[2181],{"type":520,"value":660},{"type":515,"tag":579,"props":2183,"children":2184},{"class":581,"line":1060},[2185,2189,2194],{"type":515,"tag":579,"props":2186,"children":2187},{"style":586},[2188],{"type":520,"value":589},{"type":515,"tag":579,"props":2190,"children":2191},{"style":592},[2192],{"type":520,"value":2193}," Fish",{"type":515,"tag":579,"props":2195,"children":2196},{"style":598},[2197],{"type":520,"value":601},{"type":515,"tag":579,"props":2199,"children":2200},{"class":581,"line":1086},[2201,2205,2209],{"type":515,"tag":579,"props":2202,"children":2203},{"style":608},[2204],{"type":520,"value":2144},{"type":515,"tag":579,"props":2206,"children":2207},{"style":598},[2208],{"type":520,"value":674},{"type":515,"tag":579,"props":2210,"children":2211},{"style":598},[2212],{"type":520,"value":601},{"type":515,"tag":579,"props":2214,"children":2215},{"class":581,"line":1102},[2216],{"type":515,"tag":579,"props":2217,"children":2218},{"style":638},[2219],{"type":520,"value":2220},"    // 实现游泳逻辑\n",{"type":515,"tag":579,"props":2222,"children":2223},{"class":581,"line":1139},[2224],{"type":515,"tag":579,"props":2225,"children":2226},{"style":598},[2227],{"type":520,"value":650},{"type":515,"tag":579,"props":2229,"children":2230},{"class":581,"line":1147},[2231],{"type":515,"tag":579,"props":2232,"children":2233},{"emptyLinePlaceholder":657},[2234],{"type":520,"value":660},{"type":515,"tag":579,"props":2236,"children":2237},{"class":581,"line":1155},[2238,2242,2246],{"type":515,"tag":579,"props":2239,"children":2240},{"style":608},[2241],{"type":520,"value":2106},{"type":515,"tag":579,"props":2243,"children":2244},{"style":598},[2245],{"type":520,"value":674},{"type":515,"tag":579,"props":2247,"children":2248},{"style":598},[2249],{"type":520,"value":601},{"type":515,"tag":579,"props":2251,"children":2252},{"class":581,"line":1163},[2253],{"type":515,"tag":579,"props":2254,"children":2255},{"style":638},[2256],{"type":520,"value":2257},"    // 这是一个鱼类不需要的方法，违反接口隔离原则\n",{"type":515,"tag":579,"props":2259,"children":2260},{"class":581,"line":1188},[2261],{"type":515,"tag":579,"props":2262,"children":2263},{"style":598},[2264],{"type":520,"value":650},{"type":515,"tag":579,"props":2266,"children":2267},{"class":581,"line":1204},[2268],{"type":515,"tag":579,"props":2269,"children":2270},{"style":598},[2271],{"type":520,"value":704},{"type":515,"tag":516,"props":2273,"children":2274},{},[2275],{"type":520,"value":2276},"在这个例子中，Bird 类实现了 fly 和 swim 两个方法，而 Fish 类也实现了 swim 和 fly 两个方法。这违反了接口隔离原则，因为每个类都被迫实现了它们不需要的方法。",{"type":515,"tag":516,"props":2278,"children":2279},{},[2280],{"type":520,"value":2281},"为了符合接口隔离原则，我们可以将接口拆分成更小的部分，让每个类只实现它们需要的方法：",{"type":515,"tag":568,"props":2283,"children":2285},{"className":570,"code":2284,"language":572,"meta":509,"style":509},"// 遵循接口隔离原则的设计\nclass Bird {\n  fly() {\n    // 实现飞行逻辑\n  }\n}\n\nclass Fish {\n  swim() {\n    // 实现游泳逻辑\n  }\n}\n",[2286],{"type":515,"tag":575,"props":2287,"children":2288},{"__ignoreMap":509},[2289,2297,2312,2327,2334,2341,2348,2355,2370,2385,2392,2399],{"type":515,"tag":579,"props":2290,"children":2291},{"class":581,"line":582},[2292],{"type":515,"tag":579,"props":2293,"children":2294},{"style":638},[2295],{"type":520,"value":2296},"// 遵循接口隔离原则的设计\n",{"type":515,"tag":579,"props":2298,"children":2299},{"class":581,"line":604},[2300,2304,2308],{"type":515,"tag":579,"props":2301,"children":2302},{"style":586},[2303],{"type":520,"value":589},{"type":515,"tag":579,"props":2305,"children":2306},{"style":592},[2307],{"type":520,"value":2094},{"type":515,"tag":579,"props":2309,"children":2310},{"style":598},[2311],{"type":520,"value":601},{"type":515,"tag":579,"props":2313,"children":2314},{"class":581,"line":634},[2315,2319,2323],{"type":515,"tag":579,"props":2316,"children":2317},{"style":608},[2318],{"type":520,"value":2106},{"type":515,"tag":579,"props":2320,"children":2321},{"style":598},[2322],{"type":520,"value":674},{"type":515,"tag":579,"props":2324,"children":2325},{"style":598},[2326],{"type":520,"value":601},{"type":515,"tag":579,"props":2328,"children":2329},{"class":581,"line":644},[2330],{"type":515,"tag":579,"props":2331,"children":2332},{"style":638},[2333],{"type":520,"value":2122},{"type":515,"tag":579,"props":2335,"children":2336},{"class":581,"line":653},[2337],{"type":515,"tag":579,"props":2338,"children":2339},{"style":598},[2340],{"type":520,"value":650},{"type":515,"tag":579,"props":2342,"children":2343},{"class":581,"line":663},[2344],{"type":515,"tag":579,"props":2345,"children":2346},{"style":598},[2347],{"type":520,"value":704},{"type":515,"tag":579,"props":2349,"children":2350},{"class":581,"line":681},[2351],{"type":515,"tag":579,"props":2352,"children":2353},{"emptyLinePlaceholder":657},[2354],{"type":520,"value":660},{"type":515,"tag":579,"props":2356,"children":2357},{"class":581,"line":690},[2358,2362,2366],{"type":515,"tag":579,"props":2359,"children":2360},{"style":586},[2361],{"type":520,"value":589},{"type":515,"tag":579,"props":2363,"children":2364},{"style":592},[2365],{"type":520,"value":2193},{"type":515,"tag":579,"props":2367,"children":2368},{"style":598},[2369],{"type":520,"value":601},{"type":515,"tag":579,"props":2371,"children":2372},{"class":581,"line":698},[2373,2377,2381],{"type":515,"tag":579,"props":2374,"children":2375},{"style":608},[2376],{"type":520,"value":2144},{"type":515,"tag":579,"props":2378,"children":2379},{"style":598},[2380],{"type":520,"value":674},{"type":515,"tag":579,"props":2382,"children":2383},{"style":598},[2384],{"type":520,"value":601},{"type":515,"tag":579,"props":2386,"children":2387},{"class":581,"line":842},[2388],{"type":515,"tag":579,"props":2389,"children":2390},{"style":638},[2391],{"type":520,"value":2220},{"type":515,"tag":579,"props":2393,"children":2394},{"class":581,"line":850},[2395],{"type":515,"tag":579,"props":2396,"children":2397},{"style":598},[2398],{"type":520,"value":650},{"type":515,"tag":579,"props":2400,"children":2401},{"class":581,"line":1060},[2402],{"type":515,"tag":579,"props":2403,"children":2404},{"style":598},[2405],{"type":520,"value":704},{"type":515,"tag":516,"props":2407,"children":2408},{},[2409],{"type":520,"value":2410},"这样，每个类都只依赖于它们需要的接口，不再强迫实现不必要的方法。接口隔离原则的目标是使接口更具体，更贴近类的实际需求，从而提高系统的灵活性和可维护性。",{"type":515,"tag":557,"props":2412,"children":2414},{"id":2413},"依赖反转原则",[2415],{"type":520,"value":2413},{"type":515,"tag":516,"props":2417,"children":2418},{},[2419],{"type":520,"value":2420},"依赖反转原则（Dependency Inversion Principle，DIP） 是 SOLID 原则之一，它强调高层模块不应该依赖于低层模块，而两者都应该依赖于抽象。抽象不应该依赖于细节，细节应该依赖于抽象。简而言之，依赖反转原则倡导通过抽象来解耦高层和低层模块之间的依赖关系。",{"type":515,"tag":516,"props":2422,"children":2423},{},[2424],{"type":520,"value":2425},"举例说明，考虑一个简单的报告生成系统，有一个高层模块 ReportGenerator 负责生成报告：",{"type":515,"tag":568,"props":2427,"children":2429},{"className":570,"code":2428,"language":572,"meta":509,"style":509},"// 不遵循依赖反转原则的设计\nclass ReportGenerator {\n  constructor() {\n    this.pdfGenerator = new PDFGenerator(); // 依赖于具体的 PDF 生成器\n  }\n\n  generateReport() {\n    // 生成报告的逻辑\n    this.pdfGenerator.generatePDF();\n  }\n}\n\nclass PDFGenerator {\n  generatePDF() {\n    // 具体的 PDF 生成逻辑\n  }\n}\n",[2430],{"type":515,"tag":575,"props":2431,"children":2432},{"__ignoreMap":509},[2433,2441,2457,2472,2512,2519,2526,2542,2550,2579,2586,2593,2600,2615,2631,2639,2646],{"type":515,"tag":579,"props":2434,"children":2435},{"class":581,"line":582},[2436],{"type":515,"tag":579,"props":2437,"children":2438},{"style":638},[2439],{"type":520,"value":2440},"// 不遵循依赖反转原则的设计\n",{"type":515,"tag":579,"props":2442,"children":2443},{"class":581,"line":604},[2444,2448,2453],{"type":515,"tag":579,"props":2445,"children":2446},{"style":586},[2447],{"type":520,"value":589},{"type":515,"tag":579,"props":2449,"children":2450},{"style":592},[2451],{"type":520,"value":2452}," ReportGenerator",{"type":515,"tag":579,"props":2454,"children":2455},{"style":598},[2456],{"type":520,"value":601},{"type":515,"tag":579,"props":2458,"children":2459},{"class":581,"line":634},[2460,2464,2468],{"type":515,"tag":579,"props":2461,"children":2462},{"style":586},[2463],{"type":520,"value":906},{"type":515,"tag":579,"props":2465,"children":2466},{"style":598},[2467],{"type":520,"value":674},{"type":515,"tag":579,"props":2469,"children":2470},{"style":598},[2471],{"type":520,"value":601},{"type":515,"tag":579,"props":2473,"children":2474},{"class":581,"line":644},[2475,2479,2483,2488,2492,2497,2502,2507],{"type":515,"tag":579,"props":2476,"children":2477},{"style":929},[2478],{"type":520,"value":932},{"type":515,"tag":579,"props":2480,"children":2481},{"style":598},[2482],{"type":520,"value":937},{"type":515,"tag":579,"props":2484,"children":2485},{"style":619},[2486],{"type":520,"value":2487},"pdfGenerator",{"type":515,"tag":579,"props":2489,"children":2490},{"style":598},[2491],{"type":520,"value":946},{"type":515,"tag":579,"props":2493,"children":2494},{"style":586},[2495],{"type":520,"value":2496}," new",{"type":515,"tag":579,"props":2498,"children":2499},{"style":608},[2500],{"type":520,"value":2501}," PDFGenerator",{"type":515,"tag":579,"props":2503,"children":2504},{"style":598},[2505],{"type":520,"value":2506},"();",{"type":515,"tag":579,"props":2508,"children":2509},{"style":638},[2510],{"type":520,"value":2511}," // 依赖于具体的 PDF 生成器\n",{"type":515,"tag":579,"props":2513,"children":2514},{"class":581,"line":653},[2515],{"type":515,"tag":579,"props":2516,"children":2517},{"style":598},[2518],{"type":520,"value":650},{"type":515,"tag":579,"props":2520,"children":2521},{"class":581,"line":663},[2522],{"type":515,"tag":579,"props":2523,"children":2524},{"emptyLinePlaceholder":657},[2525],{"type":520,"value":660},{"type":515,"tag":579,"props":2527,"children":2528},{"class":581,"line":681},[2529,2534,2538],{"type":515,"tag":579,"props":2530,"children":2531},{"style":608},[2532],{"type":520,"value":2533},"  generateReport",{"type":515,"tag":579,"props":2535,"children":2536},{"style":598},[2537],{"type":520,"value":674},{"type":515,"tag":579,"props":2539,"children":2540},{"style":598},[2541],{"type":520,"value":601},{"type":515,"tag":579,"props":2543,"children":2544},{"class":581,"line":690},[2545],{"type":515,"tag":579,"props":2546,"children":2547},{"style":638},[2548],{"type":520,"value":2549},"    // 生成报告的逻辑\n",{"type":515,"tag":579,"props":2551,"children":2552},{"class":581,"line":698},[2553,2557,2561,2565,2569,2574],{"type":515,"tag":579,"props":2554,"children":2555},{"style":929},[2556],{"type":520,"value":932},{"type":515,"tag":579,"props":2558,"children":2559},{"style":598},[2560],{"type":520,"value":937},{"type":515,"tag":579,"props":2562,"children":2563},{"style":619},[2564],{"type":520,"value":2487},{"type":515,"tag":579,"props":2566,"children":2567},{"style":598},[2568],{"type":520,"value":937},{"type":515,"tag":579,"props":2570,"children":2571},{"style":608},[2572],{"type":520,"value":2573},"generatePDF",{"type":515,"tag":579,"props":2575,"children":2576},{"style":598},[2577],{"type":520,"value":2578},"();\n",{"type":515,"tag":579,"props":2580,"children":2581},{"class":581,"line":842},[2582],{"type":515,"tag":579,"props":2583,"children":2584},{"style":598},[2585],{"type":520,"value":650},{"type":515,"tag":579,"props":2587,"children":2588},{"class":581,"line":850},[2589],{"type":515,"tag":579,"props":2590,"children":2591},{"style":598},[2592],{"type":520,"value":704},{"type":515,"tag":579,"props":2594,"children":2595},{"class":581,"line":1060},[2596],{"type":515,"tag":579,"props":2597,"children":2598},{"emptyLinePlaceholder":657},[2599],{"type":520,"value":660},{"type":515,"tag":579,"props":2601,"children":2602},{"class":581,"line":1086},[2603,2607,2611],{"type":515,"tag":579,"props":2604,"children":2605},{"style":586},[2606],{"type":520,"value":589},{"type":515,"tag":579,"props":2608,"children":2609},{"style":592},[2610],{"type":520,"value":2501},{"type":515,"tag":579,"props":2612,"children":2613},{"style":598},[2614],{"type":520,"value":601},{"type":515,"tag":579,"props":2616,"children":2617},{"class":581,"line":1102},[2618,2623,2627],{"type":515,"tag":579,"props":2619,"children":2620},{"style":608},[2621],{"type":520,"value":2622},"  generatePDF",{"type":515,"tag":579,"props":2624,"children":2625},{"style":598},[2626],{"type":520,"value":674},{"type":515,"tag":579,"props":2628,"children":2629},{"style":598},[2630],{"type":520,"value":601},{"type":515,"tag":579,"props":2632,"children":2633},{"class":581,"line":1139},[2634],{"type":515,"tag":579,"props":2635,"children":2636},{"style":638},[2637],{"type":520,"value":2638},"    // 具体的 PDF 生成逻辑\n",{"type":515,"tag":579,"props":2640,"children":2641},{"class":581,"line":1147},[2642],{"type":515,"tag":579,"props":2643,"children":2644},{"style":598},[2645],{"type":520,"value":650},{"type":515,"tag":579,"props":2647,"children":2648},{"class":581,"line":1155},[2649],{"type":515,"tag":579,"props":2650,"children":2651},{"style":598},[2652],{"type":520,"value":704},{"type":515,"tag":516,"props":2654,"children":2655},{},[2656],{"type":520,"value":2657},"在这个设计中，ReportGenerator 直接依赖于具体的 PDFGenerator 类，这违反了依赖反转原则。如果我们想使用其他类型的报告生成器，例如 HTMLGenerator，就需要修改 ReportGenerator 类。",{"type":515,"tag":516,"props":2659,"children":2660},{},[2661],{"type":520,"value":2662},"为了符合依赖反转原则，我们应该通过抽象来解耦高层和低层模块：",{"type":515,"tag":568,"props":2664,"children":2666},{"className":570,"code":2665,"language":572,"meta":509,"style":509},"// 遵循依赖反转原则的设计\nclass ReportGenerator {\n  constructor(generator) {\n    this.generator = generator; // 依赖于抽象的报告生成器接口\n  }\n\n  generateReport() {\n    // 生成报告的逻辑\n    this.generator.generate();\n  }\n}\n\nclass PDFGenerator {\n  generate() {\n    // 具体的 PDF 生成逻辑\n  }\n}\n\nclass HTMLGenerator {\n  generate() {\n    // 具体的 HTML 生成逻辑\n  }\n}\n",[2667],{"type":515,"tag":575,"props":2668,"children":2669},{"__ignoreMap":509},[2670,2678,2693,2717,2751,2758,2765,2780,2787,2815,2822,2829,2836,2851,2867,2874,2881,2888,2895,2911,2926,2934,2941],{"type":515,"tag":579,"props":2671,"children":2672},{"class":581,"line":582},[2673],{"type":515,"tag":579,"props":2674,"children":2675},{"style":638},[2676],{"type":520,"value":2677},"// 遵循依赖反转原则的设计\n",{"type":515,"tag":579,"props":2679,"children":2680},{"class":581,"line":604},[2681,2685,2689],{"type":515,"tag":579,"props":2682,"children":2683},{"style":586},[2684],{"type":520,"value":589},{"type":515,"tag":579,"props":2686,"children":2687},{"style":592},[2688],{"type":520,"value":2452},{"type":515,"tag":579,"props":2690,"children":2691},{"style":598},[2692],{"type":520,"value":601},{"type":515,"tag":579,"props":2694,"children":2695},{"class":581,"line":634},[2696,2700,2704,2709,2713],{"type":515,"tag":579,"props":2697,"children":2698},{"style":586},[2699],{"type":520,"value":906},{"type":515,"tag":579,"props":2701,"children":2702},{"style":598},[2703],{"type":520,"value":616},{"type":515,"tag":579,"props":2705,"children":2706},{"style":619},[2707],{"type":520,"value":2708},"generator",{"type":515,"tag":579,"props":2710,"children":2711},{"style":598},[2712],{"type":520,"value":627},{"type":515,"tag":579,"props":2714,"children":2715},{"style":598},[2716],{"type":520,"value":601},{"type":515,"tag":579,"props":2718,"children":2719},{"class":581,"line":644},[2720,2724,2728,2732,2736,2741,2746],{"type":515,"tag":579,"props":2721,"children":2722},{"style":929},[2723],{"type":520,"value":932},{"type":515,"tag":579,"props":2725,"children":2726},{"style":598},[2727],{"type":520,"value":937},{"type":515,"tag":579,"props":2729,"children":2730},{"style":619},[2731],{"type":520,"value":2708},{"type":515,"tag":579,"props":2733,"children":2734},{"style":598},[2735],{"type":520,"value":946},{"type":515,"tag":579,"props":2737,"children":2738},{"style":619},[2739],{"type":520,"value":2740}," generator",{"type":515,"tag":579,"props":2742,"children":2743},{"style":598},[2744],{"type":520,"value":2745},";",{"type":515,"tag":579,"props":2747,"children":2748},{"style":638},[2749],{"type":520,"value":2750}," // 依赖于抽象的报告生成器接口\n",{"type":515,"tag":579,"props":2752,"children":2753},{"class":581,"line":653},[2754],{"type":515,"tag":579,"props":2755,"children":2756},{"style":598},[2757],{"type":520,"value":650},{"type":515,"tag":579,"props":2759,"children":2760},{"class":581,"line":663},[2761],{"type":515,"tag":579,"props":2762,"children":2763},{"emptyLinePlaceholder":657},[2764],{"type":520,"value":660},{"type":515,"tag":579,"props":2766,"children":2767},{"class":581,"line":681},[2768,2772,2776],{"type":515,"tag":579,"props":2769,"children":2770},{"style":608},[2771],{"type":520,"value":2533},{"type":515,"tag":579,"props":2773,"children":2774},{"style":598},[2775],{"type":520,"value":674},{"type":515,"tag":579,"props":2777,"children":2778},{"style":598},[2779],{"type":520,"value":601},{"type":515,"tag":579,"props":2781,"children":2782},{"class":581,"line":690},[2783],{"type":515,"tag":579,"props":2784,"children":2785},{"style":638},[2786],{"type":520,"value":2549},{"type":515,"tag":579,"props":2788,"children":2789},{"class":581,"line":698},[2790,2794,2798,2802,2806,2811],{"type":515,"tag":579,"props":2791,"children":2792},{"style":929},[2793],{"type":520,"value":932},{"type":515,"tag":579,"props":2795,"children":2796},{"style":598},[2797],{"type":520,"value":937},{"type":515,"tag":579,"props":2799,"children":2800},{"style":619},[2801],{"type":520,"value":2708},{"type":515,"tag":579,"props":2803,"children":2804},{"style":598},[2805],{"type":520,"value":937},{"type":515,"tag":579,"props":2807,"children":2808},{"style":608},[2809],{"type":520,"value":2810},"generate",{"type":515,"tag":579,"props":2812,"children":2813},{"style":598},[2814],{"type":520,"value":2578},{"type":515,"tag":579,"props":2816,"children":2817},{"class":581,"line":842},[2818],{"type":515,"tag":579,"props":2819,"children":2820},{"style":598},[2821],{"type":520,"value":650},{"type":515,"tag":579,"props":2823,"children":2824},{"class":581,"line":850},[2825],{"type":515,"tag":579,"props":2826,"children":2827},{"style":598},[2828],{"type":520,"value":704},{"type":515,"tag":579,"props":2830,"children":2831},{"class":581,"line":1060},[2832],{"type":515,"tag":579,"props":2833,"children":2834},{"emptyLinePlaceholder":657},[2835],{"type":520,"value":660},{"type":515,"tag":579,"props":2837,"children":2838},{"class":581,"line":1086},[2839,2843,2847],{"type":515,"tag":579,"props":2840,"children":2841},{"style":586},[2842],{"type":520,"value":589},{"type":515,"tag":579,"props":2844,"children":2845},{"style":592},[2846],{"type":520,"value":2501},{"type":515,"tag":579,"props":2848,"children":2849},{"style":598},[2850],{"type":520,"value":601},{"type":515,"tag":579,"props":2852,"children":2853},{"class":581,"line":1102},[2854,2859,2863],{"type":515,"tag":579,"props":2855,"children":2856},{"style":608},[2857],{"type":520,"value":2858},"  generate",{"type":515,"tag":579,"props":2860,"children":2861},{"style":598},[2862],{"type":520,"value":674},{"type":515,"tag":579,"props":2864,"children":2865},{"style":598},[2866],{"type":520,"value":601},{"type":515,"tag":579,"props":2868,"children":2869},{"class":581,"line":1139},[2870],{"type":515,"tag":579,"props":2871,"children":2872},{"style":638},[2873],{"type":520,"value":2638},{"type":515,"tag":579,"props":2875,"children":2876},{"class":581,"line":1147},[2877],{"type":515,"tag":579,"props":2878,"children":2879},{"style":598},[2880],{"type":520,"value":650},{"type":515,"tag":579,"props":2882,"children":2883},{"class":581,"line":1155},[2884],{"type":515,"tag":579,"props":2885,"children":2886},{"style":598},[2887],{"type":520,"value":704},{"type":515,"tag":579,"props":2889,"children":2890},{"class":581,"line":1163},[2891],{"type":515,"tag":579,"props":2892,"children":2893},{"emptyLinePlaceholder":657},[2894],{"type":520,"value":660},{"type":515,"tag":579,"props":2896,"children":2897},{"class":581,"line":1188},[2898,2902,2907],{"type":515,"tag":579,"props":2899,"children":2900},{"style":586},[2901],{"type":520,"value":589},{"type":515,"tag":579,"props":2903,"children":2904},{"style":592},[2905],{"type":520,"value":2906}," HTMLGenerator",{"type":515,"tag":579,"props":2908,"children":2909},{"style":598},[2910],{"type":520,"value":601},{"type":515,"tag":579,"props":2912,"children":2913},{"class":581,"line":1204},[2914,2918,2922],{"type":515,"tag":579,"props":2915,"children":2916},{"style":608},[2917],{"type":520,"value":2858},{"type":515,"tag":579,"props":2919,"children":2920},{"style":598},[2921],{"type":520,"value":674},{"type":515,"tag":579,"props":2923,"children":2924},{"style":598},[2925],{"type":520,"value":601},{"type":515,"tag":579,"props":2927,"children":2928},{"class":581,"line":1241},[2929],{"type":515,"tag":579,"props":2930,"children":2931},{"style":638},[2932],{"type":520,"value":2933},"    // 具体的 HTML 生成逻辑\n",{"type":515,"tag":579,"props":2935,"children":2936},{"class":581,"line":1249},[2937],{"type":515,"tag":579,"props":2938,"children":2939},{"style":598},[2940],{"type":520,"value":650},{"type":515,"tag":579,"props":2942,"children":2944},{"class":581,"line":2943},23,[2945],{"type":515,"tag":579,"props":2946,"children":2947},{"style":598},[2948],{"type":520,"value":704},{"type":515,"tag":516,"props":2950,"children":2951},{},[2952],{"type":520,"value":2953},"现在，ReportGenerator 不再直接依赖于具体的实现，而是依赖于抽象的报告生成器接口。这使得我们可以轻松地扩展系统，例如添加新的报告生成器，而不需要修改 ReportGenerator 类。这样的设计更加灵活，符合依赖反转原则。",{"type":515,"tag":2955,"props":2956,"children":2957},"style",{},[2958],{"type":520,"value":2959},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":509,"searchDepth":653,"depth":653,"links":2961},[2962,2963,2964,2965,2966],{"id":559,"depth":604,"text":559},{"id":863,"depth":604,"text":863},{"id":1469,"depth":604,"text":1469},{"id":2050,"depth":604,"text":2050},{"id":2413,"depth":604,"text":2413},"markdown","content:4.design-mode:1.thoughts-principles.md","content","4.design-mode/1.thoughts-principles.md","md",[2973,2974],{"_path":484,"title":483,"description":509},{"_path":501,"title":500,"description":509},1714058130015]