[{"data":1,"prerenderedAt":2969},["Reactive",2],{"navigation":3,"/design-mode/thoughts-principles":500,"/design-mode/thoughts-principles-surround":2966},[4,269,298,468,476,485],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":467},"代码考核","/code-assessment",[302,367,460],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369,"children":370},"业务场景","/code-assessment/scene",[371,396,406,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457],{"title":372,"_path":373,"children":374},"Promise","/code-assessment/scene/promise",[375,378,381,384,387,390,393],{"title":376,"_path":377},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":379,"_path":380},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":382,"_path":383},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":385,"_path":386},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":388,"_path":389},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":391,"_path":392},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":394,"_path":395},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":397,"_path":398,"children":399},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[400,403],{"title":401,"_path":402},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":404,"_path":405},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":407,"_path":408},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":410,"_path":411},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":413,"_path":414},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":416,"_path":417},"倒计时","/code-assessment/scene/countdown",{"title":419,"_path":420},"日期格式化","/code-assessment/scene/date-format",{"title":422,"_path":423},"实现前端路由","/code-assessment/scene/frontend-route",{"title":425,"_path":426},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":428,"_path":429},"lodash.get","/code-assessment/scene/lodash-get",{"title":431,"_path":432},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":434,"_path":435},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":437,"_path":438},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":440,"_path":441},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":443,"_path":444},"随机数","/code-assessment/scene/random-number",{"title":446,"_path":447},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":449,"_path":450},"sku 算法实现","/code-assessment/scene/sku",{"title":452,"_path":453},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":455,"_path":456},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":458,"_path":459},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":461,"_path":462,"children":463},"Ts 类型挑战","/code-assessment/type-challeges",[464],{"title":465,"_path":466},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":469,"_path":470,"children":471,"icon":475},"项目","/project",[472],{"title":473,"_path":474},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":477,"_path":478,"children":479,"icon":484},"设计模式","/design-mode",[480,481],{"title":477,"_path":478},{"title":482,"_path":483},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":486,"_path":487,"children":488,"icon":499},"后端语言","/backend-languages",[489],{"title":490,"_path":491,"children":492},"Python","/backend-languages/python",[493,496],{"title":494,"_path":495},"基础","/backend-languages/python/base",{"title":497,"_path":498},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":483,"_dir":501,"_draft":502,"_partial":502,"_locale":503,"title":482,"description":504,"body":505,"_type":2961,"_id":2962,"_source":2963,"_file":2964,"_extension":2965},"design-mode",false,"","SOLID 是一个面向对象设计和编程中的五个基本原则的缩写，它们旨在帮助开发者设计更加灵活、可维护和可扩展的软件系统。这些原则由 Robert C. Martin 等人提出，它们包括以下五个原则：",{"type":506,"children":507,"toc":2954},"root",[508,515,545,550,556,561,699,704,718,723,850,855,860,865,870,1249,1254,1259,1451,1456,1461,1466,1471,1476,1481,1811,1816,2032,2037,2042,2047,2052,2057,2062,2266,2271,2276,2400,2405,2410,2415,2420,2647,2652,2657,2943,2948],{"type":509,"tag":510,"props":511,"children":512},"element","p",{},[513],{"type":514,"value":504},"text",{"type":509,"tag":516,"props":517,"children":518},"ul",{},[519,525,530,535,540],{"type":509,"tag":520,"props":521,"children":522},"li",{},[523],{"type":514,"value":524},"单一职责原则（Single Responsibility Principle，SRP）",{"type":509,"tag":520,"props":526,"children":527},{},[528],{"type":514,"value":529},"开放/封闭原则（Open/Closed Principle，OCP）",{"type":509,"tag":520,"props":531,"children":532},{},[533],{"type":514,"value":534},"里氏替换原则（Liskov Substitution Principle，LSP）",{"type":509,"tag":520,"props":536,"children":537},{},[538],{"type":514,"value":539},"接口隔离原则（Interface Segregation Principle，ISP）",{"type":509,"tag":520,"props":541,"children":542},{},[543],{"type":514,"value":544},"依赖反转原则（Dependency Inversion Principle，DIP）",{"type":509,"tag":510,"props":546,"children":547},{},[548],{"type":514,"value":549},"这些原则共同促使开发者创建具有高内聚、低耦合、易扩展和易维护性的软件系统。遵循这些原则有助于构建更健壮的面向对象系统，提高代码质量和可维护性。",{"type":509,"tag":551,"props":552,"children":554},"h2",{"id":553},"单一职责原则",[555],{"type":514,"value":553},{"type":509,"tag":510,"props":557,"children":558},{},[559],{"type":514,"value":560},"单一职责原则（Single Responsibility Principle，SRP）要求一个类或者模块只负责完成一个职责（或者功能）。 假设我们有一个简单的厨师类，它负责烹饪和洗碗两个职责：",{"type":509,"tag":562,"props":563,"children":567},"pre",{"className":564,"code":565,"language":566,"meta":503,"style":503},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","class Chef {\n  cookDish(dish) {\n    // 烹饪菜品的具体实现\n  }\n\n  washDishes() {\n    // 洗碗的具体实现\n  }\n}\n","js",[568],{"type":509,"tag":569,"props":570,"children":571},"code",{"__ignoreMap":503},[572,596,626,636,645,655,673,682,690],{"type":509,"tag":573,"props":574,"children":577},"span",{"class":575,"line":576},"line",1,[578,584,590],{"type":509,"tag":573,"props":579,"children":581},{"style":580},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[582],{"type":514,"value":583},"class",{"type":509,"tag":573,"props":585,"children":587},{"style":586},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[588],{"type":514,"value":589}," Chef",{"type":509,"tag":573,"props":591,"children":593},{"style":592},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[594],{"type":514,"value":595}," {\n",{"type":509,"tag":573,"props":597,"children":599},{"class":575,"line":598},2,[600,606,611,617,622],{"type":509,"tag":573,"props":601,"children":603},{"style":602},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[604],{"type":514,"value":605},"  cookDish",{"type":509,"tag":573,"props":607,"children":608},{"style":592},[609],{"type":514,"value":610},"(",{"type":509,"tag":573,"props":612,"children":614},{"style":613},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[615],{"type":514,"value":616},"dish",{"type":509,"tag":573,"props":618,"children":619},{"style":592},[620],{"type":514,"value":621},")",{"type":509,"tag":573,"props":623,"children":624},{"style":592},[625],{"type":514,"value":595},{"type":509,"tag":573,"props":627,"children":629},{"class":575,"line":628},3,[630],{"type":509,"tag":573,"props":631,"children":633},{"style":632},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[634],{"type":514,"value":635},"    // 烹饪菜品的具体实现\n",{"type":509,"tag":573,"props":637,"children":639},{"class":575,"line":638},4,[640],{"type":509,"tag":573,"props":641,"children":642},{"style":592},[643],{"type":514,"value":644},"  }\n",{"type":509,"tag":573,"props":646,"children":648},{"class":575,"line":647},5,[649],{"type":509,"tag":573,"props":650,"children":652},{"emptyLinePlaceholder":651},true,[653],{"type":514,"value":654},"\n",{"type":509,"tag":573,"props":656,"children":658},{"class":575,"line":657},6,[659,664,669],{"type":509,"tag":573,"props":660,"children":661},{"style":602},[662],{"type":514,"value":663},"  washDishes",{"type":509,"tag":573,"props":665,"children":666},{"style":592},[667],{"type":514,"value":668},"()",{"type":509,"tag":573,"props":670,"children":671},{"style":592},[672],{"type":514,"value":595},{"type":509,"tag":573,"props":674,"children":676},{"class":575,"line":675},7,[677],{"type":509,"tag":573,"props":678,"children":679},{"style":632},[680],{"type":514,"value":681},"    // 洗碗的具体实现\n",{"type":509,"tag":573,"props":683,"children":685},{"class":575,"line":684},8,[686],{"type":509,"tag":573,"props":687,"children":688},{"style":592},[689],{"type":514,"value":644},{"type":509,"tag":573,"props":691,"children":693},{"class":575,"line":692},9,[694],{"type":509,"tag":573,"props":695,"children":696},{"style":592},[697],{"type":514,"value":698},"}\n",{"type":509,"tag":510,"props":700,"children":701},{},[702],{"type":514,"value":703},"这个类违反了单一职责原则，因为它有两个职责：烹饪和洗碗。这样的设计可能导致以下问题：",{"type":509,"tag":705,"props":706,"children":707},"ol",{},[708,713],{"type":509,"tag":520,"props":709,"children":710},{},[711],{"type":514,"value":712},"如果厨师的烹饪逻辑变化，需要修改 cookDish 方法，这可能会影响洗碗的部分。",{"type":509,"tag":520,"props":714,"children":715},{},[716],{"type":514,"value":717},"如果洗碗的逻辑变化，需要修改 washDishes 方法，这可能会影响烹饪的部分。",{"type":509,"tag":510,"props":719,"children":720},{},[721],{"type":514,"value":722},"按照单一职责原则，我们应该将这两个职责分开，分别由不同的类负责：",{"type":509,"tag":562,"props":724,"children":726},{"className":564,"code":725,"language":566,"meta":503,"style":503},"class Chef {\n  cookDish(dish) {\n    // 烹饪菜品的具体实现\n  }\n}\n\nclass Dishwasher {\n  washDishes() {\n    // 洗碗的具体实现\n  }\n}\n",[727],{"type":509,"tag":569,"props":728,"children":729},{"__ignoreMap":503},[730,745,768,775,782,789,796,812,827,834,842],{"type":509,"tag":573,"props":731,"children":732},{"class":575,"line":576},[733,737,741],{"type":509,"tag":573,"props":734,"children":735},{"style":580},[736],{"type":514,"value":583},{"type":509,"tag":573,"props":738,"children":739},{"style":586},[740],{"type":514,"value":589},{"type":509,"tag":573,"props":742,"children":743},{"style":592},[744],{"type":514,"value":595},{"type":509,"tag":573,"props":746,"children":747},{"class":575,"line":598},[748,752,756,760,764],{"type":509,"tag":573,"props":749,"children":750},{"style":602},[751],{"type":514,"value":605},{"type":509,"tag":573,"props":753,"children":754},{"style":592},[755],{"type":514,"value":610},{"type":509,"tag":573,"props":757,"children":758},{"style":613},[759],{"type":514,"value":616},{"type":509,"tag":573,"props":761,"children":762},{"style":592},[763],{"type":514,"value":621},{"type":509,"tag":573,"props":765,"children":766},{"style":592},[767],{"type":514,"value":595},{"type":509,"tag":573,"props":769,"children":770},{"class":575,"line":628},[771],{"type":509,"tag":573,"props":772,"children":773},{"style":632},[774],{"type":514,"value":635},{"type":509,"tag":573,"props":776,"children":777},{"class":575,"line":638},[778],{"type":509,"tag":573,"props":779,"children":780},{"style":592},[781],{"type":514,"value":644},{"type":509,"tag":573,"props":783,"children":784},{"class":575,"line":647},[785],{"type":509,"tag":573,"props":786,"children":787},{"style":592},[788],{"type":514,"value":698},{"type":509,"tag":573,"props":790,"children":791},{"class":575,"line":657},[792],{"type":509,"tag":573,"props":793,"children":794},{"emptyLinePlaceholder":651},[795],{"type":514,"value":654},{"type":509,"tag":573,"props":797,"children":798},{"class":575,"line":675},[799,803,808],{"type":509,"tag":573,"props":800,"children":801},{"style":580},[802],{"type":514,"value":583},{"type":509,"tag":573,"props":804,"children":805},{"style":586},[806],{"type":514,"value":807}," Dishwasher",{"type":509,"tag":573,"props":809,"children":810},{"style":592},[811],{"type":514,"value":595},{"type":509,"tag":573,"props":813,"children":814},{"class":575,"line":684},[815,819,823],{"type":509,"tag":573,"props":816,"children":817},{"style":602},[818],{"type":514,"value":663},{"type":509,"tag":573,"props":820,"children":821},{"style":592},[822],{"type":514,"value":668},{"type":509,"tag":573,"props":824,"children":825},{"style":592},[826],{"type":514,"value":595},{"type":509,"tag":573,"props":828,"children":829},{"class":575,"line":692},[830],{"type":509,"tag":573,"props":831,"children":832},{"style":632},[833],{"type":514,"value":681},{"type":509,"tag":573,"props":835,"children":837},{"class":575,"line":836},10,[838],{"type":509,"tag":573,"props":839,"children":840},{"style":592},[841],{"type":514,"value":644},{"type":509,"tag":573,"props":843,"children":845},{"class":575,"line":844},11,[846],{"type":509,"tag":573,"props":847,"children":848},{"style":592},[849],{"type":514,"value":698},{"type":509,"tag":510,"props":851,"children":852},{},[853],{"type":514,"value":854},"这样，Chef 类专注于烹饪，而 Dishwasher 类专注于洗碗。每个类都有一个单一的职责，使得代码更清晰、易于理解，并且在未来的变更中更具弹性。",{"type":509,"tag":551,"props":856,"children":858},{"id":857},"开放封闭原则",[859],{"type":514,"value":857},{"type":509,"tag":510,"props":861,"children":862},{},[863],{"type":514,"value":864},"开关封闭原则（Open/Closed Principle，OCP）要求软件实体（例如类、模块、函数等）应该对扩展开放，对修改关闭。简而言之，一个模块在扩展新功能时不应该修改原有的代码，而是通过添加新的代码来实现扩展。",{"type":509,"tag":510,"props":866,"children":867},{},[868],{"type":514,"value":869},"考虑一个动物园的场景。我们有一些动物，每个动物都会发出叫声。初始设计如下：",{"type":509,"tag":562,"props":871,"children":873},{"className":564,"code":872,"language":566,"meta":503,"style":503},"class Animal {\n  constructor(name) {\n    this.name = name;\n  }\n\n  makeSound() {\n    // 默认的叫声\n    console.log(\"Some generic animal sound\");\n  }\n}\n\nclass Lion extends Animal {\n  makeSound() {\n    console.log(\"Roar!\");\n  }\n}\n\nclass Elephant extends Animal {\n  makeSound() {\n    console.log(\"Trumpet!\");\n  }\n}\n",[874],{"type":509,"tag":569,"props":875,"children":876},{"__ignoreMap":503},[877,893,918,951,958,965,981,989,1031,1038,1045,1052,1078,1094,1131,1139,1147,1155,1180,1196,1233,1241],{"type":509,"tag":573,"props":878,"children":879},{"class":575,"line":576},[880,884,889],{"type":509,"tag":573,"props":881,"children":882},{"style":580},[883],{"type":514,"value":583},{"type":509,"tag":573,"props":885,"children":886},{"style":586},[887],{"type":514,"value":888}," Animal",{"type":509,"tag":573,"props":890,"children":891},{"style":592},[892],{"type":514,"value":595},{"type":509,"tag":573,"props":894,"children":895},{"class":575,"line":598},[896,901,905,910,914],{"type":509,"tag":573,"props":897,"children":898},{"style":580},[899],{"type":514,"value":900},"  constructor",{"type":509,"tag":573,"props":902,"children":903},{"style":592},[904],{"type":514,"value":610},{"type":509,"tag":573,"props":906,"children":907},{"style":613},[908],{"type":514,"value":909},"name",{"type":509,"tag":573,"props":911,"children":912},{"style":592},[913],{"type":514,"value":621},{"type":509,"tag":573,"props":915,"children":916},{"style":592},[917],{"type":514,"value":595},{"type":509,"tag":573,"props":919,"children":920},{"class":575,"line":628},[921,927,932,936,941,946],{"type":509,"tag":573,"props":922,"children":924},{"style":923},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[925],{"type":514,"value":926},"    this",{"type":509,"tag":573,"props":928,"children":929},{"style":592},[930],{"type":514,"value":931},".",{"type":509,"tag":573,"props":933,"children":934},{"style":613},[935],{"type":514,"value":909},{"type":509,"tag":573,"props":937,"children":938},{"style":592},[939],{"type":514,"value":940}," =",{"type":509,"tag":573,"props":942,"children":943},{"style":613},[944],{"type":514,"value":945}," name",{"type":509,"tag":573,"props":947,"children":948},{"style":592},[949],{"type":514,"value":950},";\n",{"type":509,"tag":573,"props":952,"children":953},{"class":575,"line":638},[954],{"type":509,"tag":573,"props":955,"children":956},{"style":592},[957],{"type":514,"value":644},{"type":509,"tag":573,"props":959,"children":960},{"class":575,"line":647},[961],{"type":509,"tag":573,"props":962,"children":963},{"emptyLinePlaceholder":651},[964],{"type":514,"value":654},{"type":509,"tag":573,"props":966,"children":967},{"class":575,"line":657},[968,973,977],{"type":509,"tag":573,"props":969,"children":970},{"style":602},[971],{"type":514,"value":972},"  makeSound",{"type":509,"tag":573,"props":974,"children":975},{"style":592},[976],{"type":514,"value":668},{"type":509,"tag":573,"props":978,"children":979},{"style":592},[980],{"type":514,"value":595},{"type":509,"tag":573,"props":982,"children":983},{"class":575,"line":675},[984],{"type":509,"tag":573,"props":985,"children":986},{"style":632},[987],{"type":514,"value":988},"    // 默认的叫声\n",{"type":509,"tag":573,"props":990,"children":991},{"class":575,"line":684},[992,997,1001,1006,1010,1016,1022,1026],{"type":509,"tag":573,"props":993,"children":994},{"style":613},[995],{"type":514,"value":996},"    console",{"type":509,"tag":573,"props":998,"children":999},{"style":592},[1000],{"type":514,"value":931},{"type":509,"tag":573,"props":1002,"children":1003},{"style":602},[1004],{"type":514,"value":1005},"log",{"type":509,"tag":573,"props":1007,"children":1008},{"style":592},[1009],{"type":514,"value":610},{"type":509,"tag":573,"props":1011,"children":1013},{"style":1012},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1014],{"type":514,"value":1015},"\"",{"type":509,"tag":573,"props":1017,"children":1019},{"style":1018},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[1020],{"type":514,"value":1021},"Some generic animal sound",{"type":509,"tag":573,"props":1023,"children":1024},{"style":1012},[1025],{"type":514,"value":1015},{"type":509,"tag":573,"props":1027,"children":1028},{"style":592},[1029],{"type":514,"value":1030},");\n",{"type":509,"tag":573,"props":1032,"children":1033},{"class":575,"line":692},[1034],{"type":509,"tag":573,"props":1035,"children":1036},{"style":592},[1037],{"type":514,"value":644},{"type":509,"tag":573,"props":1039,"children":1040},{"class":575,"line":836},[1041],{"type":509,"tag":573,"props":1042,"children":1043},{"style":592},[1044],{"type":514,"value":698},{"type":509,"tag":573,"props":1046,"children":1047},{"class":575,"line":844},[1048],{"type":509,"tag":573,"props":1049,"children":1050},{"emptyLinePlaceholder":651},[1051],{"type":514,"value":654},{"type":509,"tag":573,"props":1053,"children":1055},{"class":575,"line":1054},12,[1056,1060,1065,1070,1074],{"type":509,"tag":573,"props":1057,"children":1058},{"style":580},[1059],{"type":514,"value":583},{"type":509,"tag":573,"props":1061,"children":1062},{"style":586},[1063],{"type":514,"value":1064}," Lion",{"type":509,"tag":573,"props":1066,"children":1067},{"style":580},[1068],{"type":514,"value":1069}," extends",{"type":509,"tag":573,"props":1071,"children":1072},{"style":602},[1073],{"type":514,"value":888},{"type":509,"tag":573,"props":1075,"children":1076},{"style":592},[1077],{"type":514,"value":595},{"type":509,"tag":573,"props":1079,"children":1081},{"class":575,"line":1080},13,[1082,1086,1090],{"type":509,"tag":573,"props":1083,"children":1084},{"style":602},[1085],{"type":514,"value":972},{"type":509,"tag":573,"props":1087,"children":1088},{"style":592},[1089],{"type":514,"value":668},{"type":509,"tag":573,"props":1091,"children":1092},{"style":592},[1093],{"type":514,"value":595},{"type":509,"tag":573,"props":1095,"children":1097},{"class":575,"line":1096},14,[1098,1102,1106,1110,1114,1118,1123,1127],{"type":509,"tag":573,"props":1099,"children":1100},{"style":613},[1101],{"type":514,"value":996},{"type":509,"tag":573,"props":1103,"children":1104},{"style":592},[1105],{"type":514,"value":931},{"type":509,"tag":573,"props":1107,"children":1108},{"style":602},[1109],{"type":514,"value":1005},{"type":509,"tag":573,"props":1111,"children":1112},{"style":592},[1113],{"type":514,"value":610},{"type":509,"tag":573,"props":1115,"children":1116},{"style":1012},[1117],{"type":514,"value":1015},{"type":509,"tag":573,"props":1119,"children":1120},{"style":1018},[1121],{"type":514,"value":1122},"Roar!",{"type":509,"tag":573,"props":1124,"children":1125},{"style":1012},[1126],{"type":514,"value":1015},{"type":509,"tag":573,"props":1128,"children":1129},{"style":592},[1130],{"type":514,"value":1030},{"type":509,"tag":573,"props":1132,"children":1134},{"class":575,"line":1133},15,[1135],{"type":509,"tag":573,"props":1136,"children":1137},{"style":592},[1138],{"type":514,"value":644},{"type":509,"tag":573,"props":1140,"children":1142},{"class":575,"line":1141},16,[1143],{"type":509,"tag":573,"props":1144,"children":1145},{"style":592},[1146],{"type":514,"value":698},{"type":509,"tag":573,"props":1148,"children":1150},{"class":575,"line":1149},17,[1151],{"type":509,"tag":573,"props":1152,"children":1153},{"emptyLinePlaceholder":651},[1154],{"type":514,"value":654},{"type":509,"tag":573,"props":1156,"children":1158},{"class":575,"line":1157},18,[1159,1163,1168,1172,1176],{"type":509,"tag":573,"props":1160,"children":1161},{"style":580},[1162],{"type":514,"value":583},{"type":509,"tag":573,"props":1164,"children":1165},{"style":586},[1166],{"type":514,"value":1167}," Elephant",{"type":509,"tag":573,"props":1169,"children":1170},{"style":580},[1171],{"type":514,"value":1069},{"type":509,"tag":573,"props":1173,"children":1174},{"style":602},[1175],{"type":514,"value":888},{"type":509,"tag":573,"props":1177,"children":1178},{"style":592},[1179],{"type":514,"value":595},{"type":509,"tag":573,"props":1181,"children":1183},{"class":575,"line":1182},19,[1184,1188,1192],{"type":509,"tag":573,"props":1185,"children":1186},{"style":602},[1187],{"type":514,"value":972},{"type":509,"tag":573,"props":1189,"children":1190},{"style":592},[1191],{"type":514,"value":668},{"type":509,"tag":573,"props":1193,"children":1194},{"style":592},[1195],{"type":514,"value":595},{"type":509,"tag":573,"props":1197,"children":1199},{"class":575,"line":1198},20,[1200,1204,1208,1212,1216,1220,1225,1229],{"type":509,"tag":573,"props":1201,"children":1202},{"style":613},[1203],{"type":514,"value":996},{"type":509,"tag":573,"props":1205,"children":1206},{"style":592},[1207],{"type":514,"value":931},{"type":509,"tag":573,"props":1209,"children":1210},{"style":602},[1211],{"type":514,"value":1005},{"type":509,"tag":573,"props":1213,"children":1214},{"style":592},[1215],{"type":514,"value":610},{"type":509,"tag":573,"props":1217,"children":1218},{"style":1012},[1219],{"type":514,"value":1015},{"type":509,"tag":573,"props":1221,"children":1222},{"style":1018},[1223],{"type":514,"value":1224},"Trumpet!",{"type":509,"tag":573,"props":1226,"children":1227},{"style":1012},[1228],{"type":514,"value":1015},{"type":509,"tag":573,"props":1230,"children":1231},{"style":592},[1232],{"type":514,"value":1030},{"type":509,"tag":573,"props":1234,"children":1236},{"class":575,"line":1235},21,[1237],{"type":509,"tag":573,"props":1238,"children":1239},{"style":592},[1240],{"type":514,"value":644},{"type":509,"tag":573,"props":1242,"children":1244},{"class":575,"line":1243},22,[1245],{"type":509,"tag":573,"props":1246,"children":1247},{"style":592},[1248],{"type":514,"value":698},{"type":509,"tag":510,"props":1250,"children":1251},{},[1252],{"type":514,"value":1253},"在这个设计中，Animal 类是一个基类，而 Lion 和 Elephant 是它的子类。每个动物都有自己的叫声，通过重写 makeSound 方法来实现。",{"type":509,"tag":510,"props":1255,"children":1256},{},[1257],{"type":514,"value":1258},"现在，假设我们要添加一些新的动物，比如鹦鹉和狗，按照开放/封闭原则，我们应该扩展而不是修改现有的代码：",{"type":509,"tag":562,"props":1260,"children":1262},{"className":564,"code":1261,"language":566,"meta":503,"style":503},"class Parrot extends Animal {\n  makeSound() {\n    console.log(\"Squawk!\");\n  }\n}\n\nclass Dog extends Animal {\n  makeSound() {\n    console.log(\"Bark!\");\n  }\n}\n",[1263],{"type":509,"tag":569,"props":1264,"children":1265},{"__ignoreMap":503},[1266,1290,1305,1341,1348,1355,1362,1386,1401,1437,1444],{"type":509,"tag":573,"props":1267,"children":1268},{"class":575,"line":576},[1269,1273,1278,1282,1286],{"type":509,"tag":573,"props":1270,"children":1271},{"style":580},[1272],{"type":514,"value":583},{"type":509,"tag":573,"props":1274,"children":1275},{"style":586},[1276],{"type":514,"value":1277}," Parrot",{"type":509,"tag":573,"props":1279,"children":1280},{"style":580},[1281],{"type":514,"value":1069},{"type":509,"tag":573,"props":1283,"children":1284},{"style":602},[1285],{"type":514,"value":888},{"type":509,"tag":573,"props":1287,"children":1288},{"style":592},[1289],{"type":514,"value":595},{"type":509,"tag":573,"props":1291,"children":1292},{"class":575,"line":598},[1293,1297,1301],{"type":509,"tag":573,"props":1294,"children":1295},{"style":602},[1296],{"type":514,"value":972},{"type":509,"tag":573,"props":1298,"children":1299},{"style":592},[1300],{"type":514,"value":668},{"type":509,"tag":573,"props":1302,"children":1303},{"style":592},[1304],{"type":514,"value":595},{"type":509,"tag":573,"props":1306,"children":1307},{"class":575,"line":628},[1308,1312,1316,1320,1324,1328,1333,1337],{"type":509,"tag":573,"props":1309,"children":1310},{"style":613},[1311],{"type":514,"value":996},{"type":509,"tag":573,"props":1313,"children":1314},{"style":592},[1315],{"type":514,"value":931},{"type":509,"tag":573,"props":1317,"children":1318},{"style":602},[1319],{"type":514,"value":1005},{"type":509,"tag":573,"props":1321,"children":1322},{"style":592},[1323],{"type":514,"value":610},{"type":509,"tag":573,"props":1325,"children":1326},{"style":1012},[1327],{"type":514,"value":1015},{"type":509,"tag":573,"props":1329,"children":1330},{"style":1018},[1331],{"type":514,"value":1332},"Squawk!",{"type":509,"tag":573,"props":1334,"children":1335},{"style":1012},[1336],{"type":514,"value":1015},{"type":509,"tag":573,"props":1338,"children":1339},{"style":592},[1340],{"type":514,"value":1030},{"type":509,"tag":573,"props":1342,"children":1343},{"class":575,"line":638},[1344],{"type":509,"tag":573,"props":1345,"children":1346},{"style":592},[1347],{"type":514,"value":644},{"type":509,"tag":573,"props":1349,"children":1350},{"class":575,"line":647},[1351],{"type":509,"tag":573,"props":1352,"children":1353},{"style":592},[1354],{"type":514,"value":698},{"type":509,"tag":573,"props":1356,"children":1357},{"class":575,"line":657},[1358],{"type":509,"tag":573,"props":1359,"children":1360},{"emptyLinePlaceholder":651},[1361],{"type":514,"value":654},{"type":509,"tag":573,"props":1363,"children":1364},{"class":575,"line":675},[1365,1369,1374,1378,1382],{"type":509,"tag":573,"props":1366,"children":1367},{"style":580},[1368],{"type":514,"value":583},{"type":509,"tag":573,"props":1370,"children":1371},{"style":586},[1372],{"type":514,"value":1373}," Dog",{"type":509,"tag":573,"props":1375,"children":1376},{"style":580},[1377],{"type":514,"value":1069},{"type":509,"tag":573,"props":1379,"children":1380},{"style":602},[1381],{"type":514,"value":888},{"type":509,"tag":573,"props":1383,"children":1384},{"style":592},[1385],{"type":514,"value":595},{"type":509,"tag":573,"props":1387,"children":1388},{"class":575,"line":684},[1389,1393,1397],{"type":509,"tag":573,"props":1390,"children":1391},{"style":602},[1392],{"type":514,"value":972},{"type":509,"tag":573,"props":1394,"children":1395},{"style":592},[1396],{"type":514,"value":668},{"type":509,"tag":573,"props":1398,"children":1399},{"style":592},[1400],{"type":514,"value":595},{"type":509,"tag":573,"props":1402,"children":1403},{"class":575,"line":692},[1404,1408,1412,1416,1420,1424,1429,1433],{"type":509,"tag":573,"props":1405,"children":1406},{"style":613},[1407],{"type":514,"value":996},{"type":509,"tag":573,"props":1409,"children":1410},{"style":592},[1411],{"type":514,"value":931},{"type":509,"tag":573,"props":1413,"children":1414},{"style":602},[1415],{"type":514,"value":1005},{"type":509,"tag":573,"props":1417,"children":1418},{"style":592},[1419],{"type":514,"value":610},{"type":509,"tag":573,"props":1421,"children":1422},{"style":1012},[1423],{"type":514,"value":1015},{"type":509,"tag":573,"props":1425,"children":1426},{"style":1018},[1427],{"type":514,"value":1428},"Bark!",{"type":509,"tag":573,"props":1430,"children":1431},{"style":1012},[1432],{"type":514,"value":1015},{"type":509,"tag":573,"props":1434,"children":1435},{"style":592},[1436],{"type":514,"value":1030},{"type":509,"tag":573,"props":1438,"children":1439},{"class":575,"line":836},[1440],{"type":509,"tag":573,"props":1441,"children":1442},{"style":592},[1443],{"type":514,"value":644},{"type":509,"tag":573,"props":1445,"children":1446},{"class":575,"line":844},[1447],{"type":509,"tag":573,"props":1448,"children":1449},{"style":592},[1450],{"type":514,"value":698},{"type":509,"tag":510,"props":1452,"children":1453},{},[1454],{"type":514,"value":1455},"这样，我们通过扩展 Animal 类，而不是修改它，来添加新的功能（新的动物）。这符合开放/封闭原则，因为我们对于现有代码的修改是关闭的，我们只是通过扩展来引入新的功能。",{"type":509,"tag":510,"props":1457,"children":1458},{},[1459],{"type":514,"value":1460},"使用开放/封闭原则可以使代码更加稳定，降低对现有代码的影响，同时也更容易应对变化和扩展。",{"type":509,"tag":551,"props":1462,"children":1464},{"id":1463},"里式替换原则",[1465],{"type":514,"value":1463},{"type":509,"tag":510,"props":1467,"children":1468},{},[1469],{"type":514,"value":1470},"里氏替换原则（Liskov Substitution Principle，LSP） 是 SOLID 原则之一，它强调子类型（派生类或子类）必须能够替换掉它们的基类型（基类或父类）并出现在基类能够工作的任何地方，而不破坏程序的正确性。",{"type":509,"tag":510,"props":1472,"children":1473},{},[1474],{"type":514,"value":1475},"通俗地说，如果一个类是基类的子类，那么在任何需要基类的地方，都可以使用这个子类而不产生错误。子类应该保持基类的行为，并且可以扩展或修改基类的行为，但不应该破坏基类原有的约定。",{"type":509,"tag":510,"props":1477,"children":1478},{},[1479],{"type":514,"value":1480},"假设我们有一个表示矩形的基类 Rectangle：",{"type":509,"tag":562,"props":1482,"children":1484},{"className":564,"code":1483,"language":566,"meta":503,"style":503},"class Rectangle {\n  constructor(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n\n  setWidth(width) {\n    this.width = width;\n  }\n\n  setHeight(height) {\n    this.height = height;\n  }\n\n  getArea() {\n    return this.width * this.height;\n  }\n}\n",[1485],{"type":509,"tag":569,"props":1486,"children":1487},{"__ignoreMap":503},[1488,1504,1538,1566,1594,1601,1608,1632,1659,1666,1673,1697,1724,1731,1738,1754,1797,1804],{"type":509,"tag":573,"props":1489,"children":1490},{"class":575,"line":576},[1491,1495,1500],{"type":509,"tag":573,"props":1492,"children":1493},{"style":580},[1494],{"type":514,"value":583},{"type":509,"tag":573,"props":1496,"children":1497},{"style":586},[1498],{"type":514,"value":1499}," Rectangle",{"type":509,"tag":573,"props":1501,"children":1502},{"style":592},[1503],{"type":514,"value":595},{"type":509,"tag":573,"props":1505,"children":1506},{"class":575,"line":598},[1507,1511,1515,1520,1525,1530,1534],{"type":509,"tag":573,"props":1508,"children":1509},{"style":580},[1510],{"type":514,"value":900},{"type":509,"tag":573,"props":1512,"children":1513},{"style":592},[1514],{"type":514,"value":610},{"type":509,"tag":573,"props":1516,"children":1517},{"style":613},[1518],{"type":514,"value":1519},"width",{"type":509,"tag":573,"props":1521,"children":1522},{"style":592},[1523],{"type":514,"value":1524},",",{"type":509,"tag":573,"props":1526,"children":1527},{"style":613},[1528],{"type":514,"value":1529}," height",{"type":509,"tag":573,"props":1531,"children":1532},{"style":592},[1533],{"type":514,"value":621},{"type":509,"tag":573,"props":1535,"children":1536},{"style":592},[1537],{"type":514,"value":595},{"type":509,"tag":573,"props":1539,"children":1540},{"class":575,"line":628},[1541,1545,1549,1553,1557,1562],{"type":509,"tag":573,"props":1542,"children":1543},{"style":923},[1544],{"type":514,"value":926},{"type":509,"tag":573,"props":1546,"children":1547},{"style":592},[1548],{"type":514,"value":931},{"type":509,"tag":573,"props":1550,"children":1551},{"style":613},[1552],{"type":514,"value":1519},{"type":509,"tag":573,"props":1554,"children":1555},{"style":592},[1556],{"type":514,"value":940},{"type":509,"tag":573,"props":1558,"children":1559},{"style":613},[1560],{"type":514,"value":1561}," width",{"type":509,"tag":573,"props":1563,"children":1564},{"style":592},[1565],{"type":514,"value":950},{"type":509,"tag":573,"props":1567,"children":1568},{"class":575,"line":638},[1569,1573,1577,1582,1586,1590],{"type":509,"tag":573,"props":1570,"children":1571},{"style":923},[1572],{"type":514,"value":926},{"type":509,"tag":573,"props":1574,"children":1575},{"style":592},[1576],{"type":514,"value":931},{"type":509,"tag":573,"props":1578,"children":1579},{"style":613},[1580],{"type":514,"value":1581},"height",{"type":509,"tag":573,"props":1583,"children":1584},{"style":592},[1585],{"type":514,"value":940},{"type":509,"tag":573,"props":1587,"children":1588},{"style":613},[1589],{"type":514,"value":1529},{"type":509,"tag":573,"props":1591,"children":1592},{"style":592},[1593],{"type":514,"value":950},{"type":509,"tag":573,"props":1595,"children":1596},{"class":575,"line":647},[1597],{"type":509,"tag":573,"props":1598,"children":1599},{"style":592},[1600],{"type":514,"value":644},{"type":509,"tag":573,"props":1602,"children":1603},{"class":575,"line":657},[1604],{"type":509,"tag":573,"props":1605,"children":1606},{"emptyLinePlaceholder":651},[1607],{"type":514,"value":654},{"type":509,"tag":573,"props":1609,"children":1610},{"class":575,"line":675},[1611,1616,1620,1624,1628],{"type":509,"tag":573,"props":1612,"children":1613},{"style":602},[1614],{"type":514,"value":1615},"  setWidth",{"type":509,"tag":573,"props":1617,"children":1618},{"style":592},[1619],{"type":514,"value":610},{"type":509,"tag":573,"props":1621,"children":1622},{"style":613},[1623],{"type":514,"value":1519},{"type":509,"tag":573,"props":1625,"children":1626},{"style":592},[1627],{"type":514,"value":621},{"type":509,"tag":573,"props":1629,"children":1630},{"style":592},[1631],{"type":514,"value":595},{"type":509,"tag":573,"props":1633,"children":1634},{"class":575,"line":684},[1635,1639,1643,1647,1651,1655],{"type":509,"tag":573,"props":1636,"children":1637},{"style":923},[1638],{"type":514,"value":926},{"type":509,"tag":573,"props":1640,"children":1641},{"style":592},[1642],{"type":514,"value":931},{"type":509,"tag":573,"props":1644,"children":1645},{"style":613},[1646],{"type":514,"value":1519},{"type":509,"tag":573,"props":1648,"children":1649},{"style":592},[1650],{"type":514,"value":940},{"type":509,"tag":573,"props":1652,"children":1653},{"style":613},[1654],{"type":514,"value":1561},{"type":509,"tag":573,"props":1656,"children":1657},{"style":592},[1658],{"type":514,"value":950},{"type":509,"tag":573,"props":1660,"children":1661},{"class":575,"line":692},[1662],{"type":509,"tag":573,"props":1663,"children":1664},{"style":592},[1665],{"type":514,"value":644},{"type":509,"tag":573,"props":1667,"children":1668},{"class":575,"line":836},[1669],{"type":509,"tag":573,"props":1670,"children":1671},{"emptyLinePlaceholder":651},[1672],{"type":514,"value":654},{"type":509,"tag":573,"props":1674,"children":1675},{"class":575,"line":844},[1676,1681,1685,1689,1693],{"type":509,"tag":573,"props":1677,"children":1678},{"style":602},[1679],{"type":514,"value":1680},"  setHeight",{"type":509,"tag":573,"props":1682,"children":1683},{"style":592},[1684],{"type":514,"value":610},{"type":509,"tag":573,"props":1686,"children":1687},{"style":613},[1688],{"type":514,"value":1581},{"type":509,"tag":573,"props":1690,"children":1691},{"style":592},[1692],{"type":514,"value":621},{"type":509,"tag":573,"props":1694,"children":1695},{"style":592},[1696],{"type":514,"value":595},{"type":509,"tag":573,"props":1698,"children":1699},{"class":575,"line":1054},[1700,1704,1708,1712,1716,1720],{"type":509,"tag":573,"props":1701,"children":1702},{"style":923},[1703],{"type":514,"value":926},{"type":509,"tag":573,"props":1705,"children":1706},{"style":592},[1707],{"type":514,"value":931},{"type":509,"tag":573,"props":1709,"children":1710},{"style":613},[1711],{"type":514,"value":1581},{"type":509,"tag":573,"props":1713,"children":1714},{"style":592},[1715],{"type":514,"value":940},{"type":509,"tag":573,"props":1717,"children":1718},{"style":613},[1719],{"type":514,"value":1529},{"type":509,"tag":573,"props":1721,"children":1722},{"style":592},[1723],{"type":514,"value":950},{"type":509,"tag":573,"props":1725,"children":1726},{"class":575,"line":1080},[1727],{"type":509,"tag":573,"props":1728,"children":1729},{"style":592},[1730],{"type":514,"value":644},{"type":509,"tag":573,"props":1732,"children":1733},{"class":575,"line":1096},[1734],{"type":509,"tag":573,"props":1735,"children":1736},{"emptyLinePlaceholder":651},[1737],{"type":514,"value":654},{"type":509,"tag":573,"props":1739,"children":1740},{"class":575,"line":1133},[1741,1746,1750],{"type":509,"tag":573,"props":1742,"children":1743},{"style":602},[1744],{"type":514,"value":1745},"  getArea",{"type":509,"tag":573,"props":1747,"children":1748},{"style":592},[1749],{"type":514,"value":668},{"type":509,"tag":573,"props":1751,"children":1752},{"style":592},[1753],{"type":514,"value":595},{"type":509,"tag":573,"props":1755,"children":1756},{"class":575,"line":1141},[1757,1763,1768,1772,1776,1781,1785,1789,1793],{"type":509,"tag":573,"props":1758,"children":1760},{"style":1759},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[1761],{"type":514,"value":1762},"    return",{"type":509,"tag":573,"props":1764,"children":1765},{"style":923},[1766],{"type":514,"value":1767}," this",{"type":509,"tag":573,"props":1769,"children":1770},{"style":592},[1771],{"type":514,"value":931},{"type":509,"tag":573,"props":1773,"children":1774},{"style":613},[1775],{"type":514,"value":1519},{"type":509,"tag":573,"props":1777,"children":1778},{"style":580},[1779],{"type":514,"value":1780}," *",{"type":509,"tag":573,"props":1782,"children":1783},{"style":923},[1784],{"type":514,"value":1767},{"type":509,"tag":573,"props":1786,"children":1787},{"style":592},[1788],{"type":514,"value":931},{"type":509,"tag":573,"props":1790,"children":1791},{"style":613},[1792],{"type":514,"value":1581},{"type":509,"tag":573,"props":1794,"children":1795},{"style":592},[1796],{"type":514,"value":950},{"type":509,"tag":573,"props":1798,"children":1799},{"class":575,"line":1149},[1800],{"type":509,"tag":573,"props":1801,"children":1802},{"style":592},[1803],{"type":514,"value":644},{"type":509,"tag":573,"props":1805,"children":1806},{"class":575,"line":1157},[1807],{"type":509,"tag":573,"props":1808,"children":1809},{"style":592},[1810],{"type":514,"value":698},{"type":509,"tag":510,"props":1812,"children":1813},{},[1814],{"type":514,"value":1815},"现在，我们创建了一个子类 Square 继承自 Rectangle，表示正方形。在正方形中，宽和高应该始终相等。",{"type":509,"tag":562,"props":1817,"children":1819},{"className":564,"code":1818,"language":566,"meta":503,"style":503},"class Square extends Rectangle {\n  setWidth(width) {\n    super.setWidth(width);\n    super.setHeight(width);\n  }\n\n  setHeight(height) {\n    super.setWidth(height);\n    super.setHeight(height);\n  }\n}\n",[1820],{"type":509,"tag":569,"props":1821,"children":1822},{"__ignoreMap":503},[1823,1847,1870,1899,1927,1934,1941,1964,1991,2018,2025],{"type":509,"tag":573,"props":1824,"children":1825},{"class":575,"line":576},[1826,1830,1835,1839,1843],{"type":509,"tag":573,"props":1827,"children":1828},{"style":580},[1829],{"type":514,"value":583},{"type":509,"tag":573,"props":1831,"children":1832},{"style":586},[1833],{"type":514,"value":1834}," Square",{"type":509,"tag":573,"props":1836,"children":1837},{"style":580},[1838],{"type":514,"value":1069},{"type":509,"tag":573,"props":1840,"children":1841},{"style":602},[1842],{"type":514,"value":1499},{"type":509,"tag":573,"props":1844,"children":1845},{"style":592},[1846],{"type":514,"value":595},{"type":509,"tag":573,"props":1848,"children":1849},{"class":575,"line":598},[1850,1854,1858,1862,1866],{"type":509,"tag":573,"props":1851,"children":1852},{"style":602},[1853],{"type":514,"value":1615},{"type":509,"tag":573,"props":1855,"children":1856},{"style":592},[1857],{"type":514,"value":610},{"type":509,"tag":573,"props":1859,"children":1860},{"style":613},[1861],{"type":514,"value":1519},{"type":509,"tag":573,"props":1863,"children":1864},{"style":592},[1865],{"type":514,"value":621},{"type":509,"tag":573,"props":1867,"children":1868},{"style":592},[1869],{"type":514,"value":595},{"type":509,"tag":573,"props":1871,"children":1872},{"class":575,"line":628},[1873,1878,1882,1887,1891,1895],{"type":509,"tag":573,"props":1874,"children":1875},{"style":923},[1876],{"type":514,"value":1877},"    super",{"type":509,"tag":573,"props":1879,"children":1880},{"style":592},[1881],{"type":514,"value":931},{"type":509,"tag":573,"props":1883,"children":1884},{"style":602},[1885],{"type":514,"value":1886},"setWidth",{"type":509,"tag":573,"props":1888,"children":1889},{"style":592},[1890],{"type":514,"value":610},{"type":509,"tag":573,"props":1892,"children":1893},{"style":613},[1894],{"type":514,"value":1519},{"type":509,"tag":573,"props":1896,"children":1897},{"style":592},[1898],{"type":514,"value":1030},{"type":509,"tag":573,"props":1900,"children":1901},{"class":575,"line":638},[1902,1906,1910,1915,1919,1923],{"type":509,"tag":573,"props":1903,"children":1904},{"style":923},[1905],{"type":514,"value":1877},{"type":509,"tag":573,"props":1907,"children":1908},{"style":592},[1909],{"type":514,"value":931},{"type":509,"tag":573,"props":1911,"children":1912},{"style":602},[1913],{"type":514,"value":1914},"setHeight",{"type":509,"tag":573,"props":1916,"children":1917},{"style":592},[1918],{"type":514,"value":610},{"type":509,"tag":573,"props":1920,"children":1921},{"style":613},[1922],{"type":514,"value":1519},{"type":509,"tag":573,"props":1924,"children":1925},{"style":592},[1926],{"type":514,"value":1030},{"type":509,"tag":573,"props":1928,"children":1929},{"class":575,"line":647},[1930],{"type":509,"tag":573,"props":1931,"children":1932},{"style":592},[1933],{"type":514,"value":644},{"type":509,"tag":573,"props":1935,"children":1936},{"class":575,"line":657},[1937],{"type":509,"tag":573,"props":1938,"children":1939},{"emptyLinePlaceholder":651},[1940],{"type":514,"value":654},{"type":509,"tag":573,"props":1942,"children":1943},{"class":575,"line":675},[1944,1948,1952,1956,1960],{"type":509,"tag":573,"props":1945,"children":1946},{"style":602},[1947],{"type":514,"value":1680},{"type":509,"tag":573,"props":1949,"children":1950},{"style":592},[1951],{"type":514,"value":610},{"type":509,"tag":573,"props":1953,"children":1954},{"style":613},[1955],{"type":514,"value":1581},{"type":509,"tag":573,"props":1957,"children":1958},{"style":592},[1959],{"type":514,"value":621},{"type":509,"tag":573,"props":1961,"children":1962},{"style":592},[1963],{"type":514,"value":595},{"type":509,"tag":573,"props":1965,"children":1966},{"class":575,"line":684},[1967,1971,1975,1979,1983,1987],{"type":509,"tag":573,"props":1968,"children":1969},{"style":923},[1970],{"type":514,"value":1877},{"type":509,"tag":573,"props":1972,"children":1973},{"style":592},[1974],{"type":514,"value":931},{"type":509,"tag":573,"props":1976,"children":1977},{"style":602},[1978],{"type":514,"value":1886},{"type":509,"tag":573,"props":1980,"children":1981},{"style":592},[1982],{"type":514,"value":610},{"type":509,"tag":573,"props":1984,"children":1985},{"style":613},[1986],{"type":514,"value":1581},{"type":509,"tag":573,"props":1988,"children":1989},{"style":592},[1990],{"type":514,"value":1030},{"type":509,"tag":573,"props":1992,"children":1993},{"class":575,"line":692},[1994,1998,2002,2006,2010,2014],{"type":509,"tag":573,"props":1995,"children":1996},{"style":923},[1997],{"type":514,"value":1877},{"type":509,"tag":573,"props":1999,"children":2000},{"style":592},[2001],{"type":514,"value":931},{"type":509,"tag":573,"props":2003,"children":2004},{"style":602},[2005],{"type":514,"value":1914},{"type":509,"tag":573,"props":2007,"children":2008},{"style":592},[2009],{"type":514,"value":610},{"type":509,"tag":573,"props":2011,"children":2012},{"style":613},[2013],{"type":514,"value":1581},{"type":509,"tag":573,"props":2015,"children":2016},{"style":592},[2017],{"type":514,"value":1030},{"type":509,"tag":573,"props":2019,"children":2020},{"class":575,"line":836},[2021],{"type":509,"tag":573,"props":2022,"children":2023},{"style":592},[2024],{"type":514,"value":644},{"type":509,"tag":573,"props":2026,"children":2027},{"class":575,"line":844},[2028],{"type":509,"tag":573,"props":2029,"children":2030},{"style":592},[2031],{"type":514,"value":698},{"type":509,"tag":510,"props":2033,"children":2034},{},[2035],{"type":514,"value":2036},"这里的问题是，Square 子类在修改宽度或高度时，通过覆写 setWidth 和 setHeight 方法，强制宽和高相等，这与基类的行为不一致。如果在需要 Rectangle 的地方使用了 Square，可能会导致程序逻辑错误。",{"type":509,"tag":510,"props":2038,"children":2039},{},[2040],{"type":514,"value":2041},"这违反了里氏替换原则，因为子类修改了父类的预期行为。为了符合里氏替换原则，可能需要重新设计类的继承结构，或者使用更精确的命名来表达实际意图。",{"type":509,"tag":551,"props":2043,"children":2045},{"id":2044},"接口隔离原则",[2046],{"type":514,"value":2044},{"type":509,"tag":510,"props":2048,"children":2049},{},[2050],{"type":514,"value":2051},"接口隔离原则（Interface Segregation Principle，ISP） 是 SOLID 原则之一，它强调一个类不应该被强迫实现它不需要的接口。简而言之，一个类对另一个类的依赖应该建立在最小的接口上。",{"type":509,"tag":510,"props":2053,"children":2054},{},[2055],{"type":514,"value":2056},"在通俗的语言中，接口隔离原则告诉我们不应该让一个类依赖它不需要的接口，否则会导致类需要实现一些它根本不需要的方法。",{"type":509,"tag":510,"props":2058,"children":2059},{},[2060],{"type":514,"value":2061},"举例说明，假设我们有一个动物园的系统，其中有两种动物，一种会飞，一种会游泳：",{"type":509,"tag":562,"props":2063,"children":2065},{"className":564,"code":2064,"language":566,"meta":503,"style":503},"// 不遵循接口隔离原则的设计\nclass Bird {\n  fly() {\n    // 实现飞行逻辑\n  }\n\n  swim() {\n    // 这是一个鸟类不需要的方法，违反接口隔离原则\n  }\n}\n\nclass Fish {\n  swim() {\n    // 实现游泳逻辑\n  }\n\n  fly() {\n    // 这是一个鱼类不需要的方法，违反接口隔离原则\n  }\n}\n",[2066],{"type":509,"tag":569,"props":2067,"children":2068},{"__ignoreMap":503},[2069,2077,2093,2109,2117,2124,2131,2147,2155,2162,2169,2176,2192,2207,2215,2222,2229,2244,2252,2259],{"type":509,"tag":573,"props":2070,"children":2071},{"class":575,"line":576},[2072],{"type":509,"tag":573,"props":2073,"children":2074},{"style":632},[2075],{"type":514,"value":2076},"// 不遵循接口隔离原则的设计\n",{"type":509,"tag":573,"props":2078,"children":2079},{"class":575,"line":598},[2080,2084,2089],{"type":509,"tag":573,"props":2081,"children":2082},{"style":580},[2083],{"type":514,"value":583},{"type":509,"tag":573,"props":2085,"children":2086},{"style":586},[2087],{"type":514,"value":2088}," Bird",{"type":509,"tag":573,"props":2090,"children":2091},{"style":592},[2092],{"type":514,"value":595},{"type":509,"tag":573,"props":2094,"children":2095},{"class":575,"line":628},[2096,2101,2105],{"type":509,"tag":573,"props":2097,"children":2098},{"style":602},[2099],{"type":514,"value":2100},"  fly",{"type":509,"tag":573,"props":2102,"children":2103},{"style":592},[2104],{"type":514,"value":668},{"type":509,"tag":573,"props":2106,"children":2107},{"style":592},[2108],{"type":514,"value":595},{"type":509,"tag":573,"props":2110,"children":2111},{"class":575,"line":638},[2112],{"type":509,"tag":573,"props":2113,"children":2114},{"style":632},[2115],{"type":514,"value":2116},"    // 实现飞行逻辑\n",{"type":509,"tag":573,"props":2118,"children":2119},{"class":575,"line":647},[2120],{"type":509,"tag":573,"props":2121,"children":2122},{"style":592},[2123],{"type":514,"value":644},{"type":509,"tag":573,"props":2125,"children":2126},{"class":575,"line":657},[2127],{"type":509,"tag":573,"props":2128,"children":2129},{"emptyLinePlaceholder":651},[2130],{"type":514,"value":654},{"type":509,"tag":573,"props":2132,"children":2133},{"class":575,"line":675},[2134,2139,2143],{"type":509,"tag":573,"props":2135,"children":2136},{"style":602},[2137],{"type":514,"value":2138},"  swim",{"type":509,"tag":573,"props":2140,"children":2141},{"style":592},[2142],{"type":514,"value":668},{"type":509,"tag":573,"props":2144,"children":2145},{"style":592},[2146],{"type":514,"value":595},{"type":509,"tag":573,"props":2148,"children":2149},{"class":575,"line":684},[2150],{"type":509,"tag":573,"props":2151,"children":2152},{"style":632},[2153],{"type":514,"value":2154},"    // 这是一个鸟类不需要的方法，违反接口隔离原则\n",{"type":509,"tag":573,"props":2156,"children":2157},{"class":575,"line":692},[2158],{"type":509,"tag":573,"props":2159,"children":2160},{"style":592},[2161],{"type":514,"value":644},{"type":509,"tag":573,"props":2163,"children":2164},{"class":575,"line":836},[2165],{"type":509,"tag":573,"props":2166,"children":2167},{"style":592},[2168],{"type":514,"value":698},{"type":509,"tag":573,"props":2170,"children":2171},{"class":575,"line":844},[2172],{"type":509,"tag":573,"props":2173,"children":2174},{"emptyLinePlaceholder":651},[2175],{"type":514,"value":654},{"type":509,"tag":573,"props":2177,"children":2178},{"class":575,"line":1054},[2179,2183,2188],{"type":509,"tag":573,"props":2180,"children":2181},{"style":580},[2182],{"type":514,"value":583},{"type":509,"tag":573,"props":2184,"children":2185},{"style":586},[2186],{"type":514,"value":2187}," Fish",{"type":509,"tag":573,"props":2189,"children":2190},{"style":592},[2191],{"type":514,"value":595},{"type":509,"tag":573,"props":2193,"children":2194},{"class":575,"line":1080},[2195,2199,2203],{"type":509,"tag":573,"props":2196,"children":2197},{"style":602},[2198],{"type":514,"value":2138},{"type":509,"tag":573,"props":2200,"children":2201},{"style":592},[2202],{"type":514,"value":668},{"type":509,"tag":573,"props":2204,"children":2205},{"style":592},[2206],{"type":514,"value":595},{"type":509,"tag":573,"props":2208,"children":2209},{"class":575,"line":1096},[2210],{"type":509,"tag":573,"props":2211,"children":2212},{"style":632},[2213],{"type":514,"value":2214},"    // 实现游泳逻辑\n",{"type":509,"tag":573,"props":2216,"children":2217},{"class":575,"line":1133},[2218],{"type":509,"tag":573,"props":2219,"children":2220},{"style":592},[2221],{"type":514,"value":644},{"type":509,"tag":573,"props":2223,"children":2224},{"class":575,"line":1141},[2225],{"type":509,"tag":573,"props":2226,"children":2227},{"emptyLinePlaceholder":651},[2228],{"type":514,"value":654},{"type":509,"tag":573,"props":2230,"children":2231},{"class":575,"line":1149},[2232,2236,2240],{"type":509,"tag":573,"props":2233,"children":2234},{"style":602},[2235],{"type":514,"value":2100},{"type":509,"tag":573,"props":2237,"children":2238},{"style":592},[2239],{"type":514,"value":668},{"type":509,"tag":573,"props":2241,"children":2242},{"style":592},[2243],{"type":514,"value":595},{"type":509,"tag":573,"props":2245,"children":2246},{"class":575,"line":1157},[2247],{"type":509,"tag":573,"props":2248,"children":2249},{"style":632},[2250],{"type":514,"value":2251},"    // 这是一个鱼类不需要的方法，违反接口隔离原则\n",{"type":509,"tag":573,"props":2253,"children":2254},{"class":575,"line":1182},[2255],{"type":509,"tag":573,"props":2256,"children":2257},{"style":592},[2258],{"type":514,"value":644},{"type":509,"tag":573,"props":2260,"children":2261},{"class":575,"line":1198},[2262],{"type":509,"tag":573,"props":2263,"children":2264},{"style":592},[2265],{"type":514,"value":698},{"type":509,"tag":510,"props":2267,"children":2268},{},[2269],{"type":514,"value":2270},"在这个例子中，Bird 类实现了 fly 和 swim 两个方法，而 Fish 类也实现了 swim 和 fly 两个方法。这违反了接口隔离原则，因为每个类都被迫实现了它们不需要的方法。",{"type":509,"tag":510,"props":2272,"children":2273},{},[2274],{"type":514,"value":2275},"为了符合接口隔离原则，我们可以将接口拆分成更小的部分，让每个类只实现它们需要的方法：",{"type":509,"tag":562,"props":2277,"children":2279},{"className":564,"code":2278,"language":566,"meta":503,"style":503},"// 遵循接口隔离原则的设计\nclass Bird {\n  fly() {\n    // 实现飞行逻辑\n  }\n}\n\nclass Fish {\n  swim() {\n    // 实现游泳逻辑\n  }\n}\n",[2280],{"type":509,"tag":569,"props":2281,"children":2282},{"__ignoreMap":503},[2283,2291,2306,2321,2328,2335,2342,2349,2364,2379,2386,2393],{"type":509,"tag":573,"props":2284,"children":2285},{"class":575,"line":576},[2286],{"type":509,"tag":573,"props":2287,"children":2288},{"style":632},[2289],{"type":514,"value":2290},"// 遵循接口隔离原则的设计\n",{"type":509,"tag":573,"props":2292,"children":2293},{"class":575,"line":598},[2294,2298,2302],{"type":509,"tag":573,"props":2295,"children":2296},{"style":580},[2297],{"type":514,"value":583},{"type":509,"tag":573,"props":2299,"children":2300},{"style":586},[2301],{"type":514,"value":2088},{"type":509,"tag":573,"props":2303,"children":2304},{"style":592},[2305],{"type":514,"value":595},{"type":509,"tag":573,"props":2307,"children":2308},{"class":575,"line":628},[2309,2313,2317],{"type":509,"tag":573,"props":2310,"children":2311},{"style":602},[2312],{"type":514,"value":2100},{"type":509,"tag":573,"props":2314,"children":2315},{"style":592},[2316],{"type":514,"value":668},{"type":509,"tag":573,"props":2318,"children":2319},{"style":592},[2320],{"type":514,"value":595},{"type":509,"tag":573,"props":2322,"children":2323},{"class":575,"line":638},[2324],{"type":509,"tag":573,"props":2325,"children":2326},{"style":632},[2327],{"type":514,"value":2116},{"type":509,"tag":573,"props":2329,"children":2330},{"class":575,"line":647},[2331],{"type":509,"tag":573,"props":2332,"children":2333},{"style":592},[2334],{"type":514,"value":644},{"type":509,"tag":573,"props":2336,"children":2337},{"class":575,"line":657},[2338],{"type":509,"tag":573,"props":2339,"children":2340},{"style":592},[2341],{"type":514,"value":698},{"type":509,"tag":573,"props":2343,"children":2344},{"class":575,"line":675},[2345],{"type":509,"tag":573,"props":2346,"children":2347},{"emptyLinePlaceholder":651},[2348],{"type":514,"value":654},{"type":509,"tag":573,"props":2350,"children":2351},{"class":575,"line":684},[2352,2356,2360],{"type":509,"tag":573,"props":2353,"children":2354},{"style":580},[2355],{"type":514,"value":583},{"type":509,"tag":573,"props":2357,"children":2358},{"style":586},[2359],{"type":514,"value":2187},{"type":509,"tag":573,"props":2361,"children":2362},{"style":592},[2363],{"type":514,"value":595},{"type":509,"tag":573,"props":2365,"children":2366},{"class":575,"line":692},[2367,2371,2375],{"type":509,"tag":573,"props":2368,"children":2369},{"style":602},[2370],{"type":514,"value":2138},{"type":509,"tag":573,"props":2372,"children":2373},{"style":592},[2374],{"type":514,"value":668},{"type":509,"tag":573,"props":2376,"children":2377},{"style":592},[2378],{"type":514,"value":595},{"type":509,"tag":573,"props":2380,"children":2381},{"class":575,"line":836},[2382],{"type":509,"tag":573,"props":2383,"children":2384},{"style":632},[2385],{"type":514,"value":2214},{"type":509,"tag":573,"props":2387,"children":2388},{"class":575,"line":844},[2389],{"type":509,"tag":573,"props":2390,"children":2391},{"style":592},[2392],{"type":514,"value":644},{"type":509,"tag":573,"props":2394,"children":2395},{"class":575,"line":1054},[2396],{"type":509,"tag":573,"props":2397,"children":2398},{"style":592},[2399],{"type":514,"value":698},{"type":509,"tag":510,"props":2401,"children":2402},{},[2403],{"type":514,"value":2404},"这样，每个类都只依赖于它们需要的接口，不再强迫实现不必要的方法。接口隔离原则的目标是使接口更具体，更贴近类的实际需求，从而提高系统的灵活性和可维护性。",{"type":509,"tag":551,"props":2406,"children":2408},{"id":2407},"依赖反转原则",[2409],{"type":514,"value":2407},{"type":509,"tag":510,"props":2411,"children":2412},{},[2413],{"type":514,"value":2414},"依赖反转原则（Dependency Inversion Principle，DIP） 是 SOLID 原则之一，它强调高层模块不应该依赖于低层模块，而两者都应该依赖于抽象。抽象不应该依赖于细节，细节应该依赖于抽象。简而言之，依赖反转原则倡导通过抽象来解耦高层和低层模块之间的依赖关系。",{"type":509,"tag":510,"props":2416,"children":2417},{},[2418],{"type":514,"value":2419},"举例说明，考虑一个简单的报告生成系统，有一个高层模块 ReportGenerator 负责生成报告：",{"type":509,"tag":562,"props":2421,"children":2423},{"className":564,"code":2422,"language":566,"meta":503,"style":503},"// 不遵循依赖反转原则的设计\nclass ReportGenerator {\n  constructor() {\n    this.pdfGenerator = new PDFGenerator(); // 依赖于具体的 PDF 生成器\n  }\n\n  generateReport() {\n    // 生成报告的逻辑\n    this.pdfGenerator.generatePDF();\n  }\n}\n\nclass PDFGenerator {\n  generatePDF() {\n    // 具体的 PDF 生成逻辑\n  }\n}\n",[2424],{"type":509,"tag":569,"props":2425,"children":2426},{"__ignoreMap":503},[2427,2435,2451,2466,2506,2513,2520,2536,2544,2573,2580,2587,2594,2609,2625,2633,2640],{"type":509,"tag":573,"props":2428,"children":2429},{"class":575,"line":576},[2430],{"type":509,"tag":573,"props":2431,"children":2432},{"style":632},[2433],{"type":514,"value":2434},"// 不遵循依赖反转原则的设计\n",{"type":509,"tag":573,"props":2436,"children":2437},{"class":575,"line":598},[2438,2442,2447],{"type":509,"tag":573,"props":2439,"children":2440},{"style":580},[2441],{"type":514,"value":583},{"type":509,"tag":573,"props":2443,"children":2444},{"style":586},[2445],{"type":514,"value":2446}," ReportGenerator",{"type":509,"tag":573,"props":2448,"children":2449},{"style":592},[2450],{"type":514,"value":595},{"type":509,"tag":573,"props":2452,"children":2453},{"class":575,"line":628},[2454,2458,2462],{"type":509,"tag":573,"props":2455,"children":2456},{"style":580},[2457],{"type":514,"value":900},{"type":509,"tag":573,"props":2459,"children":2460},{"style":592},[2461],{"type":514,"value":668},{"type":509,"tag":573,"props":2463,"children":2464},{"style":592},[2465],{"type":514,"value":595},{"type":509,"tag":573,"props":2467,"children":2468},{"class":575,"line":638},[2469,2473,2477,2482,2486,2491,2496,2501],{"type":509,"tag":573,"props":2470,"children":2471},{"style":923},[2472],{"type":514,"value":926},{"type":509,"tag":573,"props":2474,"children":2475},{"style":592},[2476],{"type":514,"value":931},{"type":509,"tag":573,"props":2478,"children":2479},{"style":613},[2480],{"type":514,"value":2481},"pdfGenerator",{"type":509,"tag":573,"props":2483,"children":2484},{"style":592},[2485],{"type":514,"value":940},{"type":509,"tag":573,"props":2487,"children":2488},{"style":580},[2489],{"type":514,"value":2490}," new",{"type":509,"tag":573,"props":2492,"children":2493},{"style":602},[2494],{"type":514,"value":2495}," PDFGenerator",{"type":509,"tag":573,"props":2497,"children":2498},{"style":592},[2499],{"type":514,"value":2500},"();",{"type":509,"tag":573,"props":2502,"children":2503},{"style":632},[2504],{"type":514,"value":2505}," // 依赖于具体的 PDF 生成器\n",{"type":509,"tag":573,"props":2507,"children":2508},{"class":575,"line":647},[2509],{"type":509,"tag":573,"props":2510,"children":2511},{"style":592},[2512],{"type":514,"value":644},{"type":509,"tag":573,"props":2514,"children":2515},{"class":575,"line":657},[2516],{"type":509,"tag":573,"props":2517,"children":2518},{"emptyLinePlaceholder":651},[2519],{"type":514,"value":654},{"type":509,"tag":573,"props":2521,"children":2522},{"class":575,"line":675},[2523,2528,2532],{"type":509,"tag":573,"props":2524,"children":2525},{"style":602},[2526],{"type":514,"value":2527},"  generateReport",{"type":509,"tag":573,"props":2529,"children":2530},{"style":592},[2531],{"type":514,"value":668},{"type":509,"tag":573,"props":2533,"children":2534},{"style":592},[2535],{"type":514,"value":595},{"type":509,"tag":573,"props":2537,"children":2538},{"class":575,"line":684},[2539],{"type":509,"tag":573,"props":2540,"children":2541},{"style":632},[2542],{"type":514,"value":2543},"    // 生成报告的逻辑\n",{"type":509,"tag":573,"props":2545,"children":2546},{"class":575,"line":692},[2547,2551,2555,2559,2563,2568],{"type":509,"tag":573,"props":2548,"children":2549},{"style":923},[2550],{"type":514,"value":926},{"type":509,"tag":573,"props":2552,"children":2553},{"style":592},[2554],{"type":514,"value":931},{"type":509,"tag":573,"props":2556,"children":2557},{"style":613},[2558],{"type":514,"value":2481},{"type":509,"tag":573,"props":2560,"children":2561},{"style":592},[2562],{"type":514,"value":931},{"type":509,"tag":573,"props":2564,"children":2565},{"style":602},[2566],{"type":514,"value":2567},"generatePDF",{"type":509,"tag":573,"props":2569,"children":2570},{"style":592},[2571],{"type":514,"value":2572},"();\n",{"type":509,"tag":573,"props":2574,"children":2575},{"class":575,"line":836},[2576],{"type":509,"tag":573,"props":2577,"children":2578},{"style":592},[2579],{"type":514,"value":644},{"type":509,"tag":573,"props":2581,"children":2582},{"class":575,"line":844},[2583],{"type":509,"tag":573,"props":2584,"children":2585},{"style":592},[2586],{"type":514,"value":698},{"type":509,"tag":573,"props":2588,"children":2589},{"class":575,"line":1054},[2590],{"type":509,"tag":573,"props":2591,"children":2592},{"emptyLinePlaceholder":651},[2593],{"type":514,"value":654},{"type":509,"tag":573,"props":2595,"children":2596},{"class":575,"line":1080},[2597,2601,2605],{"type":509,"tag":573,"props":2598,"children":2599},{"style":580},[2600],{"type":514,"value":583},{"type":509,"tag":573,"props":2602,"children":2603},{"style":586},[2604],{"type":514,"value":2495},{"type":509,"tag":573,"props":2606,"children":2607},{"style":592},[2608],{"type":514,"value":595},{"type":509,"tag":573,"props":2610,"children":2611},{"class":575,"line":1096},[2612,2617,2621],{"type":509,"tag":573,"props":2613,"children":2614},{"style":602},[2615],{"type":514,"value":2616},"  generatePDF",{"type":509,"tag":573,"props":2618,"children":2619},{"style":592},[2620],{"type":514,"value":668},{"type":509,"tag":573,"props":2622,"children":2623},{"style":592},[2624],{"type":514,"value":595},{"type":509,"tag":573,"props":2626,"children":2627},{"class":575,"line":1133},[2628],{"type":509,"tag":573,"props":2629,"children":2630},{"style":632},[2631],{"type":514,"value":2632},"    // 具体的 PDF 生成逻辑\n",{"type":509,"tag":573,"props":2634,"children":2635},{"class":575,"line":1141},[2636],{"type":509,"tag":573,"props":2637,"children":2638},{"style":592},[2639],{"type":514,"value":644},{"type":509,"tag":573,"props":2641,"children":2642},{"class":575,"line":1149},[2643],{"type":509,"tag":573,"props":2644,"children":2645},{"style":592},[2646],{"type":514,"value":698},{"type":509,"tag":510,"props":2648,"children":2649},{},[2650],{"type":514,"value":2651},"在这个设计中，ReportGenerator 直接依赖于具体的 PDFGenerator 类，这违反了依赖反转原则。如果我们想使用其他类型的报告生成器，例如 HTMLGenerator，就需要修改 ReportGenerator 类。",{"type":509,"tag":510,"props":2653,"children":2654},{},[2655],{"type":514,"value":2656},"为了符合依赖反转原则，我们应该通过抽象来解耦高层和低层模块：",{"type":509,"tag":562,"props":2658,"children":2660},{"className":564,"code":2659,"language":566,"meta":503,"style":503},"// 遵循依赖反转原则的设计\nclass ReportGenerator {\n  constructor(generator) {\n    this.generator = generator; // 依赖于抽象的报告生成器接口\n  }\n\n  generateReport() {\n    // 生成报告的逻辑\n    this.generator.generate();\n  }\n}\n\nclass PDFGenerator {\n  generate() {\n    // 具体的 PDF 生成逻辑\n  }\n}\n\nclass HTMLGenerator {\n  generate() {\n    // 具体的 HTML 生成逻辑\n  }\n}\n",[2661],{"type":509,"tag":569,"props":2662,"children":2663},{"__ignoreMap":503},[2664,2672,2687,2711,2745,2752,2759,2774,2781,2809,2816,2823,2830,2845,2861,2868,2875,2882,2889,2905,2920,2928,2935],{"type":509,"tag":573,"props":2665,"children":2666},{"class":575,"line":576},[2667],{"type":509,"tag":573,"props":2668,"children":2669},{"style":632},[2670],{"type":514,"value":2671},"// 遵循依赖反转原则的设计\n",{"type":509,"tag":573,"props":2673,"children":2674},{"class":575,"line":598},[2675,2679,2683],{"type":509,"tag":573,"props":2676,"children":2677},{"style":580},[2678],{"type":514,"value":583},{"type":509,"tag":573,"props":2680,"children":2681},{"style":586},[2682],{"type":514,"value":2446},{"type":509,"tag":573,"props":2684,"children":2685},{"style":592},[2686],{"type":514,"value":595},{"type":509,"tag":573,"props":2688,"children":2689},{"class":575,"line":628},[2690,2694,2698,2703,2707],{"type":509,"tag":573,"props":2691,"children":2692},{"style":580},[2693],{"type":514,"value":900},{"type":509,"tag":573,"props":2695,"children":2696},{"style":592},[2697],{"type":514,"value":610},{"type":509,"tag":573,"props":2699,"children":2700},{"style":613},[2701],{"type":514,"value":2702},"generator",{"type":509,"tag":573,"props":2704,"children":2705},{"style":592},[2706],{"type":514,"value":621},{"type":509,"tag":573,"props":2708,"children":2709},{"style":592},[2710],{"type":514,"value":595},{"type":509,"tag":573,"props":2712,"children":2713},{"class":575,"line":638},[2714,2718,2722,2726,2730,2735,2740],{"type":509,"tag":573,"props":2715,"children":2716},{"style":923},[2717],{"type":514,"value":926},{"type":509,"tag":573,"props":2719,"children":2720},{"style":592},[2721],{"type":514,"value":931},{"type":509,"tag":573,"props":2723,"children":2724},{"style":613},[2725],{"type":514,"value":2702},{"type":509,"tag":573,"props":2727,"children":2728},{"style":592},[2729],{"type":514,"value":940},{"type":509,"tag":573,"props":2731,"children":2732},{"style":613},[2733],{"type":514,"value":2734}," generator",{"type":509,"tag":573,"props":2736,"children":2737},{"style":592},[2738],{"type":514,"value":2739},";",{"type":509,"tag":573,"props":2741,"children":2742},{"style":632},[2743],{"type":514,"value":2744}," // 依赖于抽象的报告生成器接口\n",{"type":509,"tag":573,"props":2746,"children":2747},{"class":575,"line":647},[2748],{"type":509,"tag":573,"props":2749,"children":2750},{"style":592},[2751],{"type":514,"value":644},{"type":509,"tag":573,"props":2753,"children":2754},{"class":575,"line":657},[2755],{"type":509,"tag":573,"props":2756,"children":2757},{"emptyLinePlaceholder":651},[2758],{"type":514,"value":654},{"type":509,"tag":573,"props":2760,"children":2761},{"class":575,"line":675},[2762,2766,2770],{"type":509,"tag":573,"props":2763,"children":2764},{"style":602},[2765],{"type":514,"value":2527},{"type":509,"tag":573,"props":2767,"children":2768},{"style":592},[2769],{"type":514,"value":668},{"type":509,"tag":573,"props":2771,"children":2772},{"style":592},[2773],{"type":514,"value":595},{"type":509,"tag":573,"props":2775,"children":2776},{"class":575,"line":684},[2777],{"type":509,"tag":573,"props":2778,"children":2779},{"style":632},[2780],{"type":514,"value":2543},{"type":509,"tag":573,"props":2782,"children":2783},{"class":575,"line":692},[2784,2788,2792,2796,2800,2805],{"type":509,"tag":573,"props":2785,"children":2786},{"style":923},[2787],{"type":514,"value":926},{"type":509,"tag":573,"props":2789,"children":2790},{"style":592},[2791],{"type":514,"value":931},{"type":509,"tag":573,"props":2793,"children":2794},{"style":613},[2795],{"type":514,"value":2702},{"type":509,"tag":573,"props":2797,"children":2798},{"style":592},[2799],{"type":514,"value":931},{"type":509,"tag":573,"props":2801,"children":2802},{"style":602},[2803],{"type":514,"value":2804},"generate",{"type":509,"tag":573,"props":2806,"children":2807},{"style":592},[2808],{"type":514,"value":2572},{"type":509,"tag":573,"props":2810,"children":2811},{"class":575,"line":836},[2812],{"type":509,"tag":573,"props":2813,"children":2814},{"style":592},[2815],{"type":514,"value":644},{"type":509,"tag":573,"props":2817,"children":2818},{"class":575,"line":844},[2819],{"type":509,"tag":573,"props":2820,"children":2821},{"style":592},[2822],{"type":514,"value":698},{"type":509,"tag":573,"props":2824,"children":2825},{"class":575,"line":1054},[2826],{"type":509,"tag":573,"props":2827,"children":2828},{"emptyLinePlaceholder":651},[2829],{"type":514,"value":654},{"type":509,"tag":573,"props":2831,"children":2832},{"class":575,"line":1080},[2833,2837,2841],{"type":509,"tag":573,"props":2834,"children":2835},{"style":580},[2836],{"type":514,"value":583},{"type":509,"tag":573,"props":2838,"children":2839},{"style":586},[2840],{"type":514,"value":2495},{"type":509,"tag":573,"props":2842,"children":2843},{"style":592},[2844],{"type":514,"value":595},{"type":509,"tag":573,"props":2846,"children":2847},{"class":575,"line":1096},[2848,2853,2857],{"type":509,"tag":573,"props":2849,"children":2850},{"style":602},[2851],{"type":514,"value":2852},"  generate",{"type":509,"tag":573,"props":2854,"children":2855},{"style":592},[2856],{"type":514,"value":668},{"type":509,"tag":573,"props":2858,"children":2859},{"style":592},[2860],{"type":514,"value":595},{"type":509,"tag":573,"props":2862,"children":2863},{"class":575,"line":1133},[2864],{"type":509,"tag":573,"props":2865,"children":2866},{"style":632},[2867],{"type":514,"value":2632},{"type":509,"tag":573,"props":2869,"children":2870},{"class":575,"line":1141},[2871],{"type":509,"tag":573,"props":2872,"children":2873},{"style":592},[2874],{"type":514,"value":644},{"type":509,"tag":573,"props":2876,"children":2877},{"class":575,"line":1149},[2878],{"type":509,"tag":573,"props":2879,"children":2880},{"style":592},[2881],{"type":514,"value":698},{"type":509,"tag":573,"props":2883,"children":2884},{"class":575,"line":1157},[2885],{"type":509,"tag":573,"props":2886,"children":2887},{"emptyLinePlaceholder":651},[2888],{"type":514,"value":654},{"type":509,"tag":573,"props":2890,"children":2891},{"class":575,"line":1182},[2892,2896,2901],{"type":509,"tag":573,"props":2893,"children":2894},{"style":580},[2895],{"type":514,"value":583},{"type":509,"tag":573,"props":2897,"children":2898},{"style":586},[2899],{"type":514,"value":2900}," HTMLGenerator",{"type":509,"tag":573,"props":2902,"children":2903},{"style":592},[2904],{"type":514,"value":595},{"type":509,"tag":573,"props":2906,"children":2907},{"class":575,"line":1198},[2908,2912,2916],{"type":509,"tag":573,"props":2909,"children":2910},{"style":602},[2911],{"type":514,"value":2852},{"type":509,"tag":573,"props":2913,"children":2914},{"style":592},[2915],{"type":514,"value":668},{"type":509,"tag":573,"props":2917,"children":2918},{"style":592},[2919],{"type":514,"value":595},{"type":509,"tag":573,"props":2921,"children":2922},{"class":575,"line":1235},[2923],{"type":509,"tag":573,"props":2924,"children":2925},{"style":632},[2926],{"type":514,"value":2927},"    // 具体的 HTML 生成逻辑\n",{"type":509,"tag":573,"props":2929,"children":2930},{"class":575,"line":1243},[2931],{"type":509,"tag":573,"props":2932,"children":2933},{"style":592},[2934],{"type":514,"value":644},{"type":509,"tag":573,"props":2936,"children":2938},{"class":575,"line":2937},23,[2939],{"type":509,"tag":573,"props":2940,"children":2941},{"style":592},[2942],{"type":514,"value":698},{"type":509,"tag":510,"props":2944,"children":2945},{},[2946],{"type":514,"value":2947},"现在，ReportGenerator 不再直接依赖于具体的实现，而是依赖于抽象的报告生成器接口。这使得我们可以轻松地扩展系统，例如添加新的报告生成器，而不需要修改 ReportGenerator 类。这样的设计更加灵活，符合依赖反转原则。",{"type":509,"tag":2949,"props":2950,"children":2951},"style",{},[2952],{"type":514,"value":2953},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":503,"searchDepth":647,"depth":647,"links":2955},[2956,2957,2958,2959,2960],{"id":553,"depth":598,"text":553},{"id":857,"depth":598,"text":857},{"id":1463,"depth":598,"text":1463},{"id":2044,"depth":598,"text":2044},{"id":2407,"depth":598,"text":2407},"markdown","content:4.design-mode:1.thoughts-principles.md","content","4.design-mode/1.thoughts-principles.md","md",[2967,2968],{"_path":478,"title":477,"description":503},{"_path":495,"title":494,"description":503},1714054340717]