[{"data":1,"prerenderedAt":2978},["Reactive",2],{"navigation":3,"/design-mode/thoughts-principles":509,"/design-mode/thoughts-principles-surround":2975},[4,269,298,477,485,494],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":476},"代码考核","/code-assessment",[302,376,469],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370,373],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":374,"_path":375},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":377,"_path":378,"children":379},"业务场景","/code-assessment/scene",[380,405,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463,466],{"title":381,"_path":382,"children":383},"Promise","/code-assessment/scene/promise",[384,387,390,393,396,399,402],{"title":385,"_path":386},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":388,"_path":389},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":391,"_path":392},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":394,"_path":395},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":397,"_path":398},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":400,"_path":401},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":403,"_path":404},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":406,"_path":407,"children":408},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[409,412],{"title":410,"_path":411},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":413,"_path":414},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":416,"_path":417},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":419,"_path":420},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":422,"_path":423},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":425,"_path":426},"倒计时","/code-assessment/scene/countdown",{"title":428,"_path":429},"日期格式化","/code-assessment/scene/date-format",{"title":431,"_path":432},"实现前端路由","/code-assessment/scene/frontend-route",{"title":434,"_path":435},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":437,"_path":438},"lodash.get","/code-assessment/scene/lodash-get",{"title":440,"_path":441},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":443,"_path":444},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":446,"_path":447},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":449,"_path":450},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":452,"_path":453},"随机数","/code-assessment/scene/random-number",{"title":455,"_path":456},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":458,"_path":459},"sku 算法实现","/code-assessment/scene/sku",{"title":461,"_path":462},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":464,"_path":465},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":467,"_path":468},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":470,"_path":471,"children":472},"Ts 类型挑战","/code-assessment/type-challeges",[473],{"title":474,"_path":475},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":478,"_path":479,"children":480,"icon":484},"项目","/project",[481],{"title":482,"_path":483},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":486,"_path":487,"children":488,"icon":493},"设计模式","/design-mode",[489,490],{"title":486,"_path":487},{"title":491,"_path":492},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":495,"_path":496,"children":497,"icon":508},"后端语言","/backend-languages",[498],{"title":499,"_path":500,"children":501},"Python","/backend-languages/python",[502,505],{"title":503,"_path":504},"基础","/backend-languages/python/base",{"title":506,"_path":507},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":492,"_dir":510,"_draft":511,"_partial":511,"_locale":512,"title":491,"description":513,"body":514,"_type":2970,"_id":2971,"_source":2972,"_file":2973,"_extension":2974},"design-mode",false,"","SOLID 是一个面向对象设计和编程中的五个基本原则的缩写，它们旨在帮助开发者设计更加灵活、可维护和可扩展的软件系统。这些原则由 Robert C. Martin 等人提出，它们包括以下五个原则：",{"type":515,"children":516,"toc":2963},"root",[517,524,554,559,565,570,708,713,727,732,859,864,869,874,879,1258,1263,1268,1460,1465,1470,1475,1480,1485,1490,1820,1825,2041,2046,2051,2056,2061,2066,2071,2275,2280,2285,2409,2414,2419,2424,2429,2656,2661,2666,2952,2957],{"type":518,"tag":519,"props":520,"children":521},"element","p",{},[522],{"type":523,"value":513},"text",{"type":518,"tag":525,"props":526,"children":527},"ul",{},[528,534,539,544,549],{"type":518,"tag":529,"props":530,"children":531},"li",{},[532],{"type":523,"value":533},"单一职责原则（Single Responsibility Principle，SRP）",{"type":518,"tag":529,"props":535,"children":536},{},[537],{"type":523,"value":538},"开放/封闭原则（Open/Closed Principle，OCP）",{"type":518,"tag":529,"props":540,"children":541},{},[542],{"type":523,"value":543},"里氏替换原则（Liskov Substitution Principle，LSP）",{"type":518,"tag":529,"props":545,"children":546},{},[547],{"type":523,"value":548},"接口隔离原则（Interface Segregation Principle，ISP）",{"type":518,"tag":529,"props":550,"children":551},{},[552],{"type":523,"value":553},"依赖反转原则（Dependency Inversion Principle，DIP）",{"type":518,"tag":519,"props":555,"children":556},{},[557],{"type":523,"value":558},"这些原则共同促使开发者创建具有高内聚、低耦合、易扩展和易维护性的软件系统。遵循这些原则有助于构建更健壮的面向对象系统，提高代码质量和可维护性。",{"type":518,"tag":560,"props":561,"children":563},"h2",{"id":562},"单一职责原则",[564],{"type":523,"value":562},{"type":518,"tag":519,"props":566,"children":567},{},[568],{"type":523,"value":569},"单一职责原则（Single Responsibility Principle，SRP）要求一个类或者模块只负责完成一个职责（或者功能）。 假设我们有一个简单的厨师类，它负责烹饪和洗碗两个职责：",{"type":518,"tag":571,"props":572,"children":576},"pre",{"className":573,"code":574,"language":575,"meta":512,"style":512},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","class Chef {\n  cookDish(dish) {\n    // 烹饪菜品的具体实现\n  }\n\n  washDishes() {\n    // 洗碗的具体实现\n  }\n}\n","js",[577],{"type":518,"tag":578,"props":579,"children":580},"code",{"__ignoreMap":512},[581,605,635,645,654,664,682,691,699],{"type":518,"tag":582,"props":583,"children":586},"span",{"class":584,"line":585},"line",1,[587,593,599],{"type":518,"tag":582,"props":588,"children":590},{"style":589},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[591],{"type":523,"value":592},"class",{"type":518,"tag":582,"props":594,"children":596},{"style":595},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[597],{"type":523,"value":598}," Chef",{"type":518,"tag":582,"props":600,"children":602},{"style":601},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[603],{"type":523,"value":604}," {\n",{"type":518,"tag":582,"props":606,"children":608},{"class":584,"line":607},2,[609,615,620,626,631],{"type":518,"tag":582,"props":610,"children":612},{"style":611},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[613],{"type":523,"value":614},"  cookDish",{"type":518,"tag":582,"props":616,"children":617},{"style":601},[618],{"type":523,"value":619},"(",{"type":518,"tag":582,"props":621,"children":623},{"style":622},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[624],{"type":523,"value":625},"dish",{"type":518,"tag":582,"props":627,"children":628},{"style":601},[629],{"type":523,"value":630},")",{"type":518,"tag":582,"props":632,"children":633},{"style":601},[634],{"type":523,"value":604},{"type":518,"tag":582,"props":636,"children":638},{"class":584,"line":637},3,[639],{"type":518,"tag":582,"props":640,"children":642},{"style":641},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[643],{"type":523,"value":644},"    // 烹饪菜品的具体实现\n",{"type":518,"tag":582,"props":646,"children":648},{"class":584,"line":647},4,[649],{"type":518,"tag":582,"props":650,"children":651},{"style":601},[652],{"type":523,"value":653},"  }\n",{"type":518,"tag":582,"props":655,"children":657},{"class":584,"line":656},5,[658],{"type":518,"tag":582,"props":659,"children":661},{"emptyLinePlaceholder":660},true,[662],{"type":523,"value":663},"\n",{"type":518,"tag":582,"props":665,"children":667},{"class":584,"line":666},6,[668,673,678],{"type":518,"tag":582,"props":669,"children":670},{"style":611},[671],{"type":523,"value":672},"  washDishes",{"type":518,"tag":582,"props":674,"children":675},{"style":601},[676],{"type":523,"value":677},"()",{"type":518,"tag":582,"props":679,"children":680},{"style":601},[681],{"type":523,"value":604},{"type":518,"tag":582,"props":683,"children":685},{"class":584,"line":684},7,[686],{"type":518,"tag":582,"props":687,"children":688},{"style":641},[689],{"type":523,"value":690},"    // 洗碗的具体实现\n",{"type":518,"tag":582,"props":692,"children":694},{"class":584,"line":693},8,[695],{"type":518,"tag":582,"props":696,"children":697},{"style":601},[698],{"type":523,"value":653},{"type":518,"tag":582,"props":700,"children":702},{"class":584,"line":701},9,[703],{"type":518,"tag":582,"props":704,"children":705},{"style":601},[706],{"type":523,"value":707},"}\n",{"type":518,"tag":519,"props":709,"children":710},{},[711],{"type":523,"value":712},"这个类违反了单一职责原则，因为它有两个职责：烹饪和洗碗。这样的设计可能导致以下问题：",{"type":518,"tag":714,"props":715,"children":716},"ol",{},[717,722],{"type":518,"tag":529,"props":718,"children":719},{},[720],{"type":523,"value":721},"如果厨师的烹饪逻辑变化，需要修改 cookDish 方法，这可能会影响洗碗的部分。",{"type":518,"tag":529,"props":723,"children":724},{},[725],{"type":523,"value":726},"如果洗碗的逻辑变化，需要修改 washDishes 方法，这可能会影响烹饪的部分。",{"type":518,"tag":519,"props":728,"children":729},{},[730],{"type":523,"value":731},"按照单一职责原则，我们应该将这两个职责分开，分别由不同的类负责：",{"type":518,"tag":571,"props":733,"children":735},{"className":573,"code":734,"language":575,"meta":512,"style":512},"class Chef {\n  cookDish(dish) {\n    // 烹饪菜品的具体实现\n  }\n}\n\nclass Dishwasher {\n  washDishes() {\n    // 洗碗的具体实现\n  }\n}\n",[736],{"type":518,"tag":578,"props":737,"children":738},{"__ignoreMap":512},[739,754,777,784,791,798,805,821,836,843,851],{"type":518,"tag":582,"props":740,"children":741},{"class":584,"line":585},[742,746,750],{"type":518,"tag":582,"props":743,"children":744},{"style":589},[745],{"type":523,"value":592},{"type":518,"tag":582,"props":747,"children":748},{"style":595},[749],{"type":523,"value":598},{"type":518,"tag":582,"props":751,"children":752},{"style":601},[753],{"type":523,"value":604},{"type":518,"tag":582,"props":755,"children":756},{"class":584,"line":607},[757,761,765,769,773],{"type":518,"tag":582,"props":758,"children":759},{"style":611},[760],{"type":523,"value":614},{"type":518,"tag":582,"props":762,"children":763},{"style":601},[764],{"type":523,"value":619},{"type":518,"tag":582,"props":766,"children":767},{"style":622},[768],{"type":523,"value":625},{"type":518,"tag":582,"props":770,"children":771},{"style":601},[772],{"type":523,"value":630},{"type":518,"tag":582,"props":774,"children":775},{"style":601},[776],{"type":523,"value":604},{"type":518,"tag":582,"props":778,"children":779},{"class":584,"line":637},[780],{"type":518,"tag":582,"props":781,"children":782},{"style":641},[783],{"type":523,"value":644},{"type":518,"tag":582,"props":785,"children":786},{"class":584,"line":647},[787],{"type":518,"tag":582,"props":788,"children":789},{"style":601},[790],{"type":523,"value":653},{"type":518,"tag":582,"props":792,"children":793},{"class":584,"line":656},[794],{"type":518,"tag":582,"props":795,"children":796},{"style":601},[797],{"type":523,"value":707},{"type":518,"tag":582,"props":799,"children":800},{"class":584,"line":666},[801],{"type":518,"tag":582,"props":802,"children":803},{"emptyLinePlaceholder":660},[804],{"type":523,"value":663},{"type":518,"tag":582,"props":806,"children":807},{"class":584,"line":684},[808,812,817],{"type":518,"tag":582,"props":809,"children":810},{"style":589},[811],{"type":523,"value":592},{"type":518,"tag":582,"props":813,"children":814},{"style":595},[815],{"type":523,"value":816}," Dishwasher",{"type":518,"tag":582,"props":818,"children":819},{"style":601},[820],{"type":523,"value":604},{"type":518,"tag":582,"props":822,"children":823},{"class":584,"line":693},[824,828,832],{"type":518,"tag":582,"props":825,"children":826},{"style":611},[827],{"type":523,"value":672},{"type":518,"tag":582,"props":829,"children":830},{"style":601},[831],{"type":523,"value":677},{"type":518,"tag":582,"props":833,"children":834},{"style":601},[835],{"type":523,"value":604},{"type":518,"tag":582,"props":837,"children":838},{"class":584,"line":701},[839],{"type":518,"tag":582,"props":840,"children":841},{"style":641},[842],{"type":523,"value":690},{"type":518,"tag":582,"props":844,"children":846},{"class":584,"line":845},10,[847],{"type":518,"tag":582,"props":848,"children":849},{"style":601},[850],{"type":523,"value":653},{"type":518,"tag":582,"props":852,"children":854},{"class":584,"line":853},11,[855],{"type":518,"tag":582,"props":856,"children":857},{"style":601},[858],{"type":523,"value":707},{"type":518,"tag":519,"props":860,"children":861},{},[862],{"type":523,"value":863},"这样，Chef 类专注于烹饪，而 Dishwasher 类专注于洗碗。每个类都有一个单一的职责，使得代码更清晰、易于理解，并且在未来的变更中更具弹性。",{"type":518,"tag":560,"props":865,"children":867},{"id":866},"开放封闭原则",[868],{"type":523,"value":866},{"type":518,"tag":519,"props":870,"children":871},{},[872],{"type":523,"value":873},"开关封闭原则（Open/Closed Principle，OCP）要求软件实体（例如类、模块、函数等）应该对扩展开放，对修改关闭。简而言之，一个模块在扩展新功能时不应该修改原有的代码，而是通过添加新的代码来实现扩展。",{"type":518,"tag":519,"props":875,"children":876},{},[877],{"type":523,"value":878},"考虑一个动物园的场景。我们有一些动物，每个动物都会发出叫声。初始设计如下：",{"type":518,"tag":571,"props":880,"children":882},{"className":573,"code":881,"language":575,"meta":512,"style":512},"class Animal {\n  constructor(name) {\n    this.name = name;\n  }\n\n  makeSound() {\n    // 默认的叫声\n    console.log(\"Some generic animal sound\");\n  }\n}\n\nclass Lion extends Animal {\n  makeSound() {\n    console.log(\"Roar!\");\n  }\n}\n\nclass Elephant extends Animal {\n  makeSound() {\n    console.log(\"Trumpet!\");\n  }\n}\n",[883],{"type":518,"tag":578,"props":884,"children":885},{"__ignoreMap":512},[886,902,927,960,967,974,990,998,1040,1047,1054,1061,1087,1103,1140,1148,1156,1164,1189,1205,1242,1250],{"type":518,"tag":582,"props":887,"children":888},{"class":584,"line":585},[889,893,898],{"type":518,"tag":582,"props":890,"children":891},{"style":589},[892],{"type":523,"value":592},{"type":518,"tag":582,"props":894,"children":895},{"style":595},[896],{"type":523,"value":897}," Animal",{"type":518,"tag":582,"props":899,"children":900},{"style":601},[901],{"type":523,"value":604},{"type":518,"tag":582,"props":903,"children":904},{"class":584,"line":607},[905,910,914,919,923],{"type":518,"tag":582,"props":906,"children":907},{"style":589},[908],{"type":523,"value":909},"  constructor",{"type":518,"tag":582,"props":911,"children":912},{"style":601},[913],{"type":523,"value":619},{"type":518,"tag":582,"props":915,"children":916},{"style":622},[917],{"type":523,"value":918},"name",{"type":518,"tag":582,"props":920,"children":921},{"style":601},[922],{"type":523,"value":630},{"type":518,"tag":582,"props":924,"children":925},{"style":601},[926],{"type":523,"value":604},{"type":518,"tag":582,"props":928,"children":929},{"class":584,"line":637},[930,936,941,945,950,955],{"type":518,"tag":582,"props":931,"children":933},{"style":932},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[934],{"type":523,"value":935},"    this",{"type":518,"tag":582,"props":937,"children":938},{"style":601},[939],{"type":523,"value":940},".",{"type":518,"tag":582,"props":942,"children":943},{"style":622},[944],{"type":523,"value":918},{"type":518,"tag":582,"props":946,"children":947},{"style":601},[948],{"type":523,"value":949}," =",{"type":518,"tag":582,"props":951,"children":952},{"style":622},[953],{"type":523,"value":954}," name",{"type":518,"tag":582,"props":956,"children":957},{"style":601},[958],{"type":523,"value":959},";\n",{"type":518,"tag":582,"props":961,"children":962},{"class":584,"line":647},[963],{"type":518,"tag":582,"props":964,"children":965},{"style":601},[966],{"type":523,"value":653},{"type":518,"tag":582,"props":968,"children":969},{"class":584,"line":656},[970],{"type":518,"tag":582,"props":971,"children":972},{"emptyLinePlaceholder":660},[973],{"type":523,"value":663},{"type":518,"tag":582,"props":975,"children":976},{"class":584,"line":666},[977,982,986],{"type":518,"tag":582,"props":978,"children":979},{"style":611},[980],{"type":523,"value":981},"  makeSound",{"type":518,"tag":582,"props":983,"children":984},{"style":601},[985],{"type":523,"value":677},{"type":518,"tag":582,"props":987,"children":988},{"style":601},[989],{"type":523,"value":604},{"type":518,"tag":582,"props":991,"children":992},{"class":584,"line":684},[993],{"type":518,"tag":582,"props":994,"children":995},{"style":641},[996],{"type":523,"value":997},"    // 默认的叫声\n",{"type":518,"tag":582,"props":999,"children":1000},{"class":584,"line":693},[1001,1006,1010,1015,1019,1025,1031,1035],{"type":518,"tag":582,"props":1002,"children":1003},{"style":622},[1004],{"type":523,"value":1005},"    console",{"type":518,"tag":582,"props":1007,"children":1008},{"style":601},[1009],{"type":523,"value":940},{"type":518,"tag":582,"props":1011,"children":1012},{"style":611},[1013],{"type":523,"value":1014},"log",{"type":518,"tag":582,"props":1016,"children":1017},{"style":601},[1018],{"type":523,"value":619},{"type":518,"tag":582,"props":1020,"children":1022},{"style":1021},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1023],{"type":523,"value":1024},"\"",{"type":518,"tag":582,"props":1026,"children":1028},{"style":1027},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[1029],{"type":523,"value":1030},"Some generic animal sound",{"type":518,"tag":582,"props":1032,"children":1033},{"style":1021},[1034],{"type":523,"value":1024},{"type":518,"tag":582,"props":1036,"children":1037},{"style":601},[1038],{"type":523,"value":1039},");\n",{"type":518,"tag":582,"props":1041,"children":1042},{"class":584,"line":701},[1043],{"type":518,"tag":582,"props":1044,"children":1045},{"style":601},[1046],{"type":523,"value":653},{"type":518,"tag":582,"props":1048,"children":1049},{"class":584,"line":845},[1050],{"type":518,"tag":582,"props":1051,"children":1052},{"style":601},[1053],{"type":523,"value":707},{"type":518,"tag":582,"props":1055,"children":1056},{"class":584,"line":853},[1057],{"type":518,"tag":582,"props":1058,"children":1059},{"emptyLinePlaceholder":660},[1060],{"type":523,"value":663},{"type":518,"tag":582,"props":1062,"children":1064},{"class":584,"line":1063},12,[1065,1069,1074,1079,1083],{"type":518,"tag":582,"props":1066,"children":1067},{"style":589},[1068],{"type":523,"value":592},{"type":518,"tag":582,"props":1070,"children":1071},{"style":595},[1072],{"type":523,"value":1073}," Lion",{"type":518,"tag":582,"props":1075,"children":1076},{"style":589},[1077],{"type":523,"value":1078}," extends",{"type":518,"tag":582,"props":1080,"children":1081},{"style":611},[1082],{"type":523,"value":897},{"type":518,"tag":582,"props":1084,"children":1085},{"style":601},[1086],{"type":523,"value":604},{"type":518,"tag":582,"props":1088,"children":1090},{"class":584,"line":1089},13,[1091,1095,1099],{"type":518,"tag":582,"props":1092,"children":1093},{"style":611},[1094],{"type":523,"value":981},{"type":518,"tag":582,"props":1096,"children":1097},{"style":601},[1098],{"type":523,"value":677},{"type":518,"tag":582,"props":1100,"children":1101},{"style":601},[1102],{"type":523,"value":604},{"type":518,"tag":582,"props":1104,"children":1106},{"class":584,"line":1105},14,[1107,1111,1115,1119,1123,1127,1132,1136],{"type":518,"tag":582,"props":1108,"children":1109},{"style":622},[1110],{"type":523,"value":1005},{"type":518,"tag":582,"props":1112,"children":1113},{"style":601},[1114],{"type":523,"value":940},{"type":518,"tag":582,"props":1116,"children":1117},{"style":611},[1118],{"type":523,"value":1014},{"type":518,"tag":582,"props":1120,"children":1121},{"style":601},[1122],{"type":523,"value":619},{"type":518,"tag":582,"props":1124,"children":1125},{"style":1021},[1126],{"type":523,"value":1024},{"type":518,"tag":582,"props":1128,"children":1129},{"style":1027},[1130],{"type":523,"value":1131},"Roar!",{"type":518,"tag":582,"props":1133,"children":1134},{"style":1021},[1135],{"type":523,"value":1024},{"type":518,"tag":582,"props":1137,"children":1138},{"style":601},[1139],{"type":523,"value":1039},{"type":518,"tag":582,"props":1141,"children":1143},{"class":584,"line":1142},15,[1144],{"type":518,"tag":582,"props":1145,"children":1146},{"style":601},[1147],{"type":523,"value":653},{"type":518,"tag":582,"props":1149,"children":1151},{"class":584,"line":1150},16,[1152],{"type":518,"tag":582,"props":1153,"children":1154},{"style":601},[1155],{"type":523,"value":707},{"type":518,"tag":582,"props":1157,"children":1159},{"class":584,"line":1158},17,[1160],{"type":518,"tag":582,"props":1161,"children":1162},{"emptyLinePlaceholder":660},[1163],{"type":523,"value":663},{"type":518,"tag":582,"props":1165,"children":1167},{"class":584,"line":1166},18,[1168,1172,1177,1181,1185],{"type":518,"tag":582,"props":1169,"children":1170},{"style":589},[1171],{"type":523,"value":592},{"type":518,"tag":582,"props":1173,"children":1174},{"style":595},[1175],{"type":523,"value":1176}," Elephant",{"type":518,"tag":582,"props":1178,"children":1179},{"style":589},[1180],{"type":523,"value":1078},{"type":518,"tag":582,"props":1182,"children":1183},{"style":611},[1184],{"type":523,"value":897},{"type":518,"tag":582,"props":1186,"children":1187},{"style":601},[1188],{"type":523,"value":604},{"type":518,"tag":582,"props":1190,"children":1192},{"class":584,"line":1191},19,[1193,1197,1201],{"type":518,"tag":582,"props":1194,"children":1195},{"style":611},[1196],{"type":523,"value":981},{"type":518,"tag":582,"props":1198,"children":1199},{"style":601},[1200],{"type":523,"value":677},{"type":518,"tag":582,"props":1202,"children":1203},{"style":601},[1204],{"type":523,"value":604},{"type":518,"tag":582,"props":1206,"children":1208},{"class":584,"line":1207},20,[1209,1213,1217,1221,1225,1229,1234,1238],{"type":518,"tag":582,"props":1210,"children":1211},{"style":622},[1212],{"type":523,"value":1005},{"type":518,"tag":582,"props":1214,"children":1215},{"style":601},[1216],{"type":523,"value":940},{"type":518,"tag":582,"props":1218,"children":1219},{"style":611},[1220],{"type":523,"value":1014},{"type":518,"tag":582,"props":1222,"children":1223},{"style":601},[1224],{"type":523,"value":619},{"type":518,"tag":582,"props":1226,"children":1227},{"style":1021},[1228],{"type":523,"value":1024},{"type":518,"tag":582,"props":1230,"children":1231},{"style":1027},[1232],{"type":523,"value":1233},"Trumpet!",{"type":518,"tag":582,"props":1235,"children":1236},{"style":1021},[1237],{"type":523,"value":1024},{"type":518,"tag":582,"props":1239,"children":1240},{"style":601},[1241],{"type":523,"value":1039},{"type":518,"tag":582,"props":1243,"children":1245},{"class":584,"line":1244},21,[1246],{"type":518,"tag":582,"props":1247,"children":1248},{"style":601},[1249],{"type":523,"value":653},{"type":518,"tag":582,"props":1251,"children":1253},{"class":584,"line":1252},22,[1254],{"type":518,"tag":582,"props":1255,"children":1256},{"style":601},[1257],{"type":523,"value":707},{"type":518,"tag":519,"props":1259,"children":1260},{},[1261],{"type":523,"value":1262},"在这个设计中，Animal 类是一个基类，而 Lion 和 Elephant 是它的子类。每个动物都有自己的叫声，通过重写 makeSound 方法来实现。",{"type":518,"tag":519,"props":1264,"children":1265},{},[1266],{"type":523,"value":1267},"现在，假设我们要添加一些新的动物，比如鹦鹉和狗，按照开放/封闭原则，我们应该扩展而不是修改现有的代码：",{"type":518,"tag":571,"props":1269,"children":1271},{"className":573,"code":1270,"language":575,"meta":512,"style":512},"class Parrot extends Animal {\n  makeSound() {\n    console.log(\"Squawk!\");\n  }\n}\n\nclass Dog extends Animal {\n  makeSound() {\n    console.log(\"Bark!\");\n  }\n}\n",[1272],{"type":518,"tag":578,"props":1273,"children":1274},{"__ignoreMap":512},[1275,1299,1314,1350,1357,1364,1371,1395,1410,1446,1453],{"type":518,"tag":582,"props":1276,"children":1277},{"class":584,"line":585},[1278,1282,1287,1291,1295],{"type":518,"tag":582,"props":1279,"children":1280},{"style":589},[1281],{"type":523,"value":592},{"type":518,"tag":582,"props":1283,"children":1284},{"style":595},[1285],{"type":523,"value":1286}," Parrot",{"type":518,"tag":582,"props":1288,"children":1289},{"style":589},[1290],{"type":523,"value":1078},{"type":518,"tag":582,"props":1292,"children":1293},{"style":611},[1294],{"type":523,"value":897},{"type":518,"tag":582,"props":1296,"children":1297},{"style":601},[1298],{"type":523,"value":604},{"type":518,"tag":582,"props":1300,"children":1301},{"class":584,"line":607},[1302,1306,1310],{"type":518,"tag":582,"props":1303,"children":1304},{"style":611},[1305],{"type":523,"value":981},{"type":518,"tag":582,"props":1307,"children":1308},{"style":601},[1309],{"type":523,"value":677},{"type":518,"tag":582,"props":1311,"children":1312},{"style":601},[1313],{"type":523,"value":604},{"type":518,"tag":582,"props":1315,"children":1316},{"class":584,"line":637},[1317,1321,1325,1329,1333,1337,1342,1346],{"type":518,"tag":582,"props":1318,"children":1319},{"style":622},[1320],{"type":523,"value":1005},{"type":518,"tag":582,"props":1322,"children":1323},{"style":601},[1324],{"type":523,"value":940},{"type":518,"tag":582,"props":1326,"children":1327},{"style":611},[1328],{"type":523,"value":1014},{"type":518,"tag":582,"props":1330,"children":1331},{"style":601},[1332],{"type":523,"value":619},{"type":518,"tag":582,"props":1334,"children":1335},{"style":1021},[1336],{"type":523,"value":1024},{"type":518,"tag":582,"props":1338,"children":1339},{"style":1027},[1340],{"type":523,"value":1341},"Squawk!",{"type":518,"tag":582,"props":1343,"children":1344},{"style":1021},[1345],{"type":523,"value":1024},{"type":518,"tag":582,"props":1347,"children":1348},{"style":601},[1349],{"type":523,"value":1039},{"type":518,"tag":582,"props":1351,"children":1352},{"class":584,"line":647},[1353],{"type":518,"tag":582,"props":1354,"children":1355},{"style":601},[1356],{"type":523,"value":653},{"type":518,"tag":582,"props":1358,"children":1359},{"class":584,"line":656},[1360],{"type":518,"tag":582,"props":1361,"children":1362},{"style":601},[1363],{"type":523,"value":707},{"type":518,"tag":582,"props":1365,"children":1366},{"class":584,"line":666},[1367],{"type":518,"tag":582,"props":1368,"children":1369},{"emptyLinePlaceholder":660},[1370],{"type":523,"value":663},{"type":518,"tag":582,"props":1372,"children":1373},{"class":584,"line":684},[1374,1378,1383,1387,1391],{"type":518,"tag":582,"props":1375,"children":1376},{"style":589},[1377],{"type":523,"value":592},{"type":518,"tag":582,"props":1379,"children":1380},{"style":595},[1381],{"type":523,"value":1382}," Dog",{"type":518,"tag":582,"props":1384,"children":1385},{"style":589},[1386],{"type":523,"value":1078},{"type":518,"tag":582,"props":1388,"children":1389},{"style":611},[1390],{"type":523,"value":897},{"type":518,"tag":582,"props":1392,"children":1393},{"style":601},[1394],{"type":523,"value":604},{"type":518,"tag":582,"props":1396,"children":1397},{"class":584,"line":693},[1398,1402,1406],{"type":518,"tag":582,"props":1399,"children":1400},{"style":611},[1401],{"type":523,"value":981},{"type":518,"tag":582,"props":1403,"children":1404},{"style":601},[1405],{"type":523,"value":677},{"type":518,"tag":582,"props":1407,"children":1408},{"style":601},[1409],{"type":523,"value":604},{"type":518,"tag":582,"props":1411,"children":1412},{"class":584,"line":701},[1413,1417,1421,1425,1429,1433,1438,1442],{"type":518,"tag":582,"props":1414,"children":1415},{"style":622},[1416],{"type":523,"value":1005},{"type":518,"tag":582,"props":1418,"children":1419},{"style":601},[1420],{"type":523,"value":940},{"type":518,"tag":582,"props":1422,"children":1423},{"style":611},[1424],{"type":523,"value":1014},{"type":518,"tag":582,"props":1426,"children":1427},{"style":601},[1428],{"type":523,"value":619},{"type":518,"tag":582,"props":1430,"children":1431},{"style":1021},[1432],{"type":523,"value":1024},{"type":518,"tag":582,"props":1434,"children":1435},{"style":1027},[1436],{"type":523,"value":1437},"Bark!",{"type":518,"tag":582,"props":1439,"children":1440},{"style":1021},[1441],{"type":523,"value":1024},{"type":518,"tag":582,"props":1443,"children":1444},{"style":601},[1445],{"type":523,"value":1039},{"type":518,"tag":582,"props":1447,"children":1448},{"class":584,"line":845},[1449],{"type":518,"tag":582,"props":1450,"children":1451},{"style":601},[1452],{"type":523,"value":653},{"type":518,"tag":582,"props":1454,"children":1455},{"class":584,"line":853},[1456],{"type":518,"tag":582,"props":1457,"children":1458},{"style":601},[1459],{"type":523,"value":707},{"type":518,"tag":519,"props":1461,"children":1462},{},[1463],{"type":523,"value":1464},"这样，我们通过扩展 Animal 类，而不是修改它，来添加新的功能（新的动物）。这符合开放/封闭原则，因为我们对于现有代码的修改是关闭的，我们只是通过扩展来引入新的功能。",{"type":518,"tag":519,"props":1466,"children":1467},{},[1468],{"type":523,"value":1469},"使用开放/封闭原则可以使代码更加稳定，降低对现有代码的影响，同时也更容易应对变化和扩展。",{"type":518,"tag":560,"props":1471,"children":1473},{"id":1472},"里式替换原则",[1474],{"type":523,"value":1472},{"type":518,"tag":519,"props":1476,"children":1477},{},[1478],{"type":523,"value":1479},"里氏替换原则（Liskov Substitution Principle，LSP） 是 SOLID 原则之一，它强调子类型（派生类或子类）必须能够替换掉它们的基类型（基类或父类）并出现在基类能够工作的任何地方，而不破坏程序的正确性。",{"type":518,"tag":519,"props":1481,"children":1482},{},[1483],{"type":523,"value":1484},"通俗地说，如果一个类是基类的子类，那么在任何需要基类的地方，都可以使用这个子类而不产生错误。子类应该保持基类的行为，并且可以扩展或修改基类的行为，但不应该破坏基类原有的约定。",{"type":518,"tag":519,"props":1486,"children":1487},{},[1488],{"type":523,"value":1489},"假设我们有一个表示矩形的基类 Rectangle：",{"type":518,"tag":571,"props":1491,"children":1493},{"className":573,"code":1492,"language":575,"meta":512,"style":512},"class Rectangle {\n  constructor(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n\n  setWidth(width) {\n    this.width = width;\n  }\n\n  setHeight(height) {\n    this.height = height;\n  }\n\n  getArea() {\n    return this.width * this.height;\n  }\n}\n",[1494],{"type":518,"tag":578,"props":1495,"children":1496},{"__ignoreMap":512},[1497,1513,1547,1575,1603,1610,1617,1641,1668,1675,1682,1706,1733,1740,1747,1763,1806,1813],{"type":518,"tag":582,"props":1498,"children":1499},{"class":584,"line":585},[1500,1504,1509],{"type":518,"tag":582,"props":1501,"children":1502},{"style":589},[1503],{"type":523,"value":592},{"type":518,"tag":582,"props":1505,"children":1506},{"style":595},[1507],{"type":523,"value":1508}," Rectangle",{"type":518,"tag":582,"props":1510,"children":1511},{"style":601},[1512],{"type":523,"value":604},{"type":518,"tag":582,"props":1514,"children":1515},{"class":584,"line":607},[1516,1520,1524,1529,1534,1539,1543],{"type":518,"tag":582,"props":1517,"children":1518},{"style":589},[1519],{"type":523,"value":909},{"type":518,"tag":582,"props":1521,"children":1522},{"style":601},[1523],{"type":523,"value":619},{"type":518,"tag":582,"props":1525,"children":1526},{"style":622},[1527],{"type":523,"value":1528},"width",{"type":518,"tag":582,"props":1530,"children":1531},{"style":601},[1532],{"type":523,"value":1533},",",{"type":518,"tag":582,"props":1535,"children":1536},{"style":622},[1537],{"type":523,"value":1538}," height",{"type":518,"tag":582,"props":1540,"children":1541},{"style":601},[1542],{"type":523,"value":630},{"type":518,"tag":582,"props":1544,"children":1545},{"style":601},[1546],{"type":523,"value":604},{"type":518,"tag":582,"props":1548,"children":1549},{"class":584,"line":637},[1550,1554,1558,1562,1566,1571],{"type":518,"tag":582,"props":1551,"children":1552},{"style":932},[1553],{"type":523,"value":935},{"type":518,"tag":582,"props":1555,"children":1556},{"style":601},[1557],{"type":523,"value":940},{"type":518,"tag":582,"props":1559,"children":1560},{"style":622},[1561],{"type":523,"value":1528},{"type":518,"tag":582,"props":1563,"children":1564},{"style":601},[1565],{"type":523,"value":949},{"type":518,"tag":582,"props":1567,"children":1568},{"style":622},[1569],{"type":523,"value":1570}," width",{"type":518,"tag":582,"props":1572,"children":1573},{"style":601},[1574],{"type":523,"value":959},{"type":518,"tag":582,"props":1576,"children":1577},{"class":584,"line":647},[1578,1582,1586,1591,1595,1599],{"type":518,"tag":582,"props":1579,"children":1580},{"style":932},[1581],{"type":523,"value":935},{"type":518,"tag":582,"props":1583,"children":1584},{"style":601},[1585],{"type":523,"value":940},{"type":518,"tag":582,"props":1587,"children":1588},{"style":622},[1589],{"type":523,"value":1590},"height",{"type":518,"tag":582,"props":1592,"children":1593},{"style":601},[1594],{"type":523,"value":949},{"type":518,"tag":582,"props":1596,"children":1597},{"style":622},[1598],{"type":523,"value":1538},{"type":518,"tag":582,"props":1600,"children":1601},{"style":601},[1602],{"type":523,"value":959},{"type":518,"tag":582,"props":1604,"children":1605},{"class":584,"line":656},[1606],{"type":518,"tag":582,"props":1607,"children":1608},{"style":601},[1609],{"type":523,"value":653},{"type":518,"tag":582,"props":1611,"children":1612},{"class":584,"line":666},[1613],{"type":518,"tag":582,"props":1614,"children":1615},{"emptyLinePlaceholder":660},[1616],{"type":523,"value":663},{"type":518,"tag":582,"props":1618,"children":1619},{"class":584,"line":684},[1620,1625,1629,1633,1637],{"type":518,"tag":582,"props":1621,"children":1622},{"style":611},[1623],{"type":523,"value":1624},"  setWidth",{"type":518,"tag":582,"props":1626,"children":1627},{"style":601},[1628],{"type":523,"value":619},{"type":518,"tag":582,"props":1630,"children":1631},{"style":622},[1632],{"type":523,"value":1528},{"type":518,"tag":582,"props":1634,"children":1635},{"style":601},[1636],{"type":523,"value":630},{"type":518,"tag":582,"props":1638,"children":1639},{"style":601},[1640],{"type":523,"value":604},{"type":518,"tag":582,"props":1642,"children":1643},{"class":584,"line":693},[1644,1648,1652,1656,1660,1664],{"type":518,"tag":582,"props":1645,"children":1646},{"style":932},[1647],{"type":523,"value":935},{"type":518,"tag":582,"props":1649,"children":1650},{"style":601},[1651],{"type":523,"value":940},{"type":518,"tag":582,"props":1653,"children":1654},{"style":622},[1655],{"type":523,"value":1528},{"type":518,"tag":582,"props":1657,"children":1658},{"style":601},[1659],{"type":523,"value":949},{"type":518,"tag":582,"props":1661,"children":1662},{"style":622},[1663],{"type":523,"value":1570},{"type":518,"tag":582,"props":1665,"children":1666},{"style":601},[1667],{"type":523,"value":959},{"type":518,"tag":582,"props":1669,"children":1670},{"class":584,"line":701},[1671],{"type":518,"tag":582,"props":1672,"children":1673},{"style":601},[1674],{"type":523,"value":653},{"type":518,"tag":582,"props":1676,"children":1677},{"class":584,"line":845},[1678],{"type":518,"tag":582,"props":1679,"children":1680},{"emptyLinePlaceholder":660},[1681],{"type":523,"value":663},{"type":518,"tag":582,"props":1683,"children":1684},{"class":584,"line":853},[1685,1690,1694,1698,1702],{"type":518,"tag":582,"props":1686,"children":1687},{"style":611},[1688],{"type":523,"value":1689},"  setHeight",{"type":518,"tag":582,"props":1691,"children":1692},{"style":601},[1693],{"type":523,"value":619},{"type":518,"tag":582,"props":1695,"children":1696},{"style":622},[1697],{"type":523,"value":1590},{"type":518,"tag":582,"props":1699,"children":1700},{"style":601},[1701],{"type":523,"value":630},{"type":518,"tag":582,"props":1703,"children":1704},{"style":601},[1705],{"type":523,"value":604},{"type":518,"tag":582,"props":1707,"children":1708},{"class":584,"line":1063},[1709,1713,1717,1721,1725,1729],{"type":518,"tag":582,"props":1710,"children":1711},{"style":932},[1712],{"type":523,"value":935},{"type":518,"tag":582,"props":1714,"children":1715},{"style":601},[1716],{"type":523,"value":940},{"type":518,"tag":582,"props":1718,"children":1719},{"style":622},[1720],{"type":523,"value":1590},{"type":518,"tag":582,"props":1722,"children":1723},{"style":601},[1724],{"type":523,"value":949},{"type":518,"tag":582,"props":1726,"children":1727},{"style":622},[1728],{"type":523,"value":1538},{"type":518,"tag":582,"props":1730,"children":1731},{"style":601},[1732],{"type":523,"value":959},{"type":518,"tag":582,"props":1734,"children":1735},{"class":584,"line":1089},[1736],{"type":518,"tag":582,"props":1737,"children":1738},{"style":601},[1739],{"type":523,"value":653},{"type":518,"tag":582,"props":1741,"children":1742},{"class":584,"line":1105},[1743],{"type":518,"tag":582,"props":1744,"children":1745},{"emptyLinePlaceholder":660},[1746],{"type":523,"value":663},{"type":518,"tag":582,"props":1748,"children":1749},{"class":584,"line":1142},[1750,1755,1759],{"type":518,"tag":582,"props":1751,"children":1752},{"style":611},[1753],{"type":523,"value":1754},"  getArea",{"type":518,"tag":582,"props":1756,"children":1757},{"style":601},[1758],{"type":523,"value":677},{"type":518,"tag":582,"props":1760,"children":1761},{"style":601},[1762],{"type":523,"value":604},{"type":518,"tag":582,"props":1764,"children":1765},{"class":584,"line":1150},[1766,1772,1777,1781,1785,1790,1794,1798,1802],{"type":518,"tag":582,"props":1767,"children":1769},{"style":1768},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[1770],{"type":523,"value":1771},"    return",{"type":518,"tag":582,"props":1773,"children":1774},{"style":932},[1775],{"type":523,"value":1776}," this",{"type":518,"tag":582,"props":1778,"children":1779},{"style":601},[1780],{"type":523,"value":940},{"type":518,"tag":582,"props":1782,"children":1783},{"style":622},[1784],{"type":523,"value":1528},{"type":518,"tag":582,"props":1786,"children":1787},{"style":589},[1788],{"type":523,"value":1789}," *",{"type":518,"tag":582,"props":1791,"children":1792},{"style":932},[1793],{"type":523,"value":1776},{"type":518,"tag":582,"props":1795,"children":1796},{"style":601},[1797],{"type":523,"value":940},{"type":518,"tag":582,"props":1799,"children":1800},{"style":622},[1801],{"type":523,"value":1590},{"type":518,"tag":582,"props":1803,"children":1804},{"style":601},[1805],{"type":523,"value":959},{"type":518,"tag":582,"props":1807,"children":1808},{"class":584,"line":1158},[1809],{"type":518,"tag":582,"props":1810,"children":1811},{"style":601},[1812],{"type":523,"value":653},{"type":518,"tag":582,"props":1814,"children":1815},{"class":584,"line":1166},[1816],{"type":518,"tag":582,"props":1817,"children":1818},{"style":601},[1819],{"type":523,"value":707},{"type":518,"tag":519,"props":1821,"children":1822},{},[1823],{"type":523,"value":1824},"现在，我们创建了一个子类 Square 继承自 Rectangle，表示正方形。在正方形中，宽和高应该始终相等。",{"type":518,"tag":571,"props":1826,"children":1828},{"className":573,"code":1827,"language":575,"meta":512,"style":512},"class Square extends Rectangle {\n  setWidth(width) {\n    super.setWidth(width);\n    super.setHeight(width);\n  }\n\n  setHeight(height) {\n    super.setWidth(height);\n    super.setHeight(height);\n  }\n}\n",[1829],{"type":518,"tag":578,"props":1830,"children":1831},{"__ignoreMap":512},[1832,1856,1879,1908,1936,1943,1950,1973,2000,2027,2034],{"type":518,"tag":582,"props":1833,"children":1834},{"class":584,"line":585},[1835,1839,1844,1848,1852],{"type":518,"tag":582,"props":1836,"children":1837},{"style":589},[1838],{"type":523,"value":592},{"type":518,"tag":582,"props":1840,"children":1841},{"style":595},[1842],{"type":523,"value":1843}," Square",{"type":518,"tag":582,"props":1845,"children":1846},{"style":589},[1847],{"type":523,"value":1078},{"type":518,"tag":582,"props":1849,"children":1850},{"style":611},[1851],{"type":523,"value":1508},{"type":518,"tag":582,"props":1853,"children":1854},{"style":601},[1855],{"type":523,"value":604},{"type":518,"tag":582,"props":1857,"children":1858},{"class":584,"line":607},[1859,1863,1867,1871,1875],{"type":518,"tag":582,"props":1860,"children":1861},{"style":611},[1862],{"type":523,"value":1624},{"type":518,"tag":582,"props":1864,"children":1865},{"style":601},[1866],{"type":523,"value":619},{"type":518,"tag":582,"props":1868,"children":1869},{"style":622},[1870],{"type":523,"value":1528},{"type":518,"tag":582,"props":1872,"children":1873},{"style":601},[1874],{"type":523,"value":630},{"type":518,"tag":582,"props":1876,"children":1877},{"style":601},[1878],{"type":523,"value":604},{"type":518,"tag":582,"props":1880,"children":1881},{"class":584,"line":637},[1882,1887,1891,1896,1900,1904],{"type":518,"tag":582,"props":1883,"children":1884},{"style":932},[1885],{"type":523,"value":1886},"    super",{"type":518,"tag":582,"props":1888,"children":1889},{"style":601},[1890],{"type":523,"value":940},{"type":518,"tag":582,"props":1892,"children":1893},{"style":611},[1894],{"type":523,"value":1895},"setWidth",{"type":518,"tag":582,"props":1897,"children":1898},{"style":601},[1899],{"type":523,"value":619},{"type":518,"tag":582,"props":1901,"children":1902},{"style":622},[1903],{"type":523,"value":1528},{"type":518,"tag":582,"props":1905,"children":1906},{"style":601},[1907],{"type":523,"value":1039},{"type":518,"tag":582,"props":1909,"children":1910},{"class":584,"line":647},[1911,1915,1919,1924,1928,1932],{"type":518,"tag":582,"props":1912,"children":1913},{"style":932},[1914],{"type":523,"value":1886},{"type":518,"tag":582,"props":1916,"children":1917},{"style":601},[1918],{"type":523,"value":940},{"type":518,"tag":582,"props":1920,"children":1921},{"style":611},[1922],{"type":523,"value":1923},"setHeight",{"type":518,"tag":582,"props":1925,"children":1926},{"style":601},[1927],{"type":523,"value":619},{"type":518,"tag":582,"props":1929,"children":1930},{"style":622},[1931],{"type":523,"value":1528},{"type":518,"tag":582,"props":1933,"children":1934},{"style":601},[1935],{"type":523,"value":1039},{"type":518,"tag":582,"props":1937,"children":1938},{"class":584,"line":656},[1939],{"type":518,"tag":582,"props":1940,"children":1941},{"style":601},[1942],{"type":523,"value":653},{"type":518,"tag":582,"props":1944,"children":1945},{"class":584,"line":666},[1946],{"type":518,"tag":582,"props":1947,"children":1948},{"emptyLinePlaceholder":660},[1949],{"type":523,"value":663},{"type":518,"tag":582,"props":1951,"children":1952},{"class":584,"line":684},[1953,1957,1961,1965,1969],{"type":518,"tag":582,"props":1954,"children":1955},{"style":611},[1956],{"type":523,"value":1689},{"type":518,"tag":582,"props":1958,"children":1959},{"style":601},[1960],{"type":523,"value":619},{"type":518,"tag":582,"props":1962,"children":1963},{"style":622},[1964],{"type":523,"value":1590},{"type":518,"tag":582,"props":1966,"children":1967},{"style":601},[1968],{"type":523,"value":630},{"type":518,"tag":582,"props":1970,"children":1971},{"style":601},[1972],{"type":523,"value":604},{"type":518,"tag":582,"props":1974,"children":1975},{"class":584,"line":693},[1976,1980,1984,1988,1992,1996],{"type":518,"tag":582,"props":1977,"children":1978},{"style":932},[1979],{"type":523,"value":1886},{"type":518,"tag":582,"props":1981,"children":1982},{"style":601},[1983],{"type":523,"value":940},{"type":518,"tag":582,"props":1985,"children":1986},{"style":611},[1987],{"type":523,"value":1895},{"type":518,"tag":582,"props":1989,"children":1990},{"style":601},[1991],{"type":523,"value":619},{"type":518,"tag":582,"props":1993,"children":1994},{"style":622},[1995],{"type":523,"value":1590},{"type":518,"tag":582,"props":1997,"children":1998},{"style":601},[1999],{"type":523,"value":1039},{"type":518,"tag":582,"props":2001,"children":2002},{"class":584,"line":701},[2003,2007,2011,2015,2019,2023],{"type":518,"tag":582,"props":2004,"children":2005},{"style":932},[2006],{"type":523,"value":1886},{"type":518,"tag":582,"props":2008,"children":2009},{"style":601},[2010],{"type":523,"value":940},{"type":518,"tag":582,"props":2012,"children":2013},{"style":611},[2014],{"type":523,"value":1923},{"type":518,"tag":582,"props":2016,"children":2017},{"style":601},[2018],{"type":523,"value":619},{"type":518,"tag":582,"props":2020,"children":2021},{"style":622},[2022],{"type":523,"value":1590},{"type":518,"tag":582,"props":2024,"children":2025},{"style":601},[2026],{"type":523,"value":1039},{"type":518,"tag":582,"props":2028,"children":2029},{"class":584,"line":845},[2030],{"type":518,"tag":582,"props":2031,"children":2032},{"style":601},[2033],{"type":523,"value":653},{"type":518,"tag":582,"props":2035,"children":2036},{"class":584,"line":853},[2037],{"type":518,"tag":582,"props":2038,"children":2039},{"style":601},[2040],{"type":523,"value":707},{"type":518,"tag":519,"props":2042,"children":2043},{},[2044],{"type":523,"value":2045},"这里的问题是，Square 子类在修改宽度或高度时，通过覆写 setWidth 和 setHeight 方法，强制宽和高相等，这与基类的行为不一致。如果在需要 Rectangle 的地方使用了 Square，可能会导致程序逻辑错误。",{"type":518,"tag":519,"props":2047,"children":2048},{},[2049],{"type":523,"value":2050},"这违反了里氏替换原则，因为子类修改了父类的预期行为。为了符合里氏替换原则，可能需要重新设计类的继承结构，或者使用更精确的命名来表达实际意图。",{"type":518,"tag":560,"props":2052,"children":2054},{"id":2053},"接口隔离原则",[2055],{"type":523,"value":2053},{"type":518,"tag":519,"props":2057,"children":2058},{},[2059],{"type":523,"value":2060},"接口隔离原则（Interface Segregation Principle，ISP） 是 SOLID 原则之一，它强调一个类不应该被强迫实现它不需要的接口。简而言之，一个类对另一个类的依赖应该建立在最小的接口上。",{"type":518,"tag":519,"props":2062,"children":2063},{},[2064],{"type":523,"value":2065},"在通俗的语言中，接口隔离原则告诉我们不应该让一个类依赖它不需要的接口，否则会导致类需要实现一些它根本不需要的方法。",{"type":518,"tag":519,"props":2067,"children":2068},{},[2069],{"type":523,"value":2070},"举例说明，假设我们有一个动物园的系统，其中有两种动物，一种会飞，一种会游泳：",{"type":518,"tag":571,"props":2072,"children":2074},{"className":573,"code":2073,"language":575,"meta":512,"style":512},"// 不遵循接口隔离原则的设计\nclass Bird {\n  fly() {\n    // 实现飞行逻辑\n  }\n\n  swim() {\n    // 这是一个鸟类不需要的方法，违反接口隔离原则\n  }\n}\n\nclass Fish {\n  swim() {\n    // 实现游泳逻辑\n  }\n\n  fly() {\n    // 这是一个鱼类不需要的方法，违反接口隔离原则\n  }\n}\n",[2075],{"type":518,"tag":578,"props":2076,"children":2077},{"__ignoreMap":512},[2078,2086,2102,2118,2126,2133,2140,2156,2164,2171,2178,2185,2201,2216,2224,2231,2238,2253,2261,2268],{"type":518,"tag":582,"props":2079,"children":2080},{"class":584,"line":585},[2081],{"type":518,"tag":582,"props":2082,"children":2083},{"style":641},[2084],{"type":523,"value":2085},"// 不遵循接口隔离原则的设计\n",{"type":518,"tag":582,"props":2087,"children":2088},{"class":584,"line":607},[2089,2093,2098],{"type":518,"tag":582,"props":2090,"children":2091},{"style":589},[2092],{"type":523,"value":592},{"type":518,"tag":582,"props":2094,"children":2095},{"style":595},[2096],{"type":523,"value":2097}," Bird",{"type":518,"tag":582,"props":2099,"children":2100},{"style":601},[2101],{"type":523,"value":604},{"type":518,"tag":582,"props":2103,"children":2104},{"class":584,"line":637},[2105,2110,2114],{"type":518,"tag":582,"props":2106,"children":2107},{"style":611},[2108],{"type":523,"value":2109},"  fly",{"type":518,"tag":582,"props":2111,"children":2112},{"style":601},[2113],{"type":523,"value":677},{"type":518,"tag":582,"props":2115,"children":2116},{"style":601},[2117],{"type":523,"value":604},{"type":518,"tag":582,"props":2119,"children":2120},{"class":584,"line":647},[2121],{"type":518,"tag":582,"props":2122,"children":2123},{"style":641},[2124],{"type":523,"value":2125},"    // 实现飞行逻辑\n",{"type":518,"tag":582,"props":2127,"children":2128},{"class":584,"line":656},[2129],{"type":518,"tag":582,"props":2130,"children":2131},{"style":601},[2132],{"type":523,"value":653},{"type":518,"tag":582,"props":2134,"children":2135},{"class":584,"line":666},[2136],{"type":518,"tag":582,"props":2137,"children":2138},{"emptyLinePlaceholder":660},[2139],{"type":523,"value":663},{"type":518,"tag":582,"props":2141,"children":2142},{"class":584,"line":684},[2143,2148,2152],{"type":518,"tag":582,"props":2144,"children":2145},{"style":611},[2146],{"type":523,"value":2147},"  swim",{"type":518,"tag":582,"props":2149,"children":2150},{"style":601},[2151],{"type":523,"value":677},{"type":518,"tag":582,"props":2153,"children":2154},{"style":601},[2155],{"type":523,"value":604},{"type":518,"tag":582,"props":2157,"children":2158},{"class":584,"line":693},[2159],{"type":518,"tag":582,"props":2160,"children":2161},{"style":641},[2162],{"type":523,"value":2163},"    // 这是一个鸟类不需要的方法，违反接口隔离原则\n",{"type":518,"tag":582,"props":2165,"children":2166},{"class":584,"line":701},[2167],{"type":518,"tag":582,"props":2168,"children":2169},{"style":601},[2170],{"type":523,"value":653},{"type":518,"tag":582,"props":2172,"children":2173},{"class":584,"line":845},[2174],{"type":518,"tag":582,"props":2175,"children":2176},{"style":601},[2177],{"type":523,"value":707},{"type":518,"tag":582,"props":2179,"children":2180},{"class":584,"line":853},[2181],{"type":518,"tag":582,"props":2182,"children":2183},{"emptyLinePlaceholder":660},[2184],{"type":523,"value":663},{"type":518,"tag":582,"props":2186,"children":2187},{"class":584,"line":1063},[2188,2192,2197],{"type":518,"tag":582,"props":2189,"children":2190},{"style":589},[2191],{"type":523,"value":592},{"type":518,"tag":582,"props":2193,"children":2194},{"style":595},[2195],{"type":523,"value":2196}," Fish",{"type":518,"tag":582,"props":2198,"children":2199},{"style":601},[2200],{"type":523,"value":604},{"type":518,"tag":582,"props":2202,"children":2203},{"class":584,"line":1089},[2204,2208,2212],{"type":518,"tag":582,"props":2205,"children":2206},{"style":611},[2207],{"type":523,"value":2147},{"type":518,"tag":582,"props":2209,"children":2210},{"style":601},[2211],{"type":523,"value":677},{"type":518,"tag":582,"props":2213,"children":2214},{"style":601},[2215],{"type":523,"value":604},{"type":518,"tag":582,"props":2217,"children":2218},{"class":584,"line":1105},[2219],{"type":518,"tag":582,"props":2220,"children":2221},{"style":641},[2222],{"type":523,"value":2223},"    // 实现游泳逻辑\n",{"type":518,"tag":582,"props":2225,"children":2226},{"class":584,"line":1142},[2227],{"type":518,"tag":582,"props":2228,"children":2229},{"style":601},[2230],{"type":523,"value":653},{"type":518,"tag":582,"props":2232,"children":2233},{"class":584,"line":1150},[2234],{"type":518,"tag":582,"props":2235,"children":2236},{"emptyLinePlaceholder":660},[2237],{"type":523,"value":663},{"type":518,"tag":582,"props":2239,"children":2240},{"class":584,"line":1158},[2241,2245,2249],{"type":518,"tag":582,"props":2242,"children":2243},{"style":611},[2244],{"type":523,"value":2109},{"type":518,"tag":582,"props":2246,"children":2247},{"style":601},[2248],{"type":523,"value":677},{"type":518,"tag":582,"props":2250,"children":2251},{"style":601},[2252],{"type":523,"value":604},{"type":518,"tag":582,"props":2254,"children":2255},{"class":584,"line":1166},[2256],{"type":518,"tag":582,"props":2257,"children":2258},{"style":641},[2259],{"type":523,"value":2260},"    // 这是一个鱼类不需要的方法，违反接口隔离原则\n",{"type":518,"tag":582,"props":2262,"children":2263},{"class":584,"line":1191},[2264],{"type":518,"tag":582,"props":2265,"children":2266},{"style":601},[2267],{"type":523,"value":653},{"type":518,"tag":582,"props":2269,"children":2270},{"class":584,"line":1207},[2271],{"type":518,"tag":582,"props":2272,"children":2273},{"style":601},[2274],{"type":523,"value":707},{"type":518,"tag":519,"props":2276,"children":2277},{},[2278],{"type":523,"value":2279},"在这个例子中，Bird 类实现了 fly 和 swim 两个方法，而 Fish 类也实现了 swim 和 fly 两个方法。这违反了接口隔离原则，因为每个类都被迫实现了它们不需要的方法。",{"type":518,"tag":519,"props":2281,"children":2282},{},[2283],{"type":523,"value":2284},"为了符合接口隔离原则，我们可以将接口拆分成更小的部分，让每个类只实现它们需要的方法：",{"type":518,"tag":571,"props":2286,"children":2288},{"className":573,"code":2287,"language":575,"meta":512,"style":512},"// 遵循接口隔离原则的设计\nclass Bird {\n  fly() {\n    // 实现飞行逻辑\n  }\n}\n\nclass Fish {\n  swim() {\n    // 实现游泳逻辑\n  }\n}\n",[2289],{"type":518,"tag":578,"props":2290,"children":2291},{"__ignoreMap":512},[2292,2300,2315,2330,2337,2344,2351,2358,2373,2388,2395,2402],{"type":518,"tag":582,"props":2293,"children":2294},{"class":584,"line":585},[2295],{"type":518,"tag":582,"props":2296,"children":2297},{"style":641},[2298],{"type":523,"value":2299},"// 遵循接口隔离原则的设计\n",{"type":518,"tag":582,"props":2301,"children":2302},{"class":584,"line":607},[2303,2307,2311],{"type":518,"tag":582,"props":2304,"children":2305},{"style":589},[2306],{"type":523,"value":592},{"type":518,"tag":582,"props":2308,"children":2309},{"style":595},[2310],{"type":523,"value":2097},{"type":518,"tag":582,"props":2312,"children":2313},{"style":601},[2314],{"type":523,"value":604},{"type":518,"tag":582,"props":2316,"children":2317},{"class":584,"line":637},[2318,2322,2326],{"type":518,"tag":582,"props":2319,"children":2320},{"style":611},[2321],{"type":523,"value":2109},{"type":518,"tag":582,"props":2323,"children":2324},{"style":601},[2325],{"type":523,"value":677},{"type":518,"tag":582,"props":2327,"children":2328},{"style":601},[2329],{"type":523,"value":604},{"type":518,"tag":582,"props":2331,"children":2332},{"class":584,"line":647},[2333],{"type":518,"tag":582,"props":2334,"children":2335},{"style":641},[2336],{"type":523,"value":2125},{"type":518,"tag":582,"props":2338,"children":2339},{"class":584,"line":656},[2340],{"type":518,"tag":582,"props":2341,"children":2342},{"style":601},[2343],{"type":523,"value":653},{"type":518,"tag":582,"props":2345,"children":2346},{"class":584,"line":666},[2347],{"type":518,"tag":582,"props":2348,"children":2349},{"style":601},[2350],{"type":523,"value":707},{"type":518,"tag":582,"props":2352,"children":2353},{"class":584,"line":684},[2354],{"type":518,"tag":582,"props":2355,"children":2356},{"emptyLinePlaceholder":660},[2357],{"type":523,"value":663},{"type":518,"tag":582,"props":2359,"children":2360},{"class":584,"line":693},[2361,2365,2369],{"type":518,"tag":582,"props":2362,"children":2363},{"style":589},[2364],{"type":523,"value":592},{"type":518,"tag":582,"props":2366,"children":2367},{"style":595},[2368],{"type":523,"value":2196},{"type":518,"tag":582,"props":2370,"children":2371},{"style":601},[2372],{"type":523,"value":604},{"type":518,"tag":582,"props":2374,"children":2375},{"class":584,"line":701},[2376,2380,2384],{"type":518,"tag":582,"props":2377,"children":2378},{"style":611},[2379],{"type":523,"value":2147},{"type":518,"tag":582,"props":2381,"children":2382},{"style":601},[2383],{"type":523,"value":677},{"type":518,"tag":582,"props":2385,"children":2386},{"style":601},[2387],{"type":523,"value":604},{"type":518,"tag":582,"props":2389,"children":2390},{"class":584,"line":845},[2391],{"type":518,"tag":582,"props":2392,"children":2393},{"style":641},[2394],{"type":523,"value":2223},{"type":518,"tag":582,"props":2396,"children":2397},{"class":584,"line":853},[2398],{"type":518,"tag":582,"props":2399,"children":2400},{"style":601},[2401],{"type":523,"value":653},{"type":518,"tag":582,"props":2403,"children":2404},{"class":584,"line":1063},[2405],{"type":518,"tag":582,"props":2406,"children":2407},{"style":601},[2408],{"type":523,"value":707},{"type":518,"tag":519,"props":2410,"children":2411},{},[2412],{"type":523,"value":2413},"这样，每个类都只依赖于它们需要的接口，不再强迫实现不必要的方法。接口隔离原则的目标是使接口更具体，更贴近类的实际需求，从而提高系统的灵活性和可维护性。",{"type":518,"tag":560,"props":2415,"children":2417},{"id":2416},"依赖反转原则",[2418],{"type":523,"value":2416},{"type":518,"tag":519,"props":2420,"children":2421},{},[2422],{"type":523,"value":2423},"依赖反转原则（Dependency Inversion Principle，DIP） 是 SOLID 原则之一，它强调高层模块不应该依赖于低层模块，而两者都应该依赖于抽象。抽象不应该依赖于细节，细节应该依赖于抽象。简而言之，依赖反转原则倡导通过抽象来解耦高层和低层模块之间的依赖关系。",{"type":518,"tag":519,"props":2425,"children":2426},{},[2427],{"type":523,"value":2428},"举例说明，考虑一个简单的报告生成系统，有一个高层模块 ReportGenerator 负责生成报告：",{"type":518,"tag":571,"props":2430,"children":2432},{"className":573,"code":2431,"language":575,"meta":512,"style":512},"// 不遵循依赖反转原则的设计\nclass ReportGenerator {\n  constructor() {\n    this.pdfGenerator = new PDFGenerator(); // 依赖于具体的 PDF 生成器\n  }\n\n  generateReport() {\n    // 生成报告的逻辑\n    this.pdfGenerator.generatePDF();\n  }\n}\n\nclass PDFGenerator {\n  generatePDF() {\n    // 具体的 PDF 生成逻辑\n  }\n}\n",[2433],{"type":518,"tag":578,"props":2434,"children":2435},{"__ignoreMap":512},[2436,2444,2460,2475,2515,2522,2529,2545,2553,2582,2589,2596,2603,2618,2634,2642,2649],{"type":518,"tag":582,"props":2437,"children":2438},{"class":584,"line":585},[2439],{"type":518,"tag":582,"props":2440,"children":2441},{"style":641},[2442],{"type":523,"value":2443},"// 不遵循依赖反转原则的设计\n",{"type":518,"tag":582,"props":2445,"children":2446},{"class":584,"line":607},[2447,2451,2456],{"type":518,"tag":582,"props":2448,"children":2449},{"style":589},[2450],{"type":523,"value":592},{"type":518,"tag":582,"props":2452,"children":2453},{"style":595},[2454],{"type":523,"value":2455}," ReportGenerator",{"type":518,"tag":582,"props":2457,"children":2458},{"style":601},[2459],{"type":523,"value":604},{"type":518,"tag":582,"props":2461,"children":2462},{"class":584,"line":637},[2463,2467,2471],{"type":518,"tag":582,"props":2464,"children":2465},{"style":589},[2466],{"type":523,"value":909},{"type":518,"tag":582,"props":2468,"children":2469},{"style":601},[2470],{"type":523,"value":677},{"type":518,"tag":582,"props":2472,"children":2473},{"style":601},[2474],{"type":523,"value":604},{"type":518,"tag":582,"props":2476,"children":2477},{"class":584,"line":647},[2478,2482,2486,2491,2495,2500,2505,2510],{"type":518,"tag":582,"props":2479,"children":2480},{"style":932},[2481],{"type":523,"value":935},{"type":518,"tag":582,"props":2483,"children":2484},{"style":601},[2485],{"type":523,"value":940},{"type":518,"tag":582,"props":2487,"children":2488},{"style":622},[2489],{"type":523,"value":2490},"pdfGenerator",{"type":518,"tag":582,"props":2492,"children":2493},{"style":601},[2494],{"type":523,"value":949},{"type":518,"tag":582,"props":2496,"children":2497},{"style":589},[2498],{"type":523,"value":2499}," new",{"type":518,"tag":582,"props":2501,"children":2502},{"style":611},[2503],{"type":523,"value":2504}," PDFGenerator",{"type":518,"tag":582,"props":2506,"children":2507},{"style":601},[2508],{"type":523,"value":2509},"();",{"type":518,"tag":582,"props":2511,"children":2512},{"style":641},[2513],{"type":523,"value":2514}," // 依赖于具体的 PDF 生成器\n",{"type":518,"tag":582,"props":2516,"children":2517},{"class":584,"line":656},[2518],{"type":518,"tag":582,"props":2519,"children":2520},{"style":601},[2521],{"type":523,"value":653},{"type":518,"tag":582,"props":2523,"children":2524},{"class":584,"line":666},[2525],{"type":518,"tag":582,"props":2526,"children":2527},{"emptyLinePlaceholder":660},[2528],{"type":523,"value":663},{"type":518,"tag":582,"props":2530,"children":2531},{"class":584,"line":684},[2532,2537,2541],{"type":518,"tag":582,"props":2533,"children":2534},{"style":611},[2535],{"type":523,"value":2536},"  generateReport",{"type":518,"tag":582,"props":2538,"children":2539},{"style":601},[2540],{"type":523,"value":677},{"type":518,"tag":582,"props":2542,"children":2543},{"style":601},[2544],{"type":523,"value":604},{"type":518,"tag":582,"props":2546,"children":2547},{"class":584,"line":693},[2548],{"type":518,"tag":582,"props":2549,"children":2550},{"style":641},[2551],{"type":523,"value":2552},"    // 生成报告的逻辑\n",{"type":518,"tag":582,"props":2554,"children":2555},{"class":584,"line":701},[2556,2560,2564,2568,2572,2577],{"type":518,"tag":582,"props":2557,"children":2558},{"style":932},[2559],{"type":523,"value":935},{"type":518,"tag":582,"props":2561,"children":2562},{"style":601},[2563],{"type":523,"value":940},{"type":518,"tag":582,"props":2565,"children":2566},{"style":622},[2567],{"type":523,"value":2490},{"type":518,"tag":582,"props":2569,"children":2570},{"style":601},[2571],{"type":523,"value":940},{"type":518,"tag":582,"props":2573,"children":2574},{"style":611},[2575],{"type":523,"value":2576},"generatePDF",{"type":518,"tag":582,"props":2578,"children":2579},{"style":601},[2580],{"type":523,"value":2581},"();\n",{"type":518,"tag":582,"props":2583,"children":2584},{"class":584,"line":845},[2585],{"type":518,"tag":582,"props":2586,"children":2587},{"style":601},[2588],{"type":523,"value":653},{"type":518,"tag":582,"props":2590,"children":2591},{"class":584,"line":853},[2592],{"type":518,"tag":582,"props":2593,"children":2594},{"style":601},[2595],{"type":523,"value":707},{"type":518,"tag":582,"props":2597,"children":2598},{"class":584,"line":1063},[2599],{"type":518,"tag":582,"props":2600,"children":2601},{"emptyLinePlaceholder":660},[2602],{"type":523,"value":663},{"type":518,"tag":582,"props":2604,"children":2605},{"class":584,"line":1089},[2606,2610,2614],{"type":518,"tag":582,"props":2607,"children":2608},{"style":589},[2609],{"type":523,"value":592},{"type":518,"tag":582,"props":2611,"children":2612},{"style":595},[2613],{"type":523,"value":2504},{"type":518,"tag":582,"props":2615,"children":2616},{"style":601},[2617],{"type":523,"value":604},{"type":518,"tag":582,"props":2619,"children":2620},{"class":584,"line":1105},[2621,2626,2630],{"type":518,"tag":582,"props":2622,"children":2623},{"style":611},[2624],{"type":523,"value":2625},"  generatePDF",{"type":518,"tag":582,"props":2627,"children":2628},{"style":601},[2629],{"type":523,"value":677},{"type":518,"tag":582,"props":2631,"children":2632},{"style":601},[2633],{"type":523,"value":604},{"type":518,"tag":582,"props":2635,"children":2636},{"class":584,"line":1142},[2637],{"type":518,"tag":582,"props":2638,"children":2639},{"style":641},[2640],{"type":523,"value":2641},"    // 具体的 PDF 生成逻辑\n",{"type":518,"tag":582,"props":2643,"children":2644},{"class":584,"line":1150},[2645],{"type":518,"tag":582,"props":2646,"children":2647},{"style":601},[2648],{"type":523,"value":653},{"type":518,"tag":582,"props":2650,"children":2651},{"class":584,"line":1158},[2652],{"type":518,"tag":582,"props":2653,"children":2654},{"style":601},[2655],{"type":523,"value":707},{"type":518,"tag":519,"props":2657,"children":2658},{},[2659],{"type":523,"value":2660},"在这个设计中，ReportGenerator 直接依赖于具体的 PDFGenerator 类，这违反了依赖反转原则。如果我们想使用其他类型的报告生成器，例如 HTMLGenerator，就需要修改 ReportGenerator 类。",{"type":518,"tag":519,"props":2662,"children":2663},{},[2664],{"type":523,"value":2665},"为了符合依赖反转原则，我们应该通过抽象来解耦高层和低层模块：",{"type":518,"tag":571,"props":2667,"children":2669},{"className":573,"code":2668,"language":575,"meta":512,"style":512},"// 遵循依赖反转原则的设计\nclass ReportGenerator {\n  constructor(generator) {\n    this.generator = generator; // 依赖于抽象的报告生成器接口\n  }\n\n  generateReport() {\n    // 生成报告的逻辑\n    this.generator.generate();\n  }\n}\n\nclass PDFGenerator {\n  generate() {\n    // 具体的 PDF 生成逻辑\n  }\n}\n\nclass HTMLGenerator {\n  generate() {\n    // 具体的 HTML 生成逻辑\n  }\n}\n",[2670],{"type":518,"tag":578,"props":2671,"children":2672},{"__ignoreMap":512},[2673,2681,2696,2720,2754,2761,2768,2783,2790,2818,2825,2832,2839,2854,2870,2877,2884,2891,2898,2914,2929,2937,2944],{"type":518,"tag":582,"props":2674,"children":2675},{"class":584,"line":585},[2676],{"type":518,"tag":582,"props":2677,"children":2678},{"style":641},[2679],{"type":523,"value":2680},"// 遵循依赖反转原则的设计\n",{"type":518,"tag":582,"props":2682,"children":2683},{"class":584,"line":607},[2684,2688,2692],{"type":518,"tag":582,"props":2685,"children":2686},{"style":589},[2687],{"type":523,"value":592},{"type":518,"tag":582,"props":2689,"children":2690},{"style":595},[2691],{"type":523,"value":2455},{"type":518,"tag":582,"props":2693,"children":2694},{"style":601},[2695],{"type":523,"value":604},{"type":518,"tag":582,"props":2697,"children":2698},{"class":584,"line":637},[2699,2703,2707,2712,2716],{"type":518,"tag":582,"props":2700,"children":2701},{"style":589},[2702],{"type":523,"value":909},{"type":518,"tag":582,"props":2704,"children":2705},{"style":601},[2706],{"type":523,"value":619},{"type":518,"tag":582,"props":2708,"children":2709},{"style":622},[2710],{"type":523,"value":2711},"generator",{"type":518,"tag":582,"props":2713,"children":2714},{"style":601},[2715],{"type":523,"value":630},{"type":518,"tag":582,"props":2717,"children":2718},{"style":601},[2719],{"type":523,"value":604},{"type":518,"tag":582,"props":2721,"children":2722},{"class":584,"line":647},[2723,2727,2731,2735,2739,2744,2749],{"type":518,"tag":582,"props":2724,"children":2725},{"style":932},[2726],{"type":523,"value":935},{"type":518,"tag":582,"props":2728,"children":2729},{"style":601},[2730],{"type":523,"value":940},{"type":518,"tag":582,"props":2732,"children":2733},{"style":622},[2734],{"type":523,"value":2711},{"type":518,"tag":582,"props":2736,"children":2737},{"style":601},[2738],{"type":523,"value":949},{"type":518,"tag":582,"props":2740,"children":2741},{"style":622},[2742],{"type":523,"value":2743}," generator",{"type":518,"tag":582,"props":2745,"children":2746},{"style":601},[2747],{"type":523,"value":2748},";",{"type":518,"tag":582,"props":2750,"children":2751},{"style":641},[2752],{"type":523,"value":2753}," // 依赖于抽象的报告生成器接口\n",{"type":518,"tag":582,"props":2755,"children":2756},{"class":584,"line":656},[2757],{"type":518,"tag":582,"props":2758,"children":2759},{"style":601},[2760],{"type":523,"value":653},{"type":518,"tag":582,"props":2762,"children":2763},{"class":584,"line":666},[2764],{"type":518,"tag":582,"props":2765,"children":2766},{"emptyLinePlaceholder":660},[2767],{"type":523,"value":663},{"type":518,"tag":582,"props":2769,"children":2770},{"class":584,"line":684},[2771,2775,2779],{"type":518,"tag":582,"props":2772,"children":2773},{"style":611},[2774],{"type":523,"value":2536},{"type":518,"tag":582,"props":2776,"children":2777},{"style":601},[2778],{"type":523,"value":677},{"type":518,"tag":582,"props":2780,"children":2781},{"style":601},[2782],{"type":523,"value":604},{"type":518,"tag":582,"props":2784,"children":2785},{"class":584,"line":693},[2786],{"type":518,"tag":582,"props":2787,"children":2788},{"style":641},[2789],{"type":523,"value":2552},{"type":518,"tag":582,"props":2791,"children":2792},{"class":584,"line":701},[2793,2797,2801,2805,2809,2814],{"type":518,"tag":582,"props":2794,"children":2795},{"style":932},[2796],{"type":523,"value":935},{"type":518,"tag":582,"props":2798,"children":2799},{"style":601},[2800],{"type":523,"value":940},{"type":518,"tag":582,"props":2802,"children":2803},{"style":622},[2804],{"type":523,"value":2711},{"type":518,"tag":582,"props":2806,"children":2807},{"style":601},[2808],{"type":523,"value":940},{"type":518,"tag":582,"props":2810,"children":2811},{"style":611},[2812],{"type":523,"value":2813},"generate",{"type":518,"tag":582,"props":2815,"children":2816},{"style":601},[2817],{"type":523,"value":2581},{"type":518,"tag":582,"props":2819,"children":2820},{"class":584,"line":845},[2821],{"type":518,"tag":582,"props":2822,"children":2823},{"style":601},[2824],{"type":523,"value":653},{"type":518,"tag":582,"props":2826,"children":2827},{"class":584,"line":853},[2828],{"type":518,"tag":582,"props":2829,"children":2830},{"style":601},[2831],{"type":523,"value":707},{"type":518,"tag":582,"props":2833,"children":2834},{"class":584,"line":1063},[2835],{"type":518,"tag":582,"props":2836,"children":2837},{"emptyLinePlaceholder":660},[2838],{"type":523,"value":663},{"type":518,"tag":582,"props":2840,"children":2841},{"class":584,"line":1089},[2842,2846,2850],{"type":518,"tag":582,"props":2843,"children":2844},{"style":589},[2845],{"type":523,"value":592},{"type":518,"tag":582,"props":2847,"children":2848},{"style":595},[2849],{"type":523,"value":2504},{"type":518,"tag":582,"props":2851,"children":2852},{"style":601},[2853],{"type":523,"value":604},{"type":518,"tag":582,"props":2855,"children":2856},{"class":584,"line":1105},[2857,2862,2866],{"type":518,"tag":582,"props":2858,"children":2859},{"style":611},[2860],{"type":523,"value":2861},"  generate",{"type":518,"tag":582,"props":2863,"children":2864},{"style":601},[2865],{"type":523,"value":677},{"type":518,"tag":582,"props":2867,"children":2868},{"style":601},[2869],{"type":523,"value":604},{"type":518,"tag":582,"props":2871,"children":2872},{"class":584,"line":1142},[2873],{"type":518,"tag":582,"props":2874,"children":2875},{"style":641},[2876],{"type":523,"value":2641},{"type":518,"tag":582,"props":2878,"children":2879},{"class":584,"line":1150},[2880],{"type":518,"tag":582,"props":2881,"children":2882},{"style":601},[2883],{"type":523,"value":653},{"type":518,"tag":582,"props":2885,"children":2886},{"class":584,"line":1158},[2887],{"type":518,"tag":582,"props":2888,"children":2889},{"style":601},[2890],{"type":523,"value":707},{"type":518,"tag":582,"props":2892,"children":2893},{"class":584,"line":1166},[2894],{"type":518,"tag":582,"props":2895,"children":2896},{"emptyLinePlaceholder":660},[2897],{"type":523,"value":663},{"type":518,"tag":582,"props":2899,"children":2900},{"class":584,"line":1191},[2901,2905,2910],{"type":518,"tag":582,"props":2902,"children":2903},{"style":589},[2904],{"type":523,"value":592},{"type":518,"tag":582,"props":2906,"children":2907},{"style":595},[2908],{"type":523,"value":2909}," HTMLGenerator",{"type":518,"tag":582,"props":2911,"children":2912},{"style":601},[2913],{"type":523,"value":604},{"type":518,"tag":582,"props":2915,"children":2916},{"class":584,"line":1207},[2917,2921,2925],{"type":518,"tag":582,"props":2918,"children":2919},{"style":611},[2920],{"type":523,"value":2861},{"type":518,"tag":582,"props":2922,"children":2923},{"style":601},[2924],{"type":523,"value":677},{"type":518,"tag":582,"props":2926,"children":2927},{"style":601},[2928],{"type":523,"value":604},{"type":518,"tag":582,"props":2930,"children":2931},{"class":584,"line":1244},[2932],{"type":518,"tag":582,"props":2933,"children":2934},{"style":641},[2935],{"type":523,"value":2936},"    // 具体的 HTML 生成逻辑\n",{"type":518,"tag":582,"props":2938,"children":2939},{"class":584,"line":1252},[2940],{"type":518,"tag":582,"props":2941,"children":2942},{"style":601},[2943],{"type":523,"value":653},{"type":518,"tag":582,"props":2945,"children":2947},{"class":584,"line":2946},23,[2948],{"type":518,"tag":582,"props":2949,"children":2950},{"style":601},[2951],{"type":523,"value":707},{"type":518,"tag":519,"props":2953,"children":2954},{},[2955],{"type":523,"value":2956},"现在，ReportGenerator 不再直接依赖于具体的实现，而是依赖于抽象的报告生成器接口。这使得我们可以轻松地扩展系统，例如添加新的报告生成器，而不需要修改 ReportGenerator 类。这样的设计更加灵活，符合依赖反转原则。",{"type":518,"tag":2958,"props":2959,"children":2960},"style",{},[2961],{"type":523,"value":2962},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":512,"searchDepth":656,"depth":656,"links":2964},[2965,2966,2967,2968,2969],{"id":562,"depth":607,"text":562},{"id":866,"depth":607,"text":866},{"id":1472,"depth":607,"text":1472},{"id":2053,"depth":607,"text":2053},{"id":2416,"depth":607,"text":2416},"markdown","content:4.design-mode:1.thoughts-principles.md","content","4.design-mode/1.thoughts-principles.md","md",[2976,2977],{"_path":487,"title":486,"description":512},{"_path":504,"title":503,"description":512},1714059007891]