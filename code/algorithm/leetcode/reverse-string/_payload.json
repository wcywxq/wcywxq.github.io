[{"data":1,"prerenderedAt":891},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/reverse-string":359,"/code/algorithm/leetcode/reverse-string-surround":886},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,269,318],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263,266],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.165 比较版本号","/code/algorithm/leetcode/compare-version-numbers",{"title":198,"_path":199},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":201,"_path":202},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":204,"_path":205},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":207,"_path":208},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":210,"_path":211},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":213,"_path":214},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":216,"_path":217},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":219,"_path":220},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":222,"_path":223},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":225,"_path":226},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":228,"_path":229},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":231,"_path":232},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":234,"_path":235},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":237,"_path":238},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":240,"_path":241},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":243,"_path":244},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":246,"_path":247},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":249,"_path":250},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":252,"_path":253},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":255,"_path":256},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":258,"_path":259},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":261,"_path":262},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":264,"_path":265},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":267,"_path":268},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":270,"_path":271,"children":272},"源码实现","/code/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/code/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/code/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/code/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/code/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/code/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/code/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/code/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/code/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/code/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/code/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/code/source/string",[315],{"title":316,"_path":317},"repeat()","/code/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/code/scene",[322,344,347,350,353,356],{"title":323,"_path":324,"children":325},"Promise","/code/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/code/scene/calcuate-object-bytes",{"title":348,"_path":349},"lodash.get","/code/scene/lodash-get",{"title":351,"_path":352},"记忆化请求函数 - 可缓存请求函数","/code/scene/memorize-request",{"title":354,"_path":355},"sku 算法实现","/code/scene/sku",{"title":357,"_path":358},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":226,"_dir":360,"_draft":361,"_partial":361,"_locale":362,"title":225,"description":363,"url":364,"body":365,"_type":881,"_id":882,"_source":883,"_file":884,"_extension":885},"leetcode",false,"","编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。","https://leetcode.cn/problems/reverse-string",{"type":366,"children":367,"toc":875},"root",[368,375,380,385,415,420,443,448,463,469,474,480,869],{"type":369,"tag":370,"props":371,"children":372},"element","p",{},[373],{"type":374,"value":363},"text",{"type":369,"tag":370,"props":376,"children":377},{},[378],{"type":374,"value":379},"不要给另外的数组分配额外的空间，你必须原地修改输入数组、使用 O(1) 的额外空间解决这一问题。",{"type":369,"tag":370,"props":381,"children":382},{},[383],{"type":374,"value":384},"示例 1：",{"type":369,"tag":386,"props":387,"children":390},"pre",{"className":388,"code":389,"language":374,"meta":362,"style":362},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：s = [\"h\",\"e\",\"l\",\"l\",\"o\"]\n输出：[\"o\",\"l\",\"l\",\"e\",\"h\"]\n",[391],{"type":369,"tag":392,"props":393,"children":394},"code",{"__ignoreMap":362},[395,406],{"type":369,"tag":396,"props":397,"children":400},"span",{"class":398,"line":399},"line",1,[401],{"type":369,"tag":396,"props":402,"children":403},{},[404],{"type":374,"value":405},"输入：s = [\"h\",\"e\",\"l\",\"l\",\"o\"]\n",{"type":369,"tag":396,"props":407,"children":409},{"class":398,"line":408},2,[410],{"type":369,"tag":396,"props":411,"children":412},{},[413],{"type":374,"value":414},"输出：[\"o\",\"l\",\"l\",\"e\",\"h\"]\n",{"type":369,"tag":370,"props":416,"children":417},{},[418],{"type":374,"value":419},"示例 2：",{"type":369,"tag":386,"props":421,"children":423},{"className":388,"code":422,"language":374,"meta":362,"style":362},"输入：s = [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\n输出：[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]\n",[424],{"type":369,"tag":392,"props":425,"children":426},{"__ignoreMap":362},[427,435],{"type":369,"tag":396,"props":428,"children":429},{"class":398,"line":399},[430],{"type":369,"tag":396,"props":431,"children":432},{},[433],{"type":374,"value":434},"输入：s = [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\n",{"type":369,"tag":396,"props":436,"children":437},{"class":398,"line":408},[438],{"type":369,"tag":396,"props":439,"children":440},{},[441],{"type":374,"value":442},"输出：[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]\n",{"type":369,"tag":370,"props":444,"children":445},{},[446],{"type":374,"value":447},"提示：",{"type":369,"tag":449,"props":450,"children":451},"ul",{},[452,458],{"type":369,"tag":453,"props":454,"children":455},"li",{},[456],{"type":374,"value":457},"1 \u003C= s.length \u003C= 10^5",{"type":369,"tag":453,"props":459,"children":460},{},[461],{"type":374,"value":462},"s[i] 都是 ASCII 码表中的可打印字符",{"type":369,"tag":464,"props":465,"children":467},"h2",{"id":466},"解题思路",[468],{"type":374,"value":466},{"type":369,"tag":464,"props":470,"children":472},{"id":471},"实现",[473],{"type":374,"value":471},{"type":369,"tag":475,"props":476,"children":478},"h3",{"id":477},"双指针",[479],{"type":374,"value":477},{"type":369,"tag":386,"props":481,"children":485},{"className":482,"code":483,"language":484,"meta":362,"style":362},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {character[]} s\n * @return {void} Do not return anything, modify s in-place instead.\n */\nvar reverseString = function (s) {\n  let left = 0;\n  let right = s.length - 1;\n  while (left \u003C right) {\n    [s[left], s[right]] = [s[right], s[left]];\n    left++;\n    right--;\n  }\n};\n","js",[486],{"type":369,"tag":392,"props":487,"children":488},{"__ignoreMap":362},[489,498,524,547,556,600,631,678,710,811,829,847,856],{"type":369,"tag":396,"props":490,"children":491},{"class":398,"line":399},[492],{"type":369,"tag":396,"props":493,"children":495},{"style":494},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[496],{"type":374,"value":497},"/**\n",{"type":369,"tag":396,"props":499,"children":500},{"class":398,"line":408},[501,506,512,518],{"type":369,"tag":396,"props":502,"children":503},{"style":494},[504],{"type":374,"value":505}," * ",{"type":369,"tag":396,"props":507,"children":509},{"style":508},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[510],{"type":374,"value":511},"@param",{"type":369,"tag":396,"props":513,"children":515},{"style":514},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[516],{"type":374,"value":517}," {character[]}",{"type":369,"tag":396,"props":519,"children":521},{"style":520},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[522],{"type":374,"value":523}," s\n",{"type":369,"tag":396,"props":525,"children":527},{"class":398,"line":526},3,[528,532,537,542],{"type":369,"tag":396,"props":529,"children":530},{"style":494},[531],{"type":374,"value":505},{"type":369,"tag":396,"props":533,"children":534},{"style":508},[535],{"type":374,"value":536},"@return",{"type":369,"tag":396,"props":538,"children":539},{"style":514},[540],{"type":374,"value":541}," {void}",{"type":369,"tag":396,"props":543,"children":544},{"style":494},[545],{"type":374,"value":546}," Do not return anything, modify s in-place instead.\n",{"type":369,"tag":396,"props":548,"children":550},{"class":398,"line":549},4,[551],{"type":369,"tag":396,"props":552,"children":553},{"style":494},[554],{"type":374,"value":555}," */\n",{"type":369,"tag":396,"props":557,"children":559},{"class":398,"line":558},5,[560,566,572,578,583,589,595],{"type":369,"tag":396,"props":561,"children":563},{"style":562},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[564],{"type":374,"value":565},"var",{"type":369,"tag":396,"props":567,"children":569},{"style":568},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[570],{"type":374,"value":571}," reverseString",{"type":369,"tag":396,"props":573,"children":575},{"style":574},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[576],{"type":374,"value":577}," =",{"type":369,"tag":396,"props":579,"children":580},{"style":562},[581],{"type":374,"value":582}," function",{"type":369,"tag":396,"props":584,"children":586},{"style":585},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[587],{"type":374,"value":588}," (",{"type":369,"tag":396,"props":590,"children":592},{"style":591},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[593],{"type":374,"value":594},"s",{"type":369,"tag":396,"props":596,"children":597},{"style":585},[598],{"type":374,"value":599},") {\n",{"type":369,"tag":396,"props":601,"children":603},{"class":398,"line":602},6,[604,609,615,619,625],{"type":369,"tag":396,"props":605,"children":606},{"style":562},[607],{"type":374,"value":608},"  let",{"type":369,"tag":396,"props":610,"children":612},{"style":611},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[613],{"type":374,"value":614}," left",{"type":369,"tag":396,"props":616,"children":617},{"style":574},[618],{"type":374,"value":577},{"type":369,"tag":396,"props":620,"children":622},{"style":621},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[623],{"type":374,"value":624}," 0",{"type":369,"tag":396,"props":626,"children":628},{"style":627},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[629],{"type":374,"value":630},";\n",{"type":369,"tag":396,"props":632,"children":634},{"class":398,"line":633},7,[635,639,644,648,653,659,664,669,674],{"type":369,"tag":396,"props":636,"children":637},{"style":562},[638],{"type":374,"value":608},{"type":369,"tag":396,"props":640,"children":641},{"style":611},[642],{"type":374,"value":643}," right",{"type":369,"tag":396,"props":645,"children":646},{"style":574},[647],{"type":374,"value":577},{"type":369,"tag":396,"props":649,"children":650},{"style":611},[651],{"type":374,"value":652}," s",{"type":369,"tag":396,"props":654,"children":656},{"style":655},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[657],{"type":374,"value":658},".",{"type":369,"tag":396,"props":660,"children":661},{"style":585},[662],{"type":374,"value":663},"length ",{"type":369,"tag":396,"props":665,"children":666},{"style":574},[667],{"type":374,"value":668},"-",{"type":369,"tag":396,"props":670,"children":671},{"style":621},[672],{"type":374,"value":673}," 1",{"type":369,"tag":396,"props":675,"children":676},{"style":627},[677],{"type":374,"value":630},{"type":369,"tag":396,"props":679,"children":681},{"class":398,"line":680},8,[682,688,692,697,702,706],{"type":369,"tag":396,"props":683,"children":685},{"style":684},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[686],{"type":374,"value":687},"  while",{"type":369,"tag":396,"props":689,"children":690},{"style":585},[691],{"type":374,"value":588},{"type":369,"tag":396,"props":693,"children":694},{"style":611},[695],{"type":374,"value":696},"left",{"type":369,"tag":396,"props":698,"children":699},{"style":574},[700],{"type":374,"value":701}," \u003C",{"type":369,"tag":396,"props":703,"children":704},{"style":611},[705],{"type":374,"value":643},{"type":369,"tag":396,"props":707,"children":708},{"style":585},[709],{"type":374,"value":599},{"type":369,"tag":396,"props":711,"children":713},{"class":398,"line":712},9,[714,719,723,728,732,737,742,746,750,755,760,765,770,774,778,782,786,790,794,798,802,807],{"type":369,"tag":396,"props":715,"children":716},{"style":585},[717],{"type":374,"value":718},"    [",{"type":369,"tag":396,"props":720,"children":721},{"style":611},[722],{"type":374,"value":594},{"type":369,"tag":396,"props":724,"children":725},{"style":585},[726],{"type":374,"value":727},"[",{"type":369,"tag":396,"props":729,"children":730},{"style":611},[731],{"type":374,"value":696},{"type":369,"tag":396,"props":733,"children":734},{"style":585},[735],{"type":374,"value":736},"]",{"type":369,"tag":396,"props":738,"children":739},{"style":627},[740],{"type":374,"value":741},",",{"type":369,"tag":396,"props":743,"children":744},{"style":611},[745],{"type":374,"value":652},{"type":369,"tag":396,"props":747,"children":748},{"style":585},[749],{"type":374,"value":727},{"type":369,"tag":396,"props":751,"children":752},{"style":611},[753],{"type":374,"value":754},"right",{"type":369,"tag":396,"props":756,"children":757},{"style":585},[758],{"type":374,"value":759},"]] ",{"type":369,"tag":396,"props":761,"children":762},{"style":574},[763],{"type":374,"value":764},"=",{"type":369,"tag":396,"props":766,"children":767},{"style":585},[768],{"type":374,"value":769}," [",{"type":369,"tag":396,"props":771,"children":772},{"style":611},[773],{"type":374,"value":594},{"type":369,"tag":396,"props":775,"children":776},{"style":585},[777],{"type":374,"value":727},{"type":369,"tag":396,"props":779,"children":780},{"style":611},[781],{"type":374,"value":754},{"type":369,"tag":396,"props":783,"children":784},{"style":585},[785],{"type":374,"value":736},{"type":369,"tag":396,"props":787,"children":788},{"style":627},[789],{"type":374,"value":741},{"type":369,"tag":396,"props":791,"children":792},{"style":611},[793],{"type":374,"value":652},{"type":369,"tag":396,"props":795,"children":796},{"style":585},[797],{"type":374,"value":727},{"type":369,"tag":396,"props":799,"children":800},{"style":611},[801],{"type":374,"value":696},{"type":369,"tag":396,"props":803,"children":804},{"style":585},[805],{"type":374,"value":806},"]]",{"type":369,"tag":396,"props":808,"children":809},{"style":627},[810],{"type":374,"value":630},{"type":369,"tag":396,"props":812,"children":814},{"class":398,"line":813},10,[815,820,825],{"type":369,"tag":396,"props":816,"children":817},{"style":611},[818],{"type":374,"value":819},"    left",{"type":369,"tag":396,"props":821,"children":822},{"style":574},[823],{"type":374,"value":824},"++",{"type":369,"tag":396,"props":826,"children":827},{"style":627},[828],{"type":374,"value":630},{"type":369,"tag":396,"props":830,"children":832},{"class":398,"line":831},11,[833,838,843],{"type":369,"tag":396,"props":834,"children":835},{"style":611},[836],{"type":374,"value":837},"    right",{"type":369,"tag":396,"props":839,"children":840},{"style":574},[841],{"type":374,"value":842},"--",{"type":369,"tag":396,"props":844,"children":845},{"style":627},[846],{"type":374,"value":630},{"type":369,"tag":396,"props":848,"children":850},{"class":398,"line":849},12,[851],{"type":369,"tag":396,"props":852,"children":853},{"style":585},[854],{"type":374,"value":855},"  }\n",{"type":369,"tag":396,"props":857,"children":859},{"class":398,"line":858},13,[860,865],{"type":369,"tag":396,"props":861,"children":862},{"style":585},[863],{"type":374,"value":864},"}",{"type":369,"tag":396,"props":866,"children":867},{"style":627},[868],{"type":374,"value":630},{"type":369,"tag":870,"props":871,"children":872},"style",{},[873],{"type":374,"value":874},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":362,"searchDepth":558,"depth":558,"links":876},[877,878],{"id":466,"depth":408,"text":466},{"id":471,"depth":408,"text":471,"children":879},[880],{"id":477,"depth":526,"text":477},"markdown","content:2.code:1.algorithm:3.leetcode:344.reverse-string.md","content","2.code/1.algorithm/3.leetcode/344.reverse-string.md","md",[887,889],{"_path":223,"title":222,"description":888},"给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。",{"_path":229,"title":228,"description":890},"给你一个字符串 s ，仅反转字符串中的所有元音字母，并返回结果字符串。",1712748639363]