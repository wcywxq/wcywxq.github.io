[{"data":1,"prerenderedAt":1006},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies":329,"/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies-surround":1001},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319],{"title":320,"_path":321,"children":322},"Promise","/code/scene/promise",[323,326],{"title":324,"_path":325},"顺序打印 url 并支持 retry","/code/scene/promise/order-print-url-and-retry",{"title":327,"_path":328},"promise 实现图片加载数量限制","/code/scene/promise/limit-image-load-count",{"_path":262,"_dir":330,"_draft":331,"_partial":331,"_locale":332,"title":261,"description":333,"url":334,"body":335,"_type":996,"_id":997,"_source":998,"_file":999,"_extension":1000},"leetcode",false,"","给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。","https://leetcode.cn/problems/kids-with-the-greatest-number-of-candies",{"type":336,"children":337,"toc":992},"root",[338,345,350,355,439,444,475,480,503,508,528,534,539,986],{"type":339,"tag":340,"props":341,"children":342},"element","p",{},[343],{"type":344,"value":333},"text",{"type":339,"tag":340,"props":346,"children":347},{},[348],{"type":344,"value":349},"对每一个孩子，检查是否存在一种方案，将额外的 extraCandies 个糖果分配给孩子们之后，此孩子有 最多 的糖果。注意，允许有多个孩子同时拥有 最多 的糖果数目。",{"type":339,"tag":340,"props":351,"children":352},{},[353],{"type":344,"value":354},"示例 1：",{"type":339,"tag":356,"props":357,"children":360},"pre",{"className":358,"code":359,"language":344,"meta":332,"style":332},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：candies = [2,3,5,1,3], extraCandies = 3\n输出：[true,true,true,false,true]\n解释：\n孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",[361],{"type":339,"tag":362,"props":363,"children":364},"code",{"__ignoreMap":332},[365,376,385,394,403,412,421,430],{"type":339,"tag":366,"props":367,"children":370},"span",{"class":368,"line":369},"line",1,[371],{"type":339,"tag":366,"props":372,"children":373},{},[374],{"type":344,"value":375},"输入：candies = [2,3,5,1,3], extraCandies = 3\n",{"type":339,"tag":366,"props":377,"children":379},{"class":368,"line":378},2,[380],{"type":339,"tag":366,"props":381,"children":382},{},[383],{"type":344,"value":384},"输出：[true,true,true,false,true]\n",{"type":339,"tag":366,"props":386,"children":388},{"class":368,"line":387},3,[389],{"type":339,"tag":366,"props":390,"children":391},{},[392],{"type":344,"value":393},"解释：\n",{"type":339,"tag":366,"props":395,"children":397},{"class":368,"line":396},4,[398],{"type":339,"tag":366,"props":399,"children":400},{},[401],{"type":344,"value":402},"孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n",{"type":339,"tag":366,"props":404,"children":406},{"class":368,"line":405},5,[407],{"type":339,"tag":366,"props":408,"children":409},{},[410],{"type":344,"value":411},"孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":339,"tag":366,"props":413,"children":415},{"class":368,"line":414},6,[416],{"type":339,"tag":366,"props":417,"children":418},{},[419],{"type":344,"value":420},"孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n",{"type":339,"tag":366,"props":422,"children":424},{"class":368,"line":423},7,[425],{"type":339,"tag":366,"props":426,"children":427},{},[428],{"type":344,"value":429},"孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n",{"type":339,"tag":366,"props":431,"children":433},{"class":368,"line":432},8,[434],{"type":339,"tag":366,"props":435,"children":436},{},[437],{"type":344,"value":438},"孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":339,"tag":340,"props":440,"children":441},{},[442],{"type":344,"value":443},"示例 2：",{"type":339,"tag":356,"props":445,"children":447},{"className":358,"code":446,"language":344,"meta":332,"style":332},"输入：candies = [4,2,1,1,2], extraCandies = 1\n输出：[true,false,false,false,false]\n解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",[448],{"type":339,"tag":362,"props":449,"children":450},{"__ignoreMap":332},[451,459,467],{"type":339,"tag":366,"props":452,"children":453},{"class":368,"line":369},[454],{"type":339,"tag":366,"props":455,"children":456},{},[457],{"type":344,"value":458},"输入：candies = [4,2,1,1,2], extraCandies = 1\n",{"type":339,"tag":366,"props":460,"children":461},{"class":368,"line":378},[462],{"type":339,"tag":366,"props":463,"children":464},{},[465],{"type":344,"value":466},"输出：[true,false,false,false,false]\n",{"type":339,"tag":366,"props":468,"children":469},{"class":368,"line":387},[470],{"type":339,"tag":366,"props":471,"children":472},{},[473],{"type":344,"value":474},"解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",{"type":339,"tag":340,"props":476,"children":477},{},[478],{"type":344,"value":479},"示例 3：",{"type":339,"tag":356,"props":481,"children":483},{"className":358,"code":482,"language":344,"meta":332,"style":332},"输入：candies = [12,1,12], extraCandies = 10\n输出：[true,false,true]\n",[484],{"type":339,"tag":362,"props":485,"children":486},{"__ignoreMap":332},[487,495],{"type":339,"tag":366,"props":488,"children":489},{"class":368,"line":369},[490],{"type":339,"tag":366,"props":491,"children":492},{},[493],{"type":344,"value":494},"输入：candies = [12,1,12], extraCandies = 10\n",{"type":339,"tag":366,"props":496,"children":497},{"class":368,"line":378},[498],{"type":339,"tag":366,"props":499,"children":500},{},[501],{"type":344,"value":502},"输出：[true,false,true]\n",{"type":339,"tag":340,"props":504,"children":505},{},[506],{"type":344,"value":507},"提示：",{"type":339,"tag":509,"props":510,"children":511},"ul",{},[512,518,523],{"type":339,"tag":513,"props":514,"children":515},"li",{},[516],{"type":344,"value":517},"2 \u003C= candies.length \u003C= 100",{"type":339,"tag":513,"props":519,"children":520},{},[521],{"type":344,"value":522},"1 \u003C= candies[i] \u003C= 100",{"type":339,"tag":513,"props":524,"children":525},{},[526],{"type":344,"value":527},"1 \u003C= extraCandies \u003C= 50",{"type":339,"tag":529,"props":530,"children":532},"h2",{"id":531},"解题思路",[533],{"type":344,"value":531},{"type":339,"tag":529,"props":535,"children":537},{"id":536},"实现",[538],{"type":344,"value":536},{"type":339,"tag":356,"props":540,"children":544},{"className":541,"code":542,"language":543,"meta":332,"style":332},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} candies\n * @param {number} extraCandies\n * @return {boolean[]}\n */\nvar kidsWithCandies = function (candies, extraCandies) {\n  const max = Math.max.apply([], candies);\n  let res = [];\n  for (let i = 0; i \u003C candies.length; i++) {\n    let currentMax = candies[i] + extraCandies;\n    res[i] = currentMax >= max;\n  }\n  return res;\n};\n","js",[545],{"type":339,"tag":362,"props":546,"children":547},{"__ignoreMap":332},[548,557,583,604,621,629,683,750,776,854,904,947,956,973],{"type":339,"tag":366,"props":549,"children":550},{"class":368,"line":369},[551],{"type":339,"tag":366,"props":552,"children":554},{"style":553},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[555],{"type":344,"value":556},"/**\n",{"type":339,"tag":366,"props":558,"children":559},{"class":368,"line":378},[560,565,571,577],{"type":339,"tag":366,"props":561,"children":562},{"style":553},[563],{"type":344,"value":564}," * ",{"type":339,"tag":366,"props":566,"children":568},{"style":567},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[569],{"type":344,"value":570},"@param",{"type":339,"tag":366,"props":572,"children":574},{"style":573},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[575],{"type":344,"value":576}," {number[]}",{"type":339,"tag":366,"props":578,"children":580},{"style":579},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[581],{"type":344,"value":582}," candies\n",{"type":339,"tag":366,"props":584,"children":585},{"class":368,"line":387},[586,590,594,599],{"type":339,"tag":366,"props":587,"children":588},{"style":553},[589],{"type":344,"value":564},{"type":339,"tag":366,"props":591,"children":592},{"style":567},[593],{"type":344,"value":570},{"type":339,"tag":366,"props":595,"children":596},{"style":573},[597],{"type":344,"value":598}," {number}",{"type":339,"tag":366,"props":600,"children":601},{"style":579},[602],{"type":344,"value":603}," extraCandies\n",{"type":339,"tag":366,"props":605,"children":606},{"class":368,"line":396},[607,611,616],{"type":339,"tag":366,"props":608,"children":609},{"style":553},[610],{"type":344,"value":564},{"type":339,"tag":366,"props":612,"children":613},{"style":567},[614],{"type":344,"value":615},"@return",{"type":339,"tag":366,"props":617,"children":618},{"style":573},[619],{"type":344,"value":620}," {boolean[]}\n",{"type":339,"tag":366,"props":622,"children":623},{"class":368,"line":405},[624],{"type":339,"tag":366,"props":625,"children":626},{"style":553},[627],{"type":344,"value":628}," */\n",{"type":339,"tag":366,"props":630,"children":631},{"class":368,"line":414},[632,638,644,650,655,661,667,673,678],{"type":339,"tag":366,"props":633,"children":635},{"style":634},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[636],{"type":344,"value":637},"var",{"type":339,"tag":366,"props":639,"children":641},{"style":640},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[642],{"type":344,"value":643}," kidsWithCandies",{"type":339,"tag":366,"props":645,"children":647},{"style":646},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[648],{"type":344,"value":649}," =",{"type":339,"tag":366,"props":651,"children":652},{"style":634},[653],{"type":344,"value":654}," function",{"type":339,"tag":366,"props":656,"children":658},{"style":657},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[659],{"type":344,"value":660}," (",{"type":339,"tag":366,"props":662,"children":664},{"style":663},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[665],{"type":344,"value":666},"candies",{"type":339,"tag":366,"props":668,"children":670},{"style":669},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[671],{"type":344,"value":672},",",{"type":339,"tag":366,"props":674,"children":675},{"style":663},[676],{"type":344,"value":677}," extraCandies",{"type":339,"tag":366,"props":679,"children":680},{"style":657},[681],{"type":344,"value":682},") {\n",{"type":339,"tag":366,"props":684,"children":685},{"class":368,"line":423},[686,691,697,701,706,712,717,721,726,731,735,740,745],{"type":339,"tag":366,"props":687,"children":688},{"style":634},[689],{"type":344,"value":690},"  const",{"type":339,"tag":366,"props":692,"children":694},{"style":693},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[695],{"type":344,"value":696}," max",{"type":339,"tag":366,"props":698,"children":699},{"style":646},[700],{"type":344,"value":649},{"type":339,"tag":366,"props":702,"children":703},{"style":693},[704],{"type":344,"value":705}," Math",{"type":339,"tag":366,"props":707,"children":709},{"style":708},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[710],{"type":344,"value":711},".",{"type":339,"tag":366,"props":713,"children":714},{"style":693},[715],{"type":344,"value":716},"max",{"type":339,"tag":366,"props":718,"children":719},{"style":708},[720],{"type":344,"value":711},{"type":339,"tag":366,"props":722,"children":723},{"style":640},[724],{"type":344,"value":725},"apply",{"type":339,"tag":366,"props":727,"children":728},{"style":657},[729],{"type":344,"value":730},"([]",{"type":339,"tag":366,"props":732,"children":733},{"style":669},[734],{"type":344,"value":672},{"type":339,"tag":366,"props":736,"children":737},{"style":693},[738],{"type":344,"value":739}," candies",{"type":339,"tag":366,"props":741,"children":742},{"style":657},[743],{"type":344,"value":744},")",{"type":339,"tag":366,"props":746,"children":747},{"style":669},[748],{"type":344,"value":749},";\n",{"type":339,"tag":366,"props":751,"children":752},{"class":368,"line":432},[753,758,763,767,772],{"type":339,"tag":366,"props":754,"children":755},{"style":634},[756],{"type":344,"value":757},"  let",{"type":339,"tag":366,"props":759,"children":760},{"style":693},[761],{"type":344,"value":762}," res",{"type":339,"tag":366,"props":764,"children":765},{"style":646},[766],{"type":344,"value":649},{"type":339,"tag":366,"props":768,"children":769},{"style":657},[770],{"type":344,"value":771}," []",{"type":339,"tag":366,"props":773,"children":774},{"style":669},[775],{"type":344,"value":749},{"type":339,"tag":366,"props":777,"children":779},{"class":368,"line":778},9,[780,786,790,795,800,804,810,815,819,824,828,832,837,841,845,850],{"type":339,"tag":366,"props":781,"children":783},{"style":782},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[784],{"type":344,"value":785},"  for",{"type":339,"tag":366,"props":787,"children":788},{"style":657},[789],{"type":344,"value":660},{"type":339,"tag":366,"props":791,"children":792},{"style":634},[793],{"type":344,"value":794},"let",{"type":339,"tag":366,"props":796,"children":797},{"style":693},[798],{"type":344,"value":799}," i",{"type":339,"tag":366,"props":801,"children":802},{"style":646},[803],{"type":344,"value":649},{"type":339,"tag":366,"props":805,"children":807},{"style":806},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[808],{"type":344,"value":809}," 0",{"type":339,"tag":366,"props":811,"children":812},{"style":669},[813],{"type":344,"value":814},";",{"type":339,"tag":366,"props":816,"children":817},{"style":693},[818],{"type":344,"value":799},{"type":339,"tag":366,"props":820,"children":821},{"style":646},[822],{"type":344,"value":823}," \u003C",{"type":339,"tag":366,"props":825,"children":826},{"style":693},[827],{"type":344,"value":739},{"type":339,"tag":366,"props":829,"children":830},{"style":708},[831],{"type":344,"value":711},{"type":339,"tag":366,"props":833,"children":834},{"style":657},[835],{"type":344,"value":836},"length",{"type":339,"tag":366,"props":838,"children":839},{"style":669},[840],{"type":344,"value":814},{"type":339,"tag":366,"props":842,"children":843},{"style":693},[844],{"type":344,"value":799},{"type":339,"tag":366,"props":846,"children":847},{"style":646},[848],{"type":344,"value":849},"++",{"type":339,"tag":366,"props":851,"children":852},{"style":657},[853],{"type":344,"value":682},{"type":339,"tag":366,"props":855,"children":857},{"class":368,"line":856},10,[858,863,868,872,876,881,886,891,896,900],{"type":339,"tag":366,"props":859,"children":860},{"style":634},[861],{"type":344,"value":862},"    let",{"type":339,"tag":366,"props":864,"children":865},{"style":693},[866],{"type":344,"value":867}," currentMax",{"type":339,"tag":366,"props":869,"children":870},{"style":646},[871],{"type":344,"value":649},{"type":339,"tag":366,"props":873,"children":874},{"style":693},[875],{"type":344,"value":739},{"type":339,"tag":366,"props":877,"children":878},{"style":657},[879],{"type":344,"value":880},"[",{"type":339,"tag":366,"props":882,"children":883},{"style":693},[884],{"type":344,"value":885},"i",{"type":339,"tag":366,"props":887,"children":888},{"style":657},[889],{"type":344,"value":890},"] ",{"type":339,"tag":366,"props":892,"children":893},{"style":646},[894],{"type":344,"value":895},"+",{"type":339,"tag":366,"props":897,"children":898},{"style":693},[899],{"type":344,"value":677},{"type":339,"tag":366,"props":901,"children":902},{"style":669},[903],{"type":344,"value":749},{"type":339,"tag":366,"props":905,"children":907},{"class":368,"line":906},11,[908,913,917,921,925,930,934,939,943],{"type":339,"tag":366,"props":909,"children":910},{"style":693},[911],{"type":344,"value":912},"    res",{"type":339,"tag":366,"props":914,"children":915},{"style":657},[916],{"type":344,"value":880},{"type":339,"tag":366,"props":918,"children":919},{"style":693},[920],{"type":344,"value":885},{"type":339,"tag":366,"props":922,"children":923},{"style":657},[924],{"type":344,"value":890},{"type":339,"tag":366,"props":926,"children":927},{"style":646},[928],{"type":344,"value":929},"=",{"type":339,"tag":366,"props":931,"children":932},{"style":693},[933],{"type":344,"value":867},{"type":339,"tag":366,"props":935,"children":936},{"style":646},[937],{"type":344,"value":938}," >=",{"type":339,"tag":366,"props":940,"children":941},{"style":693},[942],{"type":344,"value":696},{"type":339,"tag":366,"props":944,"children":945},{"style":669},[946],{"type":344,"value":749},{"type":339,"tag":366,"props":948,"children":950},{"class":368,"line":949},12,[951],{"type":339,"tag":366,"props":952,"children":953},{"style":657},[954],{"type":344,"value":955},"  }\n",{"type":339,"tag":366,"props":957,"children":959},{"class":368,"line":958},13,[960,965,969],{"type":339,"tag":366,"props":961,"children":962},{"style":782},[963],{"type":344,"value":964},"  return",{"type":339,"tag":366,"props":966,"children":967},{"style":693},[968],{"type":344,"value":762},{"type":339,"tag":366,"props":970,"children":971},{"style":669},[972],{"type":344,"value":749},{"type":339,"tag":366,"props":974,"children":976},{"class":368,"line":975},14,[977,982],{"type":339,"tag":366,"props":978,"children":979},{"style":657},[980],{"type":344,"value":981},"}",{"type":339,"tag":366,"props":983,"children":984},{"style":669},[985],{"type":344,"value":749},{"type":339,"tag":987,"props":988,"children":989},"style",{},[990],{"type":344,"value":991},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":332,"searchDepth":405,"depth":405,"links":993},[994,995],{"id":531,"depth":378,"text":531},{"id":536,"depth":378,"text":536},"markdown","content:2.code:1.algorithm:3.leetcode:1431.kids-with-the-greatest-number-of-candies.md","content","2.code/1.algorithm/3.leetcode/1431.kids-with-the-greatest-number-of-candies.md","md",[1002,1004],{"_path":259,"title":258,"description":1003},"给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。",{"_path":265,"title":264,"description":1005},"给你两个字符串 word1 和 word2 。请你从 word1 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。",1712330891403]