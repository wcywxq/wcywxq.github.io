[{"data":1,"prerenderedAt":1024},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies":347,"/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies-surround":1019},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319,341,344],{"title":320,"_path":321,"children":322},"Promise","/code/scene/promise",[323,326,329,332,335,338],{"title":324,"_path":325},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":327,"_path":328},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":330,"_path":331},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":333,"_path":334},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":336,"_path":337},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":339,"_path":340},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":342,"_path":343},"lodash.get","/code/scene/lodash.get",{"title":345,"_path":346},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":262,"_dir":348,"_draft":349,"_partial":349,"_locale":350,"title":261,"description":351,"url":352,"body":353,"_type":1014,"_id":1015,"_source":1016,"_file":1017,"_extension":1018},"leetcode",false,"","给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。","https://leetcode.cn/problems/kids-with-the-greatest-number-of-candies",{"type":354,"children":355,"toc":1010},"root",[356,363,368,373,457,462,493,498,521,526,546,552,557,1004],{"type":357,"tag":358,"props":359,"children":360},"element","p",{},[361],{"type":362,"value":351},"text",{"type":357,"tag":358,"props":364,"children":365},{},[366],{"type":362,"value":367},"对每一个孩子，检查是否存在一种方案，将额外的 extraCandies 个糖果分配给孩子们之后，此孩子有 最多 的糖果。注意，允许有多个孩子同时拥有 最多 的糖果数目。",{"type":357,"tag":358,"props":369,"children":370},{},[371],{"type":362,"value":372},"示例 1：",{"type":357,"tag":374,"props":375,"children":378},"pre",{"className":376,"code":377,"language":362,"meta":350,"style":350},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：candies = [2,3,5,1,3], extraCandies = 3\n输出：[true,true,true,false,true]\n解释：\n孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",[379],{"type":357,"tag":380,"props":381,"children":382},"code",{"__ignoreMap":350},[383,394,403,412,421,430,439,448],{"type":357,"tag":384,"props":385,"children":388},"span",{"class":386,"line":387},"line",1,[389],{"type":357,"tag":384,"props":390,"children":391},{},[392],{"type":362,"value":393},"输入：candies = [2,3,5,1,3], extraCandies = 3\n",{"type":357,"tag":384,"props":395,"children":397},{"class":386,"line":396},2,[398],{"type":357,"tag":384,"props":399,"children":400},{},[401],{"type":362,"value":402},"输出：[true,true,true,false,true]\n",{"type":357,"tag":384,"props":404,"children":406},{"class":386,"line":405},3,[407],{"type":357,"tag":384,"props":408,"children":409},{},[410],{"type":362,"value":411},"解释：\n",{"type":357,"tag":384,"props":413,"children":415},{"class":386,"line":414},4,[416],{"type":357,"tag":384,"props":417,"children":418},{},[419],{"type":362,"value":420},"孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n",{"type":357,"tag":384,"props":422,"children":424},{"class":386,"line":423},5,[425],{"type":357,"tag":384,"props":426,"children":427},{},[428],{"type":362,"value":429},"孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":357,"tag":384,"props":431,"children":433},{"class":386,"line":432},6,[434],{"type":357,"tag":384,"props":435,"children":436},{},[437],{"type":362,"value":438},"孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n",{"type":357,"tag":384,"props":440,"children":442},{"class":386,"line":441},7,[443],{"type":357,"tag":384,"props":444,"children":445},{},[446],{"type":362,"value":447},"孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n",{"type":357,"tag":384,"props":449,"children":451},{"class":386,"line":450},8,[452],{"type":357,"tag":384,"props":453,"children":454},{},[455],{"type":362,"value":456},"孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":357,"tag":358,"props":458,"children":459},{},[460],{"type":362,"value":461},"示例 2：",{"type":357,"tag":374,"props":463,"children":465},{"className":376,"code":464,"language":362,"meta":350,"style":350},"输入：candies = [4,2,1,1,2], extraCandies = 1\n输出：[true,false,false,false,false]\n解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",[466],{"type":357,"tag":380,"props":467,"children":468},{"__ignoreMap":350},[469,477,485],{"type":357,"tag":384,"props":470,"children":471},{"class":386,"line":387},[472],{"type":357,"tag":384,"props":473,"children":474},{},[475],{"type":362,"value":476},"输入：candies = [4,2,1,1,2], extraCandies = 1\n",{"type":357,"tag":384,"props":478,"children":479},{"class":386,"line":396},[480],{"type":357,"tag":384,"props":481,"children":482},{},[483],{"type":362,"value":484},"输出：[true,false,false,false,false]\n",{"type":357,"tag":384,"props":486,"children":487},{"class":386,"line":405},[488],{"type":357,"tag":384,"props":489,"children":490},{},[491],{"type":362,"value":492},"解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",{"type":357,"tag":358,"props":494,"children":495},{},[496],{"type":362,"value":497},"示例 3：",{"type":357,"tag":374,"props":499,"children":501},{"className":376,"code":500,"language":362,"meta":350,"style":350},"输入：candies = [12,1,12], extraCandies = 10\n输出：[true,false,true]\n",[502],{"type":357,"tag":380,"props":503,"children":504},{"__ignoreMap":350},[505,513],{"type":357,"tag":384,"props":506,"children":507},{"class":386,"line":387},[508],{"type":357,"tag":384,"props":509,"children":510},{},[511],{"type":362,"value":512},"输入：candies = [12,1,12], extraCandies = 10\n",{"type":357,"tag":384,"props":514,"children":515},{"class":386,"line":396},[516],{"type":357,"tag":384,"props":517,"children":518},{},[519],{"type":362,"value":520},"输出：[true,false,true]\n",{"type":357,"tag":358,"props":522,"children":523},{},[524],{"type":362,"value":525},"提示：",{"type":357,"tag":527,"props":528,"children":529},"ul",{},[530,536,541],{"type":357,"tag":531,"props":532,"children":533},"li",{},[534],{"type":362,"value":535},"2 \u003C= candies.length \u003C= 100",{"type":357,"tag":531,"props":537,"children":538},{},[539],{"type":362,"value":540},"1 \u003C= candies[i] \u003C= 100",{"type":357,"tag":531,"props":542,"children":543},{},[544],{"type":362,"value":545},"1 \u003C= extraCandies \u003C= 50",{"type":357,"tag":547,"props":548,"children":550},"h2",{"id":549},"解题思路",[551],{"type":362,"value":549},{"type":357,"tag":547,"props":553,"children":555},{"id":554},"实现",[556],{"type":362,"value":554},{"type":357,"tag":374,"props":558,"children":562},{"className":559,"code":560,"language":561,"meta":350,"style":350},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} candies\n * @param {number} extraCandies\n * @return {boolean[]}\n */\nvar kidsWithCandies = function (candies, extraCandies) {\n  const max = Math.max.apply([], candies);\n  let res = [];\n  for (let i = 0; i \u003C candies.length; i++) {\n    let currentMax = candies[i] + extraCandies;\n    res[i] = currentMax >= max;\n  }\n  return res;\n};\n","js",[563],{"type":357,"tag":380,"props":564,"children":565},{"__ignoreMap":350},[566,575,601,622,639,647,701,768,794,872,922,965,974,991],{"type":357,"tag":384,"props":567,"children":568},{"class":386,"line":387},[569],{"type":357,"tag":384,"props":570,"children":572},{"style":571},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[573],{"type":362,"value":574},"/**\n",{"type":357,"tag":384,"props":576,"children":577},{"class":386,"line":396},[578,583,589,595],{"type":357,"tag":384,"props":579,"children":580},{"style":571},[581],{"type":362,"value":582}," * ",{"type":357,"tag":384,"props":584,"children":586},{"style":585},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[587],{"type":362,"value":588},"@param",{"type":357,"tag":384,"props":590,"children":592},{"style":591},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[593],{"type":362,"value":594}," {number[]}",{"type":357,"tag":384,"props":596,"children":598},{"style":597},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[599],{"type":362,"value":600}," candies\n",{"type":357,"tag":384,"props":602,"children":603},{"class":386,"line":405},[604,608,612,617],{"type":357,"tag":384,"props":605,"children":606},{"style":571},[607],{"type":362,"value":582},{"type":357,"tag":384,"props":609,"children":610},{"style":585},[611],{"type":362,"value":588},{"type":357,"tag":384,"props":613,"children":614},{"style":591},[615],{"type":362,"value":616}," {number}",{"type":357,"tag":384,"props":618,"children":619},{"style":597},[620],{"type":362,"value":621}," extraCandies\n",{"type":357,"tag":384,"props":623,"children":624},{"class":386,"line":414},[625,629,634],{"type":357,"tag":384,"props":626,"children":627},{"style":571},[628],{"type":362,"value":582},{"type":357,"tag":384,"props":630,"children":631},{"style":585},[632],{"type":362,"value":633},"@return",{"type":357,"tag":384,"props":635,"children":636},{"style":591},[637],{"type":362,"value":638}," {boolean[]}\n",{"type":357,"tag":384,"props":640,"children":641},{"class":386,"line":423},[642],{"type":357,"tag":384,"props":643,"children":644},{"style":571},[645],{"type":362,"value":646}," */\n",{"type":357,"tag":384,"props":648,"children":649},{"class":386,"line":432},[650,656,662,668,673,679,685,691,696],{"type":357,"tag":384,"props":651,"children":653},{"style":652},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[654],{"type":362,"value":655},"var",{"type":357,"tag":384,"props":657,"children":659},{"style":658},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[660],{"type":362,"value":661}," kidsWithCandies",{"type":357,"tag":384,"props":663,"children":665},{"style":664},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[666],{"type":362,"value":667}," =",{"type":357,"tag":384,"props":669,"children":670},{"style":652},[671],{"type":362,"value":672}," function",{"type":357,"tag":384,"props":674,"children":676},{"style":675},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[677],{"type":362,"value":678}," (",{"type":357,"tag":384,"props":680,"children":682},{"style":681},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[683],{"type":362,"value":684},"candies",{"type":357,"tag":384,"props":686,"children":688},{"style":687},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[689],{"type":362,"value":690},",",{"type":357,"tag":384,"props":692,"children":693},{"style":681},[694],{"type":362,"value":695}," extraCandies",{"type":357,"tag":384,"props":697,"children":698},{"style":675},[699],{"type":362,"value":700},") {\n",{"type":357,"tag":384,"props":702,"children":703},{"class":386,"line":441},[704,709,715,719,724,730,735,739,744,749,753,758,763],{"type":357,"tag":384,"props":705,"children":706},{"style":652},[707],{"type":362,"value":708},"  const",{"type":357,"tag":384,"props":710,"children":712},{"style":711},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[713],{"type":362,"value":714}," max",{"type":357,"tag":384,"props":716,"children":717},{"style":664},[718],{"type":362,"value":667},{"type":357,"tag":384,"props":720,"children":721},{"style":711},[722],{"type":362,"value":723}," Math",{"type":357,"tag":384,"props":725,"children":727},{"style":726},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[728],{"type":362,"value":729},".",{"type":357,"tag":384,"props":731,"children":732},{"style":711},[733],{"type":362,"value":734},"max",{"type":357,"tag":384,"props":736,"children":737},{"style":726},[738],{"type":362,"value":729},{"type":357,"tag":384,"props":740,"children":741},{"style":658},[742],{"type":362,"value":743},"apply",{"type":357,"tag":384,"props":745,"children":746},{"style":675},[747],{"type":362,"value":748},"([]",{"type":357,"tag":384,"props":750,"children":751},{"style":687},[752],{"type":362,"value":690},{"type":357,"tag":384,"props":754,"children":755},{"style":711},[756],{"type":362,"value":757}," candies",{"type":357,"tag":384,"props":759,"children":760},{"style":675},[761],{"type":362,"value":762},")",{"type":357,"tag":384,"props":764,"children":765},{"style":687},[766],{"type":362,"value":767},";\n",{"type":357,"tag":384,"props":769,"children":770},{"class":386,"line":450},[771,776,781,785,790],{"type":357,"tag":384,"props":772,"children":773},{"style":652},[774],{"type":362,"value":775},"  let",{"type":357,"tag":384,"props":777,"children":778},{"style":711},[779],{"type":362,"value":780}," res",{"type":357,"tag":384,"props":782,"children":783},{"style":664},[784],{"type":362,"value":667},{"type":357,"tag":384,"props":786,"children":787},{"style":675},[788],{"type":362,"value":789}," []",{"type":357,"tag":384,"props":791,"children":792},{"style":687},[793],{"type":362,"value":767},{"type":357,"tag":384,"props":795,"children":797},{"class":386,"line":796},9,[798,804,808,813,818,822,828,833,837,842,846,850,855,859,863,868],{"type":357,"tag":384,"props":799,"children":801},{"style":800},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[802],{"type":362,"value":803},"  for",{"type":357,"tag":384,"props":805,"children":806},{"style":675},[807],{"type":362,"value":678},{"type":357,"tag":384,"props":809,"children":810},{"style":652},[811],{"type":362,"value":812},"let",{"type":357,"tag":384,"props":814,"children":815},{"style":711},[816],{"type":362,"value":817}," i",{"type":357,"tag":384,"props":819,"children":820},{"style":664},[821],{"type":362,"value":667},{"type":357,"tag":384,"props":823,"children":825},{"style":824},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[826],{"type":362,"value":827}," 0",{"type":357,"tag":384,"props":829,"children":830},{"style":687},[831],{"type":362,"value":832},";",{"type":357,"tag":384,"props":834,"children":835},{"style":711},[836],{"type":362,"value":817},{"type":357,"tag":384,"props":838,"children":839},{"style":664},[840],{"type":362,"value":841}," \u003C",{"type":357,"tag":384,"props":843,"children":844},{"style":711},[845],{"type":362,"value":757},{"type":357,"tag":384,"props":847,"children":848},{"style":726},[849],{"type":362,"value":729},{"type":357,"tag":384,"props":851,"children":852},{"style":675},[853],{"type":362,"value":854},"length",{"type":357,"tag":384,"props":856,"children":857},{"style":687},[858],{"type":362,"value":832},{"type":357,"tag":384,"props":860,"children":861},{"style":711},[862],{"type":362,"value":817},{"type":357,"tag":384,"props":864,"children":865},{"style":664},[866],{"type":362,"value":867},"++",{"type":357,"tag":384,"props":869,"children":870},{"style":675},[871],{"type":362,"value":700},{"type":357,"tag":384,"props":873,"children":875},{"class":386,"line":874},10,[876,881,886,890,894,899,904,909,914,918],{"type":357,"tag":384,"props":877,"children":878},{"style":652},[879],{"type":362,"value":880},"    let",{"type":357,"tag":384,"props":882,"children":883},{"style":711},[884],{"type":362,"value":885}," currentMax",{"type":357,"tag":384,"props":887,"children":888},{"style":664},[889],{"type":362,"value":667},{"type":357,"tag":384,"props":891,"children":892},{"style":711},[893],{"type":362,"value":757},{"type":357,"tag":384,"props":895,"children":896},{"style":675},[897],{"type":362,"value":898},"[",{"type":357,"tag":384,"props":900,"children":901},{"style":711},[902],{"type":362,"value":903},"i",{"type":357,"tag":384,"props":905,"children":906},{"style":675},[907],{"type":362,"value":908},"] ",{"type":357,"tag":384,"props":910,"children":911},{"style":664},[912],{"type":362,"value":913},"+",{"type":357,"tag":384,"props":915,"children":916},{"style":711},[917],{"type":362,"value":695},{"type":357,"tag":384,"props":919,"children":920},{"style":687},[921],{"type":362,"value":767},{"type":357,"tag":384,"props":923,"children":925},{"class":386,"line":924},11,[926,931,935,939,943,948,952,957,961],{"type":357,"tag":384,"props":927,"children":928},{"style":711},[929],{"type":362,"value":930},"    res",{"type":357,"tag":384,"props":932,"children":933},{"style":675},[934],{"type":362,"value":898},{"type":357,"tag":384,"props":936,"children":937},{"style":711},[938],{"type":362,"value":903},{"type":357,"tag":384,"props":940,"children":941},{"style":675},[942],{"type":362,"value":908},{"type":357,"tag":384,"props":944,"children":945},{"style":664},[946],{"type":362,"value":947},"=",{"type":357,"tag":384,"props":949,"children":950},{"style":711},[951],{"type":362,"value":885},{"type":357,"tag":384,"props":953,"children":954},{"style":664},[955],{"type":362,"value":956}," >=",{"type":357,"tag":384,"props":958,"children":959},{"style":711},[960],{"type":362,"value":714},{"type":357,"tag":384,"props":962,"children":963},{"style":687},[964],{"type":362,"value":767},{"type":357,"tag":384,"props":966,"children":968},{"class":386,"line":967},12,[969],{"type":357,"tag":384,"props":970,"children":971},{"style":675},[972],{"type":362,"value":973},"  }\n",{"type":357,"tag":384,"props":975,"children":977},{"class":386,"line":976},13,[978,983,987],{"type":357,"tag":384,"props":979,"children":980},{"style":800},[981],{"type":362,"value":982},"  return",{"type":357,"tag":384,"props":984,"children":985},{"style":711},[986],{"type":362,"value":780},{"type":357,"tag":384,"props":988,"children":989},{"style":687},[990],{"type":362,"value":767},{"type":357,"tag":384,"props":992,"children":994},{"class":386,"line":993},14,[995,1000],{"type":357,"tag":384,"props":996,"children":997},{"style":675},[998],{"type":362,"value":999},"}",{"type":357,"tag":384,"props":1001,"children":1002},{"style":687},[1003],{"type":362,"value":767},{"type":357,"tag":1005,"props":1006,"children":1007},"style",{},[1008],{"type":362,"value":1009},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":350,"searchDepth":423,"depth":423,"links":1011},[1012,1013],{"id":549,"depth":396,"text":549},{"id":554,"depth":396,"text":554},"markdown","content:2.code:1.algorithm:3.leetcode:1431.kids-with-the-greatest-number-of-candies.md","content","2.code/1.algorithm/3.leetcode/1431.kids-with-the-greatest-number-of-candies.md","md",[1020,1022],{"_path":259,"title":258,"description":1021},"给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。",{"_path":265,"title":264,"description":1023},"给你两个字符串 word1 和 word2 。请你从 word1 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。",1712580444001]