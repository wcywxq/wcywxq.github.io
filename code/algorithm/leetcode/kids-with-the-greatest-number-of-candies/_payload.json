[{"data":1,"prerenderedAt":1030},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies":353,"/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies-surround":1025},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319,341,344,347,350],{"title":320,"_path":321,"children":322},"Promise","/code/scene/promise",[323,326,329,332,335,338],{"title":324,"_path":325},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":327,"_path":328},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":330,"_path":331},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":333,"_path":334},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":336,"_path":337},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":339,"_path":340},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":342,"_path":343},"计算对象占用字节数","/code/scene/calcuate-object-bytes",{"title":345,"_path":346},"lodash.get","/code/scene/lodash-get",{"title":348,"_path":349},"sku 算法实现","/code/scene/sku",{"title":351,"_path":352},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":262,"_dir":354,"_draft":355,"_partial":355,"_locale":356,"title":261,"description":357,"url":358,"body":359,"_type":1020,"_id":1021,"_source":1022,"_file":1023,"_extension":1024},"leetcode",false,"","给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。","https://leetcode.cn/problems/kids-with-the-greatest-number-of-candies",{"type":360,"children":361,"toc":1016},"root",[362,369,374,379,463,468,499,504,527,532,552,558,563,1010],{"type":363,"tag":364,"props":365,"children":366},"element","p",{},[367],{"type":368,"value":357},"text",{"type":363,"tag":364,"props":370,"children":371},{},[372],{"type":368,"value":373},"对每一个孩子，检查是否存在一种方案，将额外的 extraCandies 个糖果分配给孩子们之后，此孩子有 最多 的糖果。注意，允许有多个孩子同时拥有 最多 的糖果数目。",{"type":363,"tag":364,"props":375,"children":376},{},[377],{"type":368,"value":378},"示例 1：",{"type":363,"tag":380,"props":381,"children":384},"pre",{"className":382,"code":383,"language":368,"meta":356,"style":356},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：candies = [2,3,5,1,3], extraCandies = 3\n输出：[true,true,true,false,true]\n解释：\n孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",[385],{"type":363,"tag":386,"props":387,"children":388},"code",{"__ignoreMap":356},[389,400,409,418,427,436,445,454],{"type":363,"tag":390,"props":391,"children":394},"span",{"class":392,"line":393},"line",1,[395],{"type":363,"tag":390,"props":396,"children":397},{},[398],{"type":368,"value":399},"输入：candies = [2,3,5,1,3], extraCandies = 3\n",{"type":363,"tag":390,"props":401,"children":403},{"class":392,"line":402},2,[404],{"type":363,"tag":390,"props":405,"children":406},{},[407],{"type":368,"value":408},"输出：[true,true,true,false,true]\n",{"type":363,"tag":390,"props":410,"children":412},{"class":392,"line":411},3,[413],{"type":363,"tag":390,"props":414,"children":415},{},[416],{"type":368,"value":417},"解释：\n",{"type":363,"tag":390,"props":419,"children":421},{"class":392,"line":420},4,[422],{"type":363,"tag":390,"props":423,"children":424},{},[425],{"type":368,"value":426},"孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n",{"type":363,"tag":390,"props":428,"children":430},{"class":392,"line":429},5,[431],{"type":363,"tag":390,"props":432,"children":433},{},[434],{"type":368,"value":435},"孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":363,"tag":390,"props":437,"children":439},{"class":392,"line":438},6,[440],{"type":363,"tag":390,"props":441,"children":442},{},[443],{"type":368,"value":444},"孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n",{"type":363,"tag":390,"props":446,"children":448},{"class":392,"line":447},7,[449],{"type":363,"tag":390,"props":450,"children":451},{},[452],{"type":368,"value":453},"孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n",{"type":363,"tag":390,"props":455,"children":457},{"class":392,"line":456},8,[458],{"type":363,"tag":390,"props":459,"children":460},{},[461],{"type":368,"value":462},"孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":363,"tag":364,"props":464,"children":465},{},[466],{"type":368,"value":467},"示例 2：",{"type":363,"tag":380,"props":469,"children":471},{"className":382,"code":470,"language":368,"meta":356,"style":356},"输入：candies = [4,2,1,1,2], extraCandies = 1\n输出：[true,false,false,false,false]\n解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",[472],{"type":363,"tag":386,"props":473,"children":474},{"__ignoreMap":356},[475,483,491],{"type":363,"tag":390,"props":476,"children":477},{"class":392,"line":393},[478],{"type":363,"tag":390,"props":479,"children":480},{},[481],{"type":368,"value":482},"输入：candies = [4,2,1,1,2], extraCandies = 1\n",{"type":363,"tag":390,"props":484,"children":485},{"class":392,"line":402},[486],{"type":363,"tag":390,"props":487,"children":488},{},[489],{"type":368,"value":490},"输出：[true,false,false,false,false]\n",{"type":363,"tag":390,"props":492,"children":493},{"class":392,"line":411},[494],{"type":363,"tag":390,"props":495,"children":496},{},[497],{"type":368,"value":498},"解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",{"type":363,"tag":364,"props":500,"children":501},{},[502],{"type":368,"value":503},"示例 3：",{"type":363,"tag":380,"props":505,"children":507},{"className":382,"code":506,"language":368,"meta":356,"style":356},"输入：candies = [12,1,12], extraCandies = 10\n输出：[true,false,true]\n",[508],{"type":363,"tag":386,"props":509,"children":510},{"__ignoreMap":356},[511,519],{"type":363,"tag":390,"props":512,"children":513},{"class":392,"line":393},[514],{"type":363,"tag":390,"props":515,"children":516},{},[517],{"type":368,"value":518},"输入：candies = [12,1,12], extraCandies = 10\n",{"type":363,"tag":390,"props":520,"children":521},{"class":392,"line":402},[522],{"type":363,"tag":390,"props":523,"children":524},{},[525],{"type":368,"value":526},"输出：[true,false,true]\n",{"type":363,"tag":364,"props":528,"children":529},{},[530],{"type":368,"value":531},"提示：",{"type":363,"tag":533,"props":534,"children":535},"ul",{},[536,542,547],{"type":363,"tag":537,"props":538,"children":539},"li",{},[540],{"type":368,"value":541},"2 \u003C= candies.length \u003C= 100",{"type":363,"tag":537,"props":543,"children":544},{},[545],{"type":368,"value":546},"1 \u003C= candies[i] \u003C= 100",{"type":363,"tag":537,"props":548,"children":549},{},[550],{"type":368,"value":551},"1 \u003C= extraCandies \u003C= 50",{"type":363,"tag":553,"props":554,"children":556},"h2",{"id":555},"解题思路",[557],{"type":368,"value":555},{"type":363,"tag":553,"props":559,"children":561},{"id":560},"实现",[562],{"type":368,"value":560},{"type":363,"tag":380,"props":564,"children":568},{"className":565,"code":566,"language":567,"meta":356,"style":356},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} candies\n * @param {number} extraCandies\n * @return {boolean[]}\n */\nvar kidsWithCandies = function (candies, extraCandies) {\n  const max = Math.max.apply([], candies);\n  let res = [];\n  for (let i = 0; i \u003C candies.length; i++) {\n    let currentMax = candies[i] + extraCandies;\n    res[i] = currentMax >= max;\n  }\n  return res;\n};\n","js",[569],{"type":363,"tag":386,"props":570,"children":571},{"__ignoreMap":356},[572,581,607,628,645,653,707,774,800,878,928,971,980,997],{"type":363,"tag":390,"props":573,"children":574},{"class":392,"line":393},[575],{"type":363,"tag":390,"props":576,"children":578},{"style":577},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[579],{"type":368,"value":580},"/**\n",{"type":363,"tag":390,"props":582,"children":583},{"class":392,"line":402},[584,589,595,601],{"type":363,"tag":390,"props":585,"children":586},{"style":577},[587],{"type":368,"value":588}," * ",{"type":363,"tag":390,"props":590,"children":592},{"style":591},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[593],{"type":368,"value":594},"@param",{"type":363,"tag":390,"props":596,"children":598},{"style":597},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[599],{"type":368,"value":600}," {number[]}",{"type":363,"tag":390,"props":602,"children":604},{"style":603},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[605],{"type":368,"value":606}," candies\n",{"type":363,"tag":390,"props":608,"children":609},{"class":392,"line":411},[610,614,618,623],{"type":363,"tag":390,"props":611,"children":612},{"style":577},[613],{"type":368,"value":588},{"type":363,"tag":390,"props":615,"children":616},{"style":591},[617],{"type":368,"value":594},{"type":363,"tag":390,"props":619,"children":620},{"style":597},[621],{"type":368,"value":622}," {number}",{"type":363,"tag":390,"props":624,"children":625},{"style":603},[626],{"type":368,"value":627}," extraCandies\n",{"type":363,"tag":390,"props":629,"children":630},{"class":392,"line":420},[631,635,640],{"type":363,"tag":390,"props":632,"children":633},{"style":577},[634],{"type":368,"value":588},{"type":363,"tag":390,"props":636,"children":637},{"style":591},[638],{"type":368,"value":639},"@return",{"type":363,"tag":390,"props":641,"children":642},{"style":597},[643],{"type":368,"value":644}," {boolean[]}\n",{"type":363,"tag":390,"props":646,"children":647},{"class":392,"line":429},[648],{"type":363,"tag":390,"props":649,"children":650},{"style":577},[651],{"type":368,"value":652}," */\n",{"type":363,"tag":390,"props":654,"children":655},{"class":392,"line":438},[656,662,668,674,679,685,691,697,702],{"type":363,"tag":390,"props":657,"children":659},{"style":658},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[660],{"type":368,"value":661},"var",{"type":363,"tag":390,"props":663,"children":665},{"style":664},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[666],{"type":368,"value":667}," kidsWithCandies",{"type":363,"tag":390,"props":669,"children":671},{"style":670},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[672],{"type":368,"value":673}," =",{"type":363,"tag":390,"props":675,"children":676},{"style":658},[677],{"type":368,"value":678}," function",{"type":363,"tag":390,"props":680,"children":682},{"style":681},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[683],{"type":368,"value":684}," (",{"type":363,"tag":390,"props":686,"children":688},{"style":687},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[689],{"type":368,"value":690},"candies",{"type":363,"tag":390,"props":692,"children":694},{"style":693},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[695],{"type":368,"value":696},",",{"type":363,"tag":390,"props":698,"children":699},{"style":687},[700],{"type":368,"value":701}," extraCandies",{"type":363,"tag":390,"props":703,"children":704},{"style":681},[705],{"type":368,"value":706},") {\n",{"type":363,"tag":390,"props":708,"children":709},{"class":392,"line":447},[710,715,721,725,730,736,741,745,750,755,759,764,769],{"type":363,"tag":390,"props":711,"children":712},{"style":658},[713],{"type":368,"value":714},"  const",{"type":363,"tag":390,"props":716,"children":718},{"style":717},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[719],{"type":368,"value":720}," max",{"type":363,"tag":390,"props":722,"children":723},{"style":670},[724],{"type":368,"value":673},{"type":363,"tag":390,"props":726,"children":727},{"style":717},[728],{"type":368,"value":729}," Math",{"type":363,"tag":390,"props":731,"children":733},{"style":732},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[734],{"type":368,"value":735},".",{"type":363,"tag":390,"props":737,"children":738},{"style":717},[739],{"type":368,"value":740},"max",{"type":363,"tag":390,"props":742,"children":743},{"style":732},[744],{"type":368,"value":735},{"type":363,"tag":390,"props":746,"children":747},{"style":664},[748],{"type":368,"value":749},"apply",{"type":363,"tag":390,"props":751,"children":752},{"style":681},[753],{"type":368,"value":754},"([]",{"type":363,"tag":390,"props":756,"children":757},{"style":693},[758],{"type":368,"value":696},{"type":363,"tag":390,"props":760,"children":761},{"style":717},[762],{"type":368,"value":763}," candies",{"type":363,"tag":390,"props":765,"children":766},{"style":681},[767],{"type":368,"value":768},")",{"type":363,"tag":390,"props":770,"children":771},{"style":693},[772],{"type":368,"value":773},";\n",{"type":363,"tag":390,"props":775,"children":776},{"class":392,"line":456},[777,782,787,791,796],{"type":363,"tag":390,"props":778,"children":779},{"style":658},[780],{"type":368,"value":781},"  let",{"type":363,"tag":390,"props":783,"children":784},{"style":717},[785],{"type":368,"value":786}," res",{"type":363,"tag":390,"props":788,"children":789},{"style":670},[790],{"type":368,"value":673},{"type":363,"tag":390,"props":792,"children":793},{"style":681},[794],{"type":368,"value":795}," []",{"type":363,"tag":390,"props":797,"children":798},{"style":693},[799],{"type":368,"value":773},{"type":363,"tag":390,"props":801,"children":803},{"class":392,"line":802},9,[804,810,814,819,824,828,834,839,843,848,852,856,861,865,869,874],{"type":363,"tag":390,"props":805,"children":807},{"style":806},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[808],{"type":368,"value":809},"  for",{"type":363,"tag":390,"props":811,"children":812},{"style":681},[813],{"type":368,"value":684},{"type":363,"tag":390,"props":815,"children":816},{"style":658},[817],{"type":368,"value":818},"let",{"type":363,"tag":390,"props":820,"children":821},{"style":717},[822],{"type":368,"value":823}," i",{"type":363,"tag":390,"props":825,"children":826},{"style":670},[827],{"type":368,"value":673},{"type":363,"tag":390,"props":829,"children":831},{"style":830},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[832],{"type":368,"value":833}," 0",{"type":363,"tag":390,"props":835,"children":836},{"style":693},[837],{"type":368,"value":838},";",{"type":363,"tag":390,"props":840,"children":841},{"style":717},[842],{"type":368,"value":823},{"type":363,"tag":390,"props":844,"children":845},{"style":670},[846],{"type":368,"value":847}," \u003C",{"type":363,"tag":390,"props":849,"children":850},{"style":717},[851],{"type":368,"value":763},{"type":363,"tag":390,"props":853,"children":854},{"style":732},[855],{"type":368,"value":735},{"type":363,"tag":390,"props":857,"children":858},{"style":681},[859],{"type":368,"value":860},"length",{"type":363,"tag":390,"props":862,"children":863},{"style":693},[864],{"type":368,"value":838},{"type":363,"tag":390,"props":866,"children":867},{"style":717},[868],{"type":368,"value":823},{"type":363,"tag":390,"props":870,"children":871},{"style":670},[872],{"type":368,"value":873},"++",{"type":363,"tag":390,"props":875,"children":876},{"style":681},[877],{"type":368,"value":706},{"type":363,"tag":390,"props":879,"children":881},{"class":392,"line":880},10,[882,887,892,896,900,905,910,915,920,924],{"type":363,"tag":390,"props":883,"children":884},{"style":658},[885],{"type":368,"value":886},"    let",{"type":363,"tag":390,"props":888,"children":889},{"style":717},[890],{"type":368,"value":891}," currentMax",{"type":363,"tag":390,"props":893,"children":894},{"style":670},[895],{"type":368,"value":673},{"type":363,"tag":390,"props":897,"children":898},{"style":717},[899],{"type":368,"value":763},{"type":363,"tag":390,"props":901,"children":902},{"style":681},[903],{"type":368,"value":904},"[",{"type":363,"tag":390,"props":906,"children":907},{"style":717},[908],{"type":368,"value":909},"i",{"type":363,"tag":390,"props":911,"children":912},{"style":681},[913],{"type":368,"value":914},"] ",{"type":363,"tag":390,"props":916,"children":917},{"style":670},[918],{"type":368,"value":919},"+",{"type":363,"tag":390,"props":921,"children":922},{"style":717},[923],{"type":368,"value":701},{"type":363,"tag":390,"props":925,"children":926},{"style":693},[927],{"type":368,"value":773},{"type":363,"tag":390,"props":929,"children":931},{"class":392,"line":930},11,[932,937,941,945,949,954,958,963,967],{"type":363,"tag":390,"props":933,"children":934},{"style":717},[935],{"type":368,"value":936},"    res",{"type":363,"tag":390,"props":938,"children":939},{"style":681},[940],{"type":368,"value":904},{"type":363,"tag":390,"props":942,"children":943},{"style":717},[944],{"type":368,"value":909},{"type":363,"tag":390,"props":946,"children":947},{"style":681},[948],{"type":368,"value":914},{"type":363,"tag":390,"props":950,"children":951},{"style":670},[952],{"type":368,"value":953},"=",{"type":363,"tag":390,"props":955,"children":956},{"style":717},[957],{"type":368,"value":891},{"type":363,"tag":390,"props":959,"children":960},{"style":670},[961],{"type":368,"value":962}," >=",{"type":363,"tag":390,"props":964,"children":965},{"style":717},[966],{"type":368,"value":720},{"type":363,"tag":390,"props":968,"children":969},{"style":693},[970],{"type":368,"value":773},{"type":363,"tag":390,"props":972,"children":974},{"class":392,"line":973},12,[975],{"type":363,"tag":390,"props":976,"children":977},{"style":681},[978],{"type":368,"value":979},"  }\n",{"type":363,"tag":390,"props":981,"children":983},{"class":392,"line":982},13,[984,989,993],{"type":363,"tag":390,"props":985,"children":986},{"style":806},[987],{"type":368,"value":988},"  return",{"type":363,"tag":390,"props":990,"children":991},{"style":717},[992],{"type":368,"value":786},{"type":363,"tag":390,"props":994,"children":995},{"style":693},[996],{"type":368,"value":773},{"type":363,"tag":390,"props":998,"children":1000},{"class":392,"line":999},14,[1001,1006],{"type":363,"tag":390,"props":1002,"children":1003},{"style":681},[1004],{"type":368,"value":1005},"}",{"type":363,"tag":390,"props":1007,"children":1008},{"style":693},[1009],{"type":368,"value":773},{"type":363,"tag":1011,"props":1012,"children":1013},"style",{},[1014],{"type":368,"value":1015},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":356,"searchDepth":429,"depth":429,"links":1017},[1018,1019],{"id":555,"depth":402,"text":555},{"id":560,"depth":402,"text":560},"markdown","content:2.code:1.algorithm:3.leetcode:1431.kids-with-the-greatest-number-of-candies.md","content","2.code/1.algorithm/3.leetcode/1431.kids-with-the-greatest-number-of-candies.md","md",[1026,1028],{"_path":259,"title":258,"description":1027},"给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。",{"_path":265,"title":264,"description":1029},"给你两个字符串 word1 和 word2 。请你从 word1 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。",1712589914535]