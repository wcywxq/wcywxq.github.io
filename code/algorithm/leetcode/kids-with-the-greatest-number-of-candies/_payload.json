[{"data":1,"prerenderedAt":1036},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies":359,"/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies-surround":1031},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,269,318],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263,266],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.165 比较版本号","/code/algorithm/leetcode/compare-version-numbers",{"title":198,"_path":199},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":201,"_path":202},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":204,"_path":205},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":207,"_path":208},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":210,"_path":211},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":213,"_path":214},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":216,"_path":217},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":219,"_path":220},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":222,"_path":223},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":225,"_path":226},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":228,"_path":229},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":231,"_path":232},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":234,"_path":235},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":237,"_path":238},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":240,"_path":241},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":243,"_path":244},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":246,"_path":247},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":249,"_path":250},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":252,"_path":253},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":255,"_path":256},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":258,"_path":259},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":261,"_path":262},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":264,"_path":265},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":267,"_path":268},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":270,"_path":271,"children":272},"源码实现","/code/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/code/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/code/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/code/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/code/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/code/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/code/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/code/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/code/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/code/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/code/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/code/source/string",[315],{"title":316,"_path":317},"repeat()","/code/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/code/scene",[322,344,347,350,353,356],{"title":323,"_path":324,"children":325},"Promise","/code/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/code/scene/calcuate-object-bytes",{"title":348,"_path":349},"lodash.get","/code/scene/lodash-get",{"title":351,"_path":352},"记忆化请求函数 - 可缓存请求函数","/code/scene/memorize-request",{"title":354,"_path":355},"sku 算法实现","/code/scene/sku",{"title":357,"_path":358},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":265,"_dir":360,"_draft":361,"_partial":361,"_locale":362,"title":264,"description":363,"url":364,"body":365,"_type":1026,"_id":1027,"_source":1028,"_file":1029,"_extension":1030},"leetcode",false,"","给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。","https://leetcode.cn/problems/kids-with-the-greatest-number-of-candies",{"type":366,"children":367,"toc":1022},"root",[368,375,380,385,469,474,505,510,533,538,558,564,569,1016],{"type":369,"tag":370,"props":371,"children":372},"element","p",{},[373],{"type":374,"value":363},"text",{"type":369,"tag":370,"props":376,"children":377},{},[378],{"type":374,"value":379},"对每一个孩子，检查是否存在一种方案，将额外的 extraCandies 个糖果分配给孩子们之后，此孩子有 最多 的糖果。注意，允许有多个孩子同时拥有 最多 的糖果数目。",{"type":369,"tag":370,"props":381,"children":382},{},[383],{"type":374,"value":384},"示例 1：",{"type":369,"tag":386,"props":387,"children":390},"pre",{"className":388,"code":389,"language":374,"meta":362,"style":362},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：candies = [2,3,5,1,3], extraCandies = 3\n输出：[true,true,true,false,true]\n解释：\n孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",[391],{"type":369,"tag":392,"props":393,"children":394},"code",{"__ignoreMap":362},[395,406,415,424,433,442,451,460],{"type":369,"tag":396,"props":397,"children":400},"span",{"class":398,"line":399},"line",1,[401],{"type":369,"tag":396,"props":402,"children":403},{},[404],{"type":374,"value":405},"输入：candies = [2,3,5,1,3], extraCandies = 3\n",{"type":369,"tag":396,"props":407,"children":409},{"class":398,"line":408},2,[410],{"type":369,"tag":396,"props":411,"children":412},{},[413],{"type":374,"value":414},"输出：[true,true,true,false,true]\n",{"type":369,"tag":396,"props":416,"children":418},{"class":398,"line":417},3,[419],{"type":369,"tag":396,"props":420,"children":421},{},[422],{"type":374,"value":423},"解释：\n",{"type":369,"tag":396,"props":425,"children":427},{"class":398,"line":426},4,[428],{"type":369,"tag":396,"props":429,"children":430},{},[431],{"type":374,"value":432},"孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n",{"type":369,"tag":396,"props":434,"children":436},{"class":398,"line":435},5,[437],{"type":369,"tag":396,"props":438,"children":439},{},[440],{"type":374,"value":441},"孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":369,"tag":396,"props":443,"children":445},{"class":398,"line":444},6,[446],{"type":369,"tag":396,"props":447,"children":448},{},[449],{"type":374,"value":450},"孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n",{"type":369,"tag":396,"props":452,"children":454},{"class":398,"line":453},7,[455],{"type":369,"tag":396,"props":456,"children":457},{},[458],{"type":374,"value":459},"孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n",{"type":369,"tag":396,"props":461,"children":463},{"class":398,"line":462},8,[464],{"type":369,"tag":396,"props":465,"children":466},{},[467],{"type":374,"value":468},"孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":369,"tag":370,"props":470,"children":471},{},[472],{"type":374,"value":473},"示例 2：",{"type":369,"tag":386,"props":475,"children":477},{"className":388,"code":476,"language":374,"meta":362,"style":362},"输入：candies = [4,2,1,1,2], extraCandies = 1\n输出：[true,false,false,false,false]\n解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",[478],{"type":369,"tag":392,"props":479,"children":480},{"__ignoreMap":362},[481,489,497],{"type":369,"tag":396,"props":482,"children":483},{"class":398,"line":399},[484],{"type":369,"tag":396,"props":485,"children":486},{},[487],{"type":374,"value":488},"输入：candies = [4,2,1,1,2], extraCandies = 1\n",{"type":369,"tag":396,"props":490,"children":491},{"class":398,"line":408},[492],{"type":369,"tag":396,"props":493,"children":494},{},[495],{"type":374,"value":496},"输出：[true,false,false,false,false]\n",{"type":369,"tag":396,"props":498,"children":499},{"class":398,"line":417},[500],{"type":369,"tag":396,"props":501,"children":502},{},[503],{"type":374,"value":504},"解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",{"type":369,"tag":370,"props":506,"children":507},{},[508],{"type":374,"value":509},"示例 3：",{"type":369,"tag":386,"props":511,"children":513},{"className":388,"code":512,"language":374,"meta":362,"style":362},"输入：candies = [12,1,12], extraCandies = 10\n输出：[true,false,true]\n",[514],{"type":369,"tag":392,"props":515,"children":516},{"__ignoreMap":362},[517,525],{"type":369,"tag":396,"props":518,"children":519},{"class":398,"line":399},[520],{"type":369,"tag":396,"props":521,"children":522},{},[523],{"type":374,"value":524},"输入：candies = [12,1,12], extraCandies = 10\n",{"type":369,"tag":396,"props":526,"children":527},{"class":398,"line":408},[528],{"type":369,"tag":396,"props":529,"children":530},{},[531],{"type":374,"value":532},"输出：[true,false,true]\n",{"type":369,"tag":370,"props":534,"children":535},{},[536],{"type":374,"value":537},"提示：",{"type":369,"tag":539,"props":540,"children":541},"ul",{},[542,548,553],{"type":369,"tag":543,"props":544,"children":545},"li",{},[546],{"type":374,"value":547},"2 \u003C= candies.length \u003C= 100",{"type":369,"tag":543,"props":549,"children":550},{},[551],{"type":374,"value":552},"1 \u003C= candies[i] \u003C= 100",{"type":369,"tag":543,"props":554,"children":555},{},[556],{"type":374,"value":557},"1 \u003C= extraCandies \u003C= 50",{"type":369,"tag":559,"props":560,"children":562},"h2",{"id":561},"解题思路",[563],{"type":374,"value":561},{"type":369,"tag":559,"props":565,"children":567},{"id":566},"实现",[568],{"type":374,"value":566},{"type":369,"tag":386,"props":570,"children":574},{"className":571,"code":572,"language":573,"meta":362,"style":362},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} candies\n * @param {number} extraCandies\n * @return {boolean[]}\n */\nvar kidsWithCandies = function (candies, extraCandies) {\n  const max = Math.max.apply([], candies);\n  let res = [];\n  for (let i = 0; i \u003C candies.length; i++) {\n    let currentMax = candies[i] + extraCandies;\n    res[i] = currentMax >= max;\n  }\n  return res;\n};\n","js",[575],{"type":369,"tag":392,"props":576,"children":577},{"__ignoreMap":362},[578,587,613,634,651,659,713,780,806,884,934,977,986,1003],{"type":369,"tag":396,"props":579,"children":580},{"class":398,"line":399},[581],{"type":369,"tag":396,"props":582,"children":584},{"style":583},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[585],{"type":374,"value":586},"/**\n",{"type":369,"tag":396,"props":588,"children":589},{"class":398,"line":408},[590,595,601,607],{"type":369,"tag":396,"props":591,"children":592},{"style":583},[593],{"type":374,"value":594}," * ",{"type":369,"tag":396,"props":596,"children":598},{"style":597},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[599],{"type":374,"value":600},"@param",{"type":369,"tag":396,"props":602,"children":604},{"style":603},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[605],{"type":374,"value":606}," {number[]}",{"type":369,"tag":396,"props":608,"children":610},{"style":609},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[611],{"type":374,"value":612}," candies\n",{"type":369,"tag":396,"props":614,"children":615},{"class":398,"line":417},[616,620,624,629],{"type":369,"tag":396,"props":617,"children":618},{"style":583},[619],{"type":374,"value":594},{"type":369,"tag":396,"props":621,"children":622},{"style":597},[623],{"type":374,"value":600},{"type":369,"tag":396,"props":625,"children":626},{"style":603},[627],{"type":374,"value":628}," {number}",{"type":369,"tag":396,"props":630,"children":631},{"style":609},[632],{"type":374,"value":633}," extraCandies\n",{"type":369,"tag":396,"props":635,"children":636},{"class":398,"line":426},[637,641,646],{"type":369,"tag":396,"props":638,"children":639},{"style":583},[640],{"type":374,"value":594},{"type":369,"tag":396,"props":642,"children":643},{"style":597},[644],{"type":374,"value":645},"@return",{"type":369,"tag":396,"props":647,"children":648},{"style":603},[649],{"type":374,"value":650}," {boolean[]}\n",{"type":369,"tag":396,"props":652,"children":653},{"class":398,"line":435},[654],{"type":369,"tag":396,"props":655,"children":656},{"style":583},[657],{"type":374,"value":658}," */\n",{"type":369,"tag":396,"props":660,"children":661},{"class":398,"line":444},[662,668,674,680,685,691,697,703,708],{"type":369,"tag":396,"props":663,"children":665},{"style":664},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[666],{"type":374,"value":667},"var",{"type":369,"tag":396,"props":669,"children":671},{"style":670},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[672],{"type":374,"value":673}," kidsWithCandies",{"type":369,"tag":396,"props":675,"children":677},{"style":676},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[678],{"type":374,"value":679}," =",{"type":369,"tag":396,"props":681,"children":682},{"style":664},[683],{"type":374,"value":684}," function",{"type":369,"tag":396,"props":686,"children":688},{"style":687},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[689],{"type":374,"value":690}," (",{"type":369,"tag":396,"props":692,"children":694},{"style":693},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[695],{"type":374,"value":696},"candies",{"type":369,"tag":396,"props":698,"children":700},{"style":699},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[701],{"type":374,"value":702},",",{"type":369,"tag":396,"props":704,"children":705},{"style":693},[706],{"type":374,"value":707}," extraCandies",{"type":369,"tag":396,"props":709,"children":710},{"style":687},[711],{"type":374,"value":712},") {\n",{"type":369,"tag":396,"props":714,"children":715},{"class":398,"line":453},[716,721,727,731,736,742,747,751,756,761,765,770,775],{"type":369,"tag":396,"props":717,"children":718},{"style":664},[719],{"type":374,"value":720},"  const",{"type":369,"tag":396,"props":722,"children":724},{"style":723},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[725],{"type":374,"value":726}," max",{"type":369,"tag":396,"props":728,"children":729},{"style":676},[730],{"type":374,"value":679},{"type":369,"tag":396,"props":732,"children":733},{"style":723},[734],{"type":374,"value":735}," Math",{"type":369,"tag":396,"props":737,"children":739},{"style":738},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[740],{"type":374,"value":741},".",{"type":369,"tag":396,"props":743,"children":744},{"style":723},[745],{"type":374,"value":746},"max",{"type":369,"tag":396,"props":748,"children":749},{"style":738},[750],{"type":374,"value":741},{"type":369,"tag":396,"props":752,"children":753},{"style":670},[754],{"type":374,"value":755},"apply",{"type":369,"tag":396,"props":757,"children":758},{"style":687},[759],{"type":374,"value":760},"([]",{"type":369,"tag":396,"props":762,"children":763},{"style":699},[764],{"type":374,"value":702},{"type":369,"tag":396,"props":766,"children":767},{"style":723},[768],{"type":374,"value":769}," candies",{"type":369,"tag":396,"props":771,"children":772},{"style":687},[773],{"type":374,"value":774},")",{"type":369,"tag":396,"props":776,"children":777},{"style":699},[778],{"type":374,"value":779},";\n",{"type":369,"tag":396,"props":781,"children":782},{"class":398,"line":462},[783,788,793,797,802],{"type":369,"tag":396,"props":784,"children":785},{"style":664},[786],{"type":374,"value":787},"  let",{"type":369,"tag":396,"props":789,"children":790},{"style":723},[791],{"type":374,"value":792}," res",{"type":369,"tag":396,"props":794,"children":795},{"style":676},[796],{"type":374,"value":679},{"type":369,"tag":396,"props":798,"children":799},{"style":687},[800],{"type":374,"value":801}," []",{"type":369,"tag":396,"props":803,"children":804},{"style":699},[805],{"type":374,"value":779},{"type":369,"tag":396,"props":807,"children":809},{"class":398,"line":808},9,[810,816,820,825,830,834,840,845,849,854,858,862,867,871,875,880],{"type":369,"tag":396,"props":811,"children":813},{"style":812},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[814],{"type":374,"value":815},"  for",{"type":369,"tag":396,"props":817,"children":818},{"style":687},[819],{"type":374,"value":690},{"type":369,"tag":396,"props":821,"children":822},{"style":664},[823],{"type":374,"value":824},"let",{"type":369,"tag":396,"props":826,"children":827},{"style":723},[828],{"type":374,"value":829}," i",{"type":369,"tag":396,"props":831,"children":832},{"style":676},[833],{"type":374,"value":679},{"type":369,"tag":396,"props":835,"children":837},{"style":836},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[838],{"type":374,"value":839}," 0",{"type":369,"tag":396,"props":841,"children":842},{"style":699},[843],{"type":374,"value":844},";",{"type":369,"tag":396,"props":846,"children":847},{"style":723},[848],{"type":374,"value":829},{"type":369,"tag":396,"props":850,"children":851},{"style":676},[852],{"type":374,"value":853}," \u003C",{"type":369,"tag":396,"props":855,"children":856},{"style":723},[857],{"type":374,"value":769},{"type":369,"tag":396,"props":859,"children":860},{"style":738},[861],{"type":374,"value":741},{"type":369,"tag":396,"props":863,"children":864},{"style":687},[865],{"type":374,"value":866},"length",{"type":369,"tag":396,"props":868,"children":869},{"style":699},[870],{"type":374,"value":844},{"type":369,"tag":396,"props":872,"children":873},{"style":723},[874],{"type":374,"value":829},{"type":369,"tag":396,"props":876,"children":877},{"style":676},[878],{"type":374,"value":879},"++",{"type":369,"tag":396,"props":881,"children":882},{"style":687},[883],{"type":374,"value":712},{"type":369,"tag":396,"props":885,"children":887},{"class":398,"line":886},10,[888,893,898,902,906,911,916,921,926,930],{"type":369,"tag":396,"props":889,"children":890},{"style":664},[891],{"type":374,"value":892},"    let",{"type":369,"tag":396,"props":894,"children":895},{"style":723},[896],{"type":374,"value":897}," currentMax",{"type":369,"tag":396,"props":899,"children":900},{"style":676},[901],{"type":374,"value":679},{"type":369,"tag":396,"props":903,"children":904},{"style":723},[905],{"type":374,"value":769},{"type":369,"tag":396,"props":907,"children":908},{"style":687},[909],{"type":374,"value":910},"[",{"type":369,"tag":396,"props":912,"children":913},{"style":723},[914],{"type":374,"value":915},"i",{"type":369,"tag":396,"props":917,"children":918},{"style":687},[919],{"type":374,"value":920},"] ",{"type":369,"tag":396,"props":922,"children":923},{"style":676},[924],{"type":374,"value":925},"+",{"type":369,"tag":396,"props":927,"children":928},{"style":723},[929],{"type":374,"value":707},{"type":369,"tag":396,"props":931,"children":932},{"style":699},[933],{"type":374,"value":779},{"type":369,"tag":396,"props":935,"children":937},{"class":398,"line":936},11,[938,943,947,951,955,960,964,969,973],{"type":369,"tag":396,"props":939,"children":940},{"style":723},[941],{"type":374,"value":942},"    res",{"type":369,"tag":396,"props":944,"children":945},{"style":687},[946],{"type":374,"value":910},{"type":369,"tag":396,"props":948,"children":949},{"style":723},[950],{"type":374,"value":915},{"type":369,"tag":396,"props":952,"children":953},{"style":687},[954],{"type":374,"value":920},{"type":369,"tag":396,"props":956,"children":957},{"style":676},[958],{"type":374,"value":959},"=",{"type":369,"tag":396,"props":961,"children":962},{"style":723},[963],{"type":374,"value":897},{"type":369,"tag":396,"props":965,"children":966},{"style":676},[967],{"type":374,"value":968}," >=",{"type":369,"tag":396,"props":970,"children":971},{"style":723},[972],{"type":374,"value":726},{"type":369,"tag":396,"props":974,"children":975},{"style":699},[976],{"type":374,"value":779},{"type":369,"tag":396,"props":978,"children":980},{"class":398,"line":979},12,[981],{"type":369,"tag":396,"props":982,"children":983},{"style":687},[984],{"type":374,"value":985},"  }\n",{"type":369,"tag":396,"props":987,"children":989},{"class":398,"line":988},13,[990,995,999],{"type":369,"tag":396,"props":991,"children":992},{"style":812},[993],{"type":374,"value":994},"  return",{"type":369,"tag":396,"props":996,"children":997},{"style":723},[998],{"type":374,"value":792},{"type":369,"tag":396,"props":1000,"children":1001},{"style":699},[1002],{"type":374,"value":779},{"type":369,"tag":396,"props":1004,"children":1006},{"class":398,"line":1005},14,[1007,1012],{"type":369,"tag":396,"props":1008,"children":1009},{"style":687},[1010],{"type":374,"value":1011},"}",{"type":369,"tag":396,"props":1013,"children":1014},{"style":699},[1015],{"type":374,"value":779},{"type":369,"tag":1017,"props":1018,"children":1019},"style",{},[1020],{"type":374,"value":1021},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":362,"searchDepth":435,"depth":435,"links":1023},[1024,1025],{"id":561,"depth":408,"text":561},{"id":566,"depth":408,"text":566},"markdown","content:2.code:1.algorithm:3.leetcode:1431.kids-with-the-greatest-number-of-candies.md","content","2.code/1.algorithm/3.leetcode/1431.kids-with-the-greatest-number-of-candies.md","md",[1032,1034],{"_path":262,"title":261,"description":1033},"给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。",{"_path":268,"title":267,"description":1035},"给你两个字符串 word1 和 word2 。请你从 word1 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。",1712748640946]