[{"data":1,"prerenderedAt":1085},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies":314,"/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies-surround":1080},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,258,307],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,47],{"title":41,"_path":42,"children":43},"剑指 offer","/code/algorithm/sword-ofter",[44],{"title":45,"_path":46},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":48,"_path":49,"children":50},"力扣 leetCode","/code/algorithm/leetcode",[51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255],{"title":52,"_path":53},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":55,"_path":56},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":58,"_path":59},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":61,"_path":62},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":64,"_path":65},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":67,"_path":68},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":70,"_path":71},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":73,"_path":74},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":76,"_path":77},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":79,"_path":80},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":82,"_path":83},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":85,"_path":86},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":88,"_path":89},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":91,"_path":92},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":94,"_path":95},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":97,"_path":98},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":100,"_path":101},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":103,"_path":104},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":106,"_path":107},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":109,"_path":110},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":112,"_path":113},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":115,"_path":116},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":118,"_path":119},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":121,"_path":122},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":124,"_path":125},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":127,"_path":128},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":130,"_path":131},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":133,"_path":134},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":136,"_path":137},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":139,"_path":140},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":142,"_path":143},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":145,"_path":146},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":148,"_path":149},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":151,"_path":152},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":154,"_path":155},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":157,"_path":158},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":160,"_path":161},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":163,"_path":164},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":166,"_path":167},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":169,"_path":170},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":172,"_path":173},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":175,"_path":176},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":178,"_path":179},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":181,"_path":182},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":184,"_path":185},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":187,"_path":188},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":190,"_path":191},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":193,"_path":194},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":196,"_path":197},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":199,"_path":200},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":202,"_path":203},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":205,"_path":206},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":208,"_path":209},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":211,"_path":212},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":214,"_path":215},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":217,"_path":218},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":220,"_path":221},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":223,"_path":224},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":226,"_path":227},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":229,"_path":230},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":232,"_path":233},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":235,"_path":236},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":238,"_path":239},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":241,"_path":242},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":244,"_path":245},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":247,"_path":248},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":250,"_path":251},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":253,"_path":254},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":256,"_path":257},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":259,"_path":260,"children":261},"源码实现","/code/source",[262,287,300],{"title":263,"_path":264,"children":265},"原生 api","/code/source/native-api",[266,269,272,275,278,281,284],{"title":267,"_path":268},"ajax","/code/source/native-api/ajax",{"title":270,"_path":271},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":273,"_path":274},"new 操作符","/code/source/native-api/new",{"title":276,"_path":277},"instanceof 关键字","/code/source/native-api/instanceof",{"title":279,"_path":280},"定时器","/code/source/native-api/timer",{"title":282,"_path":283},"JSON.stringify","/code/source/native-api/json-stringify",{"title":285,"_path":286},"Iterator 迭代器","/code/source/native-api/iterator",{"title":288,"_path":289,"children":290},"数组 Array","/code/source/array",[291,294,297],{"title":292,"_path":293},"数组去重","/code/source/array/remove-duplicate",{"title":295,"_path":296},"数组扁平化","/code/source/array/flat",{"title":298,"_path":299},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":301,"_path":302,"children":303},"字符串 String","/code/source/string",[304],{"title":305,"_path":306},"repeat()","/code/source/string/repeat",{"title":308,"_path":309,"children":310},"业务场景","/code/scene",[311],{"title":312,"_path":313},"顺序打印 url 并支持 retry","/code/scene/promise-url-retry",{"_path":254,"_dir":315,"_draft":316,"_partial":316,"_locale":317,"title":253,"description":318,"url":319,"body":320,"_type":1076,"_id":1077,"_source":1078,"_file":1079,"_extension":345},"leetcode",false,"","给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。","https://leetcode.cn/problems/kids-with-the-greatest-number-of-candies",{"type":321,"children":322,"toc":1072},"root",[323,330,335,340,462,467,527,532,584,589,609,615,620,1066],{"type":324,"tag":325,"props":326,"children":327},"element","p",{},[328],{"type":329,"value":318},"text",{"type":324,"tag":325,"props":331,"children":332},{},[333],{"type":329,"value":334},"对每一个孩子，检查是否存在一种方案，将额外的 extraCandies 个糖果分配给孩子们之后，此孩子有 最多 的糖果。注意，允许有多个孩子同时拥有 最多 的糖果数目。",{"type":324,"tag":325,"props":336,"children":337},{},[338],{"type":329,"value":339},"示例 1：",{"type":324,"tag":341,"props":342,"children":346},"pre",{"className":343,"code":344,"language":345,"meta":317,"style":317},"language-md shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：candies = [2,3,5,1,3], extraCandies = 3\n输出：[true,true,true,false,true]\n解释：\n孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n","md",[347],{"type":324,"tag":348,"props":349,"children":350},"code",{"__ignoreMap":317},[351,385,408,417,426,435,444,453],{"type":324,"tag":352,"props":353,"children":356},"span",{"class":354,"line":355},"line",1,[357,363,369,375,380],{"type":324,"tag":352,"props":358,"children":360},{"style":359},"--shiki-light:#110000;--shiki-default:#110000;--shiki-dark:#BFBDB6",[361],{"type":329,"value":362},"输入：candies = ",{"type":324,"tag":352,"props":364,"children":366},{"style":365},"--shiki-light:#87429A;--shiki-default:#87429A;--shiki-dark:#BFBDB6",[367],{"type":329,"value":368},"[",{"type":324,"tag":352,"props":370,"children":372},{"style":371},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#39BAE6",[373],{"type":329,"value":374},"2,3,5,1,3",{"type":324,"tag":352,"props":376,"children":377},{"style":365},[378],{"type":329,"value":379},"]",{"type":324,"tag":352,"props":381,"children":382},{"style":359},[383],{"type":329,"value":384},", extraCandies = 3\n",{"type":324,"tag":352,"props":386,"children":388},{"class":354,"line":387},2,[389,394,398,403],{"type":324,"tag":352,"props":390,"children":391},{"style":359},[392],{"type":329,"value":393},"输出：",{"type":324,"tag":352,"props":395,"children":396},{"style":365},[397],{"type":329,"value":368},{"type":324,"tag":352,"props":399,"children":400},{"style":371},[401],{"type":329,"value":402},"true,true,true,false,true",{"type":324,"tag":352,"props":404,"children":405},{"style":365},[406],{"type":329,"value":407},"]\n",{"type":324,"tag":352,"props":409,"children":411},{"class":354,"line":410},3,[412],{"type":324,"tag":352,"props":413,"children":414},{"style":359},[415],{"type":329,"value":416},"解释：\n",{"type":324,"tag":352,"props":418,"children":420},{"class":354,"line":419},4,[421],{"type":324,"tag":352,"props":422,"children":423},{"style":359},[424],{"type":329,"value":425},"孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n",{"type":324,"tag":352,"props":427,"children":429},{"class":354,"line":428},5,[430],{"type":324,"tag":352,"props":431,"children":432},{"style":359},[433],{"type":329,"value":434},"孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":324,"tag":352,"props":436,"children":438},{"class":354,"line":437},6,[439],{"type":324,"tag":352,"props":440,"children":441},{"style":359},[442],{"type":329,"value":443},"孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n",{"type":324,"tag":352,"props":445,"children":447},{"class":354,"line":446},7,[448],{"type":324,"tag":352,"props":449,"children":450},{"style":359},[451],{"type":329,"value":452},"孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n",{"type":324,"tag":352,"props":454,"children":456},{"class":354,"line":455},8,[457],{"type":324,"tag":352,"props":458,"children":459},{"style":359},[460],{"type":329,"value":461},"孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":324,"tag":325,"props":463,"children":464},{},[465],{"type":329,"value":466},"示例 2：",{"type":324,"tag":341,"props":468,"children":470},{"className":343,"code":469,"language":345,"meta":317,"style":317},"输入：candies = [4,2,1,1,2], extraCandies = 1\n输出：[true,false,false,false,false]\n解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",[471],{"type":324,"tag":348,"props":472,"children":473},{"__ignoreMap":317},[474,499,519],{"type":324,"tag":352,"props":475,"children":476},{"class":354,"line":355},[477,481,485,490,494],{"type":324,"tag":352,"props":478,"children":479},{"style":359},[480],{"type":329,"value":362},{"type":324,"tag":352,"props":482,"children":483},{"style":365},[484],{"type":329,"value":368},{"type":324,"tag":352,"props":486,"children":487},{"style":371},[488],{"type":329,"value":489},"4,2,1,1,2",{"type":324,"tag":352,"props":491,"children":492},{"style":365},[493],{"type":329,"value":379},{"type":324,"tag":352,"props":495,"children":496},{"style":359},[497],{"type":329,"value":498},", extraCandies = 1\n",{"type":324,"tag":352,"props":500,"children":501},{"class":354,"line":387},[502,506,510,515],{"type":324,"tag":352,"props":503,"children":504},{"style":359},[505],{"type":329,"value":393},{"type":324,"tag":352,"props":507,"children":508},{"style":365},[509],{"type":329,"value":368},{"type":324,"tag":352,"props":511,"children":512},{"style":371},[513],{"type":329,"value":514},"true,false,false,false,false",{"type":324,"tag":352,"props":516,"children":517},{"style":365},[518],{"type":329,"value":407},{"type":324,"tag":352,"props":520,"children":521},{"class":354,"line":410},[522],{"type":324,"tag":352,"props":523,"children":524},{"style":359},[525],{"type":329,"value":526},"解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",{"type":324,"tag":325,"props":528,"children":529},{},[530],{"type":329,"value":531},"示例 3：",{"type":324,"tag":341,"props":533,"children":535},{"className":343,"code":534,"language":345,"meta":317,"style":317},"输入：candies = [12,1,12], extraCandies = 10\n输出：[true,false,true]\n",[536],{"type":324,"tag":348,"props":537,"children":538},{"__ignoreMap":317},[539,564],{"type":324,"tag":352,"props":540,"children":541},{"class":354,"line":355},[542,546,550,555,559],{"type":324,"tag":352,"props":543,"children":544},{"style":359},[545],{"type":329,"value":362},{"type":324,"tag":352,"props":547,"children":548},{"style":365},[549],{"type":329,"value":368},{"type":324,"tag":352,"props":551,"children":552},{"style":371},[553],{"type":329,"value":554},"12,1,12",{"type":324,"tag":352,"props":556,"children":557},{"style":365},[558],{"type":329,"value":379},{"type":324,"tag":352,"props":560,"children":561},{"style":359},[562],{"type":329,"value":563},", extraCandies = 10\n",{"type":324,"tag":352,"props":565,"children":566},{"class":354,"line":387},[567,571,575,580],{"type":324,"tag":352,"props":568,"children":569},{"style":359},[570],{"type":329,"value":393},{"type":324,"tag":352,"props":572,"children":573},{"style":365},[574],{"type":329,"value":368},{"type":324,"tag":352,"props":576,"children":577},{"style":371},[578],{"type":329,"value":579},"true,false,true",{"type":324,"tag":352,"props":581,"children":582},{"style":365},[583],{"type":329,"value":407},{"type":324,"tag":325,"props":585,"children":586},{},[587],{"type":329,"value":588},"提示：",{"type":324,"tag":590,"props":591,"children":592},"ul",{},[593,599,604],{"type":324,"tag":594,"props":595,"children":596},"li",{},[597],{"type":329,"value":598},"2 \u003C= candies.length \u003C= 100",{"type":324,"tag":594,"props":600,"children":601},{},[602],{"type":329,"value":603},"1 \u003C= candies[i] \u003C= 100",{"type":324,"tag":594,"props":605,"children":606},{},[607],{"type":329,"value":608},"1 \u003C= extraCandies \u003C= 50",{"type":324,"tag":610,"props":611,"children":613},"h2",{"id":612},"解题思路",[614],{"type":329,"value":612},{"type":324,"tag":610,"props":616,"children":618},{"id":617},"实现",[619],{"type":329,"value":617},{"type":324,"tag":341,"props":621,"children":625},{"className":622,"code":623,"language":624,"meta":317,"style":317},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} candies\n * @param {number} extraCandies\n * @return {boolean[]}\n */\nvar kidsWithCandies = function (candies, extraCandies) {\n  const max = Math.max.apply([], candies);\n  let res = [];\n  for (let i = 0; i \u003C candies.length; i++) {\n    let currentMax = candies[i] + extraCandies;\n    res[i] = currentMax >= max;\n  }\n  return res;\n};\n","js",[626],{"type":324,"tag":348,"props":627,"children":628},{"__ignoreMap":317},[629,638,664,685,702,710,764,831,857,935,984,1027,1036,1053],{"type":324,"tag":352,"props":630,"children":631},{"class":354,"line":355},[632],{"type":324,"tag":352,"props":633,"children":635},{"style":634},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[636],{"type":329,"value":637},"/**\n",{"type":324,"tag":352,"props":639,"children":640},{"class":354,"line":387},[641,646,652,658],{"type":324,"tag":352,"props":642,"children":643},{"style":634},[644],{"type":329,"value":645}," * ",{"type":324,"tag":352,"props":647,"children":649},{"style":648},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[650],{"type":329,"value":651},"@param",{"type":324,"tag":352,"props":653,"children":655},{"style":654},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[656],{"type":329,"value":657}," {number[]}",{"type":324,"tag":352,"props":659,"children":661},{"style":660},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[662],{"type":329,"value":663}," candies\n",{"type":324,"tag":352,"props":665,"children":666},{"class":354,"line":410},[667,671,675,680],{"type":324,"tag":352,"props":668,"children":669},{"style":634},[670],{"type":329,"value":645},{"type":324,"tag":352,"props":672,"children":673},{"style":648},[674],{"type":329,"value":651},{"type":324,"tag":352,"props":676,"children":677},{"style":654},[678],{"type":329,"value":679}," {number}",{"type":324,"tag":352,"props":681,"children":682},{"style":660},[683],{"type":329,"value":684}," extraCandies\n",{"type":324,"tag":352,"props":686,"children":687},{"class":354,"line":419},[688,692,697],{"type":324,"tag":352,"props":689,"children":690},{"style":634},[691],{"type":329,"value":645},{"type":324,"tag":352,"props":693,"children":694},{"style":648},[695],{"type":329,"value":696},"@return",{"type":324,"tag":352,"props":698,"children":699},{"style":654},[700],{"type":329,"value":701}," {boolean[]}\n",{"type":324,"tag":352,"props":703,"children":704},{"class":354,"line":428},[705],{"type":324,"tag":352,"props":706,"children":707},{"style":634},[708],{"type":329,"value":709}," */\n",{"type":324,"tag":352,"props":711,"children":712},{"class":354,"line":437},[713,719,725,731,736,742,748,754,759],{"type":324,"tag":352,"props":714,"children":716},{"style":715},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[717],{"type":329,"value":718},"var",{"type":324,"tag":352,"props":720,"children":722},{"style":721},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[723],{"type":329,"value":724}," kidsWithCandies",{"type":324,"tag":352,"props":726,"children":728},{"style":727},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[729],{"type":329,"value":730}," =",{"type":324,"tag":352,"props":732,"children":733},{"style":715},[734],{"type":329,"value":735}," function",{"type":324,"tag":352,"props":737,"children":739},{"style":738},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[740],{"type":329,"value":741}," (",{"type":324,"tag":352,"props":743,"children":745},{"style":744},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[746],{"type":329,"value":747},"candies",{"type":324,"tag":352,"props":749,"children":751},{"style":750},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[752],{"type":329,"value":753},",",{"type":324,"tag":352,"props":755,"children":756},{"style":744},[757],{"type":329,"value":758}," extraCandies",{"type":324,"tag":352,"props":760,"children":761},{"style":738},[762],{"type":329,"value":763},") {\n",{"type":324,"tag":352,"props":765,"children":766},{"class":354,"line":446},[767,772,778,782,787,793,798,802,807,812,816,821,826],{"type":324,"tag":352,"props":768,"children":769},{"style":715},[770],{"type":329,"value":771},"  const",{"type":324,"tag":352,"props":773,"children":775},{"style":774},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[776],{"type":329,"value":777}," max",{"type":324,"tag":352,"props":779,"children":780},{"style":727},[781],{"type":329,"value":730},{"type":324,"tag":352,"props":783,"children":784},{"style":774},[785],{"type":329,"value":786}," Math",{"type":324,"tag":352,"props":788,"children":790},{"style":789},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[791],{"type":329,"value":792},".",{"type":324,"tag":352,"props":794,"children":795},{"style":774},[796],{"type":329,"value":797},"max",{"type":324,"tag":352,"props":799,"children":800},{"style":789},[801],{"type":329,"value":792},{"type":324,"tag":352,"props":803,"children":804},{"style":721},[805],{"type":329,"value":806},"apply",{"type":324,"tag":352,"props":808,"children":809},{"style":738},[810],{"type":329,"value":811},"([]",{"type":324,"tag":352,"props":813,"children":814},{"style":750},[815],{"type":329,"value":753},{"type":324,"tag":352,"props":817,"children":818},{"style":774},[819],{"type":329,"value":820}," candies",{"type":324,"tag":352,"props":822,"children":823},{"style":738},[824],{"type":329,"value":825},")",{"type":324,"tag":352,"props":827,"children":828},{"style":750},[829],{"type":329,"value":830},";\n",{"type":324,"tag":352,"props":832,"children":833},{"class":354,"line":455},[834,839,844,848,853],{"type":324,"tag":352,"props":835,"children":836},{"style":715},[837],{"type":329,"value":838},"  let",{"type":324,"tag":352,"props":840,"children":841},{"style":774},[842],{"type":329,"value":843}," res",{"type":324,"tag":352,"props":845,"children":846},{"style":727},[847],{"type":329,"value":730},{"type":324,"tag":352,"props":849,"children":850},{"style":738},[851],{"type":329,"value":852}," []",{"type":324,"tag":352,"props":854,"children":855},{"style":750},[856],{"type":329,"value":830},{"type":324,"tag":352,"props":858,"children":860},{"class":354,"line":859},9,[861,867,871,876,881,885,891,896,900,905,909,913,918,922,926,931],{"type":324,"tag":352,"props":862,"children":864},{"style":863},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[865],{"type":329,"value":866},"  for",{"type":324,"tag":352,"props":868,"children":869},{"style":738},[870],{"type":329,"value":741},{"type":324,"tag":352,"props":872,"children":873},{"style":715},[874],{"type":329,"value":875},"let",{"type":324,"tag":352,"props":877,"children":878},{"style":774},[879],{"type":329,"value":880}," i",{"type":324,"tag":352,"props":882,"children":883},{"style":727},[884],{"type":329,"value":730},{"type":324,"tag":352,"props":886,"children":888},{"style":887},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[889],{"type":329,"value":890}," 0",{"type":324,"tag":352,"props":892,"children":893},{"style":750},[894],{"type":329,"value":895},";",{"type":324,"tag":352,"props":897,"children":898},{"style":774},[899],{"type":329,"value":880},{"type":324,"tag":352,"props":901,"children":902},{"style":727},[903],{"type":329,"value":904}," \u003C",{"type":324,"tag":352,"props":906,"children":907},{"style":774},[908],{"type":329,"value":820},{"type":324,"tag":352,"props":910,"children":911},{"style":789},[912],{"type":329,"value":792},{"type":324,"tag":352,"props":914,"children":915},{"style":738},[916],{"type":329,"value":917},"length",{"type":324,"tag":352,"props":919,"children":920},{"style":750},[921],{"type":329,"value":895},{"type":324,"tag":352,"props":923,"children":924},{"style":774},[925],{"type":329,"value":880},{"type":324,"tag":352,"props":927,"children":928},{"style":727},[929],{"type":329,"value":930},"++",{"type":324,"tag":352,"props":932,"children":933},{"style":738},[934],{"type":329,"value":763},{"type":324,"tag":352,"props":936,"children":938},{"class":354,"line":937},10,[939,944,949,953,957,961,966,971,976,980],{"type":324,"tag":352,"props":940,"children":941},{"style":715},[942],{"type":329,"value":943},"    let",{"type":324,"tag":352,"props":945,"children":946},{"style":774},[947],{"type":329,"value":948}," currentMax",{"type":324,"tag":352,"props":950,"children":951},{"style":727},[952],{"type":329,"value":730},{"type":324,"tag":352,"props":954,"children":955},{"style":774},[956],{"type":329,"value":820},{"type":324,"tag":352,"props":958,"children":959},{"style":738},[960],{"type":329,"value":368},{"type":324,"tag":352,"props":962,"children":963},{"style":774},[964],{"type":329,"value":965},"i",{"type":324,"tag":352,"props":967,"children":968},{"style":738},[969],{"type":329,"value":970},"] ",{"type":324,"tag":352,"props":972,"children":973},{"style":727},[974],{"type":329,"value":975},"+",{"type":324,"tag":352,"props":977,"children":978},{"style":774},[979],{"type":329,"value":758},{"type":324,"tag":352,"props":981,"children":982},{"style":750},[983],{"type":329,"value":830},{"type":324,"tag":352,"props":985,"children":987},{"class":354,"line":986},11,[988,993,997,1001,1005,1010,1014,1019,1023],{"type":324,"tag":352,"props":989,"children":990},{"style":774},[991],{"type":329,"value":992},"    res",{"type":324,"tag":352,"props":994,"children":995},{"style":738},[996],{"type":329,"value":368},{"type":324,"tag":352,"props":998,"children":999},{"style":774},[1000],{"type":329,"value":965},{"type":324,"tag":352,"props":1002,"children":1003},{"style":738},[1004],{"type":329,"value":970},{"type":324,"tag":352,"props":1006,"children":1007},{"style":727},[1008],{"type":329,"value":1009},"=",{"type":324,"tag":352,"props":1011,"children":1012},{"style":774},[1013],{"type":329,"value":948},{"type":324,"tag":352,"props":1015,"children":1016},{"style":727},[1017],{"type":329,"value":1018}," >=",{"type":324,"tag":352,"props":1020,"children":1021},{"style":774},[1022],{"type":329,"value":777},{"type":324,"tag":352,"props":1024,"children":1025},{"style":750},[1026],{"type":329,"value":830},{"type":324,"tag":352,"props":1028,"children":1030},{"class":354,"line":1029},12,[1031],{"type":324,"tag":352,"props":1032,"children":1033},{"style":738},[1034],{"type":329,"value":1035},"  }\n",{"type":324,"tag":352,"props":1037,"children":1039},{"class":354,"line":1038},13,[1040,1045,1049],{"type":324,"tag":352,"props":1041,"children":1042},{"style":863},[1043],{"type":329,"value":1044},"  return",{"type":324,"tag":352,"props":1046,"children":1047},{"style":774},[1048],{"type":329,"value":843},{"type":324,"tag":352,"props":1050,"children":1051},{"style":750},[1052],{"type":329,"value":830},{"type":324,"tag":352,"props":1054,"children":1056},{"class":354,"line":1055},14,[1057,1062],{"type":324,"tag":352,"props":1058,"children":1059},{"style":738},[1060],{"type":329,"value":1061},"}",{"type":324,"tag":352,"props":1063,"children":1064},{"style":750},[1065],{"type":329,"value":830},{"type":324,"tag":1067,"props":1068,"children":1069},"style",{},[1070],{"type":329,"value":1071},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":317,"searchDepth":428,"depth":428,"links":1073},[1074,1075],{"id":612,"depth":387,"text":612},{"id":617,"depth":387,"text":617},"markdown","content:2.code:1.algorithm:2.leetcode:1431.kids-with-the-greatest-number-of-candies.md","content","2.code/1.algorithm/2.leetcode/1431.kids-with-the-greatest-number-of-candies.md",[1081,1083],{"_path":251,"title":250,"description":1082},"给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。",{"_path":257,"title":256,"description":1084},"给你两个字符串 word1 和 word2 。请你从 word1 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。",1712076274092]