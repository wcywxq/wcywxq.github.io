[{"data":1,"prerenderedAt":1266},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/path-sum":329,"/code/algorithm/leetcode/path-sum-surround":1261},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319],{"title":320,"_path":321,"children":322},"Promise","/code/scene/promise",[323,326],{"title":324,"_path":325},"顺序打印 url 并支持 retry","/code/scene/promise/order-print-url-and-retry",{"title":327,"_path":328},"promise 实现图片加载数量限制","/code/scene/promise/limit-image-load-count",{"_path":163,"_dir":330,"_draft":331,"_partial":331,"_locale":332,"title":162,"description":333,"url":334,"body":335,"_type":1256,"_id":1257,"_source":1258,"_file":1259,"_extension":1260},"leetcode",false,"","给你二叉树的根节点 root 和一个表示目标和的整数 targetSum 。判断该树中是否存在 根节点到叶子节点 的路径，这条路径上所有节点值相加等于目标和 targetSum 。如果存在，返回 true ；否则，返回 false 。","https://leetcode.cn/problems/path-sum",{"type":336,"children":337,"toc":1250},"root",[338,345,350,355,364,403,408,416,474,479,509,514,534,540,545,552,1244],{"type":339,"tag":340,"props":341,"children":342},"element","p",{},[343],{"type":344,"value":333},"text",{"type":339,"tag":340,"props":346,"children":347},{},[348],{"type":344,"value":349},"叶子节点 是指没有子节点的节点。",{"type":339,"tag":340,"props":351,"children":352},{},[353],{"type":344,"value":354},"示例 1：",{"type":339,"tag":340,"props":356,"children":357},{},[358],{"type":339,"tag":359,"props":360,"children":363},"img",{"alt":361,"src":362},"pathsum1","/img/code_leetcode_No.112_pathsum1.png",[],{"type":339,"tag":365,"props":366,"children":369},"pre",{"className":367,"code":368,"language":344,"meta":332,"style":332},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n输出：true\n解释：等于目标和的根节点到叶节点路径如上图所示。\n",[370],{"type":339,"tag":371,"props":372,"children":373},"code",{"__ignoreMap":332},[374,385,394],{"type":339,"tag":375,"props":376,"children":379},"span",{"class":377,"line":378},"line",1,[380],{"type":339,"tag":375,"props":381,"children":382},{},[383],{"type":344,"value":384},"输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n",{"type":339,"tag":375,"props":386,"children":388},{"class":377,"line":387},2,[389],{"type":339,"tag":375,"props":390,"children":391},{},[392],{"type":344,"value":393},"输出：true\n",{"type":339,"tag":375,"props":395,"children":397},{"class":377,"line":396},3,[398],{"type":339,"tag":375,"props":399,"children":400},{},[401],{"type":344,"value":402},"解释：等于目标和的根节点到叶节点路径如上图所示。\n",{"type":339,"tag":340,"props":404,"children":405},{},[406],{"type":344,"value":407},"示例 2：",{"type":339,"tag":340,"props":409,"children":410},{},[411],{"type":339,"tag":359,"props":412,"children":415},{"alt":413,"src":414},"pathsum2","/img/code_leetcode_No.112_pathsum2.png",[],{"type":339,"tag":365,"props":417,"children":419},{"className":367,"code":418,"language":344,"meta":332,"style":332},"输入：root = [1,2,3], targetSum = 5\n输出：false\n解释：树中存在两条根节点到叶子节点的路径：\n(1 --> 2): 和为 3\n(1 --> 3): 和为 4\n不存在 sum = 5 的根节点到叶子节点的路径。\n",[420],{"type":339,"tag":371,"props":421,"children":422},{"__ignoreMap":332},[423,431,439,447,456,465],{"type":339,"tag":375,"props":424,"children":425},{"class":377,"line":378},[426],{"type":339,"tag":375,"props":427,"children":428},{},[429],{"type":344,"value":430},"输入：root = [1,2,3], targetSum = 5\n",{"type":339,"tag":375,"props":432,"children":433},{"class":377,"line":387},[434],{"type":339,"tag":375,"props":435,"children":436},{},[437],{"type":344,"value":438},"输出：false\n",{"type":339,"tag":375,"props":440,"children":441},{"class":377,"line":396},[442],{"type":339,"tag":375,"props":443,"children":444},{},[445],{"type":344,"value":446},"解释：树中存在两条根节点到叶子节点的路径：\n",{"type":339,"tag":375,"props":448,"children":450},{"class":377,"line":449},4,[451],{"type":339,"tag":375,"props":452,"children":453},{},[454],{"type":344,"value":455},"(1 --> 2): 和为 3\n",{"type":339,"tag":375,"props":457,"children":459},{"class":377,"line":458},5,[460],{"type":339,"tag":375,"props":461,"children":462},{},[463],{"type":344,"value":464},"(1 --> 3): 和为 4\n",{"type":339,"tag":375,"props":466,"children":468},{"class":377,"line":467},6,[469],{"type":339,"tag":375,"props":470,"children":471},{},[472],{"type":344,"value":473},"不存在 sum = 5 的根节点到叶子节点的路径。\n",{"type":339,"tag":340,"props":475,"children":476},{},[477],{"type":344,"value":478},"示例 3：",{"type":339,"tag":365,"props":480,"children":482},{"className":367,"code":481,"language":344,"meta":332,"style":332},"输入：root = [], targetSum = 0\n输出：false\n解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",[483],{"type":339,"tag":371,"props":484,"children":485},{"__ignoreMap":332},[486,494,501],{"type":339,"tag":375,"props":487,"children":488},{"class":377,"line":378},[489],{"type":339,"tag":375,"props":490,"children":491},{},[492],{"type":344,"value":493},"输入：root = [], targetSum = 0\n",{"type":339,"tag":375,"props":495,"children":496},{"class":377,"line":387},[497],{"type":339,"tag":375,"props":498,"children":499},{},[500],{"type":344,"value":438},{"type":339,"tag":375,"props":502,"children":503},{"class":377,"line":396},[504],{"type":339,"tag":375,"props":505,"children":506},{},[507],{"type":344,"value":508},"解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",{"type":339,"tag":340,"props":510,"children":511},{},[512],{"type":344,"value":513},"提示：",{"type":339,"tag":515,"props":516,"children":517},"ul",{},[518,524,529],{"type":339,"tag":519,"props":520,"children":521},"li",{},[522],{"type":344,"value":523},"树中节点的数目在范围 [0, 5000] 内",{"type":339,"tag":519,"props":525,"children":526},{},[527],{"type":344,"value":528},"-1000 \u003C= Node.val \u003C= 1000",{"type":339,"tag":519,"props":530,"children":531},{},[532],{"type":344,"value":533},"-1000 \u003C= targetSum \u003C= 1000",{"type":339,"tag":535,"props":536,"children":538},"h2",{"id":537},"解题思路",[539],{"type":344,"value":537},{"type":339,"tag":535,"props":541,"children":543},{"id":542},"实现",[544],{"type":344,"value":542},{"type":339,"tag":546,"props":547,"children":549},"h3",{"id":548},"深度优先搜索-dfs",[550],{"type":344,"value":551},"深度优先搜索 - dfs",{"type":339,"tag":365,"props":553,"children":557},{"className":554,"code":555,"language":556,"meta":332,"style":332},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {boolean}\n */\nvar hasPathSum = function (root, targetSum) {\n  if (root === null) return false;\n  if (root.left === null && root.right === null) return root.val === targetSum;\n  return (\n    hasPathSum(root.left, targetSum - root.val) ||\n    hasPathSum(root.right, targetSum - root.val)\n  );\n};\n","js",[558],{"type":339,"tag":371,"props":559,"children":560},{"__ignoreMap":332},[561,570,578,586,638,704,757,810,819,829,837,864,886,904,912,957,1002,1092,1106,1165,1218,1231],{"type":339,"tag":375,"props":562,"children":563},{"class":377,"line":378},[564],{"type":339,"tag":375,"props":565,"children":567},{"style":566},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[568],{"type":344,"value":569},"/**\n",{"type":339,"tag":375,"props":571,"children":572},{"class":377,"line":387},[573],{"type":339,"tag":375,"props":574,"children":575},{"style":566},[576],{"type":344,"value":577}," * Definition for a binary tree node.\n",{"type":339,"tag":375,"props":579,"children":580},{"class":377,"line":396},[581],{"type":339,"tag":375,"props":582,"children":583},{"style":566},[584],{"type":344,"value":585}," */\n",{"type":339,"tag":375,"props":587,"children":588},{"class":377,"line":449},[589,595,601,607,613,619,624,628,633],{"type":339,"tag":375,"props":590,"children":592},{"style":591},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[593],{"type":344,"value":594},"function",{"type":339,"tag":375,"props":596,"children":598},{"style":597},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[599],{"type":344,"value":600}," TreeNode",{"type":339,"tag":375,"props":602,"children":604},{"style":603},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[605],{"type":344,"value":606},"(",{"type":339,"tag":375,"props":608,"children":610},{"style":609},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[611],{"type":344,"value":612},"val",{"type":339,"tag":375,"props":614,"children":616},{"style":615},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[617],{"type":344,"value":618},",",{"type":339,"tag":375,"props":620,"children":621},{"style":609},[622],{"type":344,"value":623}," left",{"type":339,"tag":375,"props":625,"children":626},{"style":615},[627],{"type":344,"value":618},{"type":339,"tag":375,"props":629,"children":630},{"style":609},[631],{"type":344,"value":632}," right",{"type":339,"tag":375,"props":634,"children":635},{"style":603},[636],{"type":344,"value":637},") {\n",{"type":339,"tag":375,"props":639,"children":640},{"class":377,"line":458},[641,647,653,658,664,669,674,680,685,690,695,699],{"type":339,"tag":375,"props":642,"children":644},{"style":643},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[645],{"type":344,"value":646},"  this",{"type":339,"tag":375,"props":648,"children":650},{"style":649},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[651],{"type":344,"value":652},".",{"type":339,"tag":375,"props":654,"children":656},{"style":655},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[657],{"type":344,"value":612},{"type":339,"tag":375,"props":659,"children":661},{"style":660},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[662],{"type":344,"value":663}," =",{"type":339,"tag":375,"props":665,"children":666},{"style":655},[667],{"type":344,"value":668}," val",{"type":339,"tag":375,"props":670,"children":671},{"style":660},[672],{"type":344,"value":673}," ===",{"type":339,"tag":375,"props":675,"children":677},{"style":676},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[678],{"type":344,"value":679}," undefined",{"type":339,"tag":375,"props":681,"children":682},{"style":660},[683],{"type":344,"value":684}," ?",{"type":339,"tag":375,"props":686,"children":687},{"style":676},[688],{"type":344,"value":689}," 0",{"type":339,"tag":375,"props":691,"children":692},{"style":660},[693],{"type":344,"value":694}," :",{"type":339,"tag":375,"props":696,"children":697},{"style":655},[698],{"type":344,"value":668},{"type":339,"tag":375,"props":700,"children":701},{"style":615},[702],{"type":344,"value":703},";\n",{"type":339,"tag":375,"props":705,"children":706},{"class":377,"line":467},[707,711,715,720,724,728,732,736,740,745,749,753],{"type":339,"tag":375,"props":708,"children":709},{"style":643},[710],{"type":344,"value":646},{"type":339,"tag":375,"props":712,"children":713},{"style":649},[714],{"type":344,"value":652},{"type":339,"tag":375,"props":716,"children":717},{"style":655},[718],{"type":344,"value":719},"left",{"type":339,"tag":375,"props":721,"children":722},{"style":660},[723],{"type":344,"value":663},{"type":339,"tag":375,"props":725,"children":726},{"style":655},[727],{"type":344,"value":623},{"type":339,"tag":375,"props":729,"children":730},{"style":660},[731],{"type":344,"value":673},{"type":339,"tag":375,"props":733,"children":734},{"style":676},[735],{"type":344,"value":679},{"type":339,"tag":375,"props":737,"children":738},{"style":660},[739],{"type":344,"value":684},{"type":339,"tag":375,"props":741,"children":742},{"style":676},[743],{"type":344,"value":744}," null",{"type":339,"tag":375,"props":746,"children":747},{"style":660},[748],{"type":344,"value":694},{"type":339,"tag":375,"props":750,"children":751},{"style":655},[752],{"type":344,"value":623},{"type":339,"tag":375,"props":754,"children":755},{"style":615},[756],{"type":344,"value":703},{"type":339,"tag":375,"props":758,"children":760},{"class":377,"line":759},7,[761,765,769,774,778,782,786,790,794,798,802,806],{"type":339,"tag":375,"props":762,"children":763},{"style":643},[764],{"type":344,"value":646},{"type":339,"tag":375,"props":766,"children":767},{"style":649},[768],{"type":344,"value":652},{"type":339,"tag":375,"props":770,"children":771},{"style":655},[772],{"type":344,"value":773},"right",{"type":339,"tag":375,"props":775,"children":776},{"style":660},[777],{"type":344,"value":663},{"type":339,"tag":375,"props":779,"children":780},{"style":655},[781],{"type":344,"value":632},{"type":339,"tag":375,"props":783,"children":784},{"style":660},[785],{"type":344,"value":673},{"type":339,"tag":375,"props":787,"children":788},{"style":676},[789],{"type":344,"value":679},{"type":339,"tag":375,"props":791,"children":792},{"style":660},[793],{"type":344,"value":684},{"type":339,"tag":375,"props":795,"children":796},{"style":676},[797],{"type":344,"value":744},{"type":339,"tag":375,"props":799,"children":800},{"style":660},[801],{"type":344,"value":694},{"type":339,"tag":375,"props":803,"children":804},{"style":655},[805],{"type":344,"value":632},{"type":339,"tag":375,"props":807,"children":808},{"style":615},[809],{"type":344,"value":703},{"type":339,"tag":375,"props":811,"children":813},{"class":377,"line":812},8,[814],{"type":339,"tag":375,"props":815,"children":816},{"style":603},[817],{"type":344,"value":818},"}\n",{"type":339,"tag":375,"props":820,"children":822},{"class":377,"line":821},9,[823],{"type":339,"tag":375,"props":824,"children":826},{"emptyLinePlaceholder":825},true,[827],{"type":344,"value":828},"\n",{"type":339,"tag":375,"props":830,"children":832},{"class":377,"line":831},10,[833],{"type":339,"tag":375,"props":834,"children":835},{"style":566},[836],{"type":344,"value":569},{"type":339,"tag":375,"props":838,"children":840},{"class":377,"line":839},11,[841,846,852,858],{"type":339,"tag":375,"props":842,"children":843},{"style":566},[844],{"type":344,"value":845}," * ",{"type":339,"tag":375,"props":847,"children":849},{"style":848},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[850],{"type":344,"value":851},"@param",{"type":339,"tag":375,"props":853,"children":855},{"style":854},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[856],{"type":344,"value":857}," {TreeNode}",{"type":339,"tag":375,"props":859,"children":861},{"style":860},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[862],{"type":344,"value":863}," root\n",{"type":339,"tag":375,"props":865,"children":867},{"class":377,"line":866},12,[868,872,876,881],{"type":339,"tag":375,"props":869,"children":870},{"style":566},[871],{"type":344,"value":845},{"type":339,"tag":375,"props":873,"children":874},{"style":848},[875],{"type":344,"value":851},{"type":339,"tag":375,"props":877,"children":878},{"style":854},[879],{"type":344,"value":880}," {number}",{"type":339,"tag":375,"props":882,"children":883},{"style":860},[884],{"type":344,"value":885}," targetSum\n",{"type":339,"tag":375,"props":887,"children":889},{"class":377,"line":888},13,[890,894,899],{"type":339,"tag":375,"props":891,"children":892},{"style":566},[893],{"type":344,"value":845},{"type":339,"tag":375,"props":895,"children":896},{"style":848},[897],{"type":344,"value":898},"@return",{"type":339,"tag":375,"props":900,"children":901},{"style":854},[902],{"type":344,"value":903}," {boolean}\n",{"type":339,"tag":375,"props":905,"children":907},{"class":377,"line":906},14,[908],{"type":339,"tag":375,"props":909,"children":910},{"style":566},[911],{"type":344,"value":585},{"type":339,"tag":375,"props":913,"children":915},{"class":377,"line":914},15,[916,921,926,930,935,940,944,948,953],{"type":339,"tag":375,"props":917,"children":918},{"style":591},[919],{"type":344,"value":920},"var",{"type":339,"tag":375,"props":922,"children":923},{"style":597},[924],{"type":344,"value":925}," hasPathSum",{"type":339,"tag":375,"props":927,"children":928},{"style":660},[929],{"type":344,"value":663},{"type":339,"tag":375,"props":931,"children":932},{"style":591},[933],{"type":344,"value":934}," function",{"type":339,"tag":375,"props":936,"children":937},{"style":603},[938],{"type":344,"value":939}," (",{"type":339,"tag":375,"props":941,"children":942},{"style":609},[943],{"type":344,"value":336},{"type":339,"tag":375,"props":945,"children":946},{"style":615},[947],{"type":344,"value":618},{"type":339,"tag":375,"props":949,"children":950},{"style":609},[951],{"type":344,"value":952}," targetSum",{"type":339,"tag":375,"props":954,"children":955},{"style":603},[956],{"type":344,"value":637},{"type":339,"tag":375,"props":958,"children":960},{"class":377,"line":959},16,[961,967,971,975,979,983,988,993,998],{"type":339,"tag":375,"props":962,"children":964},{"style":963},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[965],{"type":344,"value":966},"  if",{"type":339,"tag":375,"props":968,"children":969},{"style":603},[970],{"type":344,"value":939},{"type":339,"tag":375,"props":972,"children":973},{"style":655},[974],{"type":344,"value":336},{"type":339,"tag":375,"props":976,"children":977},{"style":660},[978],{"type":344,"value":673},{"type":339,"tag":375,"props":980,"children":981},{"style":676},[982],{"type":344,"value":744},{"type":339,"tag":375,"props":984,"children":985},{"style":603},[986],{"type":344,"value":987},") ",{"type":339,"tag":375,"props":989,"children":990},{"style":963},[991],{"type":344,"value":992},"return",{"type":339,"tag":375,"props":994,"children":995},{"style":676},[996],{"type":344,"value":997}," false",{"type":339,"tag":375,"props":999,"children":1000},{"style":615},[1001],{"type":344,"value":703},{"type":339,"tag":375,"props":1003,"children":1005},{"class":377,"line":1004},17,[1006,1010,1014,1018,1022,1026,1030,1034,1039,1044,1048,1052,1056,1060,1064,1068,1072,1076,1080,1084,1088],{"type":339,"tag":375,"props":1007,"children":1008},{"style":963},[1009],{"type":344,"value":966},{"type":339,"tag":375,"props":1011,"children":1012},{"style":603},[1013],{"type":344,"value":939},{"type":339,"tag":375,"props":1015,"children":1016},{"style":655},[1017],{"type":344,"value":336},{"type":339,"tag":375,"props":1019,"children":1020},{"style":649},[1021],{"type":344,"value":652},{"type":339,"tag":375,"props":1023,"children":1024},{"style":655},[1025],{"type":344,"value":719},{"type":339,"tag":375,"props":1027,"children":1028},{"style":660},[1029],{"type":344,"value":673},{"type":339,"tag":375,"props":1031,"children":1032},{"style":676},[1033],{"type":344,"value":744},{"type":339,"tag":375,"props":1035,"children":1036},{"style":660},[1037],{"type":344,"value":1038}," &&",{"type":339,"tag":375,"props":1040,"children":1041},{"style":655},[1042],{"type":344,"value":1043}," root",{"type":339,"tag":375,"props":1045,"children":1046},{"style":649},[1047],{"type":344,"value":652},{"type":339,"tag":375,"props":1049,"children":1050},{"style":655},[1051],{"type":344,"value":773},{"type":339,"tag":375,"props":1053,"children":1054},{"style":660},[1055],{"type":344,"value":673},{"type":339,"tag":375,"props":1057,"children":1058},{"style":676},[1059],{"type":344,"value":744},{"type":339,"tag":375,"props":1061,"children":1062},{"style":603},[1063],{"type":344,"value":987},{"type":339,"tag":375,"props":1065,"children":1066},{"style":963},[1067],{"type":344,"value":992},{"type":339,"tag":375,"props":1069,"children":1070},{"style":655},[1071],{"type":344,"value":1043},{"type":339,"tag":375,"props":1073,"children":1074},{"style":649},[1075],{"type":344,"value":652},{"type":339,"tag":375,"props":1077,"children":1078},{"style":655},[1079],{"type":344,"value":612},{"type":339,"tag":375,"props":1081,"children":1082},{"style":660},[1083],{"type":344,"value":673},{"type":339,"tag":375,"props":1085,"children":1086},{"style":655},[1087],{"type":344,"value":952},{"type":339,"tag":375,"props":1089,"children":1090},{"style":615},[1091],{"type":344,"value":703},{"type":339,"tag":375,"props":1093,"children":1095},{"class":377,"line":1094},18,[1096,1101],{"type":339,"tag":375,"props":1097,"children":1098},{"style":963},[1099],{"type":344,"value":1100},"  return",{"type":339,"tag":375,"props":1102,"children":1103},{"style":603},[1104],{"type":344,"value":1105}," (\n",{"type":339,"tag":375,"props":1107,"children":1109},{"class":377,"line":1108},19,[1110,1115,1119,1123,1127,1131,1135,1139,1144,1148,1152,1156,1160],{"type":339,"tag":375,"props":1111,"children":1112},{"style":597},[1113],{"type":344,"value":1114},"    hasPathSum",{"type":339,"tag":375,"props":1116,"children":1117},{"style":603},[1118],{"type":344,"value":606},{"type":339,"tag":375,"props":1120,"children":1121},{"style":655},[1122],{"type":344,"value":336},{"type":339,"tag":375,"props":1124,"children":1125},{"style":649},[1126],{"type":344,"value":652},{"type":339,"tag":375,"props":1128,"children":1129},{"style":655},[1130],{"type":344,"value":719},{"type":339,"tag":375,"props":1132,"children":1133},{"style":615},[1134],{"type":344,"value":618},{"type":339,"tag":375,"props":1136,"children":1137},{"style":655},[1138],{"type":344,"value":952},{"type":339,"tag":375,"props":1140,"children":1141},{"style":660},[1142],{"type":344,"value":1143}," -",{"type":339,"tag":375,"props":1145,"children":1146},{"style":655},[1147],{"type":344,"value":1043},{"type":339,"tag":375,"props":1149,"children":1150},{"style":649},[1151],{"type":344,"value":652},{"type":339,"tag":375,"props":1153,"children":1154},{"style":655},[1155],{"type":344,"value":612},{"type":339,"tag":375,"props":1157,"children":1158},{"style":603},[1159],{"type":344,"value":987},{"type":339,"tag":375,"props":1161,"children":1162},{"style":660},[1163],{"type":344,"value":1164},"||\n",{"type":339,"tag":375,"props":1166,"children":1168},{"class":377,"line":1167},20,[1169,1173,1177,1181,1185,1189,1193,1197,1201,1205,1209,1213],{"type":339,"tag":375,"props":1170,"children":1171},{"style":597},[1172],{"type":344,"value":1114},{"type":339,"tag":375,"props":1174,"children":1175},{"style":603},[1176],{"type":344,"value":606},{"type":339,"tag":375,"props":1178,"children":1179},{"style":655},[1180],{"type":344,"value":336},{"type":339,"tag":375,"props":1182,"children":1183},{"style":649},[1184],{"type":344,"value":652},{"type":339,"tag":375,"props":1186,"children":1187},{"style":655},[1188],{"type":344,"value":773},{"type":339,"tag":375,"props":1190,"children":1191},{"style":615},[1192],{"type":344,"value":618},{"type":339,"tag":375,"props":1194,"children":1195},{"style":655},[1196],{"type":344,"value":952},{"type":339,"tag":375,"props":1198,"children":1199},{"style":660},[1200],{"type":344,"value":1143},{"type":339,"tag":375,"props":1202,"children":1203},{"style":655},[1204],{"type":344,"value":1043},{"type":339,"tag":375,"props":1206,"children":1207},{"style":649},[1208],{"type":344,"value":652},{"type":339,"tag":375,"props":1210,"children":1211},{"style":655},[1212],{"type":344,"value":612},{"type":339,"tag":375,"props":1214,"children":1215},{"style":603},[1216],{"type":344,"value":1217},")\n",{"type":339,"tag":375,"props":1219,"children":1221},{"class":377,"line":1220},21,[1222,1227],{"type":339,"tag":375,"props":1223,"children":1224},{"style":603},[1225],{"type":344,"value":1226},"  )",{"type":339,"tag":375,"props":1228,"children":1229},{"style":615},[1230],{"type":344,"value":703},{"type":339,"tag":375,"props":1232,"children":1234},{"class":377,"line":1233},22,[1235,1240],{"type":339,"tag":375,"props":1236,"children":1237},{"style":603},[1238],{"type":344,"value":1239},"}",{"type":339,"tag":375,"props":1241,"children":1242},{"style":615},[1243],{"type":344,"value":703},{"type":339,"tag":1245,"props":1246,"children":1247},"style",{},[1248],{"type":344,"value":1249},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":332,"searchDepth":458,"depth":458,"links":1251},[1252,1253],{"id":537,"depth":387,"text":537},{"id":542,"depth":387,"text":542,"children":1254},[1255],{"id":548,"depth":396,"text":551},"markdown","content:2.code:1.algorithm:3.leetcode:112.path-sum.md","content","2.code/1.algorithm/3.leetcode/112.path-sum.md","md",[1262,1264],{"_path":160,"title":159,"description":1263},"给定一个二叉树，找出其最小深度。",{"_path":166,"title":165,"description":1265},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",1712330888548]