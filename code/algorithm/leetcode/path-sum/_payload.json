[{"data":1,"prerenderedAt":1284},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/path-sum":347,"/code/algorithm/leetcode/path-sum-surround":1279},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319,341,344],{"title":320,"_path":321,"children":322},"Promise","/code/scene/promise",[323,326,329,332,335,338],{"title":324,"_path":325},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":327,"_path":328},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":330,"_path":331},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":333,"_path":334},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":336,"_path":337},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":339,"_path":340},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":342,"_path":343},"lodash.get","/code/scene/lodash.get",{"title":345,"_path":346},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":163,"_dir":348,"_draft":349,"_partial":349,"_locale":350,"title":162,"description":351,"url":352,"body":353,"_type":1274,"_id":1275,"_source":1276,"_file":1277,"_extension":1278},"leetcode",false,"","给你二叉树的根节点 root 和一个表示目标和的整数 targetSum 。判断该树中是否存在 根节点到叶子节点 的路径，这条路径上所有节点值相加等于目标和 targetSum 。如果存在，返回 true ；否则，返回 false 。","https://leetcode.cn/problems/path-sum",{"type":354,"children":355,"toc":1268},"root",[356,363,368,373,382,421,426,434,492,497,527,532,552,558,563,570,1262],{"type":357,"tag":358,"props":359,"children":360},"element","p",{},[361],{"type":362,"value":351},"text",{"type":357,"tag":358,"props":364,"children":365},{},[366],{"type":362,"value":367},"叶子节点 是指没有子节点的节点。",{"type":357,"tag":358,"props":369,"children":370},{},[371],{"type":362,"value":372},"示例 1：",{"type":357,"tag":358,"props":374,"children":375},{},[376],{"type":357,"tag":377,"props":378,"children":381},"img",{"alt":379,"src":380},"pathsum1","/img/code_leetcode_No.112_pathsum1.png",[],{"type":357,"tag":383,"props":384,"children":387},"pre",{"className":385,"code":386,"language":362,"meta":350,"style":350},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n输出：true\n解释：等于目标和的根节点到叶节点路径如上图所示。\n",[388],{"type":357,"tag":389,"props":390,"children":391},"code",{"__ignoreMap":350},[392,403,412],{"type":357,"tag":393,"props":394,"children":397},"span",{"class":395,"line":396},"line",1,[398],{"type":357,"tag":393,"props":399,"children":400},{},[401],{"type":362,"value":402},"输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n",{"type":357,"tag":393,"props":404,"children":406},{"class":395,"line":405},2,[407],{"type":357,"tag":393,"props":408,"children":409},{},[410],{"type":362,"value":411},"输出：true\n",{"type":357,"tag":393,"props":413,"children":415},{"class":395,"line":414},3,[416],{"type":357,"tag":393,"props":417,"children":418},{},[419],{"type":362,"value":420},"解释：等于目标和的根节点到叶节点路径如上图所示。\n",{"type":357,"tag":358,"props":422,"children":423},{},[424],{"type":362,"value":425},"示例 2：",{"type":357,"tag":358,"props":427,"children":428},{},[429],{"type":357,"tag":377,"props":430,"children":433},{"alt":431,"src":432},"pathsum2","/img/code_leetcode_No.112_pathsum2.png",[],{"type":357,"tag":383,"props":435,"children":437},{"className":385,"code":436,"language":362,"meta":350,"style":350},"输入：root = [1,2,3], targetSum = 5\n输出：false\n解释：树中存在两条根节点到叶子节点的路径：\n(1 --> 2): 和为 3\n(1 --> 3): 和为 4\n不存在 sum = 5 的根节点到叶子节点的路径。\n",[438],{"type":357,"tag":389,"props":439,"children":440},{"__ignoreMap":350},[441,449,457,465,474,483],{"type":357,"tag":393,"props":442,"children":443},{"class":395,"line":396},[444],{"type":357,"tag":393,"props":445,"children":446},{},[447],{"type":362,"value":448},"输入：root = [1,2,3], targetSum = 5\n",{"type":357,"tag":393,"props":450,"children":451},{"class":395,"line":405},[452],{"type":357,"tag":393,"props":453,"children":454},{},[455],{"type":362,"value":456},"输出：false\n",{"type":357,"tag":393,"props":458,"children":459},{"class":395,"line":414},[460],{"type":357,"tag":393,"props":461,"children":462},{},[463],{"type":362,"value":464},"解释：树中存在两条根节点到叶子节点的路径：\n",{"type":357,"tag":393,"props":466,"children":468},{"class":395,"line":467},4,[469],{"type":357,"tag":393,"props":470,"children":471},{},[472],{"type":362,"value":473},"(1 --> 2): 和为 3\n",{"type":357,"tag":393,"props":475,"children":477},{"class":395,"line":476},5,[478],{"type":357,"tag":393,"props":479,"children":480},{},[481],{"type":362,"value":482},"(1 --> 3): 和为 4\n",{"type":357,"tag":393,"props":484,"children":486},{"class":395,"line":485},6,[487],{"type":357,"tag":393,"props":488,"children":489},{},[490],{"type":362,"value":491},"不存在 sum = 5 的根节点到叶子节点的路径。\n",{"type":357,"tag":358,"props":493,"children":494},{},[495],{"type":362,"value":496},"示例 3：",{"type":357,"tag":383,"props":498,"children":500},{"className":385,"code":499,"language":362,"meta":350,"style":350},"输入：root = [], targetSum = 0\n输出：false\n解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",[501],{"type":357,"tag":389,"props":502,"children":503},{"__ignoreMap":350},[504,512,519],{"type":357,"tag":393,"props":505,"children":506},{"class":395,"line":396},[507],{"type":357,"tag":393,"props":508,"children":509},{},[510],{"type":362,"value":511},"输入：root = [], targetSum = 0\n",{"type":357,"tag":393,"props":513,"children":514},{"class":395,"line":405},[515],{"type":357,"tag":393,"props":516,"children":517},{},[518],{"type":362,"value":456},{"type":357,"tag":393,"props":520,"children":521},{"class":395,"line":414},[522],{"type":357,"tag":393,"props":523,"children":524},{},[525],{"type":362,"value":526},"解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",{"type":357,"tag":358,"props":528,"children":529},{},[530],{"type":362,"value":531},"提示：",{"type":357,"tag":533,"props":534,"children":535},"ul",{},[536,542,547],{"type":357,"tag":537,"props":538,"children":539},"li",{},[540],{"type":362,"value":541},"树中节点的数目在范围 [0, 5000] 内",{"type":357,"tag":537,"props":543,"children":544},{},[545],{"type":362,"value":546},"-1000 \u003C= Node.val \u003C= 1000",{"type":357,"tag":537,"props":548,"children":549},{},[550],{"type":362,"value":551},"-1000 \u003C= targetSum \u003C= 1000",{"type":357,"tag":553,"props":554,"children":556},"h2",{"id":555},"解题思路",[557],{"type":362,"value":555},{"type":357,"tag":553,"props":559,"children":561},{"id":560},"实现",[562],{"type":362,"value":560},{"type":357,"tag":564,"props":565,"children":567},"h3",{"id":566},"深度优先搜索-dfs",[568],{"type":362,"value":569},"深度优先搜索 - dfs",{"type":357,"tag":383,"props":571,"children":575},{"className":572,"code":573,"language":574,"meta":350,"style":350},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {boolean}\n */\nvar hasPathSum = function (root, targetSum) {\n  if (root === null) return false;\n  if (root.left === null && root.right === null) return root.val === targetSum;\n  return (\n    hasPathSum(root.left, targetSum - root.val) ||\n    hasPathSum(root.right, targetSum - root.val)\n  );\n};\n","js",[576],{"type":357,"tag":389,"props":577,"children":578},{"__ignoreMap":350},[579,588,596,604,656,722,775,828,837,847,855,882,904,922,930,975,1020,1110,1124,1183,1236,1249],{"type":357,"tag":393,"props":580,"children":581},{"class":395,"line":396},[582],{"type":357,"tag":393,"props":583,"children":585},{"style":584},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[586],{"type":362,"value":587},"/**\n",{"type":357,"tag":393,"props":589,"children":590},{"class":395,"line":405},[591],{"type":357,"tag":393,"props":592,"children":593},{"style":584},[594],{"type":362,"value":595}," * Definition for a binary tree node.\n",{"type":357,"tag":393,"props":597,"children":598},{"class":395,"line":414},[599],{"type":357,"tag":393,"props":600,"children":601},{"style":584},[602],{"type":362,"value":603}," */\n",{"type":357,"tag":393,"props":605,"children":606},{"class":395,"line":467},[607,613,619,625,631,637,642,646,651],{"type":357,"tag":393,"props":608,"children":610},{"style":609},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[611],{"type":362,"value":612},"function",{"type":357,"tag":393,"props":614,"children":616},{"style":615},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[617],{"type":362,"value":618}," TreeNode",{"type":357,"tag":393,"props":620,"children":622},{"style":621},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[623],{"type":362,"value":624},"(",{"type":357,"tag":393,"props":626,"children":628},{"style":627},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[629],{"type":362,"value":630},"val",{"type":357,"tag":393,"props":632,"children":634},{"style":633},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[635],{"type":362,"value":636},",",{"type":357,"tag":393,"props":638,"children":639},{"style":627},[640],{"type":362,"value":641}," left",{"type":357,"tag":393,"props":643,"children":644},{"style":633},[645],{"type":362,"value":636},{"type":357,"tag":393,"props":647,"children":648},{"style":627},[649],{"type":362,"value":650}," right",{"type":357,"tag":393,"props":652,"children":653},{"style":621},[654],{"type":362,"value":655},") {\n",{"type":357,"tag":393,"props":657,"children":658},{"class":395,"line":476},[659,665,671,676,682,687,692,698,703,708,713,717],{"type":357,"tag":393,"props":660,"children":662},{"style":661},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[663],{"type":362,"value":664},"  this",{"type":357,"tag":393,"props":666,"children":668},{"style":667},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[669],{"type":362,"value":670},".",{"type":357,"tag":393,"props":672,"children":674},{"style":673},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[675],{"type":362,"value":630},{"type":357,"tag":393,"props":677,"children":679},{"style":678},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[680],{"type":362,"value":681}," =",{"type":357,"tag":393,"props":683,"children":684},{"style":673},[685],{"type":362,"value":686}," val",{"type":357,"tag":393,"props":688,"children":689},{"style":678},[690],{"type":362,"value":691}," ===",{"type":357,"tag":393,"props":693,"children":695},{"style":694},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[696],{"type":362,"value":697}," undefined",{"type":357,"tag":393,"props":699,"children":700},{"style":678},[701],{"type":362,"value":702}," ?",{"type":357,"tag":393,"props":704,"children":705},{"style":694},[706],{"type":362,"value":707}," 0",{"type":357,"tag":393,"props":709,"children":710},{"style":678},[711],{"type":362,"value":712}," :",{"type":357,"tag":393,"props":714,"children":715},{"style":673},[716],{"type":362,"value":686},{"type":357,"tag":393,"props":718,"children":719},{"style":633},[720],{"type":362,"value":721},";\n",{"type":357,"tag":393,"props":723,"children":724},{"class":395,"line":485},[725,729,733,738,742,746,750,754,758,763,767,771],{"type":357,"tag":393,"props":726,"children":727},{"style":661},[728],{"type":362,"value":664},{"type":357,"tag":393,"props":730,"children":731},{"style":667},[732],{"type":362,"value":670},{"type":357,"tag":393,"props":734,"children":735},{"style":673},[736],{"type":362,"value":737},"left",{"type":357,"tag":393,"props":739,"children":740},{"style":678},[741],{"type":362,"value":681},{"type":357,"tag":393,"props":743,"children":744},{"style":673},[745],{"type":362,"value":641},{"type":357,"tag":393,"props":747,"children":748},{"style":678},[749],{"type":362,"value":691},{"type":357,"tag":393,"props":751,"children":752},{"style":694},[753],{"type":362,"value":697},{"type":357,"tag":393,"props":755,"children":756},{"style":678},[757],{"type":362,"value":702},{"type":357,"tag":393,"props":759,"children":760},{"style":694},[761],{"type":362,"value":762}," null",{"type":357,"tag":393,"props":764,"children":765},{"style":678},[766],{"type":362,"value":712},{"type":357,"tag":393,"props":768,"children":769},{"style":673},[770],{"type":362,"value":641},{"type":357,"tag":393,"props":772,"children":773},{"style":633},[774],{"type":362,"value":721},{"type":357,"tag":393,"props":776,"children":778},{"class":395,"line":777},7,[779,783,787,792,796,800,804,808,812,816,820,824],{"type":357,"tag":393,"props":780,"children":781},{"style":661},[782],{"type":362,"value":664},{"type":357,"tag":393,"props":784,"children":785},{"style":667},[786],{"type":362,"value":670},{"type":357,"tag":393,"props":788,"children":789},{"style":673},[790],{"type":362,"value":791},"right",{"type":357,"tag":393,"props":793,"children":794},{"style":678},[795],{"type":362,"value":681},{"type":357,"tag":393,"props":797,"children":798},{"style":673},[799],{"type":362,"value":650},{"type":357,"tag":393,"props":801,"children":802},{"style":678},[803],{"type":362,"value":691},{"type":357,"tag":393,"props":805,"children":806},{"style":694},[807],{"type":362,"value":697},{"type":357,"tag":393,"props":809,"children":810},{"style":678},[811],{"type":362,"value":702},{"type":357,"tag":393,"props":813,"children":814},{"style":694},[815],{"type":362,"value":762},{"type":357,"tag":393,"props":817,"children":818},{"style":678},[819],{"type":362,"value":712},{"type":357,"tag":393,"props":821,"children":822},{"style":673},[823],{"type":362,"value":650},{"type":357,"tag":393,"props":825,"children":826},{"style":633},[827],{"type":362,"value":721},{"type":357,"tag":393,"props":829,"children":831},{"class":395,"line":830},8,[832],{"type":357,"tag":393,"props":833,"children":834},{"style":621},[835],{"type":362,"value":836},"}\n",{"type":357,"tag":393,"props":838,"children":840},{"class":395,"line":839},9,[841],{"type":357,"tag":393,"props":842,"children":844},{"emptyLinePlaceholder":843},true,[845],{"type":362,"value":846},"\n",{"type":357,"tag":393,"props":848,"children":850},{"class":395,"line":849},10,[851],{"type":357,"tag":393,"props":852,"children":853},{"style":584},[854],{"type":362,"value":587},{"type":357,"tag":393,"props":856,"children":858},{"class":395,"line":857},11,[859,864,870,876],{"type":357,"tag":393,"props":860,"children":861},{"style":584},[862],{"type":362,"value":863}," * ",{"type":357,"tag":393,"props":865,"children":867},{"style":866},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[868],{"type":362,"value":869},"@param",{"type":357,"tag":393,"props":871,"children":873},{"style":872},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[874],{"type":362,"value":875}," {TreeNode}",{"type":357,"tag":393,"props":877,"children":879},{"style":878},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[880],{"type":362,"value":881}," root\n",{"type":357,"tag":393,"props":883,"children":885},{"class":395,"line":884},12,[886,890,894,899],{"type":357,"tag":393,"props":887,"children":888},{"style":584},[889],{"type":362,"value":863},{"type":357,"tag":393,"props":891,"children":892},{"style":866},[893],{"type":362,"value":869},{"type":357,"tag":393,"props":895,"children":896},{"style":872},[897],{"type":362,"value":898}," {number}",{"type":357,"tag":393,"props":900,"children":901},{"style":878},[902],{"type":362,"value":903}," targetSum\n",{"type":357,"tag":393,"props":905,"children":907},{"class":395,"line":906},13,[908,912,917],{"type":357,"tag":393,"props":909,"children":910},{"style":584},[911],{"type":362,"value":863},{"type":357,"tag":393,"props":913,"children":914},{"style":866},[915],{"type":362,"value":916},"@return",{"type":357,"tag":393,"props":918,"children":919},{"style":872},[920],{"type":362,"value":921}," {boolean}\n",{"type":357,"tag":393,"props":923,"children":925},{"class":395,"line":924},14,[926],{"type":357,"tag":393,"props":927,"children":928},{"style":584},[929],{"type":362,"value":603},{"type":357,"tag":393,"props":931,"children":933},{"class":395,"line":932},15,[934,939,944,948,953,958,962,966,971],{"type":357,"tag":393,"props":935,"children":936},{"style":609},[937],{"type":362,"value":938},"var",{"type":357,"tag":393,"props":940,"children":941},{"style":615},[942],{"type":362,"value":943}," hasPathSum",{"type":357,"tag":393,"props":945,"children":946},{"style":678},[947],{"type":362,"value":681},{"type":357,"tag":393,"props":949,"children":950},{"style":609},[951],{"type":362,"value":952}," function",{"type":357,"tag":393,"props":954,"children":955},{"style":621},[956],{"type":362,"value":957}," (",{"type":357,"tag":393,"props":959,"children":960},{"style":627},[961],{"type":362,"value":354},{"type":357,"tag":393,"props":963,"children":964},{"style":633},[965],{"type":362,"value":636},{"type":357,"tag":393,"props":967,"children":968},{"style":627},[969],{"type":362,"value":970}," targetSum",{"type":357,"tag":393,"props":972,"children":973},{"style":621},[974],{"type":362,"value":655},{"type":357,"tag":393,"props":976,"children":978},{"class":395,"line":977},16,[979,985,989,993,997,1001,1006,1011,1016],{"type":357,"tag":393,"props":980,"children":982},{"style":981},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[983],{"type":362,"value":984},"  if",{"type":357,"tag":393,"props":986,"children":987},{"style":621},[988],{"type":362,"value":957},{"type":357,"tag":393,"props":990,"children":991},{"style":673},[992],{"type":362,"value":354},{"type":357,"tag":393,"props":994,"children":995},{"style":678},[996],{"type":362,"value":691},{"type":357,"tag":393,"props":998,"children":999},{"style":694},[1000],{"type":362,"value":762},{"type":357,"tag":393,"props":1002,"children":1003},{"style":621},[1004],{"type":362,"value":1005},") ",{"type":357,"tag":393,"props":1007,"children":1008},{"style":981},[1009],{"type":362,"value":1010},"return",{"type":357,"tag":393,"props":1012,"children":1013},{"style":694},[1014],{"type":362,"value":1015}," false",{"type":357,"tag":393,"props":1017,"children":1018},{"style":633},[1019],{"type":362,"value":721},{"type":357,"tag":393,"props":1021,"children":1023},{"class":395,"line":1022},17,[1024,1028,1032,1036,1040,1044,1048,1052,1057,1062,1066,1070,1074,1078,1082,1086,1090,1094,1098,1102,1106],{"type":357,"tag":393,"props":1025,"children":1026},{"style":981},[1027],{"type":362,"value":984},{"type":357,"tag":393,"props":1029,"children":1030},{"style":621},[1031],{"type":362,"value":957},{"type":357,"tag":393,"props":1033,"children":1034},{"style":673},[1035],{"type":362,"value":354},{"type":357,"tag":393,"props":1037,"children":1038},{"style":667},[1039],{"type":362,"value":670},{"type":357,"tag":393,"props":1041,"children":1042},{"style":673},[1043],{"type":362,"value":737},{"type":357,"tag":393,"props":1045,"children":1046},{"style":678},[1047],{"type":362,"value":691},{"type":357,"tag":393,"props":1049,"children":1050},{"style":694},[1051],{"type":362,"value":762},{"type":357,"tag":393,"props":1053,"children":1054},{"style":678},[1055],{"type":362,"value":1056}," &&",{"type":357,"tag":393,"props":1058,"children":1059},{"style":673},[1060],{"type":362,"value":1061}," root",{"type":357,"tag":393,"props":1063,"children":1064},{"style":667},[1065],{"type":362,"value":670},{"type":357,"tag":393,"props":1067,"children":1068},{"style":673},[1069],{"type":362,"value":791},{"type":357,"tag":393,"props":1071,"children":1072},{"style":678},[1073],{"type":362,"value":691},{"type":357,"tag":393,"props":1075,"children":1076},{"style":694},[1077],{"type":362,"value":762},{"type":357,"tag":393,"props":1079,"children":1080},{"style":621},[1081],{"type":362,"value":1005},{"type":357,"tag":393,"props":1083,"children":1084},{"style":981},[1085],{"type":362,"value":1010},{"type":357,"tag":393,"props":1087,"children":1088},{"style":673},[1089],{"type":362,"value":1061},{"type":357,"tag":393,"props":1091,"children":1092},{"style":667},[1093],{"type":362,"value":670},{"type":357,"tag":393,"props":1095,"children":1096},{"style":673},[1097],{"type":362,"value":630},{"type":357,"tag":393,"props":1099,"children":1100},{"style":678},[1101],{"type":362,"value":691},{"type":357,"tag":393,"props":1103,"children":1104},{"style":673},[1105],{"type":362,"value":970},{"type":357,"tag":393,"props":1107,"children":1108},{"style":633},[1109],{"type":362,"value":721},{"type":357,"tag":393,"props":1111,"children":1113},{"class":395,"line":1112},18,[1114,1119],{"type":357,"tag":393,"props":1115,"children":1116},{"style":981},[1117],{"type":362,"value":1118},"  return",{"type":357,"tag":393,"props":1120,"children":1121},{"style":621},[1122],{"type":362,"value":1123}," (\n",{"type":357,"tag":393,"props":1125,"children":1127},{"class":395,"line":1126},19,[1128,1133,1137,1141,1145,1149,1153,1157,1162,1166,1170,1174,1178],{"type":357,"tag":393,"props":1129,"children":1130},{"style":615},[1131],{"type":362,"value":1132},"    hasPathSum",{"type":357,"tag":393,"props":1134,"children":1135},{"style":621},[1136],{"type":362,"value":624},{"type":357,"tag":393,"props":1138,"children":1139},{"style":673},[1140],{"type":362,"value":354},{"type":357,"tag":393,"props":1142,"children":1143},{"style":667},[1144],{"type":362,"value":670},{"type":357,"tag":393,"props":1146,"children":1147},{"style":673},[1148],{"type":362,"value":737},{"type":357,"tag":393,"props":1150,"children":1151},{"style":633},[1152],{"type":362,"value":636},{"type":357,"tag":393,"props":1154,"children":1155},{"style":673},[1156],{"type":362,"value":970},{"type":357,"tag":393,"props":1158,"children":1159},{"style":678},[1160],{"type":362,"value":1161}," -",{"type":357,"tag":393,"props":1163,"children":1164},{"style":673},[1165],{"type":362,"value":1061},{"type":357,"tag":393,"props":1167,"children":1168},{"style":667},[1169],{"type":362,"value":670},{"type":357,"tag":393,"props":1171,"children":1172},{"style":673},[1173],{"type":362,"value":630},{"type":357,"tag":393,"props":1175,"children":1176},{"style":621},[1177],{"type":362,"value":1005},{"type":357,"tag":393,"props":1179,"children":1180},{"style":678},[1181],{"type":362,"value":1182},"||\n",{"type":357,"tag":393,"props":1184,"children":1186},{"class":395,"line":1185},20,[1187,1191,1195,1199,1203,1207,1211,1215,1219,1223,1227,1231],{"type":357,"tag":393,"props":1188,"children":1189},{"style":615},[1190],{"type":362,"value":1132},{"type":357,"tag":393,"props":1192,"children":1193},{"style":621},[1194],{"type":362,"value":624},{"type":357,"tag":393,"props":1196,"children":1197},{"style":673},[1198],{"type":362,"value":354},{"type":357,"tag":393,"props":1200,"children":1201},{"style":667},[1202],{"type":362,"value":670},{"type":357,"tag":393,"props":1204,"children":1205},{"style":673},[1206],{"type":362,"value":791},{"type":357,"tag":393,"props":1208,"children":1209},{"style":633},[1210],{"type":362,"value":636},{"type":357,"tag":393,"props":1212,"children":1213},{"style":673},[1214],{"type":362,"value":970},{"type":357,"tag":393,"props":1216,"children":1217},{"style":678},[1218],{"type":362,"value":1161},{"type":357,"tag":393,"props":1220,"children":1221},{"style":673},[1222],{"type":362,"value":1061},{"type":357,"tag":393,"props":1224,"children":1225},{"style":667},[1226],{"type":362,"value":670},{"type":357,"tag":393,"props":1228,"children":1229},{"style":673},[1230],{"type":362,"value":630},{"type":357,"tag":393,"props":1232,"children":1233},{"style":621},[1234],{"type":362,"value":1235},")\n",{"type":357,"tag":393,"props":1237,"children":1239},{"class":395,"line":1238},21,[1240,1245],{"type":357,"tag":393,"props":1241,"children":1242},{"style":621},[1243],{"type":362,"value":1244},"  )",{"type":357,"tag":393,"props":1246,"children":1247},{"style":633},[1248],{"type":362,"value":721},{"type":357,"tag":393,"props":1250,"children":1252},{"class":395,"line":1251},22,[1253,1258],{"type":357,"tag":393,"props":1254,"children":1255},{"style":621},[1256],{"type":362,"value":1257},"}",{"type":357,"tag":393,"props":1259,"children":1260},{"style":633},[1261],{"type":362,"value":721},{"type":357,"tag":1263,"props":1264,"children":1265},"style",{},[1266],{"type":362,"value":1267},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":350,"searchDepth":476,"depth":476,"links":1269},[1270,1271],{"id":555,"depth":405,"text":555},{"id":560,"depth":405,"text":560,"children":1272},[1273],{"id":566,"depth":414,"text":569},"markdown","content:2.code:1.algorithm:3.leetcode:112.path-sum.md","content","2.code/1.algorithm/3.leetcode/112.path-sum.md","md",[1280,1282],{"_path":160,"title":159,"description":1281},"给定一个二叉树，找出其最小深度。",{"_path":166,"title":165,"description":1283},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",1712580441000]