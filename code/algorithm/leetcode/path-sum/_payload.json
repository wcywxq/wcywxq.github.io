[{"data":1,"prerenderedAt":1291},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/path-sum":314,"/code/algorithm/leetcode/path-sum-surround":1286},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,258,307],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,47],{"title":41,"_path":42,"children":43},"剑指 offer","/code/algorithm/sword-ofter",[44],{"title":45,"_path":46},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":48,"_path":49,"children":50},"力扣 leetCode","/code/algorithm/leetcode",[51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255],{"title":52,"_path":53},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":55,"_path":56},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":58,"_path":59},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":61,"_path":62},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":64,"_path":65},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":67,"_path":68},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":70,"_path":71},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":73,"_path":74},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":76,"_path":77},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":79,"_path":80},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":82,"_path":83},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":85,"_path":86},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":88,"_path":89},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":91,"_path":92},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":94,"_path":95},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":97,"_path":98},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":100,"_path":101},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":103,"_path":104},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":106,"_path":107},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":109,"_path":110},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":112,"_path":113},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":115,"_path":116},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":118,"_path":119},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":121,"_path":122},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":124,"_path":125},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":127,"_path":128},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":130,"_path":131},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":133,"_path":134},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":136,"_path":137},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":139,"_path":140},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":142,"_path":143},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":145,"_path":146},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":148,"_path":149},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":151,"_path":152},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":154,"_path":155},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":157,"_path":158},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":160,"_path":161},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":163,"_path":164},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":166,"_path":167},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":169,"_path":170},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":172,"_path":173},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":175,"_path":176},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":178,"_path":179},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":181,"_path":182},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":184,"_path":185},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":187,"_path":188},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":190,"_path":191},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":193,"_path":194},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":196,"_path":197},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":199,"_path":200},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":202,"_path":203},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":205,"_path":206},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":208,"_path":209},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":211,"_path":212},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":214,"_path":215},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":217,"_path":218},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":220,"_path":221},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":223,"_path":224},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":226,"_path":227},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":229,"_path":230},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":232,"_path":233},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":235,"_path":236},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":238,"_path":239},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":241,"_path":242},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":244,"_path":245},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":247,"_path":248},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":250,"_path":251},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":253,"_path":254},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":256,"_path":257},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":259,"_path":260,"children":261},"源码实现","/code/source",[262,287,300],{"title":263,"_path":264,"children":265},"原生 api","/code/source/native-api",[266,269,272,275,278,281,284],{"title":267,"_path":268},"ajax","/code/source/native-api/ajax",{"title":270,"_path":271},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":273,"_path":274},"new 操作符","/code/source/native-api/new",{"title":276,"_path":277},"instanceof 关键字","/code/source/native-api/instanceof",{"title":279,"_path":280},"定时器","/code/source/native-api/timer",{"title":282,"_path":283},"JSON.stringify","/code/source/native-api/json-stringify",{"title":285,"_path":286},"Iterator 迭代器","/code/source/native-api/iterator",{"title":288,"_path":289,"children":290},"数组 Array","/code/source/array",[291,294,297],{"title":292,"_path":293},"数组去重","/code/source/array/remove-duplicate",{"title":295,"_path":296},"数组扁平化","/code/source/array/flat",{"title":298,"_path":299},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":301,"_path":302,"children":303},"字符串 String","/code/source/string",[304],{"title":305,"_path":306},"repeat()","/code/source/string/repeat",{"title":308,"_path":309,"children":310},"业务场景","/code/scene",[311],{"title":312,"_path":313},"顺序打印 url 并支持 retry","/code/scene/promise-url-retry",{"_path":155,"_dir":315,"_draft":316,"_partial":316,"_locale":317,"title":154,"description":318,"url":319,"body":320,"_type":1282,"_id":1283,"_source":1284,"_file":1285,"_extension":354},"leetcode",false,"","给你二叉树的根节点 root 和一个表示目标和的整数 targetSum 。判断该树中是否存在 根节点到叶子节点 的路径，这条路径上所有节点值相加等于目标和 targetSum 。如果存在，返回 true ；否则，返回 false 。","https://leetcode.cn/problems/path-sum",{"type":321,"children":322,"toc":1276},"root",[323,330,335,340,349,412,417,425,500,505,535,540,560,566,571,578,1270],{"type":324,"tag":325,"props":326,"children":327},"element","p",{},[328],{"type":329,"value":318},"text",{"type":324,"tag":325,"props":331,"children":332},{},[333],{"type":329,"value":334},"叶子节点 是指没有子节点的节点。",{"type":324,"tag":325,"props":336,"children":337},{},[338],{"type":329,"value":339},"示例 1：",{"type":324,"tag":325,"props":341,"children":342},{},[343],{"type":324,"tag":344,"props":345,"children":348},"img",{"alt":346,"src":347},"pathsum1","/img/code_leetcode_No.112_pathsum1.png",[],{"type":324,"tag":350,"props":351,"children":355},"pre",{"className":352,"code":353,"language":354,"meta":317,"style":317},"language-md shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n输出：true\n解释：等于目标和的根节点到叶节点路径如上图所示。\n","md",[356],{"type":324,"tag":357,"props":358,"children":359},"code",{"__ignoreMap":317},[360,394,403],{"type":324,"tag":361,"props":362,"children":365},"span",{"class":363,"line":364},"line",1,[366,372,378,384,389],{"type":324,"tag":361,"props":367,"children":369},{"style":368},"--shiki-light:#110000;--shiki-default:#110000;--shiki-dark:#BFBDB6",[370],{"type":329,"value":371},"输入：root = ",{"type":324,"tag":361,"props":373,"children":375},{"style":374},"--shiki-light:#87429A;--shiki-default:#87429A;--shiki-dark:#BFBDB6",[376],{"type":329,"value":377},"[",{"type":324,"tag":361,"props":379,"children":381},{"style":380},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#39BAE6",[382],{"type":329,"value":383},"5,4,8,11,null,13,4,7,2,null,null,null,1",{"type":324,"tag":361,"props":385,"children":386},{"style":374},[387],{"type":329,"value":388},"]",{"type":324,"tag":361,"props":390,"children":391},{"style":368},[392],{"type":329,"value":393},", targetSum = 22\n",{"type":324,"tag":361,"props":395,"children":397},{"class":363,"line":396},2,[398],{"type":324,"tag":361,"props":399,"children":400},{"style":368},[401],{"type":329,"value":402},"输出：true\n",{"type":324,"tag":361,"props":404,"children":406},{"class":363,"line":405},3,[407],{"type":324,"tag":361,"props":408,"children":409},{"style":368},[410],{"type":329,"value":411},"解释：等于目标和的根节点到叶节点路径如上图所示。\n",{"type":324,"tag":325,"props":413,"children":414},{},[415],{"type":329,"value":416},"示例 2：",{"type":324,"tag":325,"props":418,"children":419},{},[420],{"type":324,"tag":344,"props":421,"children":424},{"alt":422,"src":423},"pathsum2","/img/code_leetcode_No.112_pathsum2.png",[],{"type":324,"tag":350,"props":426,"children":428},{"className":352,"code":427,"language":354,"meta":317,"style":317},"输入：root = [1,2,3], targetSum = 5\n输出：false\n解释：树中存在两条根节点到叶子节点的路径：\n(1 --> 2): 和为 3\n(1 --> 3): 和为 4\n不存在 sum = 5 的根节点到叶子节点的路径。\n",[429],{"type":324,"tag":357,"props":430,"children":431},{"__ignoreMap":317},[432,457,465,473,482,491],{"type":324,"tag":361,"props":433,"children":434},{"class":363,"line":364},[435,439,443,448,452],{"type":324,"tag":361,"props":436,"children":437},{"style":368},[438],{"type":329,"value":371},{"type":324,"tag":361,"props":440,"children":441},{"style":374},[442],{"type":329,"value":377},{"type":324,"tag":361,"props":444,"children":445},{"style":380},[446],{"type":329,"value":447},"1,2,3",{"type":324,"tag":361,"props":449,"children":450},{"style":374},[451],{"type":329,"value":388},{"type":324,"tag":361,"props":453,"children":454},{"style":368},[455],{"type":329,"value":456},", targetSum = 5\n",{"type":324,"tag":361,"props":458,"children":459},{"class":363,"line":396},[460],{"type":324,"tag":361,"props":461,"children":462},{"style":368},[463],{"type":329,"value":464},"输出：false\n",{"type":324,"tag":361,"props":466,"children":467},{"class":363,"line":405},[468],{"type":324,"tag":361,"props":469,"children":470},{"style":368},[471],{"type":329,"value":472},"解释：树中存在两条根节点到叶子节点的路径：\n",{"type":324,"tag":361,"props":474,"children":476},{"class":363,"line":475},4,[477],{"type":324,"tag":361,"props":478,"children":479},{"style":368},[480],{"type":329,"value":481},"(1 --> 2): 和为 3\n",{"type":324,"tag":361,"props":483,"children":485},{"class":363,"line":484},5,[486],{"type":324,"tag":361,"props":487,"children":488},{"style":368},[489],{"type":329,"value":490},"(1 --> 3): 和为 4\n",{"type":324,"tag":361,"props":492,"children":494},{"class":363,"line":493},6,[495],{"type":324,"tag":361,"props":496,"children":497},{"style":368},[498],{"type":329,"value":499},"不存在 sum = 5 的根节点到叶子节点的路径。\n",{"type":324,"tag":325,"props":501,"children":502},{},[503],{"type":329,"value":504},"示例 3：",{"type":324,"tag":350,"props":506,"children":508},{"className":352,"code":507,"language":354,"meta":317,"style":317},"输入：root = [], targetSum = 0\n输出：false\n解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",[509],{"type":324,"tag":357,"props":510,"children":511},{"__ignoreMap":317},[512,520,527],{"type":324,"tag":361,"props":513,"children":514},{"class":363,"line":364},[515],{"type":324,"tag":361,"props":516,"children":517},{"style":368},[518],{"type":329,"value":519},"输入：root = [], targetSum = 0\n",{"type":324,"tag":361,"props":521,"children":522},{"class":363,"line":396},[523],{"type":324,"tag":361,"props":524,"children":525},{"style":368},[526],{"type":329,"value":464},{"type":324,"tag":361,"props":528,"children":529},{"class":363,"line":405},[530],{"type":324,"tag":361,"props":531,"children":532},{"style":368},[533],{"type":329,"value":534},"解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",{"type":324,"tag":325,"props":536,"children":537},{},[538],{"type":329,"value":539},"提示：",{"type":324,"tag":541,"props":542,"children":543},"ul",{},[544,550,555],{"type":324,"tag":545,"props":546,"children":547},"li",{},[548],{"type":329,"value":549},"树中节点的数目在范围 [0, 5000] 内",{"type":324,"tag":545,"props":551,"children":552},{},[553],{"type":329,"value":554},"-1000 \u003C= Node.val \u003C= 1000",{"type":324,"tag":545,"props":556,"children":557},{},[558],{"type":329,"value":559},"-1000 \u003C= targetSum \u003C= 1000",{"type":324,"tag":561,"props":562,"children":564},"h2",{"id":563},"解题思路",[565],{"type":329,"value":563},{"type":324,"tag":561,"props":567,"children":569},{"id":568},"实现",[570],{"type":329,"value":568},{"type":324,"tag":572,"props":573,"children":575},"h3",{"id":574},"深度优先搜索-dfs",[576],{"type":329,"value":577},"深度优先搜索 - dfs",{"type":324,"tag":350,"props":579,"children":583},{"className":580,"code":581,"language":582,"meta":317,"style":317},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {boolean}\n */\nvar hasPathSum = function (root, targetSum) {\n  if (root === null) return false;\n  if (root.left === null && root.right === null) return root.val === targetSum;\n  return (\n    hasPathSum(root.left, targetSum - root.val) ||\n    hasPathSum(root.right, targetSum - root.val)\n  );\n};\n","js",[584],{"type":324,"tag":357,"props":585,"children":586},{"__ignoreMap":317},[587,596,604,612,664,730,783,836,845,855,863,890,912,930,938,983,1028,1118,1132,1191,1244,1257],{"type":324,"tag":361,"props":588,"children":589},{"class":363,"line":364},[590],{"type":324,"tag":361,"props":591,"children":593},{"style":592},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[594],{"type":329,"value":595},"/**\n",{"type":324,"tag":361,"props":597,"children":598},{"class":363,"line":396},[599],{"type":324,"tag":361,"props":600,"children":601},{"style":592},[602],{"type":329,"value":603}," * Definition for a binary tree node.\n",{"type":324,"tag":361,"props":605,"children":606},{"class":363,"line":405},[607],{"type":324,"tag":361,"props":608,"children":609},{"style":592},[610],{"type":329,"value":611}," */\n",{"type":324,"tag":361,"props":613,"children":614},{"class":363,"line":475},[615,621,627,633,639,645,650,654,659],{"type":324,"tag":361,"props":616,"children":618},{"style":617},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[619],{"type":329,"value":620},"function",{"type":324,"tag":361,"props":622,"children":624},{"style":623},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[625],{"type":329,"value":626}," TreeNode",{"type":324,"tag":361,"props":628,"children":630},{"style":629},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[631],{"type":329,"value":632},"(",{"type":324,"tag":361,"props":634,"children":636},{"style":635},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[637],{"type":329,"value":638},"val",{"type":324,"tag":361,"props":640,"children":642},{"style":641},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[643],{"type":329,"value":644},",",{"type":324,"tag":361,"props":646,"children":647},{"style":635},[648],{"type":329,"value":649}," left",{"type":324,"tag":361,"props":651,"children":652},{"style":641},[653],{"type":329,"value":644},{"type":324,"tag":361,"props":655,"children":656},{"style":635},[657],{"type":329,"value":658}," right",{"type":324,"tag":361,"props":660,"children":661},{"style":629},[662],{"type":329,"value":663},") {\n",{"type":324,"tag":361,"props":665,"children":666},{"class":363,"line":484},[667,673,679,684,690,695,700,706,711,716,721,725],{"type":324,"tag":361,"props":668,"children":670},{"style":669},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[671],{"type":329,"value":672},"  this",{"type":324,"tag":361,"props":674,"children":676},{"style":675},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[677],{"type":329,"value":678},".",{"type":324,"tag":361,"props":680,"children":682},{"style":681},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[683],{"type":329,"value":638},{"type":324,"tag":361,"props":685,"children":687},{"style":686},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[688],{"type":329,"value":689}," =",{"type":324,"tag":361,"props":691,"children":692},{"style":681},[693],{"type":329,"value":694}," val",{"type":324,"tag":361,"props":696,"children":697},{"style":686},[698],{"type":329,"value":699}," ===",{"type":324,"tag":361,"props":701,"children":703},{"style":702},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[704],{"type":329,"value":705}," undefined",{"type":324,"tag":361,"props":707,"children":708},{"style":686},[709],{"type":329,"value":710}," ?",{"type":324,"tag":361,"props":712,"children":713},{"style":702},[714],{"type":329,"value":715}," 0",{"type":324,"tag":361,"props":717,"children":718},{"style":686},[719],{"type":329,"value":720}," :",{"type":324,"tag":361,"props":722,"children":723},{"style":681},[724],{"type":329,"value":694},{"type":324,"tag":361,"props":726,"children":727},{"style":641},[728],{"type":329,"value":729},";\n",{"type":324,"tag":361,"props":731,"children":732},{"class":363,"line":493},[733,737,741,746,750,754,758,762,766,771,775,779],{"type":324,"tag":361,"props":734,"children":735},{"style":669},[736],{"type":329,"value":672},{"type":324,"tag":361,"props":738,"children":739},{"style":675},[740],{"type":329,"value":678},{"type":324,"tag":361,"props":742,"children":743},{"style":681},[744],{"type":329,"value":745},"left",{"type":324,"tag":361,"props":747,"children":748},{"style":686},[749],{"type":329,"value":689},{"type":324,"tag":361,"props":751,"children":752},{"style":681},[753],{"type":329,"value":649},{"type":324,"tag":361,"props":755,"children":756},{"style":686},[757],{"type":329,"value":699},{"type":324,"tag":361,"props":759,"children":760},{"style":702},[761],{"type":329,"value":705},{"type":324,"tag":361,"props":763,"children":764},{"style":686},[765],{"type":329,"value":710},{"type":324,"tag":361,"props":767,"children":768},{"style":702},[769],{"type":329,"value":770}," null",{"type":324,"tag":361,"props":772,"children":773},{"style":686},[774],{"type":329,"value":720},{"type":324,"tag":361,"props":776,"children":777},{"style":681},[778],{"type":329,"value":649},{"type":324,"tag":361,"props":780,"children":781},{"style":641},[782],{"type":329,"value":729},{"type":324,"tag":361,"props":784,"children":786},{"class":363,"line":785},7,[787,791,795,800,804,808,812,816,820,824,828,832],{"type":324,"tag":361,"props":788,"children":789},{"style":669},[790],{"type":329,"value":672},{"type":324,"tag":361,"props":792,"children":793},{"style":675},[794],{"type":329,"value":678},{"type":324,"tag":361,"props":796,"children":797},{"style":681},[798],{"type":329,"value":799},"right",{"type":324,"tag":361,"props":801,"children":802},{"style":686},[803],{"type":329,"value":689},{"type":324,"tag":361,"props":805,"children":806},{"style":681},[807],{"type":329,"value":658},{"type":324,"tag":361,"props":809,"children":810},{"style":686},[811],{"type":329,"value":699},{"type":324,"tag":361,"props":813,"children":814},{"style":702},[815],{"type":329,"value":705},{"type":324,"tag":361,"props":817,"children":818},{"style":686},[819],{"type":329,"value":710},{"type":324,"tag":361,"props":821,"children":822},{"style":702},[823],{"type":329,"value":770},{"type":324,"tag":361,"props":825,"children":826},{"style":686},[827],{"type":329,"value":720},{"type":324,"tag":361,"props":829,"children":830},{"style":681},[831],{"type":329,"value":658},{"type":324,"tag":361,"props":833,"children":834},{"style":641},[835],{"type":329,"value":729},{"type":324,"tag":361,"props":837,"children":839},{"class":363,"line":838},8,[840],{"type":324,"tag":361,"props":841,"children":842},{"style":629},[843],{"type":329,"value":844},"}\n",{"type":324,"tag":361,"props":846,"children":848},{"class":363,"line":847},9,[849],{"type":324,"tag":361,"props":850,"children":852},{"emptyLinePlaceholder":851},true,[853],{"type":329,"value":854},"\n",{"type":324,"tag":361,"props":856,"children":858},{"class":363,"line":857},10,[859],{"type":324,"tag":361,"props":860,"children":861},{"style":592},[862],{"type":329,"value":595},{"type":324,"tag":361,"props":864,"children":866},{"class":363,"line":865},11,[867,872,878,884],{"type":324,"tag":361,"props":868,"children":869},{"style":592},[870],{"type":329,"value":871}," * ",{"type":324,"tag":361,"props":873,"children":875},{"style":874},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[876],{"type":329,"value":877},"@param",{"type":324,"tag":361,"props":879,"children":881},{"style":880},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[882],{"type":329,"value":883}," {TreeNode}",{"type":324,"tag":361,"props":885,"children":887},{"style":886},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[888],{"type":329,"value":889}," root\n",{"type":324,"tag":361,"props":891,"children":893},{"class":363,"line":892},12,[894,898,902,907],{"type":324,"tag":361,"props":895,"children":896},{"style":592},[897],{"type":329,"value":871},{"type":324,"tag":361,"props":899,"children":900},{"style":874},[901],{"type":329,"value":877},{"type":324,"tag":361,"props":903,"children":904},{"style":880},[905],{"type":329,"value":906}," {number}",{"type":324,"tag":361,"props":908,"children":909},{"style":886},[910],{"type":329,"value":911}," targetSum\n",{"type":324,"tag":361,"props":913,"children":915},{"class":363,"line":914},13,[916,920,925],{"type":324,"tag":361,"props":917,"children":918},{"style":592},[919],{"type":329,"value":871},{"type":324,"tag":361,"props":921,"children":922},{"style":874},[923],{"type":329,"value":924},"@return",{"type":324,"tag":361,"props":926,"children":927},{"style":880},[928],{"type":329,"value":929}," {boolean}\n",{"type":324,"tag":361,"props":931,"children":933},{"class":363,"line":932},14,[934],{"type":324,"tag":361,"props":935,"children":936},{"style":592},[937],{"type":329,"value":611},{"type":324,"tag":361,"props":939,"children":941},{"class":363,"line":940},15,[942,947,952,956,961,966,970,974,979],{"type":324,"tag":361,"props":943,"children":944},{"style":617},[945],{"type":329,"value":946},"var",{"type":324,"tag":361,"props":948,"children":949},{"style":623},[950],{"type":329,"value":951}," hasPathSum",{"type":324,"tag":361,"props":953,"children":954},{"style":686},[955],{"type":329,"value":689},{"type":324,"tag":361,"props":957,"children":958},{"style":617},[959],{"type":329,"value":960}," function",{"type":324,"tag":361,"props":962,"children":963},{"style":629},[964],{"type":329,"value":965}," (",{"type":324,"tag":361,"props":967,"children":968},{"style":635},[969],{"type":329,"value":321},{"type":324,"tag":361,"props":971,"children":972},{"style":641},[973],{"type":329,"value":644},{"type":324,"tag":361,"props":975,"children":976},{"style":635},[977],{"type":329,"value":978}," targetSum",{"type":324,"tag":361,"props":980,"children":981},{"style":629},[982],{"type":329,"value":663},{"type":324,"tag":361,"props":984,"children":986},{"class":363,"line":985},16,[987,993,997,1001,1005,1009,1014,1019,1024],{"type":324,"tag":361,"props":988,"children":990},{"style":989},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[991],{"type":329,"value":992},"  if",{"type":324,"tag":361,"props":994,"children":995},{"style":629},[996],{"type":329,"value":965},{"type":324,"tag":361,"props":998,"children":999},{"style":681},[1000],{"type":329,"value":321},{"type":324,"tag":361,"props":1002,"children":1003},{"style":686},[1004],{"type":329,"value":699},{"type":324,"tag":361,"props":1006,"children":1007},{"style":702},[1008],{"type":329,"value":770},{"type":324,"tag":361,"props":1010,"children":1011},{"style":629},[1012],{"type":329,"value":1013},") ",{"type":324,"tag":361,"props":1015,"children":1016},{"style":989},[1017],{"type":329,"value":1018},"return",{"type":324,"tag":361,"props":1020,"children":1021},{"style":702},[1022],{"type":329,"value":1023}," false",{"type":324,"tag":361,"props":1025,"children":1026},{"style":641},[1027],{"type":329,"value":729},{"type":324,"tag":361,"props":1029,"children":1031},{"class":363,"line":1030},17,[1032,1036,1040,1044,1048,1052,1056,1060,1065,1070,1074,1078,1082,1086,1090,1094,1098,1102,1106,1110,1114],{"type":324,"tag":361,"props":1033,"children":1034},{"style":989},[1035],{"type":329,"value":992},{"type":324,"tag":361,"props":1037,"children":1038},{"style":629},[1039],{"type":329,"value":965},{"type":324,"tag":361,"props":1041,"children":1042},{"style":681},[1043],{"type":329,"value":321},{"type":324,"tag":361,"props":1045,"children":1046},{"style":675},[1047],{"type":329,"value":678},{"type":324,"tag":361,"props":1049,"children":1050},{"style":681},[1051],{"type":329,"value":745},{"type":324,"tag":361,"props":1053,"children":1054},{"style":686},[1055],{"type":329,"value":699},{"type":324,"tag":361,"props":1057,"children":1058},{"style":702},[1059],{"type":329,"value":770},{"type":324,"tag":361,"props":1061,"children":1062},{"style":686},[1063],{"type":329,"value":1064}," &&",{"type":324,"tag":361,"props":1066,"children":1067},{"style":681},[1068],{"type":329,"value":1069}," root",{"type":324,"tag":361,"props":1071,"children":1072},{"style":675},[1073],{"type":329,"value":678},{"type":324,"tag":361,"props":1075,"children":1076},{"style":681},[1077],{"type":329,"value":799},{"type":324,"tag":361,"props":1079,"children":1080},{"style":686},[1081],{"type":329,"value":699},{"type":324,"tag":361,"props":1083,"children":1084},{"style":702},[1085],{"type":329,"value":770},{"type":324,"tag":361,"props":1087,"children":1088},{"style":629},[1089],{"type":329,"value":1013},{"type":324,"tag":361,"props":1091,"children":1092},{"style":989},[1093],{"type":329,"value":1018},{"type":324,"tag":361,"props":1095,"children":1096},{"style":681},[1097],{"type":329,"value":1069},{"type":324,"tag":361,"props":1099,"children":1100},{"style":675},[1101],{"type":329,"value":678},{"type":324,"tag":361,"props":1103,"children":1104},{"style":681},[1105],{"type":329,"value":638},{"type":324,"tag":361,"props":1107,"children":1108},{"style":686},[1109],{"type":329,"value":699},{"type":324,"tag":361,"props":1111,"children":1112},{"style":681},[1113],{"type":329,"value":978},{"type":324,"tag":361,"props":1115,"children":1116},{"style":641},[1117],{"type":329,"value":729},{"type":324,"tag":361,"props":1119,"children":1121},{"class":363,"line":1120},18,[1122,1127],{"type":324,"tag":361,"props":1123,"children":1124},{"style":989},[1125],{"type":329,"value":1126},"  return",{"type":324,"tag":361,"props":1128,"children":1129},{"style":629},[1130],{"type":329,"value":1131}," (\n",{"type":324,"tag":361,"props":1133,"children":1135},{"class":363,"line":1134},19,[1136,1141,1145,1149,1153,1157,1161,1165,1170,1174,1178,1182,1186],{"type":324,"tag":361,"props":1137,"children":1138},{"style":623},[1139],{"type":329,"value":1140},"    hasPathSum",{"type":324,"tag":361,"props":1142,"children":1143},{"style":629},[1144],{"type":329,"value":632},{"type":324,"tag":361,"props":1146,"children":1147},{"style":681},[1148],{"type":329,"value":321},{"type":324,"tag":361,"props":1150,"children":1151},{"style":675},[1152],{"type":329,"value":678},{"type":324,"tag":361,"props":1154,"children":1155},{"style":681},[1156],{"type":329,"value":745},{"type":324,"tag":361,"props":1158,"children":1159},{"style":641},[1160],{"type":329,"value":644},{"type":324,"tag":361,"props":1162,"children":1163},{"style":681},[1164],{"type":329,"value":978},{"type":324,"tag":361,"props":1166,"children":1167},{"style":686},[1168],{"type":329,"value":1169}," -",{"type":324,"tag":361,"props":1171,"children":1172},{"style":681},[1173],{"type":329,"value":1069},{"type":324,"tag":361,"props":1175,"children":1176},{"style":675},[1177],{"type":329,"value":678},{"type":324,"tag":361,"props":1179,"children":1180},{"style":681},[1181],{"type":329,"value":638},{"type":324,"tag":361,"props":1183,"children":1184},{"style":629},[1185],{"type":329,"value":1013},{"type":324,"tag":361,"props":1187,"children":1188},{"style":686},[1189],{"type":329,"value":1190},"||\n",{"type":324,"tag":361,"props":1192,"children":1194},{"class":363,"line":1193},20,[1195,1199,1203,1207,1211,1215,1219,1223,1227,1231,1235,1239],{"type":324,"tag":361,"props":1196,"children":1197},{"style":623},[1198],{"type":329,"value":1140},{"type":324,"tag":361,"props":1200,"children":1201},{"style":629},[1202],{"type":329,"value":632},{"type":324,"tag":361,"props":1204,"children":1205},{"style":681},[1206],{"type":329,"value":321},{"type":324,"tag":361,"props":1208,"children":1209},{"style":675},[1210],{"type":329,"value":678},{"type":324,"tag":361,"props":1212,"children":1213},{"style":681},[1214],{"type":329,"value":799},{"type":324,"tag":361,"props":1216,"children":1217},{"style":641},[1218],{"type":329,"value":644},{"type":324,"tag":361,"props":1220,"children":1221},{"style":681},[1222],{"type":329,"value":978},{"type":324,"tag":361,"props":1224,"children":1225},{"style":686},[1226],{"type":329,"value":1169},{"type":324,"tag":361,"props":1228,"children":1229},{"style":681},[1230],{"type":329,"value":1069},{"type":324,"tag":361,"props":1232,"children":1233},{"style":675},[1234],{"type":329,"value":678},{"type":324,"tag":361,"props":1236,"children":1237},{"style":681},[1238],{"type":329,"value":638},{"type":324,"tag":361,"props":1240,"children":1241},{"style":629},[1242],{"type":329,"value":1243},")\n",{"type":324,"tag":361,"props":1245,"children":1247},{"class":363,"line":1246},21,[1248,1253],{"type":324,"tag":361,"props":1249,"children":1250},{"style":629},[1251],{"type":329,"value":1252},"  )",{"type":324,"tag":361,"props":1254,"children":1255},{"style":641},[1256],{"type":329,"value":729},{"type":324,"tag":361,"props":1258,"children":1260},{"class":363,"line":1259},22,[1261,1266],{"type":324,"tag":361,"props":1262,"children":1263},{"style":629},[1264],{"type":329,"value":1265},"}",{"type":324,"tag":361,"props":1267,"children":1268},{"style":641},[1269],{"type":329,"value":729},{"type":324,"tag":1271,"props":1272,"children":1273},"style",{},[1274],{"type":329,"value":1275},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":317,"searchDepth":484,"depth":484,"links":1277},[1278,1279],{"id":563,"depth":396,"text":563},{"id":568,"depth":396,"text":568,"children":1280},[1281],{"id":574,"depth":405,"text":577},"markdown","content:2.code:1.algorithm:2.leetcode:112.path-sum.md","content","2.code/1.algorithm/2.leetcode/112.path-sum.md",[1287,1289],{"_path":152,"title":151,"description":1288},"给定一个二叉树，找出其最小深度。",{"_path":158,"title":157,"description":1290},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",1712076271248]