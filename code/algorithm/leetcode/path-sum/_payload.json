[{"data":1,"prerenderedAt":1257},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/path-sum":320,"/code/algorithm/leetcode/path-sum-surround":1252},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,264,313],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,53],{"title":41,"_path":42,"children":43},"剑指 offer","/code/algorithm/sword-ofter",[44,47,50],{"title":45,"_path":46},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":48,"_path":49},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":51,"_path":52},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":54,"_path":55,"children":56},"力扣 leetCode","/code/algorithm/leetcode",[57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261],{"title":58,"_path":59},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":61,"_path":62},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":64,"_path":65},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":67,"_path":68},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":70,"_path":71},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":73,"_path":74},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":76,"_path":77},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":79,"_path":80},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":82,"_path":83},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":85,"_path":86},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":88,"_path":89},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":91,"_path":92},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":94,"_path":95},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":97,"_path":98},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":100,"_path":101},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":103,"_path":104},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":106,"_path":107},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":109,"_path":110},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":112,"_path":113},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":115,"_path":116},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":118,"_path":119},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":121,"_path":122},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":124,"_path":125},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":127,"_path":128},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":130,"_path":131},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":133,"_path":134},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":136,"_path":137},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":139,"_path":140},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":142,"_path":143},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":145,"_path":146},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":148,"_path":149},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":151,"_path":152},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":154,"_path":155},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":157,"_path":158},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":160,"_path":161},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":163,"_path":164},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":166,"_path":167},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":169,"_path":170},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":172,"_path":173},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":175,"_path":176},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":178,"_path":179},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":181,"_path":182},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":184,"_path":185},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":187,"_path":188},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":190,"_path":191},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":193,"_path":194},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":196,"_path":197},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":199,"_path":200},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":202,"_path":203},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":205,"_path":206},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":208,"_path":209},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":211,"_path":212},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":214,"_path":215},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":217,"_path":218},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":220,"_path":221},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":223,"_path":224},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":226,"_path":227},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":229,"_path":230},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":232,"_path":233},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":235,"_path":236},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":238,"_path":239},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":241,"_path":242},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":244,"_path":245},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":247,"_path":248},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":250,"_path":251},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":253,"_path":254},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":256,"_path":257},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":259,"_path":260},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":262,"_path":263},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":265,"_path":266,"children":267},"源码实现","/code/source",[268,293,306],{"title":269,"_path":270,"children":271},"原生 api","/code/source/native-api",[272,275,278,281,284,287,290],{"title":273,"_path":274},"ajax","/code/source/native-api/ajax",{"title":276,"_path":277},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":279,"_path":280},"new 操作符","/code/source/native-api/new",{"title":282,"_path":283},"instanceof 关键字","/code/source/native-api/instanceof",{"title":285,"_path":286},"定时器","/code/source/native-api/timer",{"title":288,"_path":289},"JSON.stringify","/code/source/native-api/json-stringify",{"title":291,"_path":292},"Iterator 迭代器","/code/source/native-api/iterator",{"title":294,"_path":295,"children":296},"数组 Array","/code/source/array",[297,300,303],{"title":298,"_path":299},"数组去重","/code/source/array/remove-duplicate",{"title":301,"_path":302},"数组扁平化","/code/source/array/flat",{"title":304,"_path":305},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":307,"_path":308,"children":309},"字符串 String","/code/source/string",[310],{"title":311,"_path":312},"repeat()","/code/source/string/repeat",{"title":314,"_path":315,"children":316},"业务场景","/code/scene",[317],{"title":318,"_path":319},"顺序打印 url 并支持 retry","/code/scene/promise-url-retry",{"_path":161,"_dir":321,"_draft":322,"_partial":322,"_locale":323,"title":160,"description":324,"url":325,"body":326,"_type":1247,"_id":1248,"_source":1249,"_file":1250,"_extension":1251},"leetcode",false,"","给你二叉树的根节点 root 和一个表示目标和的整数 targetSum 。判断该树中是否存在 根节点到叶子节点 的路径，这条路径上所有节点值相加等于目标和 targetSum 。如果存在，返回 true ；否则，返回 false 。","https://leetcode.cn/problems/path-sum",{"type":327,"children":328,"toc":1241},"root",[329,336,341,346,355,394,399,407,465,470,500,505,525,531,536,543,1235],{"type":330,"tag":331,"props":332,"children":333},"element","p",{},[334],{"type":335,"value":324},"text",{"type":330,"tag":331,"props":337,"children":338},{},[339],{"type":335,"value":340},"叶子节点 是指没有子节点的节点。",{"type":330,"tag":331,"props":342,"children":343},{},[344],{"type":335,"value":345},"示例 1：",{"type":330,"tag":331,"props":347,"children":348},{},[349],{"type":330,"tag":350,"props":351,"children":354},"img",{"alt":352,"src":353},"pathsum1","/img/code_leetcode_No.112_pathsum1.png",[],{"type":330,"tag":356,"props":357,"children":360},"pre",{"className":358,"code":359,"language":335,"meta":323,"style":323},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n输出：true\n解释：等于目标和的根节点到叶节点路径如上图所示。\n",[361],{"type":330,"tag":362,"props":363,"children":364},"code",{"__ignoreMap":323},[365,376,385],{"type":330,"tag":366,"props":367,"children":370},"span",{"class":368,"line":369},"line",1,[371],{"type":330,"tag":366,"props":372,"children":373},{},[374],{"type":335,"value":375},"输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n",{"type":330,"tag":366,"props":377,"children":379},{"class":368,"line":378},2,[380],{"type":330,"tag":366,"props":381,"children":382},{},[383],{"type":335,"value":384},"输出：true\n",{"type":330,"tag":366,"props":386,"children":388},{"class":368,"line":387},3,[389],{"type":330,"tag":366,"props":390,"children":391},{},[392],{"type":335,"value":393},"解释：等于目标和的根节点到叶节点路径如上图所示。\n",{"type":330,"tag":331,"props":395,"children":396},{},[397],{"type":335,"value":398},"示例 2：",{"type":330,"tag":331,"props":400,"children":401},{},[402],{"type":330,"tag":350,"props":403,"children":406},{"alt":404,"src":405},"pathsum2","/img/code_leetcode_No.112_pathsum2.png",[],{"type":330,"tag":356,"props":408,"children":410},{"className":358,"code":409,"language":335,"meta":323,"style":323},"输入：root = [1,2,3], targetSum = 5\n输出：false\n解释：树中存在两条根节点到叶子节点的路径：\n(1 --> 2): 和为 3\n(1 --> 3): 和为 4\n不存在 sum = 5 的根节点到叶子节点的路径。\n",[411],{"type":330,"tag":362,"props":412,"children":413},{"__ignoreMap":323},[414,422,430,438,447,456],{"type":330,"tag":366,"props":415,"children":416},{"class":368,"line":369},[417],{"type":330,"tag":366,"props":418,"children":419},{},[420],{"type":335,"value":421},"输入：root = [1,2,3], targetSum = 5\n",{"type":330,"tag":366,"props":423,"children":424},{"class":368,"line":378},[425],{"type":330,"tag":366,"props":426,"children":427},{},[428],{"type":335,"value":429},"输出：false\n",{"type":330,"tag":366,"props":431,"children":432},{"class":368,"line":387},[433],{"type":330,"tag":366,"props":434,"children":435},{},[436],{"type":335,"value":437},"解释：树中存在两条根节点到叶子节点的路径：\n",{"type":330,"tag":366,"props":439,"children":441},{"class":368,"line":440},4,[442],{"type":330,"tag":366,"props":443,"children":444},{},[445],{"type":335,"value":446},"(1 --> 2): 和为 3\n",{"type":330,"tag":366,"props":448,"children":450},{"class":368,"line":449},5,[451],{"type":330,"tag":366,"props":452,"children":453},{},[454],{"type":335,"value":455},"(1 --> 3): 和为 4\n",{"type":330,"tag":366,"props":457,"children":459},{"class":368,"line":458},6,[460],{"type":330,"tag":366,"props":461,"children":462},{},[463],{"type":335,"value":464},"不存在 sum = 5 的根节点到叶子节点的路径。\n",{"type":330,"tag":331,"props":466,"children":467},{},[468],{"type":335,"value":469},"示例 3：",{"type":330,"tag":356,"props":471,"children":473},{"className":358,"code":472,"language":335,"meta":323,"style":323},"输入：root = [], targetSum = 0\n输出：false\n解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",[474],{"type":330,"tag":362,"props":475,"children":476},{"__ignoreMap":323},[477,485,492],{"type":330,"tag":366,"props":478,"children":479},{"class":368,"line":369},[480],{"type":330,"tag":366,"props":481,"children":482},{},[483],{"type":335,"value":484},"输入：root = [], targetSum = 0\n",{"type":330,"tag":366,"props":486,"children":487},{"class":368,"line":378},[488],{"type":330,"tag":366,"props":489,"children":490},{},[491],{"type":335,"value":429},{"type":330,"tag":366,"props":493,"children":494},{"class":368,"line":387},[495],{"type":330,"tag":366,"props":496,"children":497},{},[498],{"type":335,"value":499},"解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",{"type":330,"tag":331,"props":501,"children":502},{},[503],{"type":335,"value":504},"提示：",{"type":330,"tag":506,"props":507,"children":508},"ul",{},[509,515,520],{"type":330,"tag":510,"props":511,"children":512},"li",{},[513],{"type":335,"value":514},"树中节点的数目在范围 [0, 5000] 内",{"type":330,"tag":510,"props":516,"children":517},{},[518],{"type":335,"value":519},"-1000 \u003C= Node.val \u003C= 1000",{"type":330,"tag":510,"props":521,"children":522},{},[523],{"type":335,"value":524},"-1000 \u003C= targetSum \u003C= 1000",{"type":330,"tag":526,"props":527,"children":529},"h2",{"id":528},"解题思路",[530],{"type":335,"value":528},{"type":330,"tag":526,"props":532,"children":534},{"id":533},"实现",[535],{"type":335,"value":533},{"type":330,"tag":537,"props":538,"children":540},"h3",{"id":539},"深度优先搜索-dfs",[541],{"type":335,"value":542},"深度优先搜索 - dfs",{"type":330,"tag":356,"props":544,"children":548},{"className":545,"code":546,"language":547,"meta":323,"style":323},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {boolean}\n */\nvar hasPathSum = function (root, targetSum) {\n  if (root === null) return false;\n  if (root.left === null && root.right === null) return root.val === targetSum;\n  return (\n    hasPathSum(root.left, targetSum - root.val) ||\n    hasPathSum(root.right, targetSum - root.val)\n  );\n};\n","js",[549],{"type":330,"tag":362,"props":550,"children":551},{"__ignoreMap":323},[552,561,569,577,629,695,748,801,810,820,828,855,877,895,903,948,993,1083,1097,1156,1209,1222],{"type":330,"tag":366,"props":553,"children":554},{"class":368,"line":369},[555],{"type":330,"tag":366,"props":556,"children":558},{"style":557},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[559],{"type":335,"value":560},"/**\n",{"type":330,"tag":366,"props":562,"children":563},{"class":368,"line":378},[564],{"type":330,"tag":366,"props":565,"children":566},{"style":557},[567],{"type":335,"value":568}," * Definition for a binary tree node.\n",{"type":330,"tag":366,"props":570,"children":571},{"class":368,"line":387},[572],{"type":330,"tag":366,"props":573,"children":574},{"style":557},[575],{"type":335,"value":576}," */\n",{"type":330,"tag":366,"props":578,"children":579},{"class":368,"line":440},[580,586,592,598,604,610,615,619,624],{"type":330,"tag":366,"props":581,"children":583},{"style":582},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[584],{"type":335,"value":585},"function",{"type":330,"tag":366,"props":587,"children":589},{"style":588},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[590],{"type":335,"value":591}," TreeNode",{"type":330,"tag":366,"props":593,"children":595},{"style":594},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[596],{"type":335,"value":597},"(",{"type":330,"tag":366,"props":599,"children":601},{"style":600},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[602],{"type":335,"value":603},"val",{"type":330,"tag":366,"props":605,"children":607},{"style":606},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[608],{"type":335,"value":609},",",{"type":330,"tag":366,"props":611,"children":612},{"style":600},[613],{"type":335,"value":614}," left",{"type":330,"tag":366,"props":616,"children":617},{"style":606},[618],{"type":335,"value":609},{"type":330,"tag":366,"props":620,"children":621},{"style":600},[622],{"type":335,"value":623}," right",{"type":330,"tag":366,"props":625,"children":626},{"style":594},[627],{"type":335,"value":628},") {\n",{"type":330,"tag":366,"props":630,"children":631},{"class":368,"line":449},[632,638,644,649,655,660,665,671,676,681,686,690],{"type":330,"tag":366,"props":633,"children":635},{"style":634},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[636],{"type":335,"value":637},"  this",{"type":330,"tag":366,"props":639,"children":641},{"style":640},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[642],{"type":335,"value":643},".",{"type":330,"tag":366,"props":645,"children":647},{"style":646},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[648],{"type":335,"value":603},{"type":330,"tag":366,"props":650,"children":652},{"style":651},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[653],{"type":335,"value":654}," =",{"type":330,"tag":366,"props":656,"children":657},{"style":646},[658],{"type":335,"value":659}," val",{"type":330,"tag":366,"props":661,"children":662},{"style":651},[663],{"type":335,"value":664}," ===",{"type":330,"tag":366,"props":666,"children":668},{"style":667},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[669],{"type":335,"value":670}," undefined",{"type":330,"tag":366,"props":672,"children":673},{"style":651},[674],{"type":335,"value":675}," ?",{"type":330,"tag":366,"props":677,"children":678},{"style":667},[679],{"type":335,"value":680}," 0",{"type":330,"tag":366,"props":682,"children":683},{"style":651},[684],{"type":335,"value":685}," :",{"type":330,"tag":366,"props":687,"children":688},{"style":646},[689],{"type":335,"value":659},{"type":330,"tag":366,"props":691,"children":692},{"style":606},[693],{"type":335,"value":694},";\n",{"type":330,"tag":366,"props":696,"children":697},{"class":368,"line":458},[698,702,706,711,715,719,723,727,731,736,740,744],{"type":330,"tag":366,"props":699,"children":700},{"style":634},[701],{"type":335,"value":637},{"type":330,"tag":366,"props":703,"children":704},{"style":640},[705],{"type":335,"value":643},{"type":330,"tag":366,"props":707,"children":708},{"style":646},[709],{"type":335,"value":710},"left",{"type":330,"tag":366,"props":712,"children":713},{"style":651},[714],{"type":335,"value":654},{"type":330,"tag":366,"props":716,"children":717},{"style":646},[718],{"type":335,"value":614},{"type":330,"tag":366,"props":720,"children":721},{"style":651},[722],{"type":335,"value":664},{"type":330,"tag":366,"props":724,"children":725},{"style":667},[726],{"type":335,"value":670},{"type":330,"tag":366,"props":728,"children":729},{"style":651},[730],{"type":335,"value":675},{"type":330,"tag":366,"props":732,"children":733},{"style":667},[734],{"type":335,"value":735}," null",{"type":330,"tag":366,"props":737,"children":738},{"style":651},[739],{"type":335,"value":685},{"type":330,"tag":366,"props":741,"children":742},{"style":646},[743],{"type":335,"value":614},{"type":330,"tag":366,"props":745,"children":746},{"style":606},[747],{"type":335,"value":694},{"type":330,"tag":366,"props":749,"children":751},{"class":368,"line":750},7,[752,756,760,765,769,773,777,781,785,789,793,797],{"type":330,"tag":366,"props":753,"children":754},{"style":634},[755],{"type":335,"value":637},{"type":330,"tag":366,"props":757,"children":758},{"style":640},[759],{"type":335,"value":643},{"type":330,"tag":366,"props":761,"children":762},{"style":646},[763],{"type":335,"value":764},"right",{"type":330,"tag":366,"props":766,"children":767},{"style":651},[768],{"type":335,"value":654},{"type":330,"tag":366,"props":770,"children":771},{"style":646},[772],{"type":335,"value":623},{"type":330,"tag":366,"props":774,"children":775},{"style":651},[776],{"type":335,"value":664},{"type":330,"tag":366,"props":778,"children":779},{"style":667},[780],{"type":335,"value":670},{"type":330,"tag":366,"props":782,"children":783},{"style":651},[784],{"type":335,"value":675},{"type":330,"tag":366,"props":786,"children":787},{"style":667},[788],{"type":335,"value":735},{"type":330,"tag":366,"props":790,"children":791},{"style":651},[792],{"type":335,"value":685},{"type":330,"tag":366,"props":794,"children":795},{"style":646},[796],{"type":335,"value":623},{"type":330,"tag":366,"props":798,"children":799},{"style":606},[800],{"type":335,"value":694},{"type":330,"tag":366,"props":802,"children":804},{"class":368,"line":803},8,[805],{"type":330,"tag":366,"props":806,"children":807},{"style":594},[808],{"type":335,"value":809},"}\n",{"type":330,"tag":366,"props":811,"children":813},{"class":368,"line":812},9,[814],{"type":330,"tag":366,"props":815,"children":817},{"emptyLinePlaceholder":816},true,[818],{"type":335,"value":819},"\n",{"type":330,"tag":366,"props":821,"children":823},{"class":368,"line":822},10,[824],{"type":330,"tag":366,"props":825,"children":826},{"style":557},[827],{"type":335,"value":560},{"type":330,"tag":366,"props":829,"children":831},{"class":368,"line":830},11,[832,837,843,849],{"type":330,"tag":366,"props":833,"children":834},{"style":557},[835],{"type":335,"value":836}," * ",{"type":330,"tag":366,"props":838,"children":840},{"style":839},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[841],{"type":335,"value":842},"@param",{"type":330,"tag":366,"props":844,"children":846},{"style":845},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[847],{"type":335,"value":848}," {TreeNode}",{"type":330,"tag":366,"props":850,"children":852},{"style":851},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[853],{"type":335,"value":854}," root\n",{"type":330,"tag":366,"props":856,"children":858},{"class":368,"line":857},12,[859,863,867,872],{"type":330,"tag":366,"props":860,"children":861},{"style":557},[862],{"type":335,"value":836},{"type":330,"tag":366,"props":864,"children":865},{"style":839},[866],{"type":335,"value":842},{"type":330,"tag":366,"props":868,"children":869},{"style":845},[870],{"type":335,"value":871}," {number}",{"type":330,"tag":366,"props":873,"children":874},{"style":851},[875],{"type":335,"value":876}," targetSum\n",{"type":330,"tag":366,"props":878,"children":880},{"class":368,"line":879},13,[881,885,890],{"type":330,"tag":366,"props":882,"children":883},{"style":557},[884],{"type":335,"value":836},{"type":330,"tag":366,"props":886,"children":887},{"style":839},[888],{"type":335,"value":889},"@return",{"type":330,"tag":366,"props":891,"children":892},{"style":845},[893],{"type":335,"value":894}," {boolean}\n",{"type":330,"tag":366,"props":896,"children":898},{"class":368,"line":897},14,[899],{"type":330,"tag":366,"props":900,"children":901},{"style":557},[902],{"type":335,"value":576},{"type":330,"tag":366,"props":904,"children":906},{"class":368,"line":905},15,[907,912,917,921,926,931,935,939,944],{"type":330,"tag":366,"props":908,"children":909},{"style":582},[910],{"type":335,"value":911},"var",{"type":330,"tag":366,"props":913,"children":914},{"style":588},[915],{"type":335,"value":916}," hasPathSum",{"type":330,"tag":366,"props":918,"children":919},{"style":651},[920],{"type":335,"value":654},{"type":330,"tag":366,"props":922,"children":923},{"style":582},[924],{"type":335,"value":925}," function",{"type":330,"tag":366,"props":927,"children":928},{"style":594},[929],{"type":335,"value":930}," (",{"type":330,"tag":366,"props":932,"children":933},{"style":600},[934],{"type":335,"value":327},{"type":330,"tag":366,"props":936,"children":937},{"style":606},[938],{"type":335,"value":609},{"type":330,"tag":366,"props":940,"children":941},{"style":600},[942],{"type":335,"value":943}," targetSum",{"type":330,"tag":366,"props":945,"children":946},{"style":594},[947],{"type":335,"value":628},{"type":330,"tag":366,"props":949,"children":951},{"class":368,"line":950},16,[952,958,962,966,970,974,979,984,989],{"type":330,"tag":366,"props":953,"children":955},{"style":954},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[956],{"type":335,"value":957},"  if",{"type":330,"tag":366,"props":959,"children":960},{"style":594},[961],{"type":335,"value":930},{"type":330,"tag":366,"props":963,"children":964},{"style":646},[965],{"type":335,"value":327},{"type":330,"tag":366,"props":967,"children":968},{"style":651},[969],{"type":335,"value":664},{"type":330,"tag":366,"props":971,"children":972},{"style":667},[973],{"type":335,"value":735},{"type":330,"tag":366,"props":975,"children":976},{"style":594},[977],{"type":335,"value":978},") ",{"type":330,"tag":366,"props":980,"children":981},{"style":954},[982],{"type":335,"value":983},"return",{"type":330,"tag":366,"props":985,"children":986},{"style":667},[987],{"type":335,"value":988}," false",{"type":330,"tag":366,"props":990,"children":991},{"style":606},[992],{"type":335,"value":694},{"type":330,"tag":366,"props":994,"children":996},{"class":368,"line":995},17,[997,1001,1005,1009,1013,1017,1021,1025,1030,1035,1039,1043,1047,1051,1055,1059,1063,1067,1071,1075,1079],{"type":330,"tag":366,"props":998,"children":999},{"style":954},[1000],{"type":335,"value":957},{"type":330,"tag":366,"props":1002,"children":1003},{"style":594},[1004],{"type":335,"value":930},{"type":330,"tag":366,"props":1006,"children":1007},{"style":646},[1008],{"type":335,"value":327},{"type":330,"tag":366,"props":1010,"children":1011},{"style":640},[1012],{"type":335,"value":643},{"type":330,"tag":366,"props":1014,"children":1015},{"style":646},[1016],{"type":335,"value":710},{"type":330,"tag":366,"props":1018,"children":1019},{"style":651},[1020],{"type":335,"value":664},{"type":330,"tag":366,"props":1022,"children":1023},{"style":667},[1024],{"type":335,"value":735},{"type":330,"tag":366,"props":1026,"children":1027},{"style":651},[1028],{"type":335,"value":1029}," &&",{"type":330,"tag":366,"props":1031,"children":1032},{"style":646},[1033],{"type":335,"value":1034}," root",{"type":330,"tag":366,"props":1036,"children":1037},{"style":640},[1038],{"type":335,"value":643},{"type":330,"tag":366,"props":1040,"children":1041},{"style":646},[1042],{"type":335,"value":764},{"type":330,"tag":366,"props":1044,"children":1045},{"style":651},[1046],{"type":335,"value":664},{"type":330,"tag":366,"props":1048,"children":1049},{"style":667},[1050],{"type":335,"value":735},{"type":330,"tag":366,"props":1052,"children":1053},{"style":594},[1054],{"type":335,"value":978},{"type":330,"tag":366,"props":1056,"children":1057},{"style":954},[1058],{"type":335,"value":983},{"type":330,"tag":366,"props":1060,"children":1061},{"style":646},[1062],{"type":335,"value":1034},{"type":330,"tag":366,"props":1064,"children":1065},{"style":640},[1066],{"type":335,"value":643},{"type":330,"tag":366,"props":1068,"children":1069},{"style":646},[1070],{"type":335,"value":603},{"type":330,"tag":366,"props":1072,"children":1073},{"style":651},[1074],{"type":335,"value":664},{"type":330,"tag":366,"props":1076,"children":1077},{"style":646},[1078],{"type":335,"value":943},{"type":330,"tag":366,"props":1080,"children":1081},{"style":606},[1082],{"type":335,"value":694},{"type":330,"tag":366,"props":1084,"children":1086},{"class":368,"line":1085},18,[1087,1092],{"type":330,"tag":366,"props":1088,"children":1089},{"style":954},[1090],{"type":335,"value":1091},"  return",{"type":330,"tag":366,"props":1093,"children":1094},{"style":594},[1095],{"type":335,"value":1096}," (\n",{"type":330,"tag":366,"props":1098,"children":1100},{"class":368,"line":1099},19,[1101,1106,1110,1114,1118,1122,1126,1130,1135,1139,1143,1147,1151],{"type":330,"tag":366,"props":1102,"children":1103},{"style":588},[1104],{"type":335,"value":1105},"    hasPathSum",{"type":330,"tag":366,"props":1107,"children":1108},{"style":594},[1109],{"type":335,"value":597},{"type":330,"tag":366,"props":1111,"children":1112},{"style":646},[1113],{"type":335,"value":327},{"type":330,"tag":366,"props":1115,"children":1116},{"style":640},[1117],{"type":335,"value":643},{"type":330,"tag":366,"props":1119,"children":1120},{"style":646},[1121],{"type":335,"value":710},{"type":330,"tag":366,"props":1123,"children":1124},{"style":606},[1125],{"type":335,"value":609},{"type":330,"tag":366,"props":1127,"children":1128},{"style":646},[1129],{"type":335,"value":943},{"type":330,"tag":366,"props":1131,"children":1132},{"style":651},[1133],{"type":335,"value":1134}," -",{"type":330,"tag":366,"props":1136,"children":1137},{"style":646},[1138],{"type":335,"value":1034},{"type":330,"tag":366,"props":1140,"children":1141},{"style":640},[1142],{"type":335,"value":643},{"type":330,"tag":366,"props":1144,"children":1145},{"style":646},[1146],{"type":335,"value":603},{"type":330,"tag":366,"props":1148,"children":1149},{"style":594},[1150],{"type":335,"value":978},{"type":330,"tag":366,"props":1152,"children":1153},{"style":651},[1154],{"type":335,"value":1155},"||\n",{"type":330,"tag":366,"props":1157,"children":1159},{"class":368,"line":1158},20,[1160,1164,1168,1172,1176,1180,1184,1188,1192,1196,1200,1204],{"type":330,"tag":366,"props":1161,"children":1162},{"style":588},[1163],{"type":335,"value":1105},{"type":330,"tag":366,"props":1165,"children":1166},{"style":594},[1167],{"type":335,"value":597},{"type":330,"tag":366,"props":1169,"children":1170},{"style":646},[1171],{"type":335,"value":327},{"type":330,"tag":366,"props":1173,"children":1174},{"style":640},[1175],{"type":335,"value":643},{"type":330,"tag":366,"props":1177,"children":1178},{"style":646},[1179],{"type":335,"value":764},{"type":330,"tag":366,"props":1181,"children":1182},{"style":606},[1183],{"type":335,"value":609},{"type":330,"tag":366,"props":1185,"children":1186},{"style":646},[1187],{"type":335,"value":943},{"type":330,"tag":366,"props":1189,"children":1190},{"style":651},[1191],{"type":335,"value":1134},{"type":330,"tag":366,"props":1193,"children":1194},{"style":646},[1195],{"type":335,"value":1034},{"type":330,"tag":366,"props":1197,"children":1198},{"style":640},[1199],{"type":335,"value":643},{"type":330,"tag":366,"props":1201,"children":1202},{"style":646},[1203],{"type":335,"value":603},{"type":330,"tag":366,"props":1205,"children":1206},{"style":594},[1207],{"type":335,"value":1208},")\n",{"type":330,"tag":366,"props":1210,"children":1212},{"class":368,"line":1211},21,[1213,1218],{"type":330,"tag":366,"props":1214,"children":1215},{"style":594},[1216],{"type":335,"value":1217},"  )",{"type":330,"tag":366,"props":1219,"children":1220},{"style":606},[1221],{"type":335,"value":694},{"type":330,"tag":366,"props":1223,"children":1225},{"class":368,"line":1224},22,[1226,1231],{"type":330,"tag":366,"props":1227,"children":1228},{"style":594},[1229],{"type":335,"value":1230},"}",{"type":330,"tag":366,"props":1232,"children":1233},{"style":606},[1234],{"type":335,"value":694},{"type":330,"tag":1236,"props":1237,"children":1238},"style",{},[1239],{"type":335,"value":1240},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":323,"searchDepth":449,"depth":449,"links":1242},[1243,1244],{"id":528,"depth":378,"text":528},{"id":533,"depth":378,"text":533,"children":1245},[1246],{"id":539,"depth":387,"text":542},"markdown","content:2.code:1.algorithm:2.leetcode:112.path-sum.md","content","2.code/1.algorithm/2.leetcode/112.path-sum.md","md",[1253,1255],{"_path":158,"title":157,"description":1254},"给定一个二叉树，找出其最小深度。",{"_path":164,"title":163,"description":1256},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",1712112509241]