[{"data":1,"prerenderedAt":1296},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/path-sum":359,"/code/algorithm/leetcode/path-sum-surround":1291},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,269,318],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263,266],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.165 比较版本号","/code/algorithm/leetcode/compare-version-numbers",{"title":198,"_path":199},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":201,"_path":202},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":204,"_path":205},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":207,"_path":208},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":210,"_path":211},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":213,"_path":214},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":216,"_path":217},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":219,"_path":220},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":222,"_path":223},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":225,"_path":226},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":228,"_path":229},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":231,"_path":232},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":234,"_path":235},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":237,"_path":238},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":240,"_path":241},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":243,"_path":244},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":246,"_path":247},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":249,"_path":250},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":252,"_path":253},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":255,"_path":256},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":258,"_path":259},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":261,"_path":262},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":264,"_path":265},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":267,"_path":268},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":270,"_path":271,"children":272},"源码实现","/code/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/code/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/code/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/code/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/code/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/code/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/code/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/code/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/code/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/code/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/code/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/code/source/string",[315],{"title":316,"_path":317},"repeat()","/code/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/code/scene",[322,344,347,350,353,356],{"title":323,"_path":324,"children":325},"Promise","/code/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/code/scene/calcuate-object-bytes",{"title":348,"_path":349},"lodash.get","/code/scene/lodash-get",{"title":351,"_path":352},"记忆化请求函数 - 可缓存请求函数","/code/scene/memorize-request",{"title":354,"_path":355},"sku 算法实现","/code/scene/sku",{"title":357,"_path":358},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":163,"_dir":360,"_draft":361,"_partial":361,"_locale":362,"title":162,"description":363,"url":364,"body":365,"_type":1286,"_id":1287,"_source":1288,"_file":1289,"_extension":1290},"leetcode",false,"","给你二叉树的根节点 root 和一个表示目标和的整数 targetSum 。判断该树中是否存在 根节点到叶子节点 的路径，这条路径上所有节点值相加等于目标和 targetSum 。如果存在，返回 true ；否则，返回 false 。","https://leetcode.cn/problems/path-sum",{"type":366,"children":367,"toc":1280},"root",[368,375,380,385,394,433,438,446,504,509,539,544,564,570,575,582,1274],{"type":369,"tag":370,"props":371,"children":372},"element","p",{},[373],{"type":374,"value":363},"text",{"type":369,"tag":370,"props":376,"children":377},{},[378],{"type":374,"value":379},"叶子节点 是指没有子节点的节点。",{"type":369,"tag":370,"props":381,"children":382},{},[383],{"type":374,"value":384},"示例 1：",{"type":369,"tag":370,"props":386,"children":387},{},[388],{"type":369,"tag":389,"props":390,"children":393},"img",{"alt":391,"src":392},"pathsum1","/img/code_leetcode_No.112_pathsum1.png",[],{"type":369,"tag":395,"props":396,"children":399},"pre",{"className":397,"code":398,"language":374,"meta":362,"style":362},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n输出：true\n解释：等于目标和的根节点到叶节点路径如上图所示。\n",[400],{"type":369,"tag":401,"props":402,"children":403},"code",{"__ignoreMap":362},[404,415,424],{"type":369,"tag":405,"props":406,"children":409},"span",{"class":407,"line":408},"line",1,[410],{"type":369,"tag":405,"props":411,"children":412},{},[413],{"type":374,"value":414},"输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n",{"type":369,"tag":405,"props":416,"children":418},{"class":407,"line":417},2,[419],{"type":369,"tag":405,"props":420,"children":421},{},[422],{"type":374,"value":423},"输出：true\n",{"type":369,"tag":405,"props":425,"children":427},{"class":407,"line":426},3,[428],{"type":369,"tag":405,"props":429,"children":430},{},[431],{"type":374,"value":432},"解释：等于目标和的根节点到叶节点路径如上图所示。\n",{"type":369,"tag":370,"props":434,"children":435},{},[436],{"type":374,"value":437},"示例 2：",{"type":369,"tag":370,"props":439,"children":440},{},[441],{"type":369,"tag":389,"props":442,"children":445},{"alt":443,"src":444},"pathsum2","/img/code_leetcode_No.112_pathsum2.png",[],{"type":369,"tag":395,"props":447,"children":449},{"className":397,"code":448,"language":374,"meta":362,"style":362},"输入：root = [1,2,3], targetSum = 5\n输出：false\n解释：树中存在两条根节点到叶子节点的路径：\n(1 --> 2): 和为 3\n(1 --> 3): 和为 4\n不存在 sum = 5 的根节点到叶子节点的路径。\n",[450],{"type":369,"tag":401,"props":451,"children":452},{"__ignoreMap":362},[453,461,469,477,486,495],{"type":369,"tag":405,"props":454,"children":455},{"class":407,"line":408},[456],{"type":369,"tag":405,"props":457,"children":458},{},[459],{"type":374,"value":460},"输入：root = [1,2,3], targetSum = 5\n",{"type":369,"tag":405,"props":462,"children":463},{"class":407,"line":417},[464],{"type":369,"tag":405,"props":465,"children":466},{},[467],{"type":374,"value":468},"输出：false\n",{"type":369,"tag":405,"props":470,"children":471},{"class":407,"line":426},[472],{"type":369,"tag":405,"props":473,"children":474},{},[475],{"type":374,"value":476},"解释：树中存在两条根节点到叶子节点的路径：\n",{"type":369,"tag":405,"props":478,"children":480},{"class":407,"line":479},4,[481],{"type":369,"tag":405,"props":482,"children":483},{},[484],{"type":374,"value":485},"(1 --> 2): 和为 3\n",{"type":369,"tag":405,"props":487,"children":489},{"class":407,"line":488},5,[490],{"type":369,"tag":405,"props":491,"children":492},{},[493],{"type":374,"value":494},"(1 --> 3): 和为 4\n",{"type":369,"tag":405,"props":496,"children":498},{"class":407,"line":497},6,[499],{"type":369,"tag":405,"props":500,"children":501},{},[502],{"type":374,"value":503},"不存在 sum = 5 的根节点到叶子节点的路径。\n",{"type":369,"tag":370,"props":505,"children":506},{},[507],{"type":374,"value":508},"示例 3：",{"type":369,"tag":395,"props":510,"children":512},{"className":397,"code":511,"language":374,"meta":362,"style":362},"输入：root = [], targetSum = 0\n输出：false\n解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",[513],{"type":369,"tag":401,"props":514,"children":515},{"__ignoreMap":362},[516,524,531],{"type":369,"tag":405,"props":517,"children":518},{"class":407,"line":408},[519],{"type":369,"tag":405,"props":520,"children":521},{},[522],{"type":374,"value":523},"输入：root = [], targetSum = 0\n",{"type":369,"tag":405,"props":525,"children":526},{"class":407,"line":417},[527],{"type":369,"tag":405,"props":528,"children":529},{},[530],{"type":374,"value":468},{"type":369,"tag":405,"props":532,"children":533},{"class":407,"line":426},[534],{"type":369,"tag":405,"props":535,"children":536},{},[537],{"type":374,"value":538},"解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",{"type":369,"tag":370,"props":540,"children":541},{},[542],{"type":374,"value":543},"提示：",{"type":369,"tag":545,"props":546,"children":547},"ul",{},[548,554,559],{"type":369,"tag":549,"props":550,"children":551},"li",{},[552],{"type":374,"value":553},"树中节点的数目在范围 [0, 5000] 内",{"type":369,"tag":549,"props":555,"children":556},{},[557],{"type":374,"value":558},"-1000 \u003C= Node.val \u003C= 1000",{"type":369,"tag":549,"props":560,"children":561},{},[562],{"type":374,"value":563},"-1000 \u003C= targetSum \u003C= 1000",{"type":369,"tag":565,"props":566,"children":568},"h2",{"id":567},"解题思路",[569],{"type":374,"value":567},{"type":369,"tag":565,"props":571,"children":573},{"id":572},"实现",[574],{"type":374,"value":572},{"type":369,"tag":576,"props":577,"children":579},"h3",{"id":578},"深度优先搜索-dfs",[580],{"type":374,"value":581},"深度优先搜索 - dfs",{"type":369,"tag":395,"props":583,"children":587},{"className":584,"code":585,"language":586,"meta":362,"style":362},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {boolean}\n */\nvar hasPathSum = function (root, targetSum) {\n  if (root === null) return false;\n  if (root.left === null && root.right === null) return root.val === targetSum;\n  return (\n    hasPathSum(root.left, targetSum - root.val) ||\n    hasPathSum(root.right, targetSum - root.val)\n  );\n};\n","js",[588],{"type":369,"tag":401,"props":589,"children":590},{"__ignoreMap":362},[591,600,608,616,668,734,787,840,849,859,867,894,916,934,942,987,1032,1122,1136,1195,1248,1261],{"type":369,"tag":405,"props":592,"children":593},{"class":407,"line":408},[594],{"type":369,"tag":405,"props":595,"children":597},{"style":596},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[598],{"type":374,"value":599},"/**\n",{"type":369,"tag":405,"props":601,"children":602},{"class":407,"line":417},[603],{"type":369,"tag":405,"props":604,"children":605},{"style":596},[606],{"type":374,"value":607}," * Definition for a binary tree node.\n",{"type":369,"tag":405,"props":609,"children":610},{"class":407,"line":426},[611],{"type":369,"tag":405,"props":612,"children":613},{"style":596},[614],{"type":374,"value":615}," */\n",{"type":369,"tag":405,"props":617,"children":618},{"class":407,"line":479},[619,625,631,637,643,649,654,658,663],{"type":369,"tag":405,"props":620,"children":622},{"style":621},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[623],{"type":374,"value":624},"function",{"type":369,"tag":405,"props":626,"children":628},{"style":627},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[629],{"type":374,"value":630}," TreeNode",{"type":369,"tag":405,"props":632,"children":634},{"style":633},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[635],{"type":374,"value":636},"(",{"type":369,"tag":405,"props":638,"children":640},{"style":639},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[641],{"type":374,"value":642},"val",{"type":369,"tag":405,"props":644,"children":646},{"style":645},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[647],{"type":374,"value":648},",",{"type":369,"tag":405,"props":650,"children":651},{"style":639},[652],{"type":374,"value":653}," left",{"type":369,"tag":405,"props":655,"children":656},{"style":645},[657],{"type":374,"value":648},{"type":369,"tag":405,"props":659,"children":660},{"style":639},[661],{"type":374,"value":662}," right",{"type":369,"tag":405,"props":664,"children":665},{"style":633},[666],{"type":374,"value":667},") {\n",{"type":369,"tag":405,"props":669,"children":670},{"class":407,"line":488},[671,677,683,688,694,699,704,710,715,720,725,729],{"type":369,"tag":405,"props":672,"children":674},{"style":673},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[675],{"type":374,"value":676},"  this",{"type":369,"tag":405,"props":678,"children":680},{"style":679},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[681],{"type":374,"value":682},".",{"type":369,"tag":405,"props":684,"children":686},{"style":685},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[687],{"type":374,"value":642},{"type":369,"tag":405,"props":689,"children":691},{"style":690},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[692],{"type":374,"value":693}," =",{"type":369,"tag":405,"props":695,"children":696},{"style":685},[697],{"type":374,"value":698}," val",{"type":369,"tag":405,"props":700,"children":701},{"style":690},[702],{"type":374,"value":703}," ===",{"type":369,"tag":405,"props":705,"children":707},{"style":706},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[708],{"type":374,"value":709}," undefined",{"type":369,"tag":405,"props":711,"children":712},{"style":690},[713],{"type":374,"value":714}," ?",{"type":369,"tag":405,"props":716,"children":717},{"style":706},[718],{"type":374,"value":719}," 0",{"type":369,"tag":405,"props":721,"children":722},{"style":690},[723],{"type":374,"value":724}," :",{"type":369,"tag":405,"props":726,"children":727},{"style":685},[728],{"type":374,"value":698},{"type":369,"tag":405,"props":730,"children":731},{"style":645},[732],{"type":374,"value":733},";\n",{"type":369,"tag":405,"props":735,"children":736},{"class":407,"line":497},[737,741,745,750,754,758,762,766,770,775,779,783],{"type":369,"tag":405,"props":738,"children":739},{"style":673},[740],{"type":374,"value":676},{"type":369,"tag":405,"props":742,"children":743},{"style":679},[744],{"type":374,"value":682},{"type":369,"tag":405,"props":746,"children":747},{"style":685},[748],{"type":374,"value":749},"left",{"type":369,"tag":405,"props":751,"children":752},{"style":690},[753],{"type":374,"value":693},{"type":369,"tag":405,"props":755,"children":756},{"style":685},[757],{"type":374,"value":653},{"type":369,"tag":405,"props":759,"children":760},{"style":690},[761],{"type":374,"value":703},{"type":369,"tag":405,"props":763,"children":764},{"style":706},[765],{"type":374,"value":709},{"type":369,"tag":405,"props":767,"children":768},{"style":690},[769],{"type":374,"value":714},{"type":369,"tag":405,"props":771,"children":772},{"style":706},[773],{"type":374,"value":774}," null",{"type":369,"tag":405,"props":776,"children":777},{"style":690},[778],{"type":374,"value":724},{"type":369,"tag":405,"props":780,"children":781},{"style":685},[782],{"type":374,"value":653},{"type":369,"tag":405,"props":784,"children":785},{"style":645},[786],{"type":374,"value":733},{"type":369,"tag":405,"props":788,"children":790},{"class":407,"line":789},7,[791,795,799,804,808,812,816,820,824,828,832,836],{"type":369,"tag":405,"props":792,"children":793},{"style":673},[794],{"type":374,"value":676},{"type":369,"tag":405,"props":796,"children":797},{"style":679},[798],{"type":374,"value":682},{"type":369,"tag":405,"props":800,"children":801},{"style":685},[802],{"type":374,"value":803},"right",{"type":369,"tag":405,"props":805,"children":806},{"style":690},[807],{"type":374,"value":693},{"type":369,"tag":405,"props":809,"children":810},{"style":685},[811],{"type":374,"value":662},{"type":369,"tag":405,"props":813,"children":814},{"style":690},[815],{"type":374,"value":703},{"type":369,"tag":405,"props":817,"children":818},{"style":706},[819],{"type":374,"value":709},{"type":369,"tag":405,"props":821,"children":822},{"style":690},[823],{"type":374,"value":714},{"type":369,"tag":405,"props":825,"children":826},{"style":706},[827],{"type":374,"value":774},{"type":369,"tag":405,"props":829,"children":830},{"style":690},[831],{"type":374,"value":724},{"type":369,"tag":405,"props":833,"children":834},{"style":685},[835],{"type":374,"value":662},{"type":369,"tag":405,"props":837,"children":838},{"style":645},[839],{"type":374,"value":733},{"type":369,"tag":405,"props":841,"children":843},{"class":407,"line":842},8,[844],{"type":369,"tag":405,"props":845,"children":846},{"style":633},[847],{"type":374,"value":848},"}\n",{"type":369,"tag":405,"props":850,"children":852},{"class":407,"line":851},9,[853],{"type":369,"tag":405,"props":854,"children":856},{"emptyLinePlaceholder":855},true,[857],{"type":374,"value":858},"\n",{"type":369,"tag":405,"props":860,"children":862},{"class":407,"line":861},10,[863],{"type":369,"tag":405,"props":864,"children":865},{"style":596},[866],{"type":374,"value":599},{"type":369,"tag":405,"props":868,"children":870},{"class":407,"line":869},11,[871,876,882,888],{"type":369,"tag":405,"props":872,"children":873},{"style":596},[874],{"type":374,"value":875}," * ",{"type":369,"tag":405,"props":877,"children":879},{"style":878},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[880],{"type":374,"value":881},"@param",{"type":369,"tag":405,"props":883,"children":885},{"style":884},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[886],{"type":374,"value":887}," {TreeNode}",{"type":369,"tag":405,"props":889,"children":891},{"style":890},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[892],{"type":374,"value":893}," root\n",{"type":369,"tag":405,"props":895,"children":897},{"class":407,"line":896},12,[898,902,906,911],{"type":369,"tag":405,"props":899,"children":900},{"style":596},[901],{"type":374,"value":875},{"type":369,"tag":405,"props":903,"children":904},{"style":878},[905],{"type":374,"value":881},{"type":369,"tag":405,"props":907,"children":908},{"style":884},[909],{"type":374,"value":910}," {number}",{"type":369,"tag":405,"props":912,"children":913},{"style":890},[914],{"type":374,"value":915}," targetSum\n",{"type":369,"tag":405,"props":917,"children":919},{"class":407,"line":918},13,[920,924,929],{"type":369,"tag":405,"props":921,"children":922},{"style":596},[923],{"type":374,"value":875},{"type":369,"tag":405,"props":925,"children":926},{"style":878},[927],{"type":374,"value":928},"@return",{"type":369,"tag":405,"props":930,"children":931},{"style":884},[932],{"type":374,"value":933}," {boolean}\n",{"type":369,"tag":405,"props":935,"children":937},{"class":407,"line":936},14,[938],{"type":369,"tag":405,"props":939,"children":940},{"style":596},[941],{"type":374,"value":615},{"type":369,"tag":405,"props":943,"children":945},{"class":407,"line":944},15,[946,951,956,960,965,970,974,978,983],{"type":369,"tag":405,"props":947,"children":948},{"style":621},[949],{"type":374,"value":950},"var",{"type":369,"tag":405,"props":952,"children":953},{"style":627},[954],{"type":374,"value":955}," hasPathSum",{"type":369,"tag":405,"props":957,"children":958},{"style":690},[959],{"type":374,"value":693},{"type":369,"tag":405,"props":961,"children":962},{"style":621},[963],{"type":374,"value":964}," function",{"type":369,"tag":405,"props":966,"children":967},{"style":633},[968],{"type":374,"value":969}," (",{"type":369,"tag":405,"props":971,"children":972},{"style":639},[973],{"type":374,"value":366},{"type":369,"tag":405,"props":975,"children":976},{"style":645},[977],{"type":374,"value":648},{"type":369,"tag":405,"props":979,"children":980},{"style":639},[981],{"type":374,"value":982}," targetSum",{"type":369,"tag":405,"props":984,"children":985},{"style":633},[986],{"type":374,"value":667},{"type":369,"tag":405,"props":988,"children":990},{"class":407,"line":989},16,[991,997,1001,1005,1009,1013,1018,1023,1028],{"type":369,"tag":405,"props":992,"children":994},{"style":993},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[995],{"type":374,"value":996},"  if",{"type":369,"tag":405,"props":998,"children":999},{"style":633},[1000],{"type":374,"value":969},{"type":369,"tag":405,"props":1002,"children":1003},{"style":685},[1004],{"type":374,"value":366},{"type":369,"tag":405,"props":1006,"children":1007},{"style":690},[1008],{"type":374,"value":703},{"type":369,"tag":405,"props":1010,"children":1011},{"style":706},[1012],{"type":374,"value":774},{"type":369,"tag":405,"props":1014,"children":1015},{"style":633},[1016],{"type":374,"value":1017},") ",{"type":369,"tag":405,"props":1019,"children":1020},{"style":993},[1021],{"type":374,"value":1022},"return",{"type":369,"tag":405,"props":1024,"children":1025},{"style":706},[1026],{"type":374,"value":1027}," false",{"type":369,"tag":405,"props":1029,"children":1030},{"style":645},[1031],{"type":374,"value":733},{"type":369,"tag":405,"props":1033,"children":1035},{"class":407,"line":1034},17,[1036,1040,1044,1048,1052,1056,1060,1064,1069,1074,1078,1082,1086,1090,1094,1098,1102,1106,1110,1114,1118],{"type":369,"tag":405,"props":1037,"children":1038},{"style":993},[1039],{"type":374,"value":996},{"type":369,"tag":405,"props":1041,"children":1042},{"style":633},[1043],{"type":374,"value":969},{"type":369,"tag":405,"props":1045,"children":1046},{"style":685},[1047],{"type":374,"value":366},{"type":369,"tag":405,"props":1049,"children":1050},{"style":679},[1051],{"type":374,"value":682},{"type":369,"tag":405,"props":1053,"children":1054},{"style":685},[1055],{"type":374,"value":749},{"type":369,"tag":405,"props":1057,"children":1058},{"style":690},[1059],{"type":374,"value":703},{"type":369,"tag":405,"props":1061,"children":1062},{"style":706},[1063],{"type":374,"value":774},{"type":369,"tag":405,"props":1065,"children":1066},{"style":690},[1067],{"type":374,"value":1068}," &&",{"type":369,"tag":405,"props":1070,"children":1071},{"style":685},[1072],{"type":374,"value":1073}," root",{"type":369,"tag":405,"props":1075,"children":1076},{"style":679},[1077],{"type":374,"value":682},{"type":369,"tag":405,"props":1079,"children":1080},{"style":685},[1081],{"type":374,"value":803},{"type":369,"tag":405,"props":1083,"children":1084},{"style":690},[1085],{"type":374,"value":703},{"type":369,"tag":405,"props":1087,"children":1088},{"style":706},[1089],{"type":374,"value":774},{"type":369,"tag":405,"props":1091,"children":1092},{"style":633},[1093],{"type":374,"value":1017},{"type":369,"tag":405,"props":1095,"children":1096},{"style":993},[1097],{"type":374,"value":1022},{"type":369,"tag":405,"props":1099,"children":1100},{"style":685},[1101],{"type":374,"value":1073},{"type":369,"tag":405,"props":1103,"children":1104},{"style":679},[1105],{"type":374,"value":682},{"type":369,"tag":405,"props":1107,"children":1108},{"style":685},[1109],{"type":374,"value":642},{"type":369,"tag":405,"props":1111,"children":1112},{"style":690},[1113],{"type":374,"value":703},{"type":369,"tag":405,"props":1115,"children":1116},{"style":685},[1117],{"type":374,"value":982},{"type":369,"tag":405,"props":1119,"children":1120},{"style":645},[1121],{"type":374,"value":733},{"type":369,"tag":405,"props":1123,"children":1125},{"class":407,"line":1124},18,[1126,1131],{"type":369,"tag":405,"props":1127,"children":1128},{"style":993},[1129],{"type":374,"value":1130},"  return",{"type":369,"tag":405,"props":1132,"children":1133},{"style":633},[1134],{"type":374,"value":1135}," (\n",{"type":369,"tag":405,"props":1137,"children":1139},{"class":407,"line":1138},19,[1140,1145,1149,1153,1157,1161,1165,1169,1174,1178,1182,1186,1190],{"type":369,"tag":405,"props":1141,"children":1142},{"style":627},[1143],{"type":374,"value":1144},"    hasPathSum",{"type":369,"tag":405,"props":1146,"children":1147},{"style":633},[1148],{"type":374,"value":636},{"type":369,"tag":405,"props":1150,"children":1151},{"style":685},[1152],{"type":374,"value":366},{"type":369,"tag":405,"props":1154,"children":1155},{"style":679},[1156],{"type":374,"value":682},{"type":369,"tag":405,"props":1158,"children":1159},{"style":685},[1160],{"type":374,"value":749},{"type":369,"tag":405,"props":1162,"children":1163},{"style":645},[1164],{"type":374,"value":648},{"type":369,"tag":405,"props":1166,"children":1167},{"style":685},[1168],{"type":374,"value":982},{"type":369,"tag":405,"props":1170,"children":1171},{"style":690},[1172],{"type":374,"value":1173}," -",{"type":369,"tag":405,"props":1175,"children":1176},{"style":685},[1177],{"type":374,"value":1073},{"type":369,"tag":405,"props":1179,"children":1180},{"style":679},[1181],{"type":374,"value":682},{"type":369,"tag":405,"props":1183,"children":1184},{"style":685},[1185],{"type":374,"value":642},{"type":369,"tag":405,"props":1187,"children":1188},{"style":633},[1189],{"type":374,"value":1017},{"type":369,"tag":405,"props":1191,"children":1192},{"style":690},[1193],{"type":374,"value":1194},"||\n",{"type":369,"tag":405,"props":1196,"children":1198},{"class":407,"line":1197},20,[1199,1203,1207,1211,1215,1219,1223,1227,1231,1235,1239,1243],{"type":369,"tag":405,"props":1200,"children":1201},{"style":627},[1202],{"type":374,"value":1144},{"type":369,"tag":405,"props":1204,"children":1205},{"style":633},[1206],{"type":374,"value":636},{"type":369,"tag":405,"props":1208,"children":1209},{"style":685},[1210],{"type":374,"value":366},{"type":369,"tag":405,"props":1212,"children":1213},{"style":679},[1214],{"type":374,"value":682},{"type":369,"tag":405,"props":1216,"children":1217},{"style":685},[1218],{"type":374,"value":803},{"type":369,"tag":405,"props":1220,"children":1221},{"style":645},[1222],{"type":374,"value":648},{"type":369,"tag":405,"props":1224,"children":1225},{"style":685},[1226],{"type":374,"value":982},{"type":369,"tag":405,"props":1228,"children":1229},{"style":690},[1230],{"type":374,"value":1173},{"type":369,"tag":405,"props":1232,"children":1233},{"style":685},[1234],{"type":374,"value":1073},{"type":369,"tag":405,"props":1236,"children":1237},{"style":679},[1238],{"type":374,"value":682},{"type":369,"tag":405,"props":1240,"children":1241},{"style":685},[1242],{"type":374,"value":642},{"type":369,"tag":405,"props":1244,"children":1245},{"style":633},[1246],{"type":374,"value":1247},")\n",{"type":369,"tag":405,"props":1249,"children":1251},{"class":407,"line":1250},21,[1252,1257],{"type":369,"tag":405,"props":1253,"children":1254},{"style":633},[1255],{"type":374,"value":1256},"  )",{"type":369,"tag":405,"props":1258,"children":1259},{"style":645},[1260],{"type":374,"value":733},{"type":369,"tag":405,"props":1262,"children":1264},{"class":407,"line":1263},22,[1265,1270],{"type":369,"tag":405,"props":1266,"children":1267},{"style":633},[1268],{"type":374,"value":1269},"}",{"type":369,"tag":405,"props":1271,"children":1272},{"style":645},[1273],{"type":374,"value":733},{"type":369,"tag":1275,"props":1276,"children":1277},"style",{},[1278],{"type":374,"value":1279},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":362,"searchDepth":488,"depth":488,"links":1281},[1282,1283],{"id":567,"depth":417,"text":567},{"id":572,"depth":417,"text":572,"children":1284},[1285],{"id":578,"depth":426,"text":581},"markdown","content:2.code:1.algorithm:3.leetcode:112.path-sum.md","content","2.code/1.algorithm/3.leetcode/112.path-sum.md","md",[1292,1294],{"_path":160,"title":159,"description":1293},"给定一个二叉树，找出其最小深度。",{"_path":166,"title":165,"description":1295},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",1712748637677]