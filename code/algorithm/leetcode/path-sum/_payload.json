[{"data":1,"prerenderedAt":1290},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/path-sum":353,"/code/algorithm/leetcode/path-sum-surround":1285},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319,341,344,347,350],{"title":320,"_path":321,"children":322},"Promise","/code/scene/promise",[323,326,329,332,335,338],{"title":324,"_path":325},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":327,"_path":328},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":330,"_path":331},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":333,"_path":334},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":336,"_path":337},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":339,"_path":340},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":342,"_path":343},"计算对象占用字节数","/code/scene/calcuate-object-bytes",{"title":345,"_path":346},"lodash.get","/code/scene/lodash-get",{"title":348,"_path":349},"sku 算法实现","/code/scene/sku",{"title":351,"_path":352},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":163,"_dir":354,"_draft":355,"_partial":355,"_locale":356,"title":162,"description":357,"url":358,"body":359,"_type":1280,"_id":1281,"_source":1282,"_file":1283,"_extension":1284},"leetcode",false,"","给你二叉树的根节点 root 和一个表示目标和的整数 targetSum 。判断该树中是否存在 根节点到叶子节点 的路径，这条路径上所有节点值相加等于目标和 targetSum 。如果存在，返回 true ；否则，返回 false 。","https://leetcode.cn/problems/path-sum",{"type":360,"children":361,"toc":1274},"root",[362,369,374,379,388,427,432,440,498,503,533,538,558,564,569,576,1268],{"type":363,"tag":364,"props":365,"children":366},"element","p",{},[367],{"type":368,"value":357},"text",{"type":363,"tag":364,"props":370,"children":371},{},[372],{"type":368,"value":373},"叶子节点 是指没有子节点的节点。",{"type":363,"tag":364,"props":375,"children":376},{},[377],{"type":368,"value":378},"示例 1：",{"type":363,"tag":364,"props":380,"children":381},{},[382],{"type":363,"tag":383,"props":384,"children":387},"img",{"alt":385,"src":386},"pathsum1","/img/code_leetcode_No.112_pathsum1.png",[],{"type":363,"tag":389,"props":390,"children":393},"pre",{"className":391,"code":392,"language":368,"meta":356,"style":356},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n输出：true\n解释：等于目标和的根节点到叶节点路径如上图所示。\n",[394],{"type":363,"tag":395,"props":396,"children":397},"code",{"__ignoreMap":356},[398,409,418],{"type":363,"tag":399,"props":400,"children":403},"span",{"class":401,"line":402},"line",1,[404],{"type":363,"tag":399,"props":405,"children":406},{},[407],{"type":368,"value":408},"输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n",{"type":363,"tag":399,"props":410,"children":412},{"class":401,"line":411},2,[413],{"type":363,"tag":399,"props":414,"children":415},{},[416],{"type":368,"value":417},"输出：true\n",{"type":363,"tag":399,"props":419,"children":421},{"class":401,"line":420},3,[422],{"type":363,"tag":399,"props":423,"children":424},{},[425],{"type":368,"value":426},"解释：等于目标和的根节点到叶节点路径如上图所示。\n",{"type":363,"tag":364,"props":428,"children":429},{},[430],{"type":368,"value":431},"示例 2：",{"type":363,"tag":364,"props":433,"children":434},{},[435],{"type":363,"tag":383,"props":436,"children":439},{"alt":437,"src":438},"pathsum2","/img/code_leetcode_No.112_pathsum2.png",[],{"type":363,"tag":389,"props":441,"children":443},{"className":391,"code":442,"language":368,"meta":356,"style":356},"输入：root = [1,2,3], targetSum = 5\n输出：false\n解释：树中存在两条根节点到叶子节点的路径：\n(1 --> 2): 和为 3\n(1 --> 3): 和为 4\n不存在 sum = 5 的根节点到叶子节点的路径。\n",[444],{"type":363,"tag":395,"props":445,"children":446},{"__ignoreMap":356},[447,455,463,471,480,489],{"type":363,"tag":399,"props":448,"children":449},{"class":401,"line":402},[450],{"type":363,"tag":399,"props":451,"children":452},{},[453],{"type":368,"value":454},"输入：root = [1,2,3], targetSum = 5\n",{"type":363,"tag":399,"props":456,"children":457},{"class":401,"line":411},[458],{"type":363,"tag":399,"props":459,"children":460},{},[461],{"type":368,"value":462},"输出：false\n",{"type":363,"tag":399,"props":464,"children":465},{"class":401,"line":420},[466],{"type":363,"tag":399,"props":467,"children":468},{},[469],{"type":368,"value":470},"解释：树中存在两条根节点到叶子节点的路径：\n",{"type":363,"tag":399,"props":472,"children":474},{"class":401,"line":473},4,[475],{"type":363,"tag":399,"props":476,"children":477},{},[478],{"type":368,"value":479},"(1 --> 2): 和为 3\n",{"type":363,"tag":399,"props":481,"children":483},{"class":401,"line":482},5,[484],{"type":363,"tag":399,"props":485,"children":486},{},[487],{"type":368,"value":488},"(1 --> 3): 和为 4\n",{"type":363,"tag":399,"props":490,"children":492},{"class":401,"line":491},6,[493],{"type":363,"tag":399,"props":494,"children":495},{},[496],{"type":368,"value":497},"不存在 sum = 5 的根节点到叶子节点的路径。\n",{"type":363,"tag":364,"props":499,"children":500},{},[501],{"type":368,"value":502},"示例 3：",{"type":363,"tag":389,"props":504,"children":506},{"className":391,"code":505,"language":368,"meta":356,"style":356},"输入：root = [], targetSum = 0\n输出：false\n解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",[507],{"type":363,"tag":395,"props":508,"children":509},{"__ignoreMap":356},[510,518,525],{"type":363,"tag":399,"props":511,"children":512},{"class":401,"line":402},[513],{"type":363,"tag":399,"props":514,"children":515},{},[516],{"type":368,"value":517},"输入：root = [], targetSum = 0\n",{"type":363,"tag":399,"props":519,"children":520},{"class":401,"line":411},[521],{"type":363,"tag":399,"props":522,"children":523},{},[524],{"type":368,"value":462},{"type":363,"tag":399,"props":526,"children":527},{"class":401,"line":420},[528],{"type":363,"tag":399,"props":529,"children":530},{},[531],{"type":368,"value":532},"解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",{"type":363,"tag":364,"props":534,"children":535},{},[536],{"type":368,"value":537},"提示：",{"type":363,"tag":539,"props":540,"children":541},"ul",{},[542,548,553],{"type":363,"tag":543,"props":544,"children":545},"li",{},[546],{"type":368,"value":547},"树中节点的数目在范围 [0, 5000] 内",{"type":363,"tag":543,"props":549,"children":550},{},[551],{"type":368,"value":552},"-1000 \u003C= Node.val \u003C= 1000",{"type":363,"tag":543,"props":554,"children":555},{},[556],{"type":368,"value":557},"-1000 \u003C= targetSum \u003C= 1000",{"type":363,"tag":559,"props":560,"children":562},"h2",{"id":561},"解题思路",[563],{"type":368,"value":561},{"type":363,"tag":559,"props":565,"children":567},{"id":566},"实现",[568],{"type":368,"value":566},{"type":363,"tag":570,"props":571,"children":573},"h3",{"id":572},"深度优先搜索-dfs",[574],{"type":368,"value":575},"深度优先搜索 - dfs",{"type":363,"tag":389,"props":577,"children":581},{"className":578,"code":579,"language":580,"meta":356,"style":356},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {boolean}\n */\nvar hasPathSum = function (root, targetSum) {\n  if (root === null) return false;\n  if (root.left === null && root.right === null) return root.val === targetSum;\n  return (\n    hasPathSum(root.left, targetSum - root.val) ||\n    hasPathSum(root.right, targetSum - root.val)\n  );\n};\n","js",[582],{"type":363,"tag":395,"props":583,"children":584},{"__ignoreMap":356},[585,594,602,610,662,728,781,834,843,853,861,888,910,928,936,981,1026,1116,1130,1189,1242,1255],{"type":363,"tag":399,"props":586,"children":587},{"class":401,"line":402},[588],{"type":363,"tag":399,"props":589,"children":591},{"style":590},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[592],{"type":368,"value":593},"/**\n",{"type":363,"tag":399,"props":595,"children":596},{"class":401,"line":411},[597],{"type":363,"tag":399,"props":598,"children":599},{"style":590},[600],{"type":368,"value":601}," * Definition for a binary tree node.\n",{"type":363,"tag":399,"props":603,"children":604},{"class":401,"line":420},[605],{"type":363,"tag":399,"props":606,"children":607},{"style":590},[608],{"type":368,"value":609}," */\n",{"type":363,"tag":399,"props":611,"children":612},{"class":401,"line":473},[613,619,625,631,637,643,648,652,657],{"type":363,"tag":399,"props":614,"children":616},{"style":615},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[617],{"type":368,"value":618},"function",{"type":363,"tag":399,"props":620,"children":622},{"style":621},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[623],{"type":368,"value":624}," TreeNode",{"type":363,"tag":399,"props":626,"children":628},{"style":627},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[629],{"type":368,"value":630},"(",{"type":363,"tag":399,"props":632,"children":634},{"style":633},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[635],{"type":368,"value":636},"val",{"type":363,"tag":399,"props":638,"children":640},{"style":639},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[641],{"type":368,"value":642},",",{"type":363,"tag":399,"props":644,"children":645},{"style":633},[646],{"type":368,"value":647}," left",{"type":363,"tag":399,"props":649,"children":650},{"style":639},[651],{"type":368,"value":642},{"type":363,"tag":399,"props":653,"children":654},{"style":633},[655],{"type":368,"value":656}," right",{"type":363,"tag":399,"props":658,"children":659},{"style":627},[660],{"type":368,"value":661},") {\n",{"type":363,"tag":399,"props":663,"children":664},{"class":401,"line":482},[665,671,677,682,688,693,698,704,709,714,719,723],{"type":363,"tag":399,"props":666,"children":668},{"style":667},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[669],{"type":368,"value":670},"  this",{"type":363,"tag":399,"props":672,"children":674},{"style":673},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[675],{"type":368,"value":676},".",{"type":363,"tag":399,"props":678,"children":680},{"style":679},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[681],{"type":368,"value":636},{"type":363,"tag":399,"props":683,"children":685},{"style":684},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[686],{"type":368,"value":687}," =",{"type":363,"tag":399,"props":689,"children":690},{"style":679},[691],{"type":368,"value":692}," val",{"type":363,"tag":399,"props":694,"children":695},{"style":684},[696],{"type":368,"value":697}," ===",{"type":363,"tag":399,"props":699,"children":701},{"style":700},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[702],{"type":368,"value":703}," undefined",{"type":363,"tag":399,"props":705,"children":706},{"style":684},[707],{"type":368,"value":708}," ?",{"type":363,"tag":399,"props":710,"children":711},{"style":700},[712],{"type":368,"value":713}," 0",{"type":363,"tag":399,"props":715,"children":716},{"style":684},[717],{"type":368,"value":718}," :",{"type":363,"tag":399,"props":720,"children":721},{"style":679},[722],{"type":368,"value":692},{"type":363,"tag":399,"props":724,"children":725},{"style":639},[726],{"type":368,"value":727},";\n",{"type":363,"tag":399,"props":729,"children":730},{"class":401,"line":491},[731,735,739,744,748,752,756,760,764,769,773,777],{"type":363,"tag":399,"props":732,"children":733},{"style":667},[734],{"type":368,"value":670},{"type":363,"tag":399,"props":736,"children":737},{"style":673},[738],{"type":368,"value":676},{"type":363,"tag":399,"props":740,"children":741},{"style":679},[742],{"type":368,"value":743},"left",{"type":363,"tag":399,"props":745,"children":746},{"style":684},[747],{"type":368,"value":687},{"type":363,"tag":399,"props":749,"children":750},{"style":679},[751],{"type":368,"value":647},{"type":363,"tag":399,"props":753,"children":754},{"style":684},[755],{"type":368,"value":697},{"type":363,"tag":399,"props":757,"children":758},{"style":700},[759],{"type":368,"value":703},{"type":363,"tag":399,"props":761,"children":762},{"style":684},[763],{"type":368,"value":708},{"type":363,"tag":399,"props":765,"children":766},{"style":700},[767],{"type":368,"value":768}," null",{"type":363,"tag":399,"props":770,"children":771},{"style":684},[772],{"type":368,"value":718},{"type":363,"tag":399,"props":774,"children":775},{"style":679},[776],{"type":368,"value":647},{"type":363,"tag":399,"props":778,"children":779},{"style":639},[780],{"type":368,"value":727},{"type":363,"tag":399,"props":782,"children":784},{"class":401,"line":783},7,[785,789,793,798,802,806,810,814,818,822,826,830],{"type":363,"tag":399,"props":786,"children":787},{"style":667},[788],{"type":368,"value":670},{"type":363,"tag":399,"props":790,"children":791},{"style":673},[792],{"type":368,"value":676},{"type":363,"tag":399,"props":794,"children":795},{"style":679},[796],{"type":368,"value":797},"right",{"type":363,"tag":399,"props":799,"children":800},{"style":684},[801],{"type":368,"value":687},{"type":363,"tag":399,"props":803,"children":804},{"style":679},[805],{"type":368,"value":656},{"type":363,"tag":399,"props":807,"children":808},{"style":684},[809],{"type":368,"value":697},{"type":363,"tag":399,"props":811,"children":812},{"style":700},[813],{"type":368,"value":703},{"type":363,"tag":399,"props":815,"children":816},{"style":684},[817],{"type":368,"value":708},{"type":363,"tag":399,"props":819,"children":820},{"style":700},[821],{"type":368,"value":768},{"type":363,"tag":399,"props":823,"children":824},{"style":684},[825],{"type":368,"value":718},{"type":363,"tag":399,"props":827,"children":828},{"style":679},[829],{"type":368,"value":656},{"type":363,"tag":399,"props":831,"children":832},{"style":639},[833],{"type":368,"value":727},{"type":363,"tag":399,"props":835,"children":837},{"class":401,"line":836},8,[838],{"type":363,"tag":399,"props":839,"children":840},{"style":627},[841],{"type":368,"value":842},"}\n",{"type":363,"tag":399,"props":844,"children":846},{"class":401,"line":845},9,[847],{"type":363,"tag":399,"props":848,"children":850},{"emptyLinePlaceholder":849},true,[851],{"type":368,"value":852},"\n",{"type":363,"tag":399,"props":854,"children":856},{"class":401,"line":855},10,[857],{"type":363,"tag":399,"props":858,"children":859},{"style":590},[860],{"type":368,"value":593},{"type":363,"tag":399,"props":862,"children":864},{"class":401,"line":863},11,[865,870,876,882],{"type":363,"tag":399,"props":866,"children":867},{"style":590},[868],{"type":368,"value":869}," * ",{"type":363,"tag":399,"props":871,"children":873},{"style":872},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[874],{"type":368,"value":875},"@param",{"type":363,"tag":399,"props":877,"children":879},{"style":878},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[880],{"type":368,"value":881}," {TreeNode}",{"type":363,"tag":399,"props":883,"children":885},{"style":884},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[886],{"type":368,"value":887}," root\n",{"type":363,"tag":399,"props":889,"children":891},{"class":401,"line":890},12,[892,896,900,905],{"type":363,"tag":399,"props":893,"children":894},{"style":590},[895],{"type":368,"value":869},{"type":363,"tag":399,"props":897,"children":898},{"style":872},[899],{"type":368,"value":875},{"type":363,"tag":399,"props":901,"children":902},{"style":878},[903],{"type":368,"value":904}," {number}",{"type":363,"tag":399,"props":906,"children":907},{"style":884},[908],{"type":368,"value":909}," targetSum\n",{"type":363,"tag":399,"props":911,"children":913},{"class":401,"line":912},13,[914,918,923],{"type":363,"tag":399,"props":915,"children":916},{"style":590},[917],{"type":368,"value":869},{"type":363,"tag":399,"props":919,"children":920},{"style":872},[921],{"type":368,"value":922},"@return",{"type":363,"tag":399,"props":924,"children":925},{"style":878},[926],{"type":368,"value":927}," {boolean}\n",{"type":363,"tag":399,"props":929,"children":931},{"class":401,"line":930},14,[932],{"type":363,"tag":399,"props":933,"children":934},{"style":590},[935],{"type":368,"value":609},{"type":363,"tag":399,"props":937,"children":939},{"class":401,"line":938},15,[940,945,950,954,959,964,968,972,977],{"type":363,"tag":399,"props":941,"children":942},{"style":615},[943],{"type":368,"value":944},"var",{"type":363,"tag":399,"props":946,"children":947},{"style":621},[948],{"type":368,"value":949}," hasPathSum",{"type":363,"tag":399,"props":951,"children":952},{"style":684},[953],{"type":368,"value":687},{"type":363,"tag":399,"props":955,"children":956},{"style":615},[957],{"type":368,"value":958}," function",{"type":363,"tag":399,"props":960,"children":961},{"style":627},[962],{"type":368,"value":963}," (",{"type":363,"tag":399,"props":965,"children":966},{"style":633},[967],{"type":368,"value":360},{"type":363,"tag":399,"props":969,"children":970},{"style":639},[971],{"type":368,"value":642},{"type":363,"tag":399,"props":973,"children":974},{"style":633},[975],{"type":368,"value":976}," targetSum",{"type":363,"tag":399,"props":978,"children":979},{"style":627},[980],{"type":368,"value":661},{"type":363,"tag":399,"props":982,"children":984},{"class":401,"line":983},16,[985,991,995,999,1003,1007,1012,1017,1022],{"type":363,"tag":399,"props":986,"children":988},{"style":987},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[989],{"type":368,"value":990},"  if",{"type":363,"tag":399,"props":992,"children":993},{"style":627},[994],{"type":368,"value":963},{"type":363,"tag":399,"props":996,"children":997},{"style":679},[998],{"type":368,"value":360},{"type":363,"tag":399,"props":1000,"children":1001},{"style":684},[1002],{"type":368,"value":697},{"type":363,"tag":399,"props":1004,"children":1005},{"style":700},[1006],{"type":368,"value":768},{"type":363,"tag":399,"props":1008,"children":1009},{"style":627},[1010],{"type":368,"value":1011},") ",{"type":363,"tag":399,"props":1013,"children":1014},{"style":987},[1015],{"type":368,"value":1016},"return",{"type":363,"tag":399,"props":1018,"children":1019},{"style":700},[1020],{"type":368,"value":1021}," false",{"type":363,"tag":399,"props":1023,"children":1024},{"style":639},[1025],{"type":368,"value":727},{"type":363,"tag":399,"props":1027,"children":1029},{"class":401,"line":1028},17,[1030,1034,1038,1042,1046,1050,1054,1058,1063,1068,1072,1076,1080,1084,1088,1092,1096,1100,1104,1108,1112],{"type":363,"tag":399,"props":1031,"children":1032},{"style":987},[1033],{"type":368,"value":990},{"type":363,"tag":399,"props":1035,"children":1036},{"style":627},[1037],{"type":368,"value":963},{"type":363,"tag":399,"props":1039,"children":1040},{"style":679},[1041],{"type":368,"value":360},{"type":363,"tag":399,"props":1043,"children":1044},{"style":673},[1045],{"type":368,"value":676},{"type":363,"tag":399,"props":1047,"children":1048},{"style":679},[1049],{"type":368,"value":743},{"type":363,"tag":399,"props":1051,"children":1052},{"style":684},[1053],{"type":368,"value":697},{"type":363,"tag":399,"props":1055,"children":1056},{"style":700},[1057],{"type":368,"value":768},{"type":363,"tag":399,"props":1059,"children":1060},{"style":684},[1061],{"type":368,"value":1062}," &&",{"type":363,"tag":399,"props":1064,"children":1065},{"style":679},[1066],{"type":368,"value":1067}," root",{"type":363,"tag":399,"props":1069,"children":1070},{"style":673},[1071],{"type":368,"value":676},{"type":363,"tag":399,"props":1073,"children":1074},{"style":679},[1075],{"type":368,"value":797},{"type":363,"tag":399,"props":1077,"children":1078},{"style":684},[1079],{"type":368,"value":697},{"type":363,"tag":399,"props":1081,"children":1082},{"style":700},[1083],{"type":368,"value":768},{"type":363,"tag":399,"props":1085,"children":1086},{"style":627},[1087],{"type":368,"value":1011},{"type":363,"tag":399,"props":1089,"children":1090},{"style":987},[1091],{"type":368,"value":1016},{"type":363,"tag":399,"props":1093,"children":1094},{"style":679},[1095],{"type":368,"value":1067},{"type":363,"tag":399,"props":1097,"children":1098},{"style":673},[1099],{"type":368,"value":676},{"type":363,"tag":399,"props":1101,"children":1102},{"style":679},[1103],{"type":368,"value":636},{"type":363,"tag":399,"props":1105,"children":1106},{"style":684},[1107],{"type":368,"value":697},{"type":363,"tag":399,"props":1109,"children":1110},{"style":679},[1111],{"type":368,"value":976},{"type":363,"tag":399,"props":1113,"children":1114},{"style":639},[1115],{"type":368,"value":727},{"type":363,"tag":399,"props":1117,"children":1119},{"class":401,"line":1118},18,[1120,1125],{"type":363,"tag":399,"props":1121,"children":1122},{"style":987},[1123],{"type":368,"value":1124},"  return",{"type":363,"tag":399,"props":1126,"children":1127},{"style":627},[1128],{"type":368,"value":1129}," (\n",{"type":363,"tag":399,"props":1131,"children":1133},{"class":401,"line":1132},19,[1134,1139,1143,1147,1151,1155,1159,1163,1168,1172,1176,1180,1184],{"type":363,"tag":399,"props":1135,"children":1136},{"style":621},[1137],{"type":368,"value":1138},"    hasPathSum",{"type":363,"tag":399,"props":1140,"children":1141},{"style":627},[1142],{"type":368,"value":630},{"type":363,"tag":399,"props":1144,"children":1145},{"style":679},[1146],{"type":368,"value":360},{"type":363,"tag":399,"props":1148,"children":1149},{"style":673},[1150],{"type":368,"value":676},{"type":363,"tag":399,"props":1152,"children":1153},{"style":679},[1154],{"type":368,"value":743},{"type":363,"tag":399,"props":1156,"children":1157},{"style":639},[1158],{"type":368,"value":642},{"type":363,"tag":399,"props":1160,"children":1161},{"style":679},[1162],{"type":368,"value":976},{"type":363,"tag":399,"props":1164,"children":1165},{"style":684},[1166],{"type":368,"value":1167}," -",{"type":363,"tag":399,"props":1169,"children":1170},{"style":679},[1171],{"type":368,"value":1067},{"type":363,"tag":399,"props":1173,"children":1174},{"style":673},[1175],{"type":368,"value":676},{"type":363,"tag":399,"props":1177,"children":1178},{"style":679},[1179],{"type":368,"value":636},{"type":363,"tag":399,"props":1181,"children":1182},{"style":627},[1183],{"type":368,"value":1011},{"type":363,"tag":399,"props":1185,"children":1186},{"style":684},[1187],{"type":368,"value":1188},"||\n",{"type":363,"tag":399,"props":1190,"children":1192},{"class":401,"line":1191},20,[1193,1197,1201,1205,1209,1213,1217,1221,1225,1229,1233,1237],{"type":363,"tag":399,"props":1194,"children":1195},{"style":621},[1196],{"type":368,"value":1138},{"type":363,"tag":399,"props":1198,"children":1199},{"style":627},[1200],{"type":368,"value":630},{"type":363,"tag":399,"props":1202,"children":1203},{"style":679},[1204],{"type":368,"value":360},{"type":363,"tag":399,"props":1206,"children":1207},{"style":673},[1208],{"type":368,"value":676},{"type":363,"tag":399,"props":1210,"children":1211},{"style":679},[1212],{"type":368,"value":797},{"type":363,"tag":399,"props":1214,"children":1215},{"style":639},[1216],{"type":368,"value":642},{"type":363,"tag":399,"props":1218,"children":1219},{"style":679},[1220],{"type":368,"value":976},{"type":363,"tag":399,"props":1222,"children":1223},{"style":684},[1224],{"type":368,"value":1167},{"type":363,"tag":399,"props":1226,"children":1227},{"style":679},[1228],{"type":368,"value":1067},{"type":363,"tag":399,"props":1230,"children":1231},{"style":673},[1232],{"type":368,"value":676},{"type":363,"tag":399,"props":1234,"children":1235},{"style":679},[1236],{"type":368,"value":636},{"type":363,"tag":399,"props":1238,"children":1239},{"style":627},[1240],{"type":368,"value":1241},")\n",{"type":363,"tag":399,"props":1243,"children":1245},{"class":401,"line":1244},21,[1246,1251],{"type":363,"tag":399,"props":1247,"children":1248},{"style":627},[1249],{"type":368,"value":1250},"  )",{"type":363,"tag":399,"props":1252,"children":1253},{"style":639},[1254],{"type":368,"value":727},{"type":363,"tag":399,"props":1256,"children":1258},{"class":401,"line":1257},22,[1259,1264],{"type":363,"tag":399,"props":1260,"children":1261},{"style":627},[1262],{"type":368,"value":1263},"}",{"type":363,"tag":399,"props":1265,"children":1266},{"style":639},[1267],{"type":368,"value":727},{"type":363,"tag":1269,"props":1270,"children":1271},"style",{},[1272],{"type":368,"value":1273},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":356,"searchDepth":482,"depth":482,"links":1275},[1276,1277],{"id":561,"depth":411,"text":561},{"id":566,"depth":411,"text":566,"children":1278},[1279],{"id":572,"depth":420,"text":575},"markdown","content:2.code:1.algorithm:3.leetcode:112.path-sum.md","content","2.code/1.algorithm/3.leetcode/112.path-sum.md","md",[1286,1288],{"_path":160,"title":159,"description":1287},"给定一个二叉树，找出其最小深度。",{"_path":166,"title":165,"description":1289},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",1712589911399]