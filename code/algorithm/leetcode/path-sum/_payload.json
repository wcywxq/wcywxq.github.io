[{"data":1,"prerenderedAt":1259},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/path-sum":322,"/code/algorithm/leetcode/path-sum-surround":1254},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319],{"title":320,"_path":321},"顺序打印 url 并支持 retry","/code/scene/promise-url-retry",{"_path":163,"_dir":323,"_draft":324,"_partial":324,"_locale":325,"title":162,"description":326,"url":327,"body":328,"_type":1249,"_id":1250,"_source":1251,"_file":1252,"_extension":1253},"leetcode",false,"","给你二叉树的根节点 root 和一个表示目标和的整数 targetSum 。判断该树中是否存在 根节点到叶子节点 的路径，这条路径上所有节点值相加等于目标和 targetSum 。如果存在，返回 true ；否则，返回 false 。","https://leetcode.cn/problems/path-sum",{"type":329,"children":330,"toc":1243},"root",[331,338,343,348,357,396,401,409,467,472,502,507,527,533,538,545,1237],{"type":332,"tag":333,"props":334,"children":335},"element","p",{},[336],{"type":337,"value":326},"text",{"type":332,"tag":333,"props":339,"children":340},{},[341],{"type":337,"value":342},"叶子节点 是指没有子节点的节点。",{"type":332,"tag":333,"props":344,"children":345},{},[346],{"type":337,"value":347},"示例 1：",{"type":332,"tag":333,"props":349,"children":350},{},[351],{"type":332,"tag":352,"props":353,"children":356},"img",{"alt":354,"src":355},"pathsum1","/img/code_leetcode_No.112_pathsum1.png",[],{"type":332,"tag":358,"props":359,"children":362},"pre",{"className":360,"code":361,"language":337,"meta":325,"style":325},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n输出：true\n解释：等于目标和的根节点到叶节点路径如上图所示。\n",[363],{"type":332,"tag":364,"props":365,"children":366},"code",{"__ignoreMap":325},[367,378,387],{"type":332,"tag":368,"props":369,"children":372},"span",{"class":370,"line":371},"line",1,[373],{"type":332,"tag":368,"props":374,"children":375},{},[376],{"type":337,"value":377},"输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n",{"type":332,"tag":368,"props":379,"children":381},{"class":370,"line":380},2,[382],{"type":332,"tag":368,"props":383,"children":384},{},[385],{"type":337,"value":386},"输出：true\n",{"type":332,"tag":368,"props":388,"children":390},{"class":370,"line":389},3,[391],{"type":332,"tag":368,"props":392,"children":393},{},[394],{"type":337,"value":395},"解释：等于目标和的根节点到叶节点路径如上图所示。\n",{"type":332,"tag":333,"props":397,"children":398},{},[399],{"type":337,"value":400},"示例 2：",{"type":332,"tag":333,"props":402,"children":403},{},[404],{"type":332,"tag":352,"props":405,"children":408},{"alt":406,"src":407},"pathsum2","/img/code_leetcode_No.112_pathsum2.png",[],{"type":332,"tag":358,"props":410,"children":412},{"className":360,"code":411,"language":337,"meta":325,"style":325},"输入：root = [1,2,3], targetSum = 5\n输出：false\n解释：树中存在两条根节点到叶子节点的路径：\n(1 --> 2): 和为 3\n(1 --> 3): 和为 4\n不存在 sum = 5 的根节点到叶子节点的路径。\n",[413],{"type":332,"tag":364,"props":414,"children":415},{"__ignoreMap":325},[416,424,432,440,449,458],{"type":332,"tag":368,"props":417,"children":418},{"class":370,"line":371},[419],{"type":332,"tag":368,"props":420,"children":421},{},[422],{"type":337,"value":423},"输入：root = [1,2,3], targetSum = 5\n",{"type":332,"tag":368,"props":425,"children":426},{"class":370,"line":380},[427],{"type":332,"tag":368,"props":428,"children":429},{},[430],{"type":337,"value":431},"输出：false\n",{"type":332,"tag":368,"props":433,"children":434},{"class":370,"line":389},[435],{"type":332,"tag":368,"props":436,"children":437},{},[438],{"type":337,"value":439},"解释：树中存在两条根节点到叶子节点的路径：\n",{"type":332,"tag":368,"props":441,"children":443},{"class":370,"line":442},4,[444],{"type":332,"tag":368,"props":445,"children":446},{},[447],{"type":337,"value":448},"(1 --> 2): 和为 3\n",{"type":332,"tag":368,"props":450,"children":452},{"class":370,"line":451},5,[453],{"type":332,"tag":368,"props":454,"children":455},{},[456],{"type":337,"value":457},"(1 --> 3): 和为 4\n",{"type":332,"tag":368,"props":459,"children":461},{"class":370,"line":460},6,[462],{"type":332,"tag":368,"props":463,"children":464},{},[465],{"type":337,"value":466},"不存在 sum = 5 的根节点到叶子节点的路径。\n",{"type":332,"tag":333,"props":468,"children":469},{},[470],{"type":337,"value":471},"示例 3：",{"type":332,"tag":358,"props":473,"children":475},{"className":360,"code":474,"language":337,"meta":325,"style":325},"输入：root = [], targetSum = 0\n输出：false\n解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",[476],{"type":332,"tag":364,"props":477,"children":478},{"__ignoreMap":325},[479,487,494],{"type":332,"tag":368,"props":480,"children":481},{"class":370,"line":371},[482],{"type":332,"tag":368,"props":483,"children":484},{},[485],{"type":337,"value":486},"输入：root = [], targetSum = 0\n",{"type":332,"tag":368,"props":488,"children":489},{"class":370,"line":380},[490],{"type":332,"tag":368,"props":491,"children":492},{},[493],{"type":337,"value":431},{"type":332,"tag":368,"props":495,"children":496},{"class":370,"line":389},[497],{"type":332,"tag":368,"props":498,"children":499},{},[500],{"type":337,"value":501},"解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",{"type":332,"tag":333,"props":503,"children":504},{},[505],{"type":337,"value":506},"提示：",{"type":332,"tag":508,"props":509,"children":510},"ul",{},[511,517,522],{"type":332,"tag":512,"props":513,"children":514},"li",{},[515],{"type":337,"value":516},"树中节点的数目在范围 [0, 5000] 内",{"type":332,"tag":512,"props":518,"children":519},{},[520],{"type":337,"value":521},"-1000 \u003C= Node.val \u003C= 1000",{"type":332,"tag":512,"props":523,"children":524},{},[525],{"type":337,"value":526},"-1000 \u003C= targetSum \u003C= 1000",{"type":332,"tag":528,"props":529,"children":531},"h2",{"id":530},"解题思路",[532],{"type":337,"value":530},{"type":332,"tag":528,"props":534,"children":536},{"id":535},"实现",[537],{"type":337,"value":535},{"type":332,"tag":539,"props":540,"children":542},"h3",{"id":541},"深度优先搜索-dfs",[543],{"type":337,"value":544},"深度优先搜索 - dfs",{"type":332,"tag":358,"props":546,"children":550},{"className":547,"code":548,"language":549,"meta":325,"style":325},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {boolean}\n */\nvar hasPathSum = function (root, targetSum) {\n  if (root === null) return false;\n  if (root.left === null && root.right === null) return root.val === targetSum;\n  return (\n    hasPathSum(root.left, targetSum - root.val) ||\n    hasPathSum(root.right, targetSum - root.val)\n  );\n};\n","js",[551],{"type":332,"tag":364,"props":552,"children":553},{"__ignoreMap":325},[554,563,571,579,631,697,750,803,812,822,830,857,879,897,905,950,995,1085,1099,1158,1211,1224],{"type":332,"tag":368,"props":555,"children":556},{"class":370,"line":371},[557],{"type":332,"tag":368,"props":558,"children":560},{"style":559},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[561],{"type":337,"value":562},"/**\n",{"type":332,"tag":368,"props":564,"children":565},{"class":370,"line":380},[566],{"type":332,"tag":368,"props":567,"children":568},{"style":559},[569],{"type":337,"value":570}," * Definition for a binary tree node.\n",{"type":332,"tag":368,"props":572,"children":573},{"class":370,"line":389},[574],{"type":332,"tag":368,"props":575,"children":576},{"style":559},[577],{"type":337,"value":578}," */\n",{"type":332,"tag":368,"props":580,"children":581},{"class":370,"line":442},[582,588,594,600,606,612,617,621,626],{"type":332,"tag":368,"props":583,"children":585},{"style":584},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[586],{"type":337,"value":587},"function",{"type":332,"tag":368,"props":589,"children":591},{"style":590},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[592],{"type":337,"value":593}," TreeNode",{"type":332,"tag":368,"props":595,"children":597},{"style":596},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[598],{"type":337,"value":599},"(",{"type":332,"tag":368,"props":601,"children":603},{"style":602},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[604],{"type":337,"value":605},"val",{"type":332,"tag":368,"props":607,"children":609},{"style":608},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[610],{"type":337,"value":611},",",{"type":332,"tag":368,"props":613,"children":614},{"style":602},[615],{"type":337,"value":616}," left",{"type":332,"tag":368,"props":618,"children":619},{"style":608},[620],{"type":337,"value":611},{"type":332,"tag":368,"props":622,"children":623},{"style":602},[624],{"type":337,"value":625}," right",{"type":332,"tag":368,"props":627,"children":628},{"style":596},[629],{"type":337,"value":630},") {\n",{"type":332,"tag":368,"props":632,"children":633},{"class":370,"line":451},[634,640,646,651,657,662,667,673,678,683,688,692],{"type":332,"tag":368,"props":635,"children":637},{"style":636},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[638],{"type":337,"value":639},"  this",{"type":332,"tag":368,"props":641,"children":643},{"style":642},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[644],{"type":337,"value":645},".",{"type":332,"tag":368,"props":647,"children":649},{"style":648},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[650],{"type":337,"value":605},{"type":332,"tag":368,"props":652,"children":654},{"style":653},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[655],{"type":337,"value":656}," =",{"type":332,"tag":368,"props":658,"children":659},{"style":648},[660],{"type":337,"value":661}," val",{"type":332,"tag":368,"props":663,"children":664},{"style":653},[665],{"type":337,"value":666}," ===",{"type":332,"tag":368,"props":668,"children":670},{"style":669},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[671],{"type":337,"value":672}," undefined",{"type":332,"tag":368,"props":674,"children":675},{"style":653},[676],{"type":337,"value":677}," ?",{"type":332,"tag":368,"props":679,"children":680},{"style":669},[681],{"type":337,"value":682}," 0",{"type":332,"tag":368,"props":684,"children":685},{"style":653},[686],{"type":337,"value":687}," :",{"type":332,"tag":368,"props":689,"children":690},{"style":648},[691],{"type":337,"value":661},{"type":332,"tag":368,"props":693,"children":694},{"style":608},[695],{"type":337,"value":696},";\n",{"type":332,"tag":368,"props":698,"children":699},{"class":370,"line":460},[700,704,708,713,717,721,725,729,733,738,742,746],{"type":332,"tag":368,"props":701,"children":702},{"style":636},[703],{"type":337,"value":639},{"type":332,"tag":368,"props":705,"children":706},{"style":642},[707],{"type":337,"value":645},{"type":332,"tag":368,"props":709,"children":710},{"style":648},[711],{"type":337,"value":712},"left",{"type":332,"tag":368,"props":714,"children":715},{"style":653},[716],{"type":337,"value":656},{"type":332,"tag":368,"props":718,"children":719},{"style":648},[720],{"type":337,"value":616},{"type":332,"tag":368,"props":722,"children":723},{"style":653},[724],{"type":337,"value":666},{"type":332,"tag":368,"props":726,"children":727},{"style":669},[728],{"type":337,"value":672},{"type":332,"tag":368,"props":730,"children":731},{"style":653},[732],{"type":337,"value":677},{"type":332,"tag":368,"props":734,"children":735},{"style":669},[736],{"type":337,"value":737}," null",{"type":332,"tag":368,"props":739,"children":740},{"style":653},[741],{"type":337,"value":687},{"type":332,"tag":368,"props":743,"children":744},{"style":648},[745],{"type":337,"value":616},{"type":332,"tag":368,"props":747,"children":748},{"style":608},[749],{"type":337,"value":696},{"type":332,"tag":368,"props":751,"children":753},{"class":370,"line":752},7,[754,758,762,767,771,775,779,783,787,791,795,799],{"type":332,"tag":368,"props":755,"children":756},{"style":636},[757],{"type":337,"value":639},{"type":332,"tag":368,"props":759,"children":760},{"style":642},[761],{"type":337,"value":645},{"type":332,"tag":368,"props":763,"children":764},{"style":648},[765],{"type":337,"value":766},"right",{"type":332,"tag":368,"props":768,"children":769},{"style":653},[770],{"type":337,"value":656},{"type":332,"tag":368,"props":772,"children":773},{"style":648},[774],{"type":337,"value":625},{"type":332,"tag":368,"props":776,"children":777},{"style":653},[778],{"type":337,"value":666},{"type":332,"tag":368,"props":780,"children":781},{"style":669},[782],{"type":337,"value":672},{"type":332,"tag":368,"props":784,"children":785},{"style":653},[786],{"type":337,"value":677},{"type":332,"tag":368,"props":788,"children":789},{"style":669},[790],{"type":337,"value":737},{"type":332,"tag":368,"props":792,"children":793},{"style":653},[794],{"type":337,"value":687},{"type":332,"tag":368,"props":796,"children":797},{"style":648},[798],{"type":337,"value":625},{"type":332,"tag":368,"props":800,"children":801},{"style":608},[802],{"type":337,"value":696},{"type":332,"tag":368,"props":804,"children":806},{"class":370,"line":805},8,[807],{"type":332,"tag":368,"props":808,"children":809},{"style":596},[810],{"type":337,"value":811},"}\n",{"type":332,"tag":368,"props":813,"children":815},{"class":370,"line":814},9,[816],{"type":332,"tag":368,"props":817,"children":819},{"emptyLinePlaceholder":818},true,[820],{"type":337,"value":821},"\n",{"type":332,"tag":368,"props":823,"children":825},{"class":370,"line":824},10,[826],{"type":332,"tag":368,"props":827,"children":828},{"style":559},[829],{"type":337,"value":562},{"type":332,"tag":368,"props":831,"children":833},{"class":370,"line":832},11,[834,839,845,851],{"type":332,"tag":368,"props":835,"children":836},{"style":559},[837],{"type":337,"value":838}," * ",{"type":332,"tag":368,"props":840,"children":842},{"style":841},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[843],{"type":337,"value":844},"@param",{"type":332,"tag":368,"props":846,"children":848},{"style":847},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[849],{"type":337,"value":850}," {TreeNode}",{"type":332,"tag":368,"props":852,"children":854},{"style":853},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[855],{"type":337,"value":856}," root\n",{"type":332,"tag":368,"props":858,"children":860},{"class":370,"line":859},12,[861,865,869,874],{"type":332,"tag":368,"props":862,"children":863},{"style":559},[864],{"type":337,"value":838},{"type":332,"tag":368,"props":866,"children":867},{"style":841},[868],{"type":337,"value":844},{"type":332,"tag":368,"props":870,"children":871},{"style":847},[872],{"type":337,"value":873}," {number}",{"type":332,"tag":368,"props":875,"children":876},{"style":853},[877],{"type":337,"value":878}," targetSum\n",{"type":332,"tag":368,"props":880,"children":882},{"class":370,"line":881},13,[883,887,892],{"type":332,"tag":368,"props":884,"children":885},{"style":559},[886],{"type":337,"value":838},{"type":332,"tag":368,"props":888,"children":889},{"style":841},[890],{"type":337,"value":891},"@return",{"type":332,"tag":368,"props":893,"children":894},{"style":847},[895],{"type":337,"value":896}," {boolean}\n",{"type":332,"tag":368,"props":898,"children":900},{"class":370,"line":899},14,[901],{"type":332,"tag":368,"props":902,"children":903},{"style":559},[904],{"type":337,"value":578},{"type":332,"tag":368,"props":906,"children":908},{"class":370,"line":907},15,[909,914,919,923,928,933,937,941,946],{"type":332,"tag":368,"props":910,"children":911},{"style":584},[912],{"type":337,"value":913},"var",{"type":332,"tag":368,"props":915,"children":916},{"style":590},[917],{"type":337,"value":918}," hasPathSum",{"type":332,"tag":368,"props":920,"children":921},{"style":653},[922],{"type":337,"value":656},{"type":332,"tag":368,"props":924,"children":925},{"style":584},[926],{"type":337,"value":927}," function",{"type":332,"tag":368,"props":929,"children":930},{"style":596},[931],{"type":337,"value":932}," (",{"type":332,"tag":368,"props":934,"children":935},{"style":602},[936],{"type":337,"value":329},{"type":332,"tag":368,"props":938,"children":939},{"style":608},[940],{"type":337,"value":611},{"type":332,"tag":368,"props":942,"children":943},{"style":602},[944],{"type":337,"value":945}," targetSum",{"type":332,"tag":368,"props":947,"children":948},{"style":596},[949],{"type":337,"value":630},{"type":332,"tag":368,"props":951,"children":953},{"class":370,"line":952},16,[954,960,964,968,972,976,981,986,991],{"type":332,"tag":368,"props":955,"children":957},{"style":956},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[958],{"type":337,"value":959},"  if",{"type":332,"tag":368,"props":961,"children":962},{"style":596},[963],{"type":337,"value":932},{"type":332,"tag":368,"props":965,"children":966},{"style":648},[967],{"type":337,"value":329},{"type":332,"tag":368,"props":969,"children":970},{"style":653},[971],{"type":337,"value":666},{"type":332,"tag":368,"props":973,"children":974},{"style":669},[975],{"type":337,"value":737},{"type":332,"tag":368,"props":977,"children":978},{"style":596},[979],{"type":337,"value":980},") ",{"type":332,"tag":368,"props":982,"children":983},{"style":956},[984],{"type":337,"value":985},"return",{"type":332,"tag":368,"props":987,"children":988},{"style":669},[989],{"type":337,"value":990}," false",{"type":332,"tag":368,"props":992,"children":993},{"style":608},[994],{"type":337,"value":696},{"type":332,"tag":368,"props":996,"children":998},{"class":370,"line":997},17,[999,1003,1007,1011,1015,1019,1023,1027,1032,1037,1041,1045,1049,1053,1057,1061,1065,1069,1073,1077,1081],{"type":332,"tag":368,"props":1000,"children":1001},{"style":956},[1002],{"type":337,"value":959},{"type":332,"tag":368,"props":1004,"children":1005},{"style":596},[1006],{"type":337,"value":932},{"type":332,"tag":368,"props":1008,"children":1009},{"style":648},[1010],{"type":337,"value":329},{"type":332,"tag":368,"props":1012,"children":1013},{"style":642},[1014],{"type":337,"value":645},{"type":332,"tag":368,"props":1016,"children":1017},{"style":648},[1018],{"type":337,"value":712},{"type":332,"tag":368,"props":1020,"children":1021},{"style":653},[1022],{"type":337,"value":666},{"type":332,"tag":368,"props":1024,"children":1025},{"style":669},[1026],{"type":337,"value":737},{"type":332,"tag":368,"props":1028,"children":1029},{"style":653},[1030],{"type":337,"value":1031}," &&",{"type":332,"tag":368,"props":1033,"children":1034},{"style":648},[1035],{"type":337,"value":1036}," root",{"type":332,"tag":368,"props":1038,"children":1039},{"style":642},[1040],{"type":337,"value":645},{"type":332,"tag":368,"props":1042,"children":1043},{"style":648},[1044],{"type":337,"value":766},{"type":332,"tag":368,"props":1046,"children":1047},{"style":653},[1048],{"type":337,"value":666},{"type":332,"tag":368,"props":1050,"children":1051},{"style":669},[1052],{"type":337,"value":737},{"type":332,"tag":368,"props":1054,"children":1055},{"style":596},[1056],{"type":337,"value":980},{"type":332,"tag":368,"props":1058,"children":1059},{"style":956},[1060],{"type":337,"value":985},{"type":332,"tag":368,"props":1062,"children":1063},{"style":648},[1064],{"type":337,"value":1036},{"type":332,"tag":368,"props":1066,"children":1067},{"style":642},[1068],{"type":337,"value":645},{"type":332,"tag":368,"props":1070,"children":1071},{"style":648},[1072],{"type":337,"value":605},{"type":332,"tag":368,"props":1074,"children":1075},{"style":653},[1076],{"type":337,"value":666},{"type":332,"tag":368,"props":1078,"children":1079},{"style":648},[1080],{"type":337,"value":945},{"type":332,"tag":368,"props":1082,"children":1083},{"style":608},[1084],{"type":337,"value":696},{"type":332,"tag":368,"props":1086,"children":1088},{"class":370,"line":1087},18,[1089,1094],{"type":332,"tag":368,"props":1090,"children":1091},{"style":956},[1092],{"type":337,"value":1093},"  return",{"type":332,"tag":368,"props":1095,"children":1096},{"style":596},[1097],{"type":337,"value":1098}," (\n",{"type":332,"tag":368,"props":1100,"children":1102},{"class":370,"line":1101},19,[1103,1108,1112,1116,1120,1124,1128,1132,1137,1141,1145,1149,1153],{"type":332,"tag":368,"props":1104,"children":1105},{"style":590},[1106],{"type":337,"value":1107},"    hasPathSum",{"type":332,"tag":368,"props":1109,"children":1110},{"style":596},[1111],{"type":337,"value":599},{"type":332,"tag":368,"props":1113,"children":1114},{"style":648},[1115],{"type":337,"value":329},{"type":332,"tag":368,"props":1117,"children":1118},{"style":642},[1119],{"type":337,"value":645},{"type":332,"tag":368,"props":1121,"children":1122},{"style":648},[1123],{"type":337,"value":712},{"type":332,"tag":368,"props":1125,"children":1126},{"style":608},[1127],{"type":337,"value":611},{"type":332,"tag":368,"props":1129,"children":1130},{"style":648},[1131],{"type":337,"value":945},{"type":332,"tag":368,"props":1133,"children":1134},{"style":653},[1135],{"type":337,"value":1136}," -",{"type":332,"tag":368,"props":1138,"children":1139},{"style":648},[1140],{"type":337,"value":1036},{"type":332,"tag":368,"props":1142,"children":1143},{"style":642},[1144],{"type":337,"value":645},{"type":332,"tag":368,"props":1146,"children":1147},{"style":648},[1148],{"type":337,"value":605},{"type":332,"tag":368,"props":1150,"children":1151},{"style":596},[1152],{"type":337,"value":980},{"type":332,"tag":368,"props":1154,"children":1155},{"style":653},[1156],{"type":337,"value":1157},"||\n",{"type":332,"tag":368,"props":1159,"children":1161},{"class":370,"line":1160},20,[1162,1166,1170,1174,1178,1182,1186,1190,1194,1198,1202,1206],{"type":332,"tag":368,"props":1163,"children":1164},{"style":590},[1165],{"type":337,"value":1107},{"type":332,"tag":368,"props":1167,"children":1168},{"style":596},[1169],{"type":337,"value":599},{"type":332,"tag":368,"props":1171,"children":1172},{"style":648},[1173],{"type":337,"value":329},{"type":332,"tag":368,"props":1175,"children":1176},{"style":642},[1177],{"type":337,"value":645},{"type":332,"tag":368,"props":1179,"children":1180},{"style":648},[1181],{"type":337,"value":766},{"type":332,"tag":368,"props":1183,"children":1184},{"style":608},[1185],{"type":337,"value":611},{"type":332,"tag":368,"props":1187,"children":1188},{"style":648},[1189],{"type":337,"value":945},{"type":332,"tag":368,"props":1191,"children":1192},{"style":653},[1193],{"type":337,"value":1136},{"type":332,"tag":368,"props":1195,"children":1196},{"style":648},[1197],{"type":337,"value":1036},{"type":332,"tag":368,"props":1199,"children":1200},{"style":642},[1201],{"type":337,"value":645},{"type":332,"tag":368,"props":1203,"children":1204},{"style":648},[1205],{"type":337,"value":605},{"type":332,"tag":368,"props":1207,"children":1208},{"style":596},[1209],{"type":337,"value":1210},")\n",{"type":332,"tag":368,"props":1212,"children":1214},{"class":370,"line":1213},21,[1215,1220],{"type":332,"tag":368,"props":1216,"children":1217},{"style":596},[1218],{"type":337,"value":1219},"  )",{"type":332,"tag":368,"props":1221,"children":1222},{"style":608},[1223],{"type":337,"value":696},{"type":332,"tag":368,"props":1225,"children":1227},{"class":370,"line":1226},22,[1228,1233],{"type":332,"tag":368,"props":1229,"children":1230},{"style":596},[1231],{"type":337,"value":1232},"}",{"type":332,"tag":368,"props":1234,"children":1235},{"style":608},[1236],{"type":337,"value":696},{"type":332,"tag":1238,"props":1239,"children":1240},"style",{},[1241],{"type":337,"value":1242},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":325,"searchDepth":451,"depth":451,"links":1244},[1245,1246],{"id":530,"depth":380,"text":530},{"id":535,"depth":380,"text":535,"children":1247},[1248],{"id":541,"depth":389,"text":544},"markdown","content:2.code:1.algorithm:3.leetcode:112.path-sum.md","content","2.code/1.algorithm/3.leetcode/112.path-sum.md","md",[1255,1257],{"_path":160,"title":159,"description":1256},"给定一个二叉树，找出其最小深度。",{"_path":166,"title":165,"description":1258},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",1712123931445]