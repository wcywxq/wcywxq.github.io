[{"data":1,"prerenderedAt":802},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/single-number":359,"/code/algorithm/leetcode/single-number-surround":797},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,269,318],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263,266],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.165 比较版本号","/code/algorithm/leetcode/compare-version-numbers",{"title":198,"_path":199},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":201,"_path":202},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":204,"_path":205},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":207,"_path":208},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":210,"_path":211},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":213,"_path":214},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":216,"_path":217},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":219,"_path":220},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":222,"_path":223},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":225,"_path":226},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":228,"_path":229},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":231,"_path":232},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":234,"_path":235},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":237,"_path":238},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":240,"_path":241},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":243,"_path":244},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":246,"_path":247},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":249,"_path":250},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":252,"_path":253},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":255,"_path":256},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":258,"_path":259},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":261,"_path":262},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":264,"_path":265},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":267,"_path":268},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":270,"_path":271,"children":272},"源码实现","/code/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/code/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/code/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/code/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/code/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/code/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/code/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/code/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/code/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/code/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/code/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/code/source/string",[315],{"title":316,"_path":317},"repeat()","/code/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/code/scene",[322,344,347,350,353,356],{"title":323,"_path":324,"children":325},"Promise","/code/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/code/scene/calcuate-object-bytes",{"title":348,"_path":349},"lodash.get","/code/scene/lodash-get",{"title":351,"_path":352},"记忆化请求函数 - 可缓存请求函数","/code/scene/memorize-request",{"title":354,"_path":355},"sku 算法实现","/code/scene/sku",{"title":357,"_path":358},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":172,"_dir":360,"_draft":361,"_partial":361,"_locale":362,"title":171,"description":363,"url":364,"body":365,"_type":792,"_id":793,"_source":794,"_file":795,"_extension":796},"leetcode",false,"","给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。","https://leetcode.cn/problems/single-number",{"type":366,"children":367,"toc":786},"root",[368,375,380,385,415,420,443,448,470,475,495,501,506,524,529,535,780],{"type":369,"tag":370,"props":371,"children":372},"element","p",{},[373],{"type":374,"value":363},"text",{"type":369,"tag":370,"props":376,"children":377},{},[378],{"type":374,"value":379},"你必须设计并实现线性时间复杂度的算法来解决此问题，且该算法只使用常量额外空间。",{"type":369,"tag":370,"props":381,"children":382},{},[383],{"type":374,"value":384},"示例 1 ：",{"type":369,"tag":386,"props":387,"children":390},"pre",{"className":388,"code":389,"language":374,"meta":362,"style":362},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [2,2,1]\n输出：1\n",[391],{"type":369,"tag":392,"props":393,"children":394},"code",{"__ignoreMap":362},[395,406],{"type":369,"tag":396,"props":397,"children":400},"span",{"class":398,"line":399},"line",1,[401],{"type":369,"tag":396,"props":402,"children":403},{},[404],{"type":374,"value":405},"输入：nums = [2,2,1]\n",{"type":369,"tag":396,"props":407,"children":409},{"class":398,"line":408},2,[410],{"type":369,"tag":396,"props":411,"children":412},{},[413],{"type":374,"value":414},"输出：1\n",{"type":369,"tag":370,"props":416,"children":417},{},[418],{"type":374,"value":419},"示例 2 ：",{"type":369,"tag":386,"props":421,"children":423},{"className":388,"code":422,"language":374,"meta":362,"style":362},"输入：nums = [4,1,2,1,2]\n输出：4\n",[424],{"type":369,"tag":392,"props":425,"children":426},{"__ignoreMap":362},[427,435],{"type":369,"tag":396,"props":428,"children":429},{"class":398,"line":399},[430],{"type":369,"tag":396,"props":431,"children":432},{},[433],{"type":374,"value":434},"输入：nums = [4,1,2,1,2]\n",{"type":369,"tag":396,"props":436,"children":437},{"class":398,"line":408},[438],{"type":369,"tag":396,"props":439,"children":440},{},[441],{"type":374,"value":442},"输出：4\n",{"type":369,"tag":370,"props":444,"children":445},{},[446],{"type":374,"value":447},"示例 3 ：",{"type":369,"tag":386,"props":449,"children":451},{"className":388,"code":450,"language":374,"meta":362,"style":362},"输入：nums = [1]\n输出：1\n",[452],{"type":369,"tag":392,"props":453,"children":454},{"__ignoreMap":362},[455,463],{"type":369,"tag":396,"props":456,"children":457},{"class":398,"line":399},[458],{"type":369,"tag":396,"props":459,"children":460},{},[461],{"type":374,"value":462},"输入：nums = [1]\n",{"type":369,"tag":396,"props":464,"children":465},{"class":398,"line":408},[466],{"type":369,"tag":396,"props":467,"children":468},{},[469],{"type":374,"value":414},{"type":369,"tag":370,"props":471,"children":472},{},[473],{"type":374,"value":474},"提示：",{"type":369,"tag":476,"props":477,"children":478},"ul",{},[479,485,490],{"type":369,"tag":480,"props":481,"children":482},"li",{},[483],{"type":374,"value":484},"1 \u003C= nums.length \u003C= 3 * 10^4",{"type":369,"tag":480,"props":486,"children":487},{},[488],{"type":374,"value":489},"-3 * 10^4 \u003C= nums[i] \u003C= 3 * 10^4",{"type":369,"tag":480,"props":491,"children":492},{},[493],{"type":374,"value":494},"除了某个元素只出现一次以外，其余每个元素均出现两次。",{"type":369,"tag":496,"props":497,"children":499},"h2",{"id":498},"解题思路",[500],{"type":374,"value":498},{"type":369,"tag":370,"props":502,"children":503},{},[504],{"type":374,"value":505},"异或满足以下行为：",{"type":369,"tag":476,"props":507,"children":508},{},[509,514,519],{"type":369,"tag":480,"props":510,"children":511},{},[512],{"type":374,"value":513},"a ^ 0 = a；",{"type":369,"tag":480,"props":515,"children":516},{},[517],{"type":374,"value":518},"a ^ a = 0；",{"type":369,"tag":480,"props":520,"children":521},{},[522],{"type":374,"value":523},"a ^ b ^ a = (a ^ a) ^ b = 0 ^ b = b",{"type":369,"tag":496,"props":525,"children":527},{"id":526},"实现",[528],{"type":374,"value":526},{"type":369,"tag":530,"props":531,"children":533},"h3",{"id":532},"异或",[534],{"type":374,"value":532},{"type":369,"tag":386,"props":536,"children":540},{"className":537,"code":538,"language":539,"meta":362,"style":362},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar singleNumber = function (nums) {\n  let ans = 0;\n  for (let num of nums) {\n    ans ^= num;\n  }\n  return ans;\n};\n","js",[541],{"type":369,"tag":392,"props":542,"children":543},{"__ignoreMap":362},[544,553,579,597,606,650,681,719,741,750,767],{"type":369,"tag":396,"props":545,"children":546},{"class":398,"line":399},[547],{"type":369,"tag":396,"props":548,"children":550},{"style":549},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[551],{"type":374,"value":552},"/**\n",{"type":369,"tag":396,"props":554,"children":555},{"class":398,"line":408},[556,561,567,573],{"type":369,"tag":396,"props":557,"children":558},{"style":549},[559],{"type":374,"value":560}," * ",{"type":369,"tag":396,"props":562,"children":564},{"style":563},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[565],{"type":374,"value":566},"@param",{"type":369,"tag":396,"props":568,"children":570},{"style":569},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[571],{"type":374,"value":572}," {number[]}",{"type":369,"tag":396,"props":574,"children":576},{"style":575},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[577],{"type":374,"value":578}," nums\n",{"type":369,"tag":396,"props":580,"children":582},{"class":398,"line":581},3,[583,587,592],{"type":369,"tag":396,"props":584,"children":585},{"style":549},[586],{"type":374,"value":560},{"type":369,"tag":396,"props":588,"children":589},{"style":563},[590],{"type":374,"value":591},"@return",{"type":369,"tag":396,"props":593,"children":594},{"style":569},[595],{"type":374,"value":596}," {number}\n",{"type":369,"tag":396,"props":598,"children":600},{"class":398,"line":599},4,[601],{"type":369,"tag":396,"props":602,"children":603},{"style":549},[604],{"type":374,"value":605}," */\n",{"type":369,"tag":396,"props":607,"children":609},{"class":398,"line":608},5,[610,616,622,628,633,639,645],{"type":369,"tag":396,"props":611,"children":613},{"style":612},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[614],{"type":374,"value":615},"var",{"type":369,"tag":396,"props":617,"children":619},{"style":618},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[620],{"type":374,"value":621}," singleNumber",{"type":369,"tag":396,"props":623,"children":625},{"style":624},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[626],{"type":374,"value":627}," =",{"type":369,"tag":396,"props":629,"children":630},{"style":612},[631],{"type":374,"value":632}," function",{"type":369,"tag":396,"props":634,"children":636},{"style":635},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[637],{"type":374,"value":638}," (",{"type":369,"tag":396,"props":640,"children":642},{"style":641},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[643],{"type":374,"value":644},"nums",{"type":369,"tag":396,"props":646,"children":647},{"style":635},[648],{"type":374,"value":649},") {\n",{"type":369,"tag":396,"props":651,"children":653},{"class":398,"line":652},6,[654,659,665,669,675],{"type":369,"tag":396,"props":655,"children":656},{"style":612},[657],{"type":374,"value":658},"  let",{"type":369,"tag":396,"props":660,"children":662},{"style":661},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[663],{"type":374,"value":664}," ans",{"type":369,"tag":396,"props":666,"children":667},{"style":624},[668],{"type":374,"value":627},{"type":369,"tag":396,"props":670,"children":672},{"style":671},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[673],{"type":374,"value":674}," 0",{"type":369,"tag":396,"props":676,"children":678},{"style":677},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[679],{"type":374,"value":680},";\n",{"type":369,"tag":396,"props":682,"children":684},{"class":398,"line":683},7,[685,691,695,700,705,710,715],{"type":369,"tag":396,"props":686,"children":688},{"style":687},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[689],{"type":374,"value":690},"  for",{"type":369,"tag":396,"props":692,"children":693},{"style":635},[694],{"type":374,"value":638},{"type":369,"tag":396,"props":696,"children":697},{"style":612},[698],{"type":374,"value":699},"let",{"type":369,"tag":396,"props":701,"children":702},{"style":661},[703],{"type":374,"value":704}," num",{"type":369,"tag":396,"props":706,"children":707},{"style":624},[708],{"type":374,"value":709}," of",{"type":369,"tag":396,"props":711,"children":712},{"style":661},[713],{"type":374,"value":714}," nums",{"type":369,"tag":396,"props":716,"children":717},{"style":635},[718],{"type":374,"value":649},{"type":369,"tag":396,"props":720,"children":722},{"class":398,"line":721},8,[723,728,733,737],{"type":369,"tag":396,"props":724,"children":725},{"style":661},[726],{"type":374,"value":727},"    ans",{"type":369,"tag":396,"props":729,"children":730},{"style":624},[731],{"type":374,"value":732}," ^=",{"type":369,"tag":396,"props":734,"children":735},{"style":661},[736],{"type":374,"value":704},{"type":369,"tag":396,"props":738,"children":739},{"style":677},[740],{"type":374,"value":680},{"type":369,"tag":396,"props":742,"children":744},{"class":398,"line":743},9,[745],{"type":369,"tag":396,"props":746,"children":747},{"style":635},[748],{"type":374,"value":749},"  }\n",{"type":369,"tag":396,"props":751,"children":753},{"class":398,"line":752},10,[754,759,763],{"type":369,"tag":396,"props":755,"children":756},{"style":687},[757],{"type":374,"value":758},"  return",{"type":369,"tag":396,"props":760,"children":761},{"style":661},[762],{"type":374,"value":664},{"type":369,"tag":396,"props":764,"children":765},{"style":677},[766],{"type":374,"value":680},{"type":369,"tag":396,"props":768,"children":770},{"class":398,"line":769},11,[771,776],{"type":369,"tag":396,"props":772,"children":773},{"style":635},[774],{"type":374,"value":775},"}",{"type":369,"tag":396,"props":777,"children":778},{"style":677},[779],{"type":374,"value":680},{"type":369,"tag":781,"props":782,"children":783},"style",{},[784],{"type":374,"value":785},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":362,"searchDepth":608,"depth":608,"links":787},[788,789],{"id":498,"depth":408,"text":498},{"id":526,"depth":408,"text":526,"children":790},[791],{"id":532,"depth":581,"text":532},"markdown","content:2.code:1.algorithm:3.leetcode:136.single-number.md","content","2.code/1.algorithm/3.leetcode/136.single-number.md","md",[798,800],{"_path":169,"title":168,"description":799},"给你一个二叉树的根节点 root ，树中每个节点都存放有一个 0 到 9 之间的数字。\n每条从根节点到叶节点的路径都代表一个数字：",{"_path":175,"title":174,"description":801},"给你一个链表的头节点 head ，判断链表中是否有环。",1712748637724]