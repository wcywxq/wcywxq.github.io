[{"data":1,"prerenderedAt":1020},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/find-peak-element":347,"/code/algorithm/leetcode/find-peak-element-surround":1015},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319,341,344],{"title":320,"_path":321,"children":322},"Promise","/code/scene/promise",[323,326,329,332,335,338],{"title":324,"_path":325},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":327,"_path":328},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":330,"_path":331},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":333,"_path":334},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":336,"_path":337},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":339,"_path":340},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":342,"_path":343},"lodash.get","/code/scene/lodash.get",{"title":345,"_path":346},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":193,"_dir":348,"_draft":349,"_partial":349,"_locale":350,"title":192,"description":351,"url":352,"body":353,"_type":1010,"_id":1011,"_source":1012,"_file":1013,"_extension":1014},"leetcode",false,"","峰值元素是指其值严格大于左右相邻值的元素。","https://leetcode.cn/problems/find-peak-element",{"type":354,"children":355,"toc":1004},"root",[356,363,368,373,378,383,422,427,467,472,492,498,503,509,998],{"type":357,"tag":358,"props":359,"children":360},"element","p",{},[361],{"type":362,"value":351},"text",{"type":357,"tag":358,"props":364,"children":365},{},[366],{"type":362,"value":367},"给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。",{"type":357,"tag":358,"props":369,"children":370},{},[371],{"type":362,"value":372},"你可以假设 nums[-1] = nums[n] = -∞ 。",{"type":357,"tag":358,"props":374,"children":375},{},[376],{"type":362,"value":377},"你必须实现时间复杂度为 O(log n) 的算法来解决此问题。",{"type":357,"tag":358,"props":379,"children":380},{},[381],{"type":362,"value":382},"示例 1：",{"type":357,"tag":384,"props":385,"children":388},"pre",{"className":386,"code":387,"language":362,"meta":350,"style":350},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。\n",[389],{"type":357,"tag":390,"props":391,"children":392},"code",{"__ignoreMap":350},[393,404,413],{"type":357,"tag":394,"props":395,"children":398},"span",{"class":396,"line":397},"line",1,[399],{"type":357,"tag":394,"props":400,"children":401},{},[402],{"type":362,"value":403},"输入：nums = [1,2,3,1]\n",{"type":357,"tag":394,"props":405,"children":407},{"class":396,"line":406},2,[408],{"type":357,"tag":394,"props":409,"children":410},{},[411],{"type":362,"value":412},"输出：2\n",{"type":357,"tag":394,"props":414,"children":416},{"class":396,"line":415},3,[417],{"type":357,"tag":394,"props":418,"children":419},{},[420],{"type":362,"value":421},"解释：3 是峰值元素，你的函数应该返回其索引 2。\n",{"type":357,"tag":358,"props":423,"children":424},{},[425],{"type":362,"value":426},"示例 2：",{"type":357,"tag":384,"props":428,"children":430},{"className":386,"code":429,"language":362,"meta":350,"style":350},"输入：nums = [1,2,1,3,5,6,4]\n输出：1 或 5\n解释：你的函数可以返回索引 1，其峰值元素为 2；\n或者返回索引 5， 其峰值元素为 6。\n",[431],{"type":357,"tag":390,"props":432,"children":433},{"__ignoreMap":350},[434,442,450,458],{"type":357,"tag":394,"props":435,"children":436},{"class":396,"line":397},[437],{"type":357,"tag":394,"props":438,"children":439},{},[440],{"type":362,"value":441},"输入：nums = [1,2,1,3,5,6,4]\n",{"type":357,"tag":394,"props":443,"children":444},{"class":396,"line":406},[445],{"type":357,"tag":394,"props":446,"children":447},{},[448],{"type":362,"value":449},"输出：1 或 5\n",{"type":357,"tag":394,"props":451,"children":452},{"class":396,"line":415},[453],{"type":357,"tag":394,"props":454,"children":455},{},[456],{"type":362,"value":457},"解释：你的函数可以返回索引 1，其峰值元素为 2；\n",{"type":357,"tag":394,"props":459,"children":461},{"class":396,"line":460},4,[462],{"type":357,"tag":394,"props":463,"children":464},{},[465],{"type":362,"value":466},"或者返回索引 5， 其峰值元素为 6。\n",{"type":357,"tag":358,"props":468,"children":469},{},[470],{"type":362,"value":471},"提示：",{"type":357,"tag":473,"props":474,"children":475},"ul",{},[476,482,487],{"type":357,"tag":477,"props":478,"children":479},"li",{},[480],{"type":362,"value":481},"1 \u003C= nums.length \u003C= 1000",{"type":357,"tag":477,"props":483,"children":484},{},[485],{"type":362,"value":486},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":357,"tag":477,"props":488,"children":489},{},[490],{"type":362,"value":491},"对于所有有效的 i 都有 nums[i] != nums[i + 1]",{"type":357,"tag":493,"props":494,"children":496},"h2",{"id":495},"解题思路",[497],{"type":362,"value":495},{"type":357,"tag":493,"props":499,"children":501},{"id":500},"实现",[502],{"type":362,"value":500},{"type":357,"tag":504,"props":505,"children":507},"h3",{"id":506},"二分查找",[508],{"type":362,"value":506},{"type":357,"tag":384,"props":510,"children":514},{"className":511,"code":512,"language":513,"meta":350,"style":350},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findPeakElement = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let l = -1;\n  let r = nums.length - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] > nums[mid + 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return r;\n};\n","js",[515],{"type":357,"tag":390,"props":516,"children":517},{"__ignoreMap":350},[518,527,553,570,578,622,631,640,676,723,764,816,878,905,924,950,959,968,985],{"type":357,"tag":394,"props":519,"children":520},{"class":396,"line":397},[521],{"type":357,"tag":394,"props":522,"children":524},{"style":523},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[525],{"type":362,"value":526},"/**\n",{"type":357,"tag":394,"props":528,"children":529},{"class":396,"line":406},[530,535,541,547],{"type":357,"tag":394,"props":531,"children":532},{"style":523},[533],{"type":362,"value":534}," * ",{"type":357,"tag":394,"props":536,"children":538},{"style":537},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[539],{"type":362,"value":540},"@param",{"type":357,"tag":394,"props":542,"children":544},{"style":543},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[545],{"type":362,"value":546}," {number[]}",{"type":357,"tag":394,"props":548,"children":550},{"style":549},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[551],{"type":362,"value":552}," nums\n",{"type":357,"tag":394,"props":554,"children":555},{"class":396,"line":415},[556,560,565],{"type":357,"tag":394,"props":557,"children":558},{"style":523},[559],{"type":362,"value":534},{"type":357,"tag":394,"props":561,"children":562},{"style":537},[563],{"type":362,"value":564},"@return",{"type":357,"tag":394,"props":566,"children":567},{"style":543},[568],{"type":362,"value":569}," {number}\n",{"type":357,"tag":394,"props":571,"children":572},{"class":396,"line":460},[573],{"type":357,"tag":394,"props":574,"children":575},{"style":523},[576],{"type":362,"value":577}," */\n",{"type":357,"tag":394,"props":579,"children":581},{"class":396,"line":580},5,[582,588,594,600,605,611,617],{"type":357,"tag":394,"props":583,"children":585},{"style":584},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[586],{"type":362,"value":587},"var",{"type":357,"tag":394,"props":589,"children":591},{"style":590},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[592],{"type":362,"value":593}," findPeakElement",{"type":357,"tag":394,"props":595,"children":597},{"style":596},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[598],{"type":362,"value":599}," =",{"type":357,"tag":394,"props":601,"children":602},{"style":584},[603],{"type":362,"value":604}," function",{"type":357,"tag":394,"props":606,"children":608},{"style":607},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[609],{"type":362,"value":610}," (",{"type":357,"tag":394,"props":612,"children":614},{"style":613},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[615],{"type":362,"value":616},"nums",{"type":357,"tag":394,"props":618,"children":619},{"style":607},[620],{"type":362,"value":621},") {\n",{"type":357,"tag":394,"props":623,"children":625},{"class":396,"line":624},6,[626],{"type":357,"tag":394,"props":627,"children":628},{"style":523},[629],{"type":362,"value":630},"  // [0, n - 2]\n",{"type":357,"tag":394,"props":632,"children":634},{"class":396,"line":633},7,[635],{"type":357,"tag":394,"props":636,"children":637},{"style":523},[638],{"type":362,"value":639},"  // (-1, n - 1) 开区间写法\n",{"type":357,"tag":394,"props":641,"children":643},{"class":396,"line":642},8,[644,649,655,659,664,670],{"type":357,"tag":394,"props":645,"children":646},{"style":584},[647],{"type":362,"value":648},"  let",{"type":357,"tag":394,"props":650,"children":652},{"style":651},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[653],{"type":362,"value":654}," l",{"type":357,"tag":394,"props":656,"children":657},{"style":596},[658],{"type":362,"value":599},{"type":357,"tag":394,"props":660,"children":661},{"style":596},[662],{"type":362,"value":663}," -",{"type":357,"tag":394,"props":665,"children":667},{"style":666},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[668],{"type":362,"value":669},"1",{"type":357,"tag":394,"props":671,"children":673},{"style":672},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[674],{"type":362,"value":675},";\n",{"type":357,"tag":394,"props":677,"children":679},{"class":396,"line":678},9,[680,684,689,693,698,704,709,714,719],{"type":357,"tag":394,"props":681,"children":682},{"style":584},[683],{"type":362,"value":648},{"type":357,"tag":394,"props":685,"children":686},{"style":651},[687],{"type":362,"value":688}," r",{"type":357,"tag":394,"props":690,"children":691},{"style":596},[692],{"type":362,"value":599},{"type":357,"tag":394,"props":694,"children":695},{"style":651},[696],{"type":362,"value":697}," nums",{"type":357,"tag":394,"props":699,"children":701},{"style":700},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[702],{"type":362,"value":703},".",{"type":357,"tag":394,"props":705,"children":706},{"style":607},[707],{"type":362,"value":708},"length ",{"type":357,"tag":394,"props":710,"children":711},{"style":596},[712],{"type":362,"value":713},"-",{"type":357,"tag":394,"props":715,"children":716},{"style":666},[717],{"type":362,"value":718}," 1",{"type":357,"tag":394,"props":720,"children":721},{"style":672},[722],{"type":362,"value":675},{"type":357,"tag":394,"props":724,"children":726},{"class":396,"line":725},10,[727,733,737,742,747,751,756,760],{"type":357,"tag":394,"props":728,"children":730},{"style":729},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[731],{"type":362,"value":732},"  while",{"type":357,"tag":394,"props":734,"children":735},{"style":607},[736],{"type":362,"value":610},{"type":357,"tag":394,"props":738,"children":739},{"style":651},[740],{"type":362,"value":741},"l",{"type":357,"tag":394,"props":743,"children":744},{"style":596},[745],{"type":362,"value":746}," +",{"type":357,"tag":394,"props":748,"children":749},{"style":666},[750],{"type":362,"value":718},{"type":357,"tag":394,"props":752,"children":753},{"style":596},[754],{"type":362,"value":755}," \u003C",{"type":357,"tag":394,"props":757,"children":758},{"style":651},[759],{"type":362,"value":688},{"type":357,"tag":394,"props":761,"children":762},{"style":607},[763],{"type":362,"value":621},{"type":357,"tag":394,"props":765,"children":767},{"class":396,"line":766},11,[768,773,778,782,786,790,794,798,803,808,812],{"type":357,"tag":394,"props":769,"children":770},{"style":584},[771],{"type":362,"value":772},"    let",{"type":357,"tag":394,"props":774,"children":775},{"style":651},[776],{"type":362,"value":777}," mid",{"type":357,"tag":394,"props":779,"children":780},{"style":596},[781],{"type":362,"value":599},{"type":357,"tag":394,"props":783,"children":784},{"style":607},[785],{"type":362,"value":610},{"type":357,"tag":394,"props":787,"children":788},{"style":651},[789],{"type":362,"value":741},{"type":357,"tag":394,"props":791,"children":792},{"style":596},[793],{"type":362,"value":746},{"type":357,"tag":394,"props":795,"children":796},{"style":651},[797],{"type":362,"value":688},{"type":357,"tag":394,"props":799,"children":800},{"style":607},[801],{"type":362,"value":802},") ",{"type":357,"tag":394,"props":804,"children":805},{"style":596},[806],{"type":362,"value":807},">>",{"type":357,"tag":394,"props":809,"children":810},{"style":666},[811],{"type":362,"value":718},{"type":357,"tag":394,"props":813,"children":814},{"style":672},[815],{"type":362,"value":675},{"type":357,"tag":394,"props":817,"children":819},{"class":396,"line":818},12,[820,825,829,833,838,843,848,853,857,861,865,869,873],{"type":357,"tag":394,"props":821,"children":822},{"style":729},[823],{"type":362,"value":824},"    if",{"type":357,"tag":394,"props":826,"children":827},{"style":607},[828],{"type":362,"value":610},{"type":357,"tag":394,"props":830,"children":831},{"style":651},[832],{"type":362,"value":616},{"type":357,"tag":394,"props":834,"children":835},{"style":607},[836],{"type":362,"value":837},"[",{"type":357,"tag":394,"props":839,"children":840},{"style":651},[841],{"type":362,"value":842},"mid",{"type":357,"tag":394,"props":844,"children":845},{"style":607},[846],{"type":362,"value":847},"] ",{"type":357,"tag":394,"props":849,"children":850},{"style":596},[851],{"type":362,"value":852},">",{"type":357,"tag":394,"props":854,"children":855},{"style":651},[856],{"type":362,"value":697},{"type":357,"tag":394,"props":858,"children":859},{"style":607},[860],{"type":362,"value":837},{"type":357,"tag":394,"props":862,"children":863},{"style":651},[864],{"type":362,"value":842},{"type":357,"tag":394,"props":866,"children":867},{"style":596},[868],{"type":362,"value":746},{"type":357,"tag":394,"props":870,"children":871},{"style":666},[872],{"type":362,"value":718},{"type":357,"tag":394,"props":874,"children":875},{"style":607},[876],{"type":362,"value":877},"]) {\n",{"type":357,"tag":394,"props":879,"children":881},{"class":396,"line":880},13,[882,887,891,895,900],{"type":357,"tag":394,"props":883,"children":884},{"style":651},[885],{"type":362,"value":886},"      r",{"type":357,"tag":394,"props":888,"children":889},{"style":596},[890],{"type":362,"value":599},{"type":357,"tag":394,"props":892,"children":893},{"style":651},[894],{"type":362,"value":777},{"type":357,"tag":394,"props":896,"children":897},{"style":672},[898],{"type":362,"value":899},";",{"type":357,"tag":394,"props":901,"children":902},{"style":523},[903],{"type":362,"value":904}," // 染蓝色\n",{"type":357,"tag":394,"props":906,"children":908},{"class":396,"line":907},14,[909,914,919],{"type":357,"tag":394,"props":910,"children":911},{"style":607},[912],{"type":362,"value":913},"    } ",{"type":357,"tag":394,"props":915,"children":916},{"style":729},[917],{"type":362,"value":918},"else",{"type":357,"tag":394,"props":920,"children":921},{"style":607},[922],{"type":362,"value":923}," {\n",{"type":357,"tag":394,"props":925,"children":927},{"class":396,"line":926},15,[928,933,937,941,945],{"type":357,"tag":394,"props":929,"children":930},{"style":651},[931],{"type":362,"value":932},"      l",{"type":357,"tag":394,"props":934,"children":935},{"style":596},[936],{"type":362,"value":599},{"type":357,"tag":394,"props":938,"children":939},{"style":651},[940],{"type":362,"value":777},{"type":357,"tag":394,"props":942,"children":943},{"style":672},[944],{"type":362,"value":899},{"type":357,"tag":394,"props":946,"children":947},{"style":523},[948],{"type":362,"value":949}," // 染红色\n",{"type":357,"tag":394,"props":951,"children":953},{"class":396,"line":952},16,[954],{"type":357,"tag":394,"props":955,"children":956},{"style":607},[957],{"type":362,"value":958},"    }\n",{"type":357,"tag":394,"props":960,"children":962},{"class":396,"line":961},17,[963],{"type":357,"tag":394,"props":964,"children":965},{"style":607},[966],{"type":362,"value":967},"  }\n",{"type":357,"tag":394,"props":969,"children":971},{"class":396,"line":970},18,[972,977,981],{"type":357,"tag":394,"props":973,"children":974},{"style":729},[975],{"type":362,"value":976},"  return",{"type":357,"tag":394,"props":978,"children":979},{"style":651},[980],{"type":362,"value":688},{"type":357,"tag":394,"props":982,"children":983},{"style":672},[984],{"type":362,"value":675},{"type":357,"tag":394,"props":986,"children":988},{"class":396,"line":987},19,[989,994],{"type":357,"tag":394,"props":990,"children":991},{"style":607},[992],{"type":362,"value":993},"}",{"type":357,"tag":394,"props":995,"children":996},{"style":672},[997],{"type":362,"value":675},{"type":357,"tag":999,"props":1000,"children":1001},"style",{},[1002],{"type":362,"value":1003},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":350,"searchDepth":580,"depth":580,"links":1005},[1006,1007],{"id":495,"depth":406,"text":495},{"id":500,"depth":406,"text":500,"children":1008},[1009],{"id":506,"depth":415,"text":506},"markdown","content:2.code:1.algorithm:3.leetcode:162.find-peak-element.md","content","2.code/1.algorithm/3.leetcode/162.find-peak-element.md","md",[1016,1018],{"_path":190,"title":189,"description":1017},"给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。",{"_path":196,"title":195,"description":1019},"给定一个大小为 n 的数组 nums ，返回其中的多数元素。多数元素是指在数组中出现次数 大于 ⌊ n/2 ⌋ 的元素。",1712580442359]