[{"data":1,"prerenderedAt":1002},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/find-peak-element":329,"/code/algorithm/leetcode/find-peak-element-surround":997},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319],{"title":320,"_path":321,"children":322},"Promise","/code/scene/promise",[323,326],{"title":324,"_path":325},"顺序打印 url 并支持 retry","/code/scene/promise/order-print-url-and-retry",{"title":327,"_path":328},"promise 实现图片加载数量限制","/code/scene/promise/limit-image-load-count",{"_path":193,"_dir":330,"_draft":331,"_partial":331,"_locale":332,"title":192,"description":333,"url":334,"body":335,"_type":992,"_id":993,"_source":994,"_file":995,"_extension":996},"leetcode",false,"","峰值元素是指其值严格大于左右相邻值的元素。","https://leetcode.cn/problems/find-peak-element",{"type":336,"children":337,"toc":986},"root",[338,345,350,355,360,365,404,409,449,454,474,480,485,491,980],{"type":339,"tag":340,"props":341,"children":342},"element","p",{},[343],{"type":344,"value":333},"text",{"type":339,"tag":340,"props":346,"children":347},{},[348],{"type":344,"value":349},"给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。",{"type":339,"tag":340,"props":351,"children":352},{},[353],{"type":344,"value":354},"你可以假设 nums[-1] = nums[n] = -∞ 。",{"type":339,"tag":340,"props":356,"children":357},{},[358],{"type":344,"value":359},"你必须实现时间复杂度为 O(log n) 的算法来解决此问题。",{"type":339,"tag":340,"props":361,"children":362},{},[363],{"type":344,"value":364},"示例 1：",{"type":339,"tag":366,"props":367,"children":370},"pre",{"className":368,"code":369,"language":344,"meta":332,"style":332},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。\n",[371],{"type":339,"tag":372,"props":373,"children":374},"code",{"__ignoreMap":332},[375,386,395],{"type":339,"tag":376,"props":377,"children":380},"span",{"class":378,"line":379},"line",1,[381],{"type":339,"tag":376,"props":382,"children":383},{},[384],{"type":344,"value":385},"输入：nums = [1,2,3,1]\n",{"type":339,"tag":376,"props":387,"children":389},{"class":378,"line":388},2,[390],{"type":339,"tag":376,"props":391,"children":392},{},[393],{"type":344,"value":394},"输出：2\n",{"type":339,"tag":376,"props":396,"children":398},{"class":378,"line":397},3,[399],{"type":339,"tag":376,"props":400,"children":401},{},[402],{"type":344,"value":403},"解释：3 是峰值元素，你的函数应该返回其索引 2。\n",{"type":339,"tag":340,"props":405,"children":406},{},[407],{"type":344,"value":408},"示例 2：",{"type":339,"tag":366,"props":410,"children":412},{"className":368,"code":411,"language":344,"meta":332,"style":332},"输入：nums = [1,2,1,3,5,6,4]\n输出：1 或 5\n解释：你的函数可以返回索引 1，其峰值元素为 2；\n或者返回索引 5， 其峰值元素为 6。\n",[413],{"type":339,"tag":372,"props":414,"children":415},{"__ignoreMap":332},[416,424,432,440],{"type":339,"tag":376,"props":417,"children":418},{"class":378,"line":379},[419],{"type":339,"tag":376,"props":420,"children":421},{},[422],{"type":344,"value":423},"输入：nums = [1,2,1,3,5,6,4]\n",{"type":339,"tag":376,"props":425,"children":426},{"class":378,"line":388},[427],{"type":339,"tag":376,"props":428,"children":429},{},[430],{"type":344,"value":431},"输出：1 或 5\n",{"type":339,"tag":376,"props":433,"children":434},{"class":378,"line":397},[435],{"type":339,"tag":376,"props":436,"children":437},{},[438],{"type":344,"value":439},"解释：你的函数可以返回索引 1，其峰值元素为 2；\n",{"type":339,"tag":376,"props":441,"children":443},{"class":378,"line":442},4,[444],{"type":339,"tag":376,"props":445,"children":446},{},[447],{"type":344,"value":448},"或者返回索引 5， 其峰值元素为 6。\n",{"type":339,"tag":340,"props":450,"children":451},{},[452],{"type":344,"value":453},"提示：",{"type":339,"tag":455,"props":456,"children":457},"ul",{},[458,464,469],{"type":339,"tag":459,"props":460,"children":461},"li",{},[462],{"type":344,"value":463},"1 \u003C= nums.length \u003C= 1000",{"type":339,"tag":459,"props":465,"children":466},{},[467],{"type":344,"value":468},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":339,"tag":459,"props":470,"children":471},{},[472],{"type":344,"value":473},"对于所有有效的 i 都有 nums[i] != nums[i + 1]",{"type":339,"tag":475,"props":476,"children":478},"h2",{"id":477},"解题思路",[479],{"type":344,"value":477},{"type":339,"tag":475,"props":481,"children":483},{"id":482},"实现",[484],{"type":344,"value":482},{"type":339,"tag":486,"props":487,"children":489},"h3",{"id":488},"二分查找",[490],{"type":344,"value":488},{"type":339,"tag":366,"props":492,"children":496},{"className":493,"code":494,"language":495,"meta":332,"style":332},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findPeakElement = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let l = -1;\n  let r = nums.length - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] > nums[mid + 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return r;\n};\n","js",[497],{"type":339,"tag":372,"props":498,"children":499},{"__ignoreMap":332},[500,509,535,552,560,604,613,622,658,705,746,798,860,887,906,932,941,950,967],{"type":339,"tag":376,"props":501,"children":502},{"class":378,"line":379},[503],{"type":339,"tag":376,"props":504,"children":506},{"style":505},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[507],{"type":344,"value":508},"/**\n",{"type":339,"tag":376,"props":510,"children":511},{"class":378,"line":388},[512,517,523,529],{"type":339,"tag":376,"props":513,"children":514},{"style":505},[515],{"type":344,"value":516}," * ",{"type":339,"tag":376,"props":518,"children":520},{"style":519},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[521],{"type":344,"value":522},"@param",{"type":339,"tag":376,"props":524,"children":526},{"style":525},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[527],{"type":344,"value":528}," {number[]}",{"type":339,"tag":376,"props":530,"children":532},{"style":531},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[533],{"type":344,"value":534}," nums\n",{"type":339,"tag":376,"props":536,"children":537},{"class":378,"line":397},[538,542,547],{"type":339,"tag":376,"props":539,"children":540},{"style":505},[541],{"type":344,"value":516},{"type":339,"tag":376,"props":543,"children":544},{"style":519},[545],{"type":344,"value":546},"@return",{"type":339,"tag":376,"props":548,"children":549},{"style":525},[550],{"type":344,"value":551}," {number}\n",{"type":339,"tag":376,"props":553,"children":554},{"class":378,"line":442},[555],{"type":339,"tag":376,"props":556,"children":557},{"style":505},[558],{"type":344,"value":559}," */\n",{"type":339,"tag":376,"props":561,"children":563},{"class":378,"line":562},5,[564,570,576,582,587,593,599],{"type":339,"tag":376,"props":565,"children":567},{"style":566},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[568],{"type":344,"value":569},"var",{"type":339,"tag":376,"props":571,"children":573},{"style":572},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[574],{"type":344,"value":575}," findPeakElement",{"type":339,"tag":376,"props":577,"children":579},{"style":578},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[580],{"type":344,"value":581}," =",{"type":339,"tag":376,"props":583,"children":584},{"style":566},[585],{"type":344,"value":586}," function",{"type":339,"tag":376,"props":588,"children":590},{"style":589},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[591],{"type":344,"value":592}," (",{"type":339,"tag":376,"props":594,"children":596},{"style":595},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[597],{"type":344,"value":598},"nums",{"type":339,"tag":376,"props":600,"children":601},{"style":589},[602],{"type":344,"value":603},") {\n",{"type":339,"tag":376,"props":605,"children":607},{"class":378,"line":606},6,[608],{"type":339,"tag":376,"props":609,"children":610},{"style":505},[611],{"type":344,"value":612},"  // [0, n - 2]\n",{"type":339,"tag":376,"props":614,"children":616},{"class":378,"line":615},7,[617],{"type":339,"tag":376,"props":618,"children":619},{"style":505},[620],{"type":344,"value":621},"  // (-1, n - 1) 开区间写法\n",{"type":339,"tag":376,"props":623,"children":625},{"class":378,"line":624},8,[626,631,637,641,646,652],{"type":339,"tag":376,"props":627,"children":628},{"style":566},[629],{"type":344,"value":630},"  let",{"type":339,"tag":376,"props":632,"children":634},{"style":633},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[635],{"type":344,"value":636}," l",{"type":339,"tag":376,"props":638,"children":639},{"style":578},[640],{"type":344,"value":581},{"type":339,"tag":376,"props":642,"children":643},{"style":578},[644],{"type":344,"value":645}," -",{"type":339,"tag":376,"props":647,"children":649},{"style":648},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[650],{"type":344,"value":651},"1",{"type":339,"tag":376,"props":653,"children":655},{"style":654},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[656],{"type":344,"value":657},";\n",{"type":339,"tag":376,"props":659,"children":661},{"class":378,"line":660},9,[662,666,671,675,680,686,691,696,701],{"type":339,"tag":376,"props":663,"children":664},{"style":566},[665],{"type":344,"value":630},{"type":339,"tag":376,"props":667,"children":668},{"style":633},[669],{"type":344,"value":670}," r",{"type":339,"tag":376,"props":672,"children":673},{"style":578},[674],{"type":344,"value":581},{"type":339,"tag":376,"props":676,"children":677},{"style":633},[678],{"type":344,"value":679}," nums",{"type":339,"tag":376,"props":681,"children":683},{"style":682},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[684],{"type":344,"value":685},".",{"type":339,"tag":376,"props":687,"children":688},{"style":589},[689],{"type":344,"value":690},"length ",{"type":339,"tag":376,"props":692,"children":693},{"style":578},[694],{"type":344,"value":695},"-",{"type":339,"tag":376,"props":697,"children":698},{"style":648},[699],{"type":344,"value":700}," 1",{"type":339,"tag":376,"props":702,"children":703},{"style":654},[704],{"type":344,"value":657},{"type":339,"tag":376,"props":706,"children":708},{"class":378,"line":707},10,[709,715,719,724,729,733,738,742],{"type":339,"tag":376,"props":710,"children":712},{"style":711},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[713],{"type":344,"value":714},"  while",{"type":339,"tag":376,"props":716,"children":717},{"style":589},[718],{"type":344,"value":592},{"type":339,"tag":376,"props":720,"children":721},{"style":633},[722],{"type":344,"value":723},"l",{"type":339,"tag":376,"props":725,"children":726},{"style":578},[727],{"type":344,"value":728}," +",{"type":339,"tag":376,"props":730,"children":731},{"style":648},[732],{"type":344,"value":700},{"type":339,"tag":376,"props":734,"children":735},{"style":578},[736],{"type":344,"value":737}," \u003C",{"type":339,"tag":376,"props":739,"children":740},{"style":633},[741],{"type":344,"value":670},{"type":339,"tag":376,"props":743,"children":744},{"style":589},[745],{"type":344,"value":603},{"type":339,"tag":376,"props":747,"children":749},{"class":378,"line":748},11,[750,755,760,764,768,772,776,780,785,790,794],{"type":339,"tag":376,"props":751,"children":752},{"style":566},[753],{"type":344,"value":754},"    let",{"type":339,"tag":376,"props":756,"children":757},{"style":633},[758],{"type":344,"value":759}," mid",{"type":339,"tag":376,"props":761,"children":762},{"style":578},[763],{"type":344,"value":581},{"type":339,"tag":376,"props":765,"children":766},{"style":589},[767],{"type":344,"value":592},{"type":339,"tag":376,"props":769,"children":770},{"style":633},[771],{"type":344,"value":723},{"type":339,"tag":376,"props":773,"children":774},{"style":578},[775],{"type":344,"value":728},{"type":339,"tag":376,"props":777,"children":778},{"style":633},[779],{"type":344,"value":670},{"type":339,"tag":376,"props":781,"children":782},{"style":589},[783],{"type":344,"value":784},") ",{"type":339,"tag":376,"props":786,"children":787},{"style":578},[788],{"type":344,"value":789},">>",{"type":339,"tag":376,"props":791,"children":792},{"style":648},[793],{"type":344,"value":700},{"type":339,"tag":376,"props":795,"children":796},{"style":654},[797],{"type":344,"value":657},{"type":339,"tag":376,"props":799,"children":801},{"class":378,"line":800},12,[802,807,811,815,820,825,830,835,839,843,847,851,855],{"type":339,"tag":376,"props":803,"children":804},{"style":711},[805],{"type":344,"value":806},"    if",{"type":339,"tag":376,"props":808,"children":809},{"style":589},[810],{"type":344,"value":592},{"type":339,"tag":376,"props":812,"children":813},{"style":633},[814],{"type":344,"value":598},{"type":339,"tag":376,"props":816,"children":817},{"style":589},[818],{"type":344,"value":819},"[",{"type":339,"tag":376,"props":821,"children":822},{"style":633},[823],{"type":344,"value":824},"mid",{"type":339,"tag":376,"props":826,"children":827},{"style":589},[828],{"type":344,"value":829},"] ",{"type":339,"tag":376,"props":831,"children":832},{"style":578},[833],{"type":344,"value":834},">",{"type":339,"tag":376,"props":836,"children":837},{"style":633},[838],{"type":344,"value":679},{"type":339,"tag":376,"props":840,"children":841},{"style":589},[842],{"type":344,"value":819},{"type":339,"tag":376,"props":844,"children":845},{"style":633},[846],{"type":344,"value":824},{"type":339,"tag":376,"props":848,"children":849},{"style":578},[850],{"type":344,"value":728},{"type":339,"tag":376,"props":852,"children":853},{"style":648},[854],{"type":344,"value":700},{"type":339,"tag":376,"props":856,"children":857},{"style":589},[858],{"type":344,"value":859},"]) {\n",{"type":339,"tag":376,"props":861,"children":863},{"class":378,"line":862},13,[864,869,873,877,882],{"type":339,"tag":376,"props":865,"children":866},{"style":633},[867],{"type":344,"value":868},"      r",{"type":339,"tag":376,"props":870,"children":871},{"style":578},[872],{"type":344,"value":581},{"type":339,"tag":376,"props":874,"children":875},{"style":633},[876],{"type":344,"value":759},{"type":339,"tag":376,"props":878,"children":879},{"style":654},[880],{"type":344,"value":881},";",{"type":339,"tag":376,"props":883,"children":884},{"style":505},[885],{"type":344,"value":886}," // 染蓝色\n",{"type":339,"tag":376,"props":888,"children":890},{"class":378,"line":889},14,[891,896,901],{"type":339,"tag":376,"props":892,"children":893},{"style":589},[894],{"type":344,"value":895},"    } ",{"type":339,"tag":376,"props":897,"children":898},{"style":711},[899],{"type":344,"value":900},"else",{"type":339,"tag":376,"props":902,"children":903},{"style":589},[904],{"type":344,"value":905}," {\n",{"type":339,"tag":376,"props":907,"children":909},{"class":378,"line":908},15,[910,915,919,923,927],{"type":339,"tag":376,"props":911,"children":912},{"style":633},[913],{"type":344,"value":914},"      l",{"type":339,"tag":376,"props":916,"children":917},{"style":578},[918],{"type":344,"value":581},{"type":339,"tag":376,"props":920,"children":921},{"style":633},[922],{"type":344,"value":759},{"type":339,"tag":376,"props":924,"children":925},{"style":654},[926],{"type":344,"value":881},{"type":339,"tag":376,"props":928,"children":929},{"style":505},[930],{"type":344,"value":931}," // 染红色\n",{"type":339,"tag":376,"props":933,"children":935},{"class":378,"line":934},16,[936],{"type":339,"tag":376,"props":937,"children":938},{"style":589},[939],{"type":344,"value":940},"    }\n",{"type":339,"tag":376,"props":942,"children":944},{"class":378,"line":943},17,[945],{"type":339,"tag":376,"props":946,"children":947},{"style":589},[948],{"type":344,"value":949},"  }\n",{"type":339,"tag":376,"props":951,"children":953},{"class":378,"line":952},18,[954,959,963],{"type":339,"tag":376,"props":955,"children":956},{"style":711},[957],{"type":344,"value":958},"  return",{"type":339,"tag":376,"props":960,"children":961},{"style":633},[962],{"type":344,"value":670},{"type":339,"tag":376,"props":964,"children":965},{"style":654},[966],{"type":344,"value":657},{"type":339,"tag":376,"props":968,"children":970},{"class":378,"line":969},19,[971,976],{"type":339,"tag":376,"props":972,"children":973},{"style":589},[974],{"type":344,"value":975},"}",{"type":339,"tag":376,"props":977,"children":978},{"style":654},[979],{"type":344,"value":657},{"type":339,"tag":981,"props":982,"children":983},"style",{},[984],{"type":344,"value":985},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":332,"searchDepth":562,"depth":562,"links":987},[988,989],{"id":477,"depth":388,"text":477},{"id":482,"depth":388,"text":482,"children":990},[991],{"id":488,"depth":397,"text":488},"markdown","content:2.code:1.algorithm:3.leetcode:162.find-peak-element.md","content","2.code/1.algorithm/3.leetcode/162.find-peak-element.md","md",[998,1000],{"_path":190,"title":189,"description":999},"给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。",{"_path":196,"title":195,"description":1001},"给定一个大小为 n 的数组 nums ，返回其中的多数元素。多数元素是指在数组中出现次数 大于 ⌊ n/2 ⌋ 的元素。",1712330889825]