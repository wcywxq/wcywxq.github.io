[{"data":1,"prerenderedAt":1026},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/find-peak-element":353,"/code/algorithm/leetcode/find-peak-element-surround":1021},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319,341,344,347,350],{"title":320,"_path":321,"children":322},"Promise","/code/scene/promise",[323,326,329,332,335,338],{"title":324,"_path":325},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":327,"_path":328},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":330,"_path":331},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":333,"_path":334},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":336,"_path":337},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":339,"_path":340},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":342,"_path":343},"计算对象占用字节数","/code/scene/calcuate-object-bytes",{"title":345,"_path":346},"lodash.get","/code/scene/lodash-get",{"title":348,"_path":349},"sku 算法实现","/code/scene/sku",{"title":351,"_path":352},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":193,"_dir":354,"_draft":355,"_partial":355,"_locale":356,"title":192,"description":357,"url":358,"body":359,"_type":1016,"_id":1017,"_source":1018,"_file":1019,"_extension":1020},"leetcode",false,"","峰值元素是指其值严格大于左右相邻值的元素。","https://leetcode.cn/problems/find-peak-element",{"type":360,"children":361,"toc":1010},"root",[362,369,374,379,384,389,428,433,473,478,498,504,509,515,1004],{"type":363,"tag":364,"props":365,"children":366},"element","p",{},[367],{"type":368,"value":357},"text",{"type":363,"tag":364,"props":370,"children":371},{},[372],{"type":368,"value":373},"给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。",{"type":363,"tag":364,"props":375,"children":376},{},[377],{"type":368,"value":378},"你可以假设 nums[-1] = nums[n] = -∞ 。",{"type":363,"tag":364,"props":380,"children":381},{},[382],{"type":368,"value":383},"你必须实现时间复杂度为 O(log n) 的算法来解决此问题。",{"type":363,"tag":364,"props":385,"children":386},{},[387],{"type":368,"value":388},"示例 1：",{"type":363,"tag":390,"props":391,"children":394},"pre",{"className":392,"code":393,"language":368,"meta":356,"style":356},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。\n",[395],{"type":363,"tag":396,"props":397,"children":398},"code",{"__ignoreMap":356},[399,410,419],{"type":363,"tag":400,"props":401,"children":404},"span",{"class":402,"line":403},"line",1,[405],{"type":363,"tag":400,"props":406,"children":407},{},[408],{"type":368,"value":409},"输入：nums = [1,2,3,1]\n",{"type":363,"tag":400,"props":411,"children":413},{"class":402,"line":412},2,[414],{"type":363,"tag":400,"props":415,"children":416},{},[417],{"type":368,"value":418},"输出：2\n",{"type":363,"tag":400,"props":420,"children":422},{"class":402,"line":421},3,[423],{"type":363,"tag":400,"props":424,"children":425},{},[426],{"type":368,"value":427},"解释：3 是峰值元素，你的函数应该返回其索引 2。\n",{"type":363,"tag":364,"props":429,"children":430},{},[431],{"type":368,"value":432},"示例 2：",{"type":363,"tag":390,"props":434,"children":436},{"className":392,"code":435,"language":368,"meta":356,"style":356},"输入：nums = [1,2,1,3,5,6,4]\n输出：1 或 5\n解释：你的函数可以返回索引 1，其峰值元素为 2；\n或者返回索引 5， 其峰值元素为 6。\n",[437],{"type":363,"tag":396,"props":438,"children":439},{"__ignoreMap":356},[440,448,456,464],{"type":363,"tag":400,"props":441,"children":442},{"class":402,"line":403},[443],{"type":363,"tag":400,"props":444,"children":445},{},[446],{"type":368,"value":447},"输入：nums = [1,2,1,3,5,6,4]\n",{"type":363,"tag":400,"props":449,"children":450},{"class":402,"line":412},[451],{"type":363,"tag":400,"props":452,"children":453},{},[454],{"type":368,"value":455},"输出：1 或 5\n",{"type":363,"tag":400,"props":457,"children":458},{"class":402,"line":421},[459],{"type":363,"tag":400,"props":460,"children":461},{},[462],{"type":368,"value":463},"解释：你的函数可以返回索引 1，其峰值元素为 2；\n",{"type":363,"tag":400,"props":465,"children":467},{"class":402,"line":466},4,[468],{"type":363,"tag":400,"props":469,"children":470},{},[471],{"type":368,"value":472},"或者返回索引 5， 其峰值元素为 6。\n",{"type":363,"tag":364,"props":474,"children":475},{},[476],{"type":368,"value":477},"提示：",{"type":363,"tag":479,"props":480,"children":481},"ul",{},[482,488,493],{"type":363,"tag":483,"props":484,"children":485},"li",{},[486],{"type":368,"value":487},"1 \u003C= nums.length \u003C= 1000",{"type":363,"tag":483,"props":489,"children":490},{},[491],{"type":368,"value":492},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":363,"tag":483,"props":494,"children":495},{},[496],{"type":368,"value":497},"对于所有有效的 i 都有 nums[i] != nums[i + 1]",{"type":363,"tag":499,"props":500,"children":502},"h2",{"id":501},"解题思路",[503],{"type":368,"value":501},{"type":363,"tag":499,"props":505,"children":507},{"id":506},"实现",[508],{"type":368,"value":506},{"type":363,"tag":510,"props":511,"children":513},"h3",{"id":512},"二分查找",[514],{"type":368,"value":512},{"type":363,"tag":390,"props":516,"children":520},{"className":517,"code":518,"language":519,"meta":356,"style":356},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findPeakElement = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let l = -1;\n  let r = nums.length - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] > nums[mid + 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return r;\n};\n","js",[521],{"type":363,"tag":396,"props":522,"children":523},{"__ignoreMap":356},[524,533,559,576,584,628,637,646,682,729,770,822,884,911,930,956,965,974,991],{"type":363,"tag":400,"props":525,"children":526},{"class":402,"line":403},[527],{"type":363,"tag":400,"props":528,"children":530},{"style":529},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[531],{"type":368,"value":532},"/**\n",{"type":363,"tag":400,"props":534,"children":535},{"class":402,"line":412},[536,541,547,553],{"type":363,"tag":400,"props":537,"children":538},{"style":529},[539],{"type":368,"value":540}," * ",{"type":363,"tag":400,"props":542,"children":544},{"style":543},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[545],{"type":368,"value":546},"@param",{"type":363,"tag":400,"props":548,"children":550},{"style":549},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[551],{"type":368,"value":552}," {number[]}",{"type":363,"tag":400,"props":554,"children":556},{"style":555},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[557],{"type":368,"value":558}," nums\n",{"type":363,"tag":400,"props":560,"children":561},{"class":402,"line":421},[562,566,571],{"type":363,"tag":400,"props":563,"children":564},{"style":529},[565],{"type":368,"value":540},{"type":363,"tag":400,"props":567,"children":568},{"style":543},[569],{"type":368,"value":570},"@return",{"type":363,"tag":400,"props":572,"children":573},{"style":549},[574],{"type":368,"value":575}," {number}\n",{"type":363,"tag":400,"props":577,"children":578},{"class":402,"line":466},[579],{"type":363,"tag":400,"props":580,"children":581},{"style":529},[582],{"type":368,"value":583}," */\n",{"type":363,"tag":400,"props":585,"children":587},{"class":402,"line":586},5,[588,594,600,606,611,617,623],{"type":363,"tag":400,"props":589,"children":591},{"style":590},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[592],{"type":368,"value":593},"var",{"type":363,"tag":400,"props":595,"children":597},{"style":596},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[598],{"type":368,"value":599}," findPeakElement",{"type":363,"tag":400,"props":601,"children":603},{"style":602},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[604],{"type":368,"value":605}," =",{"type":363,"tag":400,"props":607,"children":608},{"style":590},[609],{"type":368,"value":610}," function",{"type":363,"tag":400,"props":612,"children":614},{"style":613},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[615],{"type":368,"value":616}," (",{"type":363,"tag":400,"props":618,"children":620},{"style":619},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[621],{"type":368,"value":622},"nums",{"type":363,"tag":400,"props":624,"children":625},{"style":613},[626],{"type":368,"value":627},") {\n",{"type":363,"tag":400,"props":629,"children":631},{"class":402,"line":630},6,[632],{"type":363,"tag":400,"props":633,"children":634},{"style":529},[635],{"type":368,"value":636},"  // [0, n - 2]\n",{"type":363,"tag":400,"props":638,"children":640},{"class":402,"line":639},7,[641],{"type":363,"tag":400,"props":642,"children":643},{"style":529},[644],{"type":368,"value":645},"  // (-1, n - 1) 开区间写法\n",{"type":363,"tag":400,"props":647,"children":649},{"class":402,"line":648},8,[650,655,661,665,670,676],{"type":363,"tag":400,"props":651,"children":652},{"style":590},[653],{"type":368,"value":654},"  let",{"type":363,"tag":400,"props":656,"children":658},{"style":657},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[659],{"type":368,"value":660}," l",{"type":363,"tag":400,"props":662,"children":663},{"style":602},[664],{"type":368,"value":605},{"type":363,"tag":400,"props":666,"children":667},{"style":602},[668],{"type":368,"value":669}," -",{"type":363,"tag":400,"props":671,"children":673},{"style":672},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[674],{"type":368,"value":675},"1",{"type":363,"tag":400,"props":677,"children":679},{"style":678},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[680],{"type":368,"value":681},";\n",{"type":363,"tag":400,"props":683,"children":685},{"class":402,"line":684},9,[686,690,695,699,704,710,715,720,725],{"type":363,"tag":400,"props":687,"children":688},{"style":590},[689],{"type":368,"value":654},{"type":363,"tag":400,"props":691,"children":692},{"style":657},[693],{"type":368,"value":694}," r",{"type":363,"tag":400,"props":696,"children":697},{"style":602},[698],{"type":368,"value":605},{"type":363,"tag":400,"props":700,"children":701},{"style":657},[702],{"type":368,"value":703}," nums",{"type":363,"tag":400,"props":705,"children":707},{"style":706},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[708],{"type":368,"value":709},".",{"type":363,"tag":400,"props":711,"children":712},{"style":613},[713],{"type":368,"value":714},"length ",{"type":363,"tag":400,"props":716,"children":717},{"style":602},[718],{"type":368,"value":719},"-",{"type":363,"tag":400,"props":721,"children":722},{"style":672},[723],{"type":368,"value":724}," 1",{"type":363,"tag":400,"props":726,"children":727},{"style":678},[728],{"type":368,"value":681},{"type":363,"tag":400,"props":730,"children":732},{"class":402,"line":731},10,[733,739,743,748,753,757,762,766],{"type":363,"tag":400,"props":734,"children":736},{"style":735},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[737],{"type":368,"value":738},"  while",{"type":363,"tag":400,"props":740,"children":741},{"style":613},[742],{"type":368,"value":616},{"type":363,"tag":400,"props":744,"children":745},{"style":657},[746],{"type":368,"value":747},"l",{"type":363,"tag":400,"props":749,"children":750},{"style":602},[751],{"type":368,"value":752}," +",{"type":363,"tag":400,"props":754,"children":755},{"style":672},[756],{"type":368,"value":724},{"type":363,"tag":400,"props":758,"children":759},{"style":602},[760],{"type":368,"value":761}," \u003C",{"type":363,"tag":400,"props":763,"children":764},{"style":657},[765],{"type":368,"value":694},{"type":363,"tag":400,"props":767,"children":768},{"style":613},[769],{"type":368,"value":627},{"type":363,"tag":400,"props":771,"children":773},{"class":402,"line":772},11,[774,779,784,788,792,796,800,804,809,814,818],{"type":363,"tag":400,"props":775,"children":776},{"style":590},[777],{"type":368,"value":778},"    let",{"type":363,"tag":400,"props":780,"children":781},{"style":657},[782],{"type":368,"value":783}," mid",{"type":363,"tag":400,"props":785,"children":786},{"style":602},[787],{"type":368,"value":605},{"type":363,"tag":400,"props":789,"children":790},{"style":613},[791],{"type":368,"value":616},{"type":363,"tag":400,"props":793,"children":794},{"style":657},[795],{"type":368,"value":747},{"type":363,"tag":400,"props":797,"children":798},{"style":602},[799],{"type":368,"value":752},{"type":363,"tag":400,"props":801,"children":802},{"style":657},[803],{"type":368,"value":694},{"type":363,"tag":400,"props":805,"children":806},{"style":613},[807],{"type":368,"value":808},") ",{"type":363,"tag":400,"props":810,"children":811},{"style":602},[812],{"type":368,"value":813},">>",{"type":363,"tag":400,"props":815,"children":816},{"style":672},[817],{"type":368,"value":724},{"type":363,"tag":400,"props":819,"children":820},{"style":678},[821],{"type":368,"value":681},{"type":363,"tag":400,"props":823,"children":825},{"class":402,"line":824},12,[826,831,835,839,844,849,854,859,863,867,871,875,879],{"type":363,"tag":400,"props":827,"children":828},{"style":735},[829],{"type":368,"value":830},"    if",{"type":363,"tag":400,"props":832,"children":833},{"style":613},[834],{"type":368,"value":616},{"type":363,"tag":400,"props":836,"children":837},{"style":657},[838],{"type":368,"value":622},{"type":363,"tag":400,"props":840,"children":841},{"style":613},[842],{"type":368,"value":843},"[",{"type":363,"tag":400,"props":845,"children":846},{"style":657},[847],{"type":368,"value":848},"mid",{"type":363,"tag":400,"props":850,"children":851},{"style":613},[852],{"type":368,"value":853},"] ",{"type":363,"tag":400,"props":855,"children":856},{"style":602},[857],{"type":368,"value":858},">",{"type":363,"tag":400,"props":860,"children":861},{"style":657},[862],{"type":368,"value":703},{"type":363,"tag":400,"props":864,"children":865},{"style":613},[866],{"type":368,"value":843},{"type":363,"tag":400,"props":868,"children":869},{"style":657},[870],{"type":368,"value":848},{"type":363,"tag":400,"props":872,"children":873},{"style":602},[874],{"type":368,"value":752},{"type":363,"tag":400,"props":876,"children":877},{"style":672},[878],{"type":368,"value":724},{"type":363,"tag":400,"props":880,"children":881},{"style":613},[882],{"type":368,"value":883},"]) {\n",{"type":363,"tag":400,"props":885,"children":887},{"class":402,"line":886},13,[888,893,897,901,906],{"type":363,"tag":400,"props":889,"children":890},{"style":657},[891],{"type":368,"value":892},"      r",{"type":363,"tag":400,"props":894,"children":895},{"style":602},[896],{"type":368,"value":605},{"type":363,"tag":400,"props":898,"children":899},{"style":657},[900],{"type":368,"value":783},{"type":363,"tag":400,"props":902,"children":903},{"style":678},[904],{"type":368,"value":905},";",{"type":363,"tag":400,"props":907,"children":908},{"style":529},[909],{"type":368,"value":910}," // 染蓝色\n",{"type":363,"tag":400,"props":912,"children":914},{"class":402,"line":913},14,[915,920,925],{"type":363,"tag":400,"props":916,"children":917},{"style":613},[918],{"type":368,"value":919},"    } ",{"type":363,"tag":400,"props":921,"children":922},{"style":735},[923],{"type":368,"value":924},"else",{"type":363,"tag":400,"props":926,"children":927},{"style":613},[928],{"type":368,"value":929}," {\n",{"type":363,"tag":400,"props":931,"children":933},{"class":402,"line":932},15,[934,939,943,947,951],{"type":363,"tag":400,"props":935,"children":936},{"style":657},[937],{"type":368,"value":938},"      l",{"type":363,"tag":400,"props":940,"children":941},{"style":602},[942],{"type":368,"value":605},{"type":363,"tag":400,"props":944,"children":945},{"style":657},[946],{"type":368,"value":783},{"type":363,"tag":400,"props":948,"children":949},{"style":678},[950],{"type":368,"value":905},{"type":363,"tag":400,"props":952,"children":953},{"style":529},[954],{"type":368,"value":955}," // 染红色\n",{"type":363,"tag":400,"props":957,"children":959},{"class":402,"line":958},16,[960],{"type":363,"tag":400,"props":961,"children":962},{"style":613},[963],{"type":368,"value":964},"    }\n",{"type":363,"tag":400,"props":966,"children":968},{"class":402,"line":967},17,[969],{"type":363,"tag":400,"props":970,"children":971},{"style":613},[972],{"type":368,"value":973},"  }\n",{"type":363,"tag":400,"props":975,"children":977},{"class":402,"line":976},18,[978,983,987],{"type":363,"tag":400,"props":979,"children":980},{"style":735},[981],{"type":368,"value":982},"  return",{"type":363,"tag":400,"props":984,"children":985},{"style":657},[986],{"type":368,"value":694},{"type":363,"tag":400,"props":988,"children":989},{"style":678},[990],{"type":368,"value":681},{"type":363,"tag":400,"props":992,"children":994},{"class":402,"line":993},19,[995,1000],{"type":363,"tag":400,"props":996,"children":997},{"style":613},[998],{"type":368,"value":999},"}",{"type":363,"tag":400,"props":1001,"children":1002},{"style":678},[1003],{"type":368,"value":681},{"type":363,"tag":1005,"props":1006,"children":1007},"style",{},[1008],{"type":368,"value":1009},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":356,"searchDepth":586,"depth":586,"links":1011},[1012,1013],{"id":501,"depth":412,"text":501},{"id":506,"depth":412,"text":506,"children":1014},[1015],{"id":512,"depth":421,"text":512},"markdown","content:2.code:1.algorithm:3.leetcode:162.find-peak-element.md","content","2.code/1.algorithm/3.leetcode/162.find-peak-element.md","md",[1022,1024],{"_path":190,"title":189,"description":1023},"给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。",{"_path":196,"title":195,"description":1025},"给定一个大小为 n 的数组 nums ，返回其中的多数元素。多数元素是指在数组中出现次数 大于 ⌊ n/2 ⌋ 的元素。",1712589912802]