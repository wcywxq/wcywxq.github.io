[{"data":1,"prerenderedAt":993},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/find-peak-element":320,"/code/algorithm/leetcode/find-peak-element-surround":988},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,264,313],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,53],{"title":41,"_path":42,"children":43},"剑指 offer","/code/algorithm/sword-ofter",[44,47,50],{"title":45,"_path":46},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":48,"_path":49},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":51,"_path":52},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":54,"_path":55,"children":56},"力扣 leetCode","/code/algorithm/leetcode",[57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261],{"title":58,"_path":59},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":61,"_path":62},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":64,"_path":65},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":67,"_path":68},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":70,"_path":71},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":73,"_path":74},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":76,"_path":77},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":79,"_path":80},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":82,"_path":83},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":85,"_path":86},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":88,"_path":89},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":91,"_path":92},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":94,"_path":95},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":97,"_path":98},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":100,"_path":101},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":103,"_path":104},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":106,"_path":107},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":109,"_path":110},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":112,"_path":113},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":115,"_path":116},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":118,"_path":119},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":121,"_path":122},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":124,"_path":125},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":127,"_path":128},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":130,"_path":131},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":133,"_path":134},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":136,"_path":137},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":139,"_path":140},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":142,"_path":143},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":145,"_path":146},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":148,"_path":149},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":151,"_path":152},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":154,"_path":155},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":157,"_path":158},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":160,"_path":161},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":163,"_path":164},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":166,"_path":167},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":169,"_path":170},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":172,"_path":173},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":175,"_path":176},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":178,"_path":179},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":181,"_path":182},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":184,"_path":185},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":187,"_path":188},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":190,"_path":191},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":193,"_path":194},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":196,"_path":197},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":199,"_path":200},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":202,"_path":203},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":205,"_path":206},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":208,"_path":209},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":211,"_path":212},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":214,"_path":215},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":217,"_path":218},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":220,"_path":221},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":223,"_path":224},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":226,"_path":227},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":229,"_path":230},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":232,"_path":233},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":235,"_path":236},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":238,"_path":239},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":241,"_path":242},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":244,"_path":245},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":247,"_path":248},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":250,"_path":251},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":253,"_path":254},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":256,"_path":257},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":259,"_path":260},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":262,"_path":263},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":265,"_path":266,"children":267},"源码实现","/code/source",[268,293,306],{"title":269,"_path":270,"children":271},"原生 api","/code/source/native-api",[272,275,278,281,284,287,290],{"title":273,"_path":274},"ajax","/code/source/native-api/ajax",{"title":276,"_path":277},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":279,"_path":280},"new 操作符","/code/source/native-api/new",{"title":282,"_path":283},"instanceof 关键字","/code/source/native-api/instanceof",{"title":285,"_path":286},"定时器","/code/source/native-api/timer",{"title":288,"_path":289},"JSON.stringify","/code/source/native-api/json-stringify",{"title":291,"_path":292},"Iterator 迭代器","/code/source/native-api/iterator",{"title":294,"_path":295,"children":296},"数组 Array","/code/source/array",[297,300,303],{"title":298,"_path":299},"数组去重","/code/source/array/remove-duplicate",{"title":301,"_path":302},"数组扁平化","/code/source/array/flat",{"title":304,"_path":305},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":307,"_path":308,"children":309},"字符串 String","/code/source/string",[310],{"title":311,"_path":312},"repeat()","/code/source/string/repeat",{"title":314,"_path":315,"children":316},"业务场景","/code/scene",[317],{"title":318,"_path":319},"顺序打印 url 并支持 retry","/code/scene/promise-url-retry",{"_path":191,"_dir":321,"_draft":322,"_partial":322,"_locale":323,"title":190,"description":324,"url":325,"body":326,"_type":983,"_id":984,"_source":985,"_file":986,"_extension":987},"leetcode",false,"","峰值元素是指其值严格大于左右相邻值的元素。","https://leetcode.cn/problems/find-peak-element",{"type":327,"children":328,"toc":977},"root",[329,336,341,346,351,356,395,400,440,445,465,471,476,482,971],{"type":330,"tag":331,"props":332,"children":333},"element","p",{},[334],{"type":335,"value":324},"text",{"type":330,"tag":331,"props":337,"children":338},{},[339],{"type":335,"value":340},"给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。",{"type":330,"tag":331,"props":342,"children":343},{},[344],{"type":335,"value":345},"你可以假设 nums[-1] = nums[n] = -∞ 。",{"type":330,"tag":331,"props":347,"children":348},{},[349],{"type":335,"value":350},"你必须实现时间复杂度为 O(log n) 的算法来解决此问题。",{"type":330,"tag":331,"props":352,"children":353},{},[354],{"type":335,"value":355},"示例 1：",{"type":330,"tag":357,"props":358,"children":361},"pre",{"className":359,"code":360,"language":335,"meta":323,"style":323},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。\n",[362],{"type":330,"tag":363,"props":364,"children":365},"code",{"__ignoreMap":323},[366,377,386],{"type":330,"tag":367,"props":368,"children":371},"span",{"class":369,"line":370},"line",1,[372],{"type":330,"tag":367,"props":373,"children":374},{},[375],{"type":335,"value":376},"输入：nums = [1,2,3,1]\n",{"type":330,"tag":367,"props":378,"children":380},{"class":369,"line":379},2,[381],{"type":330,"tag":367,"props":382,"children":383},{},[384],{"type":335,"value":385},"输出：2\n",{"type":330,"tag":367,"props":387,"children":389},{"class":369,"line":388},3,[390],{"type":330,"tag":367,"props":391,"children":392},{},[393],{"type":335,"value":394},"解释：3 是峰值元素，你的函数应该返回其索引 2。\n",{"type":330,"tag":331,"props":396,"children":397},{},[398],{"type":335,"value":399},"示例 2：",{"type":330,"tag":357,"props":401,"children":403},{"className":359,"code":402,"language":335,"meta":323,"style":323},"输入：nums = [1,2,1,3,5,6,4]\n输出：1 或 5\n解释：你的函数可以返回索引 1，其峰值元素为 2；\n或者返回索引 5， 其峰值元素为 6。\n",[404],{"type":330,"tag":363,"props":405,"children":406},{"__ignoreMap":323},[407,415,423,431],{"type":330,"tag":367,"props":408,"children":409},{"class":369,"line":370},[410],{"type":330,"tag":367,"props":411,"children":412},{},[413],{"type":335,"value":414},"输入：nums = [1,2,1,3,5,6,4]\n",{"type":330,"tag":367,"props":416,"children":417},{"class":369,"line":379},[418],{"type":330,"tag":367,"props":419,"children":420},{},[421],{"type":335,"value":422},"输出：1 或 5\n",{"type":330,"tag":367,"props":424,"children":425},{"class":369,"line":388},[426],{"type":330,"tag":367,"props":427,"children":428},{},[429],{"type":335,"value":430},"解释：你的函数可以返回索引 1，其峰值元素为 2；\n",{"type":330,"tag":367,"props":432,"children":434},{"class":369,"line":433},4,[435],{"type":330,"tag":367,"props":436,"children":437},{},[438],{"type":335,"value":439},"或者返回索引 5， 其峰值元素为 6。\n",{"type":330,"tag":331,"props":441,"children":442},{},[443],{"type":335,"value":444},"提示：",{"type":330,"tag":446,"props":447,"children":448},"ul",{},[449,455,460],{"type":330,"tag":450,"props":451,"children":452},"li",{},[453],{"type":335,"value":454},"1 \u003C= nums.length \u003C= 1000",{"type":330,"tag":450,"props":456,"children":457},{},[458],{"type":335,"value":459},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":330,"tag":450,"props":461,"children":462},{},[463],{"type":335,"value":464},"对于所有有效的 i 都有 nums[i] != nums[i + 1]",{"type":330,"tag":466,"props":467,"children":469},"h2",{"id":468},"解题思路",[470],{"type":335,"value":468},{"type":330,"tag":466,"props":472,"children":474},{"id":473},"实现",[475],{"type":335,"value":473},{"type":330,"tag":477,"props":478,"children":480},"h3",{"id":479},"二分查找",[481],{"type":335,"value":479},{"type":330,"tag":357,"props":483,"children":487},{"className":484,"code":485,"language":486,"meta":323,"style":323},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findPeakElement = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let l = -1;\n  let r = nums.length - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] > nums[mid + 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return r;\n};\n","js",[488],{"type":330,"tag":363,"props":489,"children":490},{"__ignoreMap":323},[491,500,526,543,551,595,604,613,649,696,737,789,851,878,897,923,932,941,958],{"type":330,"tag":367,"props":492,"children":493},{"class":369,"line":370},[494],{"type":330,"tag":367,"props":495,"children":497},{"style":496},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[498],{"type":335,"value":499},"/**\n",{"type":330,"tag":367,"props":501,"children":502},{"class":369,"line":379},[503,508,514,520],{"type":330,"tag":367,"props":504,"children":505},{"style":496},[506],{"type":335,"value":507}," * ",{"type":330,"tag":367,"props":509,"children":511},{"style":510},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[512],{"type":335,"value":513},"@param",{"type":330,"tag":367,"props":515,"children":517},{"style":516},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[518],{"type":335,"value":519}," {number[]}",{"type":330,"tag":367,"props":521,"children":523},{"style":522},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[524],{"type":335,"value":525}," nums\n",{"type":330,"tag":367,"props":527,"children":528},{"class":369,"line":388},[529,533,538],{"type":330,"tag":367,"props":530,"children":531},{"style":496},[532],{"type":335,"value":507},{"type":330,"tag":367,"props":534,"children":535},{"style":510},[536],{"type":335,"value":537},"@return",{"type":330,"tag":367,"props":539,"children":540},{"style":516},[541],{"type":335,"value":542}," {number}\n",{"type":330,"tag":367,"props":544,"children":545},{"class":369,"line":433},[546],{"type":330,"tag":367,"props":547,"children":548},{"style":496},[549],{"type":335,"value":550}," */\n",{"type":330,"tag":367,"props":552,"children":554},{"class":369,"line":553},5,[555,561,567,573,578,584,590],{"type":330,"tag":367,"props":556,"children":558},{"style":557},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[559],{"type":335,"value":560},"var",{"type":330,"tag":367,"props":562,"children":564},{"style":563},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[565],{"type":335,"value":566}," findPeakElement",{"type":330,"tag":367,"props":568,"children":570},{"style":569},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[571],{"type":335,"value":572}," =",{"type":330,"tag":367,"props":574,"children":575},{"style":557},[576],{"type":335,"value":577}," function",{"type":330,"tag":367,"props":579,"children":581},{"style":580},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[582],{"type":335,"value":583}," (",{"type":330,"tag":367,"props":585,"children":587},{"style":586},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[588],{"type":335,"value":589},"nums",{"type":330,"tag":367,"props":591,"children":592},{"style":580},[593],{"type":335,"value":594},") {\n",{"type":330,"tag":367,"props":596,"children":598},{"class":369,"line":597},6,[599],{"type":330,"tag":367,"props":600,"children":601},{"style":496},[602],{"type":335,"value":603},"  // [0, n - 2]\n",{"type":330,"tag":367,"props":605,"children":607},{"class":369,"line":606},7,[608],{"type":330,"tag":367,"props":609,"children":610},{"style":496},[611],{"type":335,"value":612},"  // (-1, n - 1) 开区间写法\n",{"type":330,"tag":367,"props":614,"children":616},{"class":369,"line":615},8,[617,622,628,632,637,643],{"type":330,"tag":367,"props":618,"children":619},{"style":557},[620],{"type":335,"value":621},"  let",{"type":330,"tag":367,"props":623,"children":625},{"style":624},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[626],{"type":335,"value":627}," l",{"type":330,"tag":367,"props":629,"children":630},{"style":569},[631],{"type":335,"value":572},{"type":330,"tag":367,"props":633,"children":634},{"style":569},[635],{"type":335,"value":636}," -",{"type":330,"tag":367,"props":638,"children":640},{"style":639},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[641],{"type":335,"value":642},"1",{"type":330,"tag":367,"props":644,"children":646},{"style":645},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[647],{"type":335,"value":648},";\n",{"type":330,"tag":367,"props":650,"children":652},{"class":369,"line":651},9,[653,657,662,666,671,677,682,687,692],{"type":330,"tag":367,"props":654,"children":655},{"style":557},[656],{"type":335,"value":621},{"type":330,"tag":367,"props":658,"children":659},{"style":624},[660],{"type":335,"value":661}," r",{"type":330,"tag":367,"props":663,"children":664},{"style":569},[665],{"type":335,"value":572},{"type":330,"tag":367,"props":667,"children":668},{"style":624},[669],{"type":335,"value":670}," nums",{"type":330,"tag":367,"props":672,"children":674},{"style":673},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[675],{"type":335,"value":676},".",{"type":330,"tag":367,"props":678,"children":679},{"style":580},[680],{"type":335,"value":681},"length ",{"type":330,"tag":367,"props":683,"children":684},{"style":569},[685],{"type":335,"value":686},"-",{"type":330,"tag":367,"props":688,"children":689},{"style":639},[690],{"type":335,"value":691}," 1",{"type":330,"tag":367,"props":693,"children":694},{"style":645},[695],{"type":335,"value":648},{"type":330,"tag":367,"props":697,"children":699},{"class":369,"line":698},10,[700,706,710,715,720,724,729,733],{"type":330,"tag":367,"props":701,"children":703},{"style":702},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[704],{"type":335,"value":705},"  while",{"type":330,"tag":367,"props":707,"children":708},{"style":580},[709],{"type":335,"value":583},{"type":330,"tag":367,"props":711,"children":712},{"style":624},[713],{"type":335,"value":714},"l",{"type":330,"tag":367,"props":716,"children":717},{"style":569},[718],{"type":335,"value":719}," +",{"type":330,"tag":367,"props":721,"children":722},{"style":639},[723],{"type":335,"value":691},{"type":330,"tag":367,"props":725,"children":726},{"style":569},[727],{"type":335,"value":728}," \u003C",{"type":330,"tag":367,"props":730,"children":731},{"style":624},[732],{"type":335,"value":661},{"type":330,"tag":367,"props":734,"children":735},{"style":580},[736],{"type":335,"value":594},{"type":330,"tag":367,"props":738,"children":740},{"class":369,"line":739},11,[741,746,751,755,759,763,767,771,776,781,785],{"type":330,"tag":367,"props":742,"children":743},{"style":557},[744],{"type":335,"value":745},"    let",{"type":330,"tag":367,"props":747,"children":748},{"style":624},[749],{"type":335,"value":750}," mid",{"type":330,"tag":367,"props":752,"children":753},{"style":569},[754],{"type":335,"value":572},{"type":330,"tag":367,"props":756,"children":757},{"style":580},[758],{"type":335,"value":583},{"type":330,"tag":367,"props":760,"children":761},{"style":624},[762],{"type":335,"value":714},{"type":330,"tag":367,"props":764,"children":765},{"style":569},[766],{"type":335,"value":719},{"type":330,"tag":367,"props":768,"children":769},{"style":624},[770],{"type":335,"value":661},{"type":330,"tag":367,"props":772,"children":773},{"style":580},[774],{"type":335,"value":775},") ",{"type":330,"tag":367,"props":777,"children":778},{"style":569},[779],{"type":335,"value":780},">>",{"type":330,"tag":367,"props":782,"children":783},{"style":639},[784],{"type":335,"value":691},{"type":330,"tag":367,"props":786,"children":787},{"style":645},[788],{"type":335,"value":648},{"type":330,"tag":367,"props":790,"children":792},{"class":369,"line":791},12,[793,798,802,806,811,816,821,826,830,834,838,842,846],{"type":330,"tag":367,"props":794,"children":795},{"style":702},[796],{"type":335,"value":797},"    if",{"type":330,"tag":367,"props":799,"children":800},{"style":580},[801],{"type":335,"value":583},{"type":330,"tag":367,"props":803,"children":804},{"style":624},[805],{"type":335,"value":589},{"type":330,"tag":367,"props":807,"children":808},{"style":580},[809],{"type":335,"value":810},"[",{"type":330,"tag":367,"props":812,"children":813},{"style":624},[814],{"type":335,"value":815},"mid",{"type":330,"tag":367,"props":817,"children":818},{"style":580},[819],{"type":335,"value":820},"] ",{"type":330,"tag":367,"props":822,"children":823},{"style":569},[824],{"type":335,"value":825},">",{"type":330,"tag":367,"props":827,"children":828},{"style":624},[829],{"type":335,"value":670},{"type":330,"tag":367,"props":831,"children":832},{"style":580},[833],{"type":335,"value":810},{"type":330,"tag":367,"props":835,"children":836},{"style":624},[837],{"type":335,"value":815},{"type":330,"tag":367,"props":839,"children":840},{"style":569},[841],{"type":335,"value":719},{"type":330,"tag":367,"props":843,"children":844},{"style":639},[845],{"type":335,"value":691},{"type":330,"tag":367,"props":847,"children":848},{"style":580},[849],{"type":335,"value":850},"]) {\n",{"type":330,"tag":367,"props":852,"children":854},{"class":369,"line":853},13,[855,860,864,868,873],{"type":330,"tag":367,"props":856,"children":857},{"style":624},[858],{"type":335,"value":859},"      r",{"type":330,"tag":367,"props":861,"children":862},{"style":569},[863],{"type":335,"value":572},{"type":330,"tag":367,"props":865,"children":866},{"style":624},[867],{"type":335,"value":750},{"type":330,"tag":367,"props":869,"children":870},{"style":645},[871],{"type":335,"value":872},";",{"type":330,"tag":367,"props":874,"children":875},{"style":496},[876],{"type":335,"value":877}," // 染蓝色\n",{"type":330,"tag":367,"props":879,"children":881},{"class":369,"line":880},14,[882,887,892],{"type":330,"tag":367,"props":883,"children":884},{"style":580},[885],{"type":335,"value":886},"    } ",{"type":330,"tag":367,"props":888,"children":889},{"style":702},[890],{"type":335,"value":891},"else",{"type":330,"tag":367,"props":893,"children":894},{"style":580},[895],{"type":335,"value":896}," {\n",{"type":330,"tag":367,"props":898,"children":900},{"class":369,"line":899},15,[901,906,910,914,918],{"type":330,"tag":367,"props":902,"children":903},{"style":624},[904],{"type":335,"value":905},"      l",{"type":330,"tag":367,"props":907,"children":908},{"style":569},[909],{"type":335,"value":572},{"type":330,"tag":367,"props":911,"children":912},{"style":624},[913],{"type":335,"value":750},{"type":330,"tag":367,"props":915,"children":916},{"style":645},[917],{"type":335,"value":872},{"type":330,"tag":367,"props":919,"children":920},{"style":496},[921],{"type":335,"value":922}," // 染红色\n",{"type":330,"tag":367,"props":924,"children":926},{"class":369,"line":925},16,[927],{"type":330,"tag":367,"props":928,"children":929},{"style":580},[930],{"type":335,"value":931},"    }\n",{"type":330,"tag":367,"props":933,"children":935},{"class":369,"line":934},17,[936],{"type":330,"tag":367,"props":937,"children":938},{"style":580},[939],{"type":335,"value":940},"  }\n",{"type":330,"tag":367,"props":942,"children":944},{"class":369,"line":943},18,[945,950,954],{"type":330,"tag":367,"props":946,"children":947},{"style":702},[948],{"type":335,"value":949},"  return",{"type":330,"tag":367,"props":951,"children":952},{"style":624},[953],{"type":335,"value":661},{"type":330,"tag":367,"props":955,"children":956},{"style":645},[957],{"type":335,"value":648},{"type":330,"tag":367,"props":959,"children":961},{"class":369,"line":960},19,[962,967],{"type":330,"tag":367,"props":963,"children":964},{"style":580},[965],{"type":335,"value":966},"}",{"type":330,"tag":367,"props":968,"children":969},{"style":645},[970],{"type":335,"value":648},{"type":330,"tag":972,"props":973,"children":974},"style",{},[975],{"type":335,"value":976},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":323,"searchDepth":553,"depth":553,"links":978},[979,980],{"id":468,"depth":379,"text":468},{"id":473,"depth":379,"text":473,"children":981},[982],{"id":479,"depth":388,"text":479},"markdown","content:2.code:1.algorithm:2.leetcode:162.find-peak-element.md","content","2.code/1.algorithm/2.leetcode/162.find-peak-element.md","md",[989,991],{"_path":188,"title":187,"description":990},"给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。",{"_path":194,"title":193,"description":992},"给定一个大小为 n 的数组 nums ，返回其中的多数元素。多数元素是指在数组中出现次数 大于 ⌊ n/2 ⌋ 的元素。",1712112510365]