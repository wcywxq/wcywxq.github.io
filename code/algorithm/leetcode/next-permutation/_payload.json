[{"data":1,"prerenderedAt":1371},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/next-permutation":322,"/code/algorithm/leetcode/next-permutation-surround":1366},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319],{"title":320,"_path":321},"顺序打印 url 并支持 retry","/code/scene/promise-url-retry",{"_path":106,"_dir":323,"_draft":324,"_partial":324,"_locale":325,"title":105,"description":326,"url":327,"body":328,"_type":1361,"_id":1362,"_source":1363,"_file":1364,"_extension":1365},"leetcode",false,"","整数数组的一个 排列 就是将其所有成员以序列或线性顺序排列。","https://leetcode.cn/problems/next-permutation",{"type":329,"children":330,"toc":1355},"root",[331,338,348,353,371,376,381,386,416,421,444,449,472,477,490,496,501,507,1349],{"type":332,"tag":333,"props":334,"children":335},"element","p",{},[336],{"type":337,"value":326},"text",{"type":332,"tag":339,"props":340,"children":341},"ul",{},[342],{"type":332,"tag":343,"props":344,"children":345},"li",{},[346],{"type":337,"value":347},"例如，arr = [1,2,3] ，以下这些都可以视作 arr 的排列：[1,2,3]、[1,3,2]、[3,1,2]、[2,3,1] 。",{"type":332,"tag":333,"props":349,"children":350},{},[351],{"type":337,"value":352},"整数数组的 下一个排列 是指其整数的下一个字典序更大的排列。更正式地，如果数组的所有排列根据其字典顺序从小到大排列在一个容器中，那么数组的 下一个排列 就是在这个有序容器中排在它后面的那个排列。如果不存在下一个更大的排列，那么这个数组必须重排为字典序最小的排列（即，其元素按升序排列）。",{"type":332,"tag":339,"props":354,"children":355},{},[356,361,366],{"type":332,"tag":343,"props":357,"children":358},{},[359],{"type":337,"value":360},"例如，arr = [1,2,3] 的下一个排列是 [1,3,2] 。",{"type":332,"tag":343,"props":362,"children":363},{},[364],{"type":337,"value":365},"类似地，arr = [2,3,1] 的下一个排列是 [3,1,2] 。",{"type":332,"tag":343,"props":367,"children":368},{},[369],{"type":337,"value":370},"而 arr = [3,2,1] 的下一个排列是 [1,2,3] ，因为 [3,2,1] 不存在一个字典序更大的排列。",{"type":332,"tag":333,"props":372,"children":373},{},[374],{"type":337,"value":375},"给你一个整数数组 nums ，找出 nums 的下一个排列。",{"type":332,"tag":333,"props":377,"children":378},{},[379],{"type":337,"value":380},"必须 原地 修改，只允许使用额外常数空间。",{"type":332,"tag":333,"props":382,"children":383},{},[384],{"type":337,"value":385},"示例 1：",{"type":332,"tag":387,"props":388,"children":391},"pre",{"className":389,"code":390,"language":337,"meta":325,"style":325},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3]\n输出：[1,3,2]\n",[392],{"type":332,"tag":393,"props":394,"children":395},"code",{"__ignoreMap":325},[396,407],{"type":332,"tag":397,"props":398,"children":401},"span",{"class":399,"line":400},"line",1,[402],{"type":332,"tag":397,"props":403,"children":404},{},[405],{"type":337,"value":406},"输入：nums = [1,2,3]\n",{"type":332,"tag":397,"props":408,"children":410},{"class":399,"line":409},2,[411],{"type":332,"tag":397,"props":412,"children":413},{},[414],{"type":337,"value":415},"输出：[1,3,2]\n",{"type":332,"tag":333,"props":417,"children":418},{},[419],{"type":337,"value":420},"示例 2：",{"type":332,"tag":387,"props":422,"children":424},{"className":389,"code":423,"language":337,"meta":325,"style":325},"输入：nums = [3,2,1]\n输出：[1,2,3]\n",[425],{"type":332,"tag":393,"props":426,"children":427},{"__ignoreMap":325},[428,436],{"type":332,"tag":397,"props":429,"children":430},{"class":399,"line":400},[431],{"type":332,"tag":397,"props":432,"children":433},{},[434],{"type":337,"value":435},"输入：nums = [3,2,1]\n",{"type":332,"tag":397,"props":437,"children":438},{"class":399,"line":409},[439],{"type":332,"tag":397,"props":440,"children":441},{},[442],{"type":337,"value":443},"输出：[1,2,3]\n",{"type":332,"tag":333,"props":445,"children":446},{},[447],{"type":337,"value":448},"示例 3：",{"type":332,"tag":387,"props":450,"children":452},{"className":389,"code":451,"language":337,"meta":325,"style":325},"输入：nums = [1,1,5]\n输出：[1,5,1]\n",[453],{"type":332,"tag":393,"props":454,"children":455},{"__ignoreMap":325},[456,464],{"type":332,"tag":397,"props":457,"children":458},{"class":399,"line":400},[459],{"type":332,"tag":397,"props":460,"children":461},{},[462],{"type":337,"value":463},"输入：nums = [1,1,5]\n",{"type":332,"tag":397,"props":465,"children":466},{"class":399,"line":409},[467],{"type":332,"tag":397,"props":468,"children":469},{},[470],{"type":337,"value":471},"输出：[1,5,1]\n",{"type":332,"tag":333,"props":473,"children":474},{},[475],{"type":337,"value":476},"提示：",{"type":332,"tag":339,"props":478,"children":479},{},[480,485],{"type":332,"tag":343,"props":481,"children":482},{},[483],{"type":337,"value":484},"1 \u003C= nums.length \u003C= 100",{"type":332,"tag":343,"props":486,"children":487},{},[488],{"type":337,"value":489},"0 \u003C= nums[i] \u003C= 100",{"type":332,"tag":491,"props":492,"children":494},"h2",{"id":493},"解题思路",[495],{"type":337,"value":493},{"type":332,"tag":491,"props":497,"children":499},{"id":498},"实现",[500],{"type":337,"value":498},{"type":332,"tag":502,"props":503,"children":505},"h3",{"id":504},"双指针",[506],{"type":337,"value":504},{"type":332,"tag":387,"props":508,"children":512},{"className":509,"code":510,"language":511,"meta":325,"style":325},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar nextPermutation = function (nums) {\n  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n  let i = nums.length - 2;\n  while (i >= 0 && nums[i] >= nums[i + 1]) {\n    i--;\n  }\n  // i 在数组中存在，进行交换\n  if (i >= 0) {\n    let j = nums.length - 1;\n    while (j >= 0 && nums[i] >= nums[j]) {\n      j--;\n    }\n    // 交换\n    [nums[i], nums[j]] = [nums[j], nums[i]];\n  }\n  // i 不存在，说明是递减序列，则 i 是 -1\n  let l = i + 1;\n  let r = nums.length - 1;\n  while (l \u003C r) {\n    [nums[l], nums[r]] = [nums[r], nums[l]];\n    l++;\n    r--;\n  }\n};\n","js",[513],{"type":332,"tag":393,"props":514,"children":515},{"__ignoreMap":325},[516,525,551,574,583,627,636,688,772,790,799,808,837,879,945,962,971,980,1079,1087,1096,1129,1170,1200,1293,1311,1328,1336],{"type":332,"tag":397,"props":517,"children":518},{"class":399,"line":400},[519],{"type":332,"tag":397,"props":520,"children":522},{"style":521},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[523],{"type":337,"value":524},"/**\n",{"type":332,"tag":397,"props":526,"children":527},{"class":399,"line":409},[528,533,539,545],{"type":332,"tag":397,"props":529,"children":530},{"style":521},[531],{"type":337,"value":532}," * ",{"type":332,"tag":397,"props":534,"children":536},{"style":535},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[537],{"type":337,"value":538},"@param",{"type":332,"tag":397,"props":540,"children":542},{"style":541},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[543],{"type":337,"value":544}," {number[]}",{"type":332,"tag":397,"props":546,"children":548},{"style":547},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[549],{"type":337,"value":550}," nums\n",{"type":332,"tag":397,"props":552,"children":554},{"class":399,"line":553},3,[555,559,564,569],{"type":332,"tag":397,"props":556,"children":557},{"style":521},[558],{"type":337,"value":532},{"type":332,"tag":397,"props":560,"children":561},{"style":535},[562],{"type":337,"value":563},"@return",{"type":332,"tag":397,"props":565,"children":566},{"style":541},[567],{"type":337,"value":568}," {void}",{"type":332,"tag":397,"props":570,"children":571},{"style":521},[572],{"type":337,"value":573}," Do not return anything, modify nums in-place instead.\n",{"type":332,"tag":397,"props":575,"children":577},{"class":399,"line":576},4,[578],{"type":332,"tag":397,"props":579,"children":580},{"style":521},[581],{"type":337,"value":582}," */\n",{"type":332,"tag":397,"props":584,"children":586},{"class":399,"line":585},5,[587,593,599,605,610,616,622],{"type":332,"tag":397,"props":588,"children":590},{"style":589},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[591],{"type":337,"value":592},"var",{"type":332,"tag":397,"props":594,"children":596},{"style":595},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[597],{"type":337,"value":598}," nextPermutation",{"type":332,"tag":397,"props":600,"children":602},{"style":601},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[603],{"type":337,"value":604}," =",{"type":332,"tag":397,"props":606,"children":607},{"style":589},[608],{"type":337,"value":609}," function",{"type":332,"tag":397,"props":611,"children":613},{"style":612},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[614],{"type":337,"value":615}," (",{"type":332,"tag":397,"props":617,"children":619},{"style":618},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[620],{"type":337,"value":621},"nums",{"type":332,"tag":397,"props":623,"children":624},{"style":612},[625],{"type":337,"value":626},") {\n",{"type":332,"tag":397,"props":628,"children":630},{"class":399,"line":629},6,[631],{"type":332,"tag":397,"props":632,"children":633},{"style":521},[634],{"type":337,"value":635},"  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n",{"type":332,"tag":397,"props":637,"children":639},{"class":399,"line":638},7,[640,645,651,655,660,666,671,676,682],{"type":332,"tag":397,"props":641,"children":642},{"style":589},[643],{"type":337,"value":644},"  let",{"type":332,"tag":397,"props":646,"children":648},{"style":647},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[649],{"type":337,"value":650}," i",{"type":332,"tag":397,"props":652,"children":653},{"style":601},[654],{"type":337,"value":604},{"type":332,"tag":397,"props":656,"children":657},{"style":647},[658],{"type":337,"value":659}," nums",{"type":332,"tag":397,"props":661,"children":663},{"style":662},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[664],{"type":337,"value":665},".",{"type":332,"tag":397,"props":667,"children":668},{"style":612},[669],{"type":337,"value":670},"length ",{"type":332,"tag":397,"props":672,"children":673},{"style":601},[674],{"type":337,"value":675},"-",{"type":332,"tag":397,"props":677,"children":679},{"style":678},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[680],{"type":337,"value":681}," 2",{"type":332,"tag":397,"props":683,"children":685},{"style":684},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[686],{"type":337,"value":687},";\n",{"type":332,"tag":397,"props":689,"children":691},{"class":399,"line":690},8,[692,698,702,707,712,717,722,726,731,735,740,745,749,753,757,762,767],{"type":332,"tag":397,"props":693,"children":695},{"style":694},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[696],{"type":337,"value":697},"  while",{"type":332,"tag":397,"props":699,"children":700},{"style":612},[701],{"type":337,"value":615},{"type":332,"tag":397,"props":703,"children":704},{"style":647},[705],{"type":337,"value":706},"i",{"type":332,"tag":397,"props":708,"children":709},{"style":601},[710],{"type":337,"value":711}," >=",{"type":332,"tag":397,"props":713,"children":714},{"style":678},[715],{"type":337,"value":716}," 0",{"type":332,"tag":397,"props":718,"children":719},{"style":601},[720],{"type":337,"value":721}," &&",{"type":332,"tag":397,"props":723,"children":724},{"style":647},[725],{"type":337,"value":659},{"type":332,"tag":397,"props":727,"children":728},{"style":612},[729],{"type":337,"value":730},"[",{"type":332,"tag":397,"props":732,"children":733},{"style":647},[734],{"type":337,"value":706},{"type":332,"tag":397,"props":736,"children":737},{"style":612},[738],{"type":337,"value":739},"] ",{"type":332,"tag":397,"props":741,"children":742},{"style":601},[743],{"type":337,"value":744},">=",{"type":332,"tag":397,"props":746,"children":747},{"style":647},[748],{"type":337,"value":659},{"type":332,"tag":397,"props":750,"children":751},{"style":612},[752],{"type":337,"value":730},{"type":332,"tag":397,"props":754,"children":755},{"style":647},[756],{"type":337,"value":706},{"type":332,"tag":397,"props":758,"children":759},{"style":601},[760],{"type":337,"value":761}," +",{"type":332,"tag":397,"props":763,"children":764},{"style":678},[765],{"type":337,"value":766}," 1",{"type":332,"tag":397,"props":768,"children":769},{"style":612},[770],{"type":337,"value":771},"]) {\n",{"type":332,"tag":397,"props":773,"children":775},{"class":399,"line":774},9,[776,781,786],{"type":332,"tag":397,"props":777,"children":778},{"style":647},[779],{"type":337,"value":780},"    i",{"type":332,"tag":397,"props":782,"children":783},{"style":601},[784],{"type":337,"value":785},"--",{"type":332,"tag":397,"props":787,"children":788},{"style":684},[789],{"type":337,"value":687},{"type":332,"tag":397,"props":791,"children":793},{"class":399,"line":792},10,[794],{"type":332,"tag":397,"props":795,"children":796},{"style":612},[797],{"type":337,"value":798},"  }\n",{"type":332,"tag":397,"props":800,"children":802},{"class":399,"line":801},11,[803],{"type":332,"tag":397,"props":804,"children":805},{"style":521},[806],{"type":337,"value":807},"  // i 在数组中存在，进行交换\n",{"type":332,"tag":397,"props":809,"children":811},{"class":399,"line":810},12,[812,817,821,825,829,833],{"type":332,"tag":397,"props":813,"children":814},{"style":694},[815],{"type":337,"value":816},"  if",{"type":332,"tag":397,"props":818,"children":819},{"style":612},[820],{"type":337,"value":615},{"type":332,"tag":397,"props":822,"children":823},{"style":647},[824],{"type":337,"value":706},{"type":332,"tag":397,"props":826,"children":827},{"style":601},[828],{"type":337,"value":711},{"type":332,"tag":397,"props":830,"children":831},{"style":678},[832],{"type":337,"value":716},{"type":332,"tag":397,"props":834,"children":835},{"style":612},[836],{"type":337,"value":626},{"type":332,"tag":397,"props":838,"children":840},{"class":399,"line":839},13,[841,846,851,855,859,863,867,871,875],{"type":332,"tag":397,"props":842,"children":843},{"style":589},[844],{"type":337,"value":845},"    let",{"type":332,"tag":397,"props":847,"children":848},{"style":647},[849],{"type":337,"value":850}," j",{"type":332,"tag":397,"props":852,"children":853},{"style":601},[854],{"type":337,"value":604},{"type":332,"tag":397,"props":856,"children":857},{"style":647},[858],{"type":337,"value":659},{"type":332,"tag":397,"props":860,"children":861},{"style":662},[862],{"type":337,"value":665},{"type":332,"tag":397,"props":864,"children":865},{"style":612},[866],{"type":337,"value":670},{"type":332,"tag":397,"props":868,"children":869},{"style":601},[870],{"type":337,"value":675},{"type":332,"tag":397,"props":872,"children":873},{"style":678},[874],{"type":337,"value":766},{"type":332,"tag":397,"props":876,"children":877},{"style":684},[878],{"type":337,"value":687},{"type":332,"tag":397,"props":880,"children":882},{"class":399,"line":881},14,[883,888,892,897,901,905,909,913,917,921,925,929,933,937,941],{"type":332,"tag":397,"props":884,"children":885},{"style":694},[886],{"type":337,"value":887},"    while",{"type":332,"tag":397,"props":889,"children":890},{"style":612},[891],{"type":337,"value":615},{"type":332,"tag":397,"props":893,"children":894},{"style":647},[895],{"type":337,"value":896},"j",{"type":332,"tag":397,"props":898,"children":899},{"style":601},[900],{"type":337,"value":711},{"type":332,"tag":397,"props":902,"children":903},{"style":678},[904],{"type":337,"value":716},{"type":332,"tag":397,"props":906,"children":907},{"style":601},[908],{"type":337,"value":721},{"type":332,"tag":397,"props":910,"children":911},{"style":647},[912],{"type":337,"value":659},{"type":332,"tag":397,"props":914,"children":915},{"style":612},[916],{"type":337,"value":730},{"type":332,"tag":397,"props":918,"children":919},{"style":647},[920],{"type":337,"value":706},{"type":332,"tag":397,"props":922,"children":923},{"style":612},[924],{"type":337,"value":739},{"type":332,"tag":397,"props":926,"children":927},{"style":601},[928],{"type":337,"value":744},{"type":332,"tag":397,"props":930,"children":931},{"style":647},[932],{"type":337,"value":659},{"type":332,"tag":397,"props":934,"children":935},{"style":612},[936],{"type":337,"value":730},{"type":332,"tag":397,"props":938,"children":939},{"style":647},[940],{"type":337,"value":896},{"type":332,"tag":397,"props":942,"children":943},{"style":612},[944],{"type":337,"value":771},{"type":332,"tag":397,"props":946,"children":948},{"class":399,"line":947},15,[949,954,958],{"type":332,"tag":397,"props":950,"children":951},{"style":647},[952],{"type":337,"value":953},"      j",{"type":332,"tag":397,"props":955,"children":956},{"style":601},[957],{"type":337,"value":785},{"type":332,"tag":397,"props":959,"children":960},{"style":684},[961],{"type":337,"value":687},{"type":332,"tag":397,"props":963,"children":965},{"class":399,"line":964},16,[966],{"type":332,"tag":397,"props":967,"children":968},{"style":612},[969],{"type":337,"value":970},"    }\n",{"type":332,"tag":397,"props":972,"children":974},{"class":399,"line":973},17,[975],{"type":332,"tag":397,"props":976,"children":977},{"style":521},[978],{"type":337,"value":979},"    // 交换\n",{"type":332,"tag":397,"props":981,"children":983},{"class":399,"line":982},18,[984,989,993,997,1001,1006,1011,1015,1019,1023,1028,1033,1038,1042,1046,1050,1054,1058,1062,1066,1070,1075],{"type":332,"tag":397,"props":985,"children":986},{"style":612},[987],{"type":337,"value":988},"    [",{"type":332,"tag":397,"props":990,"children":991},{"style":647},[992],{"type":337,"value":621},{"type":332,"tag":397,"props":994,"children":995},{"style":612},[996],{"type":337,"value":730},{"type":332,"tag":397,"props":998,"children":999},{"style":647},[1000],{"type":337,"value":706},{"type":332,"tag":397,"props":1002,"children":1003},{"style":612},[1004],{"type":337,"value":1005},"]",{"type":332,"tag":397,"props":1007,"children":1008},{"style":684},[1009],{"type":337,"value":1010},",",{"type":332,"tag":397,"props":1012,"children":1013},{"style":647},[1014],{"type":337,"value":659},{"type":332,"tag":397,"props":1016,"children":1017},{"style":612},[1018],{"type":337,"value":730},{"type":332,"tag":397,"props":1020,"children":1021},{"style":647},[1022],{"type":337,"value":896},{"type":332,"tag":397,"props":1024,"children":1025},{"style":612},[1026],{"type":337,"value":1027},"]] ",{"type":332,"tag":397,"props":1029,"children":1030},{"style":601},[1031],{"type":337,"value":1032},"=",{"type":332,"tag":397,"props":1034,"children":1035},{"style":612},[1036],{"type":337,"value":1037}," [",{"type":332,"tag":397,"props":1039,"children":1040},{"style":647},[1041],{"type":337,"value":621},{"type":332,"tag":397,"props":1043,"children":1044},{"style":612},[1045],{"type":337,"value":730},{"type":332,"tag":397,"props":1047,"children":1048},{"style":647},[1049],{"type":337,"value":896},{"type":332,"tag":397,"props":1051,"children":1052},{"style":612},[1053],{"type":337,"value":1005},{"type":332,"tag":397,"props":1055,"children":1056},{"style":684},[1057],{"type":337,"value":1010},{"type":332,"tag":397,"props":1059,"children":1060},{"style":647},[1061],{"type":337,"value":659},{"type":332,"tag":397,"props":1063,"children":1064},{"style":612},[1065],{"type":337,"value":730},{"type":332,"tag":397,"props":1067,"children":1068},{"style":647},[1069],{"type":337,"value":706},{"type":332,"tag":397,"props":1071,"children":1072},{"style":612},[1073],{"type":337,"value":1074},"]]",{"type":332,"tag":397,"props":1076,"children":1077},{"style":684},[1078],{"type":337,"value":687},{"type":332,"tag":397,"props":1080,"children":1082},{"class":399,"line":1081},19,[1083],{"type":332,"tag":397,"props":1084,"children":1085},{"style":612},[1086],{"type":337,"value":798},{"type":332,"tag":397,"props":1088,"children":1090},{"class":399,"line":1089},20,[1091],{"type":332,"tag":397,"props":1092,"children":1093},{"style":521},[1094],{"type":337,"value":1095},"  // i 不存在，说明是递减序列，则 i 是 -1\n",{"type":332,"tag":397,"props":1097,"children":1099},{"class":399,"line":1098},21,[1100,1104,1109,1113,1117,1121,1125],{"type":332,"tag":397,"props":1101,"children":1102},{"style":589},[1103],{"type":337,"value":644},{"type":332,"tag":397,"props":1105,"children":1106},{"style":647},[1107],{"type":337,"value":1108}," l",{"type":332,"tag":397,"props":1110,"children":1111},{"style":601},[1112],{"type":337,"value":604},{"type":332,"tag":397,"props":1114,"children":1115},{"style":647},[1116],{"type":337,"value":650},{"type":332,"tag":397,"props":1118,"children":1119},{"style":601},[1120],{"type":337,"value":761},{"type":332,"tag":397,"props":1122,"children":1123},{"style":678},[1124],{"type":337,"value":766},{"type":332,"tag":397,"props":1126,"children":1127},{"style":684},[1128],{"type":337,"value":687},{"type":332,"tag":397,"props":1130,"children":1132},{"class":399,"line":1131},22,[1133,1137,1142,1146,1150,1154,1158,1162,1166],{"type":332,"tag":397,"props":1134,"children":1135},{"style":589},[1136],{"type":337,"value":644},{"type":332,"tag":397,"props":1138,"children":1139},{"style":647},[1140],{"type":337,"value":1141}," r",{"type":332,"tag":397,"props":1143,"children":1144},{"style":601},[1145],{"type":337,"value":604},{"type":332,"tag":397,"props":1147,"children":1148},{"style":647},[1149],{"type":337,"value":659},{"type":332,"tag":397,"props":1151,"children":1152},{"style":662},[1153],{"type":337,"value":665},{"type":332,"tag":397,"props":1155,"children":1156},{"style":612},[1157],{"type":337,"value":670},{"type":332,"tag":397,"props":1159,"children":1160},{"style":601},[1161],{"type":337,"value":675},{"type":332,"tag":397,"props":1163,"children":1164},{"style":678},[1165],{"type":337,"value":766},{"type":332,"tag":397,"props":1167,"children":1168},{"style":684},[1169],{"type":337,"value":687},{"type":332,"tag":397,"props":1171,"children":1173},{"class":399,"line":1172},23,[1174,1178,1182,1187,1192,1196],{"type":332,"tag":397,"props":1175,"children":1176},{"style":694},[1177],{"type":337,"value":697},{"type":332,"tag":397,"props":1179,"children":1180},{"style":612},[1181],{"type":337,"value":615},{"type":332,"tag":397,"props":1183,"children":1184},{"style":647},[1185],{"type":337,"value":1186},"l",{"type":332,"tag":397,"props":1188,"children":1189},{"style":601},[1190],{"type":337,"value":1191}," \u003C",{"type":332,"tag":397,"props":1193,"children":1194},{"style":647},[1195],{"type":337,"value":1141},{"type":332,"tag":397,"props":1197,"children":1198},{"style":612},[1199],{"type":337,"value":626},{"type":332,"tag":397,"props":1201,"children":1203},{"class":399,"line":1202},24,[1204,1208,1212,1216,1220,1224,1228,1232,1236,1241,1245,1249,1253,1257,1261,1265,1269,1273,1277,1281,1285,1289],{"type":332,"tag":397,"props":1205,"children":1206},{"style":612},[1207],{"type":337,"value":988},{"type":332,"tag":397,"props":1209,"children":1210},{"style":647},[1211],{"type":337,"value":621},{"type":332,"tag":397,"props":1213,"children":1214},{"style":612},[1215],{"type":337,"value":730},{"type":332,"tag":397,"props":1217,"children":1218},{"style":647},[1219],{"type":337,"value":1186},{"type":332,"tag":397,"props":1221,"children":1222},{"style":612},[1223],{"type":337,"value":1005},{"type":332,"tag":397,"props":1225,"children":1226},{"style":684},[1227],{"type":337,"value":1010},{"type":332,"tag":397,"props":1229,"children":1230},{"style":647},[1231],{"type":337,"value":659},{"type":332,"tag":397,"props":1233,"children":1234},{"style":612},[1235],{"type":337,"value":730},{"type":332,"tag":397,"props":1237,"children":1238},{"style":647},[1239],{"type":337,"value":1240},"r",{"type":332,"tag":397,"props":1242,"children":1243},{"style":612},[1244],{"type":337,"value":1027},{"type":332,"tag":397,"props":1246,"children":1247},{"style":601},[1248],{"type":337,"value":1032},{"type":332,"tag":397,"props":1250,"children":1251},{"style":612},[1252],{"type":337,"value":1037},{"type":332,"tag":397,"props":1254,"children":1255},{"style":647},[1256],{"type":337,"value":621},{"type":332,"tag":397,"props":1258,"children":1259},{"style":612},[1260],{"type":337,"value":730},{"type":332,"tag":397,"props":1262,"children":1263},{"style":647},[1264],{"type":337,"value":1240},{"type":332,"tag":397,"props":1266,"children":1267},{"style":612},[1268],{"type":337,"value":1005},{"type":332,"tag":397,"props":1270,"children":1271},{"style":684},[1272],{"type":337,"value":1010},{"type":332,"tag":397,"props":1274,"children":1275},{"style":647},[1276],{"type":337,"value":659},{"type":332,"tag":397,"props":1278,"children":1279},{"style":612},[1280],{"type":337,"value":730},{"type":332,"tag":397,"props":1282,"children":1283},{"style":647},[1284],{"type":337,"value":1186},{"type":332,"tag":397,"props":1286,"children":1287},{"style":612},[1288],{"type":337,"value":1074},{"type":332,"tag":397,"props":1290,"children":1291},{"style":684},[1292],{"type":337,"value":687},{"type":332,"tag":397,"props":1294,"children":1296},{"class":399,"line":1295},25,[1297,1302,1307],{"type":332,"tag":397,"props":1298,"children":1299},{"style":647},[1300],{"type":337,"value":1301},"    l",{"type":332,"tag":397,"props":1303,"children":1304},{"style":601},[1305],{"type":337,"value":1306},"++",{"type":332,"tag":397,"props":1308,"children":1309},{"style":684},[1310],{"type":337,"value":687},{"type":332,"tag":397,"props":1312,"children":1314},{"class":399,"line":1313},26,[1315,1320,1324],{"type":332,"tag":397,"props":1316,"children":1317},{"style":647},[1318],{"type":337,"value":1319},"    r",{"type":332,"tag":397,"props":1321,"children":1322},{"style":601},[1323],{"type":337,"value":785},{"type":332,"tag":397,"props":1325,"children":1326},{"style":684},[1327],{"type":337,"value":687},{"type":332,"tag":397,"props":1329,"children":1331},{"class":399,"line":1330},27,[1332],{"type":332,"tag":397,"props":1333,"children":1334},{"style":612},[1335],{"type":337,"value":798},{"type":332,"tag":397,"props":1337,"children":1339},{"class":399,"line":1338},28,[1340,1345],{"type":332,"tag":397,"props":1341,"children":1342},{"style":612},[1343],{"type":337,"value":1344},"}",{"type":332,"tag":397,"props":1346,"children":1347},{"style":684},[1348],{"type":337,"value":687},{"type":332,"tag":1350,"props":1351,"children":1352},"style",{},[1353],{"type":337,"value":1354},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":325,"searchDepth":585,"depth":585,"links":1356},[1357,1358],{"id":493,"depth":409,"text":493},{"id":498,"depth":409,"text":498,"children":1359},[1360],{"id":504,"depth":553,"text":504},"markdown","content:2.code:1.algorithm:3.leetcode:31.next-permutation.md","content","2.code/1.algorithm/3.leetcode/31.next-permutation.md","md",[1367,1369],{"_path":103,"title":102,"description":1368},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",{"_path":109,"title":108,"description":1370},"给你一个只包含 '(' 和 ')' 的字符串，找出最长有效（格式正确且连续）括号\n子串\n的长度。",1712123929956]