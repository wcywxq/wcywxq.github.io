[{"data":1,"prerenderedAt":1369},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/next-permutation":320,"/code/algorithm/leetcode/next-permutation-surround":1364},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,264,313],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,53],{"title":41,"_path":42,"children":43},"剑指 offer","/code/algorithm/sword-ofter",[44,47,50],{"title":45,"_path":46},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":48,"_path":49},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":51,"_path":52},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":54,"_path":55,"children":56},"力扣 leetCode","/code/algorithm/leetcode",[57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261],{"title":58,"_path":59},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":61,"_path":62},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":64,"_path":65},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":67,"_path":68},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":70,"_path":71},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":73,"_path":74},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":76,"_path":77},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":79,"_path":80},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":82,"_path":83},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":85,"_path":86},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":88,"_path":89},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":91,"_path":92},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":94,"_path":95},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":97,"_path":98},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":100,"_path":101},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":103,"_path":104},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":106,"_path":107},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":109,"_path":110},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":112,"_path":113},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":115,"_path":116},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":118,"_path":119},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":121,"_path":122},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":124,"_path":125},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":127,"_path":128},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":130,"_path":131},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":133,"_path":134},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":136,"_path":137},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":139,"_path":140},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":142,"_path":143},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":145,"_path":146},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":148,"_path":149},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":151,"_path":152},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":154,"_path":155},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":157,"_path":158},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":160,"_path":161},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":163,"_path":164},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":166,"_path":167},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":169,"_path":170},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":172,"_path":173},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":175,"_path":176},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":178,"_path":179},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":181,"_path":182},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":184,"_path":185},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":187,"_path":188},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":190,"_path":191},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":193,"_path":194},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":196,"_path":197},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":199,"_path":200},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":202,"_path":203},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":205,"_path":206},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":208,"_path":209},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":211,"_path":212},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":214,"_path":215},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":217,"_path":218},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":220,"_path":221},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":223,"_path":224},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":226,"_path":227},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":229,"_path":230},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":232,"_path":233},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":235,"_path":236},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":238,"_path":239},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":241,"_path":242},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":244,"_path":245},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":247,"_path":248},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":250,"_path":251},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":253,"_path":254},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":256,"_path":257},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":259,"_path":260},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":262,"_path":263},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":265,"_path":266,"children":267},"源码实现","/code/source",[268,293,306],{"title":269,"_path":270,"children":271},"原生 api","/code/source/native-api",[272,275,278,281,284,287,290],{"title":273,"_path":274},"ajax","/code/source/native-api/ajax",{"title":276,"_path":277},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":279,"_path":280},"new 操作符","/code/source/native-api/new",{"title":282,"_path":283},"instanceof 关键字","/code/source/native-api/instanceof",{"title":285,"_path":286},"定时器","/code/source/native-api/timer",{"title":288,"_path":289},"JSON.stringify","/code/source/native-api/json-stringify",{"title":291,"_path":292},"Iterator 迭代器","/code/source/native-api/iterator",{"title":294,"_path":295,"children":296},"数组 Array","/code/source/array",[297,300,303],{"title":298,"_path":299},"数组去重","/code/source/array/remove-duplicate",{"title":301,"_path":302},"数组扁平化","/code/source/array/flat",{"title":304,"_path":305},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":307,"_path":308,"children":309},"字符串 String","/code/source/string",[310],{"title":311,"_path":312},"repeat()","/code/source/string/repeat",{"title":314,"_path":315,"children":316},"业务场景","/code/scene",[317],{"title":318,"_path":319},"顺序打印 url 并支持 retry","/code/scene/promise-url-retry",{"_path":104,"_dir":321,"_draft":322,"_partial":322,"_locale":323,"title":103,"description":324,"url":325,"body":326,"_type":1359,"_id":1360,"_source":1361,"_file":1362,"_extension":1363},"leetcode",false,"","整数数组的一个 排列 就是将其所有成员以序列或线性顺序排列。","https://leetcode.cn/problems/next-permutation",{"type":327,"children":328,"toc":1353},"root",[329,336,346,351,369,374,379,384,414,419,442,447,470,475,488,494,499,505,1347],{"type":330,"tag":331,"props":332,"children":333},"element","p",{},[334],{"type":335,"value":324},"text",{"type":330,"tag":337,"props":338,"children":339},"ul",{},[340],{"type":330,"tag":341,"props":342,"children":343},"li",{},[344],{"type":335,"value":345},"例如，arr = [1,2,3] ，以下这些都可以视作 arr 的排列：[1,2,3]、[1,3,2]、[3,1,2]、[2,3,1] 。",{"type":330,"tag":331,"props":347,"children":348},{},[349],{"type":335,"value":350},"整数数组的 下一个排列 是指其整数的下一个字典序更大的排列。更正式地，如果数组的所有排列根据其字典顺序从小到大排列在一个容器中，那么数组的 下一个排列 就是在这个有序容器中排在它后面的那个排列。如果不存在下一个更大的排列，那么这个数组必须重排为字典序最小的排列（即，其元素按升序排列）。",{"type":330,"tag":337,"props":352,"children":353},{},[354,359,364],{"type":330,"tag":341,"props":355,"children":356},{},[357],{"type":335,"value":358},"例如，arr = [1,2,3] 的下一个排列是 [1,3,2] 。",{"type":330,"tag":341,"props":360,"children":361},{},[362],{"type":335,"value":363},"类似地，arr = [2,3,1] 的下一个排列是 [3,1,2] 。",{"type":330,"tag":341,"props":365,"children":366},{},[367],{"type":335,"value":368},"而 arr = [3,2,1] 的下一个排列是 [1,2,3] ，因为 [3,2,1] 不存在一个字典序更大的排列。",{"type":330,"tag":331,"props":370,"children":371},{},[372],{"type":335,"value":373},"给你一个整数数组 nums ，找出 nums 的下一个排列。",{"type":330,"tag":331,"props":375,"children":376},{},[377],{"type":335,"value":378},"必须 原地 修改，只允许使用额外常数空间。",{"type":330,"tag":331,"props":380,"children":381},{},[382],{"type":335,"value":383},"示例 1：",{"type":330,"tag":385,"props":386,"children":389},"pre",{"className":387,"code":388,"language":335,"meta":323,"style":323},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3]\n输出：[1,3,2]\n",[390],{"type":330,"tag":391,"props":392,"children":393},"code",{"__ignoreMap":323},[394,405],{"type":330,"tag":395,"props":396,"children":399},"span",{"class":397,"line":398},"line",1,[400],{"type":330,"tag":395,"props":401,"children":402},{},[403],{"type":335,"value":404},"输入：nums = [1,2,3]\n",{"type":330,"tag":395,"props":406,"children":408},{"class":397,"line":407},2,[409],{"type":330,"tag":395,"props":410,"children":411},{},[412],{"type":335,"value":413},"输出：[1,3,2]\n",{"type":330,"tag":331,"props":415,"children":416},{},[417],{"type":335,"value":418},"示例 2：",{"type":330,"tag":385,"props":420,"children":422},{"className":387,"code":421,"language":335,"meta":323,"style":323},"输入：nums = [3,2,1]\n输出：[1,2,3]\n",[423],{"type":330,"tag":391,"props":424,"children":425},{"__ignoreMap":323},[426,434],{"type":330,"tag":395,"props":427,"children":428},{"class":397,"line":398},[429],{"type":330,"tag":395,"props":430,"children":431},{},[432],{"type":335,"value":433},"输入：nums = [3,2,1]\n",{"type":330,"tag":395,"props":435,"children":436},{"class":397,"line":407},[437],{"type":330,"tag":395,"props":438,"children":439},{},[440],{"type":335,"value":441},"输出：[1,2,3]\n",{"type":330,"tag":331,"props":443,"children":444},{},[445],{"type":335,"value":446},"示例 3：",{"type":330,"tag":385,"props":448,"children":450},{"className":387,"code":449,"language":335,"meta":323,"style":323},"输入：nums = [1,1,5]\n输出：[1,5,1]\n",[451],{"type":330,"tag":391,"props":452,"children":453},{"__ignoreMap":323},[454,462],{"type":330,"tag":395,"props":455,"children":456},{"class":397,"line":398},[457],{"type":330,"tag":395,"props":458,"children":459},{},[460],{"type":335,"value":461},"输入：nums = [1,1,5]\n",{"type":330,"tag":395,"props":463,"children":464},{"class":397,"line":407},[465],{"type":330,"tag":395,"props":466,"children":467},{},[468],{"type":335,"value":469},"输出：[1,5,1]\n",{"type":330,"tag":331,"props":471,"children":472},{},[473],{"type":335,"value":474},"提示：",{"type":330,"tag":337,"props":476,"children":477},{},[478,483],{"type":330,"tag":341,"props":479,"children":480},{},[481],{"type":335,"value":482},"1 \u003C= nums.length \u003C= 100",{"type":330,"tag":341,"props":484,"children":485},{},[486],{"type":335,"value":487},"0 \u003C= nums[i] \u003C= 100",{"type":330,"tag":489,"props":490,"children":492},"h2",{"id":491},"解题思路",[493],{"type":335,"value":491},{"type":330,"tag":489,"props":495,"children":497},{"id":496},"实现",[498],{"type":335,"value":496},{"type":330,"tag":500,"props":501,"children":503},"h3",{"id":502},"双指针",[504],{"type":335,"value":502},{"type":330,"tag":385,"props":506,"children":510},{"className":507,"code":508,"language":509,"meta":323,"style":323},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar nextPermutation = function (nums) {\n  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n  let i = nums.length - 2;\n  while (i >= 0 && nums[i] >= nums[i + 1]) {\n    i--;\n  }\n  // i 在数组中存在，进行交换\n  if (i >= 0) {\n    let j = nums.length - 1;\n    while (j >= 0 && nums[i] >= nums[j]) {\n      j--;\n    }\n    // 交换\n    [nums[i], nums[j]] = [nums[j], nums[i]];\n  }\n  // i 不存在，说明是递减序列，则 i 是 -1\n  let l = i + 1;\n  let r = nums.length - 1;\n  while (l \u003C r) {\n    [nums[l], nums[r]] = [nums[r], nums[l]];\n    l++;\n    r--;\n  }\n};\n","js",[511],{"type":330,"tag":391,"props":512,"children":513},{"__ignoreMap":323},[514,523,549,572,581,625,634,686,770,788,797,806,835,877,943,960,969,978,1077,1085,1094,1127,1168,1198,1291,1309,1326,1334],{"type":330,"tag":395,"props":515,"children":516},{"class":397,"line":398},[517],{"type":330,"tag":395,"props":518,"children":520},{"style":519},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[521],{"type":335,"value":522},"/**\n",{"type":330,"tag":395,"props":524,"children":525},{"class":397,"line":407},[526,531,537,543],{"type":330,"tag":395,"props":527,"children":528},{"style":519},[529],{"type":335,"value":530}," * ",{"type":330,"tag":395,"props":532,"children":534},{"style":533},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[535],{"type":335,"value":536},"@param",{"type":330,"tag":395,"props":538,"children":540},{"style":539},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[541],{"type":335,"value":542}," {number[]}",{"type":330,"tag":395,"props":544,"children":546},{"style":545},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[547],{"type":335,"value":548}," nums\n",{"type":330,"tag":395,"props":550,"children":552},{"class":397,"line":551},3,[553,557,562,567],{"type":330,"tag":395,"props":554,"children":555},{"style":519},[556],{"type":335,"value":530},{"type":330,"tag":395,"props":558,"children":559},{"style":533},[560],{"type":335,"value":561},"@return",{"type":330,"tag":395,"props":563,"children":564},{"style":539},[565],{"type":335,"value":566}," {void}",{"type":330,"tag":395,"props":568,"children":569},{"style":519},[570],{"type":335,"value":571}," Do not return anything, modify nums in-place instead.\n",{"type":330,"tag":395,"props":573,"children":575},{"class":397,"line":574},4,[576],{"type":330,"tag":395,"props":577,"children":578},{"style":519},[579],{"type":335,"value":580}," */\n",{"type":330,"tag":395,"props":582,"children":584},{"class":397,"line":583},5,[585,591,597,603,608,614,620],{"type":330,"tag":395,"props":586,"children":588},{"style":587},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[589],{"type":335,"value":590},"var",{"type":330,"tag":395,"props":592,"children":594},{"style":593},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[595],{"type":335,"value":596}," nextPermutation",{"type":330,"tag":395,"props":598,"children":600},{"style":599},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[601],{"type":335,"value":602}," =",{"type":330,"tag":395,"props":604,"children":605},{"style":587},[606],{"type":335,"value":607}," function",{"type":330,"tag":395,"props":609,"children":611},{"style":610},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[612],{"type":335,"value":613}," (",{"type":330,"tag":395,"props":615,"children":617},{"style":616},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[618],{"type":335,"value":619},"nums",{"type":330,"tag":395,"props":621,"children":622},{"style":610},[623],{"type":335,"value":624},") {\n",{"type":330,"tag":395,"props":626,"children":628},{"class":397,"line":627},6,[629],{"type":330,"tag":395,"props":630,"children":631},{"style":519},[632],{"type":335,"value":633},"  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n",{"type":330,"tag":395,"props":635,"children":637},{"class":397,"line":636},7,[638,643,649,653,658,664,669,674,680],{"type":330,"tag":395,"props":639,"children":640},{"style":587},[641],{"type":335,"value":642},"  let",{"type":330,"tag":395,"props":644,"children":646},{"style":645},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[647],{"type":335,"value":648}," i",{"type":330,"tag":395,"props":650,"children":651},{"style":599},[652],{"type":335,"value":602},{"type":330,"tag":395,"props":654,"children":655},{"style":645},[656],{"type":335,"value":657}," nums",{"type":330,"tag":395,"props":659,"children":661},{"style":660},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[662],{"type":335,"value":663},".",{"type":330,"tag":395,"props":665,"children":666},{"style":610},[667],{"type":335,"value":668},"length ",{"type":330,"tag":395,"props":670,"children":671},{"style":599},[672],{"type":335,"value":673},"-",{"type":330,"tag":395,"props":675,"children":677},{"style":676},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[678],{"type":335,"value":679}," 2",{"type":330,"tag":395,"props":681,"children":683},{"style":682},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[684],{"type":335,"value":685},";\n",{"type":330,"tag":395,"props":687,"children":689},{"class":397,"line":688},8,[690,696,700,705,710,715,720,724,729,733,738,743,747,751,755,760,765],{"type":330,"tag":395,"props":691,"children":693},{"style":692},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[694],{"type":335,"value":695},"  while",{"type":330,"tag":395,"props":697,"children":698},{"style":610},[699],{"type":335,"value":613},{"type":330,"tag":395,"props":701,"children":702},{"style":645},[703],{"type":335,"value":704},"i",{"type":330,"tag":395,"props":706,"children":707},{"style":599},[708],{"type":335,"value":709}," >=",{"type":330,"tag":395,"props":711,"children":712},{"style":676},[713],{"type":335,"value":714}," 0",{"type":330,"tag":395,"props":716,"children":717},{"style":599},[718],{"type":335,"value":719}," &&",{"type":330,"tag":395,"props":721,"children":722},{"style":645},[723],{"type":335,"value":657},{"type":330,"tag":395,"props":725,"children":726},{"style":610},[727],{"type":335,"value":728},"[",{"type":330,"tag":395,"props":730,"children":731},{"style":645},[732],{"type":335,"value":704},{"type":330,"tag":395,"props":734,"children":735},{"style":610},[736],{"type":335,"value":737},"] ",{"type":330,"tag":395,"props":739,"children":740},{"style":599},[741],{"type":335,"value":742},">=",{"type":330,"tag":395,"props":744,"children":745},{"style":645},[746],{"type":335,"value":657},{"type":330,"tag":395,"props":748,"children":749},{"style":610},[750],{"type":335,"value":728},{"type":330,"tag":395,"props":752,"children":753},{"style":645},[754],{"type":335,"value":704},{"type":330,"tag":395,"props":756,"children":757},{"style":599},[758],{"type":335,"value":759}," +",{"type":330,"tag":395,"props":761,"children":762},{"style":676},[763],{"type":335,"value":764}," 1",{"type":330,"tag":395,"props":766,"children":767},{"style":610},[768],{"type":335,"value":769},"]) {\n",{"type":330,"tag":395,"props":771,"children":773},{"class":397,"line":772},9,[774,779,784],{"type":330,"tag":395,"props":775,"children":776},{"style":645},[777],{"type":335,"value":778},"    i",{"type":330,"tag":395,"props":780,"children":781},{"style":599},[782],{"type":335,"value":783},"--",{"type":330,"tag":395,"props":785,"children":786},{"style":682},[787],{"type":335,"value":685},{"type":330,"tag":395,"props":789,"children":791},{"class":397,"line":790},10,[792],{"type":330,"tag":395,"props":793,"children":794},{"style":610},[795],{"type":335,"value":796},"  }\n",{"type":330,"tag":395,"props":798,"children":800},{"class":397,"line":799},11,[801],{"type":330,"tag":395,"props":802,"children":803},{"style":519},[804],{"type":335,"value":805},"  // i 在数组中存在，进行交换\n",{"type":330,"tag":395,"props":807,"children":809},{"class":397,"line":808},12,[810,815,819,823,827,831],{"type":330,"tag":395,"props":811,"children":812},{"style":692},[813],{"type":335,"value":814},"  if",{"type":330,"tag":395,"props":816,"children":817},{"style":610},[818],{"type":335,"value":613},{"type":330,"tag":395,"props":820,"children":821},{"style":645},[822],{"type":335,"value":704},{"type":330,"tag":395,"props":824,"children":825},{"style":599},[826],{"type":335,"value":709},{"type":330,"tag":395,"props":828,"children":829},{"style":676},[830],{"type":335,"value":714},{"type":330,"tag":395,"props":832,"children":833},{"style":610},[834],{"type":335,"value":624},{"type":330,"tag":395,"props":836,"children":838},{"class":397,"line":837},13,[839,844,849,853,857,861,865,869,873],{"type":330,"tag":395,"props":840,"children":841},{"style":587},[842],{"type":335,"value":843},"    let",{"type":330,"tag":395,"props":845,"children":846},{"style":645},[847],{"type":335,"value":848}," j",{"type":330,"tag":395,"props":850,"children":851},{"style":599},[852],{"type":335,"value":602},{"type":330,"tag":395,"props":854,"children":855},{"style":645},[856],{"type":335,"value":657},{"type":330,"tag":395,"props":858,"children":859},{"style":660},[860],{"type":335,"value":663},{"type":330,"tag":395,"props":862,"children":863},{"style":610},[864],{"type":335,"value":668},{"type":330,"tag":395,"props":866,"children":867},{"style":599},[868],{"type":335,"value":673},{"type":330,"tag":395,"props":870,"children":871},{"style":676},[872],{"type":335,"value":764},{"type":330,"tag":395,"props":874,"children":875},{"style":682},[876],{"type":335,"value":685},{"type":330,"tag":395,"props":878,"children":880},{"class":397,"line":879},14,[881,886,890,895,899,903,907,911,915,919,923,927,931,935,939],{"type":330,"tag":395,"props":882,"children":883},{"style":692},[884],{"type":335,"value":885},"    while",{"type":330,"tag":395,"props":887,"children":888},{"style":610},[889],{"type":335,"value":613},{"type":330,"tag":395,"props":891,"children":892},{"style":645},[893],{"type":335,"value":894},"j",{"type":330,"tag":395,"props":896,"children":897},{"style":599},[898],{"type":335,"value":709},{"type":330,"tag":395,"props":900,"children":901},{"style":676},[902],{"type":335,"value":714},{"type":330,"tag":395,"props":904,"children":905},{"style":599},[906],{"type":335,"value":719},{"type":330,"tag":395,"props":908,"children":909},{"style":645},[910],{"type":335,"value":657},{"type":330,"tag":395,"props":912,"children":913},{"style":610},[914],{"type":335,"value":728},{"type":330,"tag":395,"props":916,"children":917},{"style":645},[918],{"type":335,"value":704},{"type":330,"tag":395,"props":920,"children":921},{"style":610},[922],{"type":335,"value":737},{"type":330,"tag":395,"props":924,"children":925},{"style":599},[926],{"type":335,"value":742},{"type":330,"tag":395,"props":928,"children":929},{"style":645},[930],{"type":335,"value":657},{"type":330,"tag":395,"props":932,"children":933},{"style":610},[934],{"type":335,"value":728},{"type":330,"tag":395,"props":936,"children":937},{"style":645},[938],{"type":335,"value":894},{"type":330,"tag":395,"props":940,"children":941},{"style":610},[942],{"type":335,"value":769},{"type":330,"tag":395,"props":944,"children":946},{"class":397,"line":945},15,[947,952,956],{"type":330,"tag":395,"props":948,"children":949},{"style":645},[950],{"type":335,"value":951},"      j",{"type":330,"tag":395,"props":953,"children":954},{"style":599},[955],{"type":335,"value":783},{"type":330,"tag":395,"props":957,"children":958},{"style":682},[959],{"type":335,"value":685},{"type":330,"tag":395,"props":961,"children":963},{"class":397,"line":962},16,[964],{"type":330,"tag":395,"props":965,"children":966},{"style":610},[967],{"type":335,"value":968},"    }\n",{"type":330,"tag":395,"props":970,"children":972},{"class":397,"line":971},17,[973],{"type":330,"tag":395,"props":974,"children":975},{"style":519},[976],{"type":335,"value":977},"    // 交换\n",{"type":330,"tag":395,"props":979,"children":981},{"class":397,"line":980},18,[982,987,991,995,999,1004,1009,1013,1017,1021,1026,1031,1036,1040,1044,1048,1052,1056,1060,1064,1068,1073],{"type":330,"tag":395,"props":983,"children":984},{"style":610},[985],{"type":335,"value":986},"    [",{"type":330,"tag":395,"props":988,"children":989},{"style":645},[990],{"type":335,"value":619},{"type":330,"tag":395,"props":992,"children":993},{"style":610},[994],{"type":335,"value":728},{"type":330,"tag":395,"props":996,"children":997},{"style":645},[998],{"type":335,"value":704},{"type":330,"tag":395,"props":1000,"children":1001},{"style":610},[1002],{"type":335,"value":1003},"]",{"type":330,"tag":395,"props":1005,"children":1006},{"style":682},[1007],{"type":335,"value":1008},",",{"type":330,"tag":395,"props":1010,"children":1011},{"style":645},[1012],{"type":335,"value":657},{"type":330,"tag":395,"props":1014,"children":1015},{"style":610},[1016],{"type":335,"value":728},{"type":330,"tag":395,"props":1018,"children":1019},{"style":645},[1020],{"type":335,"value":894},{"type":330,"tag":395,"props":1022,"children":1023},{"style":610},[1024],{"type":335,"value":1025},"]] ",{"type":330,"tag":395,"props":1027,"children":1028},{"style":599},[1029],{"type":335,"value":1030},"=",{"type":330,"tag":395,"props":1032,"children":1033},{"style":610},[1034],{"type":335,"value":1035}," [",{"type":330,"tag":395,"props":1037,"children":1038},{"style":645},[1039],{"type":335,"value":619},{"type":330,"tag":395,"props":1041,"children":1042},{"style":610},[1043],{"type":335,"value":728},{"type":330,"tag":395,"props":1045,"children":1046},{"style":645},[1047],{"type":335,"value":894},{"type":330,"tag":395,"props":1049,"children":1050},{"style":610},[1051],{"type":335,"value":1003},{"type":330,"tag":395,"props":1053,"children":1054},{"style":682},[1055],{"type":335,"value":1008},{"type":330,"tag":395,"props":1057,"children":1058},{"style":645},[1059],{"type":335,"value":657},{"type":330,"tag":395,"props":1061,"children":1062},{"style":610},[1063],{"type":335,"value":728},{"type":330,"tag":395,"props":1065,"children":1066},{"style":645},[1067],{"type":335,"value":704},{"type":330,"tag":395,"props":1069,"children":1070},{"style":610},[1071],{"type":335,"value":1072},"]]",{"type":330,"tag":395,"props":1074,"children":1075},{"style":682},[1076],{"type":335,"value":685},{"type":330,"tag":395,"props":1078,"children":1080},{"class":397,"line":1079},19,[1081],{"type":330,"tag":395,"props":1082,"children":1083},{"style":610},[1084],{"type":335,"value":796},{"type":330,"tag":395,"props":1086,"children":1088},{"class":397,"line":1087},20,[1089],{"type":330,"tag":395,"props":1090,"children":1091},{"style":519},[1092],{"type":335,"value":1093},"  // i 不存在，说明是递减序列，则 i 是 -1\n",{"type":330,"tag":395,"props":1095,"children":1097},{"class":397,"line":1096},21,[1098,1102,1107,1111,1115,1119,1123],{"type":330,"tag":395,"props":1099,"children":1100},{"style":587},[1101],{"type":335,"value":642},{"type":330,"tag":395,"props":1103,"children":1104},{"style":645},[1105],{"type":335,"value":1106}," l",{"type":330,"tag":395,"props":1108,"children":1109},{"style":599},[1110],{"type":335,"value":602},{"type":330,"tag":395,"props":1112,"children":1113},{"style":645},[1114],{"type":335,"value":648},{"type":330,"tag":395,"props":1116,"children":1117},{"style":599},[1118],{"type":335,"value":759},{"type":330,"tag":395,"props":1120,"children":1121},{"style":676},[1122],{"type":335,"value":764},{"type":330,"tag":395,"props":1124,"children":1125},{"style":682},[1126],{"type":335,"value":685},{"type":330,"tag":395,"props":1128,"children":1130},{"class":397,"line":1129},22,[1131,1135,1140,1144,1148,1152,1156,1160,1164],{"type":330,"tag":395,"props":1132,"children":1133},{"style":587},[1134],{"type":335,"value":642},{"type":330,"tag":395,"props":1136,"children":1137},{"style":645},[1138],{"type":335,"value":1139}," r",{"type":330,"tag":395,"props":1141,"children":1142},{"style":599},[1143],{"type":335,"value":602},{"type":330,"tag":395,"props":1145,"children":1146},{"style":645},[1147],{"type":335,"value":657},{"type":330,"tag":395,"props":1149,"children":1150},{"style":660},[1151],{"type":335,"value":663},{"type":330,"tag":395,"props":1153,"children":1154},{"style":610},[1155],{"type":335,"value":668},{"type":330,"tag":395,"props":1157,"children":1158},{"style":599},[1159],{"type":335,"value":673},{"type":330,"tag":395,"props":1161,"children":1162},{"style":676},[1163],{"type":335,"value":764},{"type":330,"tag":395,"props":1165,"children":1166},{"style":682},[1167],{"type":335,"value":685},{"type":330,"tag":395,"props":1169,"children":1171},{"class":397,"line":1170},23,[1172,1176,1180,1185,1190,1194],{"type":330,"tag":395,"props":1173,"children":1174},{"style":692},[1175],{"type":335,"value":695},{"type":330,"tag":395,"props":1177,"children":1178},{"style":610},[1179],{"type":335,"value":613},{"type":330,"tag":395,"props":1181,"children":1182},{"style":645},[1183],{"type":335,"value":1184},"l",{"type":330,"tag":395,"props":1186,"children":1187},{"style":599},[1188],{"type":335,"value":1189}," \u003C",{"type":330,"tag":395,"props":1191,"children":1192},{"style":645},[1193],{"type":335,"value":1139},{"type":330,"tag":395,"props":1195,"children":1196},{"style":610},[1197],{"type":335,"value":624},{"type":330,"tag":395,"props":1199,"children":1201},{"class":397,"line":1200},24,[1202,1206,1210,1214,1218,1222,1226,1230,1234,1239,1243,1247,1251,1255,1259,1263,1267,1271,1275,1279,1283,1287],{"type":330,"tag":395,"props":1203,"children":1204},{"style":610},[1205],{"type":335,"value":986},{"type":330,"tag":395,"props":1207,"children":1208},{"style":645},[1209],{"type":335,"value":619},{"type":330,"tag":395,"props":1211,"children":1212},{"style":610},[1213],{"type":335,"value":728},{"type":330,"tag":395,"props":1215,"children":1216},{"style":645},[1217],{"type":335,"value":1184},{"type":330,"tag":395,"props":1219,"children":1220},{"style":610},[1221],{"type":335,"value":1003},{"type":330,"tag":395,"props":1223,"children":1224},{"style":682},[1225],{"type":335,"value":1008},{"type":330,"tag":395,"props":1227,"children":1228},{"style":645},[1229],{"type":335,"value":657},{"type":330,"tag":395,"props":1231,"children":1232},{"style":610},[1233],{"type":335,"value":728},{"type":330,"tag":395,"props":1235,"children":1236},{"style":645},[1237],{"type":335,"value":1238},"r",{"type":330,"tag":395,"props":1240,"children":1241},{"style":610},[1242],{"type":335,"value":1025},{"type":330,"tag":395,"props":1244,"children":1245},{"style":599},[1246],{"type":335,"value":1030},{"type":330,"tag":395,"props":1248,"children":1249},{"style":610},[1250],{"type":335,"value":1035},{"type":330,"tag":395,"props":1252,"children":1253},{"style":645},[1254],{"type":335,"value":619},{"type":330,"tag":395,"props":1256,"children":1257},{"style":610},[1258],{"type":335,"value":728},{"type":330,"tag":395,"props":1260,"children":1261},{"style":645},[1262],{"type":335,"value":1238},{"type":330,"tag":395,"props":1264,"children":1265},{"style":610},[1266],{"type":335,"value":1003},{"type":330,"tag":395,"props":1268,"children":1269},{"style":682},[1270],{"type":335,"value":1008},{"type":330,"tag":395,"props":1272,"children":1273},{"style":645},[1274],{"type":335,"value":657},{"type":330,"tag":395,"props":1276,"children":1277},{"style":610},[1278],{"type":335,"value":728},{"type":330,"tag":395,"props":1280,"children":1281},{"style":645},[1282],{"type":335,"value":1184},{"type":330,"tag":395,"props":1284,"children":1285},{"style":610},[1286],{"type":335,"value":1072},{"type":330,"tag":395,"props":1288,"children":1289},{"style":682},[1290],{"type":335,"value":685},{"type":330,"tag":395,"props":1292,"children":1294},{"class":397,"line":1293},25,[1295,1300,1305],{"type":330,"tag":395,"props":1296,"children":1297},{"style":645},[1298],{"type":335,"value":1299},"    l",{"type":330,"tag":395,"props":1301,"children":1302},{"style":599},[1303],{"type":335,"value":1304},"++",{"type":330,"tag":395,"props":1306,"children":1307},{"style":682},[1308],{"type":335,"value":685},{"type":330,"tag":395,"props":1310,"children":1312},{"class":397,"line":1311},26,[1313,1318,1322],{"type":330,"tag":395,"props":1314,"children":1315},{"style":645},[1316],{"type":335,"value":1317},"    r",{"type":330,"tag":395,"props":1319,"children":1320},{"style":599},[1321],{"type":335,"value":783},{"type":330,"tag":395,"props":1323,"children":1324},{"style":682},[1325],{"type":335,"value":685},{"type":330,"tag":395,"props":1327,"children":1329},{"class":397,"line":1328},27,[1330],{"type":330,"tag":395,"props":1331,"children":1332},{"style":610},[1333],{"type":335,"value":796},{"type":330,"tag":395,"props":1335,"children":1337},{"class":397,"line":1336},28,[1338,1343],{"type":330,"tag":395,"props":1339,"children":1340},{"style":610},[1341],{"type":335,"value":1342},"}",{"type":330,"tag":395,"props":1344,"children":1345},{"style":682},[1346],{"type":335,"value":685},{"type":330,"tag":1348,"props":1349,"children":1350},"style",{},[1351],{"type":335,"value":1352},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":323,"searchDepth":583,"depth":583,"links":1354},[1355,1356],{"id":491,"depth":407,"text":491},{"id":496,"depth":407,"text":496,"children":1357},[1358],{"id":502,"depth":551,"text":502},"markdown","content:2.code:1.algorithm:2.leetcode:31.next-permutation.md","content","2.code/1.algorithm/2.leetcode/31.next-permutation.md","md",[1365,1367],{"_path":101,"title":100,"description":1366},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",{"_path":107,"title":106,"description":1368},"给你一个只包含 '(' 和 ')' 的字符串，找出最长有效（格式正确且连续）括号\n子串\n的长度。",1712112507926]