[{"data":1,"prerenderedAt":1396},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/next-permutation":347,"/code/algorithm/leetcode/next-permutation-surround":1391},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319,341,344],{"title":320,"_path":321,"children":322},"Promise","/code/scene/promise",[323,326,329,332,335,338],{"title":324,"_path":325},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":327,"_path":328},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":330,"_path":331},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":333,"_path":334},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":336,"_path":337},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":339,"_path":340},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":342,"_path":343},"lodash.get","/code/scene/lodash-get",{"title":345,"_path":346},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":106,"_dir":348,"_draft":349,"_partial":349,"_locale":350,"title":105,"description":351,"url":352,"body":353,"_type":1386,"_id":1387,"_source":1388,"_file":1389,"_extension":1390},"leetcode",false,"","整数数组的一个 排列 就是将其所有成员以序列或线性顺序排列。","https://leetcode.cn/problems/next-permutation",{"type":354,"children":355,"toc":1380},"root",[356,363,373,378,396,401,406,411,441,446,469,474,497,502,515,521,526,532,1374],{"type":357,"tag":358,"props":359,"children":360},"element","p",{},[361],{"type":362,"value":351},"text",{"type":357,"tag":364,"props":365,"children":366},"ul",{},[367],{"type":357,"tag":368,"props":369,"children":370},"li",{},[371],{"type":362,"value":372},"例如，arr = [1,2,3] ，以下这些都可以视作 arr 的排列：[1,2,3]、[1,3,2]、[3,1,2]、[2,3,1] 。",{"type":357,"tag":358,"props":374,"children":375},{},[376],{"type":362,"value":377},"整数数组的 下一个排列 是指其整数的下一个字典序更大的排列。更正式地，如果数组的所有排列根据其字典顺序从小到大排列在一个容器中，那么数组的 下一个排列 就是在这个有序容器中排在它后面的那个排列。如果不存在下一个更大的排列，那么这个数组必须重排为字典序最小的排列（即，其元素按升序排列）。",{"type":357,"tag":364,"props":379,"children":380},{},[381,386,391],{"type":357,"tag":368,"props":382,"children":383},{},[384],{"type":362,"value":385},"例如，arr = [1,2,3] 的下一个排列是 [1,3,2] 。",{"type":357,"tag":368,"props":387,"children":388},{},[389],{"type":362,"value":390},"类似地，arr = [2,3,1] 的下一个排列是 [3,1,2] 。",{"type":357,"tag":368,"props":392,"children":393},{},[394],{"type":362,"value":395},"而 arr = [3,2,1] 的下一个排列是 [1,2,3] ，因为 [3,2,1] 不存在一个字典序更大的排列。",{"type":357,"tag":358,"props":397,"children":398},{},[399],{"type":362,"value":400},"给你一个整数数组 nums ，找出 nums 的下一个排列。",{"type":357,"tag":358,"props":402,"children":403},{},[404],{"type":362,"value":405},"必须 原地 修改，只允许使用额外常数空间。",{"type":357,"tag":358,"props":407,"children":408},{},[409],{"type":362,"value":410},"示例 1：",{"type":357,"tag":412,"props":413,"children":416},"pre",{"className":414,"code":415,"language":362,"meta":350,"style":350},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3]\n输出：[1,3,2]\n",[417],{"type":357,"tag":418,"props":419,"children":420},"code",{"__ignoreMap":350},[421,432],{"type":357,"tag":422,"props":423,"children":426},"span",{"class":424,"line":425},"line",1,[427],{"type":357,"tag":422,"props":428,"children":429},{},[430],{"type":362,"value":431},"输入：nums = [1,2,3]\n",{"type":357,"tag":422,"props":433,"children":435},{"class":424,"line":434},2,[436],{"type":357,"tag":422,"props":437,"children":438},{},[439],{"type":362,"value":440},"输出：[1,3,2]\n",{"type":357,"tag":358,"props":442,"children":443},{},[444],{"type":362,"value":445},"示例 2：",{"type":357,"tag":412,"props":447,"children":449},{"className":414,"code":448,"language":362,"meta":350,"style":350},"输入：nums = [3,2,1]\n输出：[1,2,3]\n",[450],{"type":357,"tag":418,"props":451,"children":452},{"__ignoreMap":350},[453,461],{"type":357,"tag":422,"props":454,"children":455},{"class":424,"line":425},[456],{"type":357,"tag":422,"props":457,"children":458},{},[459],{"type":362,"value":460},"输入：nums = [3,2,1]\n",{"type":357,"tag":422,"props":462,"children":463},{"class":424,"line":434},[464],{"type":357,"tag":422,"props":465,"children":466},{},[467],{"type":362,"value":468},"输出：[1,2,3]\n",{"type":357,"tag":358,"props":470,"children":471},{},[472],{"type":362,"value":473},"示例 3：",{"type":357,"tag":412,"props":475,"children":477},{"className":414,"code":476,"language":362,"meta":350,"style":350},"输入：nums = [1,1,5]\n输出：[1,5,1]\n",[478],{"type":357,"tag":418,"props":479,"children":480},{"__ignoreMap":350},[481,489],{"type":357,"tag":422,"props":482,"children":483},{"class":424,"line":425},[484],{"type":357,"tag":422,"props":485,"children":486},{},[487],{"type":362,"value":488},"输入：nums = [1,1,5]\n",{"type":357,"tag":422,"props":490,"children":491},{"class":424,"line":434},[492],{"type":357,"tag":422,"props":493,"children":494},{},[495],{"type":362,"value":496},"输出：[1,5,1]\n",{"type":357,"tag":358,"props":498,"children":499},{},[500],{"type":362,"value":501},"提示：",{"type":357,"tag":364,"props":503,"children":504},{},[505,510],{"type":357,"tag":368,"props":506,"children":507},{},[508],{"type":362,"value":509},"1 \u003C= nums.length \u003C= 100",{"type":357,"tag":368,"props":511,"children":512},{},[513],{"type":362,"value":514},"0 \u003C= nums[i] \u003C= 100",{"type":357,"tag":516,"props":517,"children":519},"h2",{"id":518},"解题思路",[520],{"type":362,"value":518},{"type":357,"tag":516,"props":522,"children":524},{"id":523},"实现",[525],{"type":362,"value":523},{"type":357,"tag":527,"props":528,"children":530},"h3",{"id":529},"双指针",[531],{"type":362,"value":529},{"type":357,"tag":412,"props":533,"children":537},{"className":534,"code":535,"language":536,"meta":350,"style":350},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar nextPermutation = function (nums) {\n  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n  let i = nums.length - 2;\n  while (i >= 0 && nums[i] >= nums[i + 1]) {\n    i--;\n  }\n  // i 在数组中存在，进行交换\n  if (i >= 0) {\n    let j = nums.length - 1;\n    while (j >= 0 && nums[i] >= nums[j]) {\n      j--;\n    }\n    // 交换\n    [nums[i], nums[j]] = [nums[j], nums[i]];\n  }\n  // i 不存在，说明是递减序列，则 i 是 -1\n  let l = i + 1;\n  let r = nums.length - 1;\n  while (l \u003C r) {\n    [nums[l], nums[r]] = [nums[r], nums[l]];\n    l++;\n    r--;\n  }\n};\n","js",[538],{"type":357,"tag":418,"props":539,"children":540},{"__ignoreMap":350},[541,550,576,599,608,652,661,713,797,815,824,833,862,904,970,987,996,1005,1104,1112,1121,1154,1195,1225,1318,1336,1353,1361],{"type":357,"tag":422,"props":542,"children":543},{"class":424,"line":425},[544],{"type":357,"tag":422,"props":545,"children":547},{"style":546},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[548],{"type":362,"value":549},"/**\n",{"type":357,"tag":422,"props":551,"children":552},{"class":424,"line":434},[553,558,564,570],{"type":357,"tag":422,"props":554,"children":555},{"style":546},[556],{"type":362,"value":557}," * ",{"type":357,"tag":422,"props":559,"children":561},{"style":560},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[562],{"type":362,"value":563},"@param",{"type":357,"tag":422,"props":565,"children":567},{"style":566},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[568],{"type":362,"value":569}," {number[]}",{"type":357,"tag":422,"props":571,"children":573},{"style":572},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[574],{"type":362,"value":575}," nums\n",{"type":357,"tag":422,"props":577,"children":579},{"class":424,"line":578},3,[580,584,589,594],{"type":357,"tag":422,"props":581,"children":582},{"style":546},[583],{"type":362,"value":557},{"type":357,"tag":422,"props":585,"children":586},{"style":560},[587],{"type":362,"value":588},"@return",{"type":357,"tag":422,"props":590,"children":591},{"style":566},[592],{"type":362,"value":593}," {void}",{"type":357,"tag":422,"props":595,"children":596},{"style":546},[597],{"type":362,"value":598}," Do not return anything, modify nums in-place instead.\n",{"type":357,"tag":422,"props":600,"children":602},{"class":424,"line":601},4,[603],{"type":357,"tag":422,"props":604,"children":605},{"style":546},[606],{"type":362,"value":607}," */\n",{"type":357,"tag":422,"props":609,"children":611},{"class":424,"line":610},5,[612,618,624,630,635,641,647],{"type":357,"tag":422,"props":613,"children":615},{"style":614},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[616],{"type":362,"value":617},"var",{"type":357,"tag":422,"props":619,"children":621},{"style":620},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[622],{"type":362,"value":623}," nextPermutation",{"type":357,"tag":422,"props":625,"children":627},{"style":626},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[628],{"type":362,"value":629}," =",{"type":357,"tag":422,"props":631,"children":632},{"style":614},[633],{"type":362,"value":634}," function",{"type":357,"tag":422,"props":636,"children":638},{"style":637},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[639],{"type":362,"value":640}," (",{"type":357,"tag":422,"props":642,"children":644},{"style":643},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[645],{"type":362,"value":646},"nums",{"type":357,"tag":422,"props":648,"children":649},{"style":637},[650],{"type":362,"value":651},") {\n",{"type":357,"tag":422,"props":653,"children":655},{"class":424,"line":654},6,[656],{"type":357,"tag":422,"props":657,"children":658},{"style":546},[659],{"type":362,"value":660},"  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n",{"type":357,"tag":422,"props":662,"children":664},{"class":424,"line":663},7,[665,670,676,680,685,691,696,701,707],{"type":357,"tag":422,"props":666,"children":667},{"style":614},[668],{"type":362,"value":669},"  let",{"type":357,"tag":422,"props":671,"children":673},{"style":672},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[674],{"type":362,"value":675}," i",{"type":357,"tag":422,"props":677,"children":678},{"style":626},[679],{"type":362,"value":629},{"type":357,"tag":422,"props":681,"children":682},{"style":672},[683],{"type":362,"value":684}," nums",{"type":357,"tag":422,"props":686,"children":688},{"style":687},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[689],{"type":362,"value":690},".",{"type":357,"tag":422,"props":692,"children":693},{"style":637},[694],{"type":362,"value":695},"length ",{"type":357,"tag":422,"props":697,"children":698},{"style":626},[699],{"type":362,"value":700},"-",{"type":357,"tag":422,"props":702,"children":704},{"style":703},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[705],{"type":362,"value":706}," 2",{"type":357,"tag":422,"props":708,"children":710},{"style":709},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[711],{"type":362,"value":712},";\n",{"type":357,"tag":422,"props":714,"children":716},{"class":424,"line":715},8,[717,723,727,732,737,742,747,751,756,760,765,770,774,778,782,787,792],{"type":357,"tag":422,"props":718,"children":720},{"style":719},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[721],{"type":362,"value":722},"  while",{"type":357,"tag":422,"props":724,"children":725},{"style":637},[726],{"type":362,"value":640},{"type":357,"tag":422,"props":728,"children":729},{"style":672},[730],{"type":362,"value":731},"i",{"type":357,"tag":422,"props":733,"children":734},{"style":626},[735],{"type":362,"value":736}," >=",{"type":357,"tag":422,"props":738,"children":739},{"style":703},[740],{"type":362,"value":741}," 0",{"type":357,"tag":422,"props":743,"children":744},{"style":626},[745],{"type":362,"value":746}," &&",{"type":357,"tag":422,"props":748,"children":749},{"style":672},[750],{"type":362,"value":684},{"type":357,"tag":422,"props":752,"children":753},{"style":637},[754],{"type":362,"value":755},"[",{"type":357,"tag":422,"props":757,"children":758},{"style":672},[759],{"type":362,"value":731},{"type":357,"tag":422,"props":761,"children":762},{"style":637},[763],{"type":362,"value":764},"] ",{"type":357,"tag":422,"props":766,"children":767},{"style":626},[768],{"type":362,"value":769},">=",{"type":357,"tag":422,"props":771,"children":772},{"style":672},[773],{"type":362,"value":684},{"type":357,"tag":422,"props":775,"children":776},{"style":637},[777],{"type":362,"value":755},{"type":357,"tag":422,"props":779,"children":780},{"style":672},[781],{"type":362,"value":731},{"type":357,"tag":422,"props":783,"children":784},{"style":626},[785],{"type":362,"value":786}," +",{"type":357,"tag":422,"props":788,"children":789},{"style":703},[790],{"type":362,"value":791}," 1",{"type":357,"tag":422,"props":793,"children":794},{"style":637},[795],{"type":362,"value":796},"]) {\n",{"type":357,"tag":422,"props":798,"children":800},{"class":424,"line":799},9,[801,806,811],{"type":357,"tag":422,"props":802,"children":803},{"style":672},[804],{"type":362,"value":805},"    i",{"type":357,"tag":422,"props":807,"children":808},{"style":626},[809],{"type":362,"value":810},"--",{"type":357,"tag":422,"props":812,"children":813},{"style":709},[814],{"type":362,"value":712},{"type":357,"tag":422,"props":816,"children":818},{"class":424,"line":817},10,[819],{"type":357,"tag":422,"props":820,"children":821},{"style":637},[822],{"type":362,"value":823},"  }\n",{"type":357,"tag":422,"props":825,"children":827},{"class":424,"line":826},11,[828],{"type":357,"tag":422,"props":829,"children":830},{"style":546},[831],{"type":362,"value":832},"  // i 在数组中存在，进行交换\n",{"type":357,"tag":422,"props":834,"children":836},{"class":424,"line":835},12,[837,842,846,850,854,858],{"type":357,"tag":422,"props":838,"children":839},{"style":719},[840],{"type":362,"value":841},"  if",{"type":357,"tag":422,"props":843,"children":844},{"style":637},[845],{"type":362,"value":640},{"type":357,"tag":422,"props":847,"children":848},{"style":672},[849],{"type":362,"value":731},{"type":357,"tag":422,"props":851,"children":852},{"style":626},[853],{"type":362,"value":736},{"type":357,"tag":422,"props":855,"children":856},{"style":703},[857],{"type":362,"value":741},{"type":357,"tag":422,"props":859,"children":860},{"style":637},[861],{"type":362,"value":651},{"type":357,"tag":422,"props":863,"children":865},{"class":424,"line":864},13,[866,871,876,880,884,888,892,896,900],{"type":357,"tag":422,"props":867,"children":868},{"style":614},[869],{"type":362,"value":870},"    let",{"type":357,"tag":422,"props":872,"children":873},{"style":672},[874],{"type":362,"value":875}," j",{"type":357,"tag":422,"props":877,"children":878},{"style":626},[879],{"type":362,"value":629},{"type":357,"tag":422,"props":881,"children":882},{"style":672},[883],{"type":362,"value":684},{"type":357,"tag":422,"props":885,"children":886},{"style":687},[887],{"type":362,"value":690},{"type":357,"tag":422,"props":889,"children":890},{"style":637},[891],{"type":362,"value":695},{"type":357,"tag":422,"props":893,"children":894},{"style":626},[895],{"type":362,"value":700},{"type":357,"tag":422,"props":897,"children":898},{"style":703},[899],{"type":362,"value":791},{"type":357,"tag":422,"props":901,"children":902},{"style":709},[903],{"type":362,"value":712},{"type":357,"tag":422,"props":905,"children":907},{"class":424,"line":906},14,[908,913,917,922,926,930,934,938,942,946,950,954,958,962,966],{"type":357,"tag":422,"props":909,"children":910},{"style":719},[911],{"type":362,"value":912},"    while",{"type":357,"tag":422,"props":914,"children":915},{"style":637},[916],{"type":362,"value":640},{"type":357,"tag":422,"props":918,"children":919},{"style":672},[920],{"type":362,"value":921},"j",{"type":357,"tag":422,"props":923,"children":924},{"style":626},[925],{"type":362,"value":736},{"type":357,"tag":422,"props":927,"children":928},{"style":703},[929],{"type":362,"value":741},{"type":357,"tag":422,"props":931,"children":932},{"style":626},[933],{"type":362,"value":746},{"type":357,"tag":422,"props":935,"children":936},{"style":672},[937],{"type":362,"value":684},{"type":357,"tag":422,"props":939,"children":940},{"style":637},[941],{"type":362,"value":755},{"type":357,"tag":422,"props":943,"children":944},{"style":672},[945],{"type":362,"value":731},{"type":357,"tag":422,"props":947,"children":948},{"style":637},[949],{"type":362,"value":764},{"type":357,"tag":422,"props":951,"children":952},{"style":626},[953],{"type":362,"value":769},{"type":357,"tag":422,"props":955,"children":956},{"style":672},[957],{"type":362,"value":684},{"type":357,"tag":422,"props":959,"children":960},{"style":637},[961],{"type":362,"value":755},{"type":357,"tag":422,"props":963,"children":964},{"style":672},[965],{"type":362,"value":921},{"type":357,"tag":422,"props":967,"children":968},{"style":637},[969],{"type":362,"value":796},{"type":357,"tag":422,"props":971,"children":973},{"class":424,"line":972},15,[974,979,983],{"type":357,"tag":422,"props":975,"children":976},{"style":672},[977],{"type":362,"value":978},"      j",{"type":357,"tag":422,"props":980,"children":981},{"style":626},[982],{"type":362,"value":810},{"type":357,"tag":422,"props":984,"children":985},{"style":709},[986],{"type":362,"value":712},{"type":357,"tag":422,"props":988,"children":990},{"class":424,"line":989},16,[991],{"type":357,"tag":422,"props":992,"children":993},{"style":637},[994],{"type":362,"value":995},"    }\n",{"type":357,"tag":422,"props":997,"children":999},{"class":424,"line":998},17,[1000],{"type":357,"tag":422,"props":1001,"children":1002},{"style":546},[1003],{"type":362,"value":1004},"    // 交换\n",{"type":357,"tag":422,"props":1006,"children":1008},{"class":424,"line":1007},18,[1009,1014,1018,1022,1026,1031,1036,1040,1044,1048,1053,1058,1063,1067,1071,1075,1079,1083,1087,1091,1095,1100],{"type":357,"tag":422,"props":1010,"children":1011},{"style":637},[1012],{"type":362,"value":1013},"    [",{"type":357,"tag":422,"props":1015,"children":1016},{"style":672},[1017],{"type":362,"value":646},{"type":357,"tag":422,"props":1019,"children":1020},{"style":637},[1021],{"type":362,"value":755},{"type":357,"tag":422,"props":1023,"children":1024},{"style":672},[1025],{"type":362,"value":731},{"type":357,"tag":422,"props":1027,"children":1028},{"style":637},[1029],{"type":362,"value":1030},"]",{"type":357,"tag":422,"props":1032,"children":1033},{"style":709},[1034],{"type":362,"value":1035},",",{"type":357,"tag":422,"props":1037,"children":1038},{"style":672},[1039],{"type":362,"value":684},{"type":357,"tag":422,"props":1041,"children":1042},{"style":637},[1043],{"type":362,"value":755},{"type":357,"tag":422,"props":1045,"children":1046},{"style":672},[1047],{"type":362,"value":921},{"type":357,"tag":422,"props":1049,"children":1050},{"style":637},[1051],{"type":362,"value":1052},"]] ",{"type":357,"tag":422,"props":1054,"children":1055},{"style":626},[1056],{"type":362,"value":1057},"=",{"type":357,"tag":422,"props":1059,"children":1060},{"style":637},[1061],{"type":362,"value":1062}," [",{"type":357,"tag":422,"props":1064,"children":1065},{"style":672},[1066],{"type":362,"value":646},{"type":357,"tag":422,"props":1068,"children":1069},{"style":637},[1070],{"type":362,"value":755},{"type":357,"tag":422,"props":1072,"children":1073},{"style":672},[1074],{"type":362,"value":921},{"type":357,"tag":422,"props":1076,"children":1077},{"style":637},[1078],{"type":362,"value":1030},{"type":357,"tag":422,"props":1080,"children":1081},{"style":709},[1082],{"type":362,"value":1035},{"type":357,"tag":422,"props":1084,"children":1085},{"style":672},[1086],{"type":362,"value":684},{"type":357,"tag":422,"props":1088,"children":1089},{"style":637},[1090],{"type":362,"value":755},{"type":357,"tag":422,"props":1092,"children":1093},{"style":672},[1094],{"type":362,"value":731},{"type":357,"tag":422,"props":1096,"children":1097},{"style":637},[1098],{"type":362,"value":1099},"]]",{"type":357,"tag":422,"props":1101,"children":1102},{"style":709},[1103],{"type":362,"value":712},{"type":357,"tag":422,"props":1105,"children":1107},{"class":424,"line":1106},19,[1108],{"type":357,"tag":422,"props":1109,"children":1110},{"style":637},[1111],{"type":362,"value":823},{"type":357,"tag":422,"props":1113,"children":1115},{"class":424,"line":1114},20,[1116],{"type":357,"tag":422,"props":1117,"children":1118},{"style":546},[1119],{"type":362,"value":1120},"  // i 不存在，说明是递减序列，则 i 是 -1\n",{"type":357,"tag":422,"props":1122,"children":1124},{"class":424,"line":1123},21,[1125,1129,1134,1138,1142,1146,1150],{"type":357,"tag":422,"props":1126,"children":1127},{"style":614},[1128],{"type":362,"value":669},{"type":357,"tag":422,"props":1130,"children":1131},{"style":672},[1132],{"type":362,"value":1133}," l",{"type":357,"tag":422,"props":1135,"children":1136},{"style":626},[1137],{"type":362,"value":629},{"type":357,"tag":422,"props":1139,"children":1140},{"style":672},[1141],{"type":362,"value":675},{"type":357,"tag":422,"props":1143,"children":1144},{"style":626},[1145],{"type":362,"value":786},{"type":357,"tag":422,"props":1147,"children":1148},{"style":703},[1149],{"type":362,"value":791},{"type":357,"tag":422,"props":1151,"children":1152},{"style":709},[1153],{"type":362,"value":712},{"type":357,"tag":422,"props":1155,"children":1157},{"class":424,"line":1156},22,[1158,1162,1167,1171,1175,1179,1183,1187,1191],{"type":357,"tag":422,"props":1159,"children":1160},{"style":614},[1161],{"type":362,"value":669},{"type":357,"tag":422,"props":1163,"children":1164},{"style":672},[1165],{"type":362,"value":1166}," r",{"type":357,"tag":422,"props":1168,"children":1169},{"style":626},[1170],{"type":362,"value":629},{"type":357,"tag":422,"props":1172,"children":1173},{"style":672},[1174],{"type":362,"value":684},{"type":357,"tag":422,"props":1176,"children":1177},{"style":687},[1178],{"type":362,"value":690},{"type":357,"tag":422,"props":1180,"children":1181},{"style":637},[1182],{"type":362,"value":695},{"type":357,"tag":422,"props":1184,"children":1185},{"style":626},[1186],{"type":362,"value":700},{"type":357,"tag":422,"props":1188,"children":1189},{"style":703},[1190],{"type":362,"value":791},{"type":357,"tag":422,"props":1192,"children":1193},{"style":709},[1194],{"type":362,"value":712},{"type":357,"tag":422,"props":1196,"children":1198},{"class":424,"line":1197},23,[1199,1203,1207,1212,1217,1221],{"type":357,"tag":422,"props":1200,"children":1201},{"style":719},[1202],{"type":362,"value":722},{"type":357,"tag":422,"props":1204,"children":1205},{"style":637},[1206],{"type":362,"value":640},{"type":357,"tag":422,"props":1208,"children":1209},{"style":672},[1210],{"type":362,"value":1211},"l",{"type":357,"tag":422,"props":1213,"children":1214},{"style":626},[1215],{"type":362,"value":1216}," \u003C",{"type":357,"tag":422,"props":1218,"children":1219},{"style":672},[1220],{"type":362,"value":1166},{"type":357,"tag":422,"props":1222,"children":1223},{"style":637},[1224],{"type":362,"value":651},{"type":357,"tag":422,"props":1226,"children":1228},{"class":424,"line":1227},24,[1229,1233,1237,1241,1245,1249,1253,1257,1261,1266,1270,1274,1278,1282,1286,1290,1294,1298,1302,1306,1310,1314],{"type":357,"tag":422,"props":1230,"children":1231},{"style":637},[1232],{"type":362,"value":1013},{"type":357,"tag":422,"props":1234,"children":1235},{"style":672},[1236],{"type":362,"value":646},{"type":357,"tag":422,"props":1238,"children":1239},{"style":637},[1240],{"type":362,"value":755},{"type":357,"tag":422,"props":1242,"children":1243},{"style":672},[1244],{"type":362,"value":1211},{"type":357,"tag":422,"props":1246,"children":1247},{"style":637},[1248],{"type":362,"value":1030},{"type":357,"tag":422,"props":1250,"children":1251},{"style":709},[1252],{"type":362,"value":1035},{"type":357,"tag":422,"props":1254,"children":1255},{"style":672},[1256],{"type":362,"value":684},{"type":357,"tag":422,"props":1258,"children":1259},{"style":637},[1260],{"type":362,"value":755},{"type":357,"tag":422,"props":1262,"children":1263},{"style":672},[1264],{"type":362,"value":1265},"r",{"type":357,"tag":422,"props":1267,"children":1268},{"style":637},[1269],{"type":362,"value":1052},{"type":357,"tag":422,"props":1271,"children":1272},{"style":626},[1273],{"type":362,"value":1057},{"type":357,"tag":422,"props":1275,"children":1276},{"style":637},[1277],{"type":362,"value":1062},{"type":357,"tag":422,"props":1279,"children":1280},{"style":672},[1281],{"type":362,"value":646},{"type":357,"tag":422,"props":1283,"children":1284},{"style":637},[1285],{"type":362,"value":755},{"type":357,"tag":422,"props":1287,"children":1288},{"style":672},[1289],{"type":362,"value":1265},{"type":357,"tag":422,"props":1291,"children":1292},{"style":637},[1293],{"type":362,"value":1030},{"type":357,"tag":422,"props":1295,"children":1296},{"style":709},[1297],{"type":362,"value":1035},{"type":357,"tag":422,"props":1299,"children":1300},{"style":672},[1301],{"type":362,"value":684},{"type":357,"tag":422,"props":1303,"children":1304},{"style":637},[1305],{"type":362,"value":755},{"type":357,"tag":422,"props":1307,"children":1308},{"style":672},[1309],{"type":362,"value":1211},{"type":357,"tag":422,"props":1311,"children":1312},{"style":637},[1313],{"type":362,"value":1099},{"type":357,"tag":422,"props":1315,"children":1316},{"style":709},[1317],{"type":362,"value":712},{"type":357,"tag":422,"props":1319,"children":1321},{"class":424,"line":1320},25,[1322,1327,1332],{"type":357,"tag":422,"props":1323,"children":1324},{"style":672},[1325],{"type":362,"value":1326},"    l",{"type":357,"tag":422,"props":1328,"children":1329},{"style":626},[1330],{"type":362,"value":1331},"++",{"type":357,"tag":422,"props":1333,"children":1334},{"style":709},[1335],{"type":362,"value":712},{"type":357,"tag":422,"props":1337,"children":1339},{"class":424,"line":1338},26,[1340,1345,1349],{"type":357,"tag":422,"props":1341,"children":1342},{"style":672},[1343],{"type":362,"value":1344},"    r",{"type":357,"tag":422,"props":1346,"children":1347},{"style":626},[1348],{"type":362,"value":810},{"type":357,"tag":422,"props":1350,"children":1351},{"style":709},[1352],{"type":362,"value":712},{"type":357,"tag":422,"props":1354,"children":1356},{"class":424,"line":1355},27,[1357],{"type":357,"tag":422,"props":1358,"children":1359},{"style":637},[1360],{"type":362,"value":823},{"type":357,"tag":422,"props":1362,"children":1364},{"class":424,"line":1363},28,[1365,1370],{"type":357,"tag":422,"props":1366,"children":1367},{"style":637},[1368],{"type":362,"value":1369},"}",{"type":357,"tag":422,"props":1371,"children":1372},{"style":709},[1373],{"type":362,"value":712},{"type":357,"tag":1375,"props":1376,"children":1377},"style",{},[1378],{"type":362,"value":1379},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":350,"searchDepth":610,"depth":610,"links":1381},[1382,1383],{"id":518,"depth":434,"text":518},{"id":523,"depth":434,"text":523,"children":1384},[1385],{"id":529,"depth":578,"text":529},"markdown","content:2.code:1.algorithm:3.leetcode:31.next-permutation.md","content","2.code/1.algorithm/3.leetcode/31.next-permutation.md","md",[1392,1394],{"_path":103,"title":102,"description":1393},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",{"_path":109,"title":108,"description":1395},"给你一个只包含 '(' 和 ')' 的字符串，找出最长有效（格式正确且连续）括号\n子串\n的长度。",1712581261118]