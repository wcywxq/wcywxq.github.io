[{"data":1,"prerenderedAt":1402},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/next-permutation":353,"/code/algorithm/leetcode/next-permutation-surround":1397},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319,341,344,347,350],{"title":320,"_path":321,"children":322},"Promise","/code/scene/promise",[323,326,329,332,335,338],{"title":324,"_path":325},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":327,"_path":328},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":330,"_path":331},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":333,"_path":334},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":336,"_path":337},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":339,"_path":340},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":342,"_path":343},"计算对象占用字节数","/code/scene/calcuate-object-bytes",{"title":345,"_path":346},"lodash.get","/code/scene/lodash-get",{"title":348,"_path":349},"sku 算法实现","/code/scene/sku",{"title":351,"_path":352},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":106,"_dir":354,"_draft":355,"_partial":355,"_locale":356,"title":105,"description":357,"url":358,"body":359,"_type":1392,"_id":1393,"_source":1394,"_file":1395,"_extension":1396},"leetcode",false,"","整数数组的一个 排列 就是将其所有成员以序列或线性顺序排列。","https://leetcode.cn/problems/next-permutation",{"type":360,"children":361,"toc":1386},"root",[362,369,379,384,402,407,412,417,447,452,475,480,503,508,521,527,532,538,1380],{"type":363,"tag":364,"props":365,"children":366},"element","p",{},[367],{"type":368,"value":357},"text",{"type":363,"tag":370,"props":371,"children":372},"ul",{},[373],{"type":363,"tag":374,"props":375,"children":376},"li",{},[377],{"type":368,"value":378},"例如，arr = [1,2,3] ，以下这些都可以视作 arr 的排列：[1,2,3]、[1,3,2]、[3,1,2]、[2,3,1] 。",{"type":363,"tag":364,"props":380,"children":381},{},[382],{"type":368,"value":383},"整数数组的 下一个排列 是指其整数的下一个字典序更大的排列。更正式地，如果数组的所有排列根据其字典顺序从小到大排列在一个容器中，那么数组的 下一个排列 就是在这个有序容器中排在它后面的那个排列。如果不存在下一个更大的排列，那么这个数组必须重排为字典序最小的排列（即，其元素按升序排列）。",{"type":363,"tag":370,"props":385,"children":386},{},[387,392,397],{"type":363,"tag":374,"props":388,"children":389},{},[390],{"type":368,"value":391},"例如，arr = [1,2,3] 的下一个排列是 [1,3,2] 。",{"type":363,"tag":374,"props":393,"children":394},{},[395],{"type":368,"value":396},"类似地，arr = [2,3,1] 的下一个排列是 [3,1,2] 。",{"type":363,"tag":374,"props":398,"children":399},{},[400],{"type":368,"value":401},"而 arr = [3,2,1] 的下一个排列是 [1,2,3] ，因为 [3,2,1] 不存在一个字典序更大的排列。",{"type":363,"tag":364,"props":403,"children":404},{},[405],{"type":368,"value":406},"给你一个整数数组 nums ，找出 nums 的下一个排列。",{"type":363,"tag":364,"props":408,"children":409},{},[410],{"type":368,"value":411},"必须 原地 修改，只允许使用额外常数空间。",{"type":363,"tag":364,"props":413,"children":414},{},[415],{"type":368,"value":416},"示例 1：",{"type":363,"tag":418,"props":419,"children":422},"pre",{"className":420,"code":421,"language":368,"meta":356,"style":356},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3]\n输出：[1,3,2]\n",[423],{"type":363,"tag":424,"props":425,"children":426},"code",{"__ignoreMap":356},[427,438],{"type":363,"tag":428,"props":429,"children":432},"span",{"class":430,"line":431},"line",1,[433],{"type":363,"tag":428,"props":434,"children":435},{},[436],{"type":368,"value":437},"输入：nums = [1,2,3]\n",{"type":363,"tag":428,"props":439,"children":441},{"class":430,"line":440},2,[442],{"type":363,"tag":428,"props":443,"children":444},{},[445],{"type":368,"value":446},"输出：[1,3,2]\n",{"type":363,"tag":364,"props":448,"children":449},{},[450],{"type":368,"value":451},"示例 2：",{"type":363,"tag":418,"props":453,"children":455},{"className":420,"code":454,"language":368,"meta":356,"style":356},"输入：nums = [3,2,1]\n输出：[1,2,3]\n",[456],{"type":363,"tag":424,"props":457,"children":458},{"__ignoreMap":356},[459,467],{"type":363,"tag":428,"props":460,"children":461},{"class":430,"line":431},[462],{"type":363,"tag":428,"props":463,"children":464},{},[465],{"type":368,"value":466},"输入：nums = [3,2,1]\n",{"type":363,"tag":428,"props":468,"children":469},{"class":430,"line":440},[470],{"type":363,"tag":428,"props":471,"children":472},{},[473],{"type":368,"value":474},"输出：[1,2,3]\n",{"type":363,"tag":364,"props":476,"children":477},{},[478],{"type":368,"value":479},"示例 3：",{"type":363,"tag":418,"props":481,"children":483},{"className":420,"code":482,"language":368,"meta":356,"style":356},"输入：nums = [1,1,5]\n输出：[1,5,1]\n",[484],{"type":363,"tag":424,"props":485,"children":486},{"__ignoreMap":356},[487,495],{"type":363,"tag":428,"props":488,"children":489},{"class":430,"line":431},[490],{"type":363,"tag":428,"props":491,"children":492},{},[493],{"type":368,"value":494},"输入：nums = [1,1,5]\n",{"type":363,"tag":428,"props":496,"children":497},{"class":430,"line":440},[498],{"type":363,"tag":428,"props":499,"children":500},{},[501],{"type":368,"value":502},"输出：[1,5,1]\n",{"type":363,"tag":364,"props":504,"children":505},{},[506],{"type":368,"value":507},"提示：",{"type":363,"tag":370,"props":509,"children":510},{},[511,516],{"type":363,"tag":374,"props":512,"children":513},{},[514],{"type":368,"value":515},"1 \u003C= nums.length \u003C= 100",{"type":363,"tag":374,"props":517,"children":518},{},[519],{"type":368,"value":520},"0 \u003C= nums[i] \u003C= 100",{"type":363,"tag":522,"props":523,"children":525},"h2",{"id":524},"解题思路",[526],{"type":368,"value":524},{"type":363,"tag":522,"props":528,"children":530},{"id":529},"实现",[531],{"type":368,"value":529},{"type":363,"tag":533,"props":534,"children":536},"h3",{"id":535},"双指针",[537],{"type":368,"value":535},{"type":363,"tag":418,"props":539,"children":543},{"className":540,"code":541,"language":542,"meta":356,"style":356},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar nextPermutation = function (nums) {\n  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n  let i = nums.length - 2;\n  while (i >= 0 && nums[i] >= nums[i + 1]) {\n    i--;\n  }\n  // i 在数组中存在，进行交换\n  if (i >= 0) {\n    let j = nums.length - 1;\n    while (j >= 0 && nums[i] >= nums[j]) {\n      j--;\n    }\n    // 交换\n    [nums[i], nums[j]] = [nums[j], nums[i]];\n  }\n  // i 不存在，说明是递减序列，则 i 是 -1\n  let l = i + 1;\n  let r = nums.length - 1;\n  while (l \u003C r) {\n    [nums[l], nums[r]] = [nums[r], nums[l]];\n    l++;\n    r--;\n  }\n};\n","js",[544],{"type":363,"tag":424,"props":545,"children":546},{"__ignoreMap":356},[547,556,582,605,614,658,667,719,803,821,830,839,868,910,976,993,1002,1011,1110,1118,1127,1160,1201,1231,1324,1342,1359,1367],{"type":363,"tag":428,"props":548,"children":549},{"class":430,"line":431},[550],{"type":363,"tag":428,"props":551,"children":553},{"style":552},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[554],{"type":368,"value":555},"/**\n",{"type":363,"tag":428,"props":557,"children":558},{"class":430,"line":440},[559,564,570,576],{"type":363,"tag":428,"props":560,"children":561},{"style":552},[562],{"type":368,"value":563}," * ",{"type":363,"tag":428,"props":565,"children":567},{"style":566},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[568],{"type":368,"value":569},"@param",{"type":363,"tag":428,"props":571,"children":573},{"style":572},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[574],{"type":368,"value":575}," {number[]}",{"type":363,"tag":428,"props":577,"children":579},{"style":578},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[580],{"type":368,"value":581}," nums\n",{"type":363,"tag":428,"props":583,"children":585},{"class":430,"line":584},3,[586,590,595,600],{"type":363,"tag":428,"props":587,"children":588},{"style":552},[589],{"type":368,"value":563},{"type":363,"tag":428,"props":591,"children":592},{"style":566},[593],{"type":368,"value":594},"@return",{"type":363,"tag":428,"props":596,"children":597},{"style":572},[598],{"type":368,"value":599}," {void}",{"type":363,"tag":428,"props":601,"children":602},{"style":552},[603],{"type":368,"value":604}," Do not return anything, modify nums in-place instead.\n",{"type":363,"tag":428,"props":606,"children":608},{"class":430,"line":607},4,[609],{"type":363,"tag":428,"props":610,"children":611},{"style":552},[612],{"type":368,"value":613}," */\n",{"type":363,"tag":428,"props":615,"children":617},{"class":430,"line":616},5,[618,624,630,636,641,647,653],{"type":363,"tag":428,"props":619,"children":621},{"style":620},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[622],{"type":368,"value":623},"var",{"type":363,"tag":428,"props":625,"children":627},{"style":626},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[628],{"type":368,"value":629}," nextPermutation",{"type":363,"tag":428,"props":631,"children":633},{"style":632},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[634],{"type":368,"value":635}," =",{"type":363,"tag":428,"props":637,"children":638},{"style":620},[639],{"type":368,"value":640}," function",{"type":363,"tag":428,"props":642,"children":644},{"style":643},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[645],{"type":368,"value":646}," (",{"type":363,"tag":428,"props":648,"children":650},{"style":649},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[651],{"type":368,"value":652},"nums",{"type":363,"tag":428,"props":654,"children":655},{"style":643},[656],{"type":368,"value":657},") {\n",{"type":363,"tag":428,"props":659,"children":661},{"class":430,"line":660},6,[662],{"type":363,"tag":428,"props":663,"children":664},{"style":552},[665],{"type":368,"value":666},"  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n",{"type":363,"tag":428,"props":668,"children":670},{"class":430,"line":669},7,[671,676,682,686,691,697,702,707,713],{"type":363,"tag":428,"props":672,"children":673},{"style":620},[674],{"type":368,"value":675},"  let",{"type":363,"tag":428,"props":677,"children":679},{"style":678},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[680],{"type":368,"value":681}," i",{"type":363,"tag":428,"props":683,"children":684},{"style":632},[685],{"type":368,"value":635},{"type":363,"tag":428,"props":687,"children":688},{"style":678},[689],{"type":368,"value":690}," nums",{"type":363,"tag":428,"props":692,"children":694},{"style":693},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[695],{"type":368,"value":696},".",{"type":363,"tag":428,"props":698,"children":699},{"style":643},[700],{"type":368,"value":701},"length ",{"type":363,"tag":428,"props":703,"children":704},{"style":632},[705],{"type":368,"value":706},"-",{"type":363,"tag":428,"props":708,"children":710},{"style":709},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[711],{"type":368,"value":712}," 2",{"type":363,"tag":428,"props":714,"children":716},{"style":715},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[717],{"type":368,"value":718},";\n",{"type":363,"tag":428,"props":720,"children":722},{"class":430,"line":721},8,[723,729,733,738,743,748,753,757,762,766,771,776,780,784,788,793,798],{"type":363,"tag":428,"props":724,"children":726},{"style":725},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[727],{"type":368,"value":728},"  while",{"type":363,"tag":428,"props":730,"children":731},{"style":643},[732],{"type":368,"value":646},{"type":363,"tag":428,"props":734,"children":735},{"style":678},[736],{"type":368,"value":737},"i",{"type":363,"tag":428,"props":739,"children":740},{"style":632},[741],{"type":368,"value":742}," >=",{"type":363,"tag":428,"props":744,"children":745},{"style":709},[746],{"type":368,"value":747}," 0",{"type":363,"tag":428,"props":749,"children":750},{"style":632},[751],{"type":368,"value":752}," &&",{"type":363,"tag":428,"props":754,"children":755},{"style":678},[756],{"type":368,"value":690},{"type":363,"tag":428,"props":758,"children":759},{"style":643},[760],{"type":368,"value":761},"[",{"type":363,"tag":428,"props":763,"children":764},{"style":678},[765],{"type":368,"value":737},{"type":363,"tag":428,"props":767,"children":768},{"style":643},[769],{"type":368,"value":770},"] ",{"type":363,"tag":428,"props":772,"children":773},{"style":632},[774],{"type":368,"value":775},">=",{"type":363,"tag":428,"props":777,"children":778},{"style":678},[779],{"type":368,"value":690},{"type":363,"tag":428,"props":781,"children":782},{"style":643},[783],{"type":368,"value":761},{"type":363,"tag":428,"props":785,"children":786},{"style":678},[787],{"type":368,"value":737},{"type":363,"tag":428,"props":789,"children":790},{"style":632},[791],{"type":368,"value":792}," +",{"type":363,"tag":428,"props":794,"children":795},{"style":709},[796],{"type":368,"value":797}," 1",{"type":363,"tag":428,"props":799,"children":800},{"style":643},[801],{"type":368,"value":802},"]) {\n",{"type":363,"tag":428,"props":804,"children":806},{"class":430,"line":805},9,[807,812,817],{"type":363,"tag":428,"props":808,"children":809},{"style":678},[810],{"type":368,"value":811},"    i",{"type":363,"tag":428,"props":813,"children":814},{"style":632},[815],{"type":368,"value":816},"--",{"type":363,"tag":428,"props":818,"children":819},{"style":715},[820],{"type":368,"value":718},{"type":363,"tag":428,"props":822,"children":824},{"class":430,"line":823},10,[825],{"type":363,"tag":428,"props":826,"children":827},{"style":643},[828],{"type":368,"value":829},"  }\n",{"type":363,"tag":428,"props":831,"children":833},{"class":430,"line":832},11,[834],{"type":363,"tag":428,"props":835,"children":836},{"style":552},[837],{"type":368,"value":838},"  // i 在数组中存在，进行交换\n",{"type":363,"tag":428,"props":840,"children":842},{"class":430,"line":841},12,[843,848,852,856,860,864],{"type":363,"tag":428,"props":844,"children":845},{"style":725},[846],{"type":368,"value":847},"  if",{"type":363,"tag":428,"props":849,"children":850},{"style":643},[851],{"type":368,"value":646},{"type":363,"tag":428,"props":853,"children":854},{"style":678},[855],{"type":368,"value":737},{"type":363,"tag":428,"props":857,"children":858},{"style":632},[859],{"type":368,"value":742},{"type":363,"tag":428,"props":861,"children":862},{"style":709},[863],{"type":368,"value":747},{"type":363,"tag":428,"props":865,"children":866},{"style":643},[867],{"type":368,"value":657},{"type":363,"tag":428,"props":869,"children":871},{"class":430,"line":870},13,[872,877,882,886,890,894,898,902,906],{"type":363,"tag":428,"props":873,"children":874},{"style":620},[875],{"type":368,"value":876},"    let",{"type":363,"tag":428,"props":878,"children":879},{"style":678},[880],{"type":368,"value":881}," j",{"type":363,"tag":428,"props":883,"children":884},{"style":632},[885],{"type":368,"value":635},{"type":363,"tag":428,"props":887,"children":888},{"style":678},[889],{"type":368,"value":690},{"type":363,"tag":428,"props":891,"children":892},{"style":693},[893],{"type":368,"value":696},{"type":363,"tag":428,"props":895,"children":896},{"style":643},[897],{"type":368,"value":701},{"type":363,"tag":428,"props":899,"children":900},{"style":632},[901],{"type":368,"value":706},{"type":363,"tag":428,"props":903,"children":904},{"style":709},[905],{"type":368,"value":797},{"type":363,"tag":428,"props":907,"children":908},{"style":715},[909],{"type":368,"value":718},{"type":363,"tag":428,"props":911,"children":913},{"class":430,"line":912},14,[914,919,923,928,932,936,940,944,948,952,956,960,964,968,972],{"type":363,"tag":428,"props":915,"children":916},{"style":725},[917],{"type":368,"value":918},"    while",{"type":363,"tag":428,"props":920,"children":921},{"style":643},[922],{"type":368,"value":646},{"type":363,"tag":428,"props":924,"children":925},{"style":678},[926],{"type":368,"value":927},"j",{"type":363,"tag":428,"props":929,"children":930},{"style":632},[931],{"type":368,"value":742},{"type":363,"tag":428,"props":933,"children":934},{"style":709},[935],{"type":368,"value":747},{"type":363,"tag":428,"props":937,"children":938},{"style":632},[939],{"type":368,"value":752},{"type":363,"tag":428,"props":941,"children":942},{"style":678},[943],{"type":368,"value":690},{"type":363,"tag":428,"props":945,"children":946},{"style":643},[947],{"type":368,"value":761},{"type":363,"tag":428,"props":949,"children":950},{"style":678},[951],{"type":368,"value":737},{"type":363,"tag":428,"props":953,"children":954},{"style":643},[955],{"type":368,"value":770},{"type":363,"tag":428,"props":957,"children":958},{"style":632},[959],{"type":368,"value":775},{"type":363,"tag":428,"props":961,"children":962},{"style":678},[963],{"type":368,"value":690},{"type":363,"tag":428,"props":965,"children":966},{"style":643},[967],{"type":368,"value":761},{"type":363,"tag":428,"props":969,"children":970},{"style":678},[971],{"type":368,"value":927},{"type":363,"tag":428,"props":973,"children":974},{"style":643},[975],{"type":368,"value":802},{"type":363,"tag":428,"props":977,"children":979},{"class":430,"line":978},15,[980,985,989],{"type":363,"tag":428,"props":981,"children":982},{"style":678},[983],{"type":368,"value":984},"      j",{"type":363,"tag":428,"props":986,"children":987},{"style":632},[988],{"type":368,"value":816},{"type":363,"tag":428,"props":990,"children":991},{"style":715},[992],{"type":368,"value":718},{"type":363,"tag":428,"props":994,"children":996},{"class":430,"line":995},16,[997],{"type":363,"tag":428,"props":998,"children":999},{"style":643},[1000],{"type":368,"value":1001},"    }\n",{"type":363,"tag":428,"props":1003,"children":1005},{"class":430,"line":1004},17,[1006],{"type":363,"tag":428,"props":1007,"children":1008},{"style":552},[1009],{"type":368,"value":1010},"    // 交换\n",{"type":363,"tag":428,"props":1012,"children":1014},{"class":430,"line":1013},18,[1015,1020,1024,1028,1032,1037,1042,1046,1050,1054,1059,1064,1069,1073,1077,1081,1085,1089,1093,1097,1101,1106],{"type":363,"tag":428,"props":1016,"children":1017},{"style":643},[1018],{"type":368,"value":1019},"    [",{"type":363,"tag":428,"props":1021,"children":1022},{"style":678},[1023],{"type":368,"value":652},{"type":363,"tag":428,"props":1025,"children":1026},{"style":643},[1027],{"type":368,"value":761},{"type":363,"tag":428,"props":1029,"children":1030},{"style":678},[1031],{"type":368,"value":737},{"type":363,"tag":428,"props":1033,"children":1034},{"style":643},[1035],{"type":368,"value":1036},"]",{"type":363,"tag":428,"props":1038,"children":1039},{"style":715},[1040],{"type":368,"value":1041},",",{"type":363,"tag":428,"props":1043,"children":1044},{"style":678},[1045],{"type":368,"value":690},{"type":363,"tag":428,"props":1047,"children":1048},{"style":643},[1049],{"type":368,"value":761},{"type":363,"tag":428,"props":1051,"children":1052},{"style":678},[1053],{"type":368,"value":927},{"type":363,"tag":428,"props":1055,"children":1056},{"style":643},[1057],{"type":368,"value":1058},"]] ",{"type":363,"tag":428,"props":1060,"children":1061},{"style":632},[1062],{"type":368,"value":1063},"=",{"type":363,"tag":428,"props":1065,"children":1066},{"style":643},[1067],{"type":368,"value":1068}," [",{"type":363,"tag":428,"props":1070,"children":1071},{"style":678},[1072],{"type":368,"value":652},{"type":363,"tag":428,"props":1074,"children":1075},{"style":643},[1076],{"type":368,"value":761},{"type":363,"tag":428,"props":1078,"children":1079},{"style":678},[1080],{"type":368,"value":927},{"type":363,"tag":428,"props":1082,"children":1083},{"style":643},[1084],{"type":368,"value":1036},{"type":363,"tag":428,"props":1086,"children":1087},{"style":715},[1088],{"type":368,"value":1041},{"type":363,"tag":428,"props":1090,"children":1091},{"style":678},[1092],{"type":368,"value":690},{"type":363,"tag":428,"props":1094,"children":1095},{"style":643},[1096],{"type":368,"value":761},{"type":363,"tag":428,"props":1098,"children":1099},{"style":678},[1100],{"type":368,"value":737},{"type":363,"tag":428,"props":1102,"children":1103},{"style":643},[1104],{"type":368,"value":1105},"]]",{"type":363,"tag":428,"props":1107,"children":1108},{"style":715},[1109],{"type":368,"value":718},{"type":363,"tag":428,"props":1111,"children":1113},{"class":430,"line":1112},19,[1114],{"type":363,"tag":428,"props":1115,"children":1116},{"style":643},[1117],{"type":368,"value":829},{"type":363,"tag":428,"props":1119,"children":1121},{"class":430,"line":1120},20,[1122],{"type":363,"tag":428,"props":1123,"children":1124},{"style":552},[1125],{"type":368,"value":1126},"  // i 不存在，说明是递减序列，则 i 是 -1\n",{"type":363,"tag":428,"props":1128,"children":1130},{"class":430,"line":1129},21,[1131,1135,1140,1144,1148,1152,1156],{"type":363,"tag":428,"props":1132,"children":1133},{"style":620},[1134],{"type":368,"value":675},{"type":363,"tag":428,"props":1136,"children":1137},{"style":678},[1138],{"type":368,"value":1139}," l",{"type":363,"tag":428,"props":1141,"children":1142},{"style":632},[1143],{"type":368,"value":635},{"type":363,"tag":428,"props":1145,"children":1146},{"style":678},[1147],{"type":368,"value":681},{"type":363,"tag":428,"props":1149,"children":1150},{"style":632},[1151],{"type":368,"value":792},{"type":363,"tag":428,"props":1153,"children":1154},{"style":709},[1155],{"type":368,"value":797},{"type":363,"tag":428,"props":1157,"children":1158},{"style":715},[1159],{"type":368,"value":718},{"type":363,"tag":428,"props":1161,"children":1163},{"class":430,"line":1162},22,[1164,1168,1173,1177,1181,1185,1189,1193,1197],{"type":363,"tag":428,"props":1165,"children":1166},{"style":620},[1167],{"type":368,"value":675},{"type":363,"tag":428,"props":1169,"children":1170},{"style":678},[1171],{"type":368,"value":1172}," r",{"type":363,"tag":428,"props":1174,"children":1175},{"style":632},[1176],{"type":368,"value":635},{"type":363,"tag":428,"props":1178,"children":1179},{"style":678},[1180],{"type":368,"value":690},{"type":363,"tag":428,"props":1182,"children":1183},{"style":693},[1184],{"type":368,"value":696},{"type":363,"tag":428,"props":1186,"children":1187},{"style":643},[1188],{"type":368,"value":701},{"type":363,"tag":428,"props":1190,"children":1191},{"style":632},[1192],{"type":368,"value":706},{"type":363,"tag":428,"props":1194,"children":1195},{"style":709},[1196],{"type":368,"value":797},{"type":363,"tag":428,"props":1198,"children":1199},{"style":715},[1200],{"type":368,"value":718},{"type":363,"tag":428,"props":1202,"children":1204},{"class":430,"line":1203},23,[1205,1209,1213,1218,1223,1227],{"type":363,"tag":428,"props":1206,"children":1207},{"style":725},[1208],{"type":368,"value":728},{"type":363,"tag":428,"props":1210,"children":1211},{"style":643},[1212],{"type":368,"value":646},{"type":363,"tag":428,"props":1214,"children":1215},{"style":678},[1216],{"type":368,"value":1217},"l",{"type":363,"tag":428,"props":1219,"children":1220},{"style":632},[1221],{"type":368,"value":1222}," \u003C",{"type":363,"tag":428,"props":1224,"children":1225},{"style":678},[1226],{"type":368,"value":1172},{"type":363,"tag":428,"props":1228,"children":1229},{"style":643},[1230],{"type":368,"value":657},{"type":363,"tag":428,"props":1232,"children":1234},{"class":430,"line":1233},24,[1235,1239,1243,1247,1251,1255,1259,1263,1267,1272,1276,1280,1284,1288,1292,1296,1300,1304,1308,1312,1316,1320],{"type":363,"tag":428,"props":1236,"children":1237},{"style":643},[1238],{"type":368,"value":1019},{"type":363,"tag":428,"props":1240,"children":1241},{"style":678},[1242],{"type":368,"value":652},{"type":363,"tag":428,"props":1244,"children":1245},{"style":643},[1246],{"type":368,"value":761},{"type":363,"tag":428,"props":1248,"children":1249},{"style":678},[1250],{"type":368,"value":1217},{"type":363,"tag":428,"props":1252,"children":1253},{"style":643},[1254],{"type":368,"value":1036},{"type":363,"tag":428,"props":1256,"children":1257},{"style":715},[1258],{"type":368,"value":1041},{"type":363,"tag":428,"props":1260,"children":1261},{"style":678},[1262],{"type":368,"value":690},{"type":363,"tag":428,"props":1264,"children":1265},{"style":643},[1266],{"type":368,"value":761},{"type":363,"tag":428,"props":1268,"children":1269},{"style":678},[1270],{"type":368,"value":1271},"r",{"type":363,"tag":428,"props":1273,"children":1274},{"style":643},[1275],{"type":368,"value":1058},{"type":363,"tag":428,"props":1277,"children":1278},{"style":632},[1279],{"type":368,"value":1063},{"type":363,"tag":428,"props":1281,"children":1282},{"style":643},[1283],{"type":368,"value":1068},{"type":363,"tag":428,"props":1285,"children":1286},{"style":678},[1287],{"type":368,"value":652},{"type":363,"tag":428,"props":1289,"children":1290},{"style":643},[1291],{"type":368,"value":761},{"type":363,"tag":428,"props":1293,"children":1294},{"style":678},[1295],{"type":368,"value":1271},{"type":363,"tag":428,"props":1297,"children":1298},{"style":643},[1299],{"type":368,"value":1036},{"type":363,"tag":428,"props":1301,"children":1302},{"style":715},[1303],{"type":368,"value":1041},{"type":363,"tag":428,"props":1305,"children":1306},{"style":678},[1307],{"type":368,"value":690},{"type":363,"tag":428,"props":1309,"children":1310},{"style":643},[1311],{"type":368,"value":761},{"type":363,"tag":428,"props":1313,"children":1314},{"style":678},[1315],{"type":368,"value":1217},{"type":363,"tag":428,"props":1317,"children":1318},{"style":643},[1319],{"type":368,"value":1105},{"type":363,"tag":428,"props":1321,"children":1322},{"style":715},[1323],{"type":368,"value":718},{"type":363,"tag":428,"props":1325,"children":1327},{"class":430,"line":1326},25,[1328,1333,1338],{"type":363,"tag":428,"props":1329,"children":1330},{"style":678},[1331],{"type":368,"value":1332},"    l",{"type":363,"tag":428,"props":1334,"children":1335},{"style":632},[1336],{"type":368,"value":1337},"++",{"type":363,"tag":428,"props":1339,"children":1340},{"style":715},[1341],{"type":368,"value":718},{"type":363,"tag":428,"props":1343,"children":1345},{"class":430,"line":1344},26,[1346,1351,1355],{"type":363,"tag":428,"props":1347,"children":1348},{"style":678},[1349],{"type":368,"value":1350},"    r",{"type":363,"tag":428,"props":1352,"children":1353},{"style":632},[1354],{"type":368,"value":816},{"type":363,"tag":428,"props":1356,"children":1357},{"style":715},[1358],{"type":368,"value":718},{"type":363,"tag":428,"props":1360,"children":1362},{"class":430,"line":1361},27,[1363],{"type":363,"tag":428,"props":1364,"children":1365},{"style":643},[1366],{"type":368,"value":829},{"type":363,"tag":428,"props":1368,"children":1370},{"class":430,"line":1369},28,[1371,1376],{"type":363,"tag":428,"props":1372,"children":1373},{"style":643},[1374],{"type":368,"value":1375},"}",{"type":363,"tag":428,"props":1377,"children":1378},{"style":715},[1379],{"type":368,"value":718},{"type":363,"tag":1381,"props":1382,"children":1383},"style",{},[1384],{"type":368,"value":1385},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":356,"searchDepth":616,"depth":616,"links":1387},[1388,1389],{"id":524,"depth":440,"text":524},{"id":529,"depth":440,"text":529,"children":1390},[1391],{"id":535,"depth":584,"text":535},"markdown","content:2.code:1.algorithm:3.leetcode:31.next-permutation.md","content","2.code/1.algorithm/3.leetcode/31.next-permutation.md","md",[1398,1400],{"_path":103,"title":102,"description":1399},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",{"_path":109,"title":108,"description":1401},"给你一个只包含 '(' 和 ')' 的字符串，找出最长有效（格式正确且连续）括号\n子串\n的长度。",1712589909754]