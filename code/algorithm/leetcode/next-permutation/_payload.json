[{"data":1,"prerenderedAt":1378},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/next-permutation":329,"/code/algorithm/leetcode/next-permutation-surround":1373},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319],{"title":320,"_path":321,"children":322},"Promise","/code/scene/promise",[323,326],{"title":324,"_path":325},"顺序打印 url 并支持 retry","/code/scene/promise/order-print-url-and-retry",{"title":327,"_path":328},"promise 实现图片加载数量限制","/code/scene/promise/limit-image-load-count",{"_path":106,"_dir":330,"_draft":331,"_partial":331,"_locale":332,"title":105,"description":333,"url":334,"body":335,"_type":1368,"_id":1369,"_source":1370,"_file":1371,"_extension":1372},"leetcode",false,"","整数数组的一个 排列 就是将其所有成员以序列或线性顺序排列。","https://leetcode.cn/problems/next-permutation",{"type":336,"children":337,"toc":1362},"root",[338,345,355,360,378,383,388,393,423,428,451,456,479,484,497,503,508,514,1356],{"type":339,"tag":340,"props":341,"children":342},"element","p",{},[343],{"type":344,"value":333},"text",{"type":339,"tag":346,"props":347,"children":348},"ul",{},[349],{"type":339,"tag":350,"props":351,"children":352},"li",{},[353],{"type":344,"value":354},"例如，arr = [1,2,3] ，以下这些都可以视作 arr 的排列：[1,2,3]、[1,3,2]、[3,1,2]、[2,3,1] 。",{"type":339,"tag":340,"props":356,"children":357},{},[358],{"type":344,"value":359},"整数数组的 下一个排列 是指其整数的下一个字典序更大的排列。更正式地，如果数组的所有排列根据其字典顺序从小到大排列在一个容器中，那么数组的 下一个排列 就是在这个有序容器中排在它后面的那个排列。如果不存在下一个更大的排列，那么这个数组必须重排为字典序最小的排列（即，其元素按升序排列）。",{"type":339,"tag":346,"props":361,"children":362},{},[363,368,373],{"type":339,"tag":350,"props":364,"children":365},{},[366],{"type":344,"value":367},"例如，arr = [1,2,3] 的下一个排列是 [1,3,2] 。",{"type":339,"tag":350,"props":369,"children":370},{},[371],{"type":344,"value":372},"类似地，arr = [2,3,1] 的下一个排列是 [3,1,2] 。",{"type":339,"tag":350,"props":374,"children":375},{},[376],{"type":344,"value":377},"而 arr = [3,2,1] 的下一个排列是 [1,2,3] ，因为 [3,2,1] 不存在一个字典序更大的排列。",{"type":339,"tag":340,"props":379,"children":380},{},[381],{"type":344,"value":382},"给你一个整数数组 nums ，找出 nums 的下一个排列。",{"type":339,"tag":340,"props":384,"children":385},{},[386],{"type":344,"value":387},"必须 原地 修改，只允许使用额外常数空间。",{"type":339,"tag":340,"props":389,"children":390},{},[391],{"type":344,"value":392},"示例 1：",{"type":339,"tag":394,"props":395,"children":398},"pre",{"className":396,"code":397,"language":344,"meta":332,"style":332},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3]\n输出：[1,3,2]\n",[399],{"type":339,"tag":400,"props":401,"children":402},"code",{"__ignoreMap":332},[403,414],{"type":339,"tag":404,"props":405,"children":408},"span",{"class":406,"line":407},"line",1,[409],{"type":339,"tag":404,"props":410,"children":411},{},[412],{"type":344,"value":413},"输入：nums = [1,2,3]\n",{"type":339,"tag":404,"props":415,"children":417},{"class":406,"line":416},2,[418],{"type":339,"tag":404,"props":419,"children":420},{},[421],{"type":344,"value":422},"输出：[1,3,2]\n",{"type":339,"tag":340,"props":424,"children":425},{},[426],{"type":344,"value":427},"示例 2：",{"type":339,"tag":394,"props":429,"children":431},{"className":396,"code":430,"language":344,"meta":332,"style":332},"输入：nums = [3,2,1]\n输出：[1,2,3]\n",[432],{"type":339,"tag":400,"props":433,"children":434},{"__ignoreMap":332},[435,443],{"type":339,"tag":404,"props":436,"children":437},{"class":406,"line":407},[438],{"type":339,"tag":404,"props":439,"children":440},{},[441],{"type":344,"value":442},"输入：nums = [3,2,1]\n",{"type":339,"tag":404,"props":444,"children":445},{"class":406,"line":416},[446],{"type":339,"tag":404,"props":447,"children":448},{},[449],{"type":344,"value":450},"输出：[1,2,3]\n",{"type":339,"tag":340,"props":452,"children":453},{},[454],{"type":344,"value":455},"示例 3：",{"type":339,"tag":394,"props":457,"children":459},{"className":396,"code":458,"language":344,"meta":332,"style":332},"输入：nums = [1,1,5]\n输出：[1,5,1]\n",[460],{"type":339,"tag":400,"props":461,"children":462},{"__ignoreMap":332},[463,471],{"type":339,"tag":404,"props":464,"children":465},{"class":406,"line":407},[466],{"type":339,"tag":404,"props":467,"children":468},{},[469],{"type":344,"value":470},"输入：nums = [1,1,5]\n",{"type":339,"tag":404,"props":472,"children":473},{"class":406,"line":416},[474],{"type":339,"tag":404,"props":475,"children":476},{},[477],{"type":344,"value":478},"输出：[1,5,1]\n",{"type":339,"tag":340,"props":480,"children":481},{},[482],{"type":344,"value":483},"提示：",{"type":339,"tag":346,"props":485,"children":486},{},[487,492],{"type":339,"tag":350,"props":488,"children":489},{},[490],{"type":344,"value":491},"1 \u003C= nums.length \u003C= 100",{"type":339,"tag":350,"props":493,"children":494},{},[495],{"type":344,"value":496},"0 \u003C= nums[i] \u003C= 100",{"type":339,"tag":498,"props":499,"children":501},"h2",{"id":500},"解题思路",[502],{"type":344,"value":500},{"type":339,"tag":498,"props":504,"children":506},{"id":505},"实现",[507],{"type":344,"value":505},{"type":339,"tag":509,"props":510,"children":512},"h3",{"id":511},"双指针",[513],{"type":344,"value":511},{"type":339,"tag":394,"props":515,"children":519},{"className":516,"code":517,"language":518,"meta":332,"style":332},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar nextPermutation = function (nums) {\n  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n  let i = nums.length - 2;\n  while (i >= 0 && nums[i] >= nums[i + 1]) {\n    i--;\n  }\n  // i 在数组中存在，进行交换\n  if (i >= 0) {\n    let j = nums.length - 1;\n    while (j >= 0 && nums[i] >= nums[j]) {\n      j--;\n    }\n    // 交换\n    [nums[i], nums[j]] = [nums[j], nums[i]];\n  }\n  // i 不存在，说明是递减序列，则 i 是 -1\n  let l = i + 1;\n  let r = nums.length - 1;\n  while (l \u003C r) {\n    [nums[l], nums[r]] = [nums[r], nums[l]];\n    l++;\n    r--;\n  }\n};\n","js",[520],{"type":339,"tag":400,"props":521,"children":522},{"__ignoreMap":332},[523,532,558,581,590,634,643,695,779,797,806,815,844,886,952,969,978,987,1086,1094,1103,1136,1177,1207,1300,1318,1335,1343],{"type":339,"tag":404,"props":524,"children":525},{"class":406,"line":407},[526],{"type":339,"tag":404,"props":527,"children":529},{"style":528},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[530],{"type":344,"value":531},"/**\n",{"type":339,"tag":404,"props":533,"children":534},{"class":406,"line":416},[535,540,546,552],{"type":339,"tag":404,"props":536,"children":537},{"style":528},[538],{"type":344,"value":539}," * ",{"type":339,"tag":404,"props":541,"children":543},{"style":542},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[544],{"type":344,"value":545},"@param",{"type":339,"tag":404,"props":547,"children":549},{"style":548},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[550],{"type":344,"value":551}," {number[]}",{"type":339,"tag":404,"props":553,"children":555},{"style":554},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[556],{"type":344,"value":557}," nums\n",{"type":339,"tag":404,"props":559,"children":561},{"class":406,"line":560},3,[562,566,571,576],{"type":339,"tag":404,"props":563,"children":564},{"style":528},[565],{"type":344,"value":539},{"type":339,"tag":404,"props":567,"children":568},{"style":542},[569],{"type":344,"value":570},"@return",{"type":339,"tag":404,"props":572,"children":573},{"style":548},[574],{"type":344,"value":575}," {void}",{"type":339,"tag":404,"props":577,"children":578},{"style":528},[579],{"type":344,"value":580}," Do not return anything, modify nums in-place instead.\n",{"type":339,"tag":404,"props":582,"children":584},{"class":406,"line":583},4,[585],{"type":339,"tag":404,"props":586,"children":587},{"style":528},[588],{"type":344,"value":589}," */\n",{"type":339,"tag":404,"props":591,"children":593},{"class":406,"line":592},5,[594,600,606,612,617,623,629],{"type":339,"tag":404,"props":595,"children":597},{"style":596},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[598],{"type":344,"value":599},"var",{"type":339,"tag":404,"props":601,"children":603},{"style":602},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[604],{"type":344,"value":605}," nextPermutation",{"type":339,"tag":404,"props":607,"children":609},{"style":608},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[610],{"type":344,"value":611}," =",{"type":339,"tag":404,"props":613,"children":614},{"style":596},[615],{"type":344,"value":616}," function",{"type":339,"tag":404,"props":618,"children":620},{"style":619},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[621],{"type":344,"value":622}," (",{"type":339,"tag":404,"props":624,"children":626},{"style":625},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[627],{"type":344,"value":628},"nums",{"type":339,"tag":404,"props":630,"children":631},{"style":619},[632],{"type":344,"value":633},") {\n",{"type":339,"tag":404,"props":635,"children":637},{"class":406,"line":636},6,[638],{"type":339,"tag":404,"props":639,"children":640},{"style":528},[641],{"type":344,"value":642},"  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n",{"type":339,"tag":404,"props":644,"children":646},{"class":406,"line":645},7,[647,652,658,662,667,673,678,683,689],{"type":339,"tag":404,"props":648,"children":649},{"style":596},[650],{"type":344,"value":651},"  let",{"type":339,"tag":404,"props":653,"children":655},{"style":654},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[656],{"type":344,"value":657}," i",{"type":339,"tag":404,"props":659,"children":660},{"style":608},[661],{"type":344,"value":611},{"type":339,"tag":404,"props":663,"children":664},{"style":654},[665],{"type":344,"value":666}," nums",{"type":339,"tag":404,"props":668,"children":670},{"style":669},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[671],{"type":344,"value":672},".",{"type":339,"tag":404,"props":674,"children":675},{"style":619},[676],{"type":344,"value":677},"length ",{"type":339,"tag":404,"props":679,"children":680},{"style":608},[681],{"type":344,"value":682},"-",{"type":339,"tag":404,"props":684,"children":686},{"style":685},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[687],{"type":344,"value":688}," 2",{"type":339,"tag":404,"props":690,"children":692},{"style":691},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[693],{"type":344,"value":694},";\n",{"type":339,"tag":404,"props":696,"children":698},{"class":406,"line":697},8,[699,705,709,714,719,724,729,733,738,742,747,752,756,760,764,769,774],{"type":339,"tag":404,"props":700,"children":702},{"style":701},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[703],{"type":344,"value":704},"  while",{"type":339,"tag":404,"props":706,"children":707},{"style":619},[708],{"type":344,"value":622},{"type":339,"tag":404,"props":710,"children":711},{"style":654},[712],{"type":344,"value":713},"i",{"type":339,"tag":404,"props":715,"children":716},{"style":608},[717],{"type":344,"value":718}," >=",{"type":339,"tag":404,"props":720,"children":721},{"style":685},[722],{"type":344,"value":723}," 0",{"type":339,"tag":404,"props":725,"children":726},{"style":608},[727],{"type":344,"value":728}," &&",{"type":339,"tag":404,"props":730,"children":731},{"style":654},[732],{"type":344,"value":666},{"type":339,"tag":404,"props":734,"children":735},{"style":619},[736],{"type":344,"value":737},"[",{"type":339,"tag":404,"props":739,"children":740},{"style":654},[741],{"type":344,"value":713},{"type":339,"tag":404,"props":743,"children":744},{"style":619},[745],{"type":344,"value":746},"] ",{"type":339,"tag":404,"props":748,"children":749},{"style":608},[750],{"type":344,"value":751},">=",{"type":339,"tag":404,"props":753,"children":754},{"style":654},[755],{"type":344,"value":666},{"type":339,"tag":404,"props":757,"children":758},{"style":619},[759],{"type":344,"value":737},{"type":339,"tag":404,"props":761,"children":762},{"style":654},[763],{"type":344,"value":713},{"type":339,"tag":404,"props":765,"children":766},{"style":608},[767],{"type":344,"value":768}," +",{"type":339,"tag":404,"props":770,"children":771},{"style":685},[772],{"type":344,"value":773}," 1",{"type":339,"tag":404,"props":775,"children":776},{"style":619},[777],{"type":344,"value":778},"]) {\n",{"type":339,"tag":404,"props":780,"children":782},{"class":406,"line":781},9,[783,788,793],{"type":339,"tag":404,"props":784,"children":785},{"style":654},[786],{"type":344,"value":787},"    i",{"type":339,"tag":404,"props":789,"children":790},{"style":608},[791],{"type":344,"value":792},"--",{"type":339,"tag":404,"props":794,"children":795},{"style":691},[796],{"type":344,"value":694},{"type":339,"tag":404,"props":798,"children":800},{"class":406,"line":799},10,[801],{"type":339,"tag":404,"props":802,"children":803},{"style":619},[804],{"type":344,"value":805},"  }\n",{"type":339,"tag":404,"props":807,"children":809},{"class":406,"line":808},11,[810],{"type":339,"tag":404,"props":811,"children":812},{"style":528},[813],{"type":344,"value":814},"  // i 在数组中存在，进行交换\n",{"type":339,"tag":404,"props":816,"children":818},{"class":406,"line":817},12,[819,824,828,832,836,840],{"type":339,"tag":404,"props":820,"children":821},{"style":701},[822],{"type":344,"value":823},"  if",{"type":339,"tag":404,"props":825,"children":826},{"style":619},[827],{"type":344,"value":622},{"type":339,"tag":404,"props":829,"children":830},{"style":654},[831],{"type":344,"value":713},{"type":339,"tag":404,"props":833,"children":834},{"style":608},[835],{"type":344,"value":718},{"type":339,"tag":404,"props":837,"children":838},{"style":685},[839],{"type":344,"value":723},{"type":339,"tag":404,"props":841,"children":842},{"style":619},[843],{"type":344,"value":633},{"type":339,"tag":404,"props":845,"children":847},{"class":406,"line":846},13,[848,853,858,862,866,870,874,878,882],{"type":339,"tag":404,"props":849,"children":850},{"style":596},[851],{"type":344,"value":852},"    let",{"type":339,"tag":404,"props":854,"children":855},{"style":654},[856],{"type":344,"value":857}," j",{"type":339,"tag":404,"props":859,"children":860},{"style":608},[861],{"type":344,"value":611},{"type":339,"tag":404,"props":863,"children":864},{"style":654},[865],{"type":344,"value":666},{"type":339,"tag":404,"props":867,"children":868},{"style":669},[869],{"type":344,"value":672},{"type":339,"tag":404,"props":871,"children":872},{"style":619},[873],{"type":344,"value":677},{"type":339,"tag":404,"props":875,"children":876},{"style":608},[877],{"type":344,"value":682},{"type":339,"tag":404,"props":879,"children":880},{"style":685},[881],{"type":344,"value":773},{"type":339,"tag":404,"props":883,"children":884},{"style":691},[885],{"type":344,"value":694},{"type":339,"tag":404,"props":887,"children":889},{"class":406,"line":888},14,[890,895,899,904,908,912,916,920,924,928,932,936,940,944,948],{"type":339,"tag":404,"props":891,"children":892},{"style":701},[893],{"type":344,"value":894},"    while",{"type":339,"tag":404,"props":896,"children":897},{"style":619},[898],{"type":344,"value":622},{"type":339,"tag":404,"props":900,"children":901},{"style":654},[902],{"type":344,"value":903},"j",{"type":339,"tag":404,"props":905,"children":906},{"style":608},[907],{"type":344,"value":718},{"type":339,"tag":404,"props":909,"children":910},{"style":685},[911],{"type":344,"value":723},{"type":339,"tag":404,"props":913,"children":914},{"style":608},[915],{"type":344,"value":728},{"type":339,"tag":404,"props":917,"children":918},{"style":654},[919],{"type":344,"value":666},{"type":339,"tag":404,"props":921,"children":922},{"style":619},[923],{"type":344,"value":737},{"type":339,"tag":404,"props":925,"children":926},{"style":654},[927],{"type":344,"value":713},{"type":339,"tag":404,"props":929,"children":930},{"style":619},[931],{"type":344,"value":746},{"type":339,"tag":404,"props":933,"children":934},{"style":608},[935],{"type":344,"value":751},{"type":339,"tag":404,"props":937,"children":938},{"style":654},[939],{"type":344,"value":666},{"type":339,"tag":404,"props":941,"children":942},{"style":619},[943],{"type":344,"value":737},{"type":339,"tag":404,"props":945,"children":946},{"style":654},[947],{"type":344,"value":903},{"type":339,"tag":404,"props":949,"children":950},{"style":619},[951],{"type":344,"value":778},{"type":339,"tag":404,"props":953,"children":955},{"class":406,"line":954},15,[956,961,965],{"type":339,"tag":404,"props":957,"children":958},{"style":654},[959],{"type":344,"value":960},"      j",{"type":339,"tag":404,"props":962,"children":963},{"style":608},[964],{"type":344,"value":792},{"type":339,"tag":404,"props":966,"children":967},{"style":691},[968],{"type":344,"value":694},{"type":339,"tag":404,"props":970,"children":972},{"class":406,"line":971},16,[973],{"type":339,"tag":404,"props":974,"children":975},{"style":619},[976],{"type":344,"value":977},"    }\n",{"type":339,"tag":404,"props":979,"children":981},{"class":406,"line":980},17,[982],{"type":339,"tag":404,"props":983,"children":984},{"style":528},[985],{"type":344,"value":986},"    // 交换\n",{"type":339,"tag":404,"props":988,"children":990},{"class":406,"line":989},18,[991,996,1000,1004,1008,1013,1018,1022,1026,1030,1035,1040,1045,1049,1053,1057,1061,1065,1069,1073,1077,1082],{"type":339,"tag":404,"props":992,"children":993},{"style":619},[994],{"type":344,"value":995},"    [",{"type":339,"tag":404,"props":997,"children":998},{"style":654},[999],{"type":344,"value":628},{"type":339,"tag":404,"props":1001,"children":1002},{"style":619},[1003],{"type":344,"value":737},{"type":339,"tag":404,"props":1005,"children":1006},{"style":654},[1007],{"type":344,"value":713},{"type":339,"tag":404,"props":1009,"children":1010},{"style":619},[1011],{"type":344,"value":1012},"]",{"type":339,"tag":404,"props":1014,"children":1015},{"style":691},[1016],{"type":344,"value":1017},",",{"type":339,"tag":404,"props":1019,"children":1020},{"style":654},[1021],{"type":344,"value":666},{"type":339,"tag":404,"props":1023,"children":1024},{"style":619},[1025],{"type":344,"value":737},{"type":339,"tag":404,"props":1027,"children":1028},{"style":654},[1029],{"type":344,"value":903},{"type":339,"tag":404,"props":1031,"children":1032},{"style":619},[1033],{"type":344,"value":1034},"]] ",{"type":339,"tag":404,"props":1036,"children":1037},{"style":608},[1038],{"type":344,"value":1039},"=",{"type":339,"tag":404,"props":1041,"children":1042},{"style":619},[1043],{"type":344,"value":1044}," [",{"type":339,"tag":404,"props":1046,"children":1047},{"style":654},[1048],{"type":344,"value":628},{"type":339,"tag":404,"props":1050,"children":1051},{"style":619},[1052],{"type":344,"value":737},{"type":339,"tag":404,"props":1054,"children":1055},{"style":654},[1056],{"type":344,"value":903},{"type":339,"tag":404,"props":1058,"children":1059},{"style":619},[1060],{"type":344,"value":1012},{"type":339,"tag":404,"props":1062,"children":1063},{"style":691},[1064],{"type":344,"value":1017},{"type":339,"tag":404,"props":1066,"children":1067},{"style":654},[1068],{"type":344,"value":666},{"type":339,"tag":404,"props":1070,"children":1071},{"style":619},[1072],{"type":344,"value":737},{"type":339,"tag":404,"props":1074,"children":1075},{"style":654},[1076],{"type":344,"value":713},{"type":339,"tag":404,"props":1078,"children":1079},{"style":619},[1080],{"type":344,"value":1081},"]]",{"type":339,"tag":404,"props":1083,"children":1084},{"style":691},[1085],{"type":344,"value":694},{"type":339,"tag":404,"props":1087,"children":1089},{"class":406,"line":1088},19,[1090],{"type":339,"tag":404,"props":1091,"children":1092},{"style":619},[1093],{"type":344,"value":805},{"type":339,"tag":404,"props":1095,"children":1097},{"class":406,"line":1096},20,[1098],{"type":339,"tag":404,"props":1099,"children":1100},{"style":528},[1101],{"type":344,"value":1102},"  // i 不存在，说明是递减序列，则 i 是 -1\n",{"type":339,"tag":404,"props":1104,"children":1106},{"class":406,"line":1105},21,[1107,1111,1116,1120,1124,1128,1132],{"type":339,"tag":404,"props":1108,"children":1109},{"style":596},[1110],{"type":344,"value":651},{"type":339,"tag":404,"props":1112,"children":1113},{"style":654},[1114],{"type":344,"value":1115}," l",{"type":339,"tag":404,"props":1117,"children":1118},{"style":608},[1119],{"type":344,"value":611},{"type":339,"tag":404,"props":1121,"children":1122},{"style":654},[1123],{"type":344,"value":657},{"type":339,"tag":404,"props":1125,"children":1126},{"style":608},[1127],{"type":344,"value":768},{"type":339,"tag":404,"props":1129,"children":1130},{"style":685},[1131],{"type":344,"value":773},{"type":339,"tag":404,"props":1133,"children":1134},{"style":691},[1135],{"type":344,"value":694},{"type":339,"tag":404,"props":1137,"children":1139},{"class":406,"line":1138},22,[1140,1144,1149,1153,1157,1161,1165,1169,1173],{"type":339,"tag":404,"props":1141,"children":1142},{"style":596},[1143],{"type":344,"value":651},{"type":339,"tag":404,"props":1145,"children":1146},{"style":654},[1147],{"type":344,"value":1148}," r",{"type":339,"tag":404,"props":1150,"children":1151},{"style":608},[1152],{"type":344,"value":611},{"type":339,"tag":404,"props":1154,"children":1155},{"style":654},[1156],{"type":344,"value":666},{"type":339,"tag":404,"props":1158,"children":1159},{"style":669},[1160],{"type":344,"value":672},{"type":339,"tag":404,"props":1162,"children":1163},{"style":619},[1164],{"type":344,"value":677},{"type":339,"tag":404,"props":1166,"children":1167},{"style":608},[1168],{"type":344,"value":682},{"type":339,"tag":404,"props":1170,"children":1171},{"style":685},[1172],{"type":344,"value":773},{"type":339,"tag":404,"props":1174,"children":1175},{"style":691},[1176],{"type":344,"value":694},{"type":339,"tag":404,"props":1178,"children":1180},{"class":406,"line":1179},23,[1181,1185,1189,1194,1199,1203],{"type":339,"tag":404,"props":1182,"children":1183},{"style":701},[1184],{"type":344,"value":704},{"type":339,"tag":404,"props":1186,"children":1187},{"style":619},[1188],{"type":344,"value":622},{"type":339,"tag":404,"props":1190,"children":1191},{"style":654},[1192],{"type":344,"value":1193},"l",{"type":339,"tag":404,"props":1195,"children":1196},{"style":608},[1197],{"type":344,"value":1198}," \u003C",{"type":339,"tag":404,"props":1200,"children":1201},{"style":654},[1202],{"type":344,"value":1148},{"type":339,"tag":404,"props":1204,"children":1205},{"style":619},[1206],{"type":344,"value":633},{"type":339,"tag":404,"props":1208,"children":1210},{"class":406,"line":1209},24,[1211,1215,1219,1223,1227,1231,1235,1239,1243,1248,1252,1256,1260,1264,1268,1272,1276,1280,1284,1288,1292,1296],{"type":339,"tag":404,"props":1212,"children":1213},{"style":619},[1214],{"type":344,"value":995},{"type":339,"tag":404,"props":1216,"children":1217},{"style":654},[1218],{"type":344,"value":628},{"type":339,"tag":404,"props":1220,"children":1221},{"style":619},[1222],{"type":344,"value":737},{"type":339,"tag":404,"props":1224,"children":1225},{"style":654},[1226],{"type":344,"value":1193},{"type":339,"tag":404,"props":1228,"children":1229},{"style":619},[1230],{"type":344,"value":1012},{"type":339,"tag":404,"props":1232,"children":1233},{"style":691},[1234],{"type":344,"value":1017},{"type":339,"tag":404,"props":1236,"children":1237},{"style":654},[1238],{"type":344,"value":666},{"type":339,"tag":404,"props":1240,"children":1241},{"style":619},[1242],{"type":344,"value":737},{"type":339,"tag":404,"props":1244,"children":1245},{"style":654},[1246],{"type":344,"value":1247},"r",{"type":339,"tag":404,"props":1249,"children":1250},{"style":619},[1251],{"type":344,"value":1034},{"type":339,"tag":404,"props":1253,"children":1254},{"style":608},[1255],{"type":344,"value":1039},{"type":339,"tag":404,"props":1257,"children":1258},{"style":619},[1259],{"type":344,"value":1044},{"type":339,"tag":404,"props":1261,"children":1262},{"style":654},[1263],{"type":344,"value":628},{"type":339,"tag":404,"props":1265,"children":1266},{"style":619},[1267],{"type":344,"value":737},{"type":339,"tag":404,"props":1269,"children":1270},{"style":654},[1271],{"type":344,"value":1247},{"type":339,"tag":404,"props":1273,"children":1274},{"style":619},[1275],{"type":344,"value":1012},{"type":339,"tag":404,"props":1277,"children":1278},{"style":691},[1279],{"type":344,"value":1017},{"type":339,"tag":404,"props":1281,"children":1282},{"style":654},[1283],{"type":344,"value":666},{"type":339,"tag":404,"props":1285,"children":1286},{"style":619},[1287],{"type":344,"value":737},{"type":339,"tag":404,"props":1289,"children":1290},{"style":654},[1291],{"type":344,"value":1193},{"type":339,"tag":404,"props":1293,"children":1294},{"style":619},[1295],{"type":344,"value":1081},{"type":339,"tag":404,"props":1297,"children":1298},{"style":691},[1299],{"type":344,"value":694},{"type":339,"tag":404,"props":1301,"children":1303},{"class":406,"line":1302},25,[1304,1309,1314],{"type":339,"tag":404,"props":1305,"children":1306},{"style":654},[1307],{"type":344,"value":1308},"    l",{"type":339,"tag":404,"props":1310,"children":1311},{"style":608},[1312],{"type":344,"value":1313},"++",{"type":339,"tag":404,"props":1315,"children":1316},{"style":691},[1317],{"type":344,"value":694},{"type":339,"tag":404,"props":1319,"children":1321},{"class":406,"line":1320},26,[1322,1327,1331],{"type":339,"tag":404,"props":1323,"children":1324},{"style":654},[1325],{"type":344,"value":1326},"    r",{"type":339,"tag":404,"props":1328,"children":1329},{"style":608},[1330],{"type":344,"value":792},{"type":339,"tag":404,"props":1332,"children":1333},{"style":691},[1334],{"type":344,"value":694},{"type":339,"tag":404,"props":1336,"children":1338},{"class":406,"line":1337},27,[1339],{"type":339,"tag":404,"props":1340,"children":1341},{"style":619},[1342],{"type":344,"value":805},{"type":339,"tag":404,"props":1344,"children":1346},{"class":406,"line":1345},28,[1347,1352],{"type":339,"tag":404,"props":1348,"children":1349},{"style":619},[1350],{"type":344,"value":1351},"}",{"type":339,"tag":404,"props":1353,"children":1354},{"style":691},[1355],{"type":344,"value":694},{"type":339,"tag":1357,"props":1358,"children":1359},"style",{},[1360],{"type":344,"value":1361},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":332,"searchDepth":592,"depth":592,"links":1363},[1364,1365],{"id":500,"depth":416,"text":500},{"id":505,"depth":416,"text":505,"children":1366},[1367],{"id":511,"depth":560,"text":511},"markdown","content:2.code:1.algorithm:3.leetcode:31.next-permutation.md","content","2.code/1.algorithm/3.leetcode/31.next-permutation.md","md",[1374,1376],{"_path":103,"title":102,"description":1375},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",{"_path":109,"title":108,"description":1377},"给你一个只包含 '(' 和 ')' 的字符串，找出最长有效（格式正确且连续）括号\n子串\n的长度。",1712330887046]