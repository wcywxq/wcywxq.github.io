[{"data":1,"prerenderedAt":1408},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/next-permutation":359,"/code/algorithm/leetcode/next-permutation-surround":1403},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,269,318],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263,266],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.165 比较版本号","/code/algorithm/leetcode/compare-version-numbers",{"title":198,"_path":199},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":201,"_path":202},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":204,"_path":205},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":207,"_path":208},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":210,"_path":211},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":213,"_path":214},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":216,"_path":217},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":219,"_path":220},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":222,"_path":223},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":225,"_path":226},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":228,"_path":229},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":231,"_path":232},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":234,"_path":235},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":237,"_path":238},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":240,"_path":241},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":243,"_path":244},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":246,"_path":247},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":249,"_path":250},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":252,"_path":253},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":255,"_path":256},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":258,"_path":259},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":261,"_path":262},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":264,"_path":265},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":267,"_path":268},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":270,"_path":271,"children":272},"源码实现","/code/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/code/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/code/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/code/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/code/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/code/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/code/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/code/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/code/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/code/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/code/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/code/source/string",[315],{"title":316,"_path":317},"repeat()","/code/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/code/scene",[322,344,347,350,353,356],{"title":323,"_path":324,"children":325},"Promise","/code/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/code/scene/calcuate-object-bytes",{"title":348,"_path":349},"lodash.get","/code/scene/lodash-get",{"title":351,"_path":352},"记忆化请求函数 - 可缓存请求函数","/code/scene/memorize-request",{"title":354,"_path":355},"sku 算法实现","/code/scene/sku",{"title":357,"_path":358},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":106,"_dir":360,"_draft":361,"_partial":361,"_locale":362,"title":105,"description":363,"url":364,"body":365,"_type":1398,"_id":1399,"_source":1400,"_file":1401,"_extension":1402},"leetcode",false,"","整数数组的一个 排列 就是将其所有成员以序列或线性顺序排列。","https://leetcode.cn/problems/next-permutation",{"type":366,"children":367,"toc":1392},"root",[368,375,385,390,408,413,418,423,453,458,481,486,509,514,527,533,538,544,1386],{"type":369,"tag":370,"props":371,"children":372},"element","p",{},[373],{"type":374,"value":363},"text",{"type":369,"tag":376,"props":377,"children":378},"ul",{},[379],{"type":369,"tag":380,"props":381,"children":382},"li",{},[383],{"type":374,"value":384},"例如，arr = [1,2,3] ，以下这些都可以视作 arr 的排列：[1,2,3]、[1,3,2]、[3,1,2]、[2,3,1] 。",{"type":369,"tag":370,"props":386,"children":387},{},[388],{"type":374,"value":389},"整数数组的 下一个排列 是指其整数的下一个字典序更大的排列。更正式地，如果数组的所有排列根据其字典顺序从小到大排列在一个容器中，那么数组的 下一个排列 就是在这个有序容器中排在它后面的那个排列。如果不存在下一个更大的排列，那么这个数组必须重排为字典序最小的排列（即，其元素按升序排列）。",{"type":369,"tag":376,"props":391,"children":392},{},[393,398,403],{"type":369,"tag":380,"props":394,"children":395},{},[396],{"type":374,"value":397},"例如，arr = [1,2,3] 的下一个排列是 [1,3,2] 。",{"type":369,"tag":380,"props":399,"children":400},{},[401],{"type":374,"value":402},"类似地，arr = [2,3,1] 的下一个排列是 [3,1,2] 。",{"type":369,"tag":380,"props":404,"children":405},{},[406],{"type":374,"value":407},"而 arr = [3,2,1] 的下一个排列是 [1,2,3] ，因为 [3,2,1] 不存在一个字典序更大的排列。",{"type":369,"tag":370,"props":409,"children":410},{},[411],{"type":374,"value":412},"给你一个整数数组 nums ，找出 nums 的下一个排列。",{"type":369,"tag":370,"props":414,"children":415},{},[416],{"type":374,"value":417},"必须 原地 修改，只允许使用额外常数空间。",{"type":369,"tag":370,"props":419,"children":420},{},[421],{"type":374,"value":422},"示例 1：",{"type":369,"tag":424,"props":425,"children":428},"pre",{"className":426,"code":427,"language":374,"meta":362,"style":362},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3]\n输出：[1,3,2]\n",[429],{"type":369,"tag":430,"props":431,"children":432},"code",{"__ignoreMap":362},[433,444],{"type":369,"tag":434,"props":435,"children":438},"span",{"class":436,"line":437},"line",1,[439],{"type":369,"tag":434,"props":440,"children":441},{},[442],{"type":374,"value":443},"输入：nums = [1,2,3]\n",{"type":369,"tag":434,"props":445,"children":447},{"class":436,"line":446},2,[448],{"type":369,"tag":434,"props":449,"children":450},{},[451],{"type":374,"value":452},"输出：[1,3,2]\n",{"type":369,"tag":370,"props":454,"children":455},{},[456],{"type":374,"value":457},"示例 2：",{"type":369,"tag":424,"props":459,"children":461},{"className":426,"code":460,"language":374,"meta":362,"style":362},"输入：nums = [3,2,1]\n输出：[1,2,3]\n",[462],{"type":369,"tag":430,"props":463,"children":464},{"__ignoreMap":362},[465,473],{"type":369,"tag":434,"props":466,"children":467},{"class":436,"line":437},[468],{"type":369,"tag":434,"props":469,"children":470},{},[471],{"type":374,"value":472},"输入：nums = [3,2,1]\n",{"type":369,"tag":434,"props":474,"children":475},{"class":436,"line":446},[476],{"type":369,"tag":434,"props":477,"children":478},{},[479],{"type":374,"value":480},"输出：[1,2,3]\n",{"type":369,"tag":370,"props":482,"children":483},{},[484],{"type":374,"value":485},"示例 3：",{"type":369,"tag":424,"props":487,"children":489},{"className":426,"code":488,"language":374,"meta":362,"style":362},"输入：nums = [1,1,5]\n输出：[1,5,1]\n",[490],{"type":369,"tag":430,"props":491,"children":492},{"__ignoreMap":362},[493,501],{"type":369,"tag":434,"props":494,"children":495},{"class":436,"line":437},[496],{"type":369,"tag":434,"props":497,"children":498},{},[499],{"type":374,"value":500},"输入：nums = [1,1,5]\n",{"type":369,"tag":434,"props":502,"children":503},{"class":436,"line":446},[504],{"type":369,"tag":434,"props":505,"children":506},{},[507],{"type":374,"value":508},"输出：[1,5,1]\n",{"type":369,"tag":370,"props":510,"children":511},{},[512],{"type":374,"value":513},"提示：",{"type":369,"tag":376,"props":515,"children":516},{},[517,522],{"type":369,"tag":380,"props":518,"children":519},{},[520],{"type":374,"value":521},"1 \u003C= nums.length \u003C= 100",{"type":369,"tag":380,"props":523,"children":524},{},[525],{"type":374,"value":526},"0 \u003C= nums[i] \u003C= 100",{"type":369,"tag":528,"props":529,"children":531},"h2",{"id":530},"解题思路",[532],{"type":374,"value":530},{"type":369,"tag":528,"props":534,"children":536},{"id":535},"实现",[537],{"type":374,"value":535},{"type":369,"tag":539,"props":540,"children":542},"h3",{"id":541},"双指针",[543],{"type":374,"value":541},{"type":369,"tag":424,"props":545,"children":549},{"className":546,"code":547,"language":548,"meta":362,"style":362},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar nextPermutation = function (nums) {\n  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n  let i = nums.length - 2;\n  while (i >= 0 && nums[i] >= nums[i + 1]) {\n    i--;\n  }\n  // i 在数组中存在，进行交换\n  if (i >= 0) {\n    let j = nums.length - 1;\n    while (j >= 0 && nums[i] >= nums[j]) {\n      j--;\n    }\n    // 交换\n    [nums[i], nums[j]] = [nums[j], nums[i]];\n  }\n  // i 不存在，说明是递减序列，则 i 是 -1\n  let l = i + 1;\n  let r = nums.length - 1;\n  while (l \u003C r) {\n    [nums[l], nums[r]] = [nums[r], nums[l]];\n    l++;\n    r--;\n  }\n};\n","js",[550],{"type":369,"tag":430,"props":551,"children":552},{"__ignoreMap":362},[553,562,588,611,620,664,673,725,809,827,836,845,874,916,982,999,1008,1017,1116,1124,1133,1166,1207,1237,1330,1348,1365,1373],{"type":369,"tag":434,"props":554,"children":555},{"class":436,"line":437},[556],{"type":369,"tag":434,"props":557,"children":559},{"style":558},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[560],{"type":374,"value":561},"/**\n",{"type":369,"tag":434,"props":563,"children":564},{"class":436,"line":446},[565,570,576,582],{"type":369,"tag":434,"props":566,"children":567},{"style":558},[568],{"type":374,"value":569}," * ",{"type":369,"tag":434,"props":571,"children":573},{"style":572},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[574],{"type":374,"value":575},"@param",{"type":369,"tag":434,"props":577,"children":579},{"style":578},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[580],{"type":374,"value":581}," {number[]}",{"type":369,"tag":434,"props":583,"children":585},{"style":584},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[586],{"type":374,"value":587}," nums\n",{"type":369,"tag":434,"props":589,"children":591},{"class":436,"line":590},3,[592,596,601,606],{"type":369,"tag":434,"props":593,"children":594},{"style":558},[595],{"type":374,"value":569},{"type":369,"tag":434,"props":597,"children":598},{"style":572},[599],{"type":374,"value":600},"@return",{"type":369,"tag":434,"props":602,"children":603},{"style":578},[604],{"type":374,"value":605}," {void}",{"type":369,"tag":434,"props":607,"children":608},{"style":558},[609],{"type":374,"value":610}," Do not return anything, modify nums in-place instead.\n",{"type":369,"tag":434,"props":612,"children":614},{"class":436,"line":613},4,[615],{"type":369,"tag":434,"props":616,"children":617},{"style":558},[618],{"type":374,"value":619}," */\n",{"type":369,"tag":434,"props":621,"children":623},{"class":436,"line":622},5,[624,630,636,642,647,653,659],{"type":369,"tag":434,"props":625,"children":627},{"style":626},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[628],{"type":374,"value":629},"var",{"type":369,"tag":434,"props":631,"children":633},{"style":632},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[634],{"type":374,"value":635}," nextPermutation",{"type":369,"tag":434,"props":637,"children":639},{"style":638},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[640],{"type":374,"value":641}," =",{"type":369,"tag":434,"props":643,"children":644},{"style":626},[645],{"type":374,"value":646}," function",{"type":369,"tag":434,"props":648,"children":650},{"style":649},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[651],{"type":374,"value":652}," (",{"type":369,"tag":434,"props":654,"children":656},{"style":655},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[657],{"type":374,"value":658},"nums",{"type":369,"tag":434,"props":660,"children":661},{"style":649},[662],{"type":374,"value":663},") {\n",{"type":369,"tag":434,"props":665,"children":667},{"class":436,"line":666},6,[668],{"type":369,"tag":434,"props":669,"children":670},{"style":558},[671],{"type":374,"value":672},"  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n",{"type":369,"tag":434,"props":674,"children":676},{"class":436,"line":675},7,[677,682,688,692,697,703,708,713,719],{"type":369,"tag":434,"props":678,"children":679},{"style":626},[680],{"type":374,"value":681},"  let",{"type":369,"tag":434,"props":683,"children":685},{"style":684},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[686],{"type":374,"value":687}," i",{"type":369,"tag":434,"props":689,"children":690},{"style":638},[691],{"type":374,"value":641},{"type":369,"tag":434,"props":693,"children":694},{"style":684},[695],{"type":374,"value":696}," nums",{"type":369,"tag":434,"props":698,"children":700},{"style":699},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[701],{"type":374,"value":702},".",{"type":369,"tag":434,"props":704,"children":705},{"style":649},[706],{"type":374,"value":707},"length ",{"type":369,"tag":434,"props":709,"children":710},{"style":638},[711],{"type":374,"value":712},"-",{"type":369,"tag":434,"props":714,"children":716},{"style":715},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[717],{"type":374,"value":718}," 2",{"type":369,"tag":434,"props":720,"children":722},{"style":721},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[723],{"type":374,"value":724},";\n",{"type":369,"tag":434,"props":726,"children":728},{"class":436,"line":727},8,[729,735,739,744,749,754,759,763,768,772,777,782,786,790,794,799,804],{"type":369,"tag":434,"props":730,"children":732},{"style":731},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[733],{"type":374,"value":734},"  while",{"type":369,"tag":434,"props":736,"children":737},{"style":649},[738],{"type":374,"value":652},{"type":369,"tag":434,"props":740,"children":741},{"style":684},[742],{"type":374,"value":743},"i",{"type":369,"tag":434,"props":745,"children":746},{"style":638},[747],{"type":374,"value":748}," >=",{"type":369,"tag":434,"props":750,"children":751},{"style":715},[752],{"type":374,"value":753}," 0",{"type":369,"tag":434,"props":755,"children":756},{"style":638},[757],{"type":374,"value":758}," &&",{"type":369,"tag":434,"props":760,"children":761},{"style":684},[762],{"type":374,"value":696},{"type":369,"tag":434,"props":764,"children":765},{"style":649},[766],{"type":374,"value":767},"[",{"type":369,"tag":434,"props":769,"children":770},{"style":684},[771],{"type":374,"value":743},{"type":369,"tag":434,"props":773,"children":774},{"style":649},[775],{"type":374,"value":776},"] ",{"type":369,"tag":434,"props":778,"children":779},{"style":638},[780],{"type":374,"value":781},">=",{"type":369,"tag":434,"props":783,"children":784},{"style":684},[785],{"type":374,"value":696},{"type":369,"tag":434,"props":787,"children":788},{"style":649},[789],{"type":374,"value":767},{"type":369,"tag":434,"props":791,"children":792},{"style":684},[793],{"type":374,"value":743},{"type":369,"tag":434,"props":795,"children":796},{"style":638},[797],{"type":374,"value":798}," +",{"type":369,"tag":434,"props":800,"children":801},{"style":715},[802],{"type":374,"value":803}," 1",{"type":369,"tag":434,"props":805,"children":806},{"style":649},[807],{"type":374,"value":808},"]) {\n",{"type":369,"tag":434,"props":810,"children":812},{"class":436,"line":811},9,[813,818,823],{"type":369,"tag":434,"props":814,"children":815},{"style":684},[816],{"type":374,"value":817},"    i",{"type":369,"tag":434,"props":819,"children":820},{"style":638},[821],{"type":374,"value":822},"--",{"type":369,"tag":434,"props":824,"children":825},{"style":721},[826],{"type":374,"value":724},{"type":369,"tag":434,"props":828,"children":830},{"class":436,"line":829},10,[831],{"type":369,"tag":434,"props":832,"children":833},{"style":649},[834],{"type":374,"value":835},"  }\n",{"type":369,"tag":434,"props":837,"children":839},{"class":436,"line":838},11,[840],{"type":369,"tag":434,"props":841,"children":842},{"style":558},[843],{"type":374,"value":844},"  // i 在数组中存在，进行交换\n",{"type":369,"tag":434,"props":846,"children":848},{"class":436,"line":847},12,[849,854,858,862,866,870],{"type":369,"tag":434,"props":850,"children":851},{"style":731},[852],{"type":374,"value":853},"  if",{"type":369,"tag":434,"props":855,"children":856},{"style":649},[857],{"type":374,"value":652},{"type":369,"tag":434,"props":859,"children":860},{"style":684},[861],{"type":374,"value":743},{"type":369,"tag":434,"props":863,"children":864},{"style":638},[865],{"type":374,"value":748},{"type":369,"tag":434,"props":867,"children":868},{"style":715},[869],{"type":374,"value":753},{"type":369,"tag":434,"props":871,"children":872},{"style":649},[873],{"type":374,"value":663},{"type":369,"tag":434,"props":875,"children":877},{"class":436,"line":876},13,[878,883,888,892,896,900,904,908,912],{"type":369,"tag":434,"props":879,"children":880},{"style":626},[881],{"type":374,"value":882},"    let",{"type":369,"tag":434,"props":884,"children":885},{"style":684},[886],{"type":374,"value":887}," j",{"type":369,"tag":434,"props":889,"children":890},{"style":638},[891],{"type":374,"value":641},{"type":369,"tag":434,"props":893,"children":894},{"style":684},[895],{"type":374,"value":696},{"type":369,"tag":434,"props":897,"children":898},{"style":699},[899],{"type":374,"value":702},{"type":369,"tag":434,"props":901,"children":902},{"style":649},[903],{"type":374,"value":707},{"type":369,"tag":434,"props":905,"children":906},{"style":638},[907],{"type":374,"value":712},{"type":369,"tag":434,"props":909,"children":910},{"style":715},[911],{"type":374,"value":803},{"type":369,"tag":434,"props":913,"children":914},{"style":721},[915],{"type":374,"value":724},{"type":369,"tag":434,"props":917,"children":919},{"class":436,"line":918},14,[920,925,929,934,938,942,946,950,954,958,962,966,970,974,978],{"type":369,"tag":434,"props":921,"children":922},{"style":731},[923],{"type":374,"value":924},"    while",{"type":369,"tag":434,"props":926,"children":927},{"style":649},[928],{"type":374,"value":652},{"type":369,"tag":434,"props":930,"children":931},{"style":684},[932],{"type":374,"value":933},"j",{"type":369,"tag":434,"props":935,"children":936},{"style":638},[937],{"type":374,"value":748},{"type":369,"tag":434,"props":939,"children":940},{"style":715},[941],{"type":374,"value":753},{"type":369,"tag":434,"props":943,"children":944},{"style":638},[945],{"type":374,"value":758},{"type":369,"tag":434,"props":947,"children":948},{"style":684},[949],{"type":374,"value":696},{"type":369,"tag":434,"props":951,"children":952},{"style":649},[953],{"type":374,"value":767},{"type":369,"tag":434,"props":955,"children":956},{"style":684},[957],{"type":374,"value":743},{"type":369,"tag":434,"props":959,"children":960},{"style":649},[961],{"type":374,"value":776},{"type":369,"tag":434,"props":963,"children":964},{"style":638},[965],{"type":374,"value":781},{"type":369,"tag":434,"props":967,"children":968},{"style":684},[969],{"type":374,"value":696},{"type":369,"tag":434,"props":971,"children":972},{"style":649},[973],{"type":374,"value":767},{"type":369,"tag":434,"props":975,"children":976},{"style":684},[977],{"type":374,"value":933},{"type":369,"tag":434,"props":979,"children":980},{"style":649},[981],{"type":374,"value":808},{"type":369,"tag":434,"props":983,"children":985},{"class":436,"line":984},15,[986,991,995],{"type":369,"tag":434,"props":987,"children":988},{"style":684},[989],{"type":374,"value":990},"      j",{"type":369,"tag":434,"props":992,"children":993},{"style":638},[994],{"type":374,"value":822},{"type":369,"tag":434,"props":996,"children":997},{"style":721},[998],{"type":374,"value":724},{"type":369,"tag":434,"props":1000,"children":1002},{"class":436,"line":1001},16,[1003],{"type":369,"tag":434,"props":1004,"children":1005},{"style":649},[1006],{"type":374,"value":1007},"    }\n",{"type":369,"tag":434,"props":1009,"children":1011},{"class":436,"line":1010},17,[1012],{"type":369,"tag":434,"props":1013,"children":1014},{"style":558},[1015],{"type":374,"value":1016},"    // 交换\n",{"type":369,"tag":434,"props":1018,"children":1020},{"class":436,"line":1019},18,[1021,1026,1030,1034,1038,1043,1048,1052,1056,1060,1065,1070,1075,1079,1083,1087,1091,1095,1099,1103,1107,1112],{"type":369,"tag":434,"props":1022,"children":1023},{"style":649},[1024],{"type":374,"value":1025},"    [",{"type":369,"tag":434,"props":1027,"children":1028},{"style":684},[1029],{"type":374,"value":658},{"type":369,"tag":434,"props":1031,"children":1032},{"style":649},[1033],{"type":374,"value":767},{"type":369,"tag":434,"props":1035,"children":1036},{"style":684},[1037],{"type":374,"value":743},{"type":369,"tag":434,"props":1039,"children":1040},{"style":649},[1041],{"type":374,"value":1042},"]",{"type":369,"tag":434,"props":1044,"children":1045},{"style":721},[1046],{"type":374,"value":1047},",",{"type":369,"tag":434,"props":1049,"children":1050},{"style":684},[1051],{"type":374,"value":696},{"type":369,"tag":434,"props":1053,"children":1054},{"style":649},[1055],{"type":374,"value":767},{"type":369,"tag":434,"props":1057,"children":1058},{"style":684},[1059],{"type":374,"value":933},{"type":369,"tag":434,"props":1061,"children":1062},{"style":649},[1063],{"type":374,"value":1064},"]] ",{"type":369,"tag":434,"props":1066,"children":1067},{"style":638},[1068],{"type":374,"value":1069},"=",{"type":369,"tag":434,"props":1071,"children":1072},{"style":649},[1073],{"type":374,"value":1074}," [",{"type":369,"tag":434,"props":1076,"children":1077},{"style":684},[1078],{"type":374,"value":658},{"type":369,"tag":434,"props":1080,"children":1081},{"style":649},[1082],{"type":374,"value":767},{"type":369,"tag":434,"props":1084,"children":1085},{"style":684},[1086],{"type":374,"value":933},{"type":369,"tag":434,"props":1088,"children":1089},{"style":649},[1090],{"type":374,"value":1042},{"type":369,"tag":434,"props":1092,"children":1093},{"style":721},[1094],{"type":374,"value":1047},{"type":369,"tag":434,"props":1096,"children":1097},{"style":684},[1098],{"type":374,"value":696},{"type":369,"tag":434,"props":1100,"children":1101},{"style":649},[1102],{"type":374,"value":767},{"type":369,"tag":434,"props":1104,"children":1105},{"style":684},[1106],{"type":374,"value":743},{"type":369,"tag":434,"props":1108,"children":1109},{"style":649},[1110],{"type":374,"value":1111},"]]",{"type":369,"tag":434,"props":1113,"children":1114},{"style":721},[1115],{"type":374,"value":724},{"type":369,"tag":434,"props":1117,"children":1119},{"class":436,"line":1118},19,[1120],{"type":369,"tag":434,"props":1121,"children":1122},{"style":649},[1123],{"type":374,"value":835},{"type":369,"tag":434,"props":1125,"children":1127},{"class":436,"line":1126},20,[1128],{"type":369,"tag":434,"props":1129,"children":1130},{"style":558},[1131],{"type":374,"value":1132},"  // i 不存在，说明是递减序列，则 i 是 -1\n",{"type":369,"tag":434,"props":1134,"children":1136},{"class":436,"line":1135},21,[1137,1141,1146,1150,1154,1158,1162],{"type":369,"tag":434,"props":1138,"children":1139},{"style":626},[1140],{"type":374,"value":681},{"type":369,"tag":434,"props":1142,"children":1143},{"style":684},[1144],{"type":374,"value":1145}," l",{"type":369,"tag":434,"props":1147,"children":1148},{"style":638},[1149],{"type":374,"value":641},{"type":369,"tag":434,"props":1151,"children":1152},{"style":684},[1153],{"type":374,"value":687},{"type":369,"tag":434,"props":1155,"children":1156},{"style":638},[1157],{"type":374,"value":798},{"type":369,"tag":434,"props":1159,"children":1160},{"style":715},[1161],{"type":374,"value":803},{"type":369,"tag":434,"props":1163,"children":1164},{"style":721},[1165],{"type":374,"value":724},{"type":369,"tag":434,"props":1167,"children":1169},{"class":436,"line":1168},22,[1170,1174,1179,1183,1187,1191,1195,1199,1203],{"type":369,"tag":434,"props":1171,"children":1172},{"style":626},[1173],{"type":374,"value":681},{"type":369,"tag":434,"props":1175,"children":1176},{"style":684},[1177],{"type":374,"value":1178}," r",{"type":369,"tag":434,"props":1180,"children":1181},{"style":638},[1182],{"type":374,"value":641},{"type":369,"tag":434,"props":1184,"children":1185},{"style":684},[1186],{"type":374,"value":696},{"type":369,"tag":434,"props":1188,"children":1189},{"style":699},[1190],{"type":374,"value":702},{"type":369,"tag":434,"props":1192,"children":1193},{"style":649},[1194],{"type":374,"value":707},{"type":369,"tag":434,"props":1196,"children":1197},{"style":638},[1198],{"type":374,"value":712},{"type":369,"tag":434,"props":1200,"children":1201},{"style":715},[1202],{"type":374,"value":803},{"type":369,"tag":434,"props":1204,"children":1205},{"style":721},[1206],{"type":374,"value":724},{"type":369,"tag":434,"props":1208,"children":1210},{"class":436,"line":1209},23,[1211,1215,1219,1224,1229,1233],{"type":369,"tag":434,"props":1212,"children":1213},{"style":731},[1214],{"type":374,"value":734},{"type":369,"tag":434,"props":1216,"children":1217},{"style":649},[1218],{"type":374,"value":652},{"type":369,"tag":434,"props":1220,"children":1221},{"style":684},[1222],{"type":374,"value":1223},"l",{"type":369,"tag":434,"props":1225,"children":1226},{"style":638},[1227],{"type":374,"value":1228}," \u003C",{"type":369,"tag":434,"props":1230,"children":1231},{"style":684},[1232],{"type":374,"value":1178},{"type":369,"tag":434,"props":1234,"children":1235},{"style":649},[1236],{"type":374,"value":663},{"type":369,"tag":434,"props":1238,"children":1240},{"class":436,"line":1239},24,[1241,1245,1249,1253,1257,1261,1265,1269,1273,1278,1282,1286,1290,1294,1298,1302,1306,1310,1314,1318,1322,1326],{"type":369,"tag":434,"props":1242,"children":1243},{"style":649},[1244],{"type":374,"value":1025},{"type":369,"tag":434,"props":1246,"children":1247},{"style":684},[1248],{"type":374,"value":658},{"type":369,"tag":434,"props":1250,"children":1251},{"style":649},[1252],{"type":374,"value":767},{"type":369,"tag":434,"props":1254,"children":1255},{"style":684},[1256],{"type":374,"value":1223},{"type":369,"tag":434,"props":1258,"children":1259},{"style":649},[1260],{"type":374,"value":1042},{"type":369,"tag":434,"props":1262,"children":1263},{"style":721},[1264],{"type":374,"value":1047},{"type":369,"tag":434,"props":1266,"children":1267},{"style":684},[1268],{"type":374,"value":696},{"type":369,"tag":434,"props":1270,"children":1271},{"style":649},[1272],{"type":374,"value":767},{"type":369,"tag":434,"props":1274,"children":1275},{"style":684},[1276],{"type":374,"value":1277},"r",{"type":369,"tag":434,"props":1279,"children":1280},{"style":649},[1281],{"type":374,"value":1064},{"type":369,"tag":434,"props":1283,"children":1284},{"style":638},[1285],{"type":374,"value":1069},{"type":369,"tag":434,"props":1287,"children":1288},{"style":649},[1289],{"type":374,"value":1074},{"type":369,"tag":434,"props":1291,"children":1292},{"style":684},[1293],{"type":374,"value":658},{"type":369,"tag":434,"props":1295,"children":1296},{"style":649},[1297],{"type":374,"value":767},{"type":369,"tag":434,"props":1299,"children":1300},{"style":684},[1301],{"type":374,"value":1277},{"type":369,"tag":434,"props":1303,"children":1304},{"style":649},[1305],{"type":374,"value":1042},{"type":369,"tag":434,"props":1307,"children":1308},{"style":721},[1309],{"type":374,"value":1047},{"type":369,"tag":434,"props":1311,"children":1312},{"style":684},[1313],{"type":374,"value":696},{"type":369,"tag":434,"props":1315,"children":1316},{"style":649},[1317],{"type":374,"value":767},{"type":369,"tag":434,"props":1319,"children":1320},{"style":684},[1321],{"type":374,"value":1223},{"type":369,"tag":434,"props":1323,"children":1324},{"style":649},[1325],{"type":374,"value":1111},{"type":369,"tag":434,"props":1327,"children":1328},{"style":721},[1329],{"type":374,"value":724},{"type":369,"tag":434,"props":1331,"children":1333},{"class":436,"line":1332},25,[1334,1339,1344],{"type":369,"tag":434,"props":1335,"children":1336},{"style":684},[1337],{"type":374,"value":1338},"    l",{"type":369,"tag":434,"props":1340,"children":1341},{"style":638},[1342],{"type":374,"value":1343},"++",{"type":369,"tag":434,"props":1345,"children":1346},{"style":721},[1347],{"type":374,"value":724},{"type":369,"tag":434,"props":1349,"children":1351},{"class":436,"line":1350},26,[1352,1357,1361],{"type":369,"tag":434,"props":1353,"children":1354},{"style":684},[1355],{"type":374,"value":1356},"    r",{"type":369,"tag":434,"props":1358,"children":1359},{"style":638},[1360],{"type":374,"value":822},{"type":369,"tag":434,"props":1362,"children":1363},{"style":721},[1364],{"type":374,"value":724},{"type":369,"tag":434,"props":1366,"children":1368},{"class":436,"line":1367},27,[1369],{"type":369,"tag":434,"props":1370,"children":1371},{"style":649},[1372],{"type":374,"value":835},{"type":369,"tag":434,"props":1374,"children":1376},{"class":436,"line":1375},28,[1377,1382],{"type":369,"tag":434,"props":1378,"children":1379},{"style":649},[1380],{"type":374,"value":1381},"}",{"type":369,"tag":434,"props":1383,"children":1384},{"style":721},[1385],{"type":374,"value":724},{"type":369,"tag":1387,"props":1388,"children":1389},"style",{},[1390],{"type":374,"value":1391},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":362,"searchDepth":622,"depth":622,"links":1393},[1394,1395],{"id":530,"depth":446,"text":530},{"id":535,"depth":446,"text":535,"children":1396},[1397],{"id":541,"depth":590,"text":541},"markdown","content:2.code:1.algorithm:3.leetcode:31.next-permutation.md","content","2.code/1.algorithm/3.leetcode/31.next-permutation.md","md",[1404,1406],{"_path":103,"title":102,"description":1405},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",{"_path":109,"title":108,"description":1407},"给你一个只包含 '(' 和 ')' 的字符串，找出最长有效（格式正确且连续）括号\n子串\n的长度。",1712748636011]