[{"data":1,"prerenderedAt":1121},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array":353,"/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array-surround":1116},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319,341,344,347,350],{"title":320,"_path":321,"children":322},"Promise","/code/scene/promise",[323,326,329,332,335,338],{"title":324,"_path":325},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":327,"_path":328},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":330,"_path":331},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":333,"_path":334},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":336,"_path":337},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":339,"_path":340},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":342,"_path":343},"计算对象占用字节数","/code/scene/calcuate-object-bytes",{"title":345,"_path":346},"lodash.get","/code/scene/lodash-get",{"title":348,"_path":349},"sku 算法实现","/code/scene/sku",{"title":351,"_path":352},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":184,"_dir":354,"_draft":355,"_partial":355,"_locale":356,"title":183,"description":357,"url":358,"body":359,"_type":1111,"_id":1112,"_source":1113,"_file":1114,"_extension":1115},"leetcode",false,"","已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：","https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array",{"type":360,"children":361,"toc":1107},"root",[362,369,384,389,394,399,438,443,474,479,510,515,543,549,567,572,1101],{"type":363,"tag":364,"props":365,"children":366},"element","p",{},[367],{"type":368,"value":357},"text",{"type":363,"tag":370,"props":371,"children":372},"ul",{},[373,379],{"type":363,"tag":374,"props":375,"children":376},"li",{},[377],{"type":368,"value":378},"若旋转 4 次，则可以得到 [4,5,6,7,0,1,2]",{"type":363,"tag":374,"props":380,"children":381},{},[382],{"type":368,"value":383},"若旋转 7 次，则可以得到 [0,1,2,4,5,6,7]\n注意，数组 [a[0], a[1], a[2], ..., a[n-1]] 旋转一次 的结果为数组 [a[n-1], a[0], a[1], a[2], ..., a[n-2]] 。",{"type":363,"tag":364,"props":385,"children":386},{},[387],{"type":368,"value":388},"给你一个元素值 互不相同 的数组 nums ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 最小元素 。",{"type":363,"tag":364,"props":390,"children":391},{},[392],{"type":368,"value":393},"你必须设计一个时间复杂度为 O(log n) 的算法解决此问题。",{"type":363,"tag":364,"props":395,"children":396},{},[397],{"type":368,"value":398},"示例 1：",{"type":363,"tag":400,"props":401,"children":404},"pre",{"className":402,"code":403,"language":368,"meta":356,"style":356},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [3,4,5,1,2]\n输出：1\n解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",[405],{"type":363,"tag":406,"props":407,"children":408},"code",{"__ignoreMap":356},[409,420,429],{"type":363,"tag":410,"props":411,"children":414},"span",{"class":412,"line":413},"line",1,[415],{"type":363,"tag":410,"props":416,"children":417},{},[418],{"type":368,"value":419},"输入：nums = [3,4,5,1,2]\n",{"type":363,"tag":410,"props":421,"children":423},{"class":412,"line":422},2,[424],{"type":363,"tag":410,"props":425,"children":426},{},[427],{"type":368,"value":428},"输出：1\n",{"type":363,"tag":410,"props":430,"children":432},{"class":412,"line":431},3,[433],{"type":363,"tag":410,"props":434,"children":435},{},[436],{"type":368,"value":437},"解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",{"type":363,"tag":364,"props":439,"children":440},{},[441],{"type":368,"value":442},"示例 2：",{"type":363,"tag":400,"props":444,"children":446},{"className":402,"code":445,"language":368,"meta":356,"style":356},"输入：nums = [4,5,6,7,0,1,2]\n输出：0\n解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",[447],{"type":363,"tag":406,"props":448,"children":449},{"__ignoreMap":356},[450,458,466],{"type":363,"tag":410,"props":451,"children":452},{"class":412,"line":413},[453],{"type":363,"tag":410,"props":454,"children":455},{},[456],{"type":368,"value":457},"输入：nums = [4,5,6,7,0,1,2]\n",{"type":363,"tag":410,"props":459,"children":460},{"class":412,"line":422},[461],{"type":363,"tag":410,"props":462,"children":463},{},[464],{"type":368,"value":465},"输出：0\n",{"type":363,"tag":410,"props":467,"children":468},{"class":412,"line":431},[469],{"type":363,"tag":410,"props":470,"children":471},{},[472],{"type":368,"value":473},"解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",{"type":363,"tag":364,"props":475,"children":476},{},[477],{"type":368,"value":478},"示例 3：",{"type":363,"tag":400,"props":480,"children":482},{"className":402,"code":481,"language":368,"meta":356,"style":356},"输入：nums = [11,13,15,17]\n输出：11\n解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",[483],{"type":363,"tag":406,"props":484,"children":485},{"__ignoreMap":356},[486,494,502],{"type":363,"tag":410,"props":487,"children":488},{"class":412,"line":413},[489],{"type":363,"tag":410,"props":490,"children":491},{},[492],{"type":368,"value":493},"输入：nums = [11,13,15,17]\n",{"type":363,"tag":410,"props":495,"children":496},{"class":412,"line":422},[497],{"type":363,"tag":410,"props":498,"children":499},{},[500],{"type":368,"value":501},"输出：11\n",{"type":363,"tag":410,"props":503,"children":504},{"class":412,"line":431},[505],{"type":363,"tag":410,"props":506,"children":507},{},[508],{"type":368,"value":509},"解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",{"type":363,"tag":364,"props":511,"children":512},{},[513],{"type":368,"value":514},"提示：",{"type":363,"tag":370,"props":516,"children":517},{},[518,523,528,533,538],{"type":363,"tag":374,"props":519,"children":520},{},[521],{"type":368,"value":522},"n == nums.length",{"type":363,"tag":374,"props":524,"children":525},{},[526],{"type":368,"value":527},"1 \u003C= n \u003C= 5000",{"type":363,"tag":374,"props":529,"children":530},{},[531],{"type":368,"value":532},"-5000 \u003C= nums[i] \u003C= 5000",{"type":363,"tag":374,"props":534,"children":535},{},[536],{"type":368,"value":537},"nums 中的所有整数 互不相同",{"type":363,"tag":374,"props":539,"children":540},{},[541],{"type":368,"value":542},"nums 原来是一个升序排序的数组，并进行了 1 至 n 次旋转",{"type":363,"tag":544,"props":545,"children":547},"h2",{"id":546},"解题思路",[548],{"type":368,"value":546},{"type":363,"tag":370,"props":550,"children":551},{},[552,557,562],{"type":363,"tag":374,"props":553,"children":554},{},[555],{"type":368,"value":556},"经过分析，红色即最小值左侧，蓝色即最小值及其右侧",{"type":363,"tag":374,"props":558,"children":559},{},[560],{"type":368,"value":561},"n - 1 一定是蓝色",{"type":363,"tag":374,"props":563,"children":564},{},[565],{"type":368,"value":566},"总结：小于最后一个数，就是蓝色，否则就是红色",{"type":363,"tag":544,"props":568,"children":570},{"id":569},"实现",[571],{"type":368,"value":569},{"type":363,"tag":400,"props":573,"children":577},{"className":574,"code":575,"language":576,"meta":356,"style":356},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMin = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let len = nums.length;\n  let l = -1;\n  let r = len - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] \u003C nums[len - 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return nums[r];\n};\n","js",[578],{"type":363,"tag":406,"props":579,"children":580},{"__ignoreMap":356},[581,590,616,633,642,686,695,704,745,777,811,852,904,967,994,1013,1039,1048,1057,1088],{"type":363,"tag":410,"props":582,"children":583},{"class":412,"line":413},[584],{"type":363,"tag":410,"props":585,"children":587},{"style":586},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[588],{"type":368,"value":589},"/**\n",{"type":363,"tag":410,"props":591,"children":592},{"class":412,"line":422},[593,598,604,610],{"type":363,"tag":410,"props":594,"children":595},{"style":586},[596],{"type":368,"value":597}," * ",{"type":363,"tag":410,"props":599,"children":601},{"style":600},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[602],{"type":368,"value":603},"@param",{"type":363,"tag":410,"props":605,"children":607},{"style":606},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[608],{"type":368,"value":609}," {number[]}",{"type":363,"tag":410,"props":611,"children":613},{"style":612},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[614],{"type":368,"value":615}," nums\n",{"type":363,"tag":410,"props":617,"children":618},{"class":412,"line":431},[619,623,628],{"type":363,"tag":410,"props":620,"children":621},{"style":586},[622],{"type":368,"value":597},{"type":363,"tag":410,"props":624,"children":625},{"style":600},[626],{"type":368,"value":627},"@return",{"type":363,"tag":410,"props":629,"children":630},{"style":606},[631],{"type":368,"value":632}," {number}\n",{"type":363,"tag":410,"props":634,"children":636},{"class":412,"line":635},4,[637],{"type":363,"tag":410,"props":638,"children":639},{"style":586},[640],{"type":368,"value":641}," */\n",{"type":363,"tag":410,"props":643,"children":645},{"class":412,"line":644},5,[646,652,658,664,669,675,681],{"type":363,"tag":410,"props":647,"children":649},{"style":648},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[650],{"type":368,"value":651},"var",{"type":363,"tag":410,"props":653,"children":655},{"style":654},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[656],{"type":368,"value":657}," findMin",{"type":363,"tag":410,"props":659,"children":661},{"style":660},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[662],{"type":368,"value":663}," =",{"type":363,"tag":410,"props":665,"children":666},{"style":648},[667],{"type":368,"value":668}," function",{"type":363,"tag":410,"props":670,"children":672},{"style":671},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[673],{"type":368,"value":674}," (",{"type":363,"tag":410,"props":676,"children":678},{"style":677},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[679],{"type":368,"value":680},"nums",{"type":363,"tag":410,"props":682,"children":683},{"style":671},[684],{"type":368,"value":685},") {\n",{"type":363,"tag":410,"props":687,"children":689},{"class":412,"line":688},6,[690],{"type":363,"tag":410,"props":691,"children":692},{"style":586},[693],{"type":368,"value":694},"  // [0, n - 2]\n",{"type":363,"tag":410,"props":696,"children":698},{"class":412,"line":697},7,[699],{"type":363,"tag":410,"props":700,"children":701},{"style":586},[702],{"type":368,"value":703},"  // (-1, n - 1) 开区间写法\n",{"type":363,"tag":410,"props":705,"children":707},{"class":412,"line":706},8,[708,713,719,723,728,734,739],{"type":363,"tag":410,"props":709,"children":710},{"style":648},[711],{"type":368,"value":712},"  let",{"type":363,"tag":410,"props":714,"children":716},{"style":715},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[717],{"type":368,"value":718}," len",{"type":363,"tag":410,"props":720,"children":721},{"style":660},[722],{"type":368,"value":663},{"type":363,"tag":410,"props":724,"children":725},{"style":715},[726],{"type":368,"value":727}," nums",{"type":363,"tag":410,"props":729,"children":731},{"style":730},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[732],{"type":368,"value":733},".",{"type":363,"tag":410,"props":735,"children":736},{"style":671},[737],{"type":368,"value":738},"length",{"type":363,"tag":410,"props":740,"children":742},{"style":741},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[743],{"type":368,"value":744},";\n",{"type":363,"tag":410,"props":746,"children":748},{"class":412,"line":747},9,[749,753,758,762,767,773],{"type":363,"tag":410,"props":750,"children":751},{"style":648},[752],{"type":368,"value":712},{"type":363,"tag":410,"props":754,"children":755},{"style":715},[756],{"type":368,"value":757}," l",{"type":363,"tag":410,"props":759,"children":760},{"style":660},[761],{"type":368,"value":663},{"type":363,"tag":410,"props":763,"children":764},{"style":660},[765],{"type":368,"value":766}," -",{"type":363,"tag":410,"props":768,"children":770},{"style":769},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[771],{"type":368,"value":772},"1",{"type":363,"tag":410,"props":774,"children":775},{"style":741},[776],{"type":368,"value":744},{"type":363,"tag":410,"props":778,"children":780},{"class":412,"line":779},10,[781,785,790,794,798,802,807],{"type":363,"tag":410,"props":782,"children":783},{"style":648},[784],{"type":368,"value":712},{"type":363,"tag":410,"props":786,"children":787},{"style":715},[788],{"type":368,"value":789}," r",{"type":363,"tag":410,"props":791,"children":792},{"style":660},[793],{"type":368,"value":663},{"type":363,"tag":410,"props":795,"children":796},{"style":715},[797],{"type":368,"value":718},{"type":363,"tag":410,"props":799,"children":800},{"style":660},[801],{"type":368,"value":766},{"type":363,"tag":410,"props":803,"children":804},{"style":769},[805],{"type":368,"value":806}," 1",{"type":363,"tag":410,"props":808,"children":809},{"style":741},[810],{"type":368,"value":744},{"type":363,"tag":410,"props":812,"children":814},{"class":412,"line":813},11,[815,821,825,830,835,839,844,848],{"type":363,"tag":410,"props":816,"children":818},{"style":817},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[819],{"type":368,"value":820},"  while",{"type":363,"tag":410,"props":822,"children":823},{"style":671},[824],{"type":368,"value":674},{"type":363,"tag":410,"props":826,"children":827},{"style":715},[828],{"type":368,"value":829},"l",{"type":363,"tag":410,"props":831,"children":832},{"style":660},[833],{"type":368,"value":834}," +",{"type":363,"tag":410,"props":836,"children":837},{"style":769},[838],{"type":368,"value":806},{"type":363,"tag":410,"props":840,"children":841},{"style":660},[842],{"type":368,"value":843}," \u003C",{"type":363,"tag":410,"props":845,"children":846},{"style":715},[847],{"type":368,"value":789},{"type":363,"tag":410,"props":849,"children":850},{"style":671},[851],{"type":368,"value":685},{"type":363,"tag":410,"props":853,"children":855},{"class":412,"line":854},12,[856,861,866,870,874,878,882,886,891,896,900],{"type":363,"tag":410,"props":857,"children":858},{"style":648},[859],{"type":368,"value":860},"    let",{"type":363,"tag":410,"props":862,"children":863},{"style":715},[864],{"type":368,"value":865}," mid",{"type":363,"tag":410,"props":867,"children":868},{"style":660},[869],{"type":368,"value":663},{"type":363,"tag":410,"props":871,"children":872},{"style":671},[873],{"type":368,"value":674},{"type":363,"tag":410,"props":875,"children":876},{"style":715},[877],{"type":368,"value":829},{"type":363,"tag":410,"props":879,"children":880},{"style":660},[881],{"type":368,"value":834},{"type":363,"tag":410,"props":883,"children":884},{"style":715},[885],{"type":368,"value":789},{"type":363,"tag":410,"props":887,"children":888},{"style":671},[889],{"type":368,"value":890},") ",{"type":363,"tag":410,"props":892,"children":893},{"style":660},[894],{"type":368,"value":895},">>",{"type":363,"tag":410,"props":897,"children":898},{"style":769},[899],{"type":368,"value":806},{"type":363,"tag":410,"props":901,"children":902},{"style":741},[903],{"type":368,"value":744},{"type":363,"tag":410,"props":905,"children":907},{"class":412,"line":906},13,[908,913,917,921,926,931,936,941,945,949,954,958,962],{"type":363,"tag":410,"props":909,"children":910},{"style":817},[911],{"type":368,"value":912},"    if",{"type":363,"tag":410,"props":914,"children":915},{"style":671},[916],{"type":368,"value":674},{"type":363,"tag":410,"props":918,"children":919},{"style":715},[920],{"type":368,"value":680},{"type":363,"tag":410,"props":922,"children":923},{"style":671},[924],{"type":368,"value":925},"[",{"type":363,"tag":410,"props":927,"children":928},{"style":715},[929],{"type":368,"value":930},"mid",{"type":363,"tag":410,"props":932,"children":933},{"style":671},[934],{"type":368,"value":935},"] ",{"type":363,"tag":410,"props":937,"children":938},{"style":660},[939],{"type":368,"value":940},"\u003C",{"type":363,"tag":410,"props":942,"children":943},{"style":715},[944],{"type":368,"value":727},{"type":363,"tag":410,"props":946,"children":947},{"style":671},[948],{"type":368,"value":925},{"type":363,"tag":410,"props":950,"children":951},{"style":715},[952],{"type":368,"value":953},"len",{"type":363,"tag":410,"props":955,"children":956},{"style":660},[957],{"type":368,"value":766},{"type":363,"tag":410,"props":959,"children":960},{"style":769},[961],{"type":368,"value":806},{"type":363,"tag":410,"props":963,"children":964},{"style":671},[965],{"type":368,"value":966},"]) {\n",{"type":363,"tag":410,"props":968,"children":970},{"class":412,"line":969},14,[971,976,980,984,989],{"type":363,"tag":410,"props":972,"children":973},{"style":715},[974],{"type":368,"value":975},"      r",{"type":363,"tag":410,"props":977,"children":978},{"style":660},[979],{"type":368,"value":663},{"type":363,"tag":410,"props":981,"children":982},{"style":715},[983],{"type":368,"value":865},{"type":363,"tag":410,"props":985,"children":986},{"style":741},[987],{"type":368,"value":988},";",{"type":363,"tag":410,"props":990,"children":991},{"style":586},[992],{"type":368,"value":993}," // 染蓝色\n",{"type":363,"tag":410,"props":995,"children":997},{"class":412,"line":996},15,[998,1003,1008],{"type":363,"tag":410,"props":999,"children":1000},{"style":671},[1001],{"type":368,"value":1002},"    } ",{"type":363,"tag":410,"props":1004,"children":1005},{"style":817},[1006],{"type":368,"value":1007},"else",{"type":363,"tag":410,"props":1009,"children":1010},{"style":671},[1011],{"type":368,"value":1012}," {\n",{"type":363,"tag":410,"props":1014,"children":1016},{"class":412,"line":1015},16,[1017,1022,1026,1030,1034],{"type":363,"tag":410,"props":1018,"children":1019},{"style":715},[1020],{"type":368,"value":1021},"      l",{"type":363,"tag":410,"props":1023,"children":1024},{"style":660},[1025],{"type":368,"value":663},{"type":363,"tag":410,"props":1027,"children":1028},{"style":715},[1029],{"type":368,"value":865},{"type":363,"tag":410,"props":1031,"children":1032},{"style":741},[1033],{"type":368,"value":988},{"type":363,"tag":410,"props":1035,"children":1036},{"style":586},[1037],{"type":368,"value":1038}," // 染红色\n",{"type":363,"tag":410,"props":1040,"children":1042},{"class":412,"line":1041},17,[1043],{"type":363,"tag":410,"props":1044,"children":1045},{"style":671},[1046],{"type":368,"value":1047},"    }\n",{"type":363,"tag":410,"props":1049,"children":1051},{"class":412,"line":1050},18,[1052],{"type":363,"tag":410,"props":1053,"children":1054},{"style":671},[1055],{"type":368,"value":1056},"  }\n",{"type":363,"tag":410,"props":1058,"children":1060},{"class":412,"line":1059},19,[1061,1066,1070,1074,1079,1084],{"type":363,"tag":410,"props":1062,"children":1063},{"style":817},[1064],{"type":368,"value":1065},"  return",{"type":363,"tag":410,"props":1067,"children":1068},{"style":715},[1069],{"type":368,"value":727},{"type":363,"tag":410,"props":1071,"children":1072},{"style":671},[1073],{"type":368,"value":925},{"type":363,"tag":410,"props":1075,"children":1076},{"style":715},[1077],{"type":368,"value":1078},"r",{"type":363,"tag":410,"props":1080,"children":1081},{"style":671},[1082],{"type":368,"value":1083},"]",{"type":363,"tag":410,"props":1085,"children":1086},{"style":741},[1087],{"type":368,"value":744},{"type":363,"tag":410,"props":1089,"children":1091},{"class":412,"line":1090},20,[1092,1097],{"type":363,"tag":410,"props":1093,"children":1094},{"style":671},[1095],{"type":368,"value":1096},"}",{"type":363,"tag":410,"props":1098,"children":1099},{"style":741},[1100],{"type":368,"value":744},{"type":363,"tag":1102,"props":1103,"children":1104},"style",{},[1105],{"type":368,"value":1106},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":356,"searchDepth":644,"depth":644,"links":1108},[1109,1110],{"id":546,"depth":422,"text":546},{"id":569,"depth":422,"text":569},"markdown","content:2.code:1.algorithm:3.leetcode:153.find-minimum-in-rotated-sorted-array.md","content","2.code/1.algorithm/3.leetcode/153.find-minimum-in-rotated-sorted-array.md","md",[1117,1119],{"_path":181,"title":180,"description":1118},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",{"_path":187,"title":186,"description":1120},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",1712589912744]