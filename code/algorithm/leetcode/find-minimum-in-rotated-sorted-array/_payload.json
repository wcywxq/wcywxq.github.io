[{"data":1,"prerenderedAt":1097},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array":329,"/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array-surround":1092},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319],{"title":320,"_path":321,"children":322},"Promise","/code/scene/promise",[323,326],{"title":324,"_path":325},"顺序打印 url 并支持 retry","/code/scene/promise/order-print-url-and-retry",{"title":327,"_path":328},"promise 实现图片加载数量限制","/code/scene/promise/limit-image-load-count",{"_path":184,"_dir":330,"_draft":331,"_partial":331,"_locale":332,"title":183,"description":333,"url":334,"body":335,"_type":1087,"_id":1088,"_source":1089,"_file":1090,"_extension":1091},"leetcode",false,"","已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：","https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array",{"type":336,"children":337,"toc":1083},"root",[338,345,360,365,370,375,414,419,450,455,486,491,519,525,543,548,1077],{"type":339,"tag":340,"props":341,"children":342},"element","p",{},[343],{"type":344,"value":333},"text",{"type":339,"tag":346,"props":347,"children":348},"ul",{},[349,355],{"type":339,"tag":350,"props":351,"children":352},"li",{},[353],{"type":344,"value":354},"若旋转 4 次，则可以得到 [4,5,6,7,0,1,2]",{"type":339,"tag":350,"props":356,"children":357},{},[358],{"type":344,"value":359},"若旋转 7 次，则可以得到 [0,1,2,4,5,6,7]\n注意，数组 [a[0], a[1], a[2], ..., a[n-1]] 旋转一次 的结果为数组 [a[n-1], a[0], a[1], a[2], ..., a[n-2]] 。",{"type":339,"tag":340,"props":361,"children":362},{},[363],{"type":344,"value":364},"给你一个元素值 互不相同 的数组 nums ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 最小元素 。",{"type":339,"tag":340,"props":366,"children":367},{},[368],{"type":344,"value":369},"你必须设计一个时间复杂度为 O(log n) 的算法解决此问题。",{"type":339,"tag":340,"props":371,"children":372},{},[373],{"type":344,"value":374},"示例 1：",{"type":339,"tag":376,"props":377,"children":380},"pre",{"className":378,"code":379,"language":344,"meta":332,"style":332},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [3,4,5,1,2]\n输出：1\n解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",[381],{"type":339,"tag":382,"props":383,"children":384},"code",{"__ignoreMap":332},[385,396,405],{"type":339,"tag":386,"props":387,"children":390},"span",{"class":388,"line":389},"line",1,[391],{"type":339,"tag":386,"props":392,"children":393},{},[394],{"type":344,"value":395},"输入：nums = [3,4,5,1,2]\n",{"type":339,"tag":386,"props":397,"children":399},{"class":388,"line":398},2,[400],{"type":339,"tag":386,"props":401,"children":402},{},[403],{"type":344,"value":404},"输出：1\n",{"type":339,"tag":386,"props":406,"children":408},{"class":388,"line":407},3,[409],{"type":339,"tag":386,"props":410,"children":411},{},[412],{"type":344,"value":413},"解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",{"type":339,"tag":340,"props":415,"children":416},{},[417],{"type":344,"value":418},"示例 2：",{"type":339,"tag":376,"props":420,"children":422},{"className":378,"code":421,"language":344,"meta":332,"style":332},"输入：nums = [4,5,6,7,0,1,2]\n输出：0\n解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",[423],{"type":339,"tag":382,"props":424,"children":425},{"__ignoreMap":332},[426,434,442],{"type":339,"tag":386,"props":427,"children":428},{"class":388,"line":389},[429],{"type":339,"tag":386,"props":430,"children":431},{},[432],{"type":344,"value":433},"输入：nums = [4,5,6,7,0,1,2]\n",{"type":339,"tag":386,"props":435,"children":436},{"class":388,"line":398},[437],{"type":339,"tag":386,"props":438,"children":439},{},[440],{"type":344,"value":441},"输出：0\n",{"type":339,"tag":386,"props":443,"children":444},{"class":388,"line":407},[445],{"type":339,"tag":386,"props":446,"children":447},{},[448],{"type":344,"value":449},"解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",{"type":339,"tag":340,"props":451,"children":452},{},[453],{"type":344,"value":454},"示例 3：",{"type":339,"tag":376,"props":456,"children":458},{"className":378,"code":457,"language":344,"meta":332,"style":332},"输入：nums = [11,13,15,17]\n输出：11\n解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",[459],{"type":339,"tag":382,"props":460,"children":461},{"__ignoreMap":332},[462,470,478],{"type":339,"tag":386,"props":463,"children":464},{"class":388,"line":389},[465],{"type":339,"tag":386,"props":466,"children":467},{},[468],{"type":344,"value":469},"输入：nums = [11,13,15,17]\n",{"type":339,"tag":386,"props":471,"children":472},{"class":388,"line":398},[473],{"type":339,"tag":386,"props":474,"children":475},{},[476],{"type":344,"value":477},"输出：11\n",{"type":339,"tag":386,"props":479,"children":480},{"class":388,"line":407},[481],{"type":339,"tag":386,"props":482,"children":483},{},[484],{"type":344,"value":485},"解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",{"type":339,"tag":340,"props":487,"children":488},{},[489],{"type":344,"value":490},"提示：",{"type":339,"tag":346,"props":492,"children":493},{},[494,499,504,509,514],{"type":339,"tag":350,"props":495,"children":496},{},[497],{"type":344,"value":498},"n == nums.length",{"type":339,"tag":350,"props":500,"children":501},{},[502],{"type":344,"value":503},"1 \u003C= n \u003C= 5000",{"type":339,"tag":350,"props":505,"children":506},{},[507],{"type":344,"value":508},"-5000 \u003C= nums[i] \u003C= 5000",{"type":339,"tag":350,"props":510,"children":511},{},[512],{"type":344,"value":513},"nums 中的所有整数 互不相同",{"type":339,"tag":350,"props":515,"children":516},{},[517],{"type":344,"value":518},"nums 原来是一个升序排序的数组，并进行了 1 至 n 次旋转",{"type":339,"tag":520,"props":521,"children":523},"h2",{"id":522},"解题思路",[524],{"type":344,"value":522},{"type":339,"tag":346,"props":526,"children":527},{},[528,533,538],{"type":339,"tag":350,"props":529,"children":530},{},[531],{"type":344,"value":532},"经过分析，红色即最小值左侧，蓝色即最小值及其右侧",{"type":339,"tag":350,"props":534,"children":535},{},[536],{"type":344,"value":537},"n - 1 一定是蓝色",{"type":339,"tag":350,"props":539,"children":540},{},[541],{"type":344,"value":542},"总结：小于最后一个数，就是蓝色，否则就是红色",{"type":339,"tag":520,"props":544,"children":546},{"id":545},"实现",[547],{"type":344,"value":545},{"type":339,"tag":376,"props":549,"children":553},{"className":550,"code":551,"language":552,"meta":332,"style":332},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMin = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let len = nums.length;\n  let l = -1;\n  let r = len - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] \u003C nums[len - 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return nums[r];\n};\n","js",[554],{"type":339,"tag":382,"props":555,"children":556},{"__ignoreMap":332},[557,566,592,609,618,662,671,680,721,753,787,828,880,943,970,989,1015,1024,1033,1064],{"type":339,"tag":386,"props":558,"children":559},{"class":388,"line":389},[560],{"type":339,"tag":386,"props":561,"children":563},{"style":562},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[564],{"type":344,"value":565},"/**\n",{"type":339,"tag":386,"props":567,"children":568},{"class":388,"line":398},[569,574,580,586],{"type":339,"tag":386,"props":570,"children":571},{"style":562},[572],{"type":344,"value":573}," * ",{"type":339,"tag":386,"props":575,"children":577},{"style":576},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[578],{"type":344,"value":579},"@param",{"type":339,"tag":386,"props":581,"children":583},{"style":582},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[584],{"type":344,"value":585}," {number[]}",{"type":339,"tag":386,"props":587,"children":589},{"style":588},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[590],{"type":344,"value":591}," nums\n",{"type":339,"tag":386,"props":593,"children":594},{"class":388,"line":407},[595,599,604],{"type":339,"tag":386,"props":596,"children":597},{"style":562},[598],{"type":344,"value":573},{"type":339,"tag":386,"props":600,"children":601},{"style":576},[602],{"type":344,"value":603},"@return",{"type":339,"tag":386,"props":605,"children":606},{"style":582},[607],{"type":344,"value":608}," {number}\n",{"type":339,"tag":386,"props":610,"children":612},{"class":388,"line":611},4,[613],{"type":339,"tag":386,"props":614,"children":615},{"style":562},[616],{"type":344,"value":617}," */\n",{"type":339,"tag":386,"props":619,"children":621},{"class":388,"line":620},5,[622,628,634,640,645,651,657],{"type":339,"tag":386,"props":623,"children":625},{"style":624},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[626],{"type":344,"value":627},"var",{"type":339,"tag":386,"props":629,"children":631},{"style":630},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[632],{"type":344,"value":633}," findMin",{"type":339,"tag":386,"props":635,"children":637},{"style":636},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[638],{"type":344,"value":639}," =",{"type":339,"tag":386,"props":641,"children":642},{"style":624},[643],{"type":344,"value":644}," function",{"type":339,"tag":386,"props":646,"children":648},{"style":647},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[649],{"type":344,"value":650}," (",{"type":339,"tag":386,"props":652,"children":654},{"style":653},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[655],{"type":344,"value":656},"nums",{"type":339,"tag":386,"props":658,"children":659},{"style":647},[660],{"type":344,"value":661},") {\n",{"type":339,"tag":386,"props":663,"children":665},{"class":388,"line":664},6,[666],{"type":339,"tag":386,"props":667,"children":668},{"style":562},[669],{"type":344,"value":670},"  // [0, n - 2]\n",{"type":339,"tag":386,"props":672,"children":674},{"class":388,"line":673},7,[675],{"type":339,"tag":386,"props":676,"children":677},{"style":562},[678],{"type":344,"value":679},"  // (-1, n - 1) 开区间写法\n",{"type":339,"tag":386,"props":681,"children":683},{"class":388,"line":682},8,[684,689,695,699,704,710,715],{"type":339,"tag":386,"props":685,"children":686},{"style":624},[687],{"type":344,"value":688},"  let",{"type":339,"tag":386,"props":690,"children":692},{"style":691},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[693],{"type":344,"value":694}," len",{"type":339,"tag":386,"props":696,"children":697},{"style":636},[698],{"type":344,"value":639},{"type":339,"tag":386,"props":700,"children":701},{"style":691},[702],{"type":344,"value":703}," nums",{"type":339,"tag":386,"props":705,"children":707},{"style":706},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[708],{"type":344,"value":709},".",{"type":339,"tag":386,"props":711,"children":712},{"style":647},[713],{"type":344,"value":714},"length",{"type":339,"tag":386,"props":716,"children":718},{"style":717},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[719],{"type":344,"value":720},";\n",{"type":339,"tag":386,"props":722,"children":724},{"class":388,"line":723},9,[725,729,734,738,743,749],{"type":339,"tag":386,"props":726,"children":727},{"style":624},[728],{"type":344,"value":688},{"type":339,"tag":386,"props":730,"children":731},{"style":691},[732],{"type":344,"value":733}," l",{"type":339,"tag":386,"props":735,"children":736},{"style":636},[737],{"type":344,"value":639},{"type":339,"tag":386,"props":739,"children":740},{"style":636},[741],{"type":344,"value":742}," -",{"type":339,"tag":386,"props":744,"children":746},{"style":745},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[747],{"type":344,"value":748},"1",{"type":339,"tag":386,"props":750,"children":751},{"style":717},[752],{"type":344,"value":720},{"type":339,"tag":386,"props":754,"children":756},{"class":388,"line":755},10,[757,761,766,770,774,778,783],{"type":339,"tag":386,"props":758,"children":759},{"style":624},[760],{"type":344,"value":688},{"type":339,"tag":386,"props":762,"children":763},{"style":691},[764],{"type":344,"value":765}," r",{"type":339,"tag":386,"props":767,"children":768},{"style":636},[769],{"type":344,"value":639},{"type":339,"tag":386,"props":771,"children":772},{"style":691},[773],{"type":344,"value":694},{"type":339,"tag":386,"props":775,"children":776},{"style":636},[777],{"type":344,"value":742},{"type":339,"tag":386,"props":779,"children":780},{"style":745},[781],{"type":344,"value":782}," 1",{"type":339,"tag":386,"props":784,"children":785},{"style":717},[786],{"type":344,"value":720},{"type":339,"tag":386,"props":788,"children":790},{"class":388,"line":789},11,[791,797,801,806,811,815,820,824],{"type":339,"tag":386,"props":792,"children":794},{"style":793},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[795],{"type":344,"value":796},"  while",{"type":339,"tag":386,"props":798,"children":799},{"style":647},[800],{"type":344,"value":650},{"type":339,"tag":386,"props":802,"children":803},{"style":691},[804],{"type":344,"value":805},"l",{"type":339,"tag":386,"props":807,"children":808},{"style":636},[809],{"type":344,"value":810}," +",{"type":339,"tag":386,"props":812,"children":813},{"style":745},[814],{"type":344,"value":782},{"type":339,"tag":386,"props":816,"children":817},{"style":636},[818],{"type":344,"value":819}," \u003C",{"type":339,"tag":386,"props":821,"children":822},{"style":691},[823],{"type":344,"value":765},{"type":339,"tag":386,"props":825,"children":826},{"style":647},[827],{"type":344,"value":661},{"type":339,"tag":386,"props":829,"children":831},{"class":388,"line":830},12,[832,837,842,846,850,854,858,862,867,872,876],{"type":339,"tag":386,"props":833,"children":834},{"style":624},[835],{"type":344,"value":836},"    let",{"type":339,"tag":386,"props":838,"children":839},{"style":691},[840],{"type":344,"value":841}," mid",{"type":339,"tag":386,"props":843,"children":844},{"style":636},[845],{"type":344,"value":639},{"type":339,"tag":386,"props":847,"children":848},{"style":647},[849],{"type":344,"value":650},{"type":339,"tag":386,"props":851,"children":852},{"style":691},[853],{"type":344,"value":805},{"type":339,"tag":386,"props":855,"children":856},{"style":636},[857],{"type":344,"value":810},{"type":339,"tag":386,"props":859,"children":860},{"style":691},[861],{"type":344,"value":765},{"type":339,"tag":386,"props":863,"children":864},{"style":647},[865],{"type":344,"value":866},") ",{"type":339,"tag":386,"props":868,"children":869},{"style":636},[870],{"type":344,"value":871},">>",{"type":339,"tag":386,"props":873,"children":874},{"style":745},[875],{"type":344,"value":782},{"type":339,"tag":386,"props":877,"children":878},{"style":717},[879],{"type":344,"value":720},{"type":339,"tag":386,"props":881,"children":883},{"class":388,"line":882},13,[884,889,893,897,902,907,912,917,921,925,930,934,938],{"type":339,"tag":386,"props":885,"children":886},{"style":793},[887],{"type":344,"value":888},"    if",{"type":339,"tag":386,"props":890,"children":891},{"style":647},[892],{"type":344,"value":650},{"type":339,"tag":386,"props":894,"children":895},{"style":691},[896],{"type":344,"value":656},{"type":339,"tag":386,"props":898,"children":899},{"style":647},[900],{"type":344,"value":901},"[",{"type":339,"tag":386,"props":903,"children":904},{"style":691},[905],{"type":344,"value":906},"mid",{"type":339,"tag":386,"props":908,"children":909},{"style":647},[910],{"type":344,"value":911},"] ",{"type":339,"tag":386,"props":913,"children":914},{"style":636},[915],{"type":344,"value":916},"\u003C",{"type":339,"tag":386,"props":918,"children":919},{"style":691},[920],{"type":344,"value":703},{"type":339,"tag":386,"props":922,"children":923},{"style":647},[924],{"type":344,"value":901},{"type":339,"tag":386,"props":926,"children":927},{"style":691},[928],{"type":344,"value":929},"len",{"type":339,"tag":386,"props":931,"children":932},{"style":636},[933],{"type":344,"value":742},{"type":339,"tag":386,"props":935,"children":936},{"style":745},[937],{"type":344,"value":782},{"type":339,"tag":386,"props":939,"children":940},{"style":647},[941],{"type":344,"value":942},"]) {\n",{"type":339,"tag":386,"props":944,"children":946},{"class":388,"line":945},14,[947,952,956,960,965],{"type":339,"tag":386,"props":948,"children":949},{"style":691},[950],{"type":344,"value":951},"      r",{"type":339,"tag":386,"props":953,"children":954},{"style":636},[955],{"type":344,"value":639},{"type":339,"tag":386,"props":957,"children":958},{"style":691},[959],{"type":344,"value":841},{"type":339,"tag":386,"props":961,"children":962},{"style":717},[963],{"type":344,"value":964},";",{"type":339,"tag":386,"props":966,"children":967},{"style":562},[968],{"type":344,"value":969}," // 染蓝色\n",{"type":339,"tag":386,"props":971,"children":973},{"class":388,"line":972},15,[974,979,984],{"type":339,"tag":386,"props":975,"children":976},{"style":647},[977],{"type":344,"value":978},"    } ",{"type":339,"tag":386,"props":980,"children":981},{"style":793},[982],{"type":344,"value":983},"else",{"type":339,"tag":386,"props":985,"children":986},{"style":647},[987],{"type":344,"value":988}," {\n",{"type":339,"tag":386,"props":990,"children":992},{"class":388,"line":991},16,[993,998,1002,1006,1010],{"type":339,"tag":386,"props":994,"children":995},{"style":691},[996],{"type":344,"value":997},"      l",{"type":339,"tag":386,"props":999,"children":1000},{"style":636},[1001],{"type":344,"value":639},{"type":339,"tag":386,"props":1003,"children":1004},{"style":691},[1005],{"type":344,"value":841},{"type":339,"tag":386,"props":1007,"children":1008},{"style":717},[1009],{"type":344,"value":964},{"type":339,"tag":386,"props":1011,"children":1012},{"style":562},[1013],{"type":344,"value":1014}," // 染红色\n",{"type":339,"tag":386,"props":1016,"children":1018},{"class":388,"line":1017},17,[1019],{"type":339,"tag":386,"props":1020,"children":1021},{"style":647},[1022],{"type":344,"value":1023},"    }\n",{"type":339,"tag":386,"props":1025,"children":1027},{"class":388,"line":1026},18,[1028],{"type":339,"tag":386,"props":1029,"children":1030},{"style":647},[1031],{"type":344,"value":1032},"  }\n",{"type":339,"tag":386,"props":1034,"children":1036},{"class":388,"line":1035},19,[1037,1042,1046,1050,1055,1060],{"type":339,"tag":386,"props":1038,"children":1039},{"style":793},[1040],{"type":344,"value":1041},"  return",{"type":339,"tag":386,"props":1043,"children":1044},{"style":691},[1045],{"type":344,"value":703},{"type":339,"tag":386,"props":1047,"children":1048},{"style":647},[1049],{"type":344,"value":901},{"type":339,"tag":386,"props":1051,"children":1052},{"style":691},[1053],{"type":344,"value":1054},"r",{"type":339,"tag":386,"props":1056,"children":1057},{"style":647},[1058],{"type":344,"value":1059},"]",{"type":339,"tag":386,"props":1061,"children":1062},{"style":717},[1063],{"type":344,"value":720},{"type":339,"tag":386,"props":1065,"children":1067},{"class":388,"line":1066},20,[1068,1073],{"type":339,"tag":386,"props":1069,"children":1070},{"style":647},[1071],{"type":344,"value":1072},"}",{"type":339,"tag":386,"props":1074,"children":1075},{"style":717},[1076],{"type":344,"value":720},{"type":339,"tag":1078,"props":1079,"children":1080},"style",{},[1081],{"type":344,"value":1082},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":332,"searchDepth":620,"depth":620,"links":1084},[1085,1086],{"id":522,"depth":398,"text":522},{"id":545,"depth":398,"text":545},"markdown","content:2.code:1.algorithm:3.leetcode:153.find-minimum-in-rotated-sorted-array.md","content","2.code/1.algorithm/3.leetcode/153.find-minimum-in-rotated-sorted-array.md","md",[1093,1095],{"_path":181,"title":180,"description":1094},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",{"_path":187,"title":186,"description":1096},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",1712330889757]