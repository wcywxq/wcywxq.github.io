[{"data":1,"prerenderedAt":1140},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array":281,"/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array-surround":1135},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,225,274],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,47],{"title":41,"_path":42,"children":43},"剑指 offer","/code/algorithm/sword-ofter",[44],{"title":45,"_path":46},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":48,"_path":49,"children":50},"力扣 leetCode","/code/algorithm/leetcode",[51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222],{"title":52,"_path":53},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":55,"_path":56},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":58,"_path":59},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":61,"_path":62},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":64,"_path":65},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":67,"_path":68},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":70,"_path":71},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":73,"_path":74},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":76,"_path":77},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":79,"_path":80},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":82,"_path":83},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":85,"_path":86},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":88,"_path":89},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":91,"_path":92},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":94,"_path":95},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":97,"_path":98},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":100,"_path":101},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":103,"_path":104},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":106,"_path":107},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":109,"_path":110},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":112,"_path":113},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":115,"_path":116},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":118,"_path":119},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":121,"_path":122},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":124,"_path":125},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":127,"_path":128},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":130,"_path":131},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":133,"_path":134},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":136,"_path":137},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":139,"_path":140},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":142,"_path":143},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":145,"_path":146},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":148,"_path":149},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":151,"_path":152},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":154,"_path":155},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":157,"_path":158},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":160,"_path":161},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":163,"_path":164},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":166,"_path":167},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":169,"_path":170},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":172,"_path":173},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":175,"_path":176},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":178,"_path":179},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":181,"_path":182},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":184,"_path":185},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":187,"_path":188},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":190,"_path":191},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":193,"_path":194},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":196,"_path":197},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":199,"_path":200},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":202,"_path":203},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":217,"_path":218},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":220,"_path":221},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":223,"_path":224},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":226,"_path":227,"children":228},"源码实现","/code/source",[229,254,267],{"title":230,"_path":231,"children":232},"原生 api","/code/source/native-api",[233,236,239,242,245,248,251],{"title":234,"_path":235},"ajax","/code/source/native-api/ajax",{"title":237,"_path":238},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":240,"_path":241},"new 操作符","/code/source/native-api/new",{"title":243,"_path":244},"instanceof 关键字","/code/source/native-api/instanceof",{"title":246,"_path":247},"定时器","/code/source/native-api/timer",{"title":249,"_path":250},"JSON.stringify","/code/source/native-api/json-stringify",{"title":252,"_path":253},"Iterator 迭代器","/code/source/native-api/iterator",{"title":255,"_path":256,"children":257},"数组 Array","/code/source/array",[258,261,264],{"title":259,"_path":260},"数组去重","/code/source/array/remove-duplicate",{"title":262,"_path":263},"数组扁平化","/code/source/array/flat",{"title":265,"_path":266},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":268,"_path":269,"children":270},"字符串 String","/code/source/string",[271],{"title":272,"_path":273},"repeat()","/code/source/string/repeat",{"title":275,"_path":276,"children":277},"业务场景","/code/scene",[278],{"title":279,"_path":280},"顺序打印 url 并支持 retry","/code/scene/promise-url-retry",{"_path":161,"_dir":282,"_draft":283,"_partial":283,"_locale":284,"title":160,"description":285,"url":286,"body":287,"_type":1131,"_id":1132,"_source":1133,"_file":1134,"_extension":332},"leetcode",false,"","已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：","https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array",{"type":288,"children":289,"toc":1127},"root",[290,297,312,317,322,327,404,409,468,473,532,537,565,571,589,594,1121],{"type":291,"tag":292,"props":293,"children":294},"element","p",{},[295],{"type":296,"value":285},"text",{"type":291,"tag":298,"props":299,"children":300},"ul",{},[301,307],{"type":291,"tag":302,"props":303,"children":304},"li",{},[305],{"type":296,"value":306},"若旋转 4 次，则可以得到 [4,5,6,7,0,1,2]",{"type":291,"tag":302,"props":308,"children":309},{},[310],{"type":296,"value":311},"若旋转 7 次，则可以得到 [0,1,2,4,5,6,7]\n注意，数组 [a[0], a[1], a[2], ..., a[n-1]] 旋转一次 的结果为数组 [a[n-1], a[0], a[1], a[2], ..., a[n-2]] 。",{"type":291,"tag":292,"props":313,"children":314},{},[315],{"type":296,"value":316},"给你一个元素值 互不相同 的数组 nums ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 最小元素 。",{"type":291,"tag":292,"props":318,"children":319},{},[320],{"type":296,"value":321},"你必须设计一个时间复杂度为 O(log n) 的算法解决此问题。",{"type":291,"tag":292,"props":323,"children":324},{},[325],{"type":296,"value":326},"示例 1：",{"type":291,"tag":328,"props":329,"children":333},"pre",{"className":330,"code":331,"language":332,"meta":284,"style":284},"language-md shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [3,4,5,1,2]\n输出：1\n解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n","md",[334],{"type":291,"tag":335,"props":336,"children":337},"code",{"__ignoreMap":284},[338,367,376],{"type":291,"tag":339,"props":340,"children":343},"span",{"class":341,"line":342},"line",1,[344,350,356,362],{"type":291,"tag":339,"props":345,"children":347},{"style":346},"--shiki-light:#110000;--shiki-default:#110000;--shiki-dark:#BFBDB6",[348],{"type":296,"value":349},"输入：nums = ",{"type":291,"tag":339,"props":351,"children":353},{"style":352},"--shiki-light:#87429A;--shiki-default:#87429A;--shiki-dark:#BFBDB6",[354],{"type":296,"value":355},"[",{"type":291,"tag":339,"props":357,"children":359},{"style":358},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#39BAE6",[360],{"type":296,"value":361},"3,4,5,1,2",{"type":291,"tag":339,"props":363,"children":364},{"style":352},[365],{"type":296,"value":366},"]\n",{"type":291,"tag":339,"props":368,"children":370},{"class":341,"line":369},2,[371],{"type":291,"tag":339,"props":372,"children":373},{"style":346},[374],{"type":296,"value":375},"输出：1\n",{"type":291,"tag":339,"props":377,"children":379},{"class":341,"line":378},3,[380,385,389,394,399],{"type":291,"tag":339,"props":381,"children":382},{"style":346},[383],{"type":296,"value":384},"解释：原数组为 ",{"type":291,"tag":339,"props":386,"children":387},{"style":352},[388],{"type":296,"value":355},{"type":291,"tag":339,"props":390,"children":391},{"style":358},[392],{"type":296,"value":393},"1,2,3,4,5",{"type":291,"tag":339,"props":395,"children":396},{"style":352},[397],{"type":296,"value":398},"]",{"type":291,"tag":339,"props":400,"children":401},{"style":346},[402],{"type":296,"value":403}," ，旋转 3 次得到输入数组。\n",{"type":291,"tag":292,"props":405,"children":406},{},[407],{"type":296,"value":408},"示例 2：",{"type":291,"tag":328,"props":410,"children":412},{"className":330,"code":411,"language":332,"meta":284,"style":284},"输入：nums = [4,5,6,7,0,1,2]\n输出：0\n解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",[413],{"type":291,"tag":335,"props":414,"children":415},{"__ignoreMap":284},[416,436,444],{"type":291,"tag":339,"props":417,"children":418},{"class":341,"line":342},[419,423,427,432],{"type":291,"tag":339,"props":420,"children":421},{"style":346},[422],{"type":296,"value":349},{"type":291,"tag":339,"props":424,"children":425},{"style":352},[426],{"type":296,"value":355},{"type":291,"tag":339,"props":428,"children":429},{"style":358},[430],{"type":296,"value":431},"4,5,6,7,0,1,2",{"type":291,"tag":339,"props":433,"children":434},{"style":352},[435],{"type":296,"value":366},{"type":291,"tag":339,"props":437,"children":438},{"class":341,"line":369},[439],{"type":291,"tag":339,"props":440,"children":441},{"style":346},[442],{"type":296,"value":443},"输出：0\n",{"type":291,"tag":339,"props":445,"children":446},{"class":341,"line":378},[447,451,455,460,464],{"type":291,"tag":339,"props":448,"children":449},{"style":346},[450],{"type":296,"value":384},{"type":291,"tag":339,"props":452,"children":453},{"style":352},[454],{"type":296,"value":355},{"type":291,"tag":339,"props":456,"children":457},{"style":358},[458],{"type":296,"value":459},"0,1,2,4,5,6,7",{"type":291,"tag":339,"props":461,"children":462},{"style":352},[463],{"type":296,"value":398},{"type":291,"tag":339,"props":465,"children":466},{"style":346},[467],{"type":296,"value":403},{"type":291,"tag":292,"props":469,"children":470},{},[471],{"type":296,"value":472},"示例 3：",{"type":291,"tag":328,"props":474,"children":476},{"className":330,"code":475,"language":332,"meta":284,"style":284},"输入：nums = [11,13,15,17]\n输出：11\n解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",[477],{"type":291,"tag":335,"props":478,"children":479},{"__ignoreMap":284},[480,500,508],{"type":291,"tag":339,"props":481,"children":482},{"class":341,"line":342},[483,487,491,496],{"type":291,"tag":339,"props":484,"children":485},{"style":346},[486],{"type":296,"value":349},{"type":291,"tag":339,"props":488,"children":489},{"style":352},[490],{"type":296,"value":355},{"type":291,"tag":339,"props":492,"children":493},{"style":358},[494],{"type":296,"value":495},"11,13,15,17",{"type":291,"tag":339,"props":497,"children":498},{"style":352},[499],{"type":296,"value":366},{"type":291,"tag":339,"props":501,"children":502},{"class":341,"line":369},[503],{"type":291,"tag":339,"props":504,"children":505},{"style":346},[506],{"type":296,"value":507},"输出：11\n",{"type":291,"tag":339,"props":509,"children":510},{"class":341,"line":378},[511,515,519,523,527],{"type":291,"tag":339,"props":512,"children":513},{"style":346},[514],{"type":296,"value":384},{"type":291,"tag":339,"props":516,"children":517},{"style":352},[518],{"type":296,"value":355},{"type":291,"tag":339,"props":520,"children":521},{"style":358},[522],{"type":296,"value":495},{"type":291,"tag":339,"props":524,"children":525},{"style":352},[526],{"type":296,"value":398},{"type":291,"tag":339,"props":528,"children":529},{"style":346},[530],{"type":296,"value":531}," ，旋转 4 次得到输入数组。\n",{"type":291,"tag":292,"props":533,"children":534},{},[535],{"type":296,"value":536},"提示：",{"type":291,"tag":298,"props":538,"children":539},{},[540,545,550,555,560],{"type":291,"tag":302,"props":541,"children":542},{},[543],{"type":296,"value":544},"n == nums.length",{"type":291,"tag":302,"props":546,"children":547},{},[548],{"type":296,"value":549},"1 \u003C= n \u003C= 5000",{"type":291,"tag":302,"props":551,"children":552},{},[553],{"type":296,"value":554},"-5000 \u003C= nums[i] \u003C= 5000",{"type":291,"tag":302,"props":556,"children":557},{},[558],{"type":296,"value":559},"nums 中的所有整数 互不相同",{"type":291,"tag":302,"props":561,"children":562},{},[563],{"type":296,"value":564},"nums 原来是一个升序排序的数组，并进行了 1 至 n 次旋转",{"type":291,"tag":566,"props":567,"children":569},"h2",{"id":568},"解题思路",[570],{"type":296,"value":568},{"type":291,"tag":298,"props":572,"children":573},{},[574,579,584],{"type":291,"tag":302,"props":575,"children":576},{},[577],{"type":296,"value":578},"经过分析，红色即最小值左侧，蓝色即最小值及其右侧",{"type":291,"tag":302,"props":580,"children":581},{},[582],{"type":296,"value":583},"n - 1 一定是蓝色",{"type":291,"tag":302,"props":585,"children":586},{},[587],{"type":296,"value":588},"总结：小于最后一个数，就是蓝色，否则就是红色",{"type":291,"tag":566,"props":590,"children":592},{"id":591},"实现",[593],{"type":296,"value":591},{"type":291,"tag":328,"props":595,"children":599},{"className":596,"code":597,"language":598,"meta":284,"style":284},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMin = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let len = nums.length;\n  let l = -1;\n  let r = len - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] \u003C nums[len - 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return nums[r];\n};\n","js",[600],{"type":291,"tag":335,"props":601,"children":602},{"__ignoreMap":284},[603,612,638,655,664,708,717,726,767,799,833,874,926,988,1015,1034,1060,1069,1078,1108],{"type":291,"tag":339,"props":604,"children":605},{"class":341,"line":342},[606],{"type":291,"tag":339,"props":607,"children":609},{"style":608},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[610],{"type":296,"value":611},"/**\n",{"type":291,"tag":339,"props":613,"children":614},{"class":341,"line":369},[615,620,626,632],{"type":291,"tag":339,"props":616,"children":617},{"style":608},[618],{"type":296,"value":619}," * ",{"type":291,"tag":339,"props":621,"children":623},{"style":622},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[624],{"type":296,"value":625},"@param",{"type":291,"tag":339,"props":627,"children":629},{"style":628},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[630],{"type":296,"value":631}," {number[]}",{"type":291,"tag":339,"props":633,"children":635},{"style":634},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[636],{"type":296,"value":637}," nums\n",{"type":291,"tag":339,"props":639,"children":640},{"class":341,"line":378},[641,645,650],{"type":291,"tag":339,"props":642,"children":643},{"style":608},[644],{"type":296,"value":619},{"type":291,"tag":339,"props":646,"children":647},{"style":622},[648],{"type":296,"value":649},"@return",{"type":291,"tag":339,"props":651,"children":652},{"style":628},[653],{"type":296,"value":654}," {number}\n",{"type":291,"tag":339,"props":656,"children":658},{"class":341,"line":657},4,[659],{"type":291,"tag":339,"props":660,"children":661},{"style":608},[662],{"type":296,"value":663}," */\n",{"type":291,"tag":339,"props":665,"children":667},{"class":341,"line":666},5,[668,674,680,686,691,697,703],{"type":291,"tag":339,"props":669,"children":671},{"style":670},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[672],{"type":296,"value":673},"var",{"type":291,"tag":339,"props":675,"children":677},{"style":676},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[678],{"type":296,"value":679}," findMin",{"type":291,"tag":339,"props":681,"children":683},{"style":682},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[684],{"type":296,"value":685}," =",{"type":291,"tag":339,"props":687,"children":688},{"style":670},[689],{"type":296,"value":690}," function",{"type":291,"tag":339,"props":692,"children":694},{"style":693},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[695],{"type":296,"value":696}," (",{"type":291,"tag":339,"props":698,"children":700},{"style":699},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[701],{"type":296,"value":702},"nums",{"type":291,"tag":339,"props":704,"children":705},{"style":693},[706],{"type":296,"value":707},") {\n",{"type":291,"tag":339,"props":709,"children":711},{"class":341,"line":710},6,[712],{"type":291,"tag":339,"props":713,"children":714},{"style":608},[715],{"type":296,"value":716},"  // [0, n - 2]\n",{"type":291,"tag":339,"props":718,"children":720},{"class":341,"line":719},7,[721],{"type":291,"tag":339,"props":722,"children":723},{"style":608},[724],{"type":296,"value":725},"  // (-1, n - 1) 开区间写法\n",{"type":291,"tag":339,"props":727,"children":729},{"class":341,"line":728},8,[730,735,741,745,750,756,761],{"type":291,"tag":339,"props":731,"children":732},{"style":670},[733],{"type":296,"value":734},"  let",{"type":291,"tag":339,"props":736,"children":738},{"style":737},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[739],{"type":296,"value":740}," len",{"type":291,"tag":339,"props":742,"children":743},{"style":682},[744],{"type":296,"value":685},{"type":291,"tag":339,"props":746,"children":747},{"style":737},[748],{"type":296,"value":749}," nums",{"type":291,"tag":339,"props":751,"children":753},{"style":752},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[754],{"type":296,"value":755},".",{"type":291,"tag":339,"props":757,"children":758},{"style":693},[759],{"type":296,"value":760},"length",{"type":291,"tag":339,"props":762,"children":764},{"style":763},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[765],{"type":296,"value":766},";\n",{"type":291,"tag":339,"props":768,"children":770},{"class":341,"line":769},9,[771,775,780,784,789,795],{"type":291,"tag":339,"props":772,"children":773},{"style":670},[774],{"type":296,"value":734},{"type":291,"tag":339,"props":776,"children":777},{"style":737},[778],{"type":296,"value":779}," l",{"type":291,"tag":339,"props":781,"children":782},{"style":682},[783],{"type":296,"value":685},{"type":291,"tag":339,"props":785,"children":786},{"style":682},[787],{"type":296,"value":788}," -",{"type":291,"tag":339,"props":790,"children":792},{"style":791},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[793],{"type":296,"value":794},"1",{"type":291,"tag":339,"props":796,"children":797},{"style":763},[798],{"type":296,"value":766},{"type":291,"tag":339,"props":800,"children":802},{"class":341,"line":801},10,[803,807,812,816,820,824,829],{"type":291,"tag":339,"props":804,"children":805},{"style":670},[806],{"type":296,"value":734},{"type":291,"tag":339,"props":808,"children":809},{"style":737},[810],{"type":296,"value":811}," r",{"type":291,"tag":339,"props":813,"children":814},{"style":682},[815],{"type":296,"value":685},{"type":291,"tag":339,"props":817,"children":818},{"style":737},[819],{"type":296,"value":740},{"type":291,"tag":339,"props":821,"children":822},{"style":682},[823],{"type":296,"value":788},{"type":291,"tag":339,"props":825,"children":826},{"style":791},[827],{"type":296,"value":828}," 1",{"type":291,"tag":339,"props":830,"children":831},{"style":763},[832],{"type":296,"value":766},{"type":291,"tag":339,"props":834,"children":836},{"class":341,"line":835},11,[837,843,847,852,857,861,866,870],{"type":291,"tag":339,"props":838,"children":840},{"style":839},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[841],{"type":296,"value":842},"  while",{"type":291,"tag":339,"props":844,"children":845},{"style":693},[846],{"type":296,"value":696},{"type":291,"tag":339,"props":848,"children":849},{"style":737},[850],{"type":296,"value":851},"l",{"type":291,"tag":339,"props":853,"children":854},{"style":682},[855],{"type":296,"value":856}," +",{"type":291,"tag":339,"props":858,"children":859},{"style":791},[860],{"type":296,"value":828},{"type":291,"tag":339,"props":862,"children":863},{"style":682},[864],{"type":296,"value":865}," \u003C",{"type":291,"tag":339,"props":867,"children":868},{"style":737},[869],{"type":296,"value":811},{"type":291,"tag":339,"props":871,"children":872},{"style":693},[873],{"type":296,"value":707},{"type":291,"tag":339,"props":875,"children":877},{"class":341,"line":876},12,[878,883,888,892,896,900,904,908,913,918,922],{"type":291,"tag":339,"props":879,"children":880},{"style":670},[881],{"type":296,"value":882},"    let",{"type":291,"tag":339,"props":884,"children":885},{"style":737},[886],{"type":296,"value":887}," mid",{"type":291,"tag":339,"props":889,"children":890},{"style":682},[891],{"type":296,"value":685},{"type":291,"tag":339,"props":893,"children":894},{"style":693},[895],{"type":296,"value":696},{"type":291,"tag":339,"props":897,"children":898},{"style":737},[899],{"type":296,"value":851},{"type":291,"tag":339,"props":901,"children":902},{"style":682},[903],{"type":296,"value":856},{"type":291,"tag":339,"props":905,"children":906},{"style":737},[907],{"type":296,"value":811},{"type":291,"tag":339,"props":909,"children":910},{"style":693},[911],{"type":296,"value":912},") ",{"type":291,"tag":339,"props":914,"children":915},{"style":682},[916],{"type":296,"value":917},">>",{"type":291,"tag":339,"props":919,"children":920},{"style":791},[921],{"type":296,"value":828},{"type":291,"tag":339,"props":923,"children":924},{"style":763},[925],{"type":296,"value":766},{"type":291,"tag":339,"props":927,"children":929},{"class":341,"line":928},13,[930,935,939,943,947,952,957,962,966,970,975,979,983],{"type":291,"tag":339,"props":931,"children":932},{"style":839},[933],{"type":296,"value":934},"    if",{"type":291,"tag":339,"props":936,"children":937},{"style":693},[938],{"type":296,"value":696},{"type":291,"tag":339,"props":940,"children":941},{"style":737},[942],{"type":296,"value":702},{"type":291,"tag":339,"props":944,"children":945},{"style":693},[946],{"type":296,"value":355},{"type":291,"tag":339,"props":948,"children":949},{"style":737},[950],{"type":296,"value":951},"mid",{"type":291,"tag":339,"props":953,"children":954},{"style":693},[955],{"type":296,"value":956},"] ",{"type":291,"tag":339,"props":958,"children":959},{"style":682},[960],{"type":296,"value":961},"\u003C",{"type":291,"tag":339,"props":963,"children":964},{"style":737},[965],{"type":296,"value":749},{"type":291,"tag":339,"props":967,"children":968},{"style":693},[969],{"type":296,"value":355},{"type":291,"tag":339,"props":971,"children":972},{"style":737},[973],{"type":296,"value":974},"len",{"type":291,"tag":339,"props":976,"children":977},{"style":682},[978],{"type":296,"value":788},{"type":291,"tag":339,"props":980,"children":981},{"style":791},[982],{"type":296,"value":828},{"type":291,"tag":339,"props":984,"children":985},{"style":693},[986],{"type":296,"value":987},"]) {\n",{"type":291,"tag":339,"props":989,"children":991},{"class":341,"line":990},14,[992,997,1001,1005,1010],{"type":291,"tag":339,"props":993,"children":994},{"style":737},[995],{"type":296,"value":996},"      r",{"type":291,"tag":339,"props":998,"children":999},{"style":682},[1000],{"type":296,"value":685},{"type":291,"tag":339,"props":1002,"children":1003},{"style":737},[1004],{"type":296,"value":887},{"type":291,"tag":339,"props":1006,"children":1007},{"style":763},[1008],{"type":296,"value":1009},";",{"type":291,"tag":339,"props":1011,"children":1012},{"style":608},[1013],{"type":296,"value":1014}," // 染蓝色\n",{"type":291,"tag":339,"props":1016,"children":1018},{"class":341,"line":1017},15,[1019,1024,1029],{"type":291,"tag":339,"props":1020,"children":1021},{"style":693},[1022],{"type":296,"value":1023},"    } ",{"type":291,"tag":339,"props":1025,"children":1026},{"style":839},[1027],{"type":296,"value":1028},"else",{"type":291,"tag":339,"props":1030,"children":1031},{"style":693},[1032],{"type":296,"value":1033}," {\n",{"type":291,"tag":339,"props":1035,"children":1037},{"class":341,"line":1036},16,[1038,1043,1047,1051,1055],{"type":291,"tag":339,"props":1039,"children":1040},{"style":737},[1041],{"type":296,"value":1042},"      l",{"type":291,"tag":339,"props":1044,"children":1045},{"style":682},[1046],{"type":296,"value":685},{"type":291,"tag":339,"props":1048,"children":1049},{"style":737},[1050],{"type":296,"value":887},{"type":291,"tag":339,"props":1052,"children":1053},{"style":763},[1054],{"type":296,"value":1009},{"type":291,"tag":339,"props":1056,"children":1057},{"style":608},[1058],{"type":296,"value":1059}," // 染红色\n",{"type":291,"tag":339,"props":1061,"children":1063},{"class":341,"line":1062},17,[1064],{"type":291,"tag":339,"props":1065,"children":1066},{"style":693},[1067],{"type":296,"value":1068},"    }\n",{"type":291,"tag":339,"props":1070,"children":1072},{"class":341,"line":1071},18,[1073],{"type":291,"tag":339,"props":1074,"children":1075},{"style":693},[1076],{"type":296,"value":1077},"  }\n",{"type":291,"tag":339,"props":1079,"children":1081},{"class":341,"line":1080},19,[1082,1087,1091,1095,1100,1104],{"type":291,"tag":339,"props":1083,"children":1084},{"style":839},[1085],{"type":296,"value":1086},"  return",{"type":291,"tag":339,"props":1088,"children":1089},{"style":737},[1090],{"type":296,"value":749},{"type":291,"tag":339,"props":1092,"children":1093},{"style":693},[1094],{"type":296,"value":355},{"type":291,"tag":339,"props":1096,"children":1097},{"style":737},[1098],{"type":296,"value":1099},"r",{"type":291,"tag":339,"props":1101,"children":1102},{"style":693},[1103],{"type":296,"value":398},{"type":291,"tag":339,"props":1105,"children":1106},{"style":763},[1107],{"type":296,"value":766},{"type":291,"tag":339,"props":1109,"children":1111},{"class":341,"line":1110},20,[1112,1117],{"type":291,"tag":339,"props":1113,"children":1114},{"style":693},[1115],{"type":296,"value":1116},"}",{"type":291,"tag":339,"props":1118,"children":1119},{"style":763},[1120],{"type":296,"value":766},{"type":291,"tag":1122,"props":1123,"children":1124},"style",{},[1125],{"type":296,"value":1126},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":284,"searchDepth":666,"depth":666,"links":1128},[1129,1130],{"id":568,"depth":369,"text":568},{"id":591,"depth":369,"text":591},"markdown","content:2.code:1.algorithm:2.leetcode:153.find-minimum-in-rotated-sorted-array.md","content","2.code/1.algorithm/2.leetcode/153.find-minimum-in-rotated-sorted-array.md",[1136,1138],{"_path":158,"title":157,"description":1137},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",{"_path":164,"title":163,"description":1139},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",1711978556213]