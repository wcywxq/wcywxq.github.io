[{"data":1,"prerenderedAt":1088},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array":320,"/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array-surround":1083},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,264,313],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,53],{"title":41,"_path":42,"children":43},"剑指 offer","/code/algorithm/sword-ofter",[44,47,50],{"title":45,"_path":46},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":48,"_path":49},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":51,"_path":52},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":54,"_path":55,"children":56},"力扣 leetCode","/code/algorithm/leetcode",[57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261],{"title":58,"_path":59},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":61,"_path":62},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":64,"_path":65},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":67,"_path":68},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":70,"_path":71},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":73,"_path":74},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":76,"_path":77},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":79,"_path":80},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":82,"_path":83},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":85,"_path":86},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":88,"_path":89},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":91,"_path":92},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":94,"_path":95},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":97,"_path":98},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":100,"_path":101},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":103,"_path":104},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":106,"_path":107},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":109,"_path":110},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":112,"_path":113},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":115,"_path":116},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":118,"_path":119},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":121,"_path":122},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":124,"_path":125},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":127,"_path":128},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":130,"_path":131},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":133,"_path":134},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":136,"_path":137},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":139,"_path":140},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":142,"_path":143},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":145,"_path":146},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":148,"_path":149},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":151,"_path":152},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":154,"_path":155},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":157,"_path":158},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":160,"_path":161},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":163,"_path":164},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":166,"_path":167},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":169,"_path":170},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":172,"_path":173},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":175,"_path":176},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":178,"_path":179},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":181,"_path":182},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":184,"_path":185},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":187,"_path":188},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":190,"_path":191},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":193,"_path":194},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":196,"_path":197},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":199,"_path":200},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":202,"_path":203},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":205,"_path":206},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":208,"_path":209},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":211,"_path":212},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":214,"_path":215},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":217,"_path":218},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":220,"_path":221},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":223,"_path":224},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":226,"_path":227},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":229,"_path":230},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":232,"_path":233},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":235,"_path":236},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":238,"_path":239},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":241,"_path":242},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":244,"_path":245},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":247,"_path":248},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":250,"_path":251},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":253,"_path":254},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":256,"_path":257},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":259,"_path":260},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":262,"_path":263},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":265,"_path":266,"children":267},"源码实现","/code/source",[268,293,306],{"title":269,"_path":270,"children":271},"原生 api","/code/source/native-api",[272,275,278,281,284,287,290],{"title":273,"_path":274},"ajax","/code/source/native-api/ajax",{"title":276,"_path":277},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":279,"_path":280},"new 操作符","/code/source/native-api/new",{"title":282,"_path":283},"instanceof 关键字","/code/source/native-api/instanceof",{"title":285,"_path":286},"定时器","/code/source/native-api/timer",{"title":288,"_path":289},"JSON.stringify","/code/source/native-api/json-stringify",{"title":291,"_path":292},"Iterator 迭代器","/code/source/native-api/iterator",{"title":294,"_path":295,"children":296},"数组 Array","/code/source/array",[297,300,303],{"title":298,"_path":299},"数组去重","/code/source/array/remove-duplicate",{"title":301,"_path":302},"数组扁平化","/code/source/array/flat",{"title":304,"_path":305},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":307,"_path":308,"children":309},"字符串 String","/code/source/string",[310],{"title":311,"_path":312},"repeat()","/code/source/string/repeat",{"title":314,"_path":315,"children":316},"业务场景","/code/scene",[317],{"title":318,"_path":319},"顺序打印 url 并支持 retry","/code/scene/promise-url-retry",{"_path":182,"_dir":321,"_draft":322,"_partial":322,"_locale":323,"title":181,"description":324,"url":325,"body":326,"_type":1078,"_id":1079,"_source":1080,"_file":1081,"_extension":1082},"leetcode",false,"","已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：","https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array",{"type":327,"children":328,"toc":1074},"root",[329,336,351,356,361,366,405,410,441,446,477,482,510,516,534,539,1068],{"type":330,"tag":331,"props":332,"children":333},"element","p",{},[334],{"type":335,"value":324},"text",{"type":330,"tag":337,"props":338,"children":339},"ul",{},[340,346],{"type":330,"tag":341,"props":342,"children":343},"li",{},[344],{"type":335,"value":345},"若旋转 4 次，则可以得到 [4,5,6,7,0,1,2]",{"type":330,"tag":341,"props":347,"children":348},{},[349],{"type":335,"value":350},"若旋转 7 次，则可以得到 [0,1,2,4,5,6,7]\n注意，数组 [a[0], a[1], a[2], ..., a[n-1]] 旋转一次 的结果为数组 [a[n-1], a[0], a[1], a[2], ..., a[n-2]] 。",{"type":330,"tag":331,"props":352,"children":353},{},[354],{"type":335,"value":355},"给你一个元素值 互不相同 的数组 nums ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 最小元素 。",{"type":330,"tag":331,"props":357,"children":358},{},[359],{"type":335,"value":360},"你必须设计一个时间复杂度为 O(log n) 的算法解决此问题。",{"type":330,"tag":331,"props":362,"children":363},{},[364],{"type":335,"value":365},"示例 1：",{"type":330,"tag":367,"props":368,"children":371},"pre",{"className":369,"code":370,"language":335,"meta":323,"style":323},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [3,4,5,1,2]\n输出：1\n解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",[372],{"type":330,"tag":373,"props":374,"children":375},"code",{"__ignoreMap":323},[376,387,396],{"type":330,"tag":377,"props":378,"children":381},"span",{"class":379,"line":380},"line",1,[382],{"type":330,"tag":377,"props":383,"children":384},{},[385],{"type":335,"value":386},"输入：nums = [3,4,5,1,2]\n",{"type":330,"tag":377,"props":388,"children":390},{"class":379,"line":389},2,[391],{"type":330,"tag":377,"props":392,"children":393},{},[394],{"type":335,"value":395},"输出：1\n",{"type":330,"tag":377,"props":397,"children":399},{"class":379,"line":398},3,[400],{"type":330,"tag":377,"props":401,"children":402},{},[403],{"type":335,"value":404},"解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",{"type":330,"tag":331,"props":406,"children":407},{},[408],{"type":335,"value":409},"示例 2：",{"type":330,"tag":367,"props":411,"children":413},{"className":369,"code":412,"language":335,"meta":323,"style":323},"输入：nums = [4,5,6,7,0,1,2]\n输出：0\n解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",[414],{"type":330,"tag":373,"props":415,"children":416},{"__ignoreMap":323},[417,425,433],{"type":330,"tag":377,"props":418,"children":419},{"class":379,"line":380},[420],{"type":330,"tag":377,"props":421,"children":422},{},[423],{"type":335,"value":424},"输入：nums = [4,5,6,7,0,1,2]\n",{"type":330,"tag":377,"props":426,"children":427},{"class":379,"line":389},[428],{"type":330,"tag":377,"props":429,"children":430},{},[431],{"type":335,"value":432},"输出：0\n",{"type":330,"tag":377,"props":434,"children":435},{"class":379,"line":398},[436],{"type":330,"tag":377,"props":437,"children":438},{},[439],{"type":335,"value":440},"解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",{"type":330,"tag":331,"props":442,"children":443},{},[444],{"type":335,"value":445},"示例 3：",{"type":330,"tag":367,"props":447,"children":449},{"className":369,"code":448,"language":335,"meta":323,"style":323},"输入：nums = [11,13,15,17]\n输出：11\n解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",[450],{"type":330,"tag":373,"props":451,"children":452},{"__ignoreMap":323},[453,461,469],{"type":330,"tag":377,"props":454,"children":455},{"class":379,"line":380},[456],{"type":330,"tag":377,"props":457,"children":458},{},[459],{"type":335,"value":460},"输入：nums = [11,13,15,17]\n",{"type":330,"tag":377,"props":462,"children":463},{"class":379,"line":389},[464],{"type":330,"tag":377,"props":465,"children":466},{},[467],{"type":335,"value":468},"输出：11\n",{"type":330,"tag":377,"props":470,"children":471},{"class":379,"line":398},[472],{"type":330,"tag":377,"props":473,"children":474},{},[475],{"type":335,"value":476},"解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",{"type":330,"tag":331,"props":478,"children":479},{},[480],{"type":335,"value":481},"提示：",{"type":330,"tag":337,"props":483,"children":484},{},[485,490,495,500,505],{"type":330,"tag":341,"props":486,"children":487},{},[488],{"type":335,"value":489},"n == nums.length",{"type":330,"tag":341,"props":491,"children":492},{},[493],{"type":335,"value":494},"1 \u003C= n \u003C= 5000",{"type":330,"tag":341,"props":496,"children":497},{},[498],{"type":335,"value":499},"-5000 \u003C= nums[i] \u003C= 5000",{"type":330,"tag":341,"props":501,"children":502},{},[503],{"type":335,"value":504},"nums 中的所有整数 互不相同",{"type":330,"tag":341,"props":506,"children":507},{},[508],{"type":335,"value":509},"nums 原来是一个升序排序的数组，并进行了 1 至 n 次旋转",{"type":330,"tag":511,"props":512,"children":514},"h2",{"id":513},"解题思路",[515],{"type":335,"value":513},{"type":330,"tag":337,"props":517,"children":518},{},[519,524,529],{"type":330,"tag":341,"props":520,"children":521},{},[522],{"type":335,"value":523},"经过分析，红色即最小值左侧，蓝色即最小值及其右侧",{"type":330,"tag":341,"props":525,"children":526},{},[527],{"type":335,"value":528},"n - 1 一定是蓝色",{"type":330,"tag":341,"props":530,"children":531},{},[532],{"type":335,"value":533},"总结：小于最后一个数，就是蓝色，否则就是红色",{"type":330,"tag":511,"props":535,"children":537},{"id":536},"实现",[538],{"type":335,"value":536},{"type":330,"tag":367,"props":540,"children":544},{"className":541,"code":542,"language":543,"meta":323,"style":323},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMin = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let len = nums.length;\n  let l = -1;\n  let r = len - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] \u003C nums[len - 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return nums[r];\n};\n","js",[545],{"type":330,"tag":373,"props":546,"children":547},{"__ignoreMap":323},[548,557,583,600,609,653,662,671,712,744,778,819,871,934,961,980,1006,1015,1024,1055],{"type":330,"tag":377,"props":549,"children":550},{"class":379,"line":380},[551],{"type":330,"tag":377,"props":552,"children":554},{"style":553},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[555],{"type":335,"value":556},"/**\n",{"type":330,"tag":377,"props":558,"children":559},{"class":379,"line":389},[560,565,571,577],{"type":330,"tag":377,"props":561,"children":562},{"style":553},[563],{"type":335,"value":564}," * ",{"type":330,"tag":377,"props":566,"children":568},{"style":567},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[569],{"type":335,"value":570},"@param",{"type":330,"tag":377,"props":572,"children":574},{"style":573},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[575],{"type":335,"value":576}," {number[]}",{"type":330,"tag":377,"props":578,"children":580},{"style":579},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[581],{"type":335,"value":582}," nums\n",{"type":330,"tag":377,"props":584,"children":585},{"class":379,"line":398},[586,590,595],{"type":330,"tag":377,"props":587,"children":588},{"style":553},[589],{"type":335,"value":564},{"type":330,"tag":377,"props":591,"children":592},{"style":567},[593],{"type":335,"value":594},"@return",{"type":330,"tag":377,"props":596,"children":597},{"style":573},[598],{"type":335,"value":599}," {number}\n",{"type":330,"tag":377,"props":601,"children":603},{"class":379,"line":602},4,[604],{"type":330,"tag":377,"props":605,"children":606},{"style":553},[607],{"type":335,"value":608}," */\n",{"type":330,"tag":377,"props":610,"children":612},{"class":379,"line":611},5,[613,619,625,631,636,642,648],{"type":330,"tag":377,"props":614,"children":616},{"style":615},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[617],{"type":335,"value":618},"var",{"type":330,"tag":377,"props":620,"children":622},{"style":621},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[623],{"type":335,"value":624}," findMin",{"type":330,"tag":377,"props":626,"children":628},{"style":627},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[629],{"type":335,"value":630}," =",{"type":330,"tag":377,"props":632,"children":633},{"style":615},[634],{"type":335,"value":635}," function",{"type":330,"tag":377,"props":637,"children":639},{"style":638},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[640],{"type":335,"value":641}," (",{"type":330,"tag":377,"props":643,"children":645},{"style":644},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[646],{"type":335,"value":647},"nums",{"type":330,"tag":377,"props":649,"children":650},{"style":638},[651],{"type":335,"value":652},") {\n",{"type":330,"tag":377,"props":654,"children":656},{"class":379,"line":655},6,[657],{"type":330,"tag":377,"props":658,"children":659},{"style":553},[660],{"type":335,"value":661},"  // [0, n - 2]\n",{"type":330,"tag":377,"props":663,"children":665},{"class":379,"line":664},7,[666],{"type":330,"tag":377,"props":667,"children":668},{"style":553},[669],{"type":335,"value":670},"  // (-1, n - 1) 开区间写法\n",{"type":330,"tag":377,"props":672,"children":674},{"class":379,"line":673},8,[675,680,686,690,695,701,706],{"type":330,"tag":377,"props":676,"children":677},{"style":615},[678],{"type":335,"value":679},"  let",{"type":330,"tag":377,"props":681,"children":683},{"style":682},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[684],{"type":335,"value":685}," len",{"type":330,"tag":377,"props":687,"children":688},{"style":627},[689],{"type":335,"value":630},{"type":330,"tag":377,"props":691,"children":692},{"style":682},[693],{"type":335,"value":694}," nums",{"type":330,"tag":377,"props":696,"children":698},{"style":697},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[699],{"type":335,"value":700},".",{"type":330,"tag":377,"props":702,"children":703},{"style":638},[704],{"type":335,"value":705},"length",{"type":330,"tag":377,"props":707,"children":709},{"style":708},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[710],{"type":335,"value":711},";\n",{"type":330,"tag":377,"props":713,"children":715},{"class":379,"line":714},9,[716,720,725,729,734,740],{"type":330,"tag":377,"props":717,"children":718},{"style":615},[719],{"type":335,"value":679},{"type":330,"tag":377,"props":721,"children":722},{"style":682},[723],{"type":335,"value":724}," l",{"type":330,"tag":377,"props":726,"children":727},{"style":627},[728],{"type":335,"value":630},{"type":330,"tag":377,"props":730,"children":731},{"style":627},[732],{"type":335,"value":733}," -",{"type":330,"tag":377,"props":735,"children":737},{"style":736},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[738],{"type":335,"value":739},"1",{"type":330,"tag":377,"props":741,"children":742},{"style":708},[743],{"type":335,"value":711},{"type":330,"tag":377,"props":745,"children":747},{"class":379,"line":746},10,[748,752,757,761,765,769,774],{"type":330,"tag":377,"props":749,"children":750},{"style":615},[751],{"type":335,"value":679},{"type":330,"tag":377,"props":753,"children":754},{"style":682},[755],{"type":335,"value":756}," r",{"type":330,"tag":377,"props":758,"children":759},{"style":627},[760],{"type":335,"value":630},{"type":330,"tag":377,"props":762,"children":763},{"style":682},[764],{"type":335,"value":685},{"type":330,"tag":377,"props":766,"children":767},{"style":627},[768],{"type":335,"value":733},{"type":330,"tag":377,"props":770,"children":771},{"style":736},[772],{"type":335,"value":773}," 1",{"type":330,"tag":377,"props":775,"children":776},{"style":708},[777],{"type":335,"value":711},{"type":330,"tag":377,"props":779,"children":781},{"class":379,"line":780},11,[782,788,792,797,802,806,811,815],{"type":330,"tag":377,"props":783,"children":785},{"style":784},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[786],{"type":335,"value":787},"  while",{"type":330,"tag":377,"props":789,"children":790},{"style":638},[791],{"type":335,"value":641},{"type":330,"tag":377,"props":793,"children":794},{"style":682},[795],{"type":335,"value":796},"l",{"type":330,"tag":377,"props":798,"children":799},{"style":627},[800],{"type":335,"value":801}," +",{"type":330,"tag":377,"props":803,"children":804},{"style":736},[805],{"type":335,"value":773},{"type":330,"tag":377,"props":807,"children":808},{"style":627},[809],{"type":335,"value":810}," \u003C",{"type":330,"tag":377,"props":812,"children":813},{"style":682},[814],{"type":335,"value":756},{"type":330,"tag":377,"props":816,"children":817},{"style":638},[818],{"type":335,"value":652},{"type":330,"tag":377,"props":820,"children":822},{"class":379,"line":821},12,[823,828,833,837,841,845,849,853,858,863,867],{"type":330,"tag":377,"props":824,"children":825},{"style":615},[826],{"type":335,"value":827},"    let",{"type":330,"tag":377,"props":829,"children":830},{"style":682},[831],{"type":335,"value":832}," mid",{"type":330,"tag":377,"props":834,"children":835},{"style":627},[836],{"type":335,"value":630},{"type":330,"tag":377,"props":838,"children":839},{"style":638},[840],{"type":335,"value":641},{"type":330,"tag":377,"props":842,"children":843},{"style":682},[844],{"type":335,"value":796},{"type":330,"tag":377,"props":846,"children":847},{"style":627},[848],{"type":335,"value":801},{"type":330,"tag":377,"props":850,"children":851},{"style":682},[852],{"type":335,"value":756},{"type":330,"tag":377,"props":854,"children":855},{"style":638},[856],{"type":335,"value":857},") ",{"type":330,"tag":377,"props":859,"children":860},{"style":627},[861],{"type":335,"value":862},">>",{"type":330,"tag":377,"props":864,"children":865},{"style":736},[866],{"type":335,"value":773},{"type":330,"tag":377,"props":868,"children":869},{"style":708},[870],{"type":335,"value":711},{"type":330,"tag":377,"props":872,"children":874},{"class":379,"line":873},13,[875,880,884,888,893,898,903,908,912,916,921,925,929],{"type":330,"tag":377,"props":876,"children":877},{"style":784},[878],{"type":335,"value":879},"    if",{"type":330,"tag":377,"props":881,"children":882},{"style":638},[883],{"type":335,"value":641},{"type":330,"tag":377,"props":885,"children":886},{"style":682},[887],{"type":335,"value":647},{"type":330,"tag":377,"props":889,"children":890},{"style":638},[891],{"type":335,"value":892},"[",{"type":330,"tag":377,"props":894,"children":895},{"style":682},[896],{"type":335,"value":897},"mid",{"type":330,"tag":377,"props":899,"children":900},{"style":638},[901],{"type":335,"value":902},"] ",{"type":330,"tag":377,"props":904,"children":905},{"style":627},[906],{"type":335,"value":907},"\u003C",{"type":330,"tag":377,"props":909,"children":910},{"style":682},[911],{"type":335,"value":694},{"type":330,"tag":377,"props":913,"children":914},{"style":638},[915],{"type":335,"value":892},{"type":330,"tag":377,"props":917,"children":918},{"style":682},[919],{"type":335,"value":920},"len",{"type":330,"tag":377,"props":922,"children":923},{"style":627},[924],{"type":335,"value":733},{"type":330,"tag":377,"props":926,"children":927},{"style":736},[928],{"type":335,"value":773},{"type":330,"tag":377,"props":930,"children":931},{"style":638},[932],{"type":335,"value":933},"]) {\n",{"type":330,"tag":377,"props":935,"children":937},{"class":379,"line":936},14,[938,943,947,951,956],{"type":330,"tag":377,"props":939,"children":940},{"style":682},[941],{"type":335,"value":942},"      r",{"type":330,"tag":377,"props":944,"children":945},{"style":627},[946],{"type":335,"value":630},{"type":330,"tag":377,"props":948,"children":949},{"style":682},[950],{"type":335,"value":832},{"type":330,"tag":377,"props":952,"children":953},{"style":708},[954],{"type":335,"value":955},";",{"type":330,"tag":377,"props":957,"children":958},{"style":553},[959],{"type":335,"value":960}," // 染蓝色\n",{"type":330,"tag":377,"props":962,"children":964},{"class":379,"line":963},15,[965,970,975],{"type":330,"tag":377,"props":966,"children":967},{"style":638},[968],{"type":335,"value":969},"    } ",{"type":330,"tag":377,"props":971,"children":972},{"style":784},[973],{"type":335,"value":974},"else",{"type":330,"tag":377,"props":976,"children":977},{"style":638},[978],{"type":335,"value":979}," {\n",{"type":330,"tag":377,"props":981,"children":983},{"class":379,"line":982},16,[984,989,993,997,1001],{"type":330,"tag":377,"props":985,"children":986},{"style":682},[987],{"type":335,"value":988},"      l",{"type":330,"tag":377,"props":990,"children":991},{"style":627},[992],{"type":335,"value":630},{"type":330,"tag":377,"props":994,"children":995},{"style":682},[996],{"type":335,"value":832},{"type":330,"tag":377,"props":998,"children":999},{"style":708},[1000],{"type":335,"value":955},{"type":330,"tag":377,"props":1002,"children":1003},{"style":553},[1004],{"type":335,"value":1005}," // 染红色\n",{"type":330,"tag":377,"props":1007,"children":1009},{"class":379,"line":1008},17,[1010],{"type":330,"tag":377,"props":1011,"children":1012},{"style":638},[1013],{"type":335,"value":1014},"    }\n",{"type":330,"tag":377,"props":1016,"children":1018},{"class":379,"line":1017},18,[1019],{"type":330,"tag":377,"props":1020,"children":1021},{"style":638},[1022],{"type":335,"value":1023},"  }\n",{"type":330,"tag":377,"props":1025,"children":1027},{"class":379,"line":1026},19,[1028,1033,1037,1041,1046,1051],{"type":330,"tag":377,"props":1029,"children":1030},{"style":784},[1031],{"type":335,"value":1032},"  return",{"type":330,"tag":377,"props":1034,"children":1035},{"style":682},[1036],{"type":335,"value":694},{"type":330,"tag":377,"props":1038,"children":1039},{"style":638},[1040],{"type":335,"value":892},{"type":330,"tag":377,"props":1042,"children":1043},{"style":682},[1044],{"type":335,"value":1045},"r",{"type":330,"tag":377,"props":1047,"children":1048},{"style":638},[1049],{"type":335,"value":1050},"]",{"type":330,"tag":377,"props":1052,"children":1053},{"style":708},[1054],{"type":335,"value":711},{"type":330,"tag":377,"props":1056,"children":1058},{"class":379,"line":1057},20,[1059,1064],{"type":330,"tag":377,"props":1060,"children":1061},{"style":638},[1062],{"type":335,"value":1063},"}",{"type":330,"tag":377,"props":1065,"children":1066},{"style":708},[1067],{"type":335,"value":711},{"type":330,"tag":1069,"props":1070,"children":1071},"style",{},[1072],{"type":335,"value":1073},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":323,"searchDepth":611,"depth":611,"links":1075},[1076,1077],{"id":513,"depth":389,"text":513},{"id":536,"depth":389,"text":536},"markdown","content:2.code:1.algorithm:2.leetcode:153.find-minimum-in-rotated-sorted-array.md","content","2.code/1.algorithm/2.leetcode/153.find-minimum-in-rotated-sorted-array.md","md",[1084,1086],{"_path":179,"title":178,"description":1085},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",{"_path":185,"title":184,"description":1087},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",1712112509869]