[{"data":1,"prerenderedAt":1127},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array":359,"/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array-surround":1122},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,269,318],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263,266],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.165 比较版本号","/code/algorithm/leetcode/compare-version-numbers",{"title":198,"_path":199},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":201,"_path":202},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":204,"_path":205},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":207,"_path":208},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":210,"_path":211},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":213,"_path":214},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":216,"_path":217},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":219,"_path":220},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":222,"_path":223},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":225,"_path":226},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":228,"_path":229},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":231,"_path":232},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":234,"_path":235},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":237,"_path":238},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":240,"_path":241},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":243,"_path":244},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":246,"_path":247},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":249,"_path":250},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":252,"_path":253},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":255,"_path":256},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":258,"_path":259},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":261,"_path":262},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":264,"_path":265},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":267,"_path":268},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":270,"_path":271,"children":272},"源码实现","/code/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/code/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/code/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/code/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/code/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/code/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/code/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/code/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/code/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/code/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/code/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/code/source/string",[315],{"title":316,"_path":317},"repeat()","/code/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/code/scene",[322,344,347,350,353,356],{"title":323,"_path":324,"children":325},"Promise","/code/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/code/scene/calcuate-object-bytes",{"title":348,"_path":349},"lodash.get","/code/scene/lodash-get",{"title":351,"_path":352},"记忆化请求函数 - 可缓存请求函数","/code/scene/memorize-request",{"title":354,"_path":355},"sku 算法实现","/code/scene/sku",{"title":357,"_path":358},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":184,"_dir":360,"_draft":361,"_partial":361,"_locale":362,"title":183,"description":363,"url":364,"body":365,"_type":1117,"_id":1118,"_source":1119,"_file":1120,"_extension":1121},"leetcode",false,"","已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：","https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array",{"type":366,"children":367,"toc":1113},"root",[368,375,390,395,400,405,444,449,480,485,516,521,549,555,573,578,1107],{"type":369,"tag":370,"props":371,"children":372},"element","p",{},[373],{"type":374,"value":363},"text",{"type":369,"tag":376,"props":377,"children":378},"ul",{},[379,385],{"type":369,"tag":380,"props":381,"children":382},"li",{},[383],{"type":374,"value":384},"若旋转 4 次，则可以得到 [4,5,6,7,0,1,2]",{"type":369,"tag":380,"props":386,"children":387},{},[388],{"type":374,"value":389},"若旋转 7 次，则可以得到 [0,1,2,4,5,6,7]\n注意，数组 [a[0], a[1], a[2], ..., a[n-1]] 旋转一次 的结果为数组 [a[n-1], a[0], a[1], a[2], ..., a[n-2]] 。",{"type":369,"tag":370,"props":391,"children":392},{},[393],{"type":374,"value":394},"给你一个元素值 互不相同 的数组 nums ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 最小元素 。",{"type":369,"tag":370,"props":396,"children":397},{},[398],{"type":374,"value":399},"你必须设计一个时间复杂度为 O(log n) 的算法解决此问题。",{"type":369,"tag":370,"props":401,"children":402},{},[403],{"type":374,"value":404},"示例 1：",{"type":369,"tag":406,"props":407,"children":410},"pre",{"className":408,"code":409,"language":374,"meta":362,"style":362},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [3,4,5,1,2]\n输出：1\n解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",[411],{"type":369,"tag":412,"props":413,"children":414},"code",{"__ignoreMap":362},[415,426,435],{"type":369,"tag":416,"props":417,"children":420},"span",{"class":418,"line":419},"line",1,[421],{"type":369,"tag":416,"props":422,"children":423},{},[424],{"type":374,"value":425},"输入：nums = [3,4,5,1,2]\n",{"type":369,"tag":416,"props":427,"children":429},{"class":418,"line":428},2,[430],{"type":369,"tag":416,"props":431,"children":432},{},[433],{"type":374,"value":434},"输出：1\n",{"type":369,"tag":416,"props":436,"children":438},{"class":418,"line":437},3,[439],{"type":369,"tag":416,"props":440,"children":441},{},[442],{"type":374,"value":443},"解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",{"type":369,"tag":370,"props":445,"children":446},{},[447],{"type":374,"value":448},"示例 2：",{"type":369,"tag":406,"props":450,"children":452},{"className":408,"code":451,"language":374,"meta":362,"style":362},"输入：nums = [4,5,6,7,0,1,2]\n输出：0\n解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",[453],{"type":369,"tag":412,"props":454,"children":455},{"__ignoreMap":362},[456,464,472],{"type":369,"tag":416,"props":457,"children":458},{"class":418,"line":419},[459],{"type":369,"tag":416,"props":460,"children":461},{},[462],{"type":374,"value":463},"输入：nums = [4,5,6,7,0,1,2]\n",{"type":369,"tag":416,"props":465,"children":466},{"class":418,"line":428},[467],{"type":369,"tag":416,"props":468,"children":469},{},[470],{"type":374,"value":471},"输出：0\n",{"type":369,"tag":416,"props":473,"children":474},{"class":418,"line":437},[475],{"type":369,"tag":416,"props":476,"children":477},{},[478],{"type":374,"value":479},"解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",{"type":369,"tag":370,"props":481,"children":482},{},[483],{"type":374,"value":484},"示例 3：",{"type":369,"tag":406,"props":486,"children":488},{"className":408,"code":487,"language":374,"meta":362,"style":362},"输入：nums = [11,13,15,17]\n输出：11\n解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",[489],{"type":369,"tag":412,"props":490,"children":491},{"__ignoreMap":362},[492,500,508],{"type":369,"tag":416,"props":493,"children":494},{"class":418,"line":419},[495],{"type":369,"tag":416,"props":496,"children":497},{},[498],{"type":374,"value":499},"输入：nums = [11,13,15,17]\n",{"type":369,"tag":416,"props":501,"children":502},{"class":418,"line":428},[503],{"type":369,"tag":416,"props":504,"children":505},{},[506],{"type":374,"value":507},"输出：11\n",{"type":369,"tag":416,"props":509,"children":510},{"class":418,"line":437},[511],{"type":369,"tag":416,"props":512,"children":513},{},[514],{"type":374,"value":515},"解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",{"type":369,"tag":370,"props":517,"children":518},{},[519],{"type":374,"value":520},"提示：",{"type":369,"tag":376,"props":522,"children":523},{},[524,529,534,539,544],{"type":369,"tag":380,"props":525,"children":526},{},[527],{"type":374,"value":528},"n == nums.length",{"type":369,"tag":380,"props":530,"children":531},{},[532],{"type":374,"value":533},"1 \u003C= n \u003C= 5000",{"type":369,"tag":380,"props":535,"children":536},{},[537],{"type":374,"value":538},"-5000 \u003C= nums[i] \u003C= 5000",{"type":369,"tag":380,"props":540,"children":541},{},[542],{"type":374,"value":543},"nums 中的所有整数 互不相同",{"type":369,"tag":380,"props":545,"children":546},{},[547],{"type":374,"value":548},"nums 原来是一个升序排序的数组，并进行了 1 至 n 次旋转",{"type":369,"tag":550,"props":551,"children":553},"h2",{"id":552},"解题思路",[554],{"type":374,"value":552},{"type":369,"tag":376,"props":556,"children":557},{},[558,563,568],{"type":369,"tag":380,"props":559,"children":560},{},[561],{"type":374,"value":562},"经过分析，红色即最小值左侧，蓝色即最小值及其右侧",{"type":369,"tag":380,"props":564,"children":565},{},[566],{"type":374,"value":567},"n - 1 一定是蓝色",{"type":369,"tag":380,"props":569,"children":570},{},[571],{"type":374,"value":572},"总结：小于最后一个数，就是蓝色，否则就是红色",{"type":369,"tag":550,"props":574,"children":576},{"id":575},"实现",[577],{"type":374,"value":575},{"type":369,"tag":406,"props":579,"children":583},{"className":580,"code":581,"language":582,"meta":362,"style":362},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMin = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let len = nums.length;\n  let l = -1;\n  let r = len - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] \u003C nums[len - 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return nums[r];\n};\n","js",[584],{"type":369,"tag":412,"props":585,"children":586},{"__ignoreMap":362},[587,596,622,639,648,692,701,710,751,783,817,858,910,973,1000,1019,1045,1054,1063,1094],{"type":369,"tag":416,"props":588,"children":589},{"class":418,"line":419},[590],{"type":369,"tag":416,"props":591,"children":593},{"style":592},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[594],{"type":374,"value":595},"/**\n",{"type":369,"tag":416,"props":597,"children":598},{"class":418,"line":428},[599,604,610,616],{"type":369,"tag":416,"props":600,"children":601},{"style":592},[602],{"type":374,"value":603}," * ",{"type":369,"tag":416,"props":605,"children":607},{"style":606},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[608],{"type":374,"value":609},"@param",{"type":369,"tag":416,"props":611,"children":613},{"style":612},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[614],{"type":374,"value":615}," {number[]}",{"type":369,"tag":416,"props":617,"children":619},{"style":618},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[620],{"type":374,"value":621}," nums\n",{"type":369,"tag":416,"props":623,"children":624},{"class":418,"line":437},[625,629,634],{"type":369,"tag":416,"props":626,"children":627},{"style":592},[628],{"type":374,"value":603},{"type":369,"tag":416,"props":630,"children":631},{"style":606},[632],{"type":374,"value":633},"@return",{"type":369,"tag":416,"props":635,"children":636},{"style":612},[637],{"type":374,"value":638}," {number}\n",{"type":369,"tag":416,"props":640,"children":642},{"class":418,"line":641},4,[643],{"type":369,"tag":416,"props":644,"children":645},{"style":592},[646],{"type":374,"value":647}," */\n",{"type":369,"tag":416,"props":649,"children":651},{"class":418,"line":650},5,[652,658,664,670,675,681,687],{"type":369,"tag":416,"props":653,"children":655},{"style":654},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[656],{"type":374,"value":657},"var",{"type":369,"tag":416,"props":659,"children":661},{"style":660},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[662],{"type":374,"value":663}," findMin",{"type":369,"tag":416,"props":665,"children":667},{"style":666},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[668],{"type":374,"value":669}," =",{"type":369,"tag":416,"props":671,"children":672},{"style":654},[673],{"type":374,"value":674}," function",{"type":369,"tag":416,"props":676,"children":678},{"style":677},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[679],{"type":374,"value":680}," (",{"type":369,"tag":416,"props":682,"children":684},{"style":683},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[685],{"type":374,"value":686},"nums",{"type":369,"tag":416,"props":688,"children":689},{"style":677},[690],{"type":374,"value":691},") {\n",{"type":369,"tag":416,"props":693,"children":695},{"class":418,"line":694},6,[696],{"type":369,"tag":416,"props":697,"children":698},{"style":592},[699],{"type":374,"value":700},"  // [0, n - 2]\n",{"type":369,"tag":416,"props":702,"children":704},{"class":418,"line":703},7,[705],{"type":369,"tag":416,"props":706,"children":707},{"style":592},[708],{"type":374,"value":709},"  // (-1, n - 1) 开区间写法\n",{"type":369,"tag":416,"props":711,"children":713},{"class":418,"line":712},8,[714,719,725,729,734,740,745],{"type":369,"tag":416,"props":715,"children":716},{"style":654},[717],{"type":374,"value":718},"  let",{"type":369,"tag":416,"props":720,"children":722},{"style":721},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[723],{"type":374,"value":724}," len",{"type":369,"tag":416,"props":726,"children":727},{"style":666},[728],{"type":374,"value":669},{"type":369,"tag":416,"props":730,"children":731},{"style":721},[732],{"type":374,"value":733}," nums",{"type":369,"tag":416,"props":735,"children":737},{"style":736},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[738],{"type":374,"value":739},".",{"type":369,"tag":416,"props":741,"children":742},{"style":677},[743],{"type":374,"value":744},"length",{"type":369,"tag":416,"props":746,"children":748},{"style":747},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[749],{"type":374,"value":750},";\n",{"type":369,"tag":416,"props":752,"children":754},{"class":418,"line":753},9,[755,759,764,768,773,779],{"type":369,"tag":416,"props":756,"children":757},{"style":654},[758],{"type":374,"value":718},{"type":369,"tag":416,"props":760,"children":761},{"style":721},[762],{"type":374,"value":763}," l",{"type":369,"tag":416,"props":765,"children":766},{"style":666},[767],{"type":374,"value":669},{"type":369,"tag":416,"props":769,"children":770},{"style":666},[771],{"type":374,"value":772}," -",{"type":369,"tag":416,"props":774,"children":776},{"style":775},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[777],{"type":374,"value":778},"1",{"type":369,"tag":416,"props":780,"children":781},{"style":747},[782],{"type":374,"value":750},{"type":369,"tag":416,"props":784,"children":786},{"class":418,"line":785},10,[787,791,796,800,804,808,813],{"type":369,"tag":416,"props":788,"children":789},{"style":654},[790],{"type":374,"value":718},{"type":369,"tag":416,"props":792,"children":793},{"style":721},[794],{"type":374,"value":795}," r",{"type":369,"tag":416,"props":797,"children":798},{"style":666},[799],{"type":374,"value":669},{"type":369,"tag":416,"props":801,"children":802},{"style":721},[803],{"type":374,"value":724},{"type":369,"tag":416,"props":805,"children":806},{"style":666},[807],{"type":374,"value":772},{"type":369,"tag":416,"props":809,"children":810},{"style":775},[811],{"type":374,"value":812}," 1",{"type":369,"tag":416,"props":814,"children":815},{"style":747},[816],{"type":374,"value":750},{"type":369,"tag":416,"props":818,"children":820},{"class":418,"line":819},11,[821,827,831,836,841,845,850,854],{"type":369,"tag":416,"props":822,"children":824},{"style":823},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[825],{"type":374,"value":826},"  while",{"type":369,"tag":416,"props":828,"children":829},{"style":677},[830],{"type":374,"value":680},{"type":369,"tag":416,"props":832,"children":833},{"style":721},[834],{"type":374,"value":835},"l",{"type":369,"tag":416,"props":837,"children":838},{"style":666},[839],{"type":374,"value":840}," +",{"type":369,"tag":416,"props":842,"children":843},{"style":775},[844],{"type":374,"value":812},{"type":369,"tag":416,"props":846,"children":847},{"style":666},[848],{"type":374,"value":849}," \u003C",{"type":369,"tag":416,"props":851,"children":852},{"style":721},[853],{"type":374,"value":795},{"type":369,"tag":416,"props":855,"children":856},{"style":677},[857],{"type":374,"value":691},{"type":369,"tag":416,"props":859,"children":861},{"class":418,"line":860},12,[862,867,872,876,880,884,888,892,897,902,906],{"type":369,"tag":416,"props":863,"children":864},{"style":654},[865],{"type":374,"value":866},"    let",{"type":369,"tag":416,"props":868,"children":869},{"style":721},[870],{"type":374,"value":871}," mid",{"type":369,"tag":416,"props":873,"children":874},{"style":666},[875],{"type":374,"value":669},{"type":369,"tag":416,"props":877,"children":878},{"style":677},[879],{"type":374,"value":680},{"type":369,"tag":416,"props":881,"children":882},{"style":721},[883],{"type":374,"value":835},{"type":369,"tag":416,"props":885,"children":886},{"style":666},[887],{"type":374,"value":840},{"type":369,"tag":416,"props":889,"children":890},{"style":721},[891],{"type":374,"value":795},{"type":369,"tag":416,"props":893,"children":894},{"style":677},[895],{"type":374,"value":896},") ",{"type":369,"tag":416,"props":898,"children":899},{"style":666},[900],{"type":374,"value":901},">>",{"type":369,"tag":416,"props":903,"children":904},{"style":775},[905],{"type":374,"value":812},{"type":369,"tag":416,"props":907,"children":908},{"style":747},[909],{"type":374,"value":750},{"type":369,"tag":416,"props":911,"children":913},{"class":418,"line":912},13,[914,919,923,927,932,937,942,947,951,955,960,964,968],{"type":369,"tag":416,"props":915,"children":916},{"style":823},[917],{"type":374,"value":918},"    if",{"type":369,"tag":416,"props":920,"children":921},{"style":677},[922],{"type":374,"value":680},{"type":369,"tag":416,"props":924,"children":925},{"style":721},[926],{"type":374,"value":686},{"type":369,"tag":416,"props":928,"children":929},{"style":677},[930],{"type":374,"value":931},"[",{"type":369,"tag":416,"props":933,"children":934},{"style":721},[935],{"type":374,"value":936},"mid",{"type":369,"tag":416,"props":938,"children":939},{"style":677},[940],{"type":374,"value":941},"] ",{"type":369,"tag":416,"props":943,"children":944},{"style":666},[945],{"type":374,"value":946},"\u003C",{"type":369,"tag":416,"props":948,"children":949},{"style":721},[950],{"type":374,"value":733},{"type":369,"tag":416,"props":952,"children":953},{"style":677},[954],{"type":374,"value":931},{"type":369,"tag":416,"props":956,"children":957},{"style":721},[958],{"type":374,"value":959},"len",{"type":369,"tag":416,"props":961,"children":962},{"style":666},[963],{"type":374,"value":772},{"type":369,"tag":416,"props":965,"children":966},{"style":775},[967],{"type":374,"value":812},{"type":369,"tag":416,"props":969,"children":970},{"style":677},[971],{"type":374,"value":972},"]) {\n",{"type":369,"tag":416,"props":974,"children":976},{"class":418,"line":975},14,[977,982,986,990,995],{"type":369,"tag":416,"props":978,"children":979},{"style":721},[980],{"type":374,"value":981},"      r",{"type":369,"tag":416,"props":983,"children":984},{"style":666},[985],{"type":374,"value":669},{"type":369,"tag":416,"props":987,"children":988},{"style":721},[989],{"type":374,"value":871},{"type":369,"tag":416,"props":991,"children":992},{"style":747},[993],{"type":374,"value":994},";",{"type":369,"tag":416,"props":996,"children":997},{"style":592},[998],{"type":374,"value":999}," // 染蓝色\n",{"type":369,"tag":416,"props":1001,"children":1003},{"class":418,"line":1002},15,[1004,1009,1014],{"type":369,"tag":416,"props":1005,"children":1006},{"style":677},[1007],{"type":374,"value":1008},"    } ",{"type":369,"tag":416,"props":1010,"children":1011},{"style":823},[1012],{"type":374,"value":1013},"else",{"type":369,"tag":416,"props":1015,"children":1016},{"style":677},[1017],{"type":374,"value":1018}," {\n",{"type":369,"tag":416,"props":1020,"children":1022},{"class":418,"line":1021},16,[1023,1028,1032,1036,1040],{"type":369,"tag":416,"props":1024,"children":1025},{"style":721},[1026],{"type":374,"value":1027},"      l",{"type":369,"tag":416,"props":1029,"children":1030},{"style":666},[1031],{"type":374,"value":669},{"type":369,"tag":416,"props":1033,"children":1034},{"style":721},[1035],{"type":374,"value":871},{"type":369,"tag":416,"props":1037,"children":1038},{"style":747},[1039],{"type":374,"value":994},{"type":369,"tag":416,"props":1041,"children":1042},{"style":592},[1043],{"type":374,"value":1044}," // 染红色\n",{"type":369,"tag":416,"props":1046,"children":1048},{"class":418,"line":1047},17,[1049],{"type":369,"tag":416,"props":1050,"children":1051},{"style":677},[1052],{"type":374,"value":1053},"    }\n",{"type":369,"tag":416,"props":1055,"children":1057},{"class":418,"line":1056},18,[1058],{"type":369,"tag":416,"props":1059,"children":1060},{"style":677},[1061],{"type":374,"value":1062},"  }\n",{"type":369,"tag":416,"props":1064,"children":1066},{"class":418,"line":1065},19,[1067,1072,1076,1080,1085,1090],{"type":369,"tag":416,"props":1068,"children":1069},{"style":823},[1070],{"type":374,"value":1071},"  return",{"type":369,"tag":416,"props":1073,"children":1074},{"style":721},[1075],{"type":374,"value":733},{"type":369,"tag":416,"props":1077,"children":1078},{"style":677},[1079],{"type":374,"value":931},{"type":369,"tag":416,"props":1081,"children":1082},{"style":721},[1083],{"type":374,"value":1084},"r",{"type":369,"tag":416,"props":1086,"children":1087},{"style":677},[1088],{"type":374,"value":1089},"]",{"type":369,"tag":416,"props":1091,"children":1092},{"style":747},[1093],{"type":374,"value":750},{"type":369,"tag":416,"props":1095,"children":1097},{"class":418,"line":1096},20,[1098,1103],{"type":369,"tag":416,"props":1099,"children":1100},{"style":677},[1101],{"type":374,"value":1102},"}",{"type":369,"tag":416,"props":1104,"children":1105},{"style":747},[1106],{"type":374,"value":750},{"type":369,"tag":1108,"props":1109,"children":1110},"style",{},[1111],{"type":374,"value":1112},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":362,"searchDepth":650,"depth":650,"links":1114},[1115,1116],{"id":552,"depth":428,"text":552},{"id":575,"depth":428,"text":575},"markdown","content:2.code:1.algorithm:3.leetcode:153.find-minimum-in-rotated-sorted-array.md","content","2.code/1.algorithm/3.leetcode/153.find-minimum-in-rotated-sorted-array.md","md",[1123,1125],{"_path":181,"title":180,"description":1124},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",{"_path":187,"title":186,"description":1126},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",1712748639093]