[{"data":1,"prerenderedAt":1173},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array":314,"/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array-surround":1168},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,258,307],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,47],{"title":41,"_path":42,"children":43},"剑指 offer","/code/algorithm/sword-ofter",[44],{"title":45,"_path":46},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":48,"_path":49,"children":50},"力扣 leetCode","/code/algorithm/leetcode",[51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255],{"title":52,"_path":53},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":55,"_path":56},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":58,"_path":59},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":61,"_path":62},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":64,"_path":65},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":67,"_path":68},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":70,"_path":71},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":73,"_path":74},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":76,"_path":77},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":79,"_path":80},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":82,"_path":83},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":85,"_path":86},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":88,"_path":89},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":91,"_path":92},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":94,"_path":95},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":97,"_path":98},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":100,"_path":101},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":103,"_path":104},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":106,"_path":107},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":109,"_path":110},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":112,"_path":113},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":115,"_path":116},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":118,"_path":119},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":121,"_path":122},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":124,"_path":125},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":127,"_path":128},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":130,"_path":131},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":133,"_path":134},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":136,"_path":137},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":139,"_path":140},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":142,"_path":143},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":145,"_path":146},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":148,"_path":149},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":151,"_path":152},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":154,"_path":155},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":157,"_path":158},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":160,"_path":161},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":163,"_path":164},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":166,"_path":167},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":169,"_path":170},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":172,"_path":173},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":175,"_path":176},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":178,"_path":179},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":181,"_path":182},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":184,"_path":185},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":187,"_path":188},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":190,"_path":191},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":193,"_path":194},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":196,"_path":197},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":199,"_path":200},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":202,"_path":203},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":205,"_path":206},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":208,"_path":209},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":211,"_path":212},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":214,"_path":215},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":217,"_path":218},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":220,"_path":221},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":223,"_path":224},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":226,"_path":227},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":229,"_path":230},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":232,"_path":233},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":235,"_path":236},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":238,"_path":239},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":241,"_path":242},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":244,"_path":245},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":247,"_path":248},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":250,"_path":251},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":253,"_path":254},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":256,"_path":257},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":259,"_path":260,"children":261},"源码实现","/code/source",[262,287,300],{"title":263,"_path":264,"children":265},"原生 api","/code/source/native-api",[266,269,272,275,278,281,284],{"title":267,"_path":268},"ajax","/code/source/native-api/ajax",{"title":270,"_path":271},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":273,"_path":274},"new 操作符","/code/source/native-api/new",{"title":276,"_path":277},"instanceof 关键字","/code/source/native-api/instanceof",{"title":279,"_path":280},"定时器","/code/source/native-api/timer",{"title":282,"_path":283},"JSON.stringify","/code/source/native-api/json-stringify",{"title":285,"_path":286},"Iterator 迭代器","/code/source/native-api/iterator",{"title":288,"_path":289,"children":290},"数组 Array","/code/source/array",[291,294,297],{"title":292,"_path":293},"数组去重","/code/source/array/remove-duplicate",{"title":295,"_path":296},"数组扁平化","/code/source/array/flat",{"title":298,"_path":299},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":301,"_path":302,"children":303},"字符串 String","/code/source/string",[304],{"title":305,"_path":306},"repeat()","/code/source/string/repeat",{"title":308,"_path":309,"children":310},"业务场景","/code/scene",[311],{"title":312,"_path":313},"顺序打印 url 并支持 retry","/code/scene/promise-url-retry",{"_path":176,"_dir":315,"_draft":316,"_partial":316,"_locale":317,"title":175,"description":318,"url":319,"body":320,"_type":1164,"_id":1165,"_source":1166,"_file":1167,"_extension":365},"leetcode",false,"","已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：","https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array",{"type":321,"children":322,"toc":1160},"root",[323,330,345,350,355,360,437,442,501,506,565,570,598,604,622,627,1154],{"type":324,"tag":325,"props":326,"children":327},"element","p",{},[328],{"type":329,"value":318},"text",{"type":324,"tag":331,"props":332,"children":333},"ul",{},[334,340],{"type":324,"tag":335,"props":336,"children":337},"li",{},[338],{"type":329,"value":339},"若旋转 4 次，则可以得到 [4,5,6,7,0,1,2]",{"type":324,"tag":335,"props":341,"children":342},{},[343],{"type":329,"value":344},"若旋转 7 次，则可以得到 [0,1,2,4,5,6,7]\n注意，数组 [a[0], a[1], a[2], ..., a[n-1]] 旋转一次 的结果为数组 [a[n-1], a[0], a[1], a[2], ..., a[n-2]] 。",{"type":324,"tag":325,"props":346,"children":347},{},[348],{"type":329,"value":349},"给你一个元素值 互不相同 的数组 nums ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 最小元素 。",{"type":324,"tag":325,"props":351,"children":352},{},[353],{"type":329,"value":354},"你必须设计一个时间复杂度为 O(log n) 的算法解决此问题。",{"type":324,"tag":325,"props":356,"children":357},{},[358],{"type":329,"value":359},"示例 1：",{"type":324,"tag":361,"props":362,"children":366},"pre",{"className":363,"code":364,"language":365,"meta":317,"style":317},"language-md shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [3,4,5,1,2]\n输出：1\n解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n","md",[367],{"type":324,"tag":368,"props":369,"children":370},"code",{"__ignoreMap":317},[371,400,409],{"type":324,"tag":372,"props":373,"children":376},"span",{"class":374,"line":375},"line",1,[377,383,389,395],{"type":324,"tag":372,"props":378,"children":380},{"style":379},"--shiki-light:#110000;--shiki-default:#110000;--shiki-dark:#BFBDB6",[381],{"type":329,"value":382},"输入：nums = ",{"type":324,"tag":372,"props":384,"children":386},{"style":385},"--shiki-light:#87429A;--shiki-default:#87429A;--shiki-dark:#BFBDB6",[387],{"type":329,"value":388},"[",{"type":324,"tag":372,"props":390,"children":392},{"style":391},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#39BAE6",[393],{"type":329,"value":394},"3,4,5,1,2",{"type":324,"tag":372,"props":396,"children":397},{"style":385},[398],{"type":329,"value":399},"]\n",{"type":324,"tag":372,"props":401,"children":403},{"class":374,"line":402},2,[404],{"type":324,"tag":372,"props":405,"children":406},{"style":379},[407],{"type":329,"value":408},"输出：1\n",{"type":324,"tag":372,"props":410,"children":412},{"class":374,"line":411},3,[413,418,422,427,432],{"type":324,"tag":372,"props":414,"children":415},{"style":379},[416],{"type":329,"value":417},"解释：原数组为 ",{"type":324,"tag":372,"props":419,"children":420},{"style":385},[421],{"type":329,"value":388},{"type":324,"tag":372,"props":423,"children":424},{"style":391},[425],{"type":329,"value":426},"1,2,3,4,5",{"type":324,"tag":372,"props":428,"children":429},{"style":385},[430],{"type":329,"value":431},"]",{"type":324,"tag":372,"props":433,"children":434},{"style":379},[435],{"type":329,"value":436}," ，旋转 3 次得到输入数组。\n",{"type":324,"tag":325,"props":438,"children":439},{},[440],{"type":329,"value":441},"示例 2：",{"type":324,"tag":361,"props":443,"children":445},{"className":363,"code":444,"language":365,"meta":317,"style":317},"输入：nums = [4,5,6,7,0,1,2]\n输出：0\n解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",[446],{"type":324,"tag":368,"props":447,"children":448},{"__ignoreMap":317},[449,469,477],{"type":324,"tag":372,"props":450,"children":451},{"class":374,"line":375},[452,456,460,465],{"type":324,"tag":372,"props":453,"children":454},{"style":379},[455],{"type":329,"value":382},{"type":324,"tag":372,"props":457,"children":458},{"style":385},[459],{"type":329,"value":388},{"type":324,"tag":372,"props":461,"children":462},{"style":391},[463],{"type":329,"value":464},"4,5,6,7,0,1,2",{"type":324,"tag":372,"props":466,"children":467},{"style":385},[468],{"type":329,"value":399},{"type":324,"tag":372,"props":470,"children":471},{"class":374,"line":402},[472],{"type":324,"tag":372,"props":473,"children":474},{"style":379},[475],{"type":329,"value":476},"输出：0\n",{"type":324,"tag":372,"props":478,"children":479},{"class":374,"line":411},[480,484,488,493,497],{"type":324,"tag":372,"props":481,"children":482},{"style":379},[483],{"type":329,"value":417},{"type":324,"tag":372,"props":485,"children":486},{"style":385},[487],{"type":329,"value":388},{"type":324,"tag":372,"props":489,"children":490},{"style":391},[491],{"type":329,"value":492},"0,1,2,4,5,6,7",{"type":324,"tag":372,"props":494,"children":495},{"style":385},[496],{"type":329,"value":431},{"type":324,"tag":372,"props":498,"children":499},{"style":379},[500],{"type":329,"value":436},{"type":324,"tag":325,"props":502,"children":503},{},[504],{"type":329,"value":505},"示例 3：",{"type":324,"tag":361,"props":507,"children":509},{"className":363,"code":508,"language":365,"meta":317,"style":317},"输入：nums = [11,13,15,17]\n输出：11\n解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",[510],{"type":324,"tag":368,"props":511,"children":512},{"__ignoreMap":317},[513,533,541],{"type":324,"tag":372,"props":514,"children":515},{"class":374,"line":375},[516,520,524,529],{"type":324,"tag":372,"props":517,"children":518},{"style":379},[519],{"type":329,"value":382},{"type":324,"tag":372,"props":521,"children":522},{"style":385},[523],{"type":329,"value":388},{"type":324,"tag":372,"props":525,"children":526},{"style":391},[527],{"type":329,"value":528},"11,13,15,17",{"type":324,"tag":372,"props":530,"children":531},{"style":385},[532],{"type":329,"value":399},{"type":324,"tag":372,"props":534,"children":535},{"class":374,"line":402},[536],{"type":324,"tag":372,"props":537,"children":538},{"style":379},[539],{"type":329,"value":540},"输出：11\n",{"type":324,"tag":372,"props":542,"children":543},{"class":374,"line":411},[544,548,552,556,560],{"type":324,"tag":372,"props":545,"children":546},{"style":379},[547],{"type":329,"value":417},{"type":324,"tag":372,"props":549,"children":550},{"style":385},[551],{"type":329,"value":388},{"type":324,"tag":372,"props":553,"children":554},{"style":391},[555],{"type":329,"value":528},{"type":324,"tag":372,"props":557,"children":558},{"style":385},[559],{"type":329,"value":431},{"type":324,"tag":372,"props":561,"children":562},{"style":379},[563],{"type":329,"value":564}," ，旋转 4 次得到输入数组。\n",{"type":324,"tag":325,"props":566,"children":567},{},[568],{"type":329,"value":569},"提示：",{"type":324,"tag":331,"props":571,"children":572},{},[573,578,583,588,593],{"type":324,"tag":335,"props":574,"children":575},{},[576],{"type":329,"value":577},"n == nums.length",{"type":324,"tag":335,"props":579,"children":580},{},[581],{"type":329,"value":582},"1 \u003C= n \u003C= 5000",{"type":324,"tag":335,"props":584,"children":585},{},[586],{"type":329,"value":587},"-5000 \u003C= nums[i] \u003C= 5000",{"type":324,"tag":335,"props":589,"children":590},{},[591],{"type":329,"value":592},"nums 中的所有整数 互不相同",{"type":324,"tag":335,"props":594,"children":595},{},[596],{"type":329,"value":597},"nums 原来是一个升序排序的数组，并进行了 1 至 n 次旋转",{"type":324,"tag":599,"props":600,"children":602},"h2",{"id":601},"解题思路",[603],{"type":329,"value":601},{"type":324,"tag":331,"props":605,"children":606},{},[607,612,617],{"type":324,"tag":335,"props":608,"children":609},{},[610],{"type":329,"value":611},"经过分析，红色即最小值左侧，蓝色即最小值及其右侧",{"type":324,"tag":335,"props":613,"children":614},{},[615],{"type":329,"value":616},"n - 1 一定是蓝色",{"type":324,"tag":335,"props":618,"children":619},{},[620],{"type":329,"value":621},"总结：小于最后一个数，就是蓝色，否则就是红色",{"type":324,"tag":599,"props":623,"children":625},{"id":624},"实现",[626],{"type":329,"value":624},{"type":324,"tag":361,"props":628,"children":632},{"className":629,"code":630,"language":631,"meta":317,"style":317},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMin = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let len = nums.length;\n  let l = -1;\n  let r = len - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] \u003C nums[len - 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return nums[r];\n};\n","js",[633],{"type":324,"tag":368,"props":634,"children":635},{"__ignoreMap":317},[636,645,671,688,697,741,750,759,800,832,866,907,959,1021,1048,1067,1093,1102,1111,1141],{"type":324,"tag":372,"props":637,"children":638},{"class":374,"line":375},[639],{"type":324,"tag":372,"props":640,"children":642},{"style":641},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[643],{"type":329,"value":644},"/**\n",{"type":324,"tag":372,"props":646,"children":647},{"class":374,"line":402},[648,653,659,665],{"type":324,"tag":372,"props":649,"children":650},{"style":641},[651],{"type":329,"value":652}," * ",{"type":324,"tag":372,"props":654,"children":656},{"style":655},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[657],{"type":329,"value":658},"@param",{"type":324,"tag":372,"props":660,"children":662},{"style":661},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[663],{"type":329,"value":664}," {number[]}",{"type":324,"tag":372,"props":666,"children":668},{"style":667},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[669],{"type":329,"value":670}," nums\n",{"type":324,"tag":372,"props":672,"children":673},{"class":374,"line":411},[674,678,683],{"type":324,"tag":372,"props":675,"children":676},{"style":641},[677],{"type":329,"value":652},{"type":324,"tag":372,"props":679,"children":680},{"style":655},[681],{"type":329,"value":682},"@return",{"type":324,"tag":372,"props":684,"children":685},{"style":661},[686],{"type":329,"value":687}," {number}\n",{"type":324,"tag":372,"props":689,"children":691},{"class":374,"line":690},4,[692],{"type":324,"tag":372,"props":693,"children":694},{"style":641},[695],{"type":329,"value":696}," */\n",{"type":324,"tag":372,"props":698,"children":700},{"class":374,"line":699},5,[701,707,713,719,724,730,736],{"type":324,"tag":372,"props":702,"children":704},{"style":703},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[705],{"type":329,"value":706},"var",{"type":324,"tag":372,"props":708,"children":710},{"style":709},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[711],{"type":329,"value":712}," findMin",{"type":324,"tag":372,"props":714,"children":716},{"style":715},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[717],{"type":329,"value":718}," =",{"type":324,"tag":372,"props":720,"children":721},{"style":703},[722],{"type":329,"value":723}," function",{"type":324,"tag":372,"props":725,"children":727},{"style":726},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[728],{"type":329,"value":729}," (",{"type":324,"tag":372,"props":731,"children":733},{"style":732},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[734],{"type":329,"value":735},"nums",{"type":324,"tag":372,"props":737,"children":738},{"style":726},[739],{"type":329,"value":740},") {\n",{"type":324,"tag":372,"props":742,"children":744},{"class":374,"line":743},6,[745],{"type":324,"tag":372,"props":746,"children":747},{"style":641},[748],{"type":329,"value":749},"  // [0, n - 2]\n",{"type":324,"tag":372,"props":751,"children":753},{"class":374,"line":752},7,[754],{"type":324,"tag":372,"props":755,"children":756},{"style":641},[757],{"type":329,"value":758},"  // (-1, n - 1) 开区间写法\n",{"type":324,"tag":372,"props":760,"children":762},{"class":374,"line":761},8,[763,768,774,778,783,789,794],{"type":324,"tag":372,"props":764,"children":765},{"style":703},[766],{"type":329,"value":767},"  let",{"type":324,"tag":372,"props":769,"children":771},{"style":770},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[772],{"type":329,"value":773}," len",{"type":324,"tag":372,"props":775,"children":776},{"style":715},[777],{"type":329,"value":718},{"type":324,"tag":372,"props":779,"children":780},{"style":770},[781],{"type":329,"value":782}," nums",{"type":324,"tag":372,"props":784,"children":786},{"style":785},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[787],{"type":329,"value":788},".",{"type":324,"tag":372,"props":790,"children":791},{"style":726},[792],{"type":329,"value":793},"length",{"type":324,"tag":372,"props":795,"children":797},{"style":796},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[798],{"type":329,"value":799},";\n",{"type":324,"tag":372,"props":801,"children":803},{"class":374,"line":802},9,[804,808,813,817,822,828],{"type":324,"tag":372,"props":805,"children":806},{"style":703},[807],{"type":329,"value":767},{"type":324,"tag":372,"props":809,"children":810},{"style":770},[811],{"type":329,"value":812}," l",{"type":324,"tag":372,"props":814,"children":815},{"style":715},[816],{"type":329,"value":718},{"type":324,"tag":372,"props":818,"children":819},{"style":715},[820],{"type":329,"value":821}," -",{"type":324,"tag":372,"props":823,"children":825},{"style":824},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[826],{"type":329,"value":827},"1",{"type":324,"tag":372,"props":829,"children":830},{"style":796},[831],{"type":329,"value":799},{"type":324,"tag":372,"props":833,"children":835},{"class":374,"line":834},10,[836,840,845,849,853,857,862],{"type":324,"tag":372,"props":837,"children":838},{"style":703},[839],{"type":329,"value":767},{"type":324,"tag":372,"props":841,"children":842},{"style":770},[843],{"type":329,"value":844}," r",{"type":324,"tag":372,"props":846,"children":847},{"style":715},[848],{"type":329,"value":718},{"type":324,"tag":372,"props":850,"children":851},{"style":770},[852],{"type":329,"value":773},{"type":324,"tag":372,"props":854,"children":855},{"style":715},[856],{"type":329,"value":821},{"type":324,"tag":372,"props":858,"children":859},{"style":824},[860],{"type":329,"value":861}," 1",{"type":324,"tag":372,"props":863,"children":864},{"style":796},[865],{"type":329,"value":799},{"type":324,"tag":372,"props":867,"children":869},{"class":374,"line":868},11,[870,876,880,885,890,894,899,903],{"type":324,"tag":372,"props":871,"children":873},{"style":872},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[874],{"type":329,"value":875},"  while",{"type":324,"tag":372,"props":877,"children":878},{"style":726},[879],{"type":329,"value":729},{"type":324,"tag":372,"props":881,"children":882},{"style":770},[883],{"type":329,"value":884},"l",{"type":324,"tag":372,"props":886,"children":887},{"style":715},[888],{"type":329,"value":889}," +",{"type":324,"tag":372,"props":891,"children":892},{"style":824},[893],{"type":329,"value":861},{"type":324,"tag":372,"props":895,"children":896},{"style":715},[897],{"type":329,"value":898}," \u003C",{"type":324,"tag":372,"props":900,"children":901},{"style":770},[902],{"type":329,"value":844},{"type":324,"tag":372,"props":904,"children":905},{"style":726},[906],{"type":329,"value":740},{"type":324,"tag":372,"props":908,"children":910},{"class":374,"line":909},12,[911,916,921,925,929,933,937,941,946,951,955],{"type":324,"tag":372,"props":912,"children":913},{"style":703},[914],{"type":329,"value":915},"    let",{"type":324,"tag":372,"props":917,"children":918},{"style":770},[919],{"type":329,"value":920}," mid",{"type":324,"tag":372,"props":922,"children":923},{"style":715},[924],{"type":329,"value":718},{"type":324,"tag":372,"props":926,"children":927},{"style":726},[928],{"type":329,"value":729},{"type":324,"tag":372,"props":930,"children":931},{"style":770},[932],{"type":329,"value":884},{"type":324,"tag":372,"props":934,"children":935},{"style":715},[936],{"type":329,"value":889},{"type":324,"tag":372,"props":938,"children":939},{"style":770},[940],{"type":329,"value":844},{"type":324,"tag":372,"props":942,"children":943},{"style":726},[944],{"type":329,"value":945},") ",{"type":324,"tag":372,"props":947,"children":948},{"style":715},[949],{"type":329,"value":950},">>",{"type":324,"tag":372,"props":952,"children":953},{"style":824},[954],{"type":329,"value":861},{"type":324,"tag":372,"props":956,"children":957},{"style":796},[958],{"type":329,"value":799},{"type":324,"tag":372,"props":960,"children":962},{"class":374,"line":961},13,[963,968,972,976,980,985,990,995,999,1003,1008,1012,1016],{"type":324,"tag":372,"props":964,"children":965},{"style":872},[966],{"type":329,"value":967},"    if",{"type":324,"tag":372,"props":969,"children":970},{"style":726},[971],{"type":329,"value":729},{"type":324,"tag":372,"props":973,"children":974},{"style":770},[975],{"type":329,"value":735},{"type":324,"tag":372,"props":977,"children":978},{"style":726},[979],{"type":329,"value":388},{"type":324,"tag":372,"props":981,"children":982},{"style":770},[983],{"type":329,"value":984},"mid",{"type":324,"tag":372,"props":986,"children":987},{"style":726},[988],{"type":329,"value":989},"] ",{"type":324,"tag":372,"props":991,"children":992},{"style":715},[993],{"type":329,"value":994},"\u003C",{"type":324,"tag":372,"props":996,"children":997},{"style":770},[998],{"type":329,"value":782},{"type":324,"tag":372,"props":1000,"children":1001},{"style":726},[1002],{"type":329,"value":388},{"type":324,"tag":372,"props":1004,"children":1005},{"style":770},[1006],{"type":329,"value":1007},"len",{"type":324,"tag":372,"props":1009,"children":1010},{"style":715},[1011],{"type":329,"value":821},{"type":324,"tag":372,"props":1013,"children":1014},{"style":824},[1015],{"type":329,"value":861},{"type":324,"tag":372,"props":1017,"children":1018},{"style":726},[1019],{"type":329,"value":1020},"]) {\n",{"type":324,"tag":372,"props":1022,"children":1024},{"class":374,"line":1023},14,[1025,1030,1034,1038,1043],{"type":324,"tag":372,"props":1026,"children":1027},{"style":770},[1028],{"type":329,"value":1029},"      r",{"type":324,"tag":372,"props":1031,"children":1032},{"style":715},[1033],{"type":329,"value":718},{"type":324,"tag":372,"props":1035,"children":1036},{"style":770},[1037],{"type":329,"value":920},{"type":324,"tag":372,"props":1039,"children":1040},{"style":796},[1041],{"type":329,"value":1042},";",{"type":324,"tag":372,"props":1044,"children":1045},{"style":641},[1046],{"type":329,"value":1047}," // 染蓝色\n",{"type":324,"tag":372,"props":1049,"children":1051},{"class":374,"line":1050},15,[1052,1057,1062],{"type":324,"tag":372,"props":1053,"children":1054},{"style":726},[1055],{"type":329,"value":1056},"    } ",{"type":324,"tag":372,"props":1058,"children":1059},{"style":872},[1060],{"type":329,"value":1061},"else",{"type":324,"tag":372,"props":1063,"children":1064},{"style":726},[1065],{"type":329,"value":1066}," {\n",{"type":324,"tag":372,"props":1068,"children":1070},{"class":374,"line":1069},16,[1071,1076,1080,1084,1088],{"type":324,"tag":372,"props":1072,"children":1073},{"style":770},[1074],{"type":329,"value":1075},"      l",{"type":324,"tag":372,"props":1077,"children":1078},{"style":715},[1079],{"type":329,"value":718},{"type":324,"tag":372,"props":1081,"children":1082},{"style":770},[1083],{"type":329,"value":920},{"type":324,"tag":372,"props":1085,"children":1086},{"style":796},[1087],{"type":329,"value":1042},{"type":324,"tag":372,"props":1089,"children":1090},{"style":641},[1091],{"type":329,"value":1092}," // 染红色\n",{"type":324,"tag":372,"props":1094,"children":1096},{"class":374,"line":1095},17,[1097],{"type":324,"tag":372,"props":1098,"children":1099},{"style":726},[1100],{"type":329,"value":1101},"    }\n",{"type":324,"tag":372,"props":1103,"children":1105},{"class":374,"line":1104},18,[1106],{"type":324,"tag":372,"props":1107,"children":1108},{"style":726},[1109],{"type":329,"value":1110},"  }\n",{"type":324,"tag":372,"props":1112,"children":1114},{"class":374,"line":1113},19,[1115,1120,1124,1128,1133,1137],{"type":324,"tag":372,"props":1116,"children":1117},{"style":872},[1118],{"type":329,"value":1119},"  return",{"type":324,"tag":372,"props":1121,"children":1122},{"style":770},[1123],{"type":329,"value":782},{"type":324,"tag":372,"props":1125,"children":1126},{"style":726},[1127],{"type":329,"value":388},{"type":324,"tag":372,"props":1129,"children":1130},{"style":770},[1131],{"type":329,"value":1132},"r",{"type":324,"tag":372,"props":1134,"children":1135},{"style":726},[1136],{"type":329,"value":431},{"type":324,"tag":372,"props":1138,"children":1139},{"style":796},[1140],{"type":329,"value":799},{"type":324,"tag":372,"props":1142,"children":1144},{"class":374,"line":1143},20,[1145,1150],{"type":324,"tag":372,"props":1146,"children":1147},{"style":726},[1148],{"type":329,"value":1149},"}",{"type":324,"tag":372,"props":1151,"children":1152},{"style":796},[1153],{"type":329,"value":799},{"type":324,"tag":1155,"props":1156,"children":1157},"style",{},[1158],{"type":329,"value":1159},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":317,"searchDepth":699,"depth":699,"links":1161},[1162,1163],{"id":601,"depth":402,"text":601},{"id":624,"depth":402,"text":624},"markdown","content:2.code:1.algorithm:2.leetcode:153.find-minimum-in-rotated-sorted-array.md","content","2.code/1.algorithm/2.leetcode/153.find-minimum-in-rotated-sorted-array.md",[1169,1171],{"_path":173,"title":172,"description":1170},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",{"_path":179,"title":178,"description":1172},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",1712076271406]