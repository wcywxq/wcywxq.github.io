[{"data":1,"prerenderedAt":1115},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array":347,"/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array-surround":1110},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319,341,344],{"title":320,"_path":321,"children":322},"Promise","/code/scene/promise",[323,326,329,332,335,338],{"title":324,"_path":325},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":327,"_path":328},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":330,"_path":331},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":333,"_path":334},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":336,"_path":337},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":339,"_path":340},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":342,"_path":343},"lodash.get","/code/scene/lodash.get",{"title":345,"_path":346},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":184,"_dir":348,"_draft":349,"_partial":349,"_locale":350,"title":183,"description":351,"url":352,"body":353,"_type":1105,"_id":1106,"_source":1107,"_file":1108,"_extension":1109},"leetcode",false,"","已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：","https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array",{"type":354,"children":355,"toc":1101},"root",[356,363,378,383,388,393,432,437,468,473,504,509,537,543,561,566,1095],{"type":357,"tag":358,"props":359,"children":360},"element","p",{},[361],{"type":362,"value":351},"text",{"type":357,"tag":364,"props":365,"children":366},"ul",{},[367,373],{"type":357,"tag":368,"props":369,"children":370},"li",{},[371],{"type":362,"value":372},"若旋转 4 次，则可以得到 [4,5,6,7,0,1,2]",{"type":357,"tag":368,"props":374,"children":375},{},[376],{"type":362,"value":377},"若旋转 7 次，则可以得到 [0,1,2,4,5,6,7]\n注意，数组 [a[0], a[1], a[2], ..., a[n-1]] 旋转一次 的结果为数组 [a[n-1], a[0], a[1], a[2], ..., a[n-2]] 。",{"type":357,"tag":358,"props":379,"children":380},{},[381],{"type":362,"value":382},"给你一个元素值 互不相同 的数组 nums ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 最小元素 。",{"type":357,"tag":358,"props":384,"children":385},{},[386],{"type":362,"value":387},"你必须设计一个时间复杂度为 O(log n) 的算法解决此问题。",{"type":357,"tag":358,"props":389,"children":390},{},[391],{"type":362,"value":392},"示例 1：",{"type":357,"tag":394,"props":395,"children":398},"pre",{"className":396,"code":397,"language":362,"meta":350,"style":350},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [3,4,5,1,2]\n输出：1\n解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",[399],{"type":357,"tag":400,"props":401,"children":402},"code",{"__ignoreMap":350},[403,414,423],{"type":357,"tag":404,"props":405,"children":408},"span",{"class":406,"line":407},"line",1,[409],{"type":357,"tag":404,"props":410,"children":411},{},[412],{"type":362,"value":413},"输入：nums = [3,4,5,1,2]\n",{"type":357,"tag":404,"props":415,"children":417},{"class":406,"line":416},2,[418],{"type":357,"tag":404,"props":419,"children":420},{},[421],{"type":362,"value":422},"输出：1\n",{"type":357,"tag":404,"props":424,"children":426},{"class":406,"line":425},3,[427],{"type":357,"tag":404,"props":428,"children":429},{},[430],{"type":362,"value":431},"解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",{"type":357,"tag":358,"props":433,"children":434},{},[435],{"type":362,"value":436},"示例 2：",{"type":357,"tag":394,"props":438,"children":440},{"className":396,"code":439,"language":362,"meta":350,"style":350},"输入：nums = [4,5,6,7,0,1,2]\n输出：0\n解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",[441],{"type":357,"tag":400,"props":442,"children":443},{"__ignoreMap":350},[444,452,460],{"type":357,"tag":404,"props":445,"children":446},{"class":406,"line":407},[447],{"type":357,"tag":404,"props":448,"children":449},{},[450],{"type":362,"value":451},"输入：nums = [4,5,6,7,0,1,2]\n",{"type":357,"tag":404,"props":453,"children":454},{"class":406,"line":416},[455],{"type":357,"tag":404,"props":456,"children":457},{},[458],{"type":362,"value":459},"输出：0\n",{"type":357,"tag":404,"props":461,"children":462},{"class":406,"line":425},[463],{"type":357,"tag":404,"props":464,"children":465},{},[466],{"type":362,"value":467},"解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",{"type":357,"tag":358,"props":469,"children":470},{},[471],{"type":362,"value":472},"示例 3：",{"type":357,"tag":394,"props":474,"children":476},{"className":396,"code":475,"language":362,"meta":350,"style":350},"输入：nums = [11,13,15,17]\n输出：11\n解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",[477],{"type":357,"tag":400,"props":478,"children":479},{"__ignoreMap":350},[480,488,496],{"type":357,"tag":404,"props":481,"children":482},{"class":406,"line":407},[483],{"type":357,"tag":404,"props":484,"children":485},{},[486],{"type":362,"value":487},"输入：nums = [11,13,15,17]\n",{"type":357,"tag":404,"props":489,"children":490},{"class":406,"line":416},[491],{"type":357,"tag":404,"props":492,"children":493},{},[494],{"type":362,"value":495},"输出：11\n",{"type":357,"tag":404,"props":497,"children":498},{"class":406,"line":425},[499],{"type":357,"tag":404,"props":500,"children":501},{},[502],{"type":362,"value":503},"解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",{"type":357,"tag":358,"props":505,"children":506},{},[507],{"type":362,"value":508},"提示：",{"type":357,"tag":364,"props":510,"children":511},{},[512,517,522,527,532],{"type":357,"tag":368,"props":513,"children":514},{},[515],{"type":362,"value":516},"n == nums.length",{"type":357,"tag":368,"props":518,"children":519},{},[520],{"type":362,"value":521},"1 \u003C= n \u003C= 5000",{"type":357,"tag":368,"props":523,"children":524},{},[525],{"type":362,"value":526},"-5000 \u003C= nums[i] \u003C= 5000",{"type":357,"tag":368,"props":528,"children":529},{},[530],{"type":362,"value":531},"nums 中的所有整数 互不相同",{"type":357,"tag":368,"props":533,"children":534},{},[535],{"type":362,"value":536},"nums 原来是一个升序排序的数组，并进行了 1 至 n 次旋转",{"type":357,"tag":538,"props":539,"children":541},"h2",{"id":540},"解题思路",[542],{"type":362,"value":540},{"type":357,"tag":364,"props":544,"children":545},{},[546,551,556],{"type":357,"tag":368,"props":547,"children":548},{},[549],{"type":362,"value":550},"经过分析，红色即最小值左侧，蓝色即最小值及其右侧",{"type":357,"tag":368,"props":552,"children":553},{},[554],{"type":362,"value":555},"n - 1 一定是蓝色",{"type":357,"tag":368,"props":557,"children":558},{},[559],{"type":362,"value":560},"总结：小于最后一个数，就是蓝色，否则就是红色",{"type":357,"tag":538,"props":562,"children":564},{"id":563},"实现",[565],{"type":362,"value":563},{"type":357,"tag":394,"props":567,"children":571},{"className":568,"code":569,"language":570,"meta":350,"style":350},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMin = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let len = nums.length;\n  let l = -1;\n  let r = len - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] \u003C nums[len - 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return nums[r];\n};\n","js",[572],{"type":357,"tag":400,"props":573,"children":574},{"__ignoreMap":350},[575,584,610,627,636,680,689,698,739,771,805,846,898,961,988,1007,1033,1042,1051,1082],{"type":357,"tag":404,"props":576,"children":577},{"class":406,"line":407},[578],{"type":357,"tag":404,"props":579,"children":581},{"style":580},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[582],{"type":362,"value":583},"/**\n",{"type":357,"tag":404,"props":585,"children":586},{"class":406,"line":416},[587,592,598,604],{"type":357,"tag":404,"props":588,"children":589},{"style":580},[590],{"type":362,"value":591}," * ",{"type":357,"tag":404,"props":593,"children":595},{"style":594},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[596],{"type":362,"value":597},"@param",{"type":357,"tag":404,"props":599,"children":601},{"style":600},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[602],{"type":362,"value":603}," {number[]}",{"type":357,"tag":404,"props":605,"children":607},{"style":606},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[608],{"type":362,"value":609}," nums\n",{"type":357,"tag":404,"props":611,"children":612},{"class":406,"line":425},[613,617,622],{"type":357,"tag":404,"props":614,"children":615},{"style":580},[616],{"type":362,"value":591},{"type":357,"tag":404,"props":618,"children":619},{"style":594},[620],{"type":362,"value":621},"@return",{"type":357,"tag":404,"props":623,"children":624},{"style":600},[625],{"type":362,"value":626}," {number}\n",{"type":357,"tag":404,"props":628,"children":630},{"class":406,"line":629},4,[631],{"type":357,"tag":404,"props":632,"children":633},{"style":580},[634],{"type":362,"value":635}," */\n",{"type":357,"tag":404,"props":637,"children":639},{"class":406,"line":638},5,[640,646,652,658,663,669,675],{"type":357,"tag":404,"props":641,"children":643},{"style":642},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[644],{"type":362,"value":645},"var",{"type":357,"tag":404,"props":647,"children":649},{"style":648},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[650],{"type":362,"value":651}," findMin",{"type":357,"tag":404,"props":653,"children":655},{"style":654},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[656],{"type":362,"value":657}," =",{"type":357,"tag":404,"props":659,"children":660},{"style":642},[661],{"type":362,"value":662}," function",{"type":357,"tag":404,"props":664,"children":666},{"style":665},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[667],{"type":362,"value":668}," (",{"type":357,"tag":404,"props":670,"children":672},{"style":671},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[673],{"type":362,"value":674},"nums",{"type":357,"tag":404,"props":676,"children":677},{"style":665},[678],{"type":362,"value":679},") {\n",{"type":357,"tag":404,"props":681,"children":683},{"class":406,"line":682},6,[684],{"type":357,"tag":404,"props":685,"children":686},{"style":580},[687],{"type":362,"value":688},"  // [0, n - 2]\n",{"type":357,"tag":404,"props":690,"children":692},{"class":406,"line":691},7,[693],{"type":357,"tag":404,"props":694,"children":695},{"style":580},[696],{"type":362,"value":697},"  // (-1, n - 1) 开区间写法\n",{"type":357,"tag":404,"props":699,"children":701},{"class":406,"line":700},8,[702,707,713,717,722,728,733],{"type":357,"tag":404,"props":703,"children":704},{"style":642},[705],{"type":362,"value":706},"  let",{"type":357,"tag":404,"props":708,"children":710},{"style":709},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[711],{"type":362,"value":712}," len",{"type":357,"tag":404,"props":714,"children":715},{"style":654},[716],{"type":362,"value":657},{"type":357,"tag":404,"props":718,"children":719},{"style":709},[720],{"type":362,"value":721}," nums",{"type":357,"tag":404,"props":723,"children":725},{"style":724},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[726],{"type":362,"value":727},".",{"type":357,"tag":404,"props":729,"children":730},{"style":665},[731],{"type":362,"value":732},"length",{"type":357,"tag":404,"props":734,"children":736},{"style":735},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[737],{"type":362,"value":738},";\n",{"type":357,"tag":404,"props":740,"children":742},{"class":406,"line":741},9,[743,747,752,756,761,767],{"type":357,"tag":404,"props":744,"children":745},{"style":642},[746],{"type":362,"value":706},{"type":357,"tag":404,"props":748,"children":749},{"style":709},[750],{"type":362,"value":751}," l",{"type":357,"tag":404,"props":753,"children":754},{"style":654},[755],{"type":362,"value":657},{"type":357,"tag":404,"props":757,"children":758},{"style":654},[759],{"type":362,"value":760}," -",{"type":357,"tag":404,"props":762,"children":764},{"style":763},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[765],{"type":362,"value":766},"1",{"type":357,"tag":404,"props":768,"children":769},{"style":735},[770],{"type":362,"value":738},{"type":357,"tag":404,"props":772,"children":774},{"class":406,"line":773},10,[775,779,784,788,792,796,801],{"type":357,"tag":404,"props":776,"children":777},{"style":642},[778],{"type":362,"value":706},{"type":357,"tag":404,"props":780,"children":781},{"style":709},[782],{"type":362,"value":783}," r",{"type":357,"tag":404,"props":785,"children":786},{"style":654},[787],{"type":362,"value":657},{"type":357,"tag":404,"props":789,"children":790},{"style":709},[791],{"type":362,"value":712},{"type":357,"tag":404,"props":793,"children":794},{"style":654},[795],{"type":362,"value":760},{"type":357,"tag":404,"props":797,"children":798},{"style":763},[799],{"type":362,"value":800}," 1",{"type":357,"tag":404,"props":802,"children":803},{"style":735},[804],{"type":362,"value":738},{"type":357,"tag":404,"props":806,"children":808},{"class":406,"line":807},11,[809,815,819,824,829,833,838,842],{"type":357,"tag":404,"props":810,"children":812},{"style":811},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[813],{"type":362,"value":814},"  while",{"type":357,"tag":404,"props":816,"children":817},{"style":665},[818],{"type":362,"value":668},{"type":357,"tag":404,"props":820,"children":821},{"style":709},[822],{"type":362,"value":823},"l",{"type":357,"tag":404,"props":825,"children":826},{"style":654},[827],{"type":362,"value":828}," +",{"type":357,"tag":404,"props":830,"children":831},{"style":763},[832],{"type":362,"value":800},{"type":357,"tag":404,"props":834,"children":835},{"style":654},[836],{"type":362,"value":837}," \u003C",{"type":357,"tag":404,"props":839,"children":840},{"style":709},[841],{"type":362,"value":783},{"type":357,"tag":404,"props":843,"children":844},{"style":665},[845],{"type":362,"value":679},{"type":357,"tag":404,"props":847,"children":849},{"class":406,"line":848},12,[850,855,860,864,868,872,876,880,885,890,894],{"type":357,"tag":404,"props":851,"children":852},{"style":642},[853],{"type":362,"value":854},"    let",{"type":357,"tag":404,"props":856,"children":857},{"style":709},[858],{"type":362,"value":859}," mid",{"type":357,"tag":404,"props":861,"children":862},{"style":654},[863],{"type":362,"value":657},{"type":357,"tag":404,"props":865,"children":866},{"style":665},[867],{"type":362,"value":668},{"type":357,"tag":404,"props":869,"children":870},{"style":709},[871],{"type":362,"value":823},{"type":357,"tag":404,"props":873,"children":874},{"style":654},[875],{"type":362,"value":828},{"type":357,"tag":404,"props":877,"children":878},{"style":709},[879],{"type":362,"value":783},{"type":357,"tag":404,"props":881,"children":882},{"style":665},[883],{"type":362,"value":884},") ",{"type":357,"tag":404,"props":886,"children":887},{"style":654},[888],{"type":362,"value":889},">>",{"type":357,"tag":404,"props":891,"children":892},{"style":763},[893],{"type":362,"value":800},{"type":357,"tag":404,"props":895,"children":896},{"style":735},[897],{"type":362,"value":738},{"type":357,"tag":404,"props":899,"children":901},{"class":406,"line":900},13,[902,907,911,915,920,925,930,935,939,943,948,952,956],{"type":357,"tag":404,"props":903,"children":904},{"style":811},[905],{"type":362,"value":906},"    if",{"type":357,"tag":404,"props":908,"children":909},{"style":665},[910],{"type":362,"value":668},{"type":357,"tag":404,"props":912,"children":913},{"style":709},[914],{"type":362,"value":674},{"type":357,"tag":404,"props":916,"children":917},{"style":665},[918],{"type":362,"value":919},"[",{"type":357,"tag":404,"props":921,"children":922},{"style":709},[923],{"type":362,"value":924},"mid",{"type":357,"tag":404,"props":926,"children":927},{"style":665},[928],{"type":362,"value":929},"] ",{"type":357,"tag":404,"props":931,"children":932},{"style":654},[933],{"type":362,"value":934},"\u003C",{"type":357,"tag":404,"props":936,"children":937},{"style":709},[938],{"type":362,"value":721},{"type":357,"tag":404,"props":940,"children":941},{"style":665},[942],{"type":362,"value":919},{"type":357,"tag":404,"props":944,"children":945},{"style":709},[946],{"type":362,"value":947},"len",{"type":357,"tag":404,"props":949,"children":950},{"style":654},[951],{"type":362,"value":760},{"type":357,"tag":404,"props":953,"children":954},{"style":763},[955],{"type":362,"value":800},{"type":357,"tag":404,"props":957,"children":958},{"style":665},[959],{"type":362,"value":960},"]) {\n",{"type":357,"tag":404,"props":962,"children":964},{"class":406,"line":963},14,[965,970,974,978,983],{"type":357,"tag":404,"props":966,"children":967},{"style":709},[968],{"type":362,"value":969},"      r",{"type":357,"tag":404,"props":971,"children":972},{"style":654},[973],{"type":362,"value":657},{"type":357,"tag":404,"props":975,"children":976},{"style":709},[977],{"type":362,"value":859},{"type":357,"tag":404,"props":979,"children":980},{"style":735},[981],{"type":362,"value":982},";",{"type":357,"tag":404,"props":984,"children":985},{"style":580},[986],{"type":362,"value":987}," // 染蓝色\n",{"type":357,"tag":404,"props":989,"children":991},{"class":406,"line":990},15,[992,997,1002],{"type":357,"tag":404,"props":993,"children":994},{"style":665},[995],{"type":362,"value":996},"    } ",{"type":357,"tag":404,"props":998,"children":999},{"style":811},[1000],{"type":362,"value":1001},"else",{"type":357,"tag":404,"props":1003,"children":1004},{"style":665},[1005],{"type":362,"value":1006}," {\n",{"type":357,"tag":404,"props":1008,"children":1010},{"class":406,"line":1009},16,[1011,1016,1020,1024,1028],{"type":357,"tag":404,"props":1012,"children":1013},{"style":709},[1014],{"type":362,"value":1015},"      l",{"type":357,"tag":404,"props":1017,"children":1018},{"style":654},[1019],{"type":362,"value":657},{"type":357,"tag":404,"props":1021,"children":1022},{"style":709},[1023],{"type":362,"value":859},{"type":357,"tag":404,"props":1025,"children":1026},{"style":735},[1027],{"type":362,"value":982},{"type":357,"tag":404,"props":1029,"children":1030},{"style":580},[1031],{"type":362,"value":1032}," // 染红色\n",{"type":357,"tag":404,"props":1034,"children":1036},{"class":406,"line":1035},17,[1037],{"type":357,"tag":404,"props":1038,"children":1039},{"style":665},[1040],{"type":362,"value":1041},"    }\n",{"type":357,"tag":404,"props":1043,"children":1045},{"class":406,"line":1044},18,[1046],{"type":357,"tag":404,"props":1047,"children":1048},{"style":665},[1049],{"type":362,"value":1050},"  }\n",{"type":357,"tag":404,"props":1052,"children":1054},{"class":406,"line":1053},19,[1055,1060,1064,1068,1073,1078],{"type":357,"tag":404,"props":1056,"children":1057},{"style":811},[1058],{"type":362,"value":1059},"  return",{"type":357,"tag":404,"props":1061,"children":1062},{"style":709},[1063],{"type":362,"value":721},{"type":357,"tag":404,"props":1065,"children":1066},{"style":665},[1067],{"type":362,"value":919},{"type":357,"tag":404,"props":1069,"children":1070},{"style":709},[1071],{"type":362,"value":1072},"r",{"type":357,"tag":404,"props":1074,"children":1075},{"style":665},[1076],{"type":362,"value":1077},"]",{"type":357,"tag":404,"props":1079,"children":1080},{"style":735},[1081],{"type":362,"value":738},{"type":357,"tag":404,"props":1083,"children":1085},{"class":406,"line":1084},20,[1086,1091],{"type":357,"tag":404,"props":1087,"children":1088},{"style":665},[1089],{"type":362,"value":1090},"}",{"type":357,"tag":404,"props":1092,"children":1093},{"style":735},[1094],{"type":362,"value":738},{"type":357,"tag":1096,"props":1097,"children":1098},"style",{},[1099],{"type":362,"value":1100},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":350,"searchDepth":638,"depth":638,"links":1102},[1103,1104],{"id":540,"depth":416,"text":540},{"id":563,"depth":416,"text":563},"markdown","content:2.code:1.algorithm:3.leetcode:153.find-minimum-in-rotated-sorted-array.md","content","2.code/1.algorithm/3.leetcode/153.find-minimum-in-rotated-sorted-array.md","md",[1111,1113],{"_path":181,"title":180,"description":1112},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",{"_path":187,"title":186,"description":1114},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",1712580442302]