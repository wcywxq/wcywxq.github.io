[{"data":1,"prerenderedAt":1090},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array":322,"/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array-surround":1085},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319],{"title":320,"_path":321},"顺序打印 url 并支持 retry","/code/scene/promise-url-retry",{"_path":184,"_dir":323,"_draft":324,"_partial":324,"_locale":325,"title":183,"description":326,"url":327,"body":328,"_type":1080,"_id":1081,"_source":1082,"_file":1083,"_extension":1084},"leetcode",false,"","已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：","https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array",{"type":329,"children":330,"toc":1076},"root",[331,338,353,358,363,368,407,412,443,448,479,484,512,518,536,541,1070],{"type":332,"tag":333,"props":334,"children":335},"element","p",{},[336],{"type":337,"value":326},"text",{"type":332,"tag":339,"props":340,"children":341},"ul",{},[342,348],{"type":332,"tag":343,"props":344,"children":345},"li",{},[346],{"type":337,"value":347},"若旋转 4 次，则可以得到 [4,5,6,7,0,1,2]",{"type":332,"tag":343,"props":349,"children":350},{},[351],{"type":337,"value":352},"若旋转 7 次，则可以得到 [0,1,2,4,5,6,7]\n注意，数组 [a[0], a[1], a[2], ..., a[n-1]] 旋转一次 的结果为数组 [a[n-1], a[0], a[1], a[2], ..., a[n-2]] 。",{"type":332,"tag":333,"props":354,"children":355},{},[356],{"type":337,"value":357},"给你一个元素值 互不相同 的数组 nums ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 最小元素 。",{"type":332,"tag":333,"props":359,"children":360},{},[361],{"type":337,"value":362},"你必须设计一个时间复杂度为 O(log n) 的算法解决此问题。",{"type":332,"tag":333,"props":364,"children":365},{},[366],{"type":337,"value":367},"示例 1：",{"type":332,"tag":369,"props":370,"children":373},"pre",{"className":371,"code":372,"language":337,"meta":325,"style":325},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [3,4,5,1,2]\n输出：1\n解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",[374],{"type":332,"tag":375,"props":376,"children":377},"code",{"__ignoreMap":325},[378,389,398],{"type":332,"tag":379,"props":380,"children":383},"span",{"class":381,"line":382},"line",1,[384],{"type":332,"tag":379,"props":385,"children":386},{},[387],{"type":337,"value":388},"输入：nums = [3,4,5,1,2]\n",{"type":332,"tag":379,"props":390,"children":392},{"class":381,"line":391},2,[393],{"type":332,"tag":379,"props":394,"children":395},{},[396],{"type":337,"value":397},"输出：1\n",{"type":332,"tag":379,"props":399,"children":401},{"class":381,"line":400},3,[402],{"type":332,"tag":379,"props":403,"children":404},{},[405],{"type":337,"value":406},"解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",{"type":332,"tag":333,"props":408,"children":409},{},[410],{"type":337,"value":411},"示例 2：",{"type":332,"tag":369,"props":413,"children":415},{"className":371,"code":414,"language":337,"meta":325,"style":325},"输入：nums = [4,5,6,7,0,1,2]\n输出：0\n解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",[416],{"type":332,"tag":375,"props":417,"children":418},{"__ignoreMap":325},[419,427,435],{"type":332,"tag":379,"props":420,"children":421},{"class":381,"line":382},[422],{"type":332,"tag":379,"props":423,"children":424},{},[425],{"type":337,"value":426},"输入：nums = [4,5,6,7,0,1,2]\n",{"type":332,"tag":379,"props":428,"children":429},{"class":381,"line":391},[430],{"type":332,"tag":379,"props":431,"children":432},{},[433],{"type":337,"value":434},"输出：0\n",{"type":332,"tag":379,"props":436,"children":437},{"class":381,"line":400},[438],{"type":332,"tag":379,"props":439,"children":440},{},[441],{"type":337,"value":442},"解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",{"type":332,"tag":333,"props":444,"children":445},{},[446],{"type":337,"value":447},"示例 3：",{"type":332,"tag":369,"props":449,"children":451},{"className":371,"code":450,"language":337,"meta":325,"style":325},"输入：nums = [11,13,15,17]\n输出：11\n解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",[452],{"type":332,"tag":375,"props":453,"children":454},{"__ignoreMap":325},[455,463,471],{"type":332,"tag":379,"props":456,"children":457},{"class":381,"line":382},[458],{"type":332,"tag":379,"props":459,"children":460},{},[461],{"type":337,"value":462},"输入：nums = [11,13,15,17]\n",{"type":332,"tag":379,"props":464,"children":465},{"class":381,"line":391},[466],{"type":332,"tag":379,"props":467,"children":468},{},[469],{"type":337,"value":470},"输出：11\n",{"type":332,"tag":379,"props":472,"children":473},{"class":381,"line":400},[474],{"type":332,"tag":379,"props":475,"children":476},{},[477],{"type":337,"value":478},"解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",{"type":332,"tag":333,"props":480,"children":481},{},[482],{"type":337,"value":483},"提示：",{"type":332,"tag":339,"props":485,"children":486},{},[487,492,497,502,507],{"type":332,"tag":343,"props":488,"children":489},{},[490],{"type":337,"value":491},"n == nums.length",{"type":332,"tag":343,"props":493,"children":494},{},[495],{"type":337,"value":496},"1 \u003C= n \u003C= 5000",{"type":332,"tag":343,"props":498,"children":499},{},[500],{"type":337,"value":501},"-5000 \u003C= nums[i] \u003C= 5000",{"type":332,"tag":343,"props":503,"children":504},{},[505],{"type":337,"value":506},"nums 中的所有整数 互不相同",{"type":332,"tag":343,"props":508,"children":509},{},[510],{"type":337,"value":511},"nums 原来是一个升序排序的数组，并进行了 1 至 n 次旋转",{"type":332,"tag":513,"props":514,"children":516},"h2",{"id":515},"解题思路",[517],{"type":337,"value":515},{"type":332,"tag":339,"props":519,"children":520},{},[521,526,531],{"type":332,"tag":343,"props":522,"children":523},{},[524],{"type":337,"value":525},"经过分析，红色即最小值左侧，蓝色即最小值及其右侧",{"type":332,"tag":343,"props":527,"children":528},{},[529],{"type":337,"value":530},"n - 1 一定是蓝色",{"type":332,"tag":343,"props":532,"children":533},{},[534],{"type":337,"value":535},"总结：小于最后一个数，就是蓝色，否则就是红色",{"type":332,"tag":513,"props":537,"children":539},{"id":538},"实现",[540],{"type":337,"value":538},{"type":332,"tag":369,"props":542,"children":546},{"className":543,"code":544,"language":545,"meta":325,"style":325},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMin = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let len = nums.length;\n  let l = -1;\n  let r = len - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] \u003C nums[len - 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return nums[r];\n};\n","js",[547],{"type":332,"tag":375,"props":548,"children":549},{"__ignoreMap":325},[550,559,585,602,611,655,664,673,714,746,780,821,873,936,963,982,1008,1017,1026,1057],{"type":332,"tag":379,"props":551,"children":552},{"class":381,"line":382},[553],{"type":332,"tag":379,"props":554,"children":556},{"style":555},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[557],{"type":337,"value":558},"/**\n",{"type":332,"tag":379,"props":560,"children":561},{"class":381,"line":391},[562,567,573,579],{"type":332,"tag":379,"props":563,"children":564},{"style":555},[565],{"type":337,"value":566}," * ",{"type":332,"tag":379,"props":568,"children":570},{"style":569},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[571],{"type":337,"value":572},"@param",{"type":332,"tag":379,"props":574,"children":576},{"style":575},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[577],{"type":337,"value":578}," {number[]}",{"type":332,"tag":379,"props":580,"children":582},{"style":581},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[583],{"type":337,"value":584}," nums\n",{"type":332,"tag":379,"props":586,"children":587},{"class":381,"line":400},[588,592,597],{"type":332,"tag":379,"props":589,"children":590},{"style":555},[591],{"type":337,"value":566},{"type":332,"tag":379,"props":593,"children":594},{"style":569},[595],{"type":337,"value":596},"@return",{"type":332,"tag":379,"props":598,"children":599},{"style":575},[600],{"type":337,"value":601}," {number}\n",{"type":332,"tag":379,"props":603,"children":605},{"class":381,"line":604},4,[606],{"type":332,"tag":379,"props":607,"children":608},{"style":555},[609],{"type":337,"value":610}," */\n",{"type":332,"tag":379,"props":612,"children":614},{"class":381,"line":613},5,[615,621,627,633,638,644,650],{"type":332,"tag":379,"props":616,"children":618},{"style":617},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[619],{"type":337,"value":620},"var",{"type":332,"tag":379,"props":622,"children":624},{"style":623},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[625],{"type":337,"value":626}," findMin",{"type":332,"tag":379,"props":628,"children":630},{"style":629},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[631],{"type":337,"value":632}," =",{"type":332,"tag":379,"props":634,"children":635},{"style":617},[636],{"type":337,"value":637}," function",{"type":332,"tag":379,"props":639,"children":641},{"style":640},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[642],{"type":337,"value":643}," (",{"type":332,"tag":379,"props":645,"children":647},{"style":646},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[648],{"type":337,"value":649},"nums",{"type":332,"tag":379,"props":651,"children":652},{"style":640},[653],{"type":337,"value":654},") {\n",{"type":332,"tag":379,"props":656,"children":658},{"class":381,"line":657},6,[659],{"type":332,"tag":379,"props":660,"children":661},{"style":555},[662],{"type":337,"value":663},"  // [0, n - 2]\n",{"type":332,"tag":379,"props":665,"children":667},{"class":381,"line":666},7,[668],{"type":332,"tag":379,"props":669,"children":670},{"style":555},[671],{"type":337,"value":672},"  // (-1, n - 1) 开区间写法\n",{"type":332,"tag":379,"props":674,"children":676},{"class":381,"line":675},8,[677,682,688,692,697,703,708],{"type":332,"tag":379,"props":678,"children":679},{"style":617},[680],{"type":337,"value":681},"  let",{"type":332,"tag":379,"props":683,"children":685},{"style":684},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[686],{"type":337,"value":687}," len",{"type":332,"tag":379,"props":689,"children":690},{"style":629},[691],{"type":337,"value":632},{"type":332,"tag":379,"props":693,"children":694},{"style":684},[695],{"type":337,"value":696}," nums",{"type":332,"tag":379,"props":698,"children":700},{"style":699},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[701],{"type":337,"value":702},".",{"type":332,"tag":379,"props":704,"children":705},{"style":640},[706],{"type":337,"value":707},"length",{"type":332,"tag":379,"props":709,"children":711},{"style":710},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[712],{"type":337,"value":713},";\n",{"type":332,"tag":379,"props":715,"children":717},{"class":381,"line":716},9,[718,722,727,731,736,742],{"type":332,"tag":379,"props":719,"children":720},{"style":617},[721],{"type":337,"value":681},{"type":332,"tag":379,"props":723,"children":724},{"style":684},[725],{"type":337,"value":726}," l",{"type":332,"tag":379,"props":728,"children":729},{"style":629},[730],{"type":337,"value":632},{"type":332,"tag":379,"props":732,"children":733},{"style":629},[734],{"type":337,"value":735}," -",{"type":332,"tag":379,"props":737,"children":739},{"style":738},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[740],{"type":337,"value":741},"1",{"type":332,"tag":379,"props":743,"children":744},{"style":710},[745],{"type":337,"value":713},{"type":332,"tag":379,"props":747,"children":749},{"class":381,"line":748},10,[750,754,759,763,767,771,776],{"type":332,"tag":379,"props":751,"children":752},{"style":617},[753],{"type":337,"value":681},{"type":332,"tag":379,"props":755,"children":756},{"style":684},[757],{"type":337,"value":758}," r",{"type":332,"tag":379,"props":760,"children":761},{"style":629},[762],{"type":337,"value":632},{"type":332,"tag":379,"props":764,"children":765},{"style":684},[766],{"type":337,"value":687},{"type":332,"tag":379,"props":768,"children":769},{"style":629},[770],{"type":337,"value":735},{"type":332,"tag":379,"props":772,"children":773},{"style":738},[774],{"type":337,"value":775}," 1",{"type":332,"tag":379,"props":777,"children":778},{"style":710},[779],{"type":337,"value":713},{"type":332,"tag":379,"props":781,"children":783},{"class":381,"line":782},11,[784,790,794,799,804,808,813,817],{"type":332,"tag":379,"props":785,"children":787},{"style":786},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[788],{"type":337,"value":789},"  while",{"type":332,"tag":379,"props":791,"children":792},{"style":640},[793],{"type":337,"value":643},{"type":332,"tag":379,"props":795,"children":796},{"style":684},[797],{"type":337,"value":798},"l",{"type":332,"tag":379,"props":800,"children":801},{"style":629},[802],{"type":337,"value":803}," +",{"type":332,"tag":379,"props":805,"children":806},{"style":738},[807],{"type":337,"value":775},{"type":332,"tag":379,"props":809,"children":810},{"style":629},[811],{"type":337,"value":812}," \u003C",{"type":332,"tag":379,"props":814,"children":815},{"style":684},[816],{"type":337,"value":758},{"type":332,"tag":379,"props":818,"children":819},{"style":640},[820],{"type":337,"value":654},{"type":332,"tag":379,"props":822,"children":824},{"class":381,"line":823},12,[825,830,835,839,843,847,851,855,860,865,869],{"type":332,"tag":379,"props":826,"children":827},{"style":617},[828],{"type":337,"value":829},"    let",{"type":332,"tag":379,"props":831,"children":832},{"style":684},[833],{"type":337,"value":834}," mid",{"type":332,"tag":379,"props":836,"children":837},{"style":629},[838],{"type":337,"value":632},{"type":332,"tag":379,"props":840,"children":841},{"style":640},[842],{"type":337,"value":643},{"type":332,"tag":379,"props":844,"children":845},{"style":684},[846],{"type":337,"value":798},{"type":332,"tag":379,"props":848,"children":849},{"style":629},[850],{"type":337,"value":803},{"type":332,"tag":379,"props":852,"children":853},{"style":684},[854],{"type":337,"value":758},{"type":332,"tag":379,"props":856,"children":857},{"style":640},[858],{"type":337,"value":859},") ",{"type":332,"tag":379,"props":861,"children":862},{"style":629},[863],{"type":337,"value":864},">>",{"type":332,"tag":379,"props":866,"children":867},{"style":738},[868],{"type":337,"value":775},{"type":332,"tag":379,"props":870,"children":871},{"style":710},[872],{"type":337,"value":713},{"type":332,"tag":379,"props":874,"children":876},{"class":381,"line":875},13,[877,882,886,890,895,900,905,910,914,918,923,927,931],{"type":332,"tag":379,"props":878,"children":879},{"style":786},[880],{"type":337,"value":881},"    if",{"type":332,"tag":379,"props":883,"children":884},{"style":640},[885],{"type":337,"value":643},{"type":332,"tag":379,"props":887,"children":888},{"style":684},[889],{"type":337,"value":649},{"type":332,"tag":379,"props":891,"children":892},{"style":640},[893],{"type":337,"value":894},"[",{"type":332,"tag":379,"props":896,"children":897},{"style":684},[898],{"type":337,"value":899},"mid",{"type":332,"tag":379,"props":901,"children":902},{"style":640},[903],{"type":337,"value":904},"] ",{"type":332,"tag":379,"props":906,"children":907},{"style":629},[908],{"type":337,"value":909},"\u003C",{"type":332,"tag":379,"props":911,"children":912},{"style":684},[913],{"type":337,"value":696},{"type":332,"tag":379,"props":915,"children":916},{"style":640},[917],{"type":337,"value":894},{"type":332,"tag":379,"props":919,"children":920},{"style":684},[921],{"type":337,"value":922},"len",{"type":332,"tag":379,"props":924,"children":925},{"style":629},[926],{"type":337,"value":735},{"type":332,"tag":379,"props":928,"children":929},{"style":738},[930],{"type":337,"value":775},{"type":332,"tag":379,"props":932,"children":933},{"style":640},[934],{"type":337,"value":935},"]) {\n",{"type":332,"tag":379,"props":937,"children":939},{"class":381,"line":938},14,[940,945,949,953,958],{"type":332,"tag":379,"props":941,"children":942},{"style":684},[943],{"type":337,"value":944},"      r",{"type":332,"tag":379,"props":946,"children":947},{"style":629},[948],{"type":337,"value":632},{"type":332,"tag":379,"props":950,"children":951},{"style":684},[952],{"type":337,"value":834},{"type":332,"tag":379,"props":954,"children":955},{"style":710},[956],{"type":337,"value":957},";",{"type":332,"tag":379,"props":959,"children":960},{"style":555},[961],{"type":337,"value":962}," // 染蓝色\n",{"type":332,"tag":379,"props":964,"children":966},{"class":381,"line":965},15,[967,972,977],{"type":332,"tag":379,"props":968,"children":969},{"style":640},[970],{"type":337,"value":971},"    } ",{"type":332,"tag":379,"props":973,"children":974},{"style":786},[975],{"type":337,"value":976},"else",{"type":332,"tag":379,"props":978,"children":979},{"style":640},[980],{"type":337,"value":981}," {\n",{"type":332,"tag":379,"props":983,"children":985},{"class":381,"line":984},16,[986,991,995,999,1003],{"type":332,"tag":379,"props":987,"children":988},{"style":684},[989],{"type":337,"value":990},"      l",{"type":332,"tag":379,"props":992,"children":993},{"style":629},[994],{"type":337,"value":632},{"type":332,"tag":379,"props":996,"children":997},{"style":684},[998],{"type":337,"value":834},{"type":332,"tag":379,"props":1000,"children":1001},{"style":710},[1002],{"type":337,"value":957},{"type":332,"tag":379,"props":1004,"children":1005},{"style":555},[1006],{"type":337,"value":1007}," // 染红色\n",{"type":332,"tag":379,"props":1009,"children":1011},{"class":381,"line":1010},17,[1012],{"type":332,"tag":379,"props":1013,"children":1014},{"style":640},[1015],{"type":337,"value":1016},"    }\n",{"type":332,"tag":379,"props":1018,"children":1020},{"class":381,"line":1019},18,[1021],{"type":332,"tag":379,"props":1022,"children":1023},{"style":640},[1024],{"type":337,"value":1025},"  }\n",{"type":332,"tag":379,"props":1027,"children":1029},{"class":381,"line":1028},19,[1030,1035,1039,1043,1048,1053],{"type":332,"tag":379,"props":1031,"children":1032},{"style":786},[1033],{"type":337,"value":1034},"  return",{"type":332,"tag":379,"props":1036,"children":1037},{"style":684},[1038],{"type":337,"value":696},{"type":332,"tag":379,"props":1040,"children":1041},{"style":640},[1042],{"type":337,"value":894},{"type":332,"tag":379,"props":1044,"children":1045},{"style":684},[1046],{"type":337,"value":1047},"r",{"type":332,"tag":379,"props":1049,"children":1050},{"style":640},[1051],{"type":337,"value":1052},"]",{"type":332,"tag":379,"props":1054,"children":1055},{"style":710},[1056],{"type":337,"value":713},{"type":332,"tag":379,"props":1058,"children":1060},{"class":381,"line":1059},20,[1061,1066],{"type":332,"tag":379,"props":1062,"children":1063},{"style":640},[1064],{"type":337,"value":1065},"}",{"type":332,"tag":379,"props":1067,"children":1068},{"style":710},[1069],{"type":337,"value":713},{"type":332,"tag":1071,"props":1072,"children":1073},"style",{},[1074],{"type":337,"value":1075},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":325,"searchDepth":613,"depth":613,"links":1077},[1078,1079],{"id":515,"depth":391,"text":515},{"id":538,"depth":391,"text":538},"markdown","content:2.code:1.algorithm:3.leetcode:153.find-minimum-in-rotated-sorted-array.md","content","2.code/1.algorithm/3.leetcode/153.find-minimum-in-rotated-sorted-array.md","md",[1086,1088],{"_path":181,"title":180,"description":1087},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",{"_path":187,"title":186,"description":1089},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",1712115784130]