[{"data":1,"prerenderedAt":979},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/climbing-stairs":359,"/code/algorithm/leetcode/climbing-stairs-surround":974},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,269,318],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263,266],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.165 比较版本号","/code/algorithm/leetcode/compare-version-numbers",{"title":198,"_path":199},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":201,"_path":202},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":204,"_path":205},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":207,"_path":208},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":210,"_path":211},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":213,"_path":214},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":216,"_path":217},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":219,"_path":220},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":222,"_path":223},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":225,"_path":226},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":228,"_path":229},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":231,"_path":232},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":234,"_path":235},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":237,"_path":238},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":240,"_path":241},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":243,"_path":244},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":246,"_path":247},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":249,"_path":250},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":252,"_path":253},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":255,"_path":256},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":258,"_path":259},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":261,"_path":262},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":264,"_path":265},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":267,"_path":268},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":270,"_path":271,"children":272},"源码实现","/code/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/code/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/code/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/code/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/code/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/code/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/code/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/code/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/code/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/code/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/code/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/code/source/string",[315],{"title":316,"_path":317},"repeat()","/code/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/code/scene",[322,344,347,350,353,356],{"title":323,"_path":324,"children":325},"Promise","/code/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/code/scene/calcuate-object-bytes",{"title":348,"_path":349},"lodash.get","/code/scene/lodash-get",{"title":351,"_path":352},"记忆化请求函数 - 可缓存请求函数","/code/scene/memorize-request",{"title":354,"_path":355},"sku 算法实现","/code/scene/sku",{"title":357,"_path":358},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":139,"_dir":360,"_draft":361,"_partial":361,"_locale":362,"title":138,"description":363,"url":364,"body":365,"_type":969,"_id":970,"_source":971,"_file":972,"_extension":973},"leetcode",false,"","假设你正在爬楼梯。需要 n 阶你才能到达楼顶。","https://leetcode.cn/problems/climbing-stairs",{"type":366,"children":367,"toc":963},"root",[368,375,380,385,452,457,520,525,535,541,546,552,957],{"type":369,"tag":370,"props":371,"children":372},"element","p",{},[373],{"type":374,"value":363},"text",{"type":369,"tag":370,"props":376,"children":377},{},[378],{"type":374,"value":379},"每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？",{"type":369,"tag":370,"props":381,"children":382},{},[383],{"type":374,"value":384},"示例 1：",{"type":369,"tag":386,"props":387,"children":390},"pre",{"className":388,"code":389,"language":374,"meta":362,"style":362},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：n = 2\n输出：2\n解释：有两种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶\n2. 2 阶\n",[391],{"type":369,"tag":392,"props":393,"children":394},"code",{"__ignoreMap":362},[395,406,415,424,434,443],{"type":369,"tag":396,"props":397,"children":400},"span",{"class":398,"line":399},"line",1,[401],{"type":369,"tag":396,"props":402,"children":403},{},[404],{"type":374,"value":405},"输入：n = 2\n",{"type":369,"tag":396,"props":407,"children":409},{"class":398,"line":408},2,[410],{"type":369,"tag":396,"props":411,"children":412},{},[413],{"type":374,"value":414},"输出：2\n",{"type":369,"tag":396,"props":416,"children":418},{"class":398,"line":417},3,[419],{"type":369,"tag":396,"props":420,"children":421},{},[422],{"type":374,"value":423},"解释：有两种方法可以爬到楼顶。\n",{"type":369,"tag":396,"props":425,"children":427},{"class":398,"line":426},4,[428],{"type":369,"tag":396,"props":429,"children":431},{"emptyLinePlaceholder":430},true,[432],{"type":374,"value":433},"\n",{"type":369,"tag":396,"props":435,"children":437},{"class":398,"line":436},5,[438],{"type":369,"tag":396,"props":439,"children":440},{},[441],{"type":374,"value":442},"1. 1 阶 + 1 阶\n",{"type":369,"tag":396,"props":444,"children":446},{"class":398,"line":445},6,[447],{"type":369,"tag":396,"props":448,"children":449},{},[450],{"type":374,"value":451},"2. 2 阶\n",{"type":369,"tag":370,"props":453,"children":454},{},[455],{"type":374,"value":456},"示例 2：",{"type":369,"tag":386,"props":458,"children":460},{"className":388,"code":459,"language":374,"meta":362,"style":362},"输入：n = 3\n输出：3\n解释：有三种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶 + 1 阶\n2. 1 阶 + 2 阶\n3. 2 阶 + 1 阶\n",[461],{"type":369,"tag":392,"props":462,"children":463},{"__ignoreMap":362},[464,472,480,488,495,503,511],{"type":369,"tag":396,"props":465,"children":466},{"class":398,"line":399},[467],{"type":369,"tag":396,"props":468,"children":469},{},[470],{"type":374,"value":471},"输入：n = 3\n",{"type":369,"tag":396,"props":473,"children":474},{"class":398,"line":408},[475],{"type":369,"tag":396,"props":476,"children":477},{},[478],{"type":374,"value":479},"输出：3\n",{"type":369,"tag":396,"props":481,"children":482},{"class":398,"line":417},[483],{"type":369,"tag":396,"props":484,"children":485},{},[486],{"type":374,"value":487},"解释：有三种方法可以爬到楼顶。\n",{"type":369,"tag":396,"props":489,"children":490},{"class":398,"line":426},[491],{"type":369,"tag":396,"props":492,"children":493},{"emptyLinePlaceholder":430},[494],{"type":374,"value":433},{"type":369,"tag":396,"props":496,"children":497},{"class":398,"line":436},[498],{"type":369,"tag":396,"props":499,"children":500},{},[501],{"type":374,"value":502},"1. 1 阶 + 1 阶 + 1 阶\n",{"type":369,"tag":396,"props":504,"children":505},{"class":398,"line":445},[506],{"type":369,"tag":396,"props":507,"children":508},{},[509],{"type":374,"value":510},"2. 1 阶 + 2 阶\n",{"type":369,"tag":396,"props":512,"children":514},{"class":398,"line":513},7,[515],{"type":369,"tag":396,"props":516,"children":517},{},[518],{"type":374,"value":519},"3. 2 阶 + 1 阶\n",{"type":369,"tag":370,"props":521,"children":522},{},[523],{"type":374,"value":524},"提示：",{"type":369,"tag":526,"props":527,"children":528},"ul",{},[529],{"type":369,"tag":530,"props":531,"children":532},"li",{},[533],{"type":374,"value":534},"1 \u003C= n \u003C= 45",{"type":369,"tag":536,"props":537,"children":539},"h2",{"id":538},"解题思路",[540],{"type":374,"value":538},{"type":369,"tag":536,"props":542,"children":544},{"id":543},"实现",[545],{"type":374,"value":543},{"type":369,"tag":547,"props":548,"children":550},"h3",{"id":549},"动态规划",[551],{"type":374,"value":549},{"type":369,"tag":386,"props":553,"children":557},{"className":554,"code":555,"language":556,"meta":362,"style":362},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number} n\n * @return {number}\n */\nvar climbStairs = function (n) {\n  let dp = [];\n  dp[0] = dp[1] = 1;\n  for (let i = 2; i \u003C= n; i++) {\n    dp[i] = dp[i - 1] + dp[i - 2];\n  }\n  return dp[n];\n};\n","js",[558],{"type":369,"tag":392,"props":559,"children":560},{"__ignoreMap":362},[561,570,596,613,621,664,693,752,821,906,915,944],{"type":369,"tag":396,"props":562,"children":563},{"class":398,"line":399},[564],{"type":369,"tag":396,"props":565,"children":567},{"style":566},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[568],{"type":374,"value":569},"/**\n",{"type":369,"tag":396,"props":571,"children":572},{"class":398,"line":408},[573,578,584,590],{"type":369,"tag":396,"props":574,"children":575},{"style":566},[576],{"type":374,"value":577}," * ",{"type":369,"tag":396,"props":579,"children":581},{"style":580},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[582],{"type":374,"value":583},"@param",{"type":369,"tag":396,"props":585,"children":587},{"style":586},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[588],{"type":374,"value":589}," {number}",{"type":369,"tag":396,"props":591,"children":593},{"style":592},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[594],{"type":374,"value":595}," n\n",{"type":369,"tag":396,"props":597,"children":598},{"class":398,"line":417},[599,603,608],{"type":369,"tag":396,"props":600,"children":601},{"style":566},[602],{"type":374,"value":577},{"type":369,"tag":396,"props":604,"children":605},{"style":580},[606],{"type":374,"value":607},"@return",{"type":369,"tag":396,"props":609,"children":610},{"style":586},[611],{"type":374,"value":612}," {number}\n",{"type":369,"tag":396,"props":614,"children":615},{"class":398,"line":426},[616],{"type":369,"tag":396,"props":617,"children":618},{"style":566},[619],{"type":374,"value":620}," */\n",{"type":369,"tag":396,"props":622,"children":623},{"class":398,"line":436},[624,630,636,642,647,653,659],{"type":369,"tag":396,"props":625,"children":627},{"style":626},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[628],{"type":374,"value":629},"var",{"type":369,"tag":396,"props":631,"children":633},{"style":632},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[634],{"type":374,"value":635}," climbStairs",{"type":369,"tag":396,"props":637,"children":639},{"style":638},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[640],{"type":374,"value":641}," =",{"type":369,"tag":396,"props":643,"children":644},{"style":626},[645],{"type":374,"value":646}," function",{"type":369,"tag":396,"props":648,"children":650},{"style":649},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[651],{"type":374,"value":652}," (",{"type":369,"tag":396,"props":654,"children":656},{"style":655},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[657],{"type":374,"value":658},"n",{"type":369,"tag":396,"props":660,"children":661},{"style":649},[662],{"type":374,"value":663},") {\n",{"type":369,"tag":396,"props":665,"children":666},{"class":398,"line":445},[667,672,678,682,687],{"type":369,"tag":396,"props":668,"children":669},{"style":626},[670],{"type":374,"value":671},"  let",{"type":369,"tag":396,"props":673,"children":675},{"style":674},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[676],{"type":374,"value":677}," dp",{"type":369,"tag":396,"props":679,"children":680},{"style":638},[681],{"type":374,"value":641},{"type":369,"tag":396,"props":683,"children":684},{"style":649},[685],{"type":374,"value":686}," []",{"type":369,"tag":396,"props":688,"children":690},{"style":689},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[691],{"type":374,"value":692},";\n",{"type":369,"tag":396,"props":694,"children":695},{"class":398,"line":513},[696,701,706,712,717,722,726,730,735,739,743,748],{"type":369,"tag":396,"props":697,"children":698},{"style":674},[699],{"type":374,"value":700},"  dp",{"type":369,"tag":396,"props":702,"children":703},{"style":649},[704],{"type":374,"value":705},"[",{"type":369,"tag":396,"props":707,"children":709},{"style":708},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[710],{"type":374,"value":711},"0",{"type":369,"tag":396,"props":713,"children":714},{"style":649},[715],{"type":374,"value":716},"] ",{"type":369,"tag":396,"props":718,"children":719},{"style":638},[720],{"type":374,"value":721},"=",{"type":369,"tag":396,"props":723,"children":724},{"style":674},[725],{"type":374,"value":677},{"type":369,"tag":396,"props":727,"children":728},{"style":649},[729],{"type":374,"value":705},{"type":369,"tag":396,"props":731,"children":732},{"style":708},[733],{"type":374,"value":734},"1",{"type":369,"tag":396,"props":736,"children":737},{"style":649},[738],{"type":374,"value":716},{"type":369,"tag":396,"props":740,"children":741},{"style":638},[742],{"type":374,"value":721},{"type":369,"tag":396,"props":744,"children":745},{"style":708},[746],{"type":374,"value":747}," 1",{"type":369,"tag":396,"props":749,"children":750},{"style":689},[751],{"type":374,"value":692},{"type":369,"tag":396,"props":753,"children":755},{"class":398,"line":754},8,[756,762,766,771,776,780,785,790,794,799,804,808,812,817],{"type":369,"tag":396,"props":757,"children":759},{"style":758},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[760],{"type":374,"value":761},"  for",{"type":369,"tag":396,"props":763,"children":764},{"style":649},[765],{"type":374,"value":652},{"type":369,"tag":396,"props":767,"children":768},{"style":626},[769],{"type":374,"value":770},"let",{"type":369,"tag":396,"props":772,"children":773},{"style":674},[774],{"type":374,"value":775}," i",{"type":369,"tag":396,"props":777,"children":778},{"style":638},[779],{"type":374,"value":641},{"type":369,"tag":396,"props":781,"children":782},{"style":708},[783],{"type":374,"value":784}," 2",{"type":369,"tag":396,"props":786,"children":787},{"style":689},[788],{"type":374,"value":789},";",{"type":369,"tag":396,"props":791,"children":792},{"style":674},[793],{"type":374,"value":775},{"type":369,"tag":396,"props":795,"children":796},{"style":638},[797],{"type":374,"value":798}," \u003C=",{"type":369,"tag":396,"props":800,"children":801},{"style":674},[802],{"type":374,"value":803}," n",{"type":369,"tag":396,"props":805,"children":806},{"style":689},[807],{"type":374,"value":789},{"type":369,"tag":396,"props":809,"children":810},{"style":674},[811],{"type":374,"value":775},{"type":369,"tag":396,"props":813,"children":814},{"style":638},[815],{"type":374,"value":816},"++",{"type":369,"tag":396,"props":818,"children":819},{"style":649},[820],{"type":374,"value":663},{"type":369,"tag":396,"props":822,"children":824},{"class":398,"line":823},9,[825,830,834,839,843,847,851,855,859,864,868,872,877,881,885,889,893,897,902],{"type":369,"tag":396,"props":826,"children":827},{"style":674},[828],{"type":374,"value":829},"    dp",{"type":369,"tag":396,"props":831,"children":832},{"style":649},[833],{"type":374,"value":705},{"type":369,"tag":396,"props":835,"children":836},{"style":674},[837],{"type":374,"value":838},"i",{"type":369,"tag":396,"props":840,"children":841},{"style":649},[842],{"type":374,"value":716},{"type":369,"tag":396,"props":844,"children":845},{"style":638},[846],{"type":374,"value":721},{"type":369,"tag":396,"props":848,"children":849},{"style":674},[850],{"type":374,"value":677},{"type":369,"tag":396,"props":852,"children":853},{"style":649},[854],{"type":374,"value":705},{"type":369,"tag":396,"props":856,"children":857},{"style":674},[858],{"type":374,"value":838},{"type":369,"tag":396,"props":860,"children":861},{"style":638},[862],{"type":374,"value":863}," -",{"type":369,"tag":396,"props":865,"children":866},{"style":708},[867],{"type":374,"value":747},{"type":369,"tag":396,"props":869,"children":870},{"style":649},[871],{"type":374,"value":716},{"type":369,"tag":396,"props":873,"children":874},{"style":638},[875],{"type":374,"value":876},"+",{"type":369,"tag":396,"props":878,"children":879},{"style":674},[880],{"type":374,"value":677},{"type":369,"tag":396,"props":882,"children":883},{"style":649},[884],{"type":374,"value":705},{"type":369,"tag":396,"props":886,"children":887},{"style":674},[888],{"type":374,"value":838},{"type":369,"tag":396,"props":890,"children":891},{"style":638},[892],{"type":374,"value":863},{"type":369,"tag":396,"props":894,"children":895},{"style":708},[896],{"type":374,"value":784},{"type":369,"tag":396,"props":898,"children":899},{"style":649},[900],{"type":374,"value":901},"]",{"type":369,"tag":396,"props":903,"children":904},{"style":689},[905],{"type":374,"value":692},{"type":369,"tag":396,"props":907,"children":909},{"class":398,"line":908},10,[910],{"type":369,"tag":396,"props":911,"children":912},{"style":649},[913],{"type":374,"value":914},"  }\n",{"type":369,"tag":396,"props":916,"children":918},{"class":398,"line":917},11,[919,924,928,932,936,940],{"type":369,"tag":396,"props":920,"children":921},{"style":758},[922],{"type":374,"value":923},"  return",{"type":369,"tag":396,"props":925,"children":926},{"style":674},[927],{"type":374,"value":677},{"type":369,"tag":396,"props":929,"children":930},{"style":649},[931],{"type":374,"value":705},{"type":369,"tag":396,"props":933,"children":934},{"style":674},[935],{"type":374,"value":658},{"type":369,"tag":396,"props":937,"children":938},{"style":649},[939],{"type":374,"value":901},{"type":369,"tag":396,"props":941,"children":942},{"style":689},[943],{"type":374,"value":692},{"type":369,"tag":396,"props":945,"children":947},{"class":398,"line":946},12,[948,953],{"type":369,"tag":396,"props":949,"children":950},{"style":649},[951],{"type":374,"value":952},"}",{"type":369,"tag":396,"props":954,"children":955},{"style":689},[956],{"type":374,"value":692},{"type":369,"tag":958,"props":959,"children":960},"style",{},[961],{"type":374,"value":962},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":362,"searchDepth":436,"depth":436,"links":964},[965,966],{"id":538,"depth":408,"text":538},{"id":543,"depth":408,"text":543,"children":967},[968],{"id":549,"depth":417,"text":549},"markdown","content:2.code:1.algorithm:3.leetcode:70.climbing-stairs.md","content","2.code/1.algorithm/3.leetcode/70.climbing-stairs.md","md",[975,977],{"_path":136,"title":135,"description":976},"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。",{"_path":142,"title":141,"description":978},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",1712748637571]