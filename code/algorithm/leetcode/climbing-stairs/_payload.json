[{"data":1,"prerenderedAt":959},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/climbing-stairs":314,"/code/algorithm/leetcode/climbing-stairs-surround":954},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,258,307],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,47],{"title":41,"_path":42,"children":43},"剑指 offer","/code/algorithm/sword-ofter",[44],{"title":45,"_path":46},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":48,"_path":49,"children":50},"力扣 leetCode","/code/algorithm/leetcode",[51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255],{"title":52,"_path":53},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":55,"_path":56},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":58,"_path":59},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":61,"_path":62},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":64,"_path":65},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":67,"_path":68},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":70,"_path":71},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":73,"_path":74},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":76,"_path":77},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":79,"_path":80},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":82,"_path":83},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":85,"_path":86},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":88,"_path":89},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":91,"_path":92},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":94,"_path":95},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":97,"_path":98},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":100,"_path":101},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":103,"_path":104},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":106,"_path":107},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":109,"_path":110},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":112,"_path":113},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":115,"_path":116},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":118,"_path":119},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":121,"_path":122},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":124,"_path":125},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":127,"_path":128},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":130,"_path":131},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":133,"_path":134},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":136,"_path":137},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":139,"_path":140},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":142,"_path":143},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":145,"_path":146},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":148,"_path":149},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":151,"_path":152},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":154,"_path":155},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":157,"_path":158},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":160,"_path":161},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":163,"_path":164},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":166,"_path":167},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":169,"_path":170},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":172,"_path":173},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":175,"_path":176},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":178,"_path":179},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":181,"_path":182},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":184,"_path":185},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":187,"_path":188},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":190,"_path":191},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":193,"_path":194},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":196,"_path":197},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":199,"_path":200},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":202,"_path":203},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":205,"_path":206},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":208,"_path":209},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":211,"_path":212},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":214,"_path":215},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":217,"_path":218},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":220,"_path":221},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":223,"_path":224},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":226,"_path":227},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":229,"_path":230},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":232,"_path":233},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":235,"_path":236},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":238,"_path":239},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":241,"_path":242},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":244,"_path":245},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":247,"_path":248},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":250,"_path":251},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":253,"_path":254},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":256,"_path":257},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":259,"_path":260,"children":261},"源码实现","/code/source",[262,287,300],{"title":263,"_path":264,"children":265},"原生 api","/code/source/native-api",[266,269,272,275,278,281,284],{"title":267,"_path":268},"ajax","/code/source/native-api/ajax",{"title":270,"_path":271},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":273,"_path":274},"new 操作符","/code/source/native-api/new",{"title":276,"_path":277},"instanceof 关键字","/code/source/native-api/instanceof",{"title":279,"_path":280},"定时器","/code/source/native-api/timer",{"title":282,"_path":283},"JSON.stringify","/code/source/native-api/json-stringify",{"title":285,"_path":286},"Iterator 迭代器","/code/source/native-api/iterator",{"title":288,"_path":289,"children":290},"数组 Array","/code/source/array",[291,294,297],{"title":292,"_path":293},"数组去重","/code/source/array/remove-duplicate",{"title":295,"_path":296},"数组扁平化","/code/source/array/flat",{"title":298,"_path":299},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":301,"_path":302,"children":303},"字符串 String","/code/source/string",[304],{"title":305,"_path":306},"repeat()","/code/source/string/repeat",{"title":308,"_path":309,"children":310},"业务场景","/code/scene",[311],{"title":312,"_path":313},"顺序打印 url 并支持 retry","/code/scene/promise-url-retry",{"_path":131,"_dir":315,"_draft":316,"_partial":316,"_locale":317,"title":130,"description":318,"url":319,"body":320,"_type":950,"_id":951,"_source":952,"_file":953,"_extension":345},"leetcode",false,"","假设你正在爬楼梯。需要 n 阶你才能到达楼顶。","https://leetcode.cn/problems/climbing-stairs",{"type":321,"children":322,"toc":944},"root",[323,330,335,340,420,425,501,506,516,522,527,533,938],{"type":324,"tag":325,"props":326,"children":327},"element","p",{},[328],{"type":329,"value":318},"text",{"type":324,"tag":325,"props":331,"children":332},{},[333],{"type":329,"value":334},"每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？",{"type":324,"tag":325,"props":336,"children":337},{},[338],{"type":329,"value":339},"示例 1：",{"type":324,"tag":341,"props":342,"children":346},"pre",{"className":343,"code":344,"language":345,"meta":317,"style":317},"language-md shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：n = 2\n输出：2\n解释：有两种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶\n2. 2 阶\n","md",[347],{"type":324,"tag":348,"props":349,"children":350},"code",{"__ignoreMap":317},[351,363,372,381,391,406],{"type":324,"tag":352,"props":353,"children":356},"span",{"class":354,"line":355},"line",1,[357],{"type":324,"tag":352,"props":358,"children":360},{"style":359},"--shiki-light:#110000;--shiki-default:#110000;--shiki-dark:#BFBDB6",[361],{"type":329,"value":362},"输入：n = 2\n",{"type":324,"tag":352,"props":364,"children":366},{"class":354,"line":365},2,[367],{"type":324,"tag":352,"props":368,"children":369},{"style":359},[370],{"type":329,"value":371},"输出：2\n",{"type":324,"tag":352,"props":373,"children":375},{"class":354,"line":374},3,[376],{"type":324,"tag":352,"props":377,"children":378},{"style":359},[379],{"type":329,"value":380},"解释：有两种方法可以爬到楼顶。\n",{"type":324,"tag":352,"props":382,"children":384},{"class":354,"line":383},4,[385],{"type":324,"tag":352,"props":386,"children":388},{"emptyLinePlaceholder":387},true,[389],{"type":329,"value":390},"\n",{"type":324,"tag":352,"props":392,"children":394},{"class":354,"line":393},5,[395,401],{"type":324,"tag":352,"props":396,"children":398},{"style":397},"--shiki-light:#207BB8;--shiki-default:#207BB8;--shiki-dark:#FFB454",[399],{"type":329,"value":400},"1.",{"type":324,"tag":352,"props":402,"children":403},{"style":359},[404],{"type":329,"value":405}," 1 阶 + 1 阶\n",{"type":324,"tag":352,"props":407,"children":409},{"class":354,"line":408},6,[410,415],{"type":324,"tag":352,"props":411,"children":412},{"style":397},[413],{"type":329,"value":414},"2.",{"type":324,"tag":352,"props":416,"children":417},{"style":359},[418],{"type":329,"value":419}," 2 阶\n",{"type":324,"tag":325,"props":421,"children":422},{},[423],{"type":329,"value":424},"示例 2：",{"type":324,"tag":341,"props":426,"children":428},{"className":343,"code":427,"language":345,"meta":317,"style":317},"输入：n = 3\n输出：3\n解释：有三种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶 + 1 阶\n2. 1 阶 + 2 阶\n3. 2 阶 + 1 阶\n",[429],{"type":324,"tag":348,"props":430,"children":431},{"__ignoreMap":317},[432,440,448,456,463,475,487],{"type":324,"tag":352,"props":433,"children":434},{"class":354,"line":355},[435],{"type":324,"tag":352,"props":436,"children":437},{"style":359},[438],{"type":329,"value":439},"输入：n = 3\n",{"type":324,"tag":352,"props":441,"children":442},{"class":354,"line":365},[443],{"type":324,"tag":352,"props":444,"children":445},{"style":359},[446],{"type":329,"value":447},"输出：3\n",{"type":324,"tag":352,"props":449,"children":450},{"class":354,"line":374},[451],{"type":324,"tag":352,"props":452,"children":453},{"style":359},[454],{"type":329,"value":455},"解释：有三种方法可以爬到楼顶。\n",{"type":324,"tag":352,"props":457,"children":458},{"class":354,"line":383},[459],{"type":324,"tag":352,"props":460,"children":461},{"emptyLinePlaceholder":387},[462],{"type":329,"value":390},{"type":324,"tag":352,"props":464,"children":465},{"class":354,"line":393},[466,470],{"type":324,"tag":352,"props":467,"children":468},{"style":397},[469],{"type":329,"value":400},{"type":324,"tag":352,"props":471,"children":472},{"style":359},[473],{"type":329,"value":474}," 1 阶 + 1 阶 + 1 阶\n",{"type":324,"tag":352,"props":476,"children":477},{"class":354,"line":408},[478,482],{"type":324,"tag":352,"props":479,"children":480},{"style":397},[481],{"type":329,"value":414},{"type":324,"tag":352,"props":483,"children":484},{"style":359},[485],{"type":329,"value":486}," 1 阶 + 2 阶\n",{"type":324,"tag":352,"props":488,"children":490},{"class":354,"line":489},7,[491,496],{"type":324,"tag":352,"props":492,"children":493},{"style":397},[494],{"type":329,"value":495},"3.",{"type":324,"tag":352,"props":497,"children":498},{"style":359},[499],{"type":329,"value":500}," 2 阶 + 1 阶\n",{"type":324,"tag":325,"props":502,"children":503},{},[504],{"type":329,"value":505},"提示：",{"type":324,"tag":507,"props":508,"children":509},"ul",{},[510],{"type":324,"tag":511,"props":512,"children":513},"li",{},[514],{"type":329,"value":515},"1 \u003C= n \u003C= 45",{"type":324,"tag":517,"props":518,"children":520},"h2",{"id":519},"解题思路",[521],{"type":329,"value":519},{"type":324,"tag":517,"props":523,"children":525},{"id":524},"实现",[526],{"type":329,"value":524},{"type":324,"tag":528,"props":529,"children":531},"h3",{"id":530},"动态规划",[532],{"type":329,"value":530},{"type":324,"tag":341,"props":534,"children":538},{"className":535,"code":536,"language":537,"meta":317,"style":317},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number} n\n * @return {number}\n */\nvar climbStairs = function (n) {\n  let dp = [];\n  dp[0] = dp[1] = 1;\n  for (let i = 2; i \u003C= n; i++) {\n    dp[i] = dp[i - 1] + dp[i - 2];\n  }\n  return dp[n];\n};\n","js",[539],{"type":324,"tag":348,"props":540,"children":541},{"__ignoreMap":317},[542,551,577,594,602,645,674,733,802,887,896,925],{"type":324,"tag":352,"props":543,"children":544},{"class":354,"line":355},[545],{"type":324,"tag":352,"props":546,"children":548},{"style":547},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[549],{"type":329,"value":550},"/**\n",{"type":324,"tag":352,"props":552,"children":553},{"class":354,"line":365},[554,559,565,571],{"type":324,"tag":352,"props":555,"children":556},{"style":547},[557],{"type":329,"value":558}," * ",{"type":324,"tag":352,"props":560,"children":562},{"style":561},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[563],{"type":329,"value":564},"@param",{"type":324,"tag":352,"props":566,"children":568},{"style":567},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[569],{"type":329,"value":570}," {number}",{"type":324,"tag":352,"props":572,"children":574},{"style":573},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[575],{"type":329,"value":576}," n\n",{"type":324,"tag":352,"props":578,"children":579},{"class":354,"line":374},[580,584,589],{"type":324,"tag":352,"props":581,"children":582},{"style":547},[583],{"type":329,"value":558},{"type":324,"tag":352,"props":585,"children":586},{"style":561},[587],{"type":329,"value":588},"@return",{"type":324,"tag":352,"props":590,"children":591},{"style":567},[592],{"type":329,"value":593}," {number}\n",{"type":324,"tag":352,"props":595,"children":596},{"class":354,"line":383},[597],{"type":324,"tag":352,"props":598,"children":599},{"style":547},[600],{"type":329,"value":601}," */\n",{"type":324,"tag":352,"props":603,"children":604},{"class":354,"line":393},[605,611,617,623,628,634,640],{"type":324,"tag":352,"props":606,"children":608},{"style":607},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[609],{"type":329,"value":610},"var",{"type":324,"tag":352,"props":612,"children":614},{"style":613},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[615],{"type":329,"value":616}," climbStairs",{"type":324,"tag":352,"props":618,"children":620},{"style":619},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[621],{"type":329,"value":622}," =",{"type":324,"tag":352,"props":624,"children":625},{"style":607},[626],{"type":329,"value":627}," function",{"type":324,"tag":352,"props":629,"children":631},{"style":630},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[632],{"type":329,"value":633}," (",{"type":324,"tag":352,"props":635,"children":637},{"style":636},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[638],{"type":329,"value":639},"n",{"type":324,"tag":352,"props":641,"children":642},{"style":630},[643],{"type":329,"value":644},") {\n",{"type":324,"tag":352,"props":646,"children":647},{"class":354,"line":408},[648,653,659,663,668],{"type":324,"tag":352,"props":649,"children":650},{"style":607},[651],{"type":329,"value":652},"  let",{"type":324,"tag":352,"props":654,"children":656},{"style":655},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[657],{"type":329,"value":658}," dp",{"type":324,"tag":352,"props":660,"children":661},{"style":619},[662],{"type":329,"value":622},{"type":324,"tag":352,"props":664,"children":665},{"style":630},[666],{"type":329,"value":667}," []",{"type":324,"tag":352,"props":669,"children":671},{"style":670},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[672],{"type":329,"value":673},";\n",{"type":324,"tag":352,"props":675,"children":676},{"class":354,"line":489},[677,682,687,693,698,703,707,711,716,720,724,729],{"type":324,"tag":352,"props":678,"children":679},{"style":655},[680],{"type":329,"value":681},"  dp",{"type":324,"tag":352,"props":683,"children":684},{"style":630},[685],{"type":329,"value":686},"[",{"type":324,"tag":352,"props":688,"children":690},{"style":689},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[691],{"type":329,"value":692},"0",{"type":324,"tag":352,"props":694,"children":695},{"style":630},[696],{"type":329,"value":697},"] ",{"type":324,"tag":352,"props":699,"children":700},{"style":619},[701],{"type":329,"value":702},"=",{"type":324,"tag":352,"props":704,"children":705},{"style":655},[706],{"type":329,"value":658},{"type":324,"tag":352,"props":708,"children":709},{"style":630},[710],{"type":329,"value":686},{"type":324,"tag":352,"props":712,"children":713},{"style":689},[714],{"type":329,"value":715},"1",{"type":324,"tag":352,"props":717,"children":718},{"style":630},[719],{"type":329,"value":697},{"type":324,"tag":352,"props":721,"children":722},{"style":619},[723],{"type":329,"value":702},{"type":324,"tag":352,"props":725,"children":726},{"style":689},[727],{"type":329,"value":728}," 1",{"type":324,"tag":352,"props":730,"children":731},{"style":670},[732],{"type":329,"value":673},{"type":324,"tag":352,"props":734,"children":736},{"class":354,"line":735},8,[737,743,747,752,757,761,766,771,775,780,785,789,793,798],{"type":324,"tag":352,"props":738,"children":740},{"style":739},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[741],{"type":329,"value":742},"  for",{"type":324,"tag":352,"props":744,"children":745},{"style":630},[746],{"type":329,"value":633},{"type":324,"tag":352,"props":748,"children":749},{"style":607},[750],{"type":329,"value":751},"let",{"type":324,"tag":352,"props":753,"children":754},{"style":655},[755],{"type":329,"value":756}," i",{"type":324,"tag":352,"props":758,"children":759},{"style":619},[760],{"type":329,"value":622},{"type":324,"tag":352,"props":762,"children":763},{"style":689},[764],{"type":329,"value":765}," 2",{"type":324,"tag":352,"props":767,"children":768},{"style":670},[769],{"type":329,"value":770},";",{"type":324,"tag":352,"props":772,"children":773},{"style":655},[774],{"type":329,"value":756},{"type":324,"tag":352,"props":776,"children":777},{"style":619},[778],{"type":329,"value":779}," \u003C=",{"type":324,"tag":352,"props":781,"children":782},{"style":655},[783],{"type":329,"value":784}," n",{"type":324,"tag":352,"props":786,"children":787},{"style":670},[788],{"type":329,"value":770},{"type":324,"tag":352,"props":790,"children":791},{"style":655},[792],{"type":329,"value":756},{"type":324,"tag":352,"props":794,"children":795},{"style":619},[796],{"type":329,"value":797},"++",{"type":324,"tag":352,"props":799,"children":800},{"style":630},[801],{"type":329,"value":644},{"type":324,"tag":352,"props":803,"children":805},{"class":354,"line":804},9,[806,811,815,820,824,828,832,836,840,845,849,853,858,862,866,870,874,878,883],{"type":324,"tag":352,"props":807,"children":808},{"style":655},[809],{"type":329,"value":810},"    dp",{"type":324,"tag":352,"props":812,"children":813},{"style":630},[814],{"type":329,"value":686},{"type":324,"tag":352,"props":816,"children":817},{"style":655},[818],{"type":329,"value":819},"i",{"type":324,"tag":352,"props":821,"children":822},{"style":630},[823],{"type":329,"value":697},{"type":324,"tag":352,"props":825,"children":826},{"style":619},[827],{"type":329,"value":702},{"type":324,"tag":352,"props":829,"children":830},{"style":655},[831],{"type":329,"value":658},{"type":324,"tag":352,"props":833,"children":834},{"style":630},[835],{"type":329,"value":686},{"type":324,"tag":352,"props":837,"children":838},{"style":655},[839],{"type":329,"value":819},{"type":324,"tag":352,"props":841,"children":842},{"style":619},[843],{"type":329,"value":844}," -",{"type":324,"tag":352,"props":846,"children":847},{"style":689},[848],{"type":329,"value":728},{"type":324,"tag":352,"props":850,"children":851},{"style":630},[852],{"type":329,"value":697},{"type":324,"tag":352,"props":854,"children":855},{"style":619},[856],{"type":329,"value":857},"+",{"type":324,"tag":352,"props":859,"children":860},{"style":655},[861],{"type":329,"value":658},{"type":324,"tag":352,"props":863,"children":864},{"style":630},[865],{"type":329,"value":686},{"type":324,"tag":352,"props":867,"children":868},{"style":655},[869],{"type":329,"value":819},{"type":324,"tag":352,"props":871,"children":872},{"style":619},[873],{"type":329,"value":844},{"type":324,"tag":352,"props":875,"children":876},{"style":689},[877],{"type":329,"value":765},{"type":324,"tag":352,"props":879,"children":880},{"style":630},[881],{"type":329,"value":882},"]",{"type":324,"tag":352,"props":884,"children":885},{"style":670},[886],{"type":329,"value":673},{"type":324,"tag":352,"props":888,"children":890},{"class":354,"line":889},10,[891],{"type":324,"tag":352,"props":892,"children":893},{"style":630},[894],{"type":329,"value":895},"  }\n",{"type":324,"tag":352,"props":897,"children":899},{"class":354,"line":898},11,[900,905,909,913,917,921],{"type":324,"tag":352,"props":901,"children":902},{"style":739},[903],{"type":329,"value":904},"  return",{"type":324,"tag":352,"props":906,"children":907},{"style":655},[908],{"type":329,"value":658},{"type":324,"tag":352,"props":910,"children":911},{"style":630},[912],{"type":329,"value":686},{"type":324,"tag":352,"props":914,"children":915},{"style":655},[916],{"type":329,"value":639},{"type":324,"tag":352,"props":918,"children":919},{"style":630},[920],{"type":329,"value":882},{"type":324,"tag":352,"props":922,"children":923},{"style":670},[924],{"type":329,"value":673},{"type":324,"tag":352,"props":926,"children":928},{"class":354,"line":927},12,[929,934],{"type":324,"tag":352,"props":930,"children":931},{"style":630},[932],{"type":329,"value":933},"}",{"type":324,"tag":352,"props":935,"children":936},{"style":670},[937],{"type":329,"value":673},{"type":324,"tag":939,"props":940,"children":941},"style",{},[942],{"type":329,"value":943},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":317,"searchDepth":393,"depth":393,"links":945},[946,947],{"id":519,"depth":365,"text":519},{"id":524,"depth":365,"text":524,"children":948},[949],{"id":530,"depth":374,"text":530},"markdown","content:2.code:1.algorithm:2.leetcode:70.climbing-stairs.md","content","2.code/1.algorithm/2.leetcode/70.climbing-stairs.md",[955,957],{"_path":128,"title":127,"description":956},"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。",{"_path":134,"title":133,"description":958},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",1712076269936]