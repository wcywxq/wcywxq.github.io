[{"data":1,"prerenderedAt":1402},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/reverse-linked-list-ii":359,"/code/algorithm/leetcode/reverse-linked-list-ii-surround":1397},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,269,318],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263,266],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.165 比较版本号","/code/algorithm/leetcode/compare-version-numbers",{"title":198,"_path":199},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":201,"_path":202},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":204,"_path":205},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":207,"_path":208},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":210,"_path":211},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":213,"_path":214},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":216,"_path":217},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":219,"_path":220},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":222,"_path":223},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":225,"_path":226},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":228,"_path":229},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":231,"_path":232},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":234,"_path":235},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":237,"_path":238},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":240,"_path":241},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":243,"_path":244},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":246,"_path":247},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":249,"_path":250},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":252,"_path":253},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":255,"_path":256},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":258,"_path":259},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":261,"_path":262},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":264,"_path":265},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":267,"_path":268},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":270,"_path":271,"children":272},"源码实现","/code/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/code/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/code/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/code/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/code/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/code/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/code/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/code/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/code/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/code/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/code/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/code/source/string",[315],{"title":316,"_path":317},"repeat()","/code/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/code/scene",[322,344,347,350,353,356],{"title":323,"_path":324,"children":325},"Promise","/code/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/code/scene/calcuate-object-bytes",{"title":348,"_path":349},"lodash.get","/code/scene/lodash-get",{"title":351,"_path":352},"记忆化请求函数 - 可缓存请求函数","/code/scene/memorize-request",{"title":354,"_path":355},"sku 算法实现","/code/scene/sku",{"title":357,"_path":358},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":145,"_dir":360,"_draft":361,"_partial":361,"_locale":362,"title":144,"description":363,"url":364,"body":365,"_type":1392,"_id":1393,"_source":1394,"_file":1395,"_extension":1396},"leetcode",false,"","给你单链表的头指针 head 和两个整数 left 和 right ，其中 left \u003C= right 。请你反转从位置 left 到位置 right 的链表节点，返回 反转后的链表 。","https://leetcode.cn/problems/reverse-linked-list-ii",{"type":366,"children":367,"toc":1388},"root",[368,375,380,389,419,424,447,452,477,482,488,493,498,1382],{"type":369,"tag":370,"props":371,"children":372},"element","p",{},[373],{"type":374,"value":363},"text",{"type":369,"tag":370,"props":376,"children":377},{},[378],{"type":374,"value":379},"示例 1：",{"type":369,"tag":370,"props":381,"children":382},{},[383],{"type":369,"tag":384,"props":385,"children":388},"img",{"alt":386,"src":387},"rev2ex2","/img/code_leetcode_No.92_rev2ex2.png",[],{"type":369,"tag":390,"props":391,"children":394},"pre",{"className":392,"code":393,"language":374,"meta":362,"style":362},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：head = [1,2,3,4,5], left = 2, right = 4\n输出：[1,4,3,2,5]\n",[395],{"type":369,"tag":396,"props":397,"children":398},"code",{"__ignoreMap":362},[399,410],{"type":369,"tag":400,"props":401,"children":404},"span",{"class":402,"line":403},"line",1,[405],{"type":369,"tag":400,"props":406,"children":407},{},[408],{"type":374,"value":409},"输入：head = [1,2,3,4,5], left = 2, right = 4\n",{"type":369,"tag":400,"props":411,"children":413},{"class":402,"line":412},2,[414],{"type":369,"tag":400,"props":415,"children":416},{},[417],{"type":374,"value":418},"输出：[1,4,3,2,5]\n",{"type":369,"tag":370,"props":420,"children":421},{},[422],{"type":374,"value":423},"示例 2：",{"type":369,"tag":390,"props":425,"children":427},{"className":392,"code":426,"language":374,"meta":362,"style":362},"输入：head = [5], left = 1, right = 1\n输出：[5]\n",[428],{"type":369,"tag":396,"props":429,"children":430},{"__ignoreMap":362},[431,439],{"type":369,"tag":400,"props":432,"children":433},{"class":402,"line":403},[434],{"type":369,"tag":400,"props":435,"children":436},{},[437],{"type":374,"value":438},"输入：head = [5], left = 1, right = 1\n",{"type":369,"tag":400,"props":440,"children":441},{"class":402,"line":412},[442],{"type":369,"tag":400,"props":443,"children":444},{},[445],{"type":374,"value":446},"输出：[5]\n",{"type":369,"tag":370,"props":448,"children":449},{},[450],{"type":374,"value":451},"提示：",{"type":369,"tag":453,"props":454,"children":455},"ul",{},[456,462,467,472],{"type":369,"tag":457,"props":458,"children":459},"li",{},[460],{"type":374,"value":461},"链表中节点数目为 n",{"type":369,"tag":457,"props":463,"children":464},{},[465],{"type":374,"value":466},"1 \u003C= n \u003C= 500",{"type":369,"tag":457,"props":468,"children":469},{},[470],{"type":374,"value":471},"-500 \u003C= Node.val \u003C= 500",{"type":369,"tag":457,"props":473,"children":474},{},[475],{"type":374,"value":476},"1 \u003C= left \u003C= right \u003C= n",{"type":369,"tag":370,"props":478,"children":479},{},[480],{"type":374,"value":481},"进阶： 你可以使用一趟扫描完成反转吗？",{"type":369,"tag":483,"props":484,"children":486},"h2",{"id":485},"解题思路",[487],{"type":374,"value":485},{"type":369,"tag":370,"props":489,"children":490},{},[491],{"type":374,"value":492},"性质：在反转结束后，从原链表上看，prev 指向反转这一段的末尾，current 指向反转这一段后续的下一个节点",{"type":369,"tag":483,"props":494,"children":496},{"id":495},"实现",[497],{"type":374,"value":495},{"type":369,"tag":390,"props":499,"children":503},{"className":500,"code":501,"language":502,"meta":362,"style":362},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @param {number} left\n * @param {number} right\n * @return {ListNode}\n */\nvar reverseBetween = function (head, left, right) {\n  const dummy = new ListNode();\n  dummy.next = head;\n\n  // p0 代表反转中间段的上一个节点\n  // left = 1 时，构造哨兵节点\n  // 循环后，到达反转后的上一个节点\n  let p0 = dummy;\n  for (let i = 0; i \u003C left - 1; i++) {\n    p0 = p0.next;\n  }\n\n  let prev = null;\n  let current = p0.next;\n  for (let i = 0; i \u003C right - left + 1; i++) {\n    const next = current.next;\n    current.next = prev;\n    prev = current;\n    current = next;\n  }\n\n  // p0 指向 prev\n  // p0 的 next 指向 current\n  p0.next.next = current;\n  p0.next = prev;\n\n  return dummy.next;\n};\n","js",[504],{"type":369,"tag":396,"props":505,"children":506},{"__ignoreMap":362},[507,516,524,533,542,551,560,569,577,604,626,647,665,673,737,776,809,819,828,837,846,872,951,980,989,997,1023,1056,1133,1167,1196,1217,1237,1245,1253,1262,1271,1308,1336,1344,1369],{"type":369,"tag":400,"props":508,"children":509},{"class":402,"line":403},[510],{"type":369,"tag":400,"props":511,"children":513},{"style":512},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[514],{"type":374,"value":515},"/**\n",{"type":369,"tag":400,"props":517,"children":518},{"class":402,"line":412},[519],{"type":369,"tag":400,"props":520,"children":521},{"style":512},[522],{"type":374,"value":523}," * Definition for singly-linked list.\n",{"type":369,"tag":400,"props":525,"children":527},{"class":402,"line":526},3,[528],{"type":369,"tag":400,"props":529,"children":530},{"style":512},[531],{"type":374,"value":532}," * function ListNode(val, next) {\n",{"type":369,"tag":400,"props":534,"children":536},{"class":402,"line":535},4,[537],{"type":369,"tag":400,"props":538,"children":539},{"style":512},[540],{"type":374,"value":541}," *     this.val = (val===undefined ? 0 : val)\n",{"type":369,"tag":400,"props":543,"children":545},{"class":402,"line":544},5,[546],{"type":369,"tag":400,"props":547,"children":548},{"style":512},[549],{"type":374,"value":550}," *     this.next = (next===undefined ? null : next)\n",{"type":369,"tag":400,"props":552,"children":554},{"class":402,"line":553},6,[555],{"type":369,"tag":400,"props":556,"children":557},{"style":512},[558],{"type":374,"value":559}," * }\n",{"type":369,"tag":400,"props":561,"children":563},{"class":402,"line":562},7,[564],{"type":369,"tag":400,"props":565,"children":566},{"style":512},[567],{"type":374,"value":568}," */\n",{"type":369,"tag":400,"props":570,"children":572},{"class":402,"line":571},8,[573],{"type":369,"tag":400,"props":574,"children":575},{"style":512},[576],{"type":374,"value":515},{"type":369,"tag":400,"props":578,"children":580},{"class":402,"line":579},9,[581,586,592,598],{"type":369,"tag":400,"props":582,"children":583},{"style":512},[584],{"type":374,"value":585}," * ",{"type":369,"tag":400,"props":587,"children":589},{"style":588},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[590],{"type":374,"value":591},"@param",{"type":369,"tag":400,"props":593,"children":595},{"style":594},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[596],{"type":374,"value":597}," {ListNode}",{"type":369,"tag":400,"props":599,"children":601},{"style":600},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[602],{"type":374,"value":603}," head\n",{"type":369,"tag":400,"props":605,"children":607},{"class":402,"line":606},10,[608,612,616,621],{"type":369,"tag":400,"props":609,"children":610},{"style":512},[611],{"type":374,"value":585},{"type":369,"tag":400,"props":613,"children":614},{"style":588},[615],{"type":374,"value":591},{"type":369,"tag":400,"props":617,"children":618},{"style":594},[619],{"type":374,"value":620}," {number}",{"type":369,"tag":400,"props":622,"children":623},{"style":600},[624],{"type":374,"value":625}," left\n",{"type":369,"tag":400,"props":627,"children":629},{"class":402,"line":628},11,[630,634,638,642],{"type":369,"tag":400,"props":631,"children":632},{"style":512},[633],{"type":374,"value":585},{"type":369,"tag":400,"props":635,"children":636},{"style":588},[637],{"type":374,"value":591},{"type":369,"tag":400,"props":639,"children":640},{"style":594},[641],{"type":374,"value":620},{"type":369,"tag":400,"props":643,"children":644},{"style":600},[645],{"type":374,"value":646}," right\n",{"type":369,"tag":400,"props":648,"children":650},{"class":402,"line":649},12,[651,655,660],{"type":369,"tag":400,"props":652,"children":653},{"style":512},[654],{"type":374,"value":585},{"type":369,"tag":400,"props":656,"children":657},{"style":588},[658],{"type":374,"value":659},"@return",{"type":369,"tag":400,"props":661,"children":662},{"style":594},[663],{"type":374,"value":664}," {ListNode}\n",{"type":369,"tag":400,"props":666,"children":668},{"class":402,"line":667},13,[669],{"type":369,"tag":400,"props":670,"children":671},{"style":512},[672],{"type":374,"value":568},{"type":369,"tag":400,"props":674,"children":676},{"class":402,"line":675},14,[677,683,689,695,700,706,712,718,723,727,732],{"type":369,"tag":400,"props":678,"children":680},{"style":679},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[681],{"type":374,"value":682},"var",{"type":369,"tag":400,"props":684,"children":686},{"style":685},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[687],{"type":374,"value":688}," reverseBetween",{"type":369,"tag":400,"props":690,"children":692},{"style":691},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[693],{"type":374,"value":694}," =",{"type":369,"tag":400,"props":696,"children":697},{"style":679},[698],{"type":374,"value":699}," function",{"type":369,"tag":400,"props":701,"children":703},{"style":702},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[704],{"type":374,"value":705}," (",{"type":369,"tag":400,"props":707,"children":709},{"style":708},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[710],{"type":374,"value":711},"head",{"type":369,"tag":400,"props":713,"children":715},{"style":714},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[716],{"type":374,"value":717},",",{"type":369,"tag":400,"props":719,"children":720},{"style":708},[721],{"type":374,"value":722}," left",{"type":369,"tag":400,"props":724,"children":725},{"style":714},[726],{"type":374,"value":717},{"type":369,"tag":400,"props":728,"children":729},{"style":708},[730],{"type":374,"value":731}," right",{"type":369,"tag":400,"props":733,"children":734},{"style":702},[735],{"type":374,"value":736},") {\n",{"type":369,"tag":400,"props":738,"children":740},{"class":402,"line":739},15,[741,746,752,756,761,766,771],{"type":369,"tag":400,"props":742,"children":743},{"style":679},[744],{"type":374,"value":745},"  const",{"type":369,"tag":400,"props":747,"children":749},{"style":748},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[750],{"type":374,"value":751}," dummy",{"type":369,"tag":400,"props":753,"children":754},{"style":691},[755],{"type":374,"value":694},{"type":369,"tag":400,"props":757,"children":758},{"style":691},[759],{"type":374,"value":760}," new",{"type":369,"tag":400,"props":762,"children":763},{"style":685},[764],{"type":374,"value":765}," ListNode",{"type":369,"tag":400,"props":767,"children":768},{"style":702},[769],{"type":374,"value":770},"()",{"type":369,"tag":400,"props":772,"children":773},{"style":714},[774],{"type":374,"value":775},";\n",{"type":369,"tag":400,"props":777,"children":779},{"class":402,"line":778},16,[780,785,791,796,800,805],{"type":369,"tag":400,"props":781,"children":782},{"style":748},[783],{"type":374,"value":784},"  dummy",{"type":369,"tag":400,"props":786,"children":788},{"style":787},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[789],{"type":374,"value":790},".",{"type":369,"tag":400,"props":792,"children":793},{"style":748},[794],{"type":374,"value":795},"next",{"type":369,"tag":400,"props":797,"children":798},{"style":691},[799],{"type":374,"value":694},{"type":369,"tag":400,"props":801,"children":802},{"style":748},[803],{"type":374,"value":804}," head",{"type":369,"tag":400,"props":806,"children":807},{"style":714},[808],{"type":374,"value":775},{"type":369,"tag":400,"props":810,"children":812},{"class":402,"line":811},17,[813],{"type":369,"tag":400,"props":814,"children":816},{"emptyLinePlaceholder":815},true,[817],{"type":374,"value":818},"\n",{"type":369,"tag":400,"props":820,"children":822},{"class":402,"line":821},18,[823],{"type":369,"tag":400,"props":824,"children":825},{"style":512},[826],{"type":374,"value":827},"  // p0 代表反转中间段的上一个节点\n",{"type":369,"tag":400,"props":829,"children":831},{"class":402,"line":830},19,[832],{"type":369,"tag":400,"props":833,"children":834},{"style":512},[835],{"type":374,"value":836},"  // left = 1 时，构造哨兵节点\n",{"type":369,"tag":400,"props":838,"children":840},{"class":402,"line":839},20,[841],{"type":369,"tag":400,"props":842,"children":843},{"style":512},[844],{"type":374,"value":845},"  // 循环后，到达反转后的上一个节点\n",{"type":369,"tag":400,"props":847,"children":849},{"class":402,"line":848},21,[850,855,860,864,868],{"type":369,"tag":400,"props":851,"children":852},{"style":679},[853],{"type":374,"value":854},"  let",{"type":369,"tag":400,"props":856,"children":857},{"style":748},[858],{"type":374,"value":859}," p0",{"type":369,"tag":400,"props":861,"children":862},{"style":691},[863],{"type":374,"value":694},{"type":369,"tag":400,"props":865,"children":866},{"style":748},[867],{"type":374,"value":751},{"type":369,"tag":400,"props":869,"children":870},{"style":714},[871],{"type":374,"value":775},{"type":369,"tag":400,"props":873,"children":875},{"class":402,"line":874},22,[876,882,886,891,896,900,906,911,915,920,924,929,934,938,942,947],{"type":369,"tag":400,"props":877,"children":879},{"style":878},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[880],{"type":374,"value":881},"  for",{"type":369,"tag":400,"props":883,"children":884},{"style":702},[885],{"type":374,"value":705},{"type":369,"tag":400,"props":887,"children":888},{"style":679},[889],{"type":374,"value":890},"let",{"type":369,"tag":400,"props":892,"children":893},{"style":748},[894],{"type":374,"value":895}," i",{"type":369,"tag":400,"props":897,"children":898},{"style":691},[899],{"type":374,"value":694},{"type":369,"tag":400,"props":901,"children":903},{"style":902},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[904],{"type":374,"value":905}," 0",{"type":369,"tag":400,"props":907,"children":908},{"style":714},[909],{"type":374,"value":910},";",{"type":369,"tag":400,"props":912,"children":913},{"style":748},[914],{"type":374,"value":895},{"type":369,"tag":400,"props":916,"children":917},{"style":691},[918],{"type":374,"value":919}," \u003C",{"type":369,"tag":400,"props":921,"children":922},{"style":748},[923],{"type":374,"value":722},{"type":369,"tag":400,"props":925,"children":926},{"style":691},[927],{"type":374,"value":928}," -",{"type":369,"tag":400,"props":930,"children":931},{"style":902},[932],{"type":374,"value":933}," 1",{"type":369,"tag":400,"props":935,"children":936},{"style":714},[937],{"type":374,"value":910},{"type":369,"tag":400,"props":939,"children":940},{"style":748},[941],{"type":374,"value":895},{"type":369,"tag":400,"props":943,"children":944},{"style":691},[945],{"type":374,"value":946},"++",{"type":369,"tag":400,"props":948,"children":949},{"style":702},[950],{"type":374,"value":736},{"type":369,"tag":400,"props":952,"children":954},{"class":402,"line":953},23,[955,960,964,968,972,976],{"type":369,"tag":400,"props":956,"children":957},{"style":748},[958],{"type":374,"value":959},"    p0",{"type":369,"tag":400,"props":961,"children":962},{"style":691},[963],{"type":374,"value":694},{"type":369,"tag":400,"props":965,"children":966},{"style":748},[967],{"type":374,"value":859},{"type":369,"tag":400,"props":969,"children":970},{"style":787},[971],{"type":374,"value":790},{"type":369,"tag":400,"props":973,"children":974},{"style":748},[975],{"type":374,"value":795},{"type":369,"tag":400,"props":977,"children":978},{"style":714},[979],{"type":374,"value":775},{"type":369,"tag":400,"props":981,"children":983},{"class":402,"line":982},24,[984],{"type":369,"tag":400,"props":985,"children":986},{"style":702},[987],{"type":374,"value":988},"  }\n",{"type":369,"tag":400,"props":990,"children":992},{"class":402,"line":991},25,[993],{"type":369,"tag":400,"props":994,"children":995},{"emptyLinePlaceholder":815},[996],{"type":374,"value":818},{"type":369,"tag":400,"props":998,"children":1000},{"class":402,"line":999},26,[1001,1005,1010,1014,1019],{"type":369,"tag":400,"props":1002,"children":1003},{"style":679},[1004],{"type":374,"value":854},{"type":369,"tag":400,"props":1006,"children":1007},{"style":748},[1008],{"type":374,"value":1009}," prev",{"type":369,"tag":400,"props":1011,"children":1012},{"style":691},[1013],{"type":374,"value":694},{"type":369,"tag":400,"props":1015,"children":1016},{"style":902},[1017],{"type":374,"value":1018}," null",{"type":369,"tag":400,"props":1020,"children":1021},{"style":714},[1022],{"type":374,"value":775},{"type":369,"tag":400,"props":1024,"children":1026},{"class":402,"line":1025},27,[1027,1031,1036,1040,1044,1048,1052],{"type":369,"tag":400,"props":1028,"children":1029},{"style":679},[1030],{"type":374,"value":854},{"type":369,"tag":400,"props":1032,"children":1033},{"style":748},[1034],{"type":374,"value":1035}," current",{"type":369,"tag":400,"props":1037,"children":1038},{"style":691},[1039],{"type":374,"value":694},{"type":369,"tag":400,"props":1041,"children":1042},{"style":748},[1043],{"type":374,"value":859},{"type":369,"tag":400,"props":1045,"children":1046},{"style":787},[1047],{"type":374,"value":790},{"type":369,"tag":400,"props":1049,"children":1050},{"style":748},[1051],{"type":374,"value":795},{"type":369,"tag":400,"props":1053,"children":1054},{"style":714},[1055],{"type":374,"value":775},{"type":369,"tag":400,"props":1057,"children":1059},{"class":402,"line":1058},28,[1060,1064,1068,1072,1076,1080,1084,1088,1092,1096,1100,1104,1108,1113,1117,1121,1125,1129],{"type":369,"tag":400,"props":1061,"children":1062},{"style":878},[1063],{"type":374,"value":881},{"type":369,"tag":400,"props":1065,"children":1066},{"style":702},[1067],{"type":374,"value":705},{"type":369,"tag":400,"props":1069,"children":1070},{"style":679},[1071],{"type":374,"value":890},{"type":369,"tag":400,"props":1073,"children":1074},{"style":748},[1075],{"type":374,"value":895},{"type":369,"tag":400,"props":1077,"children":1078},{"style":691},[1079],{"type":374,"value":694},{"type":369,"tag":400,"props":1081,"children":1082},{"style":902},[1083],{"type":374,"value":905},{"type":369,"tag":400,"props":1085,"children":1086},{"style":714},[1087],{"type":374,"value":910},{"type":369,"tag":400,"props":1089,"children":1090},{"style":748},[1091],{"type":374,"value":895},{"type":369,"tag":400,"props":1093,"children":1094},{"style":691},[1095],{"type":374,"value":919},{"type":369,"tag":400,"props":1097,"children":1098},{"style":748},[1099],{"type":374,"value":731},{"type":369,"tag":400,"props":1101,"children":1102},{"style":691},[1103],{"type":374,"value":928},{"type":369,"tag":400,"props":1105,"children":1106},{"style":748},[1107],{"type":374,"value":722},{"type":369,"tag":400,"props":1109,"children":1110},{"style":691},[1111],{"type":374,"value":1112}," +",{"type":369,"tag":400,"props":1114,"children":1115},{"style":902},[1116],{"type":374,"value":933},{"type":369,"tag":400,"props":1118,"children":1119},{"style":714},[1120],{"type":374,"value":910},{"type":369,"tag":400,"props":1122,"children":1123},{"style":748},[1124],{"type":374,"value":895},{"type":369,"tag":400,"props":1126,"children":1127},{"style":691},[1128],{"type":374,"value":946},{"type":369,"tag":400,"props":1130,"children":1131},{"style":702},[1132],{"type":374,"value":736},{"type":369,"tag":400,"props":1134,"children":1136},{"class":402,"line":1135},29,[1137,1142,1147,1151,1155,1159,1163],{"type":369,"tag":400,"props":1138,"children":1139},{"style":679},[1140],{"type":374,"value":1141},"    const",{"type":369,"tag":400,"props":1143,"children":1144},{"style":748},[1145],{"type":374,"value":1146}," next",{"type":369,"tag":400,"props":1148,"children":1149},{"style":691},[1150],{"type":374,"value":694},{"type":369,"tag":400,"props":1152,"children":1153},{"style":748},[1154],{"type":374,"value":1035},{"type":369,"tag":400,"props":1156,"children":1157},{"style":787},[1158],{"type":374,"value":790},{"type":369,"tag":400,"props":1160,"children":1161},{"style":748},[1162],{"type":374,"value":795},{"type":369,"tag":400,"props":1164,"children":1165},{"style":714},[1166],{"type":374,"value":775},{"type":369,"tag":400,"props":1168,"children":1170},{"class":402,"line":1169},30,[1171,1176,1180,1184,1188,1192],{"type":369,"tag":400,"props":1172,"children":1173},{"style":748},[1174],{"type":374,"value":1175},"    current",{"type":369,"tag":400,"props":1177,"children":1178},{"style":787},[1179],{"type":374,"value":790},{"type":369,"tag":400,"props":1181,"children":1182},{"style":748},[1183],{"type":374,"value":795},{"type":369,"tag":400,"props":1185,"children":1186},{"style":691},[1187],{"type":374,"value":694},{"type":369,"tag":400,"props":1189,"children":1190},{"style":748},[1191],{"type":374,"value":1009},{"type":369,"tag":400,"props":1193,"children":1194},{"style":714},[1195],{"type":374,"value":775},{"type":369,"tag":400,"props":1197,"children":1199},{"class":402,"line":1198},31,[1200,1205,1209,1213],{"type":369,"tag":400,"props":1201,"children":1202},{"style":748},[1203],{"type":374,"value":1204},"    prev",{"type":369,"tag":400,"props":1206,"children":1207},{"style":691},[1208],{"type":374,"value":694},{"type":369,"tag":400,"props":1210,"children":1211},{"style":748},[1212],{"type":374,"value":1035},{"type":369,"tag":400,"props":1214,"children":1215},{"style":714},[1216],{"type":374,"value":775},{"type":369,"tag":400,"props":1218,"children":1220},{"class":402,"line":1219},32,[1221,1225,1229,1233],{"type":369,"tag":400,"props":1222,"children":1223},{"style":748},[1224],{"type":374,"value":1175},{"type":369,"tag":400,"props":1226,"children":1227},{"style":691},[1228],{"type":374,"value":694},{"type":369,"tag":400,"props":1230,"children":1231},{"style":748},[1232],{"type":374,"value":1146},{"type":369,"tag":400,"props":1234,"children":1235},{"style":714},[1236],{"type":374,"value":775},{"type":369,"tag":400,"props":1238,"children":1240},{"class":402,"line":1239},33,[1241],{"type":369,"tag":400,"props":1242,"children":1243},{"style":702},[1244],{"type":374,"value":988},{"type":369,"tag":400,"props":1246,"children":1248},{"class":402,"line":1247},34,[1249],{"type":369,"tag":400,"props":1250,"children":1251},{"emptyLinePlaceholder":815},[1252],{"type":374,"value":818},{"type":369,"tag":400,"props":1254,"children":1256},{"class":402,"line":1255},35,[1257],{"type":369,"tag":400,"props":1258,"children":1259},{"style":512},[1260],{"type":374,"value":1261},"  // p0 指向 prev\n",{"type":369,"tag":400,"props":1263,"children":1265},{"class":402,"line":1264},36,[1266],{"type":369,"tag":400,"props":1267,"children":1268},{"style":512},[1269],{"type":374,"value":1270},"  // p0 的 next 指向 current\n",{"type":369,"tag":400,"props":1272,"children":1274},{"class":402,"line":1273},37,[1275,1280,1284,1288,1292,1296,1300,1304],{"type":369,"tag":400,"props":1276,"children":1277},{"style":748},[1278],{"type":374,"value":1279},"  p0",{"type":369,"tag":400,"props":1281,"children":1282},{"style":787},[1283],{"type":374,"value":790},{"type":369,"tag":400,"props":1285,"children":1286},{"style":748},[1287],{"type":374,"value":795},{"type":369,"tag":400,"props":1289,"children":1290},{"style":787},[1291],{"type":374,"value":790},{"type":369,"tag":400,"props":1293,"children":1294},{"style":748},[1295],{"type":374,"value":795},{"type":369,"tag":400,"props":1297,"children":1298},{"style":691},[1299],{"type":374,"value":694},{"type":369,"tag":400,"props":1301,"children":1302},{"style":748},[1303],{"type":374,"value":1035},{"type":369,"tag":400,"props":1305,"children":1306},{"style":714},[1307],{"type":374,"value":775},{"type":369,"tag":400,"props":1309,"children":1311},{"class":402,"line":1310},38,[1312,1316,1320,1324,1328,1332],{"type":369,"tag":400,"props":1313,"children":1314},{"style":748},[1315],{"type":374,"value":1279},{"type":369,"tag":400,"props":1317,"children":1318},{"style":787},[1319],{"type":374,"value":790},{"type":369,"tag":400,"props":1321,"children":1322},{"style":748},[1323],{"type":374,"value":795},{"type":369,"tag":400,"props":1325,"children":1326},{"style":691},[1327],{"type":374,"value":694},{"type":369,"tag":400,"props":1329,"children":1330},{"style":748},[1331],{"type":374,"value":1009},{"type":369,"tag":400,"props":1333,"children":1334},{"style":714},[1335],{"type":374,"value":775},{"type":369,"tag":400,"props":1337,"children":1339},{"class":402,"line":1338},39,[1340],{"type":369,"tag":400,"props":1341,"children":1342},{"emptyLinePlaceholder":815},[1343],{"type":374,"value":818},{"type":369,"tag":400,"props":1345,"children":1347},{"class":402,"line":1346},40,[1348,1353,1357,1361,1365],{"type":369,"tag":400,"props":1349,"children":1350},{"style":878},[1351],{"type":374,"value":1352},"  return",{"type":369,"tag":400,"props":1354,"children":1355},{"style":748},[1356],{"type":374,"value":751},{"type":369,"tag":400,"props":1358,"children":1359},{"style":787},[1360],{"type":374,"value":790},{"type":369,"tag":400,"props":1362,"children":1363},{"style":748},[1364],{"type":374,"value":795},{"type":369,"tag":400,"props":1366,"children":1367},{"style":714},[1368],{"type":374,"value":775},{"type":369,"tag":400,"props":1370,"children":1372},{"class":402,"line":1371},41,[1373,1378],{"type":369,"tag":400,"props":1374,"children":1375},{"style":702},[1376],{"type":374,"value":1377},"}",{"type":369,"tag":400,"props":1379,"children":1380},{"style":714},[1381],{"type":374,"value":775},{"type":369,"tag":1383,"props":1384,"children":1385},"style",{},[1386],{"type":374,"value":1387},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":362,"searchDepth":544,"depth":544,"links":1389},[1390,1391],{"id":485,"depth":412,"text":485},{"id":495,"depth":412,"text":495},"markdown","content:2.code:1.algorithm:3.leetcode:92.reverse-linked-list-ii.md","content","2.code/1.algorithm/3.leetcode/92.reverse-linked-list-ii.md","md",[1398,1400],{"_path":142,"title":141,"description":1399},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",{"_path":148,"title":147,"description":1401},"给定一个二叉树的根节点 root ，返回 它的 中序 遍历 。",1712748637586]