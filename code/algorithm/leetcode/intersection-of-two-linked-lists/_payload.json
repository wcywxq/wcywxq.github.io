[{"data":1,"prerenderedAt":2312},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/intersection-of-two-linked-lists":320,"/code/algorithm/leetcode/intersection-of-two-linked-lists-surround":2307},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,264,313],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,53],{"title":41,"_path":42,"children":43},"剑指 offer","/code/algorithm/sword-ofter",[44,47,50],{"title":45,"_path":46},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":48,"_path":49},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":51,"_path":52},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":54,"_path":55,"children":56},"力扣 leetCode","/code/algorithm/leetcode",[57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261],{"title":58,"_path":59},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":61,"_path":62},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":64,"_path":65},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":67,"_path":68},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":70,"_path":71},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":73,"_path":74},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":76,"_path":77},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":79,"_path":80},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":82,"_path":83},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":85,"_path":86},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":88,"_path":89},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":91,"_path":92},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":94,"_path":95},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":97,"_path":98},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":100,"_path":101},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":103,"_path":104},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":106,"_path":107},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":109,"_path":110},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":112,"_path":113},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":115,"_path":116},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":118,"_path":119},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":121,"_path":122},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":124,"_path":125},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":127,"_path":128},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":130,"_path":131},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":133,"_path":134},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":136,"_path":137},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":139,"_path":140},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":142,"_path":143},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":145,"_path":146},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":148,"_path":149},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":151,"_path":152},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":154,"_path":155},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":157,"_path":158},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":160,"_path":161},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":163,"_path":164},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":166,"_path":167},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":169,"_path":170},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":172,"_path":173},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":175,"_path":176},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":178,"_path":179},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":181,"_path":182},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":184,"_path":185},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":187,"_path":188},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":190,"_path":191},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":193,"_path":194},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":196,"_path":197},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":199,"_path":200},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":202,"_path":203},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":205,"_path":206},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":208,"_path":209},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":211,"_path":212},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":214,"_path":215},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":217,"_path":218},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":220,"_path":221},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":223,"_path":224},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":226,"_path":227},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":229,"_path":230},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":232,"_path":233},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":235,"_path":236},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":238,"_path":239},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":241,"_path":242},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":244,"_path":245},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":247,"_path":248},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":250,"_path":251},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":253,"_path":254},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":256,"_path":257},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":259,"_path":260},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":262,"_path":263},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":265,"_path":266,"children":267},"源码实现","/code/source",[268,293,306],{"title":269,"_path":270,"children":271},"原生 api","/code/source/native-api",[272,275,278,281,284,287,290],{"title":273,"_path":274},"ajax","/code/source/native-api/ajax",{"title":276,"_path":277},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":279,"_path":280},"new 操作符","/code/source/native-api/new",{"title":282,"_path":283},"instanceof 关键字","/code/source/native-api/instanceof",{"title":285,"_path":286},"定时器","/code/source/native-api/timer",{"title":288,"_path":289},"JSON.stringify","/code/source/native-api/json-stringify",{"title":291,"_path":292},"Iterator 迭代器","/code/source/native-api/iterator",{"title":294,"_path":295,"children":296},"数组 Array","/code/source/array",[297,300,303],{"title":298,"_path":299},"数组去重","/code/source/array/remove-duplicate",{"title":301,"_path":302},"数组扁平化","/code/source/array/flat",{"title":304,"_path":305},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":307,"_path":308,"children":309},"字符串 String","/code/source/string",[310],{"title":311,"_path":312},"repeat()","/code/source/string/repeat",{"title":314,"_path":315,"children":316},"业务场景","/code/scene",[317],{"title":318,"_path":319},"顺序打印 url 并支持 retry","/code/scene/promise-url-retry",{"_path":188,"_dir":321,"_draft":322,"_partial":322,"_locale":323,"title":187,"description":324,"url":325,"body":326,"_type":2302,"_id":2303,"_source":2304,"_file":2305,"_extension":2306},"leetcode",false,"","给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。","https://leetcode.cn/problems/intersection-of-two-linked-lists",{"type":327,"children":328,"toc":2294},"root",[329,336,341,350,355,360,365,370,400,410,476,486,533,538,546,593,598,641,646,652,657,663,1245,1250,1718,1723,2288],{"type":330,"tag":331,"props":332,"children":333},"element","p",{},[334],{"type":335,"value":324},"text",{"type":330,"tag":331,"props":337,"children":338},{},[339],{"type":335,"value":340},"图示两个链表在节点 c1 开始相交：",{"type":330,"tag":331,"props":342,"children":343},{},[344],{"type":330,"tag":345,"props":346,"children":349},"img",{"alt":347,"src":348},"statement","/img/code_leetcode_No.160_statement.png",[],{"type":330,"tag":331,"props":351,"children":352},{},[353],{"type":335,"value":354},"题目数据 保证 整个链式结构中不存在环。",{"type":330,"tag":331,"props":356,"children":357},{},[358],{"type":335,"value":359},"注意，函数返回结果后，链表必须 保持其原始结构 。",{"type":330,"tag":331,"props":361,"children":362},{},[363],{"type":335,"value":364},"自定义评测：",{"type":330,"tag":331,"props":366,"children":367},{},[368],{"type":335,"value":369},"评测系统 的输入如下（你设计的程序 不适用 此输入）：",{"type":330,"tag":371,"props":372,"children":373},"ul",{},[374,380,385,390,395],{"type":330,"tag":375,"props":376,"children":377},"li",{},[378],{"type":335,"value":379},"intersectVal - 相交的起始节点的值。如果不存在相交节点，这一值为 0",{"type":330,"tag":375,"props":381,"children":382},{},[383],{"type":335,"value":384},"listA - 第一个链表",{"type":330,"tag":375,"props":386,"children":387},{},[388],{"type":335,"value":389},"listB - 第二个链表",{"type":330,"tag":375,"props":391,"children":392},{},[393],{"type":335,"value":394},"skipA - 在 listA 中（从头节点开始）跳到交叉节点的节点数",{"type":330,"tag":375,"props":396,"children":397},{},[398],{"type":335,"value":399},"skipB - 在 listB 中（从头节点开始）跳到交叉节点的节点数\n评测系统将根据这些输入创建链式数据结构，并将两个头节点 headA 和 headB 传递给你的程序。如果程序能够正确返回相交节点，那么你的解决方案将被 视作正确答案 。",{"type":330,"tag":331,"props":401,"children":402},{},[403,405],{"type":335,"value":404},"示例 1：\n",{"type":330,"tag":345,"props":406,"children":409},{"alt":407,"src":408},"example_1","/img/code_leetcode_No.160_example_1.png",[],{"type":330,"tag":411,"props":412,"children":415},"pre",{"className":413,"code":414,"language":335,"meta":323,"style":323},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：intersectVal = 8, listA = [4,1,8,4,5], listB = [5,6,1,8,4,5], skipA = 2, skipB = 3\n输出：Intersected at '8'\n解释：相交节点的值为 8 （注意，如果两个链表相交则不能为 0）。\n从各自的表头开始算起，链表 A 为 [4,1,8,4,5]，链表 B 为 [5,6,1,8,4,5]。\n在 A 中，相交节点前有 2 个节点；在 B 中，相交节点前有 3 个节点。\n— 请注意相交节点的值不为 1，因为在链表 A 和链表 B 之中值为 1 的节点 (A 中第二个节点和 B 中第三个节点) 是不同的节点。换句话说，它们在内存中指向两个不同的位置，而链表 A 和链表 B 中值为 8 的节点 (A 中第三个节点，B 中第四个节点) 在内存中指向相同的位置。\n",[416],{"type":330,"tag":417,"props":418,"children":419},"code",{"__ignoreMap":323},[420,431,440,449,458,467],{"type":330,"tag":421,"props":422,"children":425},"span",{"class":423,"line":424},"line",1,[426],{"type":330,"tag":421,"props":427,"children":428},{},[429],{"type":335,"value":430},"输入：intersectVal = 8, listA = [4,1,8,4,5], listB = [5,6,1,8,4,5], skipA = 2, skipB = 3\n",{"type":330,"tag":421,"props":432,"children":434},{"class":423,"line":433},2,[435],{"type":330,"tag":421,"props":436,"children":437},{},[438],{"type":335,"value":439},"输出：Intersected at '8'\n",{"type":330,"tag":421,"props":441,"children":443},{"class":423,"line":442},3,[444],{"type":330,"tag":421,"props":445,"children":446},{},[447],{"type":335,"value":448},"解释：相交节点的值为 8 （注意，如果两个链表相交则不能为 0）。\n",{"type":330,"tag":421,"props":450,"children":452},{"class":423,"line":451},4,[453],{"type":330,"tag":421,"props":454,"children":455},{},[456],{"type":335,"value":457},"从各自的表头开始算起，链表 A 为 [4,1,8,4,5]，链表 B 为 [5,6,1,8,4,5]。\n",{"type":330,"tag":421,"props":459,"children":461},{"class":423,"line":460},5,[462],{"type":330,"tag":421,"props":463,"children":464},{},[465],{"type":335,"value":466},"在 A 中，相交节点前有 2 个节点；在 B 中，相交节点前有 3 个节点。\n",{"type":330,"tag":421,"props":468,"children":470},{"class":423,"line":469},6,[471],{"type":330,"tag":421,"props":472,"children":473},{},[474],{"type":335,"value":475},"— 请注意相交节点的值不为 1，因为在链表 A 和链表 B 之中值为 1 的节点 (A 中第二个节点和 B 中第三个节点) 是不同的节点。换句话说，它们在内存中指向两个不同的位置，而链表 A 和链表 B 中值为 8 的节点 (A 中第三个节点，B 中第四个节点) 在内存中指向相同的位置。\n",{"type":330,"tag":331,"props":477,"children":478},{},[479,481],{"type":335,"value":480},"示例 2：\n",{"type":330,"tag":345,"props":482,"children":485},{"alt":483,"src":484},"example_2","/img/code_leetcode_No.160_example_2.png",[],{"type":330,"tag":411,"props":487,"children":489},{"className":413,"code":488,"language":335,"meta":323,"style":323},"输入：intersectVal = 2, listA = [1,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1\n输出：Intersected at '2'\n解释：相交节点的值为 2 （注意，如果两个链表相交则不能为 0）。\n从各自的表头开始算起，链表 A 为 [1,9,1,2,4]，链表 B 为 [3,2,4]。\n在 A 中，相交节点前有 3 个节点；在 B 中，相交节点前有 1 个节点。\n",[490],{"type":330,"tag":417,"props":491,"children":492},{"__ignoreMap":323},[493,501,509,517,525],{"type":330,"tag":421,"props":494,"children":495},{"class":423,"line":424},[496],{"type":330,"tag":421,"props":497,"children":498},{},[499],{"type":335,"value":500},"输入：intersectVal = 2, listA = [1,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1\n",{"type":330,"tag":421,"props":502,"children":503},{"class":423,"line":433},[504],{"type":330,"tag":421,"props":505,"children":506},{},[507],{"type":335,"value":508},"输出：Intersected at '2'\n",{"type":330,"tag":421,"props":510,"children":511},{"class":423,"line":442},[512],{"type":330,"tag":421,"props":513,"children":514},{},[515],{"type":335,"value":516},"解释：相交节点的值为 2 （注意，如果两个链表相交则不能为 0）。\n",{"type":330,"tag":421,"props":518,"children":519},{"class":423,"line":451},[520],{"type":330,"tag":421,"props":521,"children":522},{},[523],{"type":335,"value":524},"从各自的表头开始算起，链表 A 为 [1,9,1,2,4]，链表 B 为 [3,2,4]。\n",{"type":330,"tag":421,"props":526,"children":527},{"class":423,"line":460},[528],{"type":330,"tag":421,"props":529,"children":530},{},[531],{"type":335,"value":532},"在 A 中，相交节点前有 3 个节点；在 B 中，相交节点前有 1 个节点。\n",{"type":330,"tag":331,"props":534,"children":535},{},[536],{"type":335,"value":537},"示例 3：",{"type":330,"tag":331,"props":539,"children":540},{},[541],{"type":330,"tag":345,"props":542,"children":545},{"alt":543,"src":544},"example_3","/img/code_leetcode_No.160_example_3.png",[],{"type":330,"tag":411,"props":547,"children":549},{"className":413,"code":548,"language":335,"meta":323,"style":323},"输入：intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2\n输出：null\n解释：从各自的表头开始算起，链表 A 为 [2,6,4]，链表 B 为 [1,5]。\n由于这两个链表不相交，所以 intersectVal 必须为 0，而 skipA 和 skipB 可以是任意值。\n这两个链表不相交，因此返回 null 。\n",[550],{"type":330,"tag":417,"props":551,"children":552},{"__ignoreMap":323},[553,561,569,577,585],{"type":330,"tag":421,"props":554,"children":555},{"class":423,"line":424},[556],{"type":330,"tag":421,"props":557,"children":558},{},[559],{"type":335,"value":560},"输入：intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2\n",{"type":330,"tag":421,"props":562,"children":563},{"class":423,"line":433},[564],{"type":330,"tag":421,"props":565,"children":566},{},[567],{"type":335,"value":568},"输出：null\n",{"type":330,"tag":421,"props":570,"children":571},{"class":423,"line":442},[572],{"type":330,"tag":421,"props":573,"children":574},{},[575],{"type":335,"value":576},"解释：从各自的表头开始算起，链表 A 为 [2,6,4]，链表 B 为 [1,5]。\n",{"type":330,"tag":421,"props":578,"children":579},{"class":423,"line":451},[580],{"type":330,"tag":421,"props":581,"children":582},{},[583],{"type":335,"value":584},"由于这两个链表不相交，所以 intersectVal 必须为 0，而 skipA 和 skipB 可以是任意值。\n",{"type":330,"tag":421,"props":586,"children":587},{"class":423,"line":460},[588],{"type":330,"tag":421,"props":589,"children":590},{},[591],{"type":335,"value":592},"这两个链表不相交，因此返回 null 。\n",{"type":330,"tag":331,"props":594,"children":595},{},[596],{"type":335,"value":597},"提示：",{"type":330,"tag":371,"props":599,"children":600},{},[601,606,611,616,621,626,631,636],{"type":330,"tag":375,"props":602,"children":603},{},[604],{"type":335,"value":605},"listA 中节点数目为 m",{"type":330,"tag":375,"props":607,"children":608},{},[609],{"type":335,"value":610},"listB 中节点数目为 n",{"type":330,"tag":375,"props":612,"children":613},{},[614],{"type":335,"value":615},"1 \u003C= m, n \u003C= 3 * 10^4",{"type":330,"tag":375,"props":617,"children":618},{},[619],{"type":335,"value":620},"1 \u003C= Node.val \u003C= 10^5",{"type":330,"tag":375,"props":622,"children":623},{},[624],{"type":335,"value":625},"0 \u003C= skipA \u003C= m",{"type":330,"tag":375,"props":627,"children":628},{},[629],{"type":335,"value":630},"0 \u003C= skipB \u003C= n",{"type":330,"tag":375,"props":632,"children":633},{},[634],{"type":335,"value":635},"如果 listA 和 listB 没有交点，intersectVal 为 0",{"type":330,"tag":375,"props":637,"children":638},{},[639],{"type":335,"value":640},"如果 listA 和 listB 有交点，intersectVal == listA[skipA] == listB[skipB]",{"type":330,"tag":331,"props":642,"children":643},{},[644],{"type":335,"value":645},"进阶：你能否设计一个时间复杂度 O(m + n) 、仅用 O(1) 内存的解决方案？",{"type":330,"tag":647,"props":648,"children":650},"h2",{"id":649},"解题思路",[651],{"type":335,"value":649},{"type":330,"tag":647,"props":653,"children":655},{"id":654},"实现",[656],{"type":335,"value":654},{"type":330,"tag":658,"props":659,"children":661},"h3",{"id":660},"暴力破解",[662],{"type":335,"value":660},{"type":330,"tag":411,"props":664,"children":668},{"className":665,"code":666,"language":667,"meta":323,"style":323},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for singly-linked list.\n */\nfunction ListNode(val) {\n  this.val = val;\n  this.next = null;\n}\n\n/**\n * @param {ListNode} headA\n * @param {ListNode} headB\n * @return {ListNode}\n */\nvar getIntersectionNode = function (headA, headB) {\n  if (!headA || !headB) return null;\n  let pA = headA;\n  while (pA) {\n    let pB = headB;\n    while (pB) {\n      if (pA === pB) return pA;\n      pB = pB.next;\n    }\n    pA = pA.next;\n  }\n  return pA;\n};\n","js",[669],{"type":330,"tag":417,"props":670,"children":671},{"__ignoreMap":323},[672,681,689,697,729,766,796,805,815,823,850,871,889,897,944,1000,1027,1049,1075,1097,1139,1168,1177,1206,1215,1232],{"type":330,"tag":421,"props":673,"children":674},{"class":423,"line":424},[675],{"type":330,"tag":421,"props":676,"children":678},{"style":677},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[679],{"type":335,"value":680},"/**\n",{"type":330,"tag":421,"props":682,"children":683},{"class":423,"line":433},[684],{"type":330,"tag":421,"props":685,"children":686},{"style":677},[687],{"type":335,"value":688}," * Definition for singly-linked list.\n",{"type":330,"tag":421,"props":690,"children":691},{"class":423,"line":442},[692],{"type":330,"tag":421,"props":693,"children":694},{"style":677},[695],{"type":335,"value":696}," */\n",{"type":330,"tag":421,"props":698,"children":699},{"class":423,"line":451},[700,706,712,718,724],{"type":330,"tag":421,"props":701,"children":703},{"style":702},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[704],{"type":335,"value":705},"function",{"type":330,"tag":421,"props":707,"children":709},{"style":708},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[710],{"type":335,"value":711}," ListNode",{"type":330,"tag":421,"props":713,"children":715},{"style":714},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[716],{"type":335,"value":717},"(",{"type":330,"tag":421,"props":719,"children":721},{"style":720},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[722],{"type":335,"value":723},"val",{"type":330,"tag":421,"props":725,"children":726},{"style":714},[727],{"type":335,"value":728},") {\n",{"type":330,"tag":421,"props":730,"children":731},{"class":423,"line":460},[732,738,744,749,755,760],{"type":330,"tag":421,"props":733,"children":735},{"style":734},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[736],{"type":335,"value":737},"  this",{"type":330,"tag":421,"props":739,"children":741},{"style":740},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[742],{"type":335,"value":743},".",{"type":330,"tag":421,"props":745,"children":747},{"style":746},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[748],{"type":335,"value":723},{"type":330,"tag":421,"props":750,"children":752},{"style":751},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[753],{"type":335,"value":754}," =",{"type":330,"tag":421,"props":756,"children":757},{"style":746},[758],{"type":335,"value":759}," val",{"type":330,"tag":421,"props":761,"children":763},{"style":762},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[764],{"type":335,"value":765},";\n",{"type":330,"tag":421,"props":767,"children":768},{"class":423,"line":469},[769,773,777,782,786,792],{"type":330,"tag":421,"props":770,"children":771},{"style":734},[772],{"type":335,"value":737},{"type":330,"tag":421,"props":774,"children":775},{"style":740},[776],{"type":335,"value":743},{"type":330,"tag":421,"props":778,"children":779},{"style":746},[780],{"type":335,"value":781},"next",{"type":330,"tag":421,"props":783,"children":784},{"style":751},[785],{"type":335,"value":754},{"type":330,"tag":421,"props":787,"children":789},{"style":788},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[790],{"type":335,"value":791}," null",{"type":330,"tag":421,"props":793,"children":794},{"style":762},[795],{"type":335,"value":765},{"type":330,"tag":421,"props":797,"children":799},{"class":423,"line":798},7,[800],{"type":330,"tag":421,"props":801,"children":802},{"style":714},[803],{"type":335,"value":804},"}\n",{"type":330,"tag":421,"props":806,"children":808},{"class":423,"line":807},8,[809],{"type":330,"tag":421,"props":810,"children":812},{"emptyLinePlaceholder":811},true,[813],{"type":335,"value":814},"\n",{"type":330,"tag":421,"props":816,"children":818},{"class":423,"line":817},9,[819],{"type":330,"tag":421,"props":820,"children":821},{"style":677},[822],{"type":335,"value":680},{"type":330,"tag":421,"props":824,"children":826},{"class":423,"line":825},10,[827,832,838,844],{"type":330,"tag":421,"props":828,"children":829},{"style":677},[830],{"type":335,"value":831}," * ",{"type":330,"tag":421,"props":833,"children":835},{"style":834},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[836],{"type":335,"value":837},"@param",{"type":330,"tag":421,"props":839,"children":841},{"style":840},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[842],{"type":335,"value":843}," {ListNode}",{"type":330,"tag":421,"props":845,"children":847},{"style":846},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[848],{"type":335,"value":849}," headA\n",{"type":330,"tag":421,"props":851,"children":853},{"class":423,"line":852},11,[854,858,862,866],{"type":330,"tag":421,"props":855,"children":856},{"style":677},[857],{"type":335,"value":831},{"type":330,"tag":421,"props":859,"children":860},{"style":834},[861],{"type":335,"value":837},{"type":330,"tag":421,"props":863,"children":864},{"style":840},[865],{"type":335,"value":843},{"type":330,"tag":421,"props":867,"children":868},{"style":846},[869],{"type":335,"value":870}," headB\n",{"type":330,"tag":421,"props":872,"children":874},{"class":423,"line":873},12,[875,879,884],{"type":330,"tag":421,"props":876,"children":877},{"style":677},[878],{"type":335,"value":831},{"type":330,"tag":421,"props":880,"children":881},{"style":834},[882],{"type":335,"value":883},"@return",{"type":330,"tag":421,"props":885,"children":886},{"style":840},[887],{"type":335,"value":888}," {ListNode}\n",{"type":330,"tag":421,"props":890,"children":892},{"class":423,"line":891},13,[893],{"type":330,"tag":421,"props":894,"children":895},{"style":677},[896],{"type":335,"value":696},{"type":330,"tag":421,"props":898,"children":900},{"class":423,"line":899},14,[901,906,911,915,920,925,930,935,940],{"type":330,"tag":421,"props":902,"children":903},{"style":702},[904],{"type":335,"value":905},"var",{"type":330,"tag":421,"props":907,"children":908},{"style":708},[909],{"type":335,"value":910}," getIntersectionNode",{"type":330,"tag":421,"props":912,"children":913},{"style":751},[914],{"type":335,"value":754},{"type":330,"tag":421,"props":916,"children":917},{"style":702},[918],{"type":335,"value":919}," function",{"type":330,"tag":421,"props":921,"children":922},{"style":714},[923],{"type":335,"value":924}," (",{"type":330,"tag":421,"props":926,"children":927},{"style":720},[928],{"type":335,"value":929},"headA",{"type":330,"tag":421,"props":931,"children":932},{"style":762},[933],{"type":335,"value":934},",",{"type":330,"tag":421,"props":936,"children":937},{"style":720},[938],{"type":335,"value":939}," headB",{"type":330,"tag":421,"props":941,"children":942},{"style":714},[943],{"type":335,"value":728},{"type":330,"tag":421,"props":945,"children":947},{"class":423,"line":946},15,[948,954,958,963,967,972,977,982,987,992,996],{"type":330,"tag":421,"props":949,"children":951},{"style":950},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[952],{"type":335,"value":953},"  if",{"type":330,"tag":421,"props":955,"children":956},{"style":714},[957],{"type":335,"value":924},{"type":330,"tag":421,"props":959,"children":960},{"style":751},[961],{"type":335,"value":962},"!",{"type":330,"tag":421,"props":964,"children":965},{"style":746},[966],{"type":335,"value":929},{"type":330,"tag":421,"props":968,"children":969},{"style":751},[970],{"type":335,"value":971}," ||",{"type":330,"tag":421,"props":973,"children":974},{"style":751},[975],{"type":335,"value":976}," !",{"type":330,"tag":421,"props":978,"children":979},{"style":746},[980],{"type":335,"value":981},"headB",{"type":330,"tag":421,"props":983,"children":984},{"style":714},[985],{"type":335,"value":986},") ",{"type":330,"tag":421,"props":988,"children":989},{"style":950},[990],{"type":335,"value":991},"return",{"type":330,"tag":421,"props":993,"children":994},{"style":788},[995],{"type":335,"value":791},{"type":330,"tag":421,"props":997,"children":998},{"style":762},[999],{"type":335,"value":765},{"type":330,"tag":421,"props":1001,"children":1003},{"class":423,"line":1002},16,[1004,1009,1014,1018,1023],{"type":330,"tag":421,"props":1005,"children":1006},{"style":702},[1007],{"type":335,"value":1008},"  let",{"type":330,"tag":421,"props":1010,"children":1011},{"style":746},[1012],{"type":335,"value":1013}," pA",{"type":330,"tag":421,"props":1015,"children":1016},{"style":751},[1017],{"type":335,"value":754},{"type":330,"tag":421,"props":1019,"children":1020},{"style":746},[1021],{"type":335,"value":1022}," headA",{"type":330,"tag":421,"props":1024,"children":1025},{"style":762},[1026],{"type":335,"value":765},{"type":330,"tag":421,"props":1028,"children":1030},{"class":423,"line":1029},17,[1031,1036,1040,1045],{"type":330,"tag":421,"props":1032,"children":1033},{"style":950},[1034],{"type":335,"value":1035},"  while",{"type":330,"tag":421,"props":1037,"children":1038},{"style":714},[1039],{"type":335,"value":924},{"type":330,"tag":421,"props":1041,"children":1042},{"style":746},[1043],{"type":335,"value":1044},"pA",{"type":330,"tag":421,"props":1046,"children":1047},{"style":714},[1048],{"type":335,"value":728},{"type":330,"tag":421,"props":1050,"children":1052},{"class":423,"line":1051},18,[1053,1058,1063,1067,1071],{"type":330,"tag":421,"props":1054,"children":1055},{"style":702},[1056],{"type":335,"value":1057},"    let",{"type":330,"tag":421,"props":1059,"children":1060},{"style":746},[1061],{"type":335,"value":1062}," pB",{"type":330,"tag":421,"props":1064,"children":1065},{"style":751},[1066],{"type":335,"value":754},{"type":330,"tag":421,"props":1068,"children":1069},{"style":746},[1070],{"type":335,"value":939},{"type":330,"tag":421,"props":1072,"children":1073},{"style":762},[1074],{"type":335,"value":765},{"type":330,"tag":421,"props":1076,"children":1078},{"class":423,"line":1077},19,[1079,1084,1088,1093],{"type":330,"tag":421,"props":1080,"children":1081},{"style":950},[1082],{"type":335,"value":1083},"    while",{"type":330,"tag":421,"props":1085,"children":1086},{"style":714},[1087],{"type":335,"value":924},{"type":330,"tag":421,"props":1089,"children":1090},{"style":746},[1091],{"type":335,"value":1092},"pB",{"type":330,"tag":421,"props":1094,"children":1095},{"style":714},[1096],{"type":335,"value":728},{"type":330,"tag":421,"props":1098,"children":1100},{"class":423,"line":1099},20,[1101,1106,1110,1114,1119,1123,1127,1131,1135],{"type":330,"tag":421,"props":1102,"children":1103},{"style":950},[1104],{"type":335,"value":1105},"      if",{"type":330,"tag":421,"props":1107,"children":1108},{"style":714},[1109],{"type":335,"value":924},{"type":330,"tag":421,"props":1111,"children":1112},{"style":746},[1113],{"type":335,"value":1044},{"type":330,"tag":421,"props":1115,"children":1116},{"style":751},[1117],{"type":335,"value":1118}," ===",{"type":330,"tag":421,"props":1120,"children":1121},{"style":746},[1122],{"type":335,"value":1062},{"type":330,"tag":421,"props":1124,"children":1125},{"style":714},[1126],{"type":335,"value":986},{"type":330,"tag":421,"props":1128,"children":1129},{"style":950},[1130],{"type":335,"value":991},{"type":330,"tag":421,"props":1132,"children":1133},{"style":746},[1134],{"type":335,"value":1013},{"type":330,"tag":421,"props":1136,"children":1137},{"style":762},[1138],{"type":335,"value":765},{"type":330,"tag":421,"props":1140,"children":1142},{"class":423,"line":1141},21,[1143,1148,1152,1156,1160,1164],{"type":330,"tag":421,"props":1144,"children":1145},{"style":746},[1146],{"type":335,"value":1147},"      pB",{"type":330,"tag":421,"props":1149,"children":1150},{"style":751},[1151],{"type":335,"value":754},{"type":330,"tag":421,"props":1153,"children":1154},{"style":746},[1155],{"type":335,"value":1062},{"type":330,"tag":421,"props":1157,"children":1158},{"style":740},[1159],{"type":335,"value":743},{"type":330,"tag":421,"props":1161,"children":1162},{"style":746},[1163],{"type":335,"value":781},{"type":330,"tag":421,"props":1165,"children":1166},{"style":762},[1167],{"type":335,"value":765},{"type":330,"tag":421,"props":1169,"children":1171},{"class":423,"line":1170},22,[1172],{"type":330,"tag":421,"props":1173,"children":1174},{"style":714},[1175],{"type":335,"value":1176},"    }\n",{"type":330,"tag":421,"props":1178,"children":1180},{"class":423,"line":1179},23,[1181,1186,1190,1194,1198,1202],{"type":330,"tag":421,"props":1182,"children":1183},{"style":746},[1184],{"type":335,"value":1185},"    pA",{"type":330,"tag":421,"props":1187,"children":1188},{"style":751},[1189],{"type":335,"value":754},{"type":330,"tag":421,"props":1191,"children":1192},{"style":746},[1193],{"type":335,"value":1013},{"type":330,"tag":421,"props":1195,"children":1196},{"style":740},[1197],{"type":335,"value":743},{"type":330,"tag":421,"props":1199,"children":1200},{"style":746},[1201],{"type":335,"value":781},{"type":330,"tag":421,"props":1203,"children":1204},{"style":762},[1205],{"type":335,"value":765},{"type":330,"tag":421,"props":1207,"children":1209},{"class":423,"line":1208},24,[1210],{"type":330,"tag":421,"props":1211,"children":1212},{"style":714},[1213],{"type":335,"value":1214},"  }\n",{"type":330,"tag":421,"props":1216,"children":1218},{"class":423,"line":1217},25,[1219,1224,1228],{"type":330,"tag":421,"props":1220,"children":1221},{"style":950},[1222],{"type":335,"value":1223},"  return",{"type":330,"tag":421,"props":1225,"children":1226},{"style":746},[1227],{"type":335,"value":1013},{"type":330,"tag":421,"props":1229,"children":1230},{"style":762},[1231],{"type":335,"value":765},{"type":330,"tag":421,"props":1233,"children":1235},{"class":423,"line":1234},26,[1236,1241],{"type":330,"tag":421,"props":1237,"children":1238},{"style":714},[1239],{"type":335,"value":1240},"}",{"type":330,"tag":421,"props":1242,"children":1243},{"style":762},[1244],{"type":335,"value":765},{"type":330,"tag":658,"props":1246,"children":1248},{"id":1247},"双指针",[1249],{"type":335,"value":1247},{"type":330,"tag":411,"props":1251,"children":1253},{"className":665,"code":1252,"language":667,"meta":323,"style":323},"/**\n * Definition for singly-linked list.\n */\nfunction ListNode(val) {\n  this.val = val;\n  this.next = null;\n}\n\n/**\n * @param {ListNode} headA\n * @param {ListNode} headB\n * @return {ListNode}\n */\nvar getIntersectionNode = function (headA, headB) {\n  if (!headA || !headB) return null;\n  let pA = headA;\n  let pB = headB;\n  while (pA !== pB) {\n    pA = pA ? pA.next : headB;\n    pB = pB ? pB.next : headA;\n  }\n  return pA;\n};\n",[1254],{"type":330,"tag":417,"props":1255,"children":1256},{"__ignoreMap":323},[1257,1264,1271,1278,1301,1328,1355,1362,1369,1376,1395,1414,1429,1436,1475,1522,1545,1568,1596,1641,1685,1692,1707],{"type":330,"tag":421,"props":1258,"children":1259},{"class":423,"line":424},[1260],{"type":330,"tag":421,"props":1261,"children":1262},{"style":677},[1263],{"type":335,"value":680},{"type":330,"tag":421,"props":1265,"children":1266},{"class":423,"line":433},[1267],{"type":330,"tag":421,"props":1268,"children":1269},{"style":677},[1270],{"type":335,"value":688},{"type":330,"tag":421,"props":1272,"children":1273},{"class":423,"line":442},[1274],{"type":330,"tag":421,"props":1275,"children":1276},{"style":677},[1277],{"type":335,"value":696},{"type":330,"tag":421,"props":1279,"children":1280},{"class":423,"line":451},[1281,1285,1289,1293,1297],{"type":330,"tag":421,"props":1282,"children":1283},{"style":702},[1284],{"type":335,"value":705},{"type":330,"tag":421,"props":1286,"children":1287},{"style":708},[1288],{"type":335,"value":711},{"type":330,"tag":421,"props":1290,"children":1291},{"style":714},[1292],{"type":335,"value":717},{"type":330,"tag":421,"props":1294,"children":1295},{"style":720},[1296],{"type":335,"value":723},{"type":330,"tag":421,"props":1298,"children":1299},{"style":714},[1300],{"type":335,"value":728},{"type":330,"tag":421,"props":1302,"children":1303},{"class":423,"line":460},[1304,1308,1312,1316,1320,1324],{"type":330,"tag":421,"props":1305,"children":1306},{"style":734},[1307],{"type":335,"value":737},{"type":330,"tag":421,"props":1309,"children":1310},{"style":740},[1311],{"type":335,"value":743},{"type":330,"tag":421,"props":1313,"children":1314},{"style":746},[1315],{"type":335,"value":723},{"type":330,"tag":421,"props":1317,"children":1318},{"style":751},[1319],{"type":335,"value":754},{"type":330,"tag":421,"props":1321,"children":1322},{"style":746},[1323],{"type":335,"value":759},{"type":330,"tag":421,"props":1325,"children":1326},{"style":762},[1327],{"type":335,"value":765},{"type":330,"tag":421,"props":1329,"children":1330},{"class":423,"line":469},[1331,1335,1339,1343,1347,1351],{"type":330,"tag":421,"props":1332,"children":1333},{"style":734},[1334],{"type":335,"value":737},{"type":330,"tag":421,"props":1336,"children":1337},{"style":740},[1338],{"type":335,"value":743},{"type":330,"tag":421,"props":1340,"children":1341},{"style":746},[1342],{"type":335,"value":781},{"type":330,"tag":421,"props":1344,"children":1345},{"style":751},[1346],{"type":335,"value":754},{"type":330,"tag":421,"props":1348,"children":1349},{"style":788},[1350],{"type":335,"value":791},{"type":330,"tag":421,"props":1352,"children":1353},{"style":762},[1354],{"type":335,"value":765},{"type":330,"tag":421,"props":1356,"children":1357},{"class":423,"line":798},[1358],{"type":330,"tag":421,"props":1359,"children":1360},{"style":714},[1361],{"type":335,"value":804},{"type":330,"tag":421,"props":1363,"children":1364},{"class":423,"line":807},[1365],{"type":330,"tag":421,"props":1366,"children":1367},{"emptyLinePlaceholder":811},[1368],{"type":335,"value":814},{"type":330,"tag":421,"props":1370,"children":1371},{"class":423,"line":817},[1372],{"type":330,"tag":421,"props":1373,"children":1374},{"style":677},[1375],{"type":335,"value":680},{"type":330,"tag":421,"props":1377,"children":1378},{"class":423,"line":825},[1379,1383,1387,1391],{"type":330,"tag":421,"props":1380,"children":1381},{"style":677},[1382],{"type":335,"value":831},{"type":330,"tag":421,"props":1384,"children":1385},{"style":834},[1386],{"type":335,"value":837},{"type":330,"tag":421,"props":1388,"children":1389},{"style":840},[1390],{"type":335,"value":843},{"type":330,"tag":421,"props":1392,"children":1393},{"style":846},[1394],{"type":335,"value":849},{"type":330,"tag":421,"props":1396,"children":1397},{"class":423,"line":852},[1398,1402,1406,1410],{"type":330,"tag":421,"props":1399,"children":1400},{"style":677},[1401],{"type":335,"value":831},{"type":330,"tag":421,"props":1403,"children":1404},{"style":834},[1405],{"type":335,"value":837},{"type":330,"tag":421,"props":1407,"children":1408},{"style":840},[1409],{"type":335,"value":843},{"type":330,"tag":421,"props":1411,"children":1412},{"style":846},[1413],{"type":335,"value":870},{"type":330,"tag":421,"props":1415,"children":1416},{"class":423,"line":873},[1417,1421,1425],{"type":330,"tag":421,"props":1418,"children":1419},{"style":677},[1420],{"type":335,"value":831},{"type":330,"tag":421,"props":1422,"children":1423},{"style":834},[1424],{"type":335,"value":883},{"type":330,"tag":421,"props":1426,"children":1427},{"style":840},[1428],{"type":335,"value":888},{"type":330,"tag":421,"props":1430,"children":1431},{"class":423,"line":891},[1432],{"type":330,"tag":421,"props":1433,"children":1434},{"style":677},[1435],{"type":335,"value":696},{"type":330,"tag":421,"props":1437,"children":1438},{"class":423,"line":899},[1439,1443,1447,1451,1455,1459,1463,1467,1471],{"type":330,"tag":421,"props":1440,"children":1441},{"style":702},[1442],{"type":335,"value":905},{"type":330,"tag":421,"props":1444,"children":1445},{"style":708},[1446],{"type":335,"value":910},{"type":330,"tag":421,"props":1448,"children":1449},{"style":751},[1450],{"type":335,"value":754},{"type":330,"tag":421,"props":1452,"children":1453},{"style":702},[1454],{"type":335,"value":919},{"type":330,"tag":421,"props":1456,"children":1457},{"style":714},[1458],{"type":335,"value":924},{"type":330,"tag":421,"props":1460,"children":1461},{"style":720},[1462],{"type":335,"value":929},{"type":330,"tag":421,"props":1464,"children":1465},{"style":762},[1466],{"type":335,"value":934},{"type":330,"tag":421,"props":1468,"children":1469},{"style":720},[1470],{"type":335,"value":939},{"type":330,"tag":421,"props":1472,"children":1473},{"style":714},[1474],{"type":335,"value":728},{"type":330,"tag":421,"props":1476,"children":1477},{"class":423,"line":946},[1478,1482,1486,1490,1494,1498,1502,1506,1510,1514,1518],{"type":330,"tag":421,"props":1479,"children":1480},{"style":950},[1481],{"type":335,"value":953},{"type":330,"tag":421,"props":1483,"children":1484},{"style":714},[1485],{"type":335,"value":924},{"type":330,"tag":421,"props":1487,"children":1488},{"style":751},[1489],{"type":335,"value":962},{"type":330,"tag":421,"props":1491,"children":1492},{"style":746},[1493],{"type":335,"value":929},{"type":330,"tag":421,"props":1495,"children":1496},{"style":751},[1497],{"type":335,"value":971},{"type":330,"tag":421,"props":1499,"children":1500},{"style":751},[1501],{"type":335,"value":976},{"type":330,"tag":421,"props":1503,"children":1504},{"style":746},[1505],{"type":335,"value":981},{"type":330,"tag":421,"props":1507,"children":1508},{"style":714},[1509],{"type":335,"value":986},{"type":330,"tag":421,"props":1511,"children":1512},{"style":950},[1513],{"type":335,"value":991},{"type":330,"tag":421,"props":1515,"children":1516},{"style":788},[1517],{"type":335,"value":791},{"type":330,"tag":421,"props":1519,"children":1520},{"style":762},[1521],{"type":335,"value":765},{"type":330,"tag":421,"props":1523,"children":1524},{"class":423,"line":1002},[1525,1529,1533,1537,1541],{"type":330,"tag":421,"props":1526,"children":1527},{"style":702},[1528],{"type":335,"value":1008},{"type":330,"tag":421,"props":1530,"children":1531},{"style":746},[1532],{"type":335,"value":1013},{"type":330,"tag":421,"props":1534,"children":1535},{"style":751},[1536],{"type":335,"value":754},{"type":330,"tag":421,"props":1538,"children":1539},{"style":746},[1540],{"type":335,"value":1022},{"type":330,"tag":421,"props":1542,"children":1543},{"style":762},[1544],{"type":335,"value":765},{"type":330,"tag":421,"props":1546,"children":1547},{"class":423,"line":1029},[1548,1552,1556,1560,1564],{"type":330,"tag":421,"props":1549,"children":1550},{"style":702},[1551],{"type":335,"value":1008},{"type":330,"tag":421,"props":1553,"children":1554},{"style":746},[1555],{"type":335,"value":1062},{"type":330,"tag":421,"props":1557,"children":1558},{"style":751},[1559],{"type":335,"value":754},{"type":330,"tag":421,"props":1561,"children":1562},{"style":746},[1563],{"type":335,"value":939},{"type":330,"tag":421,"props":1565,"children":1566},{"style":762},[1567],{"type":335,"value":765},{"type":330,"tag":421,"props":1569,"children":1570},{"class":423,"line":1051},[1571,1575,1579,1583,1588,1592],{"type":330,"tag":421,"props":1572,"children":1573},{"style":950},[1574],{"type":335,"value":1035},{"type":330,"tag":421,"props":1576,"children":1577},{"style":714},[1578],{"type":335,"value":924},{"type":330,"tag":421,"props":1580,"children":1581},{"style":746},[1582],{"type":335,"value":1044},{"type":330,"tag":421,"props":1584,"children":1585},{"style":751},[1586],{"type":335,"value":1587}," !==",{"type":330,"tag":421,"props":1589,"children":1590},{"style":746},[1591],{"type":335,"value":1062},{"type":330,"tag":421,"props":1593,"children":1594},{"style":714},[1595],{"type":335,"value":728},{"type":330,"tag":421,"props":1597,"children":1598},{"class":423,"line":1077},[1599,1603,1607,1611,1616,1620,1624,1628,1633,1637],{"type":330,"tag":421,"props":1600,"children":1601},{"style":746},[1602],{"type":335,"value":1185},{"type":330,"tag":421,"props":1604,"children":1605},{"style":751},[1606],{"type":335,"value":754},{"type":330,"tag":421,"props":1608,"children":1609},{"style":746},[1610],{"type":335,"value":1013},{"type":330,"tag":421,"props":1612,"children":1613},{"style":751},[1614],{"type":335,"value":1615}," ?",{"type":330,"tag":421,"props":1617,"children":1618},{"style":746},[1619],{"type":335,"value":1013},{"type":330,"tag":421,"props":1621,"children":1622},{"style":740},[1623],{"type":335,"value":743},{"type":330,"tag":421,"props":1625,"children":1626},{"style":746},[1627],{"type":335,"value":781},{"type":330,"tag":421,"props":1629,"children":1630},{"style":751},[1631],{"type":335,"value":1632}," :",{"type":330,"tag":421,"props":1634,"children":1635},{"style":746},[1636],{"type":335,"value":939},{"type":330,"tag":421,"props":1638,"children":1639},{"style":762},[1640],{"type":335,"value":765},{"type":330,"tag":421,"props":1642,"children":1643},{"class":423,"line":1099},[1644,1649,1653,1657,1661,1665,1669,1673,1677,1681],{"type":330,"tag":421,"props":1645,"children":1646},{"style":746},[1647],{"type":335,"value":1648},"    pB",{"type":330,"tag":421,"props":1650,"children":1651},{"style":751},[1652],{"type":335,"value":754},{"type":330,"tag":421,"props":1654,"children":1655},{"style":746},[1656],{"type":335,"value":1062},{"type":330,"tag":421,"props":1658,"children":1659},{"style":751},[1660],{"type":335,"value":1615},{"type":330,"tag":421,"props":1662,"children":1663},{"style":746},[1664],{"type":335,"value":1062},{"type":330,"tag":421,"props":1666,"children":1667},{"style":740},[1668],{"type":335,"value":743},{"type":330,"tag":421,"props":1670,"children":1671},{"style":746},[1672],{"type":335,"value":781},{"type":330,"tag":421,"props":1674,"children":1675},{"style":751},[1676],{"type":335,"value":1632},{"type":330,"tag":421,"props":1678,"children":1679},{"style":746},[1680],{"type":335,"value":1022},{"type":330,"tag":421,"props":1682,"children":1683},{"style":762},[1684],{"type":335,"value":765},{"type":330,"tag":421,"props":1686,"children":1687},{"class":423,"line":1141},[1688],{"type":330,"tag":421,"props":1689,"children":1690},{"style":714},[1691],{"type":335,"value":1214},{"type":330,"tag":421,"props":1693,"children":1694},{"class":423,"line":1170},[1695,1699,1703],{"type":330,"tag":421,"props":1696,"children":1697},{"style":950},[1698],{"type":335,"value":1223},{"type":330,"tag":421,"props":1700,"children":1701},{"style":746},[1702],{"type":335,"value":1013},{"type":330,"tag":421,"props":1704,"children":1705},{"style":762},[1706],{"type":335,"value":765},{"type":330,"tag":421,"props":1708,"children":1709},{"class":423,"line":1179},[1710,1714],{"type":330,"tag":421,"props":1711,"children":1712},{"style":714},[1713],{"type":335,"value":1240},{"type":330,"tag":421,"props":1715,"children":1716},{"style":762},[1717],{"type":335,"value":765},{"type":330,"tag":658,"props":1719,"children":1721},{"id":1720},"哈希法",[1722],{"type":335,"value":1720},{"type":330,"tag":411,"props":1724,"children":1726},{"className":665,"code":1725,"language":667,"meta":323,"style":323},"/**\n * Definition for singly-linked list.\n */\nfunction ListNode(val) {\n  this.val = val;\n  this.next = null;\n}\n\n/**\n * @param {ListNode} headA\n * @param {ListNode} headB\n * @return {ListNode}\n */\nvar getIntersectionNode = function (headA, headB) {\n  if (!headA || !headB) return null;\n  let map = new Map();\n  let pA = headA;\n  let pB = headB;\n  while (pA) {\n    map.set(pA, 1);\n    pA = pA.next;\n  }\n  while (pB) {\n    if (map.has(pB)) return pB;\n    pB = pB.next;\n  }\n};\n",[1727],{"type":330,"tag":417,"props":1728,"children":1729},{"__ignoreMap":323},[1730,1737,1744,1751,1774,1801,1828,1835,1842,1849,1868,1887,1902,1909,1948,1995,2030,2053,2076,2095,2138,2165,2172,2191,2242,2269,2276],{"type":330,"tag":421,"props":1731,"children":1732},{"class":423,"line":424},[1733],{"type":330,"tag":421,"props":1734,"children":1735},{"style":677},[1736],{"type":335,"value":680},{"type":330,"tag":421,"props":1738,"children":1739},{"class":423,"line":433},[1740],{"type":330,"tag":421,"props":1741,"children":1742},{"style":677},[1743],{"type":335,"value":688},{"type":330,"tag":421,"props":1745,"children":1746},{"class":423,"line":442},[1747],{"type":330,"tag":421,"props":1748,"children":1749},{"style":677},[1750],{"type":335,"value":696},{"type":330,"tag":421,"props":1752,"children":1753},{"class":423,"line":451},[1754,1758,1762,1766,1770],{"type":330,"tag":421,"props":1755,"children":1756},{"style":702},[1757],{"type":335,"value":705},{"type":330,"tag":421,"props":1759,"children":1760},{"style":708},[1761],{"type":335,"value":711},{"type":330,"tag":421,"props":1763,"children":1764},{"style":714},[1765],{"type":335,"value":717},{"type":330,"tag":421,"props":1767,"children":1768},{"style":720},[1769],{"type":335,"value":723},{"type":330,"tag":421,"props":1771,"children":1772},{"style":714},[1773],{"type":335,"value":728},{"type":330,"tag":421,"props":1775,"children":1776},{"class":423,"line":460},[1777,1781,1785,1789,1793,1797],{"type":330,"tag":421,"props":1778,"children":1779},{"style":734},[1780],{"type":335,"value":737},{"type":330,"tag":421,"props":1782,"children":1783},{"style":740},[1784],{"type":335,"value":743},{"type":330,"tag":421,"props":1786,"children":1787},{"style":746},[1788],{"type":335,"value":723},{"type":330,"tag":421,"props":1790,"children":1791},{"style":751},[1792],{"type":335,"value":754},{"type":330,"tag":421,"props":1794,"children":1795},{"style":746},[1796],{"type":335,"value":759},{"type":330,"tag":421,"props":1798,"children":1799},{"style":762},[1800],{"type":335,"value":765},{"type":330,"tag":421,"props":1802,"children":1803},{"class":423,"line":469},[1804,1808,1812,1816,1820,1824],{"type":330,"tag":421,"props":1805,"children":1806},{"style":734},[1807],{"type":335,"value":737},{"type":330,"tag":421,"props":1809,"children":1810},{"style":740},[1811],{"type":335,"value":743},{"type":330,"tag":421,"props":1813,"children":1814},{"style":746},[1815],{"type":335,"value":781},{"type":330,"tag":421,"props":1817,"children":1818},{"style":751},[1819],{"type":335,"value":754},{"type":330,"tag":421,"props":1821,"children":1822},{"style":788},[1823],{"type":335,"value":791},{"type":330,"tag":421,"props":1825,"children":1826},{"style":762},[1827],{"type":335,"value":765},{"type":330,"tag":421,"props":1829,"children":1830},{"class":423,"line":798},[1831],{"type":330,"tag":421,"props":1832,"children":1833},{"style":714},[1834],{"type":335,"value":804},{"type":330,"tag":421,"props":1836,"children":1837},{"class":423,"line":807},[1838],{"type":330,"tag":421,"props":1839,"children":1840},{"emptyLinePlaceholder":811},[1841],{"type":335,"value":814},{"type":330,"tag":421,"props":1843,"children":1844},{"class":423,"line":817},[1845],{"type":330,"tag":421,"props":1846,"children":1847},{"style":677},[1848],{"type":335,"value":680},{"type":330,"tag":421,"props":1850,"children":1851},{"class":423,"line":825},[1852,1856,1860,1864],{"type":330,"tag":421,"props":1853,"children":1854},{"style":677},[1855],{"type":335,"value":831},{"type":330,"tag":421,"props":1857,"children":1858},{"style":834},[1859],{"type":335,"value":837},{"type":330,"tag":421,"props":1861,"children":1862},{"style":840},[1863],{"type":335,"value":843},{"type":330,"tag":421,"props":1865,"children":1866},{"style":846},[1867],{"type":335,"value":849},{"type":330,"tag":421,"props":1869,"children":1870},{"class":423,"line":852},[1871,1875,1879,1883],{"type":330,"tag":421,"props":1872,"children":1873},{"style":677},[1874],{"type":335,"value":831},{"type":330,"tag":421,"props":1876,"children":1877},{"style":834},[1878],{"type":335,"value":837},{"type":330,"tag":421,"props":1880,"children":1881},{"style":840},[1882],{"type":335,"value":843},{"type":330,"tag":421,"props":1884,"children":1885},{"style":846},[1886],{"type":335,"value":870},{"type":330,"tag":421,"props":1888,"children":1889},{"class":423,"line":873},[1890,1894,1898],{"type":330,"tag":421,"props":1891,"children":1892},{"style":677},[1893],{"type":335,"value":831},{"type":330,"tag":421,"props":1895,"children":1896},{"style":834},[1897],{"type":335,"value":883},{"type":330,"tag":421,"props":1899,"children":1900},{"style":840},[1901],{"type":335,"value":888},{"type":330,"tag":421,"props":1903,"children":1904},{"class":423,"line":891},[1905],{"type":330,"tag":421,"props":1906,"children":1907},{"style":677},[1908],{"type":335,"value":696},{"type":330,"tag":421,"props":1910,"children":1911},{"class":423,"line":899},[1912,1916,1920,1924,1928,1932,1936,1940,1944],{"type":330,"tag":421,"props":1913,"children":1914},{"style":702},[1915],{"type":335,"value":905},{"type":330,"tag":421,"props":1917,"children":1918},{"style":708},[1919],{"type":335,"value":910},{"type":330,"tag":421,"props":1921,"children":1922},{"style":751},[1923],{"type":335,"value":754},{"type":330,"tag":421,"props":1925,"children":1926},{"style":702},[1927],{"type":335,"value":919},{"type":330,"tag":421,"props":1929,"children":1930},{"style":714},[1931],{"type":335,"value":924},{"type":330,"tag":421,"props":1933,"children":1934},{"style":720},[1935],{"type":335,"value":929},{"type":330,"tag":421,"props":1937,"children":1938},{"style":762},[1939],{"type":335,"value":934},{"type":330,"tag":421,"props":1941,"children":1942},{"style":720},[1943],{"type":335,"value":939},{"type":330,"tag":421,"props":1945,"children":1946},{"style":714},[1947],{"type":335,"value":728},{"type":330,"tag":421,"props":1949,"children":1950},{"class":423,"line":946},[1951,1955,1959,1963,1967,1971,1975,1979,1983,1987,1991],{"type":330,"tag":421,"props":1952,"children":1953},{"style":950},[1954],{"type":335,"value":953},{"type":330,"tag":421,"props":1956,"children":1957},{"style":714},[1958],{"type":335,"value":924},{"type":330,"tag":421,"props":1960,"children":1961},{"style":751},[1962],{"type":335,"value":962},{"type":330,"tag":421,"props":1964,"children":1965},{"style":746},[1966],{"type":335,"value":929},{"type":330,"tag":421,"props":1968,"children":1969},{"style":751},[1970],{"type":335,"value":971},{"type":330,"tag":421,"props":1972,"children":1973},{"style":751},[1974],{"type":335,"value":976},{"type":330,"tag":421,"props":1976,"children":1977},{"style":746},[1978],{"type":335,"value":981},{"type":330,"tag":421,"props":1980,"children":1981},{"style":714},[1982],{"type":335,"value":986},{"type":330,"tag":421,"props":1984,"children":1985},{"style":950},[1986],{"type":335,"value":991},{"type":330,"tag":421,"props":1988,"children":1989},{"style":788},[1990],{"type":335,"value":791},{"type":330,"tag":421,"props":1992,"children":1993},{"style":762},[1994],{"type":335,"value":765},{"type":330,"tag":421,"props":1996,"children":1997},{"class":423,"line":1002},[1998,2002,2007,2011,2016,2021,2026],{"type":330,"tag":421,"props":1999,"children":2000},{"style":702},[2001],{"type":335,"value":1008},{"type":330,"tag":421,"props":2003,"children":2004},{"style":746},[2005],{"type":335,"value":2006}," map",{"type":330,"tag":421,"props":2008,"children":2009},{"style":751},[2010],{"type":335,"value":754},{"type":330,"tag":421,"props":2012,"children":2013},{"style":751},[2014],{"type":335,"value":2015}," new",{"type":330,"tag":421,"props":2017,"children":2018},{"style":708},[2019],{"type":335,"value":2020}," Map",{"type":330,"tag":421,"props":2022,"children":2023},{"style":714},[2024],{"type":335,"value":2025},"()",{"type":330,"tag":421,"props":2027,"children":2028},{"style":762},[2029],{"type":335,"value":765},{"type":330,"tag":421,"props":2031,"children":2032},{"class":423,"line":1029},[2033,2037,2041,2045,2049],{"type":330,"tag":421,"props":2034,"children":2035},{"style":702},[2036],{"type":335,"value":1008},{"type":330,"tag":421,"props":2038,"children":2039},{"style":746},[2040],{"type":335,"value":1013},{"type":330,"tag":421,"props":2042,"children":2043},{"style":751},[2044],{"type":335,"value":754},{"type":330,"tag":421,"props":2046,"children":2047},{"style":746},[2048],{"type":335,"value":1022},{"type":330,"tag":421,"props":2050,"children":2051},{"style":762},[2052],{"type":335,"value":765},{"type":330,"tag":421,"props":2054,"children":2055},{"class":423,"line":1051},[2056,2060,2064,2068,2072],{"type":330,"tag":421,"props":2057,"children":2058},{"style":702},[2059],{"type":335,"value":1008},{"type":330,"tag":421,"props":2061,"children":2062},{"style":746},[2063],{"type":335,"value":1062},{"type":330,"tag":421,"props":2065,"children":2066},{"style":751},[2067],{"type":335,"value":754},{"type":330,"tag":421,"props":2069,"children":2070},{"style":746},[2071],{"type":335,"value":939},{"type":330,"tag":421,"props":2073,"children":2074},{"style":762},[2075],{"type":335,"value":765},{"type":330,"tag":421,"props":2077,"children":2078},{"class":423,"line":1077},[2079,2083,2087,2091],{"type":330,"tag":421,"props":2080,"children":2081},{"style":950},[2082],{"type":335,"value":1035},{"type":330,"tag":421,"props":2084,"children":2085},{"style":714},[2086],{"type":335,"value":924},{"type":330,"tag":421,"props":2088,"children":2089},{"style":746},[2090],{"type":335,"value":1044},{"type":330,"tag":421,"props":2092,"children":2093},{"style":714},[2094],{"type":335,"value":728},{"type":330,"tag":421,"props":2096,"children":2097},{"class":423,"line":1099},[2098,2103,2107,2112,2116,2120,2124,2129,2134],{"type":330,"tag":421,"props":2099,"children":2100},{"style":746},[2101],{"type":335,"value":2102},"    map",{"type":330,"tag":421,"props":2104,"children":2105},{"style":740},[2106],{"type":335,"value":743},{"type":330,"tag":421,"props":2108,"children":2109},{"style":708},[2110],{"type":335,"value":2111},"set",{"type":330,"tag":421,"props":2113,"children":2114},{"style":714},[2115],{"type":335,"value":717},{"type":330,"tag":421,"props":2117,"children":2118},{"style":746},[2119],{"type":335,"value":1044},{"type":330,"tag":421,"props":2121,"children":2122},{"style":762},[2123],{"type":335,"value":934},{"type":330,"tag":421,"props":2125,"children":2126},{"style":788},[2127],{"type":335,"value":2128}," 1",{"type":330,"tag":421,"props":2130,"children":2131},{"style":714},[2132],{"type":335,"value":2133},")",{"type":330,"tag":421,"props":2135,"children":2136},{"style":762},[2137],{"type":335,"value":765},{"type":330,"tag":421,"props":2139,"children":2140},{"class":423,"line":1141},[2141,2145,2149,2153,2157,2161],{"type":330,"tag":421,"props":2142,"children":2143},{"style":746},[2144],{"type":335,"value":1185},{"type":330,"tag":421,"props":2146,"children":2147},{"style":751},[2148],{"type":335,"value":754},{"type":330,"tag":421,"props":2150,"children":2151},{"style":746},[2152],{"type":335,"value":1013},{"type":330,"tag":421,"props":2154,"children":2155},{"style":740},[2156],{"type":335,"value":743},{"type":330,"tag":421,"props":2158,"children":2159},{"style":746},[2160],{"type":335,"value":781},{"type":330,"tag":421,"props":2162,"children":2163},{"style":762},[2164],{"type":335,"value":765},{"type":330,"tag":421,"props":2166,"children":2167},{"class":423,"line":1170},[2168],{"type":330,"tag":421,"props":2169,"children":2170},{"style":714},[2171],{"type":335,"value":1214},{"type":330,"tag":421,"props":2173,"children":2174},{"class":423,"line":1179},[2175,2179,2183,2187],{"type":330,"tag":421,"props":2176,"children":2177},{"style":950},[2178],{"type":335,"value":1035},{"type":330,"tag":421,"props":2180,"children":2181},{"style":714},[2182],{"type":335,"value":924},{"type":330,"tag":421,"props":2184,"children":2185},{"style":746},[2186],{"type":335,"value":1092},{"type":330,"tag":421,"props":2188,"children":2189},{"style":714},[2190],{"type":335,"value":728},{"type":330,"tag":421,"props":2192,"children":2193},{"class":423,"line":1208},[2194,2199,2203,2208,2212,2217,2221,2225,2230,2234,2238],{"type":330,"tag":421,"props":2195,"children":2196},{"style":950},[2197],{"type":335,"value":2198},"    if",{"type":330,"tag":421,"props":2200,"children":2201},{"style":714},[2202],{"type":335,"value":924},{"type":330,"tag":421,"props":2204,"children":2205},{"style":746},[2206],{"type":335,"value":2207},"map",{"type":330,"tag":421,"props":2209,"children":2210},{"style":740},[2211],{"type":335,"value":743},{"type":330,"tag":421,"props":2213,"children":2214},{"style":708},[2215],{"type":335,"value":2216},"has",{"type":330,"tag":421,"props":2218,"children":2219},{"style":714},[2220],{"type":335,"value":717},{"type":330,"tag":421,"props":2222,"children":2223},{"style":746},[2224],{"type":335,"value":1092},{"type":330,"tag":421,"props":2226,"children":2227},{"style":714},[2228],{"type":335,"value":2229},")) ",{"type":330,"tag":421,"props":2231,"children":2232},{"style":950},[2233],{"type":335,"value":991},{"type":330,"tag":421,"props":2235,"children":2236},{"style":746},[2237],{"type":335,"value":1062},{"type":330,"tag":421,"props":2239,"children":2240},{"style":762},[2241],{"type":335,"value":765},{"type":330,"tag":421,"props":2243,"children":2244},{"class":423,"line":1217},[2245,2249,2253,2257,2261,2265],{"type":330,"tag":421,"props":2246,"children":2247},{"style":746},[2248],{"type":335,"value":1648},{"type":330,"tag":421,"props":2250,"children":2251},{"style":751},[2252],{"type":335,"value":754},{"type":330,"tag":421,"props":2254,"children":2255},{"style":746},[2256],{"type":335,"value":1062},{"type":330,"tag":421,"props":2258,"children":2259},{"style":740},[2260],{"type":335,"value":743},{"type":330,"tag":421,"props":2262,"children":2263},{"style":746},[2264],{"type":335,"value":781},{"type":330,"tag":421,"props":2266,"children":2267},{"style":762},[2268],{"type":335,"value":765},{"type":330,"tag":421,"props":2270,"children":2271},{"class":423,"line":1234},[2272],{"type":330,"tag":421,"props":2273,"children":2274},{"style":714},[2275],{"type":335,"value":1214},{"type":330,"tag":421,"props":2277,"children":2279},{"class":423,"line":2278},27,[2280,2284],{"type":330,"tag":421,"props":2281,"children":2282},{"style":714},[2283],{"type":335,"value":1240},{"type":330,"tag":421,"props":2285,"children":2286},{"style":762},[2287],{"type":335,"value":765},{"type":330,"tag":2289,"props":2290,"children":2291},"style",{},[2292],{"type":335,"value":2293},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":323,"searchDepth":460,"depth":460,"links":2295},[2296,2297],{"id":649,"depth":433,"text":649},{"id":654,"depth":433,"text":654,"children":2298},[2299,2300,2301],{"id":660,"depth":442,"text":660},{"id":1247,"depth":442,"text":1247},{"id":1720,"depth":442,"text":1720},"markdown","content:2.code:1.algorithm:2.leetcode:160.intersection-of-two-linked-lists.md","content","2.code/1.algorithm/2.leetcode/160.intersection-of-two-linked-lists.md","md",[2308,2310],{"_path":185,"title":184,"description":2309},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",{"_path":191,"title":190,"description":2311},"峰值元素是指其值严格大于左右相邻值的元素。",1712112510358]