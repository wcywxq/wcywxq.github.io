[{"data":1,"prerenderedAt":2321},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/intersection-of-two-linked-lists":329,"/code/algorithm/leetcode/intersection-of-two-linked-lists-surround":2316},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319],{"title":320,"_path":321,"children":322},"Promise","/code/scene/promise",[323,326],{"title":324,"_path":325},"顺序打印 url 并支持 retry","/code/scene/promise/order-print-url-and-retry",{"title":327,"_path":328},"promise 实现图片加载数量限制","/code/scene/promise/limit-image-load-count",{"_path":190,"_dir":330,"_draft":331,"_partial":331,"_locale":332,"title":189,"description":333,"url":334,"body":335,"_type":2311,"_id":2312,"_source":2313,"_file":2314,"_extension":2315},"leetcode",false,"","给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。","https://leetcode.cn/problems/intersection-of-two-linked-lists",{"type":336,"children":337,"toc":2303},"root",[338,345,350,359,364,369,374,379,409,419,485,495,542,547,555,602,607,650,655,661,666,672,1254,1259,1727,1732,2297],{"type":339,"tag":340,"props":341,"children":342},"element","p",{},[343],{"type":344,"value":333},"text",{"type":339,"tag":340,"props":346,"children":347},{},[348],{"type":344,"value":349},"图示两个链表在节点 c1 开始相交：",{"type":339,"tag":340,"props":351,"children":352},{},[353],{"type":339,"tag":354,"props":355,"children":358},"img",{"alt":356,"src":357},"statement","/img/code_leetcode_No.160_statement.png",[],{"type":339,"tag":340,"props":360,"children":361},{},[362],{"type":344,"value":363},"题目数据 保证 整个链式结构中不存在环。",{"type":339,"tag":340,"props":365,"children":366},{},[367],{"type":344,"value":368},"注意，函数返回结果后，链表必须 保持其原始结构 。",{"type":339,"tag":340,"props":370,"children":371},{},[372],{"type":344,"value":373},"自定义评测：",{"type":339,"tag":340,"props":375,"children":376},{},[377],{"type":344,"value":378},"评测系统 的输入如下（你设计的程序 不适用 此输入）：",{"type":339,"tag":380,"props":381,"children":382},"ul",{},[383,389,394,399,404],{"type":339,"tag":384,"props":385,"children":386},"li",{},[387],{"type":344,"value":388},"intersectVal - 相交的起始节点的值。如果不存在相交节点，这一值为 0",{"type":339,"tag":384,"props":390,"children":391},{},[392],{"type":344,"value":393},"listA - 第一个链表",{"type":339,"tag":384,"props":395,"children":396},{},[397],{"type":344,"value":398},"listB - 第二个链表",{"type":339,"tag":384,"props":400,"children":401},{},[402],{"type":344,"value":403},"skipA - 在 listA 中（从头节点开始）跳到交叉节点的节点数",{"type":339,"tag":384,"props":405,"children":406},{},[407],{"type":344,"value":408},"skipB - 在 listB 中（从头节点开始）跳到交叉节点的节点数\n评测系统将根据这些输入创建链式数据结构，并将两个头节点 headA 和 headB 传递给你的程序。如果程序能够正确返回相交节点，那么你的解决方案将被 视作正确答案 。",{"type":339,"tag":340,"props":410,"children":411},{},[412,414],{"type":344,"value":413},"示例 1：\n",{"type":339,"tag":354,"props":415,"children":418},{"alt":416,"src":417},"example_1","/img/code_leetcode_No.160_example_1.png",[],{"type":339,"tag":420,"props":421,"children":424},"pre",{"className":422,"code":423,"language":344,"meta":332,"style":332},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：intersectVal = 8, listA = [4,1,8,4,5], listB = [5,6,1,8,4,5], skipA = 2, skipB = 3\n输出：Intersected at '8'\n解释：相交节点的值为 8 （注意，如果两个链表相交则不能为 0）。\n从各自的表头开始算起，链表 A 为 [4,1,8,4,5]，链表 B 为 [5,6,1,8,4,5]。\n在 A 中，相交节点前有 2 个节点；在 B 中，相交节点前有 3 个节点。\n— 请注意相交节点的值不为 1，因为在链表 A 和链表 B 之中值为 1 的节点 (A 中第二个节点和 B 中第三个节点) 是不同的节点。换句话说，它们在内存中指向两个不同的位置，而链表 A 和链表 B 中值为 8 的节点 (A 中第三个节点，B 中第四个节点) 在内存中指向相同的位置。\n",[425],{"type":339,"tag":426,"props":427,"children":428},"code",{"__ignoreMap":332},[429,440,449,458,467,476],{"type":339,"tag":430,"props":431,"children":434},"span",{"class":432,"line":433},"line",1,[435],{"type":339,"tag":430,"props":436,"children":437},{},[438],{"type":344,"value":439},"输入：intersectVal = 8, listA = [4,1,8,4,5], listB = [5,6,1,8,4,5], skipA = 2, skipB = 3\n",{"type":339,"tag":430,"props":441,"children":443},{"class":432,"line":442},2,[444],{"type":339,"tag":430,"props":445,"children":446},{},[447],{"type":344,"value":448},"输出：Intersected at '8'\n",{"type":339,"tag":430,"props":450,"children":452},{"class":432,"line":451},3,[453],{"type":339,"tag":430,"props":454,"children":455},{},[456],{"type":344,"value":457},"解释：相交节点的值为 8 （注意，如果两个链表相交则不能为 0）。\n",{"type":339,"tag":430,"props":459,"children":461},{"class":432,"line":460},4,[462],{"type":339,"tag":430,"props":463,"children":464},{},[465],{"type":344,"value":466},"从各自的表头开始算起，链表 A 为 [4,1,8,4,5]，链表 B 为 [5,6,1,8,4,5]。\n",{"type":339,"tag":430,"props":468,"children":470},{"class":432,"line":469},5,[471],{"type":339,"tag":430,"props":472,"children":473},{},[474],{"type":344,"value":475},"在 A 中，相交节点前有 2 个节点；在 B 中，相交节点前有 3 个节点。\n",{"type":339,"tag":430,"props":477,"children":479},{"class":432,"line":478},6,[480],{"type":339,"tag":430,"props":481,"children":482},{},[483],{"type":344,"value":484},"— 请注意相交节点的值不为 1，因为在链表 A 和链表 B 之中值为 1 的节点 (A 中第二个节点和 B 中第三个节点) 是不同的节点。换句话说，它们在内存中指向两个不同的位置，而链表 A 和链表 B 中值为 8 的节点 (A 中第三个节点，B 中第四个节点) 在内存中指向相同的位置。\n",{"type":339,"tag":340,"props":486,"children":487},{},[488,490],{"type":344,"value":489},"示例 2：\n",{"type":339,"tag":354,"props":491,"children":494},{"alt":492,"src":493},"example_2","/img/code_leetcode_No.160_example_2.png",[],{"type":339,"tag":420,"props":496,"children":498},{"className":422,"code":497,"language":344,"meta":332,"style":332},"输入：intersectVal = 2, listA = [1,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1\n输出：Intersected at '2'\n解释：相交节点的值为 2 （注意，如果两个链表相交则不能为 0）。\n从各自的表头开始算起，链表 A 为 [1,9,1,2,4]，链表 B 为 [3,2,4]。\n在 A 中，相交节点前有 3 个节点；在 B 中，相交节点前有 1 个节点。\n",[499],{"type":339,"tag":426,"props":500,"children":501},{"__ignoreMap":332},[502,510,518,526,534],{"type":339,"tag":430,"props":503,"children":504},{"class":432,"line":433},[505],{"type":339,"tag":430,"props":506,"children":507},{},[508],{"type":344,"value":509},"输入：intersectVal = 2, listA = [1,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1\n",{"type":339,"tag":430,"props":511,"children":512},{"class":432,"line":442},[513],{"type":339,"tag":430,"props":514,"children":515},{},[516],{"type":344,"value":517},"输出：Intersected at '2'\n",{"type":339,"tag":430,"props":519,"children":520},{"class":432,"line":451},[521],{"type":339,"tag":430,"props":522,"children":523},{},[524],{"type":344,"value":525},"解释：相交节点的值为 2 （注意，如果两个链表相交则不能为 0）。\n",{"type":339,"tag":430,"props":527,"children":528},{"class":432,"line":460},[529],{"type":339,"tag":430,"props":530,"children":531},{},[532],{"type":344,"value":533},"从各自的表头开始算起，链表 A 为 [1,9,1,2,4]，链表 B 为 [3,2,4]。\n",{"type":339,"tag":430,"props":535,"children":536},{"class":432,"line":469},[537],{"type":339,"tag":430,"props":538,"children":539},{},[540],{"type":344,"value":541},"在 A 中，相交节点前有 3 个节点；在 B 中，相交节点前有 1 个节点。\n",{"type":339,"tag":340,"props":543,"children":544},{},[545],{"type":344,"value":546},"示例 3：",{"type":339,"tag":340,"props":548,"children":549},{},[550],{"type":339,"tag":354,"props":551,"children":554},{"alt":552,"src":553},"example_3","/img/code_leetcode_No.160_example_3.png",[],{"type":339,"tag":420,"props":556,"children":558},{"className":422,"code":557,"language":344,"meta":332,"style":332},"输入：intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2\n输出：null\n解释：从各自的表头开始算起，链表 A 为 [2,6,4]，链表 B 为 [1,5]。\n由于这两个链表不相交，所以 intersectVal 必须为 0，而 skipA 和 skipB 可以是任意值。\n这两个链表不相交，因此返回 null 。\n",[559],{"type":339,"tag":426,"props":560,"children":561},{"__ignoreMap":332},[562,570,578,586,594],{"type":339,"tag":430,"props":563,"children":564},{"class":432,"line":433},[565],{"type":339,"tag":430,"props":566,"children":567},{},[568],{"type":344,"value":569},"输入：intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2\n",{"type":339,"tag":430,"props":571,"children":572},{"class":432,"line":442},[573],{"type":339,"tag":430,"props":574,"children":575},{},[576],{"type":344,"value":577},"输出：null\n",{"type":339,"tag":430,"props":579,"children":580},{"class":432,"line":451},[581],{"type":339,"tag":430,"props":582,"children":583},{},[584],{"type":344,"value":585},"解释：从各自的表头开始算起，链表 A 为 [2,6,4]，链表 B 为 [1,5]。\n",{"type":339,"tag":430,"props":587,"children":588},{"class":432,"line":460},[589],{"type":339,"tag":430,"props":590,"children":591},{},[592],{"type":344,"value":593},"由于这两个链表不相交，所以 intersectVal 必须为 0，而 skipA 和 skipB 可以是任意值。\n",{"type":339,"tag":430,"props":595,"children":596},{"class":432,"line":469},[597],{"type":339,"tag":430,"props":598,"children":599},{},[600],{"type":344,"value":601},"这两个链表不相交，因此返回 null 。\n",{"type":339,"tag":340,"props":603,"children":604},{},[605],{"type":344,"value":606},"提示：",{"type":339,"tag":380,"props":608,"children":609},{},[610,615,620,625,630,635,640,645],{"type":339,"tag":384,"props":611,"children":612},{},[613],{"type":344,"value":614},"listA 中节点数目为 m",{"type":339,"tag":384,"props":616,"children":617},{},[618],{"type":344,"value":619},"listB 中节点数目为 n",{"type":339,"tag":384,"props":621,"children":622},{},[623],{"type":344,"value":624},"1 \u003C= m, n \u003C= 3 * 10^4",{"type":339,"tag":384,"props":626,"children":627},{},[628],{"type":344,"value":629},"1 \u003C= Node.val \u003C= 10^5",{"type":339,"tag":384,"props":631,"children":632},{},[633],{"type":344,"value":634},"0 \u003C= skipA \u003C= m",{"type":339,"tag":384,"props":636,"children":637},{},[638],{"type":344,"value":639},"0 \u003C= skipB \u003C= n",{"type":339,"tag":384,"props":641,"children":642},{},[643],{"type":344,"value":644},"如果 listA 和 listB 没有交点，intersectVal 为 0",{"type":339,"tag":384,"props":646,"children":647},{},[648],{"type":344,"value":649},"如果 listA 和 listB 有交点，intersectVal == listA[skipA] == listB[skipB]",{"type":339,"tag":340,"props":651,"children":652},{},[653],{"type":344,"value":654},"进阶：你能否设计一个时间复杂度 O(m + n) 、仅用 O(1) 内存的解决方案？",{"type":339,"tag":656,"props":657,"children":659},"h2",{"id":658},"解题思路",[660],{"type":344,"value":658},{"type":339,"tag":656,"props":662,"children":664},{"id":663},"实现",[665],{"type":344,"value":663},{"type":339,"tag":667,"props":668,"children":670},"h3",{"id":669},"暴力破解",[671],{"type":344,"value":669},{"type":339,"tag":420,"props":673,"children":677},{"className":674,"code":675,"language":676,"meta":332,"style":332},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for singly-linked list.\n */\nfunction ListNode(val) {\n  this.val = val;\n  this.next = null;\n}\n\n/**\n * @param {ListNode} headA\n * @param {ListNode} headB\n * @return {ListNode}\n */\nvar getIntersectionNode = function (headA, headB) {\n  if (!headA || !headB) return null;\n  let pA = headA;\n  while (pA) {\n    let pB = headB;\n    while (pB) {\n      if (pA === pB) return pA;\n      pB = pB.next;\n    }\n    pA = pA.next;\n  }\n  return pA;\n};\n","js",[678],{"type":339,"tag":426,"props":679,"children":680},{"__ignoreMap":332},[681,690,698,706,738,775,805,814,824,832,859,880,898,906,953,1009,1036,1058,1084,1106,1148,1177,1186,1215,1224,1241],{"type":339,"tag":430,"props":682,"children":683},{"class":432,"line":433},[684],{"type":339,"tag":430,"props":685,"children":687},{"style":686},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[688],{"type":344,"value":689},"/**\n",{"type":339,"tag":430,"props":691,"children":692},{"class":432,"line":442},[693],{"type":339,"tag":430,"props":694,"children":695},{"style":686},[696],{"type":344,"value":697}," * Definition for singly-linked list.\n",{"type":339,"tag":430,"props":699,"children":700},{"class":432,"line":451},[701],{"type":339,"tag":430,"props":702,"children":703},{"style":686},[704],{"type":344,"value":705}," */\n",{"type":339,"tag":430,"props":707,"children":708},{"class":432,"line":460},[709,715,721,727,733],{"type":339,"tag":430,"props":710,"children":712},{"style":711},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[713],{"type":344,"value":714},"function",{"type":339,"tag":430,"props":716,"children":718},{"style":717},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[719],{"type":344,"value":720}," ListNode",{"type":339,"tag":430,"props":722,"children":724},{"style":723},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[725],{"type":344,"value":726},"(",{"type":339,"tag":430,"props":728,"children":730},{"style":729},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[731],{"type":344,"value":732},"val",{"type":339,"tag":430,"props":734,"children":735},{"style":723},[736],{"type":344,"value":737},") {\n",{"type":339,"tag":430,"props":739,"children":740},{"class":432,"line":469},[741,747,753,758,764,769],{"type":339,"tag":430,"props":742,"children":744},{"style":743},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[745],{"type":344,"value":746},"  this",{"type":339,"tag":430,"props":748,"children":750},{"style":749},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[751],{"type":344,"value":752},".",{"type":339,"tag":430,"props":754,"children":756},{"style":755},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[757],{"type":344,"value":732},{"type":339,"tag":430,"props":759,"children":761},{"style":760},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[762],{"type":344,"value":763}," =",{"type":339,"tag":430,"props":765,"children":766},{"style":755},[767],{"type":344,"value":768}," val",{"type":339,"tag":430,"props":770,"children":772},{"style":771},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[773],{"type":344,"value":774},";\n",{"type":339,"tag":430,"props":776,"children":777},{"class":432,"line":478},[778,782,786,791,795,801],{"type":339,"tag":430,"props":779,"children":780},{"style":743},[781],{"type":344,"value":746},{"type":339,"tag":430,"props":783,"children":784},{"style":749},[785],{"type":344,"value":752},{"type":339,"tag":430,"props":787,"children":788},{"style":755},[789],{"type":344,"value":790},"next",{"type":339,"tag":430,"props":792,"children":793},{"style":760},[794],{"type":344,"value":763},{"type":339,"tag":430,"props":796,"children":798},{"style":797},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[799],{"type":344,"value":800}," null",{"type":339,"tag":430,"props":802,"children":803},{"style":771},[804],{"type":344,"value":774},{"type":339,"tag":430,"props":806,"children":808},{"class":432,"line":807},7,[809],{"type":339,"tag":430,"props":810,"children":811},{"style":723},[812],{"type":344,"value":813},"}\n",{"type":339,"tag":430,"props":815,"children":817},{"class":432,"line":816},8,[818],{"type":339,"tag":430,"props":819,"children":821},{"emptyLinePlaceholder":820},true,[822],{"type":344,"value":823},"\n",{"type":339,"tag":430,"props":825,"children":827},{"class":432,"line":826},9,[828],{"type":339,"tag":430,"props":829,"children":830},{"style":686},[831],{"type":344,"value":689},{"type":339,"tag":430,"props":833,"children":835},{"class":432,"line":834},10,[836,841,847,853],{"type":339,"tag":430,"props":837,"children":838},{"style":686},[839],{"type":344,"value":840}," * ",{"type":339,"tag":430,"props":842,"children":844},{"style":843},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[845],{"type":344,"value":846},"@param",{"type":339,"tag":430,"props":848,"children":850},{"style":849},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[851],{"type":344,"value":852}," {ListNode}",{"type":339,"tag":430,"props":854,"children":856},{"style":855},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[857],{"type":344,"value":858}," headA\n",{"type":339,"tag":430,"props":860,"children":862},{"class":432,"line":861},11,[863,867,871,875],{"type":339,"tag":430,"props":864,"children":865},{"style":686},[866],{"type":344,"value":840},{"type":339,"tag":430,"props":868,"children":869},{"style":843},[870],{"type":344,"value":846},{"type":339,"tag":430,"props":872,"children":873},{"style":849},[874],{"type":344,"value":852},{"type":339,"tag":430,"props":876,"children":877},{"style":855},[878],{"type":344,"value":879}," headB\n",{"type":339,"tag":430,"props":881,"children":883},{"class":432,"line":882},12,[884,888,893],{"type":339,"tag":430,"props":885,"children":886},{"style":686},[887],{"type":344,"value":840},{"type":339,"tag":430,"props":889,"children":890},{"style":843},[891],{"type":344,"value":892},"@return",{"type":339,"tag":430,"props":894,"children":895},{"style":849},[896],{"type":344,"value":897}," {ListNode}\n",{"type":339,"tag":430,"props":899,"children":901},{"class":432,"line":900},13,[902],{"type":339,"tag":430,"props":903,"children":904},{"style":686},[905],{"type":344,"value":705},{"type":339,"tag":430,"props":907,"children":909},{"class":432,"line":908},14,[910,915,920,924,929,934,939,944,949],{"type":339,"tag":430,"props":911,"children":912},{"style":711},[913],{"type":344,"value":914},"var",{"type":339,"tag":430,"props":916,"children":917},{"style":717},[918],{"type":344,"value":919}," getIntersectionNode",{"type":339,"tag":430,"props":921,"children":922},{"style":760},[923],{"type":344,"value":763},{"type":339,"tag":430,"props":925,"children":926},{"style":711},[927],{"type":344,"value":928}," function",{"type":339,"tag":430,"props":930,"children":931},{"style":723},[932],{"type":344,"value":933}," (",{"type":339,"tag":430,"props":935,"children":936},{"style":729},[937],{"type":344,"value":938},"headA",{"type":339,"tag":430,"props":940,"children":941},{"style":771},[942],{"type":344,"value":943},",",{"type":339,"tag":430,"props":945,"children":946},{"style":729},[947],{"type":344,"value":948}," headB",{"type":339,"tag":430,"props":950,"children":951},{"style":723},[952],{"type":344,"value":737},{"type":339,"tag":430,"props":954,"children":956},{"class":432,"line":955},15,[957,963,967,972,976,981,986,991,996,1001,1005],{"type":339,"tag":430,"props":958,"children":960},{"style":959},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[961],{"type":344,"value":962},"  if",{"type":339,"tag":430,"props":964,"children":965},{"style":723},[966],{"type":344,"value":933},{"type":339,"tag":430,"props":968,"children":969},{"style":760},[970],{"type":344,"value":971},"!",{"type":339,"tag":430,"props":973,"children":974},{"style":755},[975],{"type":344,"value":938},{"type":339,"tag":430,"props":977,"children":978},{"style":760},[979],{"type":344,"value":980}," ||",{"type":339,"tag":430,"props":982,"children":983},{"style":760},[984],{"type":344,"value":985}," !",{"type":339,"tag":430,"props":987,"children":988},{"style":755},[989],{"type":344,"value":990},"headB",{"type":339,"tag":430,"props":992,"children":993},{"style":723},[994],{"type":344,"value":995},") ",{"type":339,"tag":430,"props":997,"children":998},{"style":959},[999],{"type":344,"value":1000},"return",{"type":339,"tag":430,"props":1002,"children":1003},{"style":797},[1004],{"type":344,"value":800},{"type":339,"tag":430,"props":1006,"children":1007},{"style":771},[1008],{"type":344,"value":774},{"type":339,"tag":430,"props":1010,"children":1012},{"class":432,"line":1011},16,[1013,1018,1023,1027,1032],{"type":339,"tag":430,"props":1014,"children":1015},{"style":711},[1016],{"type":344,"value":1017},"  let",{"type":339,"tag":430,"props":1019,"children":1020},{"style":755},[1021],{"type":344,"value":1022}," pA",{"type":339,"tag":430,"props":1024,"children":1025},{"style":760},[1026],{"type":344,"value":763},{"type":339,"tag":430,"props":1028,"children":1029},{"style":755},[1030],{"type":344,"value":1031}," headA",{"type":339,"tag":430,"props":1033,"children":1034},{"style":771},[1035],{"type":344,"value":774},{"type":339,"tag":430,"props":1037,"children":1039},{"class":432,"line":1038},17,[1040,1045,1049,1054],{"type":339,"tag":430,"props":1041,"children":1042},{"style":959},[1043],{"type":344,"value":1044},"  while",{"type":339,"tag":430,"props":1046,"children":1047},{"style":723},[1048],{"type":344,"value":933},{"type":339,"tag":430,"props":1050,"children":1051},{"style":755},[1052],{"type":344,"value":1053},"pA",{"type":339,"tag":430,"props":1055,"children":1056},{"style":723},[1057],{"type":344,"value":737},{"type":339,"tag":430,"props":1059,"children":1061},{"class":432,"line":1060},18,[1062,1067,1072,1076,1080],{"type":339,"tag":430,"props":1063,"children":1064},{"style":711},[1065],{"type":344,"value":1066},"    let",{"type":339,"tag":430,"props":1068,"children":1069},{"style":755},[1070],{"type":344,"value":1071}," pB",{"type":339,"tag":430,"props":1073,"children":1074},{"style":760},[1075],{"type":344,"value":763},{"type":339,"tag":430,"props":1077,"children":1078},{"style":755},[1079],{"type":344,"value":948},{"type":339,"tag":430,"props":1081,"children":1082},{"style":771},[1083],{"type":344,"value":774},{"type":339,"tag":430,"props":1085,"children":1087},{"class":432,"line":1086},19,[1088,1093,1097,1102],{"type":339,"tag":430,"props":1089,"children":1090},{"style":959},[1091],{"type":344,"value":1092},"    while",{"type":339,"tag":430,"props":1094,"children":1095},{"style":723},[1096],{"type":344,"value":933},{"type":339,"tag":430,"props":1098,"children":1099},{"style":755},[1100],{"type":344,"value":1101},"pB",{"type":339,"tag":430,"props":1103,"children":1104},{"style":723},[1105],{"type":344,"value":737},{"type":339,"tag":430,"props":1107,"children":1109},{"class":432,"line":1108},20,[1110,1115,1119,1123,1128,1132,1136,1140,1144],{"type":339,"tag":430,"props":1111,"children":1112},{"style":959},[1113],{"type":344,"value":1114},"      if",{"type":339,"tag":430,"props":1116,"children":1117},{"style":723},[1118],{"type":344,"value":933},{"type":339,"tag":430,"props":1120,"children":1121},{"style":755},[1122],{"type":344,"value":1053},{"type":339,"tag":430,"props":1124,"children":1125},{"style":760},[1126],{"type":344,"value":1127}," ===",{"type":339,"tag":430,"props":1129,"children":1130},{"style":755},[1131],{"type":344,"value":1071},{"type":339,"tag":430,"props":1133,"children":1134},{"style":723},[1135],{"type":344,"value":995},{"type":339,"tag":430,"props":1137,"children":1138},{"style":959},[1139],{"type":344,"value":1000},{"type":339,"tag":430,"props":1141,"children":1142},{"style":755},[1143],{"type":344,"value":1022},{"type":339,"tag":430,"props":1145,"children":1146},{"style":771},[1147],{"type":344,"value":774},{"type":339,"tag":430,"props":1149,"children":1151},{"class":432,"line":1150},21,[1152,1157,1161,1165,1169,1173],{"type":339,"tag":430,"props":1153,"children":1154},{"style":755},[1155],{"type":344,"value":1156},"      pB",{"type":339,"tag":430,"props":1158,"children":1159},{"style":760},[1160],{"type":344,"value":763},{"type":339,"tag":430,"props":1162,"children":1163},{"style":755},[1164],{"type":344,"value":1071},{"type":339,"tag":430,"props":1166,"children":1167},{"style":749},[1168],{"type":344,"value":752},{"type":339,"tag":430,"props":1170,"children":1171},{"style":755},[1172],{"type":344,"value":790},{"type":339,"tag":430,"props":1174,"children":1175},{"style":771},[1176],{"type":344,"value":774},{"type":339,"tag":430,"props":1178,"children":1180},{"class":432,"line":1179},22,[1181],{"type":339,"tag":430,"props":1182,"children":1183},{"style":723},[1184],{"type":344,"value":1185},"    }\n",{"type":339,"tag":430,"props":1187,"children":1189},{"class":432,"line":1188},23,[1190,1195,1199,1203,1207,1211],{"type":339,"tag":430,"props":1191,"children":1192},{"style":755},[1193],{"type":344,"value":1194},"    pA",{"type":339,"tag":430,"props":1196,"children":1197},{"style":760},[1198],{"type":344,"value":763},{"type":339,"tag":430,"props":1200,"children":1201},{"style":755},[1202],{"type":344,"value":1022},{"type":339,"tag":430,"props":1204,"children":1205},{"style":749},[1206],{"type":344,"value":752},{"type":339,"tag":430,"props":1208,"children":1209},{"style":755},[1210],{"type":344,"value":790},{"type":339,"tag":430,"props":1212,"children":1213},{"style":771},[1214],{"type":344,"value":774},{"type":339,"tag":430,"props":1216,"children":1218},{"class":432,"line":1217},24,[1219],{"type":339,"tag":430,"props":1220,"children":1221},{"style":723},[1222],{"type":344,"value":1223},"  }\n",{"type":339,"tag":430,"props":1225,"children":1227},{"class":432,"line":1226},25,[1228,1233,1237],{"type":339,"tag":430,"props":1229,"children":1230},{"style":959},[1231],{"type":344,"value":1232},"  return",{"type":339,"tag":430,"props":1234,"children":1235},{"style":755},[1236],{"type":344,"value":1022},{"type":339,"tag":430,"props":1238,"children":1239},{"style":771},[1240],{"type":344,"value":774},{"type":339,"tag":430,"props":1242,"children":1244},{"class":432,"line":1243},26,[1245,1250],{"type":339,"tag":430,"props":1246,"children":1247},{"style":723},[1248],{"type":344,"value":1249},"}",{"type":339,"tag":430,"props":1251,"children":1252},{"style":771},[1253],{"type":344,"value":774},{"type":339,"tag":667,"props":1255,"children":1257},{"id":1256},"双指针",[1258],{"type":344,"value":1256},{"type":339,"tag":420,"props":1260,"children":1262},{"className":674,"code":1261,"language":676,"meta":332,"style":332},"/**\n * Definition for singly-linked list.\n */\nfunction ListNode(val) {\n  this.val = val;\n  this.next = null;\n}\n\n/**\n * @param {ListNode} headA\n * @param {ListNode} headB\n * @return {ListNode}\n */\nvar getIntersectionNode = function (headA, headB) {\n  if (!headA || !headB) return null;\n  let pA = headA;\n  let pB = headB;\n  while (pA !== pB) {\n    pA = pA ? pA.next : headB;\n    pB = pB ? pB.next : headA;\n  }\n  return pA;\n};\n",[1263],{"type":339,"tag":426,"props":1264,"children":1265},{"__ignoreMap":332},[1266,1273,1280,1287,1310,1337,1364,1371,1378,1385,1404,1423,1438,1445,1484,1531,1554,1577,1605,1650,1694,1701,1716],{"type":339,"tag":430,"props":1267,"children":1268},{"class":432,"line":433},[1269],{"type":339,"tag":430,"props":1270,"children":1271},{"style":686},[1272],{"type":344,"value":689},{"type":339,"tag":430,"props":1274,"children":1275},{"class":432,"line":442},[1276],{"type":339,"tag":430,"props":1277,"children":1278},{"style":686},[1279],{"type":344,"value":697},{"type":339,"tag":430,"props":1281,"children":1282},{"class":432,"line":451},[1283],{"type":339,"tag":430,"props":1284,"children":1285},{"style":686},[1286],{"type":344,"value":705},{"type":339,"tag":430,"props":1288,"children":1289},{"class":432,"line":460},[1290,1294,1298,1302,1306],{"type":339,"tag":430,"props":1291,"children":1292},{"style":711},[1293],{"type":344,"value":714},{"type":339,"tag":430,"props":1295,"children":1296},{"style":717},[1297],{"type":344,"value":720},{"type":339,"tag":430,"props":1299,"children":1300},{"style":723},[1301],{"type":344,"value":726},{"type":339,"tag":430,"props":1303,"children":1304},{"style":729},[1305],{"type":344,"value":732},{"type":339,"tag":430,"props":1307,"children":1308},{"style":723},[1309],{"type":344,"value":737},{"type":339,"tag":430,"props":1311,"children":1312},{"class":432,"line":469},[1313,1317,1321,1325,1329,1333],{"type":339,"tag":430,"props":1314,"children":1315},{"style":743},[1316],{"type":344,"value":746},{"type":339,"tag":430,"props":1318,"children":1319},{"style":749},[1320],{"type":344,"value":752},{"type":339,"tag":430,"props":1322,"children":1323},{"style":755},[1324],{"type":344,"value":732},{"type":339,"tag":430,"props":1326,"children":1327},{"style":760},[1328],{"type":344,"value":763},{"type":339,"tag":430,"props":1330,"children":1331},{"style":755},[1332],{"type":344,"value":768},{"type":339,"tag":430,"props":1334,"children":1335},{"style":771},[1336],{"type":344,"value":774},{"type":339,"tag":430,"props":1338,"children":1339},{"class":432,"line":478},[1340,1344,1348,1352,1356,1360],{"type":339,"tag":430,"props":1341,"children":1342},{"style":743},[1343],{"type":344,"value":746},{"type":339,"tag":430,"props":1345,"children":1346},{"style":749},[1347],{"type":344,"value":752},{"type":339,"tag":430,"props":1349,"children":1350},{"style":755},[1351],{"type":344,"value":790},{"type":339,"tag":430,"props":1353,"children":1354},{"style":760},[1355],{"type":344,"value":763},{"type":339,"tag":430,"props":1357,"children":1358},{"style":797},[1359],{"type":344,"value":800},{"type":339,"tag":430,"props":1361,"children":1362},{"style":771},[1363],{"type":344,"value":774},{"type":339,"tag":430,"props":1365,"children":1366},{"class":432,"line":807},[1367],{"type":339,"tag":430,"props":1368,"children":1369},{"style":723},[1370],{"type":344,"value":813},{"type":339,"tag":430,"props":1372,"children":1373},{"class":432,"line":816},[1374],{"type":339,"tag":430,"props":1375,"children":1376},{"emptyLinePlaceholder":820},[1377],{"type":344,"value":823},{"type":339,"tag":430,"props":1379,"children":1380},{"class":432,"line":826},[1381],{"type":339,"tag":430,"props":1382,"children":1383},{"style":686},[1384],{"type":344,"value":689},{"type":339,"tag":430,"props":1386,"children":1387},{"class":432,"line":834},[1388,1392,1396,1400],{"type":339,"tag":430,"props":1389,"children":1390},{"style":686},[1391],{"type":344,"value":840},{"type":339,"tag":430,"props":1393,"children":1394},{"style":843},[1395],{"type":344,"value":846},{"type":339,"tag":430,"props":1397,"children":1398},{"style":849},[1399],{"type":344,"value":852},{"type":339,"tag":430,"props":1401,"children":1402},{"style":855},[1403],{"type":344,"value":858},{"type":339,"tag":430,"props":1405,"children":1406},{"class":432,"line":861},[1407,1411,1415,1419],{"type":339,"tag":430,"props":1408,"children":1409},{"style":686},[1410],{"type":344,"value":840},{"type":339,"tag":430,"props":1412,"children":1413},{"style":843},[1414],{"type":344,"value":846},{"type":339,"tag":430,"props":1416,"children":1417},{"style":849},[1418],{"type":344,"value":852},{"type":339,"tag":430,"props":1420,"children":1421},{"style":855},[1422],{"type":344,"value":879},{"type":339,"tag":430,"props":1424,"children":1425},{"class":432,"line":882},[1426,1430,1434],{"type":339,"tag":430,"props":1427,"children":1428},{"style":686},[1429],{"type":344,"value":840},{"type":339,"tag":430,"props":1431,"children":1432},{"style":843},[1433],{"type":344,"value":892},{"type":339,"tag":430,"props":1435,"children":1436},{"style":849},[1437],{"type":344,"value":897},{"type":339,"tag":430,"props":1439,"children":1440},{"class":432,"line":900},[1441],{"type":339,"tag":430,"props":1442,"children":1443},{"style":686},[1444],{"type":344,"value":705},{"type":339,"tag":430,"props":1446,"children":1447},{"class":432,"line":908},[1448,1452,1456,1460,1464,1468,1472,1476,1480],{"type":339,"tag":430,"props":1449,"children":1450},{"style":711},[1451],{"type":344,"value":914},{"type":339,"tag":430,"props":1453,"children":1454},{"style":717},[1455],{"type":344,"value":919},{"type":339,"tag":430,"props":1457,"children":1458},{"style":760},[1459],{"type":344,"value":763},{"type":339,"tag":430,"props":1461,"children":1462},{"style":711},[1463],{"type":344,"value":928},{"type":339,"tag":430,"props":1465,"children":1466},{"style":723},[1467],{"type":344,"value":933},{"type":339,"tag":430,"props":1469,"children":1470},{"style":729},[1471],{"type":344,"value":938},{"type":339,"tag":430,"props":1473,"children":1474},{"style":771},[1475],{"type":344,"value":943},{"type":339,"tag":430,"props":1477,"children":1478},{"style":729},[1479],{"type":344,"value":948},{"type":339,"tag":430,"props":1481,"children":1482},{"style":723},[1483],{"type":344,"value":737},{"type":339,"tag":430,"props":1485,"children":1486},{"class":432,"line":955},[1487,1491,1495,1499,1503,1507,1511,1515,1519,1523,1527],{"type":339,"tag":430,"props":1488,"children":1489},{"style":959},[1490],{"type":344,"value":962},{"type":339,"tag":430,"props":1492,"children":1493},{"style":723},[1494],{"type":344,"value":933},{"type":339,"tag":430,"props":1496,"children":1497},{"style":760},[1498],{"type":344,"value":971},{"type":339,"tag":430,"props":1500,"children":1501},{"style":755},[1502],{"type":344,"value":938},{"type":339,"tag":430,"props":1504,"children":1505},{"style":760},[1506],{"type":344,"value":980},{"type":339,"tag":430,"props":1508,"children":1509},{"style":760},[1510],{"type":344,"value":985},{"type":339,"tag":430,"props":1512,"children":1513},{"style":755},[1514],{"type":344,"value":990},{"type":339,"tag":430,"props":1516,"children":1517},{"style":723},[1518],{"type":344,"value":995},{"type":339,"tag":430,"props":1520,"children":1521},{"style":959},[1522],{"type":344,"value":1000},{"type":339,"tag":430,"props":1524,"children":1525},{"style":797},[1526],{"type":344,"value":800},{"type":339,"tag":430,"props":1528,"children":1529},{"style":771},[1530],{"type":344,"value":774},{"type":339,"tag":430,"props":1532,"children":1533},{"class":432,"line":1011},[1534,1538,1542,1546,1550],{"type":339,"tag":430,"props":1535,"children":1536},{"style":711},[1537],{"type":344,"value":1017},{"type":339,"tag":430,"props":1539,"children":1540},{"style":755},[1541],{"type":344,"value":1022},{"type":339,"tag":430,"props":1543,"children":1544},{"style":760},[1545],{"type":344,"value":763},{"type":339,"tag":430,"props":1547,"children":1548},{"style":755},[1549],{"type":344,"value":1031},{"type":339,"tag":430,"props":1551,"children":1552},{"style":771},[1553],{"type":344,"value":774},{"type":339,"tag":430,"props":1555,"children":1556},{"class":432,"line":1038},[1557,1561,1565,1569,1573],{"type":339,"tag":430,"props":1558,"children":1559},{"style":711},[1560],{"type":344,"value":1017},{"type":339,"tag":430,"props":1562,"children":1563},{"style":755},[1564],{"type":344,"value":1071},{"type":339,"tag":430,"props":1566,"children":1567},{"style":760},[1568],{"type":344,"value":763},{"type":339,"tag":430,"props":1570,"children":1571},{"style":755},[1572],{"type":344,"value":948},{"type":339,"tag":430,"props":1574,"children":1575},{"style":771},[1576],{"type":344,"value":774},{"type":339,"tag":430,"props":1578,"children":1579},{"class":432,"line":1060},[1580,1584,1588,1592,1597,1601],{"type":339,"tag":430,"props":1581,"children":1582},{"style":959},[1583],{"type":344,"value":1044},{"type":339,"tag":430,"props":1585,"children":1586},{"style":723},[1587],{"type":344,"value":933},{"type":339,"tag":430,"props":1589,"children":1590},{"style":755},[1591],{"type":344,"value":1053},{"type":339,"tag":430,"props":1593,"children":1594},{"style":760},[1595],{"type":344,"value":1596}," !==",{"type":339,"tag":430,"props":1598,"children":1599},{"style":755},[1600],{"type":344,"value":1071},{"type":339,"tag":430,"props":1602,"children":1603},{"style":723},[1604],{"type":344,"value":737},{"type":339,"tag":430,"props":1606,"children":1607},{"class":432,"line":1086},[1608,1612,1616,1620,1625,1629,1633,1637,1642,1646],{"type":339,"tag":430,"props":1609,"children":1610},{"style":755},[1611],{"type":344,"value":1194},{"type":339,"tag":430,"props":1613,"children":1614},{"style":760},[1615],{"type":344,"value":763},{"type":339,"tag":430,"props":1617,"children":1618},{"style":755},[1619],{"type":344,"value":1022},{"type":339,"tag":430,"props":1621,"children":1622},{"style":760},[1623],{"type":344,"value":1624}," ?",{"type":339,"tag":430,"props":1626,"children":1627},{"style":755},[1628],{"type":344,"value":1022},{"type":339,"tag":430,"props":1630,"children":1631},{"style":749},[1632],{"type":344,"value":752},{"type":339,"tag":430,"props":1634,"children":1635},{"style":755},[1636],{"type":344,"value":790},{"type":339,"tag":430,"props":1638,"children":1639},{"style":760},[1640],{"type":344,"value":1641}," :",{"type":339,"tag":430,"props":1643,"children":1644},{"style":755},[1645],{"type":344,"value":948},{"type":339,"tag":430,"props":1647,"children":1648},{"style":771},[1649],{"type":344,"value":774},{"type":339,"tag":430,"props":1651,"children":1652},{"class":432,"line":1108},[1653,1658,1662,1666,1670,1674,1678,1682,1686,1690],{"type":339,"tag":430,"props":1654,"children":1655},{"style":755},[1656],{"type":344,"value":1657},"    pB",{"type":339,"tag":430,"props":1659,"children":1660},{"style":760},[1661],{"type":344,"value":763},{"type":339,"tag":430,"props":1663,"children":1664},{"style":755},[1665],{"type":344,"value":1071},{"type":339,"tag":430,"props":1667,"children":1668},{"style":760},[1669],{"type":344,"value":1624},{"type":339,"tag":430,"props":1671,"children":1672},{"style":755},[1673],{"type":344,"value":1071},{"type":339,"tag":430,"props":1675,"children":1676},{"style":749},[1677],{"type":344,"value":752},{"type":339,"tag":430,"props":1679,"children":1680},{"style":755},[1681],{"type":344,"value":790},{"type":339,"tag":430,"props":1683,"children":1684},{"style":760},[1685],{"type":344,"value":1641},{"type":339,"tag":430,"props":1687,"children":1688},{"style":755},[1689],{"type":344,"value":1031},{"type":339,"tag":430,"props":1691,"children":1692},{"style":771},[1693],{"type":344,"value":774},{"type":339,"tag":430,"props":1695,"children":1696},{"class":432,"line":1150},[1697],{"type":339,"tag":430,"props":1698,"children":1699},{"style":723},[1700],{"type":344,"value":1223},{"type":339,"tag":430,"props":1702,"children":1703},{"class":432,"line":1179},[1704,1708,1712],{"type":339,"tag":430,"props":1705,"children":1706},{"style":959},[1707],{"type":344,"value":1232},{"type":339,"tag":430,"props":1709,"children":1710},{"style":755},[1711],{"type":344,"value":1022},{"type":339,"tag":430,"props":1713,"children":1714},{"style":771},[1715],{"type":344,"value":774},{"type":339,"tag":430,"props":1717,"children":1718},{"class":432,"line":1188},[1719,1723],{"type":339,"tag":430,"props":1720,"children":1721},{"style":723},[1722],{"type":344,"value":1249},{"type":339,"tag":430,"props":1724,"children":1725},{"style":771},[1726],{"type":344,"value":774},{"type":339,"tag":667,"props":1728,"children":1730},{"id":1729},"哈希法",[1731],{"type":344,"value":1729},{"type":339,"tag":420,"props":1733,"children":1735},{"className":674,"code":1734,"language":676,"meta":332,"style":332},"/**\n * Definition for singly-linked list.\n */\nfunction ListNode(val) {\n  this.val = val;\n  this.next = null;\n}\n\n/**\n * @param {ListNode} headA\n * @param {ListNode} headB\n * @return {ListNode}\n */\nvar getIntersectionNode = function (headA, headB) {\n  if (!headA || !headB) return null;\n  let map = new Map();\n  let pA = headA;\n  let pB = headB;\n  while (pA) {\n    map.set(pA, 1);\n    pA = pA.next;\n  }\n  while (pB) {\n    if (map.has(pB)) return pB;\n    pB = pB.next;\n  }\n};\n",[1736],{"type":339,"tag":426,"props":1737,"children":1738},{"__ignoreMap":332},[1739,1746,1753,1760,1783,1810,1837,1844,1851,1858,1877,1896,1911,1918,1957,2004,2039,2062,2085,2104,2147,2174,2181,2200,2251,2278,2285],{"type":339,"tag":430,"props":1740,"children":1741},{"class":432,"line":433},[1742],{"type":339,"tag":430,"props":1743,"children":1744},{"style":686},[1745],{"type":344,"value":689},{"type":339,"tag":430,"props":1747,"children":1748},{"class":432,"line":442},[1749],{"type":339,"tag":430,"props":1750,"children":1751},{"style":686},[1752],{"type":344,"value":697},{"type":339,"tag":430,"props":1754,"children":1755},{"class":432,"line":451},[1756],{"type":339,"tag":430,"props":1757,"children":1758},{"style":686},[1759],{"type":344,"value":705},{"type":339,"tag":430,"props":1761,"children":1762},{"class":432,"line":460},[1763,1767,1771,1775,1779],{"type":339,"tag":430,"props":1764,"children":1765},{"style":711},[1766],{"type":344,"value":714},{"type":339,"tag":430,"props":1768,"children":1769},{"style":717},[1770],{"type":344,"value":720},{"type":339,"tag":430,"props":1772,"children":1773},{"style":723},[1774],{"type":344,"value":726},{"type":339,"tag":430,"props":1776,"children":1777},{"style":729},[1778],{"type":344,"value":732},{"type":339,"tag":430,"props":1780,"children":1781},{"style":723},[1782],{"type":344,"value":737},{"type":339,"tag":430,"props":1784,"children":1785},{"class":432,"line":469},[1786,1790,1794,1798,1802,1806],{"type":339,"tag":430,"props":1787,"children":1788},{"style":743},[1789],{"type":344,"value":746},{"type":339,"tag":430,"props":1791,"children":1792},{"style":749},[1793],{"type":344,"value":752},{"type":339,"tag":430,"props":1795,"children":1796},{"style":755},[1797],{"type":344,"value":732},{"type":339,"tag":430,"props":1799,"children":1800},{"style":760},[1801],{"type":344,"value":763},{"type":339,"tag":430,"props":1803,"children":1804},{"style":755},[1805],{"type":344,"value":768},{"type":339,"tag":430,"props":1807,"children":1808},{"style":771},[1809],{"type":344,"value":774},{"type":339,"tag":430,"props":1811,"children":1812},{"class":432,"line":478},[1813,1817,1821,1825,1829,1833],{"type":339,"tag":430,"props":1814,"children":1815},{"style":743},[1816],{"type":344,"value":746},{"type":339,"tag":430,"props":1818,"children":1819},{"style":749},[1820],{"type":344,"value":752},{"type":339,"tag":430,"props":1822,"children":1823},{"style":755},[1824],{"type":344,"value":790},{"type":339,"tag":430,"props":1826,"children":1827},{"style":760},[1828],{"type":344,"value":763},{"type":339,"tag":430,"props":1830,"children":1831},{"style":797},[1832],{"type":344,"value":800},{"type":339,"tag":430,"props":1834,"children":1835},{"style":771},[1836],{"type":344,"value":774},{"type":339,"tag":430,"props":1838,"children":1839},{"class":432,"line":807},[1840],{"type":339,"tag":430,"props":1841,"children":1842},{"style":723},[1843],{"type":344,"value":813},{"type":339,"tag":430,"props":1845,"children":1846},{"class":432,"line":816},[1847],{"type":339,"tag":430,"props":1848,"children":1849},{"emptyLinePlaceholder":820},[1850],{"type":344,"value":823},{"type":339,"tag":430,"props":1852,"children":1853},{"class":432,"line":826},[1854],{"type":339,"tag":430,"props":1855,"children":1856},{"style":686},[1857],{"type":344,"value":689},{"type":339,"tag":430,"props":1859,"children":1860},{"class":432,"line":834},[1861,1865,1869,1873],{"type":339,"tag":430,"props":1862,"children":1863},{"style":686},[1864],{"type":344,"value":840},{"type":339,"tag":430,"props":1866,"children":1867},{"style":843},[1868],{"type":344,"value":846},{"type":339,"tag":430,"props":1870,"children":1871},{"style":849},[1872],{"type":344,"value":852},{"type":339,"tag":430,"props":1874,"children":1875},{"style":855},[1876],{"type":344,"value":858},{"type":339,"tag":430,"props":1878,"children":1879},{"class":432,"line":861},[1880,1884,1888,1892],{"type":339,"tag":430,"props":1881,"children":1882},{"style":686},[1883],{"type":344,"value":840},{"type":339,"tag":430,"props":1885,"children":1886},{"style":843},[1887],{"type":344,"value":846},{"type":339,"tag":430,"props":1889,"children":1890},{"style":849},[1891],{"type":344,"value":852},{"type":339,"tag":430,"props":1893,"children":1894},{"style":855},[1895],{"type":344,"value":879},{"type":339,"tag":430,"props":1897,"children":1898},{"class":432,"line":882},[1899,1903,1907],{"type":339,"tag":430,"props":1900,"children":1901},{"style":686},[1902],{"type":344,"value":840},{"type":339,"tag":430,"props":1904,"children":1905},{"style":843},[1906],{"type":344,"value":892},{"type":339,"tag":430,"props":1908,"children":1909},{"style":849},[1910],{"type":344,"value":897},{"type":339,"tag":430,"props":1912,"children":1913},{"class":432,"line":900},[1914],{"type":339,"tag":430,"props":1915,"children":1916},{"style":686},[1917],{"type":344,"value":705},{"type":339,"tag":430,"props":1919,"children":1920},{"class":432,"line":908},[1921,1925,1929,1933,1937,1941,1945,1949,1953],{"type":339,"tag":430,"props":1922,"children":1923},{"style":711},[1924],{"type":344,"value":914},{"type":339,"tag":430,"props":1926,"children":1927},{"style":717},[1928],{"type":344,"value":919},{"type":339,"tag":430,"props":1930,"children":1931},{"style":760},[1932],{"type":344,"value":763},{"type":339,"tag":430,"props":1934,"children":1935},{"style":711},[1936],{"type":344,"value":928},{"type":339,"tag":430,"props":1938,"children":1939},{"style":723},[1940],{"type":344,"value":933},{"type":339,"tag":430,"props":1942,"children":1943},{"style":729},[1944],{"type":344,"value":938},{"type":339,"tag":430,"props":1946,"children":1947},{"style":771},[1948],{"type":344,"value":943},{"type":339,"tag":430,"props":1950,"children":1951},{"style":729},[1952],{"type":344,"value":948},{"type":339,"tag":430,"props":1954,"children":1955},{"style":723},[1956],{"type":344,"value":737},{"type":339,"tag":430,"props":1958,"children":1959},{"class":432,"line":955},[1960,1964,1968,1972,1976,1980,1984,1988,1992,1996,2000],{"type":339,"tag":430,"props":1961,"children":1962},{"style":959},[1963],{"type":344,"value":962},{"type":339,"tag":430,"props":1965,"children":1966},{"style":723},[1967],{"type":344,"value":933},{"type":339,"tag":430,"props":1969,"children":1970},{"style":760},[1971],{"type":344,"value":971},{"type":339,"tag":430,"props":1973,"children":1974},{"style":755},[1975],{"type":344,"value":938},{"type":339,"tag":430,"props":1977,"children":1978},{"style":760},[1979],{"type":344,"value":980},{"type":339,"tag":430,"props":1981,"children":1982},{"style":760},[1983],{"type":344,"value":985},{"type":339,"tag":430,"props":1985,"children":1986},{"style":755},[1987],{"type":344,"value":990},{"type":339,"tag":430,"props":1989,"children":1990},{"style":723},[1991],{"type":344,"value":995},{"type":339,"tag":430,"props":1993,"children":1994},{"style":959},[1995],{"type":344,"value":1000},{"type":339,"tag":430,"props":1997,"children":1998},{"style":797},[1999],{"type":344,"value":800},{"type":339,"tag":430,"props":2001,"children":2002},{"style":771},[2003],{"type":344,"value":774},{"type":339,"tag":430,"props":2005,"children":2006},{"class":432,"line":1011},[2007,2011,2016,2020,2025,2030,2035],{"type":339,"tag":430,"props":2008,"children":2009},{"style":711},[2010],{"type":344,"value":1017},{"type":339,"tag":430,"props":2012,"children":2013},{"style":755},[2014],{"type":344,"value":2015}," map",{"type":339,"tag":430,"props":2017,"children":2018},{"style":760},[2019],{"type":344,"value":763},{"type":339,"tag":430,"props":2021,"children":2022},{"style":760},[2023],{"type":344,"value":2024}," new",{"type":339,"tag":430,"props":2026,"children":2027},{"style":717},[2028],{"type":344,"value":2029}," Map",{"type":339,"tag":430,"props":2031,"children":2032},{"style":723},[2033],{"type":344,"value":2034},"()",{"type":339,"tag":430,"props":2036,"children":2037},{"style":771},[2038],{"type":344,"value":774},{"type":339,"tag":430,"props":2040,"children":2041},{"class":432,"line":1038},[2042,2046,2050,2054,2058],{"type":339,"tag":430,"props":2043,"children":2044},{"style":711},[2045],{"type":344,"value":1017},{"type":339,"tag":430,"props":2047,"children":2048},{"style":755},[2049],{"type":344,"value":1022},{"type":339,"tag":430,"props":2051,"children":2052},{"style":760},[2053],{"type":344,"value":763},{"type":339,"tag":430,"props":2055,"children":2056},{"style":755},[2057],{"type":344,"value":1031},{"type":339,"tag":430,"props":2059,"children":2060},{"style":771},[2061],{"type":344,"value":774},{"type":339,"tag":430,"props":2063,"children":2064},{"class":432,"line":1060},[2065,2069,2073,2077,2081],{"type":339,"tag":430,"props":2066,"children":2067},{"style":711},[2068],{"type":344,"value":1017},{"type":339,"tag":430,"props":2070,"children":2071},{"style":755},[2072],{"type":344,"value":1071},{"type":339,"tag":430,"props":2074,"children":2075},{"style":760},[2076],{"type":344,"value":763},{"type":339,"tag":430,"props":2078,"children":2079},{"style":755},[2080],{"type":344,"value":948},{"type":339,"tag":430,"props":2082,"children":2083},{"style":771},[2084],{"type":344,"value":774},{"type":339,"tag":430,"props":2086,"children":2087},{"class":432,"line":1086},[2088,2092,2096,2100],{"type":339,"tag":430,"props":2089,"children":2090},{"style":959},[2091],{"type":344,"value":1044},{"type":339,"tag":430,"props":2093,"children":2094},{"style":723},[2095],{"type":344,"value":933},{"type":339,"tag":430,"props":2097,"children":2098},{"style":755},[2099],{"type":344,"value":1053},{"type":339,"tag":430,"props":2101,"children":2102},{"style":723},[2103],{"type":344,"value":737},{"type":339,"tag":430,"props":2105,"children":2106},{"class":432,"line":1108},[2107,2112,2116,2121,2125,2129,2133,2138,2143],{"type":339,"tag":430,"props":2108,"children":2109},{"style":755},[2110],{"type":344,"value":2111},"    map",{"type":339,"tag":430,"props":2113,"children":2114},{"style":749},[2115],{"type":344,"value":752},{"type":339,"tag":430,"props":2117,"children":2118},{"style":717},[2119],{"type":344,"value":2120},"set",{"type":339,"tag":430,"props":2122,"children":2123},{"style":723},[2124],{"type":344,"value":726},{"type":339,"tag":430,"props":2126,"children":2127},{"style":755},[2128],{"type":344,"value":1053},{"type":339,"tag":430,"props":2130,"children":2131},{"style":771},[2132],{"type":344,"value":943},{"type":339,"tag":430,"props":2134,"children":2135},{"style":797},[2136],{"type":344,"value":2137}," 1",{"type":339,"tag":430,"props":2139,"children":2140},{"style":723},[2141],{"type":344,"value":2142},")",{"type":339,"tag":430,"props":2144,"children":2145},{"style":771},[2146],{"type":344,"value":774},{"type":339,"tag":430,"props":2148,"children":2149},{"class":432,"line":1150},[2150,2154,2158,2162,2166,2170],{"type":339,"tag":430,"props":2151,"children":2152},{"style":755},[2153],{"type":344,"value":1194},{"type":339,"tag":430,"props":2155,"children":2156},{"style":760},[2157],{"type":344,"value":763},{"type":339,"tag":430,"props":2159,"children":2160},{"style":755},[2161],{"type":344,"value":1022},{"type":339,"tag":430,"props":2163,"children":2164},{"style":749},[2165],{"type":344,"value":752},{"type":339,"tag":430,"props":2167,"children":2168},{"style":755},[2169],{"type":344,"value":790},{"type":339,"tag":430,"props":2171,"children":2172},{"style":771},[2173],{"type":344,"value":774},{"type":339,"tag":430,"props":2175,"children":2176},{"class":432,"line":1179},[2177],{"type":339,"tag":430,"props":2178,"children":2179},{"style":723},[2180],{"type":344,"value":1223},{"type":339,"tag":430,"props":2182,"children":2183},{"class":432,"line":1188},[2184,2188,2192,2196],{"type":339,"tag":430,"props":2185,"children":2186},{"style":959},[2187],{"type":344,"value":1044},{"type":339,"tag":430,"props":2189,"children":2190},{"style":723},[2191],{"type":344,"value":933},{"type":339,"tag":430,"props":2193,"children":2194},{"style":755},[2195],{"type":344,"value":1101},{"type":339,"tag":430,"props":2197,"children":2198},{"style":723},[2199],{"type":344,"value":737},{"type":339,"tag":430,"props":2201,"children":2202},{"class":432,"line":1217},[2203,2208,2212,2217,2221,2226,2230,2234,2239,2243,2247],{"type":339,"tag":430,"props":2204,"children":2205},{"style":959},[2206],{"type":344,"value":2207},"    if",{"type":339,"tag":430,"props":2209,"children":2210},{"style":723},[2211],{"type":344,"value":933},{"type":339,"tag":430,"props":2213,"children":2214},{"style":755},[2215],{"type":344,"value":2216},"map",{"type":339,"tag":430,"props":2218,"children":2219},{"style":749},[2220],{"type":344,"value":752},{"type":339,"tag":430,"props":2222,"children":2223},{"style":717},[2224],{"type":344,"value":2225},"has",{"type":339,"tag":430,"props":2227,"children":2228},{"style":723},[2229],{"type":344,"value":726},{"type":339,"tag":430,"props":2231,"children":2232},{"style":755},[2233],{"type":344,"value":1101},{"type":339,"tag":430,"props":2235,"children":2236},{"style":723},[2237],{"type":344,"value":2238},")) ",{"type":339,"tag":430,"props":2240,"children":2241},{"style":959},[2242],{"type":344,"value":1000},{"type":339,"tag":430,"props":2244,"children":2245},{"style":755},[2246],{"type":344,"value":1071},{"type":339,"tag":430,"props":2248,"children":2249},{"style":771},[2250],{"type":344,"value":774},{"type":339,"tag":430,"props":2252,"children":2253},{"class":432,"line":1226},[2254,2258,2262,2266,2270,2274],{"type":339,"tag":430,"props":2255,"children":2256},{"style":755},[2257],{"type":344,"value":1657},{"type":339,"tag":430,"props":2259,"children":2260},{"style":760},[2261],{"type":344,"value":763},{"type":339,"tag":430,"props":2263,"children":2264},{"style":755},[2265],{"type":344,"value":1071},{"type":339,"tag":430,"props":2267,"children":2268},{"style":749},[2269],{"type":344,"value":752},{"type":339,"tag":430,"props":2271,"children":2272},{"style":755},[2273],{"type":344,"value":790},{"type":339,"tag":430,"props":2275,"children":2276},{"style":771},[2277],{"type":344,"value":774},{"type":339,"tag":430,"props":2279,"children":2280},{"class":432,"line":1243},[2281],{"type":339,"tag":430,"props":2282,"children":2283},{"style":723},[2284],{"type":344,"value":1223},{"type":339,"tag":430,"props":2286,"children":2288},{"class":432,"line":2287},27,[2289,2293],{"type":339,"tag":430,"props":2290,"children":2291},{"style":723},[2292],{"type":344,"value":1249},{"type":339,"tag":430,"props":2294,"children":2295},{"style":771},[2296],{"type":344,"value":774},{"type":339,"tag":2298,"props":2299,"children":2300},"style",{},[2301],{"type":344,"value":2302},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":332,"searchDepth":469,"depth":469,"links":2304},[2305,2306],{"id":658,"depth":442,"text":658},{"id":663,"depth":442,"text":663,"children":2307},[2308,2309,2310],{"id":669,"depth":451,"text":669},{"id":1256,"depth":451,"text":1256},{"id":1729,"depth":451,"text":1729},"markdown","content:2.code:1.algorithm:3.leetcode:160.intersection-of-two-linked-lists.md","content","2.code/1.algorithm/3.leetcode/160.intersection-of-two-linked-lists.md","md",[2317,2319],{"_path":187,"title":186,"description":2318},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",{"_path":193,"title":192,"description":2320},"峰值元素是指其值严格大于左右相邻值的元素。",1712330889818]