[{"data":1,"prerenderedAt":1071},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/maximum-subarray":359,"/code/algorithm/leetcode/maximum-subarray-surround":1066},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,269,318],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263,266],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.165 比较版本号","/code/algorithm/leetcode/compare-version-numbers",{"title":198,"_path":199},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":201,"_path":202},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":204,"_path":205},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":207,"_path":208},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":210,"_path":211},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":213,"_path":214},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":216,"_path":217},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":219,"_path":220},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":222,"_path":223},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":225,"_path":226},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":228,"_path":229},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":231,"_path":232},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":234,"_path":235},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":237,"_path":238},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":240,"_path":241},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":243,"_path":244},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":246,"_path":247},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":249,"_path":250},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":252,"_path":253},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":255,"_path":256},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":258,"_path":259},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":261,"_path":262},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":264,"_path":265},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":267,"_path":268},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":270,"_path":271,"children":272},"源码实现","/code/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/code/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/code/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/code/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/code/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/code/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/code/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/code/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/code/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/code/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/code/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/code/source/string",[315],{"title":316,"_path":317},"repeat()","/code/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/code/scene",[322,344,347,350,353,356],{"title":323,"_path":324,"children":325},"Promise","/code/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/code/scene/calcuate-object-bytes",{"title":348,"_path":349},"lodash.get","/code/scene/lodash-get",{"title":351,"_path":352},"记忆化请求函数 - 可缓存请求函数","/code/scene/memorize-request",{"title":354,"_path":355},"sku 算法实现","/code/scene/sku",{"title":357,"_path":358},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":127,"_dir":360,"_draft":361,"_partial":361,"_locale":362,"title":126,"description":363,"url":364,"body":365,"_type":1061,"_id":1062,"_source":1063,"_file":1064,"_extension":1065},"leetcode",false,"","给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。","https://leetcode.cn/problems/maximum-subarray",{"type":366,"children":367,"toc":1055},"root",[368,375,380,385,424,429,452,457,480,485,500,505,511,516,522,1049],{"type":369,"tag":370,"props":371,"children":372},"element","p",{},[373],{"type":374,"value":363},"text",{"type":369,"tag":370,"props":376,"children":377},{},[378],{"type":374,"value":379},"子数组\n是数组中的一个连续部分。",{"type":369,"tag":370,"props":381,"children":382},{},[383],{"type":374,"value":384},"示例 1：",{"type":369,"tag":386,"props":387,"children":390},"pre",{"className":388,"code":389,"language":374,"meta":362,"style":362},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n输出：6\n解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",[391],{"type":369,"tag":392,"props":393,"children":394},"code",{"__ignoreMap":362},[395,406,415],{"type":369,"tag":396,"props":397,"children":400},"span",{"class":398,"line":399},"line",1,[401],{"type":369,"tag":396,"props":402,"children":403},{},[404],{"type":374,"value":405},"输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n",{"type":369,"tag":396,"props":407,"children":409},{"class":398,"line":408},2,[410],{"type":369,"tag":396,"props":411,"children":412},{},[413],{"type":374,"value":414},"输出：6\n",{"type":369,"tag":396,"props":416,"children":418},{"class":398,"line":417},3,[419],{"type":369,"tag":396,"props":420,"children":421},{},[422],{"type":374,"value":423},"解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",{"type":369,"tag":370,"props":425,"children":426},{},[427],{"type":374,"value":428},"示例 2：",{"type":369,"tag":386,"props":430,"children":432},{"className":388,"code":431,"language":374,"meta":362,"style":362},"输入：nums = [1]\n输出：1\n",[433],{"type":369,"tag":392,"props":434,"children":435},{"__ignoreMap":362},[436,444],{"type":369,"tag":396,"props":437,"children":438},{"class":398,"line":399},[439],{"type":369,"tag":396,"props":440,"children":441},{},[442],{"type":374,"value":443},"输入：nums = [1]\n",{"type":369,"tag":396,"props":445,"children":446},{"class":398,"line":408},[447],{"type":369,"tag":396,"props":448,"children":449},{},[450],{"type":374,"value":451},"输出：1\n",{"type":369,"tag":370,"props":453,"children":454},{},[455],{"type":374,"value":456},"示例 3：",{"type":369,"tag":386,"props":458,"children":460},{"className":388,"code":459,"language":374,"meta":362,"style":362},"输入：nums = [5,4,-1,7,8]\n输出：23\n",[461],{"type":369,"tag":392,"props":462,"children":463},{"__ignoreMap":362},[464,472],{"type":369,"tag":396,"props":465,"children":466},{"class":398,"line":399},[467],{"type":369,"tag":396,"props":468,"children":469},{},[470],{"type":374,"value":471},"输入：nums = [5,4,-1,7,8]\n",{"type":369,"tag":396,"props":473,"children":474},{"class":398,"line":408},[475],{"type":369,"tag":396,"props":476,"children":477},{},[478],{"type":374,"value":479},"输出：23\n",{"type":369,"tag":370,"props":481,"children":482},{},[483],{"type":374,"value":484},"提示：",{"type":369,"tag":486,"props":487,"children":488},"ul",{},[489,495],{"type":369,"tag":490,"props":491,"children":492},"li",{},[493],{"type":374,"value":494},"1 \u003C= nums.length \u003C= 105",{"type":369,"tag":490,"props":496,"children":497},{},[498],{"type":374,"value":499},"-104 \u003C= nums[i] \u003C= 104",{"type":369,"tag":370,"props":501,"children":502},{},[503],{"type":374,"value":504},"进阶：如果你已经实现复杂度为 O(n) 的解法，尝试使用更为精妙的 分治法 求解。",{"type":369,"tag":506,"props":507,"children":509},"h2",{"id":508},"解题思路",[510],{"type":374,"value":508},{"type":369,"tag":506,"props":512,"children":514},{"id":513},"实现",[515],{"type":374,"value":513},{"type":369,"tag":517,"props":518,"children":520},"h3",{"id":519},"动态规划",[521],{"type":374,"value":519},{"type":369,"tag":386,"props":523,"children":527},{"className":524,"code":525,"language":526,"meta":362,"style":362},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSubArray = function (nums) {\n  let dp = [];\n  dp[0] = nums[0];\n  let res = dp[0];\n  for (let i = 1; i \u003C nums.length; i++) {\n    dp[i] = Math.max(dp[i - 1] + nums[i], nums[i]);\n    res = Math.max(res, dp[i]);\n  }\n  return res;\n};\n","js",[528],{"type":369,"tag":392,"props":529,"children":530},{"__ignoreMap":362},[531,540,566,583,592,636,666,718,755,834,952,1010,1019,1036],{"type":369,"tag":396,"props":532,"children":533},{"class":398,"line":399},[534],{"type":369,"tag":396,"props":535,"children":537},{"style":536},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[538],{"type":374,"value":539},"/**\n",{"type":369,"tag":396,"props":541,"children":542},{"class":398,"line":408},[543,548,554,560],{"type":369,"tag":396,"props":544,"children":545},{"style":536},[546],{"type":374,"value":547}," * ",{"type":369,"tag":396,"props":549,"children":551},{"style":550},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[552],{"type":374,"value":553},"@param",{"type":369,"tag":396,"props":555,"children":557},{"style":556},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[558],{"type":374,"value":559}," {number[]}",{"type":369,"tag":396,"props":561,"children":563},{"style":562},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[564],{"type":374,"value":565}," nums\n",{"type":369,"tag":396,"props":567,"children":568},{"class":398,"line":417},[569,573,578],{"type":369,"tag":396,"props":570,"children":571},{"style":536},[572],{"type":374,"value":547},{"type":369,"tag":396,"props":574,"children":575},{"style":550},[576],{"type":374,"value":577},"@return",{"type":369,"tag":396,"props":579,"children":580},{"style":556},[581],{"type":374,"value":582}," {number}\n",{"type":369,"tag":396,"props":584,"children":586},{"class":398,"line":585},4,[587],{"type":369,"tag":396,"props":588,"children":589},{"style":536},[590],{"type":374,"value":591}," */\n",{"type":369,"tag":396,"props":593,"children":595},{"class":398,"line":594},5,[596,602,608,614,619,625,631],{"type":369,"tag":396,"props":597,"children":599},{"style":598},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[600],{"type":374,"value":601},"var",{"type":369,"tag":396,"props":603,"children":605},{"style":604},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[606],{"type":374,"value":607}," maxSubArray",{"type":369,"tag":396,"props":609,"children":611},{"style":610},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[612],{"type":374,"value":613}," =",{"type":369,"tag":396,"props":615,"children":616},{"style":598},[617],{"type":374,"value":618}," function",{"type":369,"tag":396,"props":620,"children":622},{"style":621},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[623],{"type":374,"value":624}," (",{"type":369,"tag":396,"props":626,"children":628},{"style":627},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[629],{"type":374,"value":630},"nums",{"type":369,"tag":396,"props":632,"children":633},{"style":621},[634],{"type":374,"value":635},") {\n",{"type":369,"tag":396,"props":637,"children":639},{"class":398,"line":638},6,[640,645,651,655,660],{"type":369,"tag":396,"props":641,"children":642},{"style":598},[643],{"type":374,"value":644},"  let",{"type":369,"tag":396,"props":646,"children":648},{"style":647},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[649],{"type":374,"value":650}," dp",{"type":369,"tag":396,"props":652,"children":653},{"style":610},[654],{"type":374,"value":613},{"type":369,"tag":396,"props":656,"children":657},{"style":621},[658],{"type":374,"value":659}," []",{"type":369,"tag":396,"props":661,"children":663},{"style":662},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[664],{"type":374,"value":665},";\n",{"type":369,"tag":396,"props":667,"children":669},{"class":398,"line":668},7,[670,675,680,686,691,696,701,705,709,714],{"type":369,"tag":396,"props":671,"children":672},{"style":647},[673],{"type":374,"value":674},"  dp",{"type":369,"tag":396,"props":676,"children":677},{"style":621},[678],{"type":374,"value":679},"[",{"type":369,"tag":396,"props":681,"children":683},{"style":682},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[684],{"type":374,"value":685},"0",{"type":369,"tag":396,"props":687,"children":688},{"style":621},[689],{"type":374,"value":690},"] ",{"type":369,"tag":396,"props":692,"children":693},{"style":610},[694],{"type":374,"value":695},"=",{"type":369,"tag":396,"props":697,"children":698},{"style":647},[699],{"type":374,"value":700}," nums",{"type":369,"tag":396,"props":702,"children":703},{"style":621},[704],{"type":374,"value":679},{"type":369,"tag":396,"props":706,"children":707},{"style":682},[708],{"type":374,"value":685},{"type":369,"tag":396,"props":710,"children":711},{"style":621},[712],{"type":374,"value":713},"]",{"type":369,"tag":396,"props":715,"children":716},{"style":662},[717],{"type":374,"value":665},{"type":369,"tag":396,"props":719,"children":721},{"class":398,"line":720},8,[722,726,731,735,739,743,747,751],{"type":369,"tag":396,"props":723,"children":724},{"style":598},[725],{"type":374,"value":644},{"type":369,"tag":396,"props":727,"children":728},{"style":647},[729],{"type":374,"value":730}," res",{"type":369,"tag":396,"props":732,"children":733},{"style":610},[734],{"type":374,"value":613},{"type":369,"tag":396,"props":736,"children":737},{"style":647},[738],{"type":374,"value":650},{"type":369,"tag":396,"props":740,"children":741},{"style":621},[742],{"type":374,"value":679},{"type":369,"tag":396,"props":744,"children":745},{"style":682},[746],{"type":374,"value":685},{"type":369,"tag":396,"props":748,"children":749},{"style":621},[750],{"type":374,"value":713},{"type":369,"tag":396,"props":752,"children":753},{"style":662},[754],{"type":374,"value":665},{"type":369,"tag":396,"props":756,"children":758},{"class":398,"line":757},9,[759,765,769,774,779,783,788,793,797,802,806,812,817,821,825,830],{"type":369,"tag":396,"props":760,"children":762},{"style":761},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[763],{"type":374,"value":764},"  for",{"type":369,"tag":396,"props":766,"children":767},{"style":621},[768],{"type":374,"value":624},{"type":369,"tag":396,"props":770,"children":771},{"style":598},[772],{"type":374,"value":773},"let",{"type":369,"tag":396,"props":775,"children":776},{"style":647},[777],{"type":374,"value":778}," i",{"type":369,"tag":396,"props":780,"children":781},{"style":610},[782],{"type":374,"value":613},{"type":369,"tag":396,"props":784,"children":785},{"style":682},[786],{"type":374,"value":787}," 1",{"type":369,"tag":396,"props":789,"children":790},{"style":662},[791],{"type":374,"value":792},";",{"type":369,"tag":396,"props":794,"children":795},{"style":647},[796],{"type":374,"value":778},{"type":369,"tag":396,"props":798,"children":799},{"style":610},[800],{"type":374,"value":801}," \u003C",{"type":369,"tag":396,"props":803,"children":804},{"style":647},[805],{"type":374,"value":700},{"type":369,"tag":396,"props":807,"children":809},{"style":808},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[810],{"type":374,"value":811},".",{"type":369,"tag":396,"props":813,"children":814},{"style":621},[815],{"type":374,"value":816},"length",{"type":369,"tag":396,"props":818,"children":819},{"style":662},[820],{"type":374,"value":792},{"type":369,"tag":396,"props":822,"children":823},{"style":647},[824],{"type":374,"value":778},{"type":369,"tag":396,"props":826,"children":827},{"style":610},[828],{"type":374,"value":829},"++",{"type":369,"tag":396,"props":831,"children":832},{"style":621},[833],{"type":374,"value":635},{"type":369,"tag":396,"props":835,"children":837},{"class":398,"line":836},10,[838,843,847,852,856,860,865,869,874,879,884,888,892,897,901,905,910,914,918,922,926,931,935,939,943,948],{"type":369,"tag":396,"props":839,"children":840},{"style":647},[841],{"type":374,"value":842},"    dp",{"type":369,"tag":396,"props":844,"children":845},{"style":621},[846],{"type":374,"value":679},{"type":369,"tag":396,"props":848,"children":849},{"style":647},[850],{"type":374,"value":851},"i",{"type":369,"tag":396,"props":853,"children":854},{"style":621},[855],{"type":374,"value":690},{"type":369,"tag":396,"props":857,"children":858},{"style":610},[859],{"type":374,"value":695},{"type":369,"tag":396,"props":861,"children":862},{"style":647},[863],{"type":374,"value":864}," Math",{"type":369,"tag":396,"props":866,"children":867},{"style":808},[868],{"type":374,"value":811},{"type":369,"tag":396,"props":870,"children":871},{"style":604},[872],{"type":374,"value":873},"max",{"type":369,"tag":396,"props":875,"children":876},{"style":621},[877],{"type":374,"value":878},"(",{"type":369,"tag":396,"props":880,"children":881},{"style":647},[882],{"type":374,"value":883},"dp",{"type":369,"tag":396,"props":885,"children":886},{"style":621},[887],{"type":374,"value":679},{"type":369,"tag":396,"props":889,"children":890},{"style":647},[891],{"type":374,"value":851},{"type":369,"tag":396,"props":893,"children":894},{"style":610},[895],{"type":374,"value":896}," -",{"type":369,"tag":396,"props":898,"children":899},{"style":682},[900],{"type":374,"value":787},{"type":369,"tag":396,"props":902,"children":903},{"style":621},[904],{"type":374,"value":690},{"type":369,"tag":396,"props":906,"children":907},{"style":610},[908],{"type":374,"value":909},"+",{"type":369,"tag":396,"props":911,"children":912},{"style":647},[913],{"type":374,"value":700},{"type":369,"tag":396,"props":915,"children":916},{"style":621},[917],{"type":374,"value":679},{"type":369,"tag":396,"props":919,"children":920},{"style":647},[921],{"type":374,"value":851},{"type":369,"tag":396,"props":923,"children":924},{"style":621},[925],{"type":374,"value":713},{"type":369,"tag":396,"props":927,"children":928},{"style":662},[929],{"type":374,"value":930},",",{"type":369,"tag":396,"props":932,"children":933},{"style":647},[934],{"type":374,"value":700},{"type":369,"tag":396,"props":936,"children":937},{"style":621},[938],{"type":374,"value":679},{"type":369,"tag":396,"props":940,"children":941},{"style":647},[942],{"type":374,"value":851},{"type":369,"tag":396,"props":944,"children":945},{"style":621},[946],{"type":374,"value":947},"])",{"type":369,"tag":396,"props":949,"children":950},{"style":662},[951],{"type":374,"value":665},{"type":369,"tag":396,"props":953,"children":955},{"class":398,"line":954},11,[956,961,965,969,973,977,981,986,990,994,998,1002,1006],{"type":369,"tag":396,"props":957,"children":958},{"style":647},[959],{"type":374,"value":960},"    res",{"type":369,"tag":396,"props":962,"children":963},{"style":610},[964],{"type":374,"value":613},{"type":369,"tag":396,"props":966,"children":967},{"style":647},[968],{"type":374,"value":864},{"type":369,"tag":396,"props":970,"children":971},{"style":808},[972],{"type":374,"value":811},{"type":369,"tag":396,"props":974,"children":975},{"style":604},[976],{"type":374,"value":873},{"type":369,"tag":396,"props":978,"children":979},{"style":621},[980],{"type":374,"value":878},{"type":369,"tag":396,"props":982,"children":983},{"style":647},[984],{"type":374,"value":985},"res",{"type":369,"tag":396,"props":987,"children":988},{"style":662},[989],{"type":374,"value":930},{"type":369,"tag":396,"props":991,"children":992},{"style":647},[993],{"type":374,"value":650},{"type":369,"tag":396,"props":995,"children":996},{"style":621},[997],{"type":374,"value":679},{"type":369,"tag":396,"props":999,"children":1000},{"style":647},[1001],{"type":374,"value":851},{"type":369,"tag":396,"props":1003,"children":1004},{"style":621},[1005],{"type":374,"value":947},{"type":369,"tag":396,"props":1007,"children":1008},{"style":662},[1009],{"type":374,"value":665},{"type":369,"tag":396,"props":1011,"children":1013},{"class":398,"line":1012},12,[1014],{"type":369,"tag":396,"props":1015,"children":1016},{"style":621},[1017],{"type":374,"value":1018},"  }\n",{"type":369,"tag":396,"props":1020,"children":1022},{"class":398,"line":1021},13,[1023,1028,1032],{"type":369,"tag":396,"props":1024,"children":1025},{"style":761},[1026],{"type":374,"value":1027},"  return",{"type":369,"tag":396,"props":1029,"children":1030},{"style":647},[1031],{"type":374,"value":730},{"type":369,"tag":396,"props":1033,"children":1034},{"style":662},[1035],{"type":374,"value":665},{"type":369,"tag":396,"props":1037,"children":1039},{"class":398,"line":1038},14,[1040,1045],{"type":369,"tag":396,"props":1041,"children":1042},{"style":621},[1043],{"type":374,"value":1044},"}",{"type":369,"tag":396,"props":1046,"children":1047},{"style":662},[1048],{"type":374,"value":665},{"type":369,"tag":1050,"props":1051,"children":1052},"style",{},[1053],{"type":374,"value":1054},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":362,"searchDepth":594,"depth":594,"links":1056},[1057,1058],{"id":508,"depth":408,"text":508},{"id":513,"depth":408,"text":513,"children":1059},[1060],{"id":519,"depth":417,"text":519},"markdown","content:2.code:1.algorithm:3.leetcode:53.maximum-subarray.md","content","2.code/1.algorithm/3.leetcode/53.maximum-subarray.md","md",[1067,1069],{"_path":124,"title":123,"description":1068},"给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。",{"_path":130,"title":129,"description":1070},"以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [start_i, end_i] 。请你合并所有重叠的区间，并返回 一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间 。",1712748636119]