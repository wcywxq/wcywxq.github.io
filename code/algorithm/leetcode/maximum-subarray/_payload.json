[{"data":1,"prerenderedAt":1041},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/maximum-subarray":329,"/code/algorithm/leetcode/maximum-subarray-surround":1036},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319],{"title":320,"_path":321,"children":322},"Promise","/code/scene/promise",[323,326],{"title":324,"_path":325},"顺序打印 url 并支持 retry","/code/scene/promise/order-print-url-and-retry",{"title":327,"_path":328},"promise 实现图片加载数量限制","/code/scene/promise/limit-image-load-count",{"_path":127,"_dir":330,"_draft":331,"_partial":331,"_locale":332,"title":126,"description":333,"url":334,"body":335,"_type":1031,"_id":1032,"_source":1033,"_file":1034,"_extension":1035},"leetcode",false,"","给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。","https://leetcode.cn/problems/maximum-subarray",{"type":336,"children":337,"toc":1025},"root",[338,345,350,355,394,399,422,427,450,455,470,475,481,486,492,1019],{"type":339,"tag":340,"props":341,"children":342},"element","p",{},[343],{"type":344,"value":333},"text",{"type":339,"tag":340,"props":346,"children":347},{},[348],{"type":344,"value":349},"子数组\n是数组中的一个连续部分。",{"type":339,"tag":340,"props":351,"children":352},{},[353],{"type":344,"value":354},"示例 1：",{"type":339,"tag":356,"props":357,"children":360},"pre",{"className":358,"code":359,"language":344,"meta":332,"style":332},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n输出：6\n解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",[361],{"type":339,"tag":362,"props":363,"children":364},"code",{"__ignoreMap":332},[365,376,385],{"type":339,"tag":366,"props":367,"children":370},"span",{"class":368,"line":369},"line",1,[371],{"type":339,"tag":366,"props":372,"children":373},{},[374],{"type":344,"value":375},"输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n",{"type":339,"tag":366,"props":377,"children":379},{"class":368,"line":378},2,[380],{"type":339,"tag":366,"props":381,"children":382},{},[383],{"type":344,"value":384},"输出：6\n",{"type":339,"tag":366,"props":386,"children":388},{"class":368,"line":387},3,[389],{"type":339,"tag":366,"props":390,"children":391},{},[392],{"type":344,"value":393},"解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",{"type":339,"tag":340,"props":395,"children":396},{},[397],{"type":344,"value":398},"示例 2：",{"type":339,"tag":356,"props":400,"children":402},{"className":358,"code":401,"language":344,"meta":332,"style":332},"输入：nums = [1]\n输出：1\n",[403],{"type":339,"tag":362,"props":404,"children":405},{"__ignoreMap":332},[406,414],{"type":339,"tag":366,"props":407,"children":408},{"class":368,"line":369},[409],{"type":339,"tag":366,"props":410,"children":411},{},[412],{"type":344,"value":413},"输入：nums = [1]\n",{"type":339,"tag":366,"props":415,"children":416},{"class":368,"line":378},[417],{"type":339,"tag":366,"props":418,"children":419},{},[420],{"type":344,"value":421},"输出：1\n",{"type":339,"tag":340,"props":423,"children":424},{},[425],{"type":344,"value":426},"示例 3：",{"type":339,"tag":356,"props":428,"children":430},{"className":358,"code":429,"language":344,"meta":332,"style":332},"输入：nums = [5,4,-1,7,8]\n输出：23\n",[431],{"type":339,"tag":362,"props":432,"children":433},{"__ignoreMap":332},[434,442],{"type":339,"tag":366,"props":435,"children":436},{"class":368,"line":369},[437],{"type":339,"tag":366,"props":438,"children":439},{},[440],{"type":344,"value":441},"输入：nums = [5,4,-1,7,8]\n",{"type":339,"tag":366,"props":443,"children":444},{"class":368,"line":378},[445],{"type":339,"tag":366,"props":446,"children":447},{},[448],{"type":344,"value":449},"输出：23\n",{"type":339,"tag":340,"props":451,"children":452},{},[453],{"type":344,"value":454},"提示：",{"type":339,"tag":456,"props":457,"children":458},"ul",{},[459,465],{"type":339,"tag":460,"props":461,"children":462},"li",{},[463],{"type":344,"value":464},"1 \u003C= nums.length \u003C= 105",{"type":339,"tag":460,"props":466,"children":467},{},[468],{"type":344,"value":469},"-104 \u003C= nums[i] \u003C= 104",{"type":339,"tag":340,"props":471,"children":472},{},[473],{"type":344,"value":474},"进阶：如果你已经实现复杂度为 O(n) 的解法，尝试使用更为精妙的 分治法 求解。",{"type":339,"tag":476,"props":477,"children":479},"h2",{"id":478},"解题思路",[480],{"type":344,"value":478},{"type":339,"tag":476,"props":482,"children":484},{"id":483},"实现",[485],{"type":344,"value":483},{"type":339,"tag":487,"props":488,"children":490},"h3",{"id":489},"动态规划",[491],{"type":344,"value":489},{"type":339,"tag":356,"props":493,"children":497},{"className":494,"code":495,"language":496,"meta":332,"style":332},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSubArray = function (nums) {\n  let dp = [];\n  dp[0] = nums[0];\n  let res = dp[0];\n  for (let i = 1; i \u003C nums.length; i++) {\n    dp[i] = Math.max(dp[i - 1] + nums[i], nums[i]);\n    res = Math.max(res, dp[i]);\n  }\n  return res;\n};\n","js",[498],{"type":339,"tag":362,"props":499,"children":500},{"__ignoreMap":332},[501,510,536,553,562,606,636,688,725,804,922,980,989,1006],{"type":339,"tag":366,"props":502,"children":503},{"class":368,"line":369},[504],{"type":339,"tag":366,"props":505,"children":507},{"style":506},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[508],{"type":344,"value":509},"/**\n",{"type":339,"tag":366,"props":511,"children":512},{"class":368,"line":378},[513,518,524,530],{"type":339,"tag":366,"props":514,"children":515},{"style":506},[516],{"type":344,"value":517}," * ",{"type":339,"tag":366,"props":519,"children":521},{"style":520},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[522],{"type":344,"value":523},"@param",{"type":339,"tag":366,"props":525,"children":527},{"style":526},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[528],{"type":344,"value":529}," {number[]}",{"type":339,"tag":366,"props":531,"children":533},{"style":532},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[534],{"type":344,"value":535}," nums\n",{"type":339,"tag":366,"props":537,"children":538},{"class":368,"line":387},[539,543,548],{"type":339,"tag":366,"props":540,"children":541},{"style":506},[542],{"type":344,"value":517},{"type":339,"tag":366,"props":544,"children":545},{"style":520},[546],{"type":344,"value":547},"@return",{"type":339,"tag":366,"props":549,"children":550},{"style":526},[551],{"type":344,"value":552}," {number}\n",{"type":339,"tag":366,"props":554,"children":556},{"class":368,"line":555},4,[557],{"type":339,"tag":366,"props":558,"children":559},{"style":506},[560],{"type":344,"value":561}," */\n",{"type":339,"tag":366,"props":563,"children":565},{"class":368,"line":564},5,[566,572,578,584,589,595,601],{"type":339,"tag":366,"props":567,"children":569},{"style":568},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[570],{"type":344,"value":571},"var",{"type":339,"tag":366,"props":573,"children":575},{"style":574},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[576],{"type":344,"value":577}," maxSubArray",{"type":339,"tag":366,"props":579,"children":581},{"style":580},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[582],{"type":344,"value":583}," =",{"type":339,"tag":366,"props":585,"children":586},{"style":568},[587],{"type":344,"value":588}," function",{"type":339,"tag":366,"props":590,"children":592},{"style":591},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[593],{"type":344,"value":594}," (",{"type":339,"tag":366,"props":596,"children":598},{"style":597},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[599],{"type":344,"value":600},"nums",{"type":339,"tag":366,"props":602,"children":603},{"style":591},[604],{"type":344,"value":605},") {\n",{"type":339,"tag":366,"props":607,"children":609},{"class":368,"line":608},6,[610,615,621,625,630],{"type":339,"tag":366,"props":611,"children":612},{"style":568},[613],{"type":344,"value":614},"  let",{"type":339,"tag":366,"props":616,"children":618},{"style":617},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[619],{"type":344,"value":620}," dp",{"type":339,"tag":366,"props":622,"children":623},{"style":580},[624],{"type":344,"value":583},{"type":339,"tag":366,"props":626,"children":627},{"style":591},[628],{"type":344,"value":629}," []",{"type":339,"tag":366,"props":631,"children":633},{"style":632},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[634],{"type":344,"value":635},";\n",{"type":339,"tag":366,"props":637,"children":639},{"class":368,"line":638},7,[640,645,650,656,661,666,671,675,679,684],{"type":339,"tag":366,"props":641,"children":642},{"style":617},[643],{"type":344,"value":644},"  dp",{"type":339,"tag":366,"props":646,"children":647},{"style":591},[648],{"type":344,"value":649},"[",{"type":339,"tag":366,"props":651,"children":653},{"style":652},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[654],{"type":344,"value":655},"0",{"type":339,"tag":366,"props":657,"children":658},{"style":591},[659],{"type":344,"value":660},"] ",{"type":339,"tag":366,"props":662,"children":663},{"style":580},[664],{"type":344,"value":665},"=",{"type":339,"tag":366,"props":667,"children":668},{"style":617},[669],{"type":344,"value":670}," nums",{"type":339,"tag":366,"props":672,"children":673},{"style":591},[674],{"type":344,"value":649},{"type":339,"tag":366,"props":676,"children":677},{"style":652},[678],{"type":344,"value":655},{"type":339,"tag":366,"props":680,"children":681},{"style":591},[682],{"type":344,"value":683},"]",{"type":339,"tag":366,"props":685,"children":686},{"style":632},[687],{"type":344,"value":635},{"type":339,"tag":366,"props":689,"children":691},{"class":368,"line":690},8,[692,696,701,705,709,713,717,721],{"type":339,"tag":366,"props":693,"children":694},{"style":568},[695],{"type":344,"value":614},{"type":339,"tag":366,"props":697,"children":698},{"style":617},[699],{"type":344,"value":700}," res",{"type":339,"tag":366,"props":702,"children":703},{"style":580},[704],{"type":344,"value":583},{"type":339,"tag":366,"props":706,"children":707},{"style":617},[708],{"type":344,"value":620},{"type":339,"tag":366,"props":710,"children":711},{"style":591},[712],{"type":344,"value":649},{"type":339,"tag":366,"props":714,"children":715},{"style":652},[716],{"type":344,"value":655},{"type":339,"tag":366,"props":718,"children":719},{"style":591},[720],{"type":344,"value":683},{"type":339,"tag":366,"props":722,"children":723},{"style":632},[724],{"type":344,"value":635},{"type":339,"tag":366,"props":726,"children":728},{"class":368,"line":727},9,[729,735,739,744,749,753,758,763,767,772,776,782,787,791,795,800],{"type":339,"tag":366,"props":730,"children":732},{"style":731},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[733],{"type":344,"value":734},"  for",{"type":339,"tag":366,"props":736,"children":737},{"style":591},[738],{"type":344,"value":594},{"type":339,"tag":366,"props":740,"children":741},{"style":568},[742],{"type":344,"value":743},"let",{"type":339,"tag":366,"props":745,"children":746},{"style":617},[747],{"type":344,"value":748}," i",{"type":339,"tag":366,"props":750,"children":751},{"style":580},[752],{"type":344,"value":583},{"type":339,"tag":366,"props":754,"children":755},{"style":652},[756],{"type":344,"value":757}," 1",{"type":339,"tag":366,"props":759,"children":760},{"style":632},[761],{"type":344,"value":762},";",{"type":339,"tag":366,"props":764,"children":765},{"style":617},[766],{"type":344,"value":748},{"type":339,"tag":366,"props":768,"children":769},{"style":580},[770],{"type":344,"value":771}," \u003C",{"type":339,"tag":366,"props":773,"children":774},{"style":617},[775],{"type":344,"value":670},{"type":339,"tag":366,"props":777,"children":779},{"style":778},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[780],{"type":344,"value":781},".",{"type":339,"tag":366,"props":783,"children":784},{"style":591},[785],{"type":344,"value":786},"length",{"type":339,"tag":366,"props":788,"children":789},{"style":632},[790],{"type":344,"value":762},{"type":339,"tag":366,"props":792,"children":793},{"style":617},[794],{"type":344,"value":748},{"type":339,"tag":366,"props":796,"children":797},{"style":580},[798],{"type":344,"value":799},"++",{"type":339,"tag":366,"props":801,"children":802},{"style":591},[803],{"type":344,"value":605},{"type":339,"tag":366,"props":805,"children":807},{"class":368,"line":806},10,[808,813,817,822,826,830,835,839,844,849,854,858,862,867,871,875,880,884,888,892,896,901,905,909,913,918],{"type":339,"tag":366,"props":809,"children":810},{"style":617},[811],{"type":344,"value":812},"    dp",{"type":339,"tag":366,"props":814,"children":815},{"style":591},[816],{"type":344,"value":649},{"type":339,"tag":366,"props":818,"children":819},{"style":617},[820],{"type":344,"value":821},"i",{"type":339,"tag":366,"props":823,"children":824},{"style":591},[825],{"type":344,"value":660},{"type":339,"tag":366,"props":827,"children":828},{"style":580},[829],{"type":344,"value":665},{"type":339,"tag":366,"props":831,"children":832},{"style":617},[833],{"type":344,"value":834}," Math",{"type":339,"tag":366,"props":836,"children":837},{"style":778},[838],{"type":344,"value":781},{"type":339,"tag":366,"props":840,"children":841},{"style":574},[842],{"type":344,"value":843},"max",{"type":339,"tag":366,"props":845,"children":846},{"style":591},[847],{"type":344,"value":848},"(",{"type":339,"tag":366,"props":850,"children":851},{"style":617},[852],{"type":344,"value":853},"dp",{"type":339,"tag":366,"props":855,"children":856},{"style":591},[857],{"type":344,"value":649},{"type":339,"tag":366,"props":859,"children":860},{"style":617},[861],{"type":344,"value":821},{"type":339,"tag":366,"props":863,"children":864},{"style":580},[865],{"type":344,"value":866}," -",{"type":339,"tag":366,"props":868,"children":869},{"style":652},[870],{"type":344,"value":757},{"type":339,"tag":366,"props":872,"children":873},{"style":591},[874],{"type":344,"value":660},{"type":339,"tag":366,"props":876,"children":877},{"style":580},[878],{"type":344,"value":879},"+",{"type":339,"tag":366,"props":881,"children":882},{"style":617},[883],{"type":344,"value":670},{"type":339,"tag":366,"props":885,"children":886},{"style":591},[887],{"type":344,"value":649},{"type":339,"tag":366,"props":889,"children":890},{"style":617},[891],{"type":344,"value":821},{"type":339,"tag":366,"props":893,"children":894},{"style":591},[895],{"type":344,"value":683},{"type":339,"tag":366,"props":897,"children":898},{"style":632},[899],{"type":344,"value":900},",",{"type":339,"tag":366,"props":902,"children":903},{"style":617},[904],{"type":344,"value":670},{"type":339,"tag":366,"props":906,"children":907},{"style":591},[908],{"type":344,"value":649},{"type":339,"tag":366,"props":910,"children":911},{"style":617},[912],{"type":344,"value":821},{"type":339,"tag":366,"props":914,"children":915},{"style":591},[916],{"type":344,"value":917},"])",{"type":339,"tag":366,"props":919,"children":920},{"style":632},[921],{"type":344,"value":635},{"type":339,"tag":366,"props":923,"children":925},{"class":368,"line":924},11,[926,931,935,939,943,947,951,956,960,964,968,972,976],{"type":339,"tag":366,"props":927,"children":928},{"style":617},[929],{"type":344,"value":930},"    res",{"type":339,"tag":366,"props":932,"children":933},{"style":580},[934],{"type":344,"value":583},{"type":339,"tag":366,"props":936,"children":937},{"style":617},[938],{"type":344,"value":834},{"type":339,"tag":366,"props":940,"children":941},{"style":778},[942],{"type":344,"value":781},{"type":339,"tag":366,"props":944,"children":945},{"style":574},[946],{"type":344,"value":843},{"type":339,"tag":366,"props":948,"children":949},{"style":591},[950],{"type":344,"value":848},{"type":339,"tag":366,"props":952,"children":953},{"style":617},[954],{"type":344,"value":955},"res",{"type":339,"tag":366,"props":957,"children":958},{"style":632},[959],{"type":344,"value":900},{"type":339,"tag":366,"props":961,"children":962},{"style":617},[963],{"type":344,"value":620},{"type":339,"tag":366,"props":965,"children":966},{"style":591},[967],{"type":344,"value":649},{"type":339,"tag":366,"props":969,"children":970},{"style":617},[971],{"type":344,"value":821},{"type":339,"tag":366,"props":973,"children":974},{"style":591},[975],{"type":344,"value":917},{"type":339,"tag":366,"props":977,"children":978},{"style":632},[979],{"type":344,"value":635},{"type":339,"tag":366,"props":981,"children":983},{"class":368,"line":982},12,[984],{"type":339,"tag":366,"props":985,"children":986},{"style":591},[987],{"type":344,"value":988},"  }\n",{"type":339,"tag":366,"props":990,"children":992},{"class":368,"line":991},13,[993,998,1002],{"type":339,"tag":366,"props":994,"children":995},{"style":731},[996],{"type":344,"value":997},"  return",{"type":339,"tag":366,"props":999,"children":1000},{"style":617},[1001],{"type":344,"value":700},{"type":339,"tag":366,"props":1003,"children":1004},{"style":632},[1005],{"type":344,"value":635},{"type":339,"tag":366,"props":1007,"children":1009},{"class":368,"line":1008},14,[1010,1015],{"type":339,"tag":366,"props":1011,"children":1012},{"style":591},[1013],{"type":344,"value":1014},"}",{"type":339,"tag":366,"props":1016,"children":1017},{"style":632},[1018],{"type":344,"value":635},{"type":339,"tag":1020,"props":1021,"children":1022},"style",{},[1023],{"type":344,"value":1024},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":332,"searchDepth":564,"depth":564,"links":1026},[1027,1028],{"id":478,"depth":378,"text":478},{"id":483,"depth":378,"text":483,"children":1029},[1030],{"id":489,"depth":387,"text":489},"markdown","content:2.code:1.algorithm:3.leetcode:53.maximum-subarray.md","content","2.code/1.algorithm/3.leetcode/53.maximum-subarray.md","md",[1037,1039],{"_path":124,"title":123,"description":1038},"给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。",{"_path":130,"title":129,"description":1040},"以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [start_i, end_i] 。请你合并所有重叠的区间，并返回 一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间 。",1712330887160]