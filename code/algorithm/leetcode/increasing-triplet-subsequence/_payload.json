[{"data":1,"prerenderedAt":1178},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/increasing-triplet-subsequence":353,"/code/algorithm/leetcode/increasing-triplet-subsequence-surround":1173},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319,341,344,347,350],{"title":320,"_path":321,"children":322},"Promise","/code/scene/promise",[323,326,329,332,335,338],{"title":324,"_path":325},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":327,"_path":328},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":330,"_path":331},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":333,"_path":334},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":336,"_path":337},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":339,"_path":340},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":342,"_path":343},"计算对象占用字节数","/code/scene/calcuate-object-bytes",{"title":345,"_path":346},"lodash.get","/code/scene/lodash-get",{"title":348,"_path":349},"sku 算法实现","/code/scene/sku",{"title":351,"_path":352},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":220,"_dir":354,"_draft":355,"_partial":355,"_locale":356,"title":219,"description":357,"url":358,"body":359,"_type":1168,"_id":1169,"_source":1170,"_file":1171,"_extension":1172},"leetcode",false,"","给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。","https://leetcode.cn/problems/increasing-triplet-subsequence",{"type":360,"children":361,"toc":1162},"root",[362,369,374,379,418,423,454,459,489,494,509,514,520,525,531,1156],{"type":363,"tag":364,"props":365,"children":366},"element","p",{},[367],{"type":368,"value":357},"text",{"type":363,"tag":364,"props":370,"children":371},{},[372],{"type":368,"value":373},"如果存在这样的三元组下标 (i, j, k) 且满足 i \u003C j \u003C k ，使得 nums[i] \u003C nums[j] \u003C nums[k] ，返回 true ；否则，返回 false 。",{"type":363,"tag":364,"props":375,"children":376},{},[377],{"type":368,"value":378},"示例 1：",{"type":363,"tag":380,"props":381,"children":384},"pre",{"className":382,"code":383,"language":368,"meta":356,"style":356},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3,4,5]\n输出：true\n解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",[385],{"type":363,"tag":386,"props":387,"children":388},"code",{"__ignoreMap":356},[389,400,409],{"type":363,"tag":390,"props":391,"children":394},"span",{"class":392,"line":393},"line",1,[395],{"type":363,"tag":390,"props":396,"children":397},{},[398],{"type":368,"value":399},"输入：nums = [1,2,3,4,5]\n",{"type":363,"tag":390,"props":401,"children":403},{"class":392,"line":402},2,[404],{"type":363,"tag":390,"props":405,"children":406},{},[407],{"type":368,"value":408},"输出：true\n",{"type":363,"tag":390,"props":410,"children":412},{"class":392,"line":411},3,[413],{"type":363,"tag":390,"props":414,"children":415},{},[416],{"type":368,"value":417},"解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",{"type":363,"tag":364,"props":419,"children":420},{},[421],{"type":368,"value":422},"示例 2：",{"type":363,"tag":380,"props":424,"children":426},{"className":382,"code":425,"language":368,"meta":356,"style":356},"输入：nums = [5,4,3,2,1]\n输出：false\n解释：不存在满足题意的三元组\n",[427],{"type":363,"tag":386,"props":428,"children":429},{"__ignoreMap":356},[430,438,446],{"type":363,"tag":390,"props":431,"children":432},{"class":392,"line":393},[433],{"type":363,"tag":390,"props":434,"children":435},{},[436],{"type":368,"value":437},"输入：nums = [5,4,3,2,1]\n",{"type":363,"tag":390,"props":439,"children":440},{"class":392,"line":402},[441],{"type":363,"tag":390,"props":442,"children":443},{},[444],{"type":368,"value":445},"输出：false\n",{"type":363,"tag":390,"props":447,"children":448},{"class":392,"line":411},[449],{"type":363,"tag":390,"props":450,"children":451},{},[452],{"type":368,"value":453},"解释：不存在满足题意的三元组\n",{"type":363,"tag":364,"props":455,"children":456},{},[457],{"type":368,"value":458},"示例 3：",{"type":363,"tag":380,"props":460,"children":462},{"className":382,"code":461,"language":368,"meta":356,"style":356},"输入：nums = [2,1,5,0,4,6]\n输出：true\n解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",[463],{"type":363,"tag":386,"props":464,"children":465},{"__ignoreMap":356},[466,474,481],{"type":363,"tag":390,"props":467,"children":468},{"class":392,"line":393},[469],{"type":363,"tag":390,"props":470,"children":471},{},[472],{"type":368,"value":473},"输入：nums = [2,1,5,0,4,6]\n",{"type":363,"tag":390,"props":475,"children":476},{"class":392,"line":402},[477],{"type":363,"tag":390,"props":478,"children":479},{},[480],{"type":368,"value":408},{"type":363,"tag":390,"props":482,"children":483},{"class":392,"line":411},[484],{"type":363,"tag":390,"props":485,"children":486},{},[487],{"type":368,"value":488},"解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",{"type":363,"tag":364,"props":490,"children":491},{},[492],{"type":368,"value":493},"提示：",{"type":363,"tag":495,"props":496,"children":497},"ul",{},[498,504],{"type":363,"tag":499,"props":500,"children":501},"li",{},[502],{"type":368,"value":503},"1 \u003C= nums.length \u003C= 5 * 10^5",{"type":363,"tag":499,"props":505,"children":506},{},[507],{"type":368,"value":508},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":363,"tag":364,"props":510,"children":511},{},[512],{"type":368,"value":513},"进阶：你能实现时间复杂度为 O(n) ，空间复杂度为 O(1) 的解决方案吗？",{"type":363,"tag":515,"props":516,"children":518},"h2",{"id":517},"解题思路",[519],{"type":368,"value":517},{"type":363,"tag":515,"props":521,"children":523},{"id":522},"实现",[524],{"type":368,"value":522},{"type":363,"tag":526,"props":527,"children":529},"h3",{"id":528},"贪心",[530],{"type":368,"value":528},{"type":363,"tag":380,"props":532,"children":536},{"className":533,"code":534,"language":535,"meta":356,"style":356},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar increasingTriplet = function (nums) {\n  // 维护两个变量，代表递增序列中的第一个数、第二个数\n  let len = nums.length;\n  if (len \u003C 3) return false;\n  let first = nums[0];\n  let second = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i \u003C len; i++) {\n    if (nums[i] > second) {\n      // 找到第三个数\n      return true;\n    } else if (nums[i] > first) {\n      // 更新第二个数\n      second = nums[i];\n    } else {\n      // 更新第一个数\n      first = nums[i];\n    }\n  }\n  return false;\n};\n","js",[537],{"type":363,"tag":386,"props":538,"children":539},{"__ignoreMap":356},[540,549,575,592,601,645,654,695,744,784,819,885,929,938,956,1007,1016,1049,1066,1075,1108,1117,1126,1143],{"type":363,"tag":390,"props":541,"children":542},{"class":392,"line":393},[543],{"type":363,"tag":390,"props":544,"children":546},{"style":545},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[547],{"type":368,"value":548},"/**\n",{"type":363,"tag":390,"props":550,"children":551},{"class":392,"line":402},[552,557,563,569],{"type":363,"tag":390,"props":553,"children":554},{"style":545},[555],{"type":368,"value":556}," * ",{"type":363,"tag":390,"props":558,"children":560},{"style":559},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[561],{"type":368,"value":562},"@param",{"type":363,"tag":390,"props":564,"children":566},{"style":565},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[567],{"type":368,"value":568}," {number[]}",{"type":363,"tag":390,"props":570,"children":572},{"style":571},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[573],{"type":368,"value":574}," nums\n",{"type":363,"tag":390,"props":576,"children":577},{"class":392,"line":411},[578,582,587],{"type":363,"tag":390,"props":579,"children":580},{"style":545},[581],{"type":368,"value":556},{"type":363,"tag":390,"props":583,"children":584},{"style":559},[585],{"type":368,"value":586},"@return",{"type":363,"tag":390,"props":588,"children":589},{"style":565},[590],{"type":368,"value":591}," {boolean}\n",{"type":363,"tag":390,"props":593,"children":595},{"class":392,"line":594},4,[596],{"type":363,"tag":390,"props":597,"children":598},{"style":545},[599],{"type":368,"value":600}," */\n",{"type":363,"tag":390,"props":602,"children":604},{"class":392,"line":603},5,[605,611,617,623,628,634,640],{"type":363,"tag":390,"props":606,"children":608},{"style":607},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[609],{"type":368,"value":610},"var",{"type":363,"tag":390,"props":612,"children":614},{"style":613},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[615],{"type":368,"value":616}," increasingTriplet",{"type":363,"tag":390,"props":618,"children":620},{"style":619},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[621],{"type":368,"value":622}," =",{"type":363,"tag":390,"props":624,"children":625},{"style":607},[626],{"type":368,"value":627}," function",{"type":363,"tag":390,"props":629,"children":631},{"style":630},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[632],{"type":368,"value":633}," (",{"type":363,"tag":390,"props":635,"children":637},{"style":636},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[638],{"type":368,"value":639},"nums",{"type":363,"tag":390,"props":641,"children":642},{"style":630},[643],{"type":368,"value":644},") {\n",{"type":363,"tag":390,"props":646,"children":648},{"class":392,"line":647},6,[649],{"type":363,"tag":390,"props":650,"children":651},{"style":545},[652],{"type":368,"value":653},"  // 维护两个变量，代表递增序列中的第一个数、第二个数\n",{"type":363,"tag":390,"props":655,"children":657},{"class":392,"line":656},7,[658,663,669,673,678,684,689],{"type":363,"tag":390,"props":659,"children":660},{"style":607},[661],{"type":368,"value":662},"  let",{"type":363,"tag":390,"props":664,"children":666},{"style":665},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[667],{"type":368,"value":668}," len",{"type":363,"tag":390,"props":670,"children":671},{"style":619},[672],{"type":368,"value":622},{"type":363,"tag":390,"props":674,"children":675},{"style":665},[676],{"type":368,"value":677}," nums",{"type":363,"tag":390,"props":679,"children":681},{"style":680},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[682],{"type":368,"value":683},".",{"type":363,"tag":390,"props":685,"children":686},{"style":630},[687],{"type":368,"value":688},"length",{"type":363,"tag":390,"props":690,"children":692},{"style":691},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[693],{"type":368,"value":694},";\n",{"type":363,"tag":390,"props":696,"children":698},{"class":392,"line":697},8,[699,705,709,714,719,725,730,735,740],{"type":363,"tag":390,"props":700,"children":702},{"style":701},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[703],{"type":368,"value":704},"  if",{"type":363,"tag":390,"props":706,"children":707},{"style":630},[708],{"type":368,"value":633},{"type":363,"tag":390,"props":710,"children":711},{"style":665},[712],{"type":368,"value":713},"len",{"type":363,"tag":390,"props":715,"children":716},{"style":619},[717],{"type":368,"value":718}," \u003C",{"type":363,"tag":390,"props":720,"children":722},{"style":721},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[723],{"type":368,"value":724}," 3",{"type":363,"tag":390,"props":726,"children":727},{"style":630},[728],{"type":368,"value":729},") ",{"type":363,"tag":390,"props":731,"children":732},{"style":701},[733],{"type":368,"value":734},"return",{"type":363,"tag":390,"props":736,"children":737},{"style":721},[738],{"type":368,"value":739}," false",{"type":363,"tag":390,"props":741,"children":742},{"style":691},[743],{"type":368,"value":694},{"type":363,"tag":390,"props":745,"children":747},{"class":392,"line":746},9,[748,752,757,761,765,770,775,780],{"type":363,"tag":390,"props":749,"children":750},{"style":607},[751],{"type":368,"value":662},{"type":363,"tag":390,"props":753,"children":754},{"style":665},[755],{"type":368,"value":756}," first",{"type":363,"tag":390,"props":758,"children":759},{"style":619},[760],{"type":368,"value":622},{"type":363,"tag":390,"props":762,"children":763},{"style":665},[764],{"type":368,"value":677},{"type":363,"tag":390,"props":766,"children":767},{"style":630},[768],{"type":368,"value":769},"[",{"type":363,"tag":390,"props":771,"children":772},{"style":721},[773],{"type":368,"value":774},"0",{"type":363,"tag":390,"props":776,"children":777},{"style":630},[778],{"type":368,"value":779},"]",{"type":363,"tag":390,"props":781,"children":782},{"style":691},[783],{"type":368,"value":694},{"type":363,"tag":390,"props":785,"children":787},{"class":392,"line":786},10,[788,792,797,801,806,810,815],{"type":363,"tag":390,"props":789,"children":790},{"style":607},[791],{"type":368,"value":662},{"type":363,"tag":390,"props":793,"children":794},{"style":665},[795],{"type":368,"value":796}," second",{"type":363,"tag":390,"props":798,"children":799},{"style":619},[800],{"type":368,"value":622},{"type":363,"tag":390,"props":802,"children":803},{"style":665},[804],{"type":368,"value":805}," Number",{"type":363,"tag":390,"props":807,"children":808},{"style":680},[809],{"type":368,"value":683},{"type":363,"tag":390,"props":811,"children":812},{"style":630},[813],{"type":368,"value":814},"MAX_SAFE_INTEGER",{"type":363,"tag":390,"props":816,"children":817},{"style":691},[818],{"type":368,"value":694},{"type":363,"tag":390,"props":820,"children":822},{"class":392,"line":821},11,[823,828,832,837,842,846,851,856,860,864,868,872,876,881],{"type":363,"tag":390,"props":824,"children":825},{"style":701},[826],{"type":368,"value":827},"  for",{"type":363,"tag":390,"props":829,"children":830},{"style":630},[831],{"type":368,"value":633},{"type":363,"tag":390,"props":833,"children":834},{"style":607},[835],{"type":368,"value":836},"let",{"type":363,"tag":390,"props":838,"children":839},{"style":665},[840],{"type":368,"value":841}," i",{"type":363,"tag":390,"props":843,"children":844},{"style":619},[845],{"type":368,"value":622},{"type":363,"tag":390,"props":847,"children":848},{"style":721},[849],{"type":368,"value":850}," 0",{"type":363,"tag":390,"props":852,"children":853},{"style":691},[854],{"type":368,"value":855},";",{"type":363,"tag":390,"props":857,"children":858},{"style":665},[859],{"type":368,"value":841},{"type":363,"tag":390,"props":861,"children":862},{"style":619},[863],{"type":368,"value":718},{"type":363,"tag":390,"props":865,"children":866},{"style":665},[867],{"type":368,"value":668},{"type":363,"tag":390,"props":869,"children":870},{"style":691},[871],{"type":368,"value":855},{"type":363,"tag":390,"props":873,"children":874},{"style":665},[875],{"type":368,"value":841},{"type":363,"tag":390,"props":877,"children":878},{"style":619},[879],{"type":368,"value":880},"++",{"type":363,"tag":390,"props":882,"children":883},{"style":630},[884],{"type":368,"value":644},{"type":363,"tag":390,"props":886,"children":888},{"class":392,"line":887},12,[889,894,898,902,906,911,916,921,925],{"type":363,"tag":390,"props":890,"children":891},{"style":701},[892],{"type":368,"value":893},"    if",{"type":363,"tag":390,"props":895,"children":896},{"style":630},[897],{"type":368,"value":633},{"type":363,"tag":390,"props":899,"children":900},{"style":665},[901],{"type":368,"value":639},{"type":363,"tag":390,"props":903,"children":904},{"style":630},[905],{"type":368,"value":769},{"type":363,"tag":390,"props":907,"children":908},{"style":665},[909],{"type":368,"value":910},"i",{"type":363,"tag":390,"props":912,"children":913},{"style":630},[914],{"type":368,"value":915},"] ",{"type":363,"tag":390,"props":917,"children":918},{"style":619},[919],{"type":368,"value":920},">",{"type":363,"tag":390,"props":922,"children":923},{"style":665},[924],{"type":368,"value":796},{"type":363,"tag":390,"props":926,"children":927},{"style":630},[928],{"type":368,"value":644},{"type":363,"tag":390,"props":930,"children":932},{"class":392,"line":931},13,[933],{"type":363,"tag":390,"props":934,"children":935},{"style":545},[936],{"type":368,"value":937},"      // 找到第三个数\n",{"type":363,"tag":390,"props":939,"children":941},{"class":392,"line":940},14,[942,947,952],{"type":363,"tag":390,"props":943,"children":944},{"style":701},[945],{"type":368,"value":946},"      return",{"type":363,"tag":390,"props":948,"children":949},{"style":721},[950],{"type":368,"value":951}," true",{"type":363,"tag":390,"props":953,"children":954},{"style":691},[955],{"type":368,"value":694},{"type":363,"tag":390,"props":957,"children":959},{"class":392,"line":958},15,[960,965,970,975,979,983,987,991,995,999,1003],{"type":363,"tag":390,"props":961,"children":962},{"style":630},[963],{"type":368,"value":964},"    } ",{"type":363,"tag":390,"props":966,"children":967},{"style":701},[968],{"type":368,"value":969},"else",{"type":363,"tag":390,"props":971,"children":972},{"style":701},[973],{"type":368,"value":974}," if",{"type":363,"tag":390,"props":976,"children":977},{"style":630},[978],{"type":368,"value":633},{"type":363,"tag":390,"props":980,"children":981},{"style":665},[982],{"type":368,"value":639},{"type":363,"tag":390,"props":984,"children":985},{"style":630},[986],{"type":368,"value":769},{"type":363,"tag":390,"props":988,"children":989},{"style":665},[990],{"type":368,"value":910},{"type":363,"tag":390,"props":992,"children":993},{"style":630},[994],{"type":368,"value":915},{"type":363,"tag":390,"props":996,"children":997},{"style":619},[998],{"type":368,"value":920},{"type":363,"tag":390,"props":1000,"children":1001},{"style":665},[1002],{"type":368,"value":756},{"type":363,"tag":390,"props":1004,"children":1005},{"style":630},[1006],{"type":368,"value":644},{"type":363,"tag":390,"props":1008,"children":1010},{"class":392,"line":1009},16,[1011],{"type":363,"tag":390,"props":1012,"children":1013},{"style":545},[1014],{"type":368,"value":1015},"      // 更新第二个数\n",{"type":363,"tag":390,"props":1017,"children":1019},{"class":392,"line":1018},17,[1020,1025,1029,1033,1037,1041,1045],{"type":363,"tag":390,"props":1021,"children":1022},{"style":665},[1023],{"type":368,"value":1024},"      second",{"type":363,"tag":390,"props":1026,"children":1027},{"style":619},[1028],{"type":368,"value":622},{"type":363,"tag":390,"props":1030,"children":1031},{"style":665},[1032],{"type":368,"value":677},{"type":363,"tag":390,"props":1034,"children":1035},{"style":630},[1036],{"type":368,"value":769},{"type":363,"tag":390,"props":1038,"children":1039},{"style":665},[1040],{"type":368,"value":910},{"type":363,"tag":390,"props":1042,"children":1043},{"style":630},[1044],{"type":368,"value":779},{"type":363,"tag":390,"props":1046,"children":1047},{"style":691},[1048],{"type":368,"value":694},{"type":363,"tag":390,"props":1050,"children":1052},{"class":392,"line":1051},18,[1053,1057,1061],{"type":363,"tag":390,"props":1054,"children":1055},{"style":630},[1056],{"type":368,"value":964},{"type":363,"tag":390,"props":1058,"children":1059},{"style":701},[1060],{"type":368,"value":969},{"type":363,"tag":390,"props":1062,"children":1063},{"style":630},[1064],{"type":368,"value":1065}," {\n",{"type":363,"tag":390,"props":1067,"children":1069},{"class":392,"line":1068},19,[1070],{"type":363,"tag":390,"props":1071,"children":1072},{"style":545},[1073],{"type":368,"value":1074},"      // 更新第一个数\n",{"type":363,"tag":390,"props":1076,"children":1078},{"class":392,"line":1077},20,[1079,1084,1088,1092,1096,1100,1104],{"type":363,"tag":390,"props":1080,"children":1081},{"style":665},[1082],{"type":368,"value":1083},"      first",{"type":363,"tag":390,"props":1085,"children":1086},{"style":619},[1087],{"type":368,"value":622},{"type":363,"tag":390,"props":1089,"children":1090},{"style":665},[1091],{"type":368,"value":677},{"type":363,"tag":390,"props":1093,"children":1094},{"style":630},[1095],{"type":368,"value":769},{"type":363,"tag":390,"props":1097,"children":1098},{"style":665},[1099],{"type":368,"value":910},{"type":363,"tag":390,"props":1101,"children":1102},{"style":630},[1103],{"type":368,"value":779},{"type":363,"tag":390,"props":1105,"children":1106},{"style":691},[1107],{"type":368,"value":694},{"type":363,"tag":390,"props":1109,"children":1111},{"class":392,"line":1110},21,[1112],{"type":363,"tag":390,"props":1113,"children":1114},{"style":630},[1115],{"type":368,"value":1116},"    }\n",{"type":363,"tag":390,"props":1118,"children":1120},{"class":392,"line":1119},22,[1121],{"type":363,"tag":390,"props":1122,"children":1123},{"style":630},[1124],{"type":368,"value":1125},"  }\n",{"type":363,"tag":390,"props":1127,"children":1129},{"class":392,"line":1128},23,[1130,1135,1139],{"type":363,"tag":390,"props":1131,"children":1132},{"style":701},[1133],{"type":368,"value":1134},"  return",{"type":363,"tag":390,"props":1136,"children":1137},{"style":721},[1138],{"type":368,"value":739},{"type":363,"tag":390,"props":1140,"children":1141},{"style":691},[1142],{"type":368,"value":694},{"type":363,"tag":390,"props":1144,"children":1146},{"class":392,"line":1145},24,[1147,1152],{"type":363,"tag":390,"props":1148,"children":1149},{"style":630},[1150],{"type":368,"value":1151},"}",{"type":363,"tag":390,"props":1153,"children":1154},{"style":691},[1155],{"type":368,"value":694},{"type":363,"tag":1157,"props":1158,"children":1159},"style",{},[1160],{"type":368,"value":1161},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":356,"searchDepth":603,"depth":603,"links":1163},[1164,1165],{"id":517,"depth":402,"text":517},{"id":522,"depth":402,"text":522,"children":1166},[1167],{"id":528,"depth":411,"text":528},"markdown","content:2.code:1.algorithm:3.leetcode:334.increasing-triplet-subsequence.md","content","2.code/1.algorithm/3.leetcode/334.increasing-triplet-subsequence.md","md",[1174,1176],{"_path":217,"title":216,"description":1175},"给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。",{"_path":223,"title":222,"description":1177},"编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。",1712589912981]