[{"data":1,"prerenderedAt":1184},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/increasing-triplet-subsequence":359,"/code/algorithm/leetcode/increasing-triplet-subsequence-surround":1179},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,269,318],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263,266],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.165 比较版本号","/code/algorithm/leetcode/compare-version-numbers",{"title":198,"_path":199},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":201,"_path":202},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":204,"_path":205},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":207,"_path":208},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":210,"_path":211},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":213,"_path":214},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":216,"_path":217},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":219,"_path":220},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":222,"_path":223},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":225,"_path":226},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":228,"_path":229},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":231,"_path":232},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":234,"_path":235},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":237,"_path":238},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":240,"_path":241},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":243,"_path":244},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":246,"_path":247},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":249,"_path":250},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":252,"_path":253},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":255,"_path":256},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":258,"_path":259},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":261,"_path":262},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":264,"_path":265},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":267,"_path":268},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":270,"_path":271,"children":272},"源码实现","/code/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/code/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/code/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/code/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/code/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/code/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/code/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/code/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/code/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/code/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/code/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/code/source/string",[315],{"title":316,"_path":317},"repeat()","/code/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/code/scene",[322,344,347,350,353,356],{"title":323,"_path":324,"children":325},"Promise","/code/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/code/scene/calcuate-object-bytes",{"title":348,"_path":349},"lodash.get","/code/scene/lodash-get",{"title":351,"_path":352},"记忆化请求函数 - 可缓存请求函数","/code/scene/memorize-request",{"title":354,"_path":355},"sku 算法实现","/code/scene/sku",{"title":357,"_path":358},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":223,"_dir":360,"_draft":361,"_partial":361,"_locale":362,"title":222,"description":363,"url":364,"body":365,"_type":1174,"_id":1175,"_source":1176,"_file":1177,"_extension":1178},"leetcode",false,"","给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。","https://leetcode.cn/problems/increasing-triplet-subsequence",{"type":366,"children":367,"toc":1168},"root",[368,375,380,385,424,429,460,465,495,500,515,520,526,531,537,1162],{"type":369,"tag":370,"props":371,"children":372},"element","p",{},[373],{"type":374,"value":363},"text",{"type":369,"tag":370,"props":376,"children":377},{},[378],{"type":374,"value":379},"如果存在这样的三元组下标 (i, j, k) 且满足 i \u003C j \u003C k ，使得 nums[i] \u003C nums[j] \u003C nums[k] ，返回 true ；否则，返回 false 。",{"type":369,"tag":370,"props":381,"children":382},{},[383],{"type":374,"value":384},"示例 1：",{"type":369,"tag":386,"props":387,"children":390},"pre",{"className":388,"code":389,"language":374,"meta":362,"style":362},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3,4,5]\n输出：true\n解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",[391],{"type":369,"tag":392,"props":393,"children":394},"code",{"__ignoreMap":362},[395,406,415],{"type":369,"tag":396,"props":397,"children":400},"span",{"class":398,"line":399},"line",1,[401],{"type":369,"tag":396,"props":402,"children":403},{},[404],{"type":374,"value":405},"输入：nums = [1,2,3,4,5]\n",{"type":369,"tag":396,"props":407,"children":409},{"class":398,"line":408},2,[410],{"type":369,"tag":396,"props":411,"children":412},{},[413],{"type":374,"value":414},"输出：true\n",{"type":369,"tag":396,"props":416,"children":418},{"class":398,"line":417},3,[419],{"type":369,"tag":396,"props":420,"children":421},{},[422],{"type":374,"value":423},"解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",{"type":369,"tag":370,"props":425,"children":426},{},[427],{"type":374,"value":428},"示例 2：",{"type":369,"tag":386,"props":430,"children":432},{"className":388,"code":431,"language":374,"meta":362,"style":362},"输入：nums = [5,4,3,2,1]\n输出：false\n解释：不存在满足题意的三元组\n",[433],{"type":369,"tag":392,"props":434,"children":435},{"__ignoreMap":362},[436,444,452],{"type":369,"tag":396,"props":437,"children":438},{"class":398,"line":399},[439],{"type":369,"tag":396,"props":440,"children":441},{},[442],{"type":374,"value":443},"输入：nums = [5,4,3,2,1]\n",{"type":369,"tag":396,"props":445,"children":446},{"class":398,"line":408},[447],{"type":369,"tag":396,"props":448,"children":449},{},[450],{"type":374,"value":451},"输出：false\n",{"type":369,"tag":396,"props":453,"children":454},{"class":398,"line":417},[455],{"type":369,"tag":396,"props":456,"children":457},{},[458],{"type":374,"value":459},"解释：不存在满足题意的三元组\n",{"type":369,"tag":370,"props":461,"children":462},{},[463],{"type":374,"value":464},"示例 3：",{"type":369,"tag":386,"props":466,"children":468},{"className":388,"code":467,"language":374,"meta":362,"style":362},"输入：nums = [2,1,5,0,4,6]\n输出：true\n解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",[469],{"type":369,"tag":392,"props":470,"children":471},{"__ignoreMap":362},[472,480,487],{"type":369,"tag":396,"props":473,"children":474},{"class":398,"line":399},[475],{"type":369,"tag":396,"props":476,"children":477},{},[478],{"type":374,"value":479},"输入：nums = [2,1,5,0,4,6]\n",{"type":369,"tag":396,"props":481,"children":482},{"class":398,"line":408},[483],{"type":369,"tag":396,"props":484,"children":485},{},[486],{"type":374,"value":414},{"type":369,"tag":396,"props":488,"children":489},{"class":398,"line":417},[490],{"type":369,"tag":396,"props":491,"children":492},{},[493],{"type":374,"value":494},"解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",{"type":369,"tag":370,"props":496,"children":497},{},[498],{"type":374,"value":499},"提示：",{"type":369,"tag":501,"props":502,"children":503},"ul",{},[504,510],{"type":369,"tag":505,"props":506,"children":507},"li",{},[508],{"type":374,"value":509},"1 \u003C= nums.length \u003C= 5 * 10^5",{"type":369,"tag":505,"props":511,"children":512},{},[513],{"type":374,"value":514},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":369,"tag":370,"props":516,"children":517},{},[518],{"type":374,"value":519},"进阶：你能实现时间复杂度为 O(n) ，空间复杂度为 O(1) 的解决方案吗？",{"type":369,"tag":521,"props":522,"children":524},"h2",{"id":523},"解题思路",[525],{"type":374,"value":523},{"type":369,"tag":521,"props":527,"children":529},{"id":528},"实现",[530],{"type":374,"value":528},{"type":369,"tag":532,"props":533,"children":535},"h3",{"id":534},"贪心",[536],{"type":374,"value":534},{"type":369,"tag":386,"props":538,"children":542},{"className":539,"code":540,"language":541,"meta":362,"style":362},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar increasingTriplet = function (nums) {\n  // 维护两个变量，代表递增序列中的第一个数、第二个数\n  let len = nums.length;\n  if (len \u003C 3) return false;\n  let first = nums[0];\n  let second = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i \u003C len; i++) {\n    if (nums[i] > second) {\n      // 找到第三个数\n      return true;\n    } else if (nums[i] > first) {\n      // 更新第二个数\n      second = nums[i];\n    } else {\n      // 更新第一个数\n      first = nums[i];\n    }\n  }\n  return false;\n};\n","js",[543],{"type":369,"tag":392,"props":544,"children":545},{"__ignoreMap":362},[546,555,581,598,607,651,660,701,750,790,825,891,935,944,962,1013,1022,1055,1072,1081,1114,1123,1132,1149],{"type":369,"tag":396,"props":547,"children":548},{"class":398,"line":399},[549],{"type":369,"tag":396,"props":550,"children":552},{"style":551},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[553],{"type":374,"value":554},"/**\n",{"type":369,"tag":396,"props":556,"children":557},{"class":398,"line":408},[558,563,569,575],{"type":369,"tag":396,"props":559,"children":560},{"style":551},[561],{"type":374,"value":562}," * ",{"type":369,"tag":396,"props":564,"children":566},{"style":565},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[567],{"type":374,"value":568},"@param",{"type":369,"tag":396,"props":570,"children":572},{"style":571},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[573],{"type":374,"value":574}," {number[]}",{"type":369,"tag":396,"props":576,"children":578},{"style":577},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[579],{"type":374,"value":580}," nums\n",{"type":369,"tag":396,"props":582,"children":583},{"class":398,"line":417},[584,588,593],{"type":369,"tag":396,"props":585,"children":586},{"style":551},[587],{"type":374,"value":562},{"type":369,"tag":396,"props":589,"children":590},{"style":565},[591],{"type":374,"value":592},"@return",{"type":369,"tag":396,"props":594,"children":595},{"style":571},[596],{"type":374,"value":597}," {boolean}\n",{"type":369,"tag":396,"props":599,"children":601},{"class":398,"line":600},4,[602],{"type":369,"tag":396,"props":603,"children":604},{"style":551},[605],{"type":374,"value":606}," */\n",{"type":369,"tag":396,"props":608,"children":610},{"class":398,"line":609},5,[611,617,623,629,634,640,646],{"type":369,"tag":396,"props":612,"children":614},{"style":613},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[615],{"type":374,"value":616},"var",{"type":369,"tag":396,"props":618,"children":620},{"style":619},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[621],{"type":374,"value":622}," increasingTriplet",{"type":369,"tag":396,"props":624,"children":626},{"style":625},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[627],{"type":374,"value":628}," =",{"type":369,"tag":396,"props":630,"children":631},{"style":613},[632],{"type":374,"value":633}," function",{"type":369,"tag":396,"props":635,"children":637},{"style":636},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[638],{"type":374,"value":639}," (",{"type":369,"tag":396,"props":641,"children":643},{"style":642},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[644],{"type":374,"value":645},"nums",{"type":369,"tag":396,"props":647,"children":648},{"style":636},[649],{"type":374,"value":650},") {\n",{"type":369,"tag":396,"props":652,"children":654},{"class":398,"line":653},6,[655],{"type":369,"tag":396,"props":656,"children":657},{"style":551},[658],{"type":374,"value":659},"  // 维护两个变量，代表递增序列中的第一个数、第二个数\n",{"type":369,"tag":396,"props":661,"children":663},{"class":398,"line":662},7,[664,669,675,679,684,690,695],{"type":369,"tag":396,"props":665,"children":666},{"style":613},[667],{"type":374,"value":668},"  let",{"type":369,"tag":396,"props":670,"children":672},{"style":671},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[673],{"type":374,"value":674}," len",{"type":369,"tag":396,"props":676,"children":677},{"style":625},[678],{"type":374,"value":628},{"type":369,"tag":396,"props":680,"children":681},{"style":671},[682],{"type":374,"value":683}," nums",{"type":369,"tag":396,"props":685,"children":687},{"style":686},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[688],{"type":374,"value":689},".",{"type":369,"tag":396,"props":691,"children":692},{"style":636},[693],{"type":374,"value":694},"length",{"type":369,"tag":396,"props":696,"children":698},{"style":697},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[699],{"type":374,"value":700},";\n",{"type":369,"tag":396,"props":702,"children":704},{"class":398,"line":703},8,[705,711,715,720,725,731,736,741,746],{"type":369,"tag":396,"props":706,"children":708},{"style":707},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[709],{"type":374,"value":710},"  if",{"type":369,"tag":396,"props":712,"children":713},{"style":636},[714],{"type":374,"value":639},{"type":369,"tag":396,"props":716,"children":717},{"style":671},[718],{"type":374,"value":719},"len",{"type":369,"tag":396,"props":721,"children":722},{"style":625},[723],{"type":374,"value":724}," \u003C",{"type":369,"tag":396,"props":726,"children":728},{"style":727},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[729],{"type":374,"value":730}," 3",{"type":369,"tag":396,"props":732,"children":733},{"style":636},[734],{"type":374,"value":735},") ",{"type":369,"tag":396,"props":737,"children":738},{"style":707},[739],{"type":374,"value":740},"return",{"type":369,"tag":396,"props":742,"children":743},{"style":727},[744],{"type":374,"value":745}," false",{"type":369,"tag":396,"props":747,"children":748},{"style":697},[749],{"type":374,"value":700},{"type":369,"tag":396,"props":751,"children":753},{"class":398,"line":752},9,[754,758,763,767,771,776,781,786],{"type":369,"tag":396,"props":755,"children":756},{"style":613},[757],{"type":374,"value":668},{"type":369,"tag":396,"props":759,"children":760},{"style":671},[761],{"type":374,"value":762}," first",{"type":369,"tag":396,"props":764,"children":765},{"style":625},[766],{"type":374,"value":628},{"type":369,"tag":396,"props":768,"children":769},{"style":671},[770],{"type":374,"value":683},{"type":369,"tag":396,"props":772,"children":773},{"style":636},[774],{"type":374,"value":775},"[",{"type":369,"tag":396,"props":777,"children":778},{"style":727},[779],{"type":374,"value":780},"0",{"type":369,"tag":396,"props":782,"children":783},{"style":636},[784],{"type":374,"value":785},"]",{"type":369,"tag":396,"props":787,"children":788},{"style":697},[789],{"type":374,"value":700},{"type":369,"tag":396,"props":791,"children":793},{"class":398,"line":792},10,[794,798,803,807,812,816,821],{"type":369,"tag":396,"props":795,"children":796},{"style":613},[797],{"type":374,"value":668},{"type":369,"tag":396,"props":799,"children":800},{"style":671},[801],{"type":374,"value":802}," second",{"type":369,"tag":396,"props":804,"children":805},{"style":625},[806],{"type":374,"value":628},{"type":369,"tag":396,"props":808,"children":809},{"style":671},[810],{"type":374,"value":811}," Number",{"type":369,"tag":396,"props":813,"children":814},{"style":686},[815],{"type":374,"value":689},{"type":369,"tag":396,"props":817,"children":818},{"style":636},[819],{"type":374,"value":820},"MAX_SAFE_INTEGER",{"type":369,"tag":396,"props":822,"children":823},{"style":697},[824],{"type":374,"value":700},{"type":369,"tag":396,"props":826,"children":828},{"class":398,"line":827},11,[829,834,838,843,848,852,857,862,866,870,874,878,882,887],{"type":369,"tag":396,"props":830,"children":831},{"style":707},[832],{"type":374,"value":833},"  for",{"type":369,"tag":396,"props":835,"children":836},{"style":636},[837],{"type":374,"value":639},{"type":369,"tag":396,"props":839,"children":840},{"style":613},[841],{"type":374,"value":842},"let",{"type":369,"tag":396,"props":844,"children":845},{"style":671},[846],{"type":374,"value":847}," i",{"type":369,"tag":396,"props":849,"children":850},{"style":625},[851],{"type":374,"value":628},{"type":369,"tag":396,"props":853,"children":854},{"style":727},[855],{"type":374,"value":856}," 0",{"type":369,"tag":396,"props":858,"children":859},{"style":697},[860],{"type":374,"value":861},";",{"type":369,"tag":396,"props":863,"children":864},{"style":671},[865],{"type":374,"value":847},{"type":369,"tag":396,"props":867,"children":868},{"style":625},[869],{"type":374,"value":724},{"type":369,"tag":396,"props":871,"children":872},{"style":671},[873],{"type":374,"value":674},{"type":369,"tag":396,"props":875,"children":876},{"style":697},[877],{"type":374,"value":861},{"type":369,"tag":396,"props":879,"children":880},{"style":671},[881],{"type":374,"value":847},{"type":369,"tag":396,"props":883,"children":884},{"style":625},[885],{"type":374,"value":886},"++",{"type":369,"tag":396,"props":888,"children":889},{"style":636},[890],{"type":374,"value":650},{"type":369,"tag":396,"props":892,"children":894},{"class":398,"line":893},12,[895,900,904,908,912,917,922,927,931],{"type":369,"tag":396,"props":896,"children":897},{"style":707},[898],{"type":374,"value":899},"    if",{"type":369,"tag":396,"props":901,"children":902},{"style":636},[903],{"type":374,"value":639},{"type":369,"tag":396,"props":905,"children":906},{"style":671},[907],{"type":374,"value":645},{"type":369,"tag":396,"props":909,"children":910},{"style":636},[911],{"type":374,"value":775},{"type":369,"tag":396,"props":913,"children":914},{"style":671},[915],{"type":374,"value":916},"i",{"type":369,"tag":396,"props":918,"children":919},{"style":636},[920],{"type":374,"value":921},"] ",{"type":369,"tag":396,"props":923,"children":924},{"style":625},[925],{"type":374,"value":926},">",{"type":369,"tag":396,"props":928,"children":929},{"style":671},[930],{"type":374,"value":802},{"type":369,"tag":396,"props":932,"children":933},{"style":636},[934],{"type":374,"value":650},{"type":369,"tag":396,"props":936,"children":938},{"class":398,"line":937},13,[939],{"type":369,"tag":396,"props":940,"children":941},{"style":551},[942],{"type":374,"value":943},"      // 找到第三个数\n",{"type":369,"tag":396,"props":945,"children":947},{"class":398,"line":946},14,[948,953,958],{"type":369,"tag":396,"props":949,"children":950},{"style":707},[951],{"type":374,"value":952},"      return",{"type":369,"tag":396,"props":954,"children":955},{"style":727},[956],{"type":374,"value":957}," true",{"type":369,"tag":396,"props":959,"children":960},{"style":697},[961],{"type":374,"value":700},{"type":369,"tag":396,"props":963,"children":965},{"class":398,"line":964},15,[966,971,976,981,985,989,993,997,1001,1005,1009],{"type":369,"tag":396,"props":967,"children":968},{"style":636},[969],{"type":374,"value":970},"    } ",{"type":369,"tag":396,"props":972,"children":973},{"style":707},[974],{"type":374,"value":975},"else",{"type":369,"tag":396,"props":977,"children":978},{"style":707},[979],{"type":374,"value":980}," if",{"type":369,"tag":396,"props":982,"children":983},{"style":636},[984],{"type":374,"value":639},{"type":369,"tag":396,"props":986,"children":987},{"style":671},[988],{"type":374,"value":645},{"type":369,"tag":396,"props":990,"children":991},{"style":636},[992],{"type":374,"value":775},{"type":369,"tag":396,"props":994,"children":995},{"style":671},[996],{"type":374,"value":916},{"type":369,"tag":396,"props":998,"children":999},{"style":636},[1000],{"type":374,"value":921},{"type":369,"tag":396,"props":1002,"children":1003},{"style":625},[1004],{"type":374,"value":926},{"type":369,"tag":396,"props":1006,"children":1007},{"style":671},[1008],{"type":374,"value":762},{"type":369,"tag":396,"props":1010,"children":1011},{"style":636},[1012],{"type":374,"value":650},{"type":369,"tag":396,"props":1014,"children":1016},{"class":398,"line":1015},16,[1017],{"type":369,"tag":396,"props":1018,"children":1019},{"style":551},[1020],{"type":374,"value":1021},"      // 更新第二个数\n",{"type":369,"tag":396,"props":1023,"children":1025},{"class":398,"line":1024},17,[1026,1031,1035,1039,1043,1047,1051],{"type":369,"tag":396,"props":1027,"children":1028},{"style":671},[1029],{"type":374,"value":1030},"      second",{"type":369,"tag":396,"props":1032,"children":1033},{"style":625},[1034],{"type":374,"value":628},{"type":369,"tag":396,"props":1036,"children":1037},{"style":671},[1038],{"type":374,"value":683},{"type":369,"tag":396,"props":1040,"children":1041},{"style":636},[1042],{"type":374,"value":775},{"type":369,"tag":396,"props":1044,"children":1045},{"style":671},[1046],{"type":374,"value":916},{"type":369,"tag":396,"props":1048,"children":1049},{"style":636},[1050],{"type":374,"value":785},{"type":369,"tag":396,"props":1052,"children":1053},{"style":697},[1054],{"type":374,"value":700},{"type":369,"tag":396,"props":1056,"children":1058},{"class":398,"line":1057},18,[1059,1063,1067],{"type":369,"tag":396,"props":1060,"children":1061},{"style":636},[1062],{"type":374,"value":970},{"type":369,"tag":396,"props":1064,"children":1065},{"style":707},[1066],{"type":374,"value":975},{"type":369,"tag":396,"props":1068,"children":1069},{"style":636},[1070],{"type":374,"value":1071}," {\n",{"type":369,"tag":396,"props":1073,"children":1075},{"class":398,"line":1074},19,[1076],{"type":369,"tag":396,"props":1077,"children":1078},{"style":551},[1079],{"type":374,"value":1080},"      // 更新第一个数\n",{"type":369,"tag":396,"props":1082,"children":1084},{"class":398,"line":1083},20,[1085,1090,1094,1098,1102,1106,1110],{"type":369,"tag":396,"props":1086,"children":1087},{"style":671},[1088],{"type":374,"value":1089},"      first",{"type":369,"tag":396,"props":1091,"children":1092},{"style":625},[1093],{"type":374,"value":628},{"type":369,"tag":396,"props":1095,"children":1096},{"style":671},[1097],{"type":374,"value":683},{"type":369,"tag":396,"props":1099,"children":1100},{"style":636},[1101],{"type":374,"value":775},{"type":369,"tag":396,"props":1103,"children":1104},{"style":671},[1105],{"type":374,"value":916},{"type":369,"tag":396,"props":1107,"children":1108},{"style":636},[1109],{"type":374,"value":785},{"type":369,"tag":396,"props":1111,"children":1112},{"style":697},[1113],{"type":374,"value":700},{"type":369,"tag":396,"props":1115,"children":1117},{"class":398,"line":1116},21,[1118],{"type":369,"tag":396,"props":1119,"children":1120},{"style":636},[1121],{"type":374,"value":1122},"    }\n",{"type":369,"tag":396,"props":1124,"children":1126},{"class":398,"line":1125},22,[1127],{"type":369,"tag":396,"props":1128,"children":1129},{"style":636},[1130],{"type":374,"value":1131},"  }\n",{"type":369,"tag":396,"props":1133,"children":1135},{"class":398,"line":1134},23,[1136,1141,1145],{"type":369,"tag":396,"props":1137,"children":1138},{"style":707},[1139],{"type":374,"value":1140},"  return",{"type":369,"tag":396,"props":1142,"children":1143},{"style":727},[1144],{"type":374,"value":745},{"type":369,"tag":396,"props":1146,"children":1147},{"style":697},[1148],{"type":374,"value":700},{"type":369,"tag":396,"props":1150,"children":1152},{"class":398,"line":1151},24,[1153,1158],{"type":369,"tag":396,"props":1154,"children":1155},{"style":636},[1156],{"type":374,"value":1157},"}",{"type":369,"tag":396,"props":1159,"children":1160},{"style":697},[1161],{"type":374,"value":700},{"type":369,"tag":1163,"props":1164,"children":1165},"style",{},[1166],{"type":374,"value":1167},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":362,"searchDepth":609,"depth":609,"links":1169},[1170,1171],{"id":523,"depth":408,"text":523},{"id":528,"depth":408,"text":528,"children":1172},[1173],{"id":534,"depth":417,"text":534},"markdown","content:2.code:1.algorithm:3.leetcode:334.increasing-triplet-subsequence.md","content","2.code/1.algorithm/3.leetcode/334.increasing-triplet-subsequence.md","md",[1180,1182],{"_path":220,"title":219,"description":1181},"给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。",{"_path":226,"title":225,"description":1183},"编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。",1712748639341]