[{"data":1,"prerenderedAt":1172},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/increasing-triplet-subsequence":347,"/code/algorithm/leetcode/increasing-triplet-subsequence-surround":1167},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319,341,344],{"title":320,"_path":321,"children":322},"Promise","/code/scene/promise",[323,326,329,332,335,338],{"title":324,"_path":325},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":327,"_path":328},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":330,"_path":331},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":333,"_path":334},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":336,"_path":337},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":339,"_path":340},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":342,"_path":343},"lodash.get","/code/scene/lodash-get",{"title":345,"_path":346},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":220,"_dir":348,"_draft":349,"_partial":349,"_locale":350,"title":219,"description":351,"url":352,"body":353,"_type":1162,"_id":1163,"_source":1164,"_file":1165,"_extension":1166},"leetcode",false,"","给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。","https://leetcode.cn/problems/increasing-triplet-subsequence",{"type":354,"children":355,"toc":1156},"root",[356,363,368,373,412,417,448,453,483,488,503,508,514,519,525,1150],{"type":357,"tag":358,"props":359,"children":360},"element","p",{},[361],{"type":362,"value":351},"text",{"type":357,"tag":358,"props":364,"children":365},{},[366],{"type":362,"value":367},"如果存在这样的三元组下标 (i, j, k) 且满足 i \u003C j \u003C k ，使得 nums[i] \u003C nums[j] \u003C nums[k] ，返回 true ；否则，返回 false 。",{"type":357,"tag":358,"props":369,"children":370},{},[371],{"type":362,"value":372},"示例 1：",{"type":357,"tag":374,"props":375,"children":378},"pre",{"className":376,"code":377,"language":362,"meta":350,"style":350},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3,4,5]\n输出：true\n解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",[379],{"type":357,"tag":380,"props":381,"children":382},"code",{"__ignoreMap":350},[383,394,403],{"type":357,"tag":384,"props":385,"children":388},"span",{"class":386,"line":387},"line",1,[389],{"type":357,"tag":384,"props":390,"children":391},{},[392],{"type":362,"value":393},"输入：nums = [1,2,3,4,5]\n",{"type":357,"tag":384,"props":395,"children":397},{"class":386,"line":396},2,[398],{"type":357,"tag":384,"props":399,"children":400},{},[401],{"type":362,"value":402},"输出：true\n",{"type":357,"tag":384,"props":404,"children":406},{"class":386,"line":405},3,[407],{"type":357,"tag":384,"props":408,"children":409},{},[410],{"type":362,"value":411},"解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",{"type":357,"tag":358,"props":413,"children":414},{},[415],{"type":362,"value":416},"示例 2：",{"type":357,"tag":374,"props":418,"children":420},{"className":376,"code":419,"language":362,"meta":350,"style":350},"输入：nums = [5,4,3,2,1]\n输出：false\n解释：不存在满足题意的三元组\n",[421],{"type":357,"tag":380,"props":422,"children":423},{"__ignoreMap":350},[424,432,440],{"type":357,"tag":384,"props":425,"children":426},{"class":386,"line":387},[427],{"type":357,"tag":384,"props":428,"children":429},{},[430],{"type":362,"value":431},"输入：nums = [5,4,3,2,1]\n",{"type":357,"tag":384,"props":433,"children":434},{"class":386,"line":396},[435],{"type":357,"tag":384,"props":436,"children":437},{},[438],{"type":362,"value":439},"输出：false\n",{"type":357,"tag":384,"props":441,"children":442},{"class":386,"line":405},[443],{"type":357,"tag":384,"props":444,"children":445},{},[446],{"type":362,"value":447},"解释：不存在满足题意的三元组\n",{"type":357,"tag":358,"props":449,"children":450},{},[451],{"type":362,"value":452},"示例 3：",{"type":357,"tag":374,"props":454,"children":456},{"className":376,"code":455,"language":362,"meta":350,"style":350},"输入：nums = [2,1,5,0,4,6]\n输出：true\n解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",[457],{"type":357,"tag":380,"props":458,"children":459},{"__ignoreMap":350},[460,468,475],{"type":357,"tag":384,"props":461,"children":462},{"class":386,"line":387},[463],{"type":357,"tag":384,"props":464,"children":465},{},[466],{"type":362,"value":467},"输入：nums = [2,1,5,0,4,6]\n",{"type":357,"tag":384,"props":469,"children":470},{"class":386,"line":396},[471],{"type":357,"tag":384,"props":472,"children":473},{},[474],{"type":362,"value":402},{"type":357,"tag":384,"props":476,"children":477},{"class":386,"line":405},[478],{"type":357,"tag":384,"props":479,"children":480},{},[481],{"type":362,"value":482},"解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",{"type":357,"tag":358,"props":484,"children":485},{},[486],{"type":362,"value":487},"提示：",{"type":357,"tag":489,"props":490,"children":491},"ul",{},[492,498],{"type":357,"tag":493,"props":494,"children":495},"li",{},[496],{"type":362,"value":497},"1 \u003C= nums.length \u003C= 5 * 10^5",{"type":357,"tag":493,"props":499,"children":500},{},[501],{"type":362,"value":502},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":357,"tag":358,"props":504,"children":505},{},[506],{"type":362,"value":507},"进阶：你能实现时间复杂度为 O(n) ，空间复杂度为 O(1) 的解决方案吗？",{"type":357,"tag":509,"props":510,"children":512},"h2",{"id":511},"解题思路",[513],{"type":362,"value":511},{"type":357,"tag":509,"props":515,"children":517},{"id":516},"实现",[518],{"type":362,"value":516},{"type":357,"tag":520,"props":521,"children":523},"h3",{"id":522},"贪心",[524],{"type":362,"value":522},{"type":357,"tag":374,"props":526,"children":530},{"className":527,"code":528,"language":529,"meta":350,"style":350},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar increasingTriplet = function (nums) {\n  // 维护两个变量，代表递增序列中的第一个数、第二个数\n  let len = nums.length;\n  if (len \u003C 3) return false;\n  let first = nums[0];\n  let second = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i \u003C len; i++) {\n    if (nums[i] > second) {\n      // 找到第三个数\n      return true;\n    } else if (nums[i] > first) {\n      // 更新第二个数\n      second = nums[i];\n    } else {\n      // 更新第一个数\n      first = nums[i];\n    }\n  }\n  return false;\n};\n","js",[531],{"type":357,"tag":380,"props":532,"children":533},{"__ignoreMap":350},[534,543,569,586,595,639,648,689,738,778,813,879,923,932,950,1001,1010,1043,1060,1069,1102,1111,1120,1137],{"type":357,"tag":384,"props":535,"children":536},{"class":386,"line":387},[537],{"type":357,"tag":384,"props":538,"children":540},{"style":539},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[541],{"type":362,"value":542},"/**\n",{"type":357,"tag":384,"props":544,"children":545},{"class":386,"line":396},[546,551,557,563],{"type":357,"tag":384,"props":547,"children":548},{"style":539},[549],{"type":362,"value":550}," * ",{"type":357,"tag":384,"props":552,"children":554},{"style":553},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[555],{"type":362,"value":556},"@param",{"type":357,"tag":384,"props":558,"children":560},{"style":559},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[561],{"type":362,"value":562}," {number[]}",{"type":357,"tag":384,"props":564,"children":566},{"style":565},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[567],{"type":362,"value":568}," nums\n",{"type":357,"tag":384,"props":570,"children":571},{"class":386,"line":405},[572,576,581],{"type":357,"tag":384,"props":573,"children":574},{"style":539},[575],{"type":362,"value":550},{"type":357,"tag":384,"props":577,"children":578},{"style":553},[579],{"type":362,"value":580},"@return",{"type":357,"tag":384,"props":582,"children":583},{"style":559},[584],{"type":362,"value":585}," {boolean}\n",{"type":357,"tag":384,"props":587,"children":589},{"class":386,"line":588},4,[590],{"type":357,"tag":384,"props":591,"children":592},{"style":539},[593],{"type":362,"value":594}," */\n",{"type":357,"tag":384,"props":596,"children":598},{"class":386,"line":597},5,[599,605,611,617,622,628,634],{"type":357,"tag":384,"props":600,"children":602},{"style":601},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[603],{"type":362,"value":604},"var",{"type":357,"tag":384,"props":606,"children":608},{"style":607},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[609],{"type":362,"value":610}," increasingTriplet",{"type":357,"tag":384,"props":612,"children":614},{"style":613},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[615],{"type":362,"value":616}," =",{"type":357,"tag":384,"props":618,"children":619},{"style":601},[620],{"type":362,"value":621}," function",{"type":357,"tag":384,"props":623,"children":625},{"style":624},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[626],{"type":362,"value":627}," (",{"type":357,"tag":384,"props":629,"children":631},{"style":630},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[632],{"type":362,"value":633},"nums",{"type":357,"tag":384,"props":635,"children":636},{"style":624},[637],{"type":362,"value":638},") {\n",{"type":357,"tag":384,"props":640,"children":642},{"class":386,"line":641},6,[643],{"type":357,"tag":384,"props":644,"children":645},{"style":539},[646],{"type":362,"value":647},"  // 维护两个变量，代表递增序列中的第一个数、第二个数\n",{"type":357,"tag":384,"props":649,"children":651},{"class":386,"line":650},7,[652,657,663,667,672,678,683],{"type":357,"tag":384,"props":653,"children":654},{"style":601},[655],{"type":362,"value":656},"  let",{"type":357,"tag":384,"props":658,"children":660},{"style":659},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[661],{"type":362,"value":662}," len",{"type":357,"tag":384,"props":664,"children":665},{"style":613},[666],{"type":362,"value":616},{"type":357,"tag":384,"props":668,"children":669},{"style":659},[670],{"type":362,"value":671}," nums",{"type":357,"tag":384,"props":673,"children":675},{"style":674},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[676],{"type":362,"value":677},".",{"type":357,"tag":384,"props":679,"children":680},{"style":624},[681],{"type":362,"value":682},"length",{"type":357,"tag":384,"props":684,"children":686},{"style":685},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[687],{"type":362,"value":688},";\n",{"type":357,"tag":384,"props":690,"children":692},{"class":386,"line":691},8,[693,699,703,708,713,719,724,729,734],{"type":357,"tag":384,"props":694,"children":696},{"style":695},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[697],{"type":362,"value":698},"  if",{"type":357,"tag":384,"props":700,"children":701},{"style":624},[702],{"type":362,"value":627},{"type":357,"tag":384,"props":704,"children":705},{"style":659},[706],{"type":362,"value":707},"len",{"type":357,"tag":384,"props":709,"children":710},{"style":613},[711],{"type":362,"value":712}," \u003C",{"type":357,"tag":384,"props":714,"children":716},{"style":715},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[717],{"type":362,"value":718}," 3",{"type":357,"tag":384,"props":720,"children":721},{"style":624},[722],{"type":362,"value":723},") ",{"type":357,"tag":384,"props":725,"children":726},{"style":695},[727],{"type":362,"value":728},"return",{"type":357,"tag":384,"props":730,"children":731},{"style":715},[732],{"type":362,"value":733}," false",{"type":357,"tag":384,"props":735,"children":736},{"style":685},[737],{"type":362,"value":688},{"type":357,"tag":384,"props":739,"children":741},{"class":386,"line":740},9,[742,746,751,755,759,764,769,774],{"type":357,"tag":384,"props":743,"children":744},{"style":601},[745],{"type":362,"value":656},{"type":357,"tag":384,"props":747,"children":748},{"style":659},[749],{"type":362,"value":750}," first",{"type":357,"tag":384,"props":752,"children":753},{"style":613},[754],{"type":362,"value":616},{"type":357,"tag":384,"props":756,"children":757},{"style":659},[758],{"type":362,"value":671},{"type":357,"tag":384,"props":760,"children":761},{"style":624},[762],{"type":362,"value":763},"[",{"type":357,"tag":384,"props":765,"children":766},{"style":715},[767],{"type":362,"value":768},"0",{"type":357,"tag":384,"props":770,"children":771},{"style":624},[772],{"type":362,"value":773},"]",{"type":357,"tag":384,"props":775,"children":776},{"style":685},[777],{"type":362,"value":688},{"type":357,"tag":384,"props":779,"children":781},{"class":386,"line":780},10,[782,786,791,795,800,804,809],{"type":357,"tag":384,"props":783,"children":784},{"style":601},[785],{"type":362,"value":656},{"type":357,"tag":384,"props":787,"children":788},{"style":659},[789],{"type":362,"value":790}," second",{"type":357,"tag":384,"props":792,"children":793},{"style":613},[794],{"type":362,"value":616},{"type":357,"tag":384,"props":796,"children":797},{"style":659},[798],{"type":362,"value":799}," Number",{"type":357,"tag":384,"props":801,"children":802},{"style":674},[803],{"type":362,"value":677},{"type":357,"tag":384,"props":805,"children":806},{"style":624},[807],{"type":362,"value":808},"MAX_SAFE_INTEGER",{"type":357,"tag":384,"props":810,"children":811},{"style":685},[812],{"type":362,"value":688},{"type":357,"tag":384,"props":814,"children":816},{"class":386,"line":815},11,[817,822,826,831,836,840,845,850,854,858,862,866,870,875],{"type":357,"tag":384,"props":818,"children":819},{"style":695},[820],{"type":362,"value":821},"  for",{"type":357,"tag":384,"props":823,"children":824},{"style":624},[825],{"type":362,"value":627},{"type":357,"tag":384,"props":827,"children":828},{"style":601},[829],{"type":362,"value":830},"let",{"type":357,"tag":384,"props":832,"children":833},{"style":659},[834],{"type":362,"value":835}," i",{"type":357,"tag":384,"props":837,"children":838},{"style":613},[839],{"type":362,"value":616},{"type":357,"tag":384,"props":841,"children":842},{"style":715},[843],{"type":362,"value":844}," 0",{"type":357,"tag":384,"props":846,"children":847},{"style":685},[848],{"type":362,"value":849},";",{"type":357,"tag":384,"props":851,"children":852},{"style":659},[853],{"type":362,"value":835},{"type":357,"tag":384,"props":855,"children":856},{"style":613},[857],{"type":362,"value":712},{"type":357,"tag":384,"props":859,"children":860},{"style":659},[861],{"type":362,"value":662},{"type":357,"tag":384,"props":863,"children":864},{"style":685},[865],{"type":362,"value":849},{"type":357,"tag":384,"props":867,"children":868},{"style":659},[869],{"type":362,"value":835},{"type":357,"tag":384,"props":871,"children":872},{"style":613},[873],{"type":362,"value":874},"++",{"type":357,"tag":384,"props":876,"children":877},{"style":624},[878],{"type":362,"value":638},{"type":357,"tag":384,"props":880,"children":882},{"class":386,"line":881},12,[883,888,892,896,900,905,910,915,919],{"type":357,"tag":384,"props":884,"children":885},{"style":695},[886],{"type":362,"value":887},"    if",{"type":357,"tag":384,"props":889,"children":890},{"style":624},[891],{"type":362,"value":627},{"type":357,"tag":384,"props":893,"children":894},{"style":659},[895],{"type":362,"value":633},{"type":357,"tag":384,"props":897,"children":898},{"style":624},[899],{"type":362,"value":763},{"type":357,"tag":384,"props":901,"children":902},{"style":659},[903],{"type":362,"value":904},"i",{"type":357,"tag":384,"props":906,"children":907},{"style":624},[908],{"type":362,"value":909},"] ",{"type":357,"tag":384,"props":911,"children":912},{"style":613},[913],{"type":362,"value":914},">",{"type":357,"tag":384,"props":916,"children":917},{"style":659},[918],{"type":362,"value":790},{"type":357,"tag":384,"props":920,"children":921},{"style":624},[922],{"type":362,"value":638},{"type":357,"tag":384,"props":924,"children":926},{"class":386,"line":925},13,[927],{"type":357,"tag":384,"props":928,"children":929},{"style":539},[930],{"type":362,"value":931},"      // 找到第三个数\n",{"type":357,"tag":384,"props":933,"children":935},{"class":386,"line":934},14,[936,941,946],{"type":357,"tag":384,"props":937,"children":938},{"style":695},[939],{"type":362,"value":940},"      return",{"type":357,"tag":384,"props":942,"children":943},{"style":715},[944],{"type":362,"value":945}," true",{"type":357,"tag":384,"props":947,"children":948},{"style":685},[949],{"type":362,"value":688},{"type":357,"tag":384,"props":951,"children":953},{"class":386,"line":952},15,[954,959,964,969,973,977,981,985,989,993,997],{"type":357,"tag":384,"props":955,"children":956},{"style":624},[957],{"type":362,"value":958},"    } ",{"type":357,"tag":384,"props":960,"children":961},{"style":695},[962],{"type":362,"value":963},"else",{"type":357,"tag":384,"props":965,"children":966},{"style":695},[967],{"type":362,"value":968}," if",{"type":357,"tag":384,"props":970,"children":971},{"style":624},[972],{"type":362,"value":627},{"type":357,"tag":384,"props":974,"children":975},{"style":659},[976],{"type":362,"value":633},{"type":357,"tag":384,"props":978,"children":979},{"style":624},[980],{"type":362,"value":763},{"type":357,"tag":384,"props":982,"children":983},{"style":659},[984],{"type":362,"value":904},{"type":357,"tag":384,"props":986,"children":987},{"style":624},[988],{"type":362,"value":909},{"type":357,"tag":384,"props":990,"children":991},{"style":613},[992],{"type":362,"value":914},{"type":357,"tag":384,"props":994,"children":995},{"style":659},[996],{"type":362,"value":750},{"type":357,"tag":384,"props":998,"children":999},{"style":624},[1000],{"type":362,"value":638},{"type":357,"tag":384,"props":1002,"children":1004},{"class":386,"line":1003},16,[1005],{"type":357,"tag":384,"props":1006,"children":1007},{"style":539},[1008],{"type":362,"value":1009},"      // 更新第二个数\n",{"type":357,"tag":384,"props":1011,"children":1013},{"class":386,"line":1012},17,[1014,1019,1023,1027,1031,1035,1039],{"type":357,"tag":384,"props":1015,"children":1016},{"style":659},[1017],{"type":362,"value":1018},"      second",{"type":357,"tag":384,"props":1020,"children":1021},{"style":613},[1022],{"type":362,"value":616},{"type":357,"tag":384,"props":1024,"children":1025},{"style":659},[1026],{"type":362,"value":671},{"type":357,"tag":384,"props":1028,"children":1029},{"style":624},[1030],{"type":362,"value":763},{"type":357,"tag":384,"props":1032,"children":1033},{"style":659},[1034],{"type":362,"value":904},{"type":357,"tag":384,"props":1036,"children":1037},{"style":624},[1038],{"type":362,"value":773},{"type":357,"tag":384,"props":1040,"children":1041},{"style":685},[1042],{"type":362,"value":688},{"type":357,"tag":384,"props":1044,"children":1046},{"class":386,"line":1045},18,[1047,1051,1055],{"type":357,"tag":384,"props":1048,"children":1049},{"style":624},[1050],{"type":362,"value":958},{"type":357,"tag":384,"props":1052,"children":1053},{"style":695},[1054],{"type":362,"value":963},{"type":357,"tag":384,"props":1056,"children":1057},{"style":624},[1058],{"type":362,"value":1059}," {\n",{"type":357,"tag":384,"props":1061,"children":1063},{"class":386,"line":1062},19,[1064],{"type":357,"tag":384,"props":1065,"children":1066},{"style":539},[1067],{"type":362,"value":1068},"      // 更新第一个数\n",{"type":357,"tag":384,"props":1070,"children":1072},{"class":386,"line":1071},20,[1073,1078,1082,1086,1090,1094,1098],{"type":357,"tag":384,"props":1074,"children":1075},{"style":659},[1076],{"type":362,"value":1077},"      first",{"type":357,"tag":384,"props":1079,"children":1080},{"style":613},[1081],{"type":362,"value":616},{"type":357,"tag":384,"props":1083,"children":1084},{"style":659},[1085],{"type":362,"value":671},{"type":357,"tag":384,"props":1087,"children":1088},{"style":624},[1089],{"type":362,"value":763},{"type":357,"tag":384,"props":1091,"children":1092},{"style":659},[1093],{"type":362,"value":904},{"type":357,"tag":384,"props":1095,"children":1096},{"style":624},[1097],{"type":362,"value":773},{"type":357,"tag":384,"props":1099,"children":1100},{"style":685},[1101],{"type":362,"value":688},{"type":357,"tag":384,"props":1103,"children":1105},{"class":386,"line":1104},21,[1106],{"type":357,"tag":384,"props":1107,"children":1108},{"style":624},[1109],{"type":362,"value":1110},"    }\n",{"type":357,"tag":384,"props":1112,"children":1114},{"class":386,"line":1113},22,[1115],{"type":357,"tag":384,"props":1116,"children":1117},{"style":624},[1118],{"type":362,"value":1119},"  }\n",{"type":357,"tag":384,"props":1121,"children":1123},{"class":386,"line":1122},23,[1124,1129,1133],{"type":357,"tag":384,"props":1125,"children":1126},{"style":695},[1127],{"type":362,"value":1128},"  return",{"type":357,"tag":384,"props":1130,"children":1131},{"style":715},[1132],{"type":362,"value":733},{"type":357,"tag":384,"props":1134,"children":1135},{"style":685},[1136],{"type":362,"value":688},{"type":357,"tag":384,"props":1138,"children":1140},{"class":386,"line":1139},24,[1141,1146],{"type":357,"tag":384,"props":1142,"children":1143},{"style":624},[1144],{"type":362,"value":1145},"}",{"type":357,"tag":384,"props":1147,"children":1148},{"style":685},[1149],{"type":362,"value":688},{"type":357,"tag":1151,"props":1152,"children":1153},"style",{},[1154],{"type":362,"value":1155},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":350,"searchDepth":597,"depth":597,"links":1157},[1158,1159],{"id":511,"depth":396,"text":511},{"id":516,"depth":396,"text":516,"children":1160},[1161],{"id":522,"depth":405,"text":522},"markdown","content:2.code:1.algorithm:3.leetcode:334.increasing-triplet-subsequence.md","content","2.code/1.algorithm/3.leetcode/334.increasing-triplet-subsequence.md","md",[1168,1170],{"_path":217,"title":216,"description":1169},"给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。",{"_path":223,"title":222,"description":1171},"编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。",1712581263875]