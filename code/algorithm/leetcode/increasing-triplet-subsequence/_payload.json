[{"data":1,"prerenderedAt":1147},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/increasing-triplet-subsequence":322,"/code/algorithm/leetcode/increasing-triplet-subsequence-surround":1142},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319],{"title":320,"_path":321},"顺序打印 url 并支持 retry","/code/scene/promise-url-retry",{"_path":220,"_dir":323,"_draft":324,"_partial":324,"_locale":325,"title":219,"description":326,"url":327,"body":328,"_type":1137,"_id":1138,"_source":1139,"_file":1140,"_extension":1141},"leetcode",false,"","给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。","https://leetcode.cn/problems/increasing-triplet-subsequence",{"type":329,"children":330,"toc":1131},"root",[331,338,343,348,387,392,423,428,458,463,478,483,489,494,500,1125],{"type":332,"tag":333,"props":334,"children":335},"element","p",{},[336],{"type":337,"value":326},"text",{"type":332,"tag":333,"props":339,"children":340},{},[341],{"type":337,"value":342},"如果存在这样的三元组下标 (i, j, k) 且满足 i \u003C j \u003C k ，使得 nums[i] \u003C nums[j] \u003C nums[k] ，返回 true ；否则，返回 false 。",{"type":332,"tag":333,"props":344,"children":345},{},[346],{"type":337,"value":347},"示例 1：",{"type":332,"tag":349,"props":350,"children":353},"pre",{"className":351,"code":352,"language":337,"meta":325,"style":325},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3,4,5]\n输出：true\n解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",[354],{"type":332,"tag":355,"props":356,"children":357},"code",{"__ignoreMap":325},[358,369,378],{"type":332,"tag":359,"props":360,"children":363},"span",{"class":361,"line":362},"line",1,[364],{"type":332,"tag":359,"props":365,"children":366},{},[367],{"type":337,"value":368},"输入：nums = [1,2,3,4,5]\n",{"type":332,"tag":359,"props":370,"children":372},{"class":361,"line":371},2,[373],{"type":332,"tag":359,"props":374,"children":375},{},[376],{"type":337,"value":377},"输出：true\n",{"type":332,"tag":359,"props":379,"children":381},{"class":361,"line":380},3,[382],{"type":332,"tag":359,"props":383,"children":384},{},[385],{"type":337,"value":386},"解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",{"type":332,"tag":333,"props":388,"children":389},{},[390],{"type":337,"value":391},"示例 2：",{"type":332,"tag":349,"props":393,"children":395},{"className":351,"code":394,"language":337,"meta":325,"style":325},"输入：nums = [5,4,3,2,1]\n输出：false\n解释：不存在满足题意的三元组\n",[396],{"type":332,"tag":355,"props":397,"children":398},{"__ignoreMap":325},[399,407,415],{"type":332,"tag":359,"props":400,"children":401},{"class":361,"line":362},[402],{"type":332,"tag":359,"props":403,"children":404},{},[405],{"type":337,"value":406},"输入：nums = [5,4,3,2,1]\n",{"type":332,"tag":359,"props":408,"children":409},{"class":361,"line":371},[410],{"type":332,"tag":359,"props":411,"children":412},{},[413],{"type":337,"value":414},"输出：false\n",{"type":332,"tag":359,"props":416,"children":417},{"class":361,"line":380},[418],{"type":332,"tag":359,"props":419,"children":420},{},[421],{"type":337,"value":422},"解释：不存在满足题意的三元组\n",{"type":332,"tag":333,"props":424,"children":425},{},[426],{"type":337,"value":427},"示例 3：",{"type":332,"tag":349,"props":429,"children":431},{"className":351,"code":430,"language":337,"meta":325,"style":325},"输入：nums = [2,1,5,0,4,6]\n输出：true\n解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",[432],{"type":332,"tag":355,"props":433,"children":434},{"__ignoreMap":325},[435,443,450],{"type":332,"tag":359,"props":436,"children":437},{"class":361,"line":362},[438],{"type":332,"tag":359,"props":439,"children":440},{},[441],{"type":337,"value":442},"输入：nums = [2,1,5,0,4,6]\n",{"type":332,"tag":359,"props":444,"children":445},{"class":361,"line":371},[446],{"type":332,"tag":359,"props":447,"children":448},{},[449],{"type":337,"value":377},{"type":332,"tag":359,"props":451,"children":452},{"class":361,"line":380},[453],{"type":332,"tag":359,"props":454,"children":455},{},[456],{"type":337,"value":457},"解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",{"type":332,"tag":333,"props":459,"children":460},{},[461],{"type":337,"value":462},"提示：",{"type":332,"tag":464,"props":465,"children":466},"ul",{},[467,473],{"type":332,"tag":468,"props":469,"children":470},"li",{},[471],{"type":337,"value":472},"1 \u003C= nums.length \u003C= 5 * 10^5",{"type":332,"tag":468,"props":474,"children":475},{},[476],{"type":337,"value":477},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":332,"tag":333,"props":479,"children":480},{},[481],{"type":337,"value":482},"进阶：你能实现时间复杂度为 O(n) ，空间复杂度为 O(1) 的解决方案吗？",{"type":332,"tag":484,"props":485,"children":487},"h2",{"id":486},"解题思路",[488],{"type":337,"value":486},{"type":332,"tag":484,"props":490,"children":492},{"id":491},"实现",[493],{"type":337,"value":491},{"type":332,"tag":495,"props":496,"children":498},"h3",{"id":497},"贪心",[499],{"type":337,"value":497},{"type":332,"tag":349,"props":501,"children":505},{"className":502,"code":503,"language":504,"meta":325,"style":325},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar increasingTriplet = function (nums) {\n  // 维护两个变量，代表递增序列中的第一个数、第二个数\n  let len = nums.length;\n  if (len \u003C 3) return false;\n  let first = nums[0];\n  let second = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i \u003C len; i++) {\n    if (nums[i] > second) {\n      // 找到第三个数\n      return true;\n    } else if (nums[i] > first) {\n      // 更新第二个数\n      second = nums[i];\n    } else {\n      // 更新第一个数\n      first = nums[i];\n    }\n  }\n  return false;\n};\n","js",[506],{"type":332,"tag":355,"props":507,"children":508},{"__ignoreMap":325},[509,518,544,561,570,614,623,664,713,753,788,854,898,907,925,976,985,1018,1035,1044,1077,1086,1095,1112],{"type":332,"tag":359,"props":510,"children":511},{"class":361,"line":362},[512],{"type":332,"tag":359,"props":513,"children":515},{"style":514},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[516],{"type":337,"value":517},"/**\n",{"type":332,"tag":359,"props":519,"children":520},{"class":361,"line":371},[521,526,532,538],{"type":332,"tag":359,"props":522,"children":523},{"style":514},[524],{"type":337,"value":525}," * ",{"type":332,"tag":359,"props":527,"children":529},{"style":528},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[530],{"type":337,"value":531},"@param",{"type":332,"tag":359,"props":533,"children":535},{"style":534},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[536],{"type":337,"value":537}," {number[]}",{"type":332,"tag":359,"props":539,"children":541},{"style":540},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[542],{"type":337,"value":543}," nums\n",{"type":332,"tag":359,"props":545,"children":546},{"class":361,"line":380},[547,551,556],{"type":332,"tag":359,"props":548,"children":549},{"style":514},[550],{"type":337,"value":525},{"type":332,"tag":359,"props":552,"children":553},{"style":528},[554],{"type":337,"value":555},"@return",{"type":332,"tag":359,"props":557,"children":558},{"style":534},[559],{"type":337,"value":560}," {boolean}\n",{"type":332,"tag":359,"props":562,"children":564},{"class":361,"line":563},4,[565],{"type":332,"tag":359,"props":566,"children":567},{"style":514},[568],{"type":337,"value":569}," */\n",{"type":332,"tag":359,"props":571,"children":573},{"class":361,"line":572},5,[574,580,586,592,597,603,609],{"type":332,"tag":359,"props":575,"children":577},{"style":576},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[578],{"type":337,"value":579},"var",{"type":332,"tag":359,"props":581,"children":583},{"style":582},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[584],{"type":337,"value":585}," increasingTriplet",{"type":332,"tag":359,"props":587,"children":589},{"style":588},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[590],{"type":337,"value":591}," =",{"type":332,"tag":359,"props":593,"children":594},{"style":576},[595],{"type":337,"value":596}," function",{"type":332,"tag":359,"props":598,"children":600},{"style":599},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[601],{"type":337,"value":602}," (",{"type":332,"tag":359,"props":604,"children":606},{"style":605},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[607],{"type":337,"value":608},"nums",{"type":332,"tag":359,"props":610,"children":611},{"style":599},[612],{"type":337,"value":613},") {\n",{"type":332,"tag":359,"props":615,"children":617},{"class":361,"line":616},6,[618],{"type":332,"tag":359,"props":619,"children":620},{"style":514},[621],{"type":337,"value":622},"  // 维护两个变量，代表递增序列中的第一个数、第二个数\n",{"type":332,"tag":359,"props":624,"children":626},{"class":361,"line":625},7,[627,632,638,642,647,653,658],{"type":332,"tag":359,"props":628,"children":629},{"style":576},[630],{"type":337,"value":631},"  let",{"type":332,"tag":359,"props":633,"children":635},{"style":634},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[636],{"type":337,"value":637}," len",{"type":332,"tag":359,"props":639,"children":640},{"style":588},[641],{"type":337,"value":591},{"type":332,"tag":359,"props":643,"children":644},{"style":634},[645],{"type":337,"value":646}," nums",{"type":332,"tag":359,"props":648,"children":650},{"style":649},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[651],{"type":337,"value":652},".",{"type":332,"tag":359,"props":654,"children":655},{"style":599},[656],{"type":337,"value":657},"length",{"type":332,"tag":359,"props":659,"children":661},{"style":660},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[662],{"type":337,"value":663},";\n",{"type":332,"tag":359,"props":665,"children":667},{"class":361,"line":666},8,[668,674,678,683,688,694,699,704,709],{"type":332,"tag":359,"props":669,"children":671},{"style":670},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[672],{"type":337,"value":673},"  if",{"type":332,"tag":359,"props":675,"children":676},{"style":599},[677],{"type":337,"value":602},{"type":332,"tag":359,"props":679,"children":680},{"style":634},[681],{"type":337,"value":682},"len",{"type":332,"tag":359,"props":684,"children":685},{"style":588},[686],{"type":337,"value":687}," \u003C",{"type":332,"tag":359,"props":689,"children":691},{"style":690},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[692],{"type":337,"value":693}," 3",{"type":332,"tag":359,"props":695,"children":696},{"style":599},[697],{"type":337,"value":698},") ",{"type":332,"tag":359,"props":700,"children":701},{"style":670},[702],{"type":337,"value":703},"return",{"type":332,"tag":359,"props":705,"children":706},{"style":690},[707],{"type":337,"value":708}," false",{"type":332,"tag":359,"props":710,"children":711},{"style":660},[712],{"type":337,"value":663},{"type":332,"tag":359,"props":714,"children":716},{"class":361,"line":715},9,[717,721,726,730,734,739,744,749],{"type":332,"tag":359,"props":718,"children":719},{"style":576},[720],{"type":337,"value":631},{"type":332,"tag":359,"props":722,"children":723},{"style":634},[724],{"type":337,"value":725}," first",{"type":332,"tag":359,"props":727,"children":728},{"style":588},[729],{"type":337,"value":591},{"type":332,"tag":359,"props":731,"children":732},{"style":634},[733],{"type":337,"value":646},{"type":332,"tag":359,"props":735,"children":736},{"style":599},[737],{"type":337,"value":738},"[",{"type":332,"tag":359,"props":740,"children":741},{"style":690},[742],{"type":337,"value":743},"0",{"type":332,"tag":359,"props":745,"children":746},{"style":599},[747],{"type":337,"value":748},"]",{"type":332,"tag":359,"props":750,"children":751},{"style":660},[752],{"type":337,"value":663},{"type":332,"tag":359,"props":754,"children":756},{"class":361,"line":755},10,[757,761,766,770,775,779,784],{"type":332,"tag":359,"props":758,"children":759},{"style":576},[760],{"type":337,"value":631},{"type":332,"tag":359,"props":762,"children":763},{"style":634},[764],{"type":337,"value":765}," second",{"type":332,"tag":359,"props":767,"children":768},{"style":588},[769],{"type":337,"value":591},{"type":332,"tag":359,"props":771,"children":772},{"style":634},[773],{"type":337,"value":774}," Number",{"type":332,"tag":359,"props":776,"children":777},{"style":649},[778],{"type":337,"value":652},{"type":332,"tag":359,"props":780,"children":781},{"style":599},[782],{"type":337,"value":783},"MAX_SAFE_INTEGER",{"type":332,"tag":359,"props":785,"children":786},{"style":660},[787],{"type":337,"value":663},{"type":332,"tag":359,"props":789,"children":791},{"class":361,"line":790},11,[792,797,801,806,811,815,820,825,829,833,837,841,845,850],{"type":332,"tag":359,"props":793,"children":794},{"style":670},[795],{"type":337,"value":796},"  for",{"type":332,"tag":359,"props":798,"children":799},{"style":599},[800],{"type":337,"value":602},{"type":332,"tag":359,"props":802,"children":803},{"style":576},[804],{"type":337,"value":805},"let",{"type":332,"tag":359,"props":807,"children":808},{"style":634},[809],{"type":337,"value":810}," i",{"type":332,"tag":359,"props":812,"children":813},{"style":588},[814],{"type":337,"value":591},{"type":332,"tag":359,"props":816,"children":817},{"style":690},[818],{"type":337,"value":819}," 0",{"type":332,"tag":359,"props":821,"children":822},{"style":660},[823],{"type":337,"value":824},";",{"type":332,"tag":359,"props":826,"children":827},{"style":634},[828],{"type":337,"value":810},{"type":332,"tag":359,"props":830,"children":831},{"style":588},[832],{"type":337,"value":687},{"type":332,"tag":359,"props":834,"children":835},{"style":634},[836],{"type":337,"value":637},{"type":332,"tag":359,"props":838,"children":839},{"style":660},[840],{"type":337,"value":824},{"type":332,"tag":359,"props":842,"children":843},{"style":634},[844],{"type":337,"value":810},{"type":332,"tag":359,"props":846,"children":847},{"style":588},[848],{"type":337,"value":849},"++",{"type":332,"tag":359,"props":851,"children":852},{"style":599},[853],{"type":337,"value":613},{"type":332,"tag":359,"props":855,"children":857},{"class":361,"line":856},12,[858,863,867,871,875,880,885,890,894],{"type":332,"tag":359,"props":859,"children":860},{"style":670},[861],{"type":337,"value":862},"    if",{"type":332,"tag":359,"props":864,"children":865},{"style":599},[866],{"type":337,"value":602},{"type":332,"tag":359,"props":868,"children":869},{"style":634},[870],{"type":337,"value":608},{"type":332,"tag":359,"props":872,"children":873},{"style":599},[874],{"type":337,"value":738},{"type":332,"tag":359,"props":876,"children":877},{"style":634},[878],{"type":337,"value":879},"i",{"type":332,"tag":359,"props":881,"children":882},{"style":599},[883],{"type":337,"value":884},"] ",{"type":332,"tag":359,"props":886,"children":887},{"style":588},[888],{"type":337,"value":889},">",{"type":332,"tag":359,"props":891,"children":892},{"style":634},[893],{"type":337,"value":765},{"type":332,"tag":359,"props":895,"children":896},{"style":599},[897],{"type":337,"value":613},{"type":332,"tag":359,"props":899,"children":901},{"class":361,"line":900},13,[902],{"type":332,"tag":359,"props":903,"children":904},{"style":514},[905],{"type":337,"value":906},"      // 找到第三个数\n",{"type":332,"tag":359,"props":908,"children":910},{"class":361,"line":909},14,[911,916,921],{"type":332,"tag":359,"props":912,"children":913},{"style":670},[914],{"type":337,"value":915},"      return",{"type":332,"tag":359,"props":917,"children":918},{"style":690},[919],{"type":337,"value":920}," true",{"type":332,"tag":359,"props":922,"children":923},{"style":660},[924],{"type":337,"value":663},{"type":332,"tag":359,"props":926,"children":928},{"class":361,"line":927},15,[929,934,939,944,948,952,956,960,964,968,972],{"type":332,"tag":359,"props":930,"children":931},{"style":599},[932],{"type":337,"value":933},"    } ",{"type":332,"tag":359,"props":935,"children":936},{"style":670},[937],{"type":337,"value":938},"else",{"type":332,"tag":359,"props":940,"children":941},{"style":670},[942],{"type":337,"value":943}," if",{"type":332,"tag":359,"props":945,"children":946},{"style":599},[947],{"type":337,"value":602},{"type":332,"tag":359,"props":949,"children":950},{"style":634},[951],{"type":337,"value":608},{"type":332,"tag":359,"props":953,"children":954},{"style":599},[955],{"type":337,"value":738},{"type":332,"tag":359,"props":957,"children":958},{"style":634},[959],{"type":337,"value":879},{"type":332,"tag":359,"props":961,"children":962},{"style":599},[963],{"type":337,"value":884},{"type":332,"tag":359,"props":965,"children":966},{"style":588},[967],{"type":337,"value":889},{"type":332,"tag":359,"props":969,"children":970},{"style":634},[971],{"type":337,"value":725},{"type":332,"tag":359,"props":973,"children":974},{"style":599},[975],{"type":337,"value":613},{"type":332,"tag":359,"props":977,"children":979},{"class":361,"line":978},16,[980],{"type":332,"tag":359,"props":981,"children":982},{"style":514},[983],{"type":337,"value":984},"      // 更新第二个数\n",{"type":332,"tag":359,"props":986,"children":988},{"class":361,"line":987},17,[989,994,998,1002,1006,1010,1014],{"type":332,"tag":359,"props":990,"children":991},{"style":634},[992],{"type":337,"value":993},"      second",{"type":332,"tag":359,"props":995,"children":996},{"style":588},[997],{"type":337,"value":591},{"type":332,"tag":359,"props":999,"children":1000},{"style":634},[1001],{"type":337,"value":646},{"type":332,"tag":359,"props":1003,"children":1004},{"style":599},[1005],{"type":337,"value":738},{"type":332,"tag":359,"props":1007,"children":1008},{"style":634},[1009],{"type":337,"value":879},{"type":332,"tag":359,"props":1011,"children":1012},{"style":599},[1013],{"type":337,"value":748},{"type":332,"tag":359,"props":1015,"children":1016},{"style":660},[1017],{"type":337,"value":663},{"type":332,"tag":359,"props":1019,"children":1021},{"class":361,"line":1020},18,[1022,1026,1030],{"type":332,"tag":359,"props":1023,"children":1024},{"style":599},[1025],{"type":337,"value":933},{"type":332,"tag":359,"props":1027,"children":1028},{"style":670},[1029],{"type":337,"value":938},{"type":332,"tag":359,"props":1031,"children":1032},{"style":599},[1033],{"type":337,"value":1034}," {\n",{"type":332,"tag":359,"props":1036,"children":1038},{"class":361,"line":1037},19,[1039],{"type":332,"tag":359,"props":1040,"children":1041},{"style":514},[1042],{"type":337,"value":1043},"      // 更新第一个数\n",{"type":332,"tag":359,"props":1045,"children":1047},{"class":361,"line":1046},20,[1048,1053,1057,1061,1065,1069,1073],{"type":332,"tag":359,"props":1049,"children":1050},{"style":634},[1051],{"type":337,"value":1052},"      first",{"type":332,"tag":359,"props":1054,"children":1055},{"style":588},[1056],{"type":337,"value":591},{"type":332,"tag":359,"props":1058,"children":1059},{"style":634},[1060],{"type":337,"value":646},{"type":332,"tag":359,"props":1062,"children":1063},{"style":599},[1064],{"type":337,"value":738},{"type":332,"tag":359,"props":1066,"children":1067},{"style":634},[1068],{"type":337,"value":879},{"type":332,"tag":359,"props":1070,"children":1071},{"style":599},[1072],{"type":337,"value":748},{"type":332,"tag":359,"props":1074,"children":1075},{"style":660},[1076],{"type":337,"value":663},{"type":332,"tag":359,"props":1078,"children":1080},{"class":361,"line":1079},21,[1081],{"type":332,"tag":359,"props":1082,"children":1083},{"style":599},[1084],{"type":337,"value":1085},"    }\n",{"type":332,"tag":359,"props":1087,"children":1089},{"class":361,"line":1088},22,[1090],{"type":332,"tag":359,"props":1091,"children":1092},{"style":599},[1093],{"type":337,"value":1094},"  }\n",{"type":332,"tag":359,"props":1096,"children":1098},{"class":361,"line":1097},23,[1099,1104,1108],{"type":332,"tag":359,"props":1100,"children":1101},{"style":670},[1102],{"type":337,"value":1103},"  return",{"type":332,"tag":359,"props":1105,"children":1106},{"style":690},[1107],{"type":337,"value":708},{"type":332,"tag":359,"props":1109,"children":1110},{"style":660},[1111],{"type":337,"value":663},{"type":332,"tag":359,"props":1113,"children":1115},{"class":361,"line":1114},24,[1116,1121],{"type":332,"tag":359,"props":1117,"children":1118},{"style":599},[1119],{"type":337,"value":1120},"}",{"type":332,"tag":359,"props":1122,"children":1123},{"style":660},[1124],{"type":337,"value":663},{"type":332,"tag":1126,"props":1127,"children":1128},"style",{},[1129],{"type":337,"value":1130},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":325,"searchDepth":572,"depth":572,"links":1132},[1133,1134],{"id":486,"depth":371,"text":486},{"id":491,"depth":371,"text":491,"children":1135},[1136],{"id":497,"depth":380,"text":497},"markdown","content:2.code:1.algorithm:3.leetcode:334.increasing-triplet-subsequence.md","content","2.code/1.algorithm/3.leetcode/334.increasing-triplet-subsequence.md","md",[1143,1145],{"_path":217,"title":216,"description":1144},"给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。",{"_path":223,"title":222,"description":1146},"编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。",1712115784365]