[{"data":1,"prerenderedAt":1145},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/increasing-triplet-subsequence":320,"/code/algorithm/leetcode/increasing-triplet-subsequence-surround":1140},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,264,313],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,53],{"title":41,"_path":42,"children":43},"剑指 offer","/code/algorithm/sword-ofter",[44,47,50],{"title":45,"_path":46},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":48,"_path":49},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":51,"_path":52},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":54,"_path":55,"children":56},"力扣 leetCode","/code/algorithm/leetcode",[57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261],{"title":58,"_path":59},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":61,"_path":62},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":64,"_path":65},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":67,"_path":68},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":70,"_path":71},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":73,"_path":74},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":76,"_path":77},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":79,"_path":80},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":82,"_path":83},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":85,"_path":86},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":88,"_path":89},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":91,"_path":92},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":94,"_path":95},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":97,"_path":98},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":100,"_path":101},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":103,"_path":104},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":106,"_path":107},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":109,"_path":110},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":112,"_path":113},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":115,"_path":116},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":118,"_path":119},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":121,"_path":122},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":124,"_path":125},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":127,"_path":128},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":130,"_path":131},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":133,"_path":134},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":136,"_path":137},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":139,"_path":140},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":142,"_path":143},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":145,"_path":146},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":148,"_path":149},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":151,"_path":152},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":154,"_path":155},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":157,"_path":158},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":160,"_path":161},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":163,"_path":164},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":166,"_path":167},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":169,"_path":170},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":172,"_path":173},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":175,"_path":176},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":178,"_path":179},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":181,"_path":182},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":184,"_path":185},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":187,"_path":188},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":190,"_path":191},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":193,"_path":194},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":196,"_path":197},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":199,"_path":200},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":202,"_path":203},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":205,"_path":206},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":208,"_path":209},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":211,"_path":212},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":214,"_path":215},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":217,"_path":218},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":220,"_path":221},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":223,"_path":224},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":226,"_path":227},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":229,"_path":230},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":232,"_path":233},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":235,"_path":236},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":238,"_path":239},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":241,"_path":242},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":244,"_path":245},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":247,"_path":248},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":250,"_path":251},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":253,"_path":254},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":256,"_path":257},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":259,"_path":260},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":262,"_path":263},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":265,"_path":266,"children":267},"源码实现","/code/source",[268,293,306],{"title":269,"_path":270,"children":271},"原生 api","/code/source/native-api",[272,275,278,281,284,287,290],{"title":273,"_path":274},"ajax","/code/source/native-api/ajax",{"title":276,"_path":277},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":279,"_path":280},"new 操作符","/code/source/native-api/new",{"title":282,"_path":283},"instanceof 关键字","/code/source/native-api/instanceof",{"title":285,"_path":286},"定时器","/code/source/native-api/timer",{"title":288,"_path":289},"JSON.stringify","/code/source/native-api/json-stringify",{"title":291,"_path":292},"Iterator 迭代器","/code/source/native-api/iterator",{"title":294,"_path":295,"children":296},"数组 Array","/code/source/array",[297,300,303],{"title":298,"_path":299},"数组去重","/code/source/array/remove-duplicate",{"title":301,"_path":302},"数组扁平化","/code/source/array/flat",{"title":304,"_path":305},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":307,"_path":308,"children":309},"字符串 String","/code/source/string",[310],{"title":311,"_path":312},"repeat()","/code/source/string/repeat",{"title":314,"_path":315,"children":316},"业务场景","/code/scene",[317],{"title":318,"_path":319},"顺序打印 url 并支持 retry","/code/scene/promise-url-retry",{"_path":218,"_dir":321,"_draft":322,"_partial":322,"_locale":323,"title":217,"description":324,"url":325,"body":326,"_type":1135,"_id":1136,"_source":1137,"_file":1138,"_extension":1139},"leetcode",false,"","给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。","https://leetcode.cn/problems/increasing-triplet-subsequence",{"type":327,"children":328,"toc":1129},"root",[329,336,341,346,385,390,421,426,456,461,476,481,487,492,498,1123],{"type":330,"tag":331,"props":332,"children":333},"element","p",{},[334],{"type":335,"value":324},"text",{"type":330,"tag":331,"props":337,"children":338},{},[339],{"type":335,"value":340},"如果存在这样的三元组下标 (i, j, k) 且满足 i \u003C j \u003C k ，使得 nums[i] \u003C nums[j] \u003C nums[k] ，返回 true ；否则，返回 false 。",{"type":330,"tag":331,"props":342,"children":343},{},[344],{"type":335,"value":345},"示例 1：",{"type":330,"tag":347,"props":348,"children":351},"pre",{"className":349,"code":350,"language":335,"meta":323,"style":323},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3,4,5]\n输出：true\n解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",[352],{"type":330,"tag":353,"props":354,"children":355},"code",{"__ignoreMap":323},[356,367,376],{"type":330,"tag":357,"props":358,"children":361},"span",{"class":359,"line":360},"line",1,[362],{"type":330,"tag":357,"props":363,"children":364},{},[365],{"type":335,"value":366},"输入：nums = [1,2,3,4,5]\n",{"type":330,"tag":357,"props":368,"children":370},{"class":359,"line":369},2,[371],{"type":330,"tag":357,"props":372,"children":373},{},[374],{"type":335,"value":375},"输出：true\n",{"type":330,"tag":357,"props":377,"children":379},{"class":359,"line":378},3,[380],{"type":330,"tag":357,"props":381,"children":382},{},[383],{"type":335,"value":384},"解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",{"type":330,"tag":331,"props":386,"children":387},{},[388],{"type":335,"value":389},"示例 2：",{"type":330,"tag":347,"props":391,"children":393},{"className":349,"code":392,"language":335,"meta":323,"style":323},"输入：nums = [5,4,3,2,1]\n输出：false\n解释：不存在满足题意的三元组\n",[394],{"type":330,"tag":353,"props":395,"children":396},{"__ignoreMap":323},[397,405,413],{"type":330,"tag":357,"props":398,"children":399},{"class":359,"line":360},[400],{"type":330,"tag":357,"props":401,"children":402},{},[403],{"type":335,"value":404},"输入：nums = [5,4,3,2,1]\n",{"type":330,"tag":357,"props":406,"children":407},{"class":359,"line":369},[408],{"type":330,"tag":357,"props":409,"children":410},{},[411],{"type":335,"value":412},"输出：false\n",{"type":330,"tag":357,"props":414,"children":415},{"class":359,"line":378},[416],{"type":330,"tag":357,"props":417,"children":418},{},[419],{"type":335,"value":420},"解释：不存在满足题意的三元组\n",{"type":330,"tag":331,"props":422,"children":423},{},[424],{"type":335,"value":425},"示例 3：",{"type":330,"tag":347,"props":427,"children":429},{"className":349,"code":428,"language":335,"meta":323,"style":323},"输入：nums = [2,1,5,0,4,6]\n输出：true\n解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",[430],{"type":330,"tag":353,"props":431,"children":432},{"__ignoreMap":323},[433,441,448],{"type":330,"tag":357,"props":434,"children":435},{"class":359,"line":360},[436],{"type":330,"tag":357,"props":437,"children":438},{},[439],{"type":335,"value":440},"输入：nums = [2,1,5,0,4,6]\n",{"type":330,"tag":357,"props":442,"children":443},{"class":359,"line":369},[444],{"type":330,"tag":357,"props":445,"children":446},{},[447],{"type":335,"value":375},{"type":330,"tag":357,"props":449,"children":450},{"class":359,"line":378},[451],{"type":330,"tag":357,"props":452,"children":453},{},[454],{"type":335,"value":455},"解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",{"type":330,"tag":331,"props":457,"children":458},{},[459],{"type":335,"value":460},"提示：",{"type":330,"tag":462,"props":463,"children":464},"ul",{},[465,471],{"type":330,"tag":466,"props":467,"children":468},"li",{},[469],{"type":335,"value":470},"1 \u003C= nums.length \u003C= 5 * 10^5",{"type":330,"tag":466,"props":472,"children":473},{},[474],{"type":335,"value":475},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":330,"tag":331,"props":477,"children":478},{},[479],{"type":335,"value":480},"进阶：你能实现时间复杂度为 O(n) ，空间复杂度为 O(1) 的解决方案吗？",{"type":330,"tag":482,"props":483,"children":485},"h2",{"id":484},"解题思路",[486],{"type":335,"value":484},{"type":330,"tag":482,"props":488,"children":490},{"id":489},"实现",[491],{"type":335,"value":489},{"type":330,"tag":493,"props":494,"children":496},"h3",{"id":495},"贪心",[497],{"type":335,"value":495},{"type":330,"tag":347,"props":499,"children":503},{"className":500,"code":501,"language":502,"meta":323,"style":323},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar increasingTriplet = function (nums) {\n  // 维护两个变量，代表递增序列中的第一个数、第二个数\n  let len = nums.length;\n  if (len \u003C 3) return false;\n  let first = nums[0];\n  let second = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i \u003C len; i++) {\n    if (nums[i] > second) {\n      // 找到第三个数\n      return true;\n    } else if (nums[i] > first) {\n      // 更新第二个数\n      second = nums[i];\n    } else {\n      // 更新第一个数\n      first = nums[i];\n    }\n  }\n  return false;\n};\n","js",[504],{"type":330,"tag":353,"props":505,"children":506},{"__ignoreMap":323},[507,516,542,559,568,612,621,662,711,751,786,852,896,905,923,974,983,1016,1033,1042,1075,1084,1093,1110],{"type":330,"tag":357,"props":508,"children":509},{"class":359,"line":360},[510],{"type":330,"tag":357,"props":511,"children":513},{"style":512},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[514],{"type":335,"value":515},"/**\n",{"type":330,"tag":357,"props":517,"children":518},{"class":359,"line":369},[519,524,530,536],{"type":330,"tag":357,"props":520,"children":521},{"style":512},[522],{"type":335,"value":523}," * ",{"type":330,"tag":357,"props":525,"children":527},{"style":526},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[528],{"type":335,"value":529},"@param",{"type":330,"tag":357,"props":531,"children":533},{"style":532},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[534],{"type":335,"value":535}," {number[]}",{"type":330,"tag":357,"props":537,"children":539},{"style":538},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[540],{"type":335,"value":541}," nums\n",{"type":330,"tag":357,"props":543,"children":544},{"class":359,"line":378},[545,549,554],{"type":330,"tag":357,"props":546,"children":547},{"style":512},[548],{"type":335,"value":523},{"type":330,"tag":357,"props":550,"children":551},{"style":526},[552],{"type":335,"value":553},"@return",{"type":330,"tag":357,"props":555,"children":556},{"style":532},[557],{"type":335,"value":558}," {boolean}\n",{"type":330,"tag":357,"props":560,"children":562},{"class":359,"line":561},4,[563],{"type":330,"tag":357,"props":564,"children":565},{"style":512},[566],{"type":335,"value":567}," */\n",{"type":330,"tag":357,"props":569,"children":571},{"class":359,"line":570},5,[572,578,584,590,595,601,607],{"type":330,"tag":357,"props":573,"children":575},{"style":574},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[576],{"type":335,"value":577},"var",{"type":330,"tag":357,"props":579,"children":581},{"style":580},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[582],{"type":335,"value":583}," increasingTriplet",{"type":330,"tag":357,"props":585,"children":587},{"style":586},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[588],{"type":335,"value":589}," =",{"type":330,"tag":357,"props":591,"children":592},{"style":574},[593],{"type":335,"value":594}," function",{"type":330,"tag":357,"props":596,"children":598},{"style":597},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[599],{"type":335,"value":600}," (",{"type":330,"tag":357,"props":602,"children":604},{"style":603},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[605],{"type":335,"value":606},"nums",{"type":330,"tag":357,"props":608,"children":609},{"style":597},[610],{"type":335,"value":611},") {\n",{"type":330,"tag":357,"props":613,"children":615},{"class":359,"line":614},6,[616],{"type":330,"tag":357,"props":617,"children":618},{"style":512},[619],{"type":335,"value":620},"  // 维护两个变量，代表递增序列中的第一个数、第二个数\n",{"type":330,"tag":357,"props":622,"children":624},{"class":359,"line":623},7,[625,630,636,640,645,651,656],{"type":330,"tag":357,"props":626,"children":627},{"style":574},[628],{"type":335,"value":629},"  let",{"type":330,"tag":357,"props":631,"children":633},{"style":632},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[634],{"type":335,"value":635}," len",{"type":330,"tag":357,"props":637,"children":638},{"style":586},[639],{"type":335,"value":589},{"type":330,"tag":357,"props":641,"children":642},{"style":632},[643],{"type":335,"value":644}," nums",{"type":330,"tag":357,"props":646,"children":648},{"style":647},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[649],{"type":335,"value":650},".",{"type":330,"tag":357,"props":652,"children":653},{"style":597},[654],{"type":335,"value":655},"length",{"type":330,"tag":357,"props":657,"children":659},{"style":658},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[660],{"type":335,"value":661},";\n",{"type":330,"tag":357,"props":663,"children":665},{"class":359,"line":664},8,[666,672,676,681,686,692,697,702,707],{"type":330,"tag":357,"props":667,"children":669},{"style":668},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[670],{"type":335,"value":671},"  if",{"type":330,"tag":357,"props":673,"children":674},{"style":597},[675],{"type":335,"value":600},{"type":330,"tag":357,"props":677,"children":678},{"style":632},[679],{"type":335,"value":680},"len",{"type":330,"tag":357,"props":682,"children":683},{"style":586},[684],{"type":335,"value":685}," \u003C",{"type":330,"tag":357,"props":687,"children":689},{"style":688},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[690],{"type":335,"value":691}," 3",{"type":330,"tag":357,"props":693,"children":694},{"style":597},[695],{"type":335,"value":696},") ",{"type":330,"tag":357,"props":698,"children":699},{"style":668},[700],{"type":335,"value":701},"return",{"type":330,"tag":357,"props":703,"children":704},{"style":688},[705],{"type":335,"value":706}," false",{"type":330,"tag":357,"props":708,"children":709},{"style":658},[710],{"type":335,"value":661},{"type":330,"tag":357,"props":712,"children":714},{"class":359,"line":713},9,[715,719,724,728,732,737,742,747],{"type":330,"tag":357,"props":716,"children":717},{"style":574},[718],{"type":335,"value":629},{"type":330,"tag":357,"props":720,"children":721},{"style":632},[722],{"type":335,"value":723}," first",{"type":330,"tag":357,"props":725,"children":726},{"style":586},[727],{"type":335,"value":589},{"type":330,"tag":357,"props":729,"children":730},{"style":632},[731],{"type":335,"value":644},{"type":330,"tag":357,"props":733,"children":734},{"style":597},[735],{"type":335,"value":736},"[",{"type":330,"tag":357,"props":738,"children":739},{"style":688},[740],{"type":335,"value":741},"0",{"type":330,"tag":357,"props":743,"children":744},{"style":597},[745],{"type":335,"value":746},"]",{"type":330,"tag":357,"props":748,"children":749},{"style":658},[750],{"type":335,"value":661},{"type":330,"tag":357,"props":752,"children":754},{"class":359,"line":753},10,[755,759,764,768,773,777,782],{"type":330,"tag":357,"props":756,"children":757},{"style":574},[758],{"type":335,"value":629},{"type":330,"tag":357,"props":760,"children":761},{"style":632},[762],{"type":335,"value":763}," second",{"type":330,"tag":357,"props":765,"children":766},{"style":586},[767],{"type":335,"value":589},{"type":330,"tag":357,"props":769,"children":770},{"style":632},[771],{"type":335,"value":772}," Number",{"type":330,"tag":357,"props":774,"children":775},{"style":647},[776],{"type":335,"value":650},{"type":330,"tag":357,"props":778,"children":779},{"style":597},[780],{"type":335,"value":781},"MAX_SAFE_INTEGER",{"type":330,"tag":357,"props":783,"children":784},{"style":658},[785],{"type":335,"value":661},{"type":330,"tag":357,"props":787,"children":789},{"class":359,"line":788},11,[790,795,799,804,809,813,818,823,827,831,835,839,843,848],{"type":330,"tag":357,"props":791,"children":792},{"style":668},[793],{"type":335,"value":794},"  for",{"type":330,"tag":357,"props":796,"children":797},{"style":597},[798],{"type":335,"value":600},{"type":330,"tag":357,"props":800,"children":801},{"style":574},[802],{"type":335,"value":803},"let",{"type":330,"tag":357,"props":805,"children":806},{"style":632},[807],{"type":335,"value":808}," i",{"type":330,"tag":357,"props":810,"children":811},{"style":586},[812],{"type":335,"value":589},{"type":330,"tag":357,"props":814,"children":815},{"style":688},[816],{"type":335,"value":817}," 0",{"type":330,"tag":357,"props":819,"children":820},{"style":658},[821],{"type":335,"value":822},";",{"type":330,"tag":357,"props":824,"children":825},{"style":632},[826],{"type":335,"value":808},{"type":330,"tag":357,"props":828,"children":829},{"style":586},[830],{"type":335,"value":685},{"type":330,"tag":357,"props":832,"children":833},{"style":632},[834],{"type":335,"value":635},{"type":330,"tag":357,"props":836,"children":837},{"style":658},[838],{"type":335,"value":822},{"type":330,"tag":357,"props":840,"children":841},{"style":632},[842],{"type":335,"value":808},{"type":330,"tag":357,"props":844,"children":845},{"style":586},[846],{"type":335,"value":847},"++",{"type":330,"tag":357,"props":849,"children":850},{"style":597},[851],{"type":335,"value":611},{"type":330,"tag":357,"props":853,"children":855},{"class":359,"line":854},12,[856,861,865,869,873,878,883,888,892],{"type":330,"tag":357,"props":857,"children":858},{"style":668},[859],{"type":335,"value":860},"    if",{"type":330,"tag":357,"props":862,"children":863},{"style":597},[864],{"type":335,"value":600},{"type":330,"tag":357,"props":866,"children":867},{"style":632},[868],{"type":335,"value":606},{"type":330,"tag":357,"props":870,"children":871},{"style":597},[872],{"type":335,"value":736},{"type":330,"tag":357,"props":874,"children":875},{"style":632},[876],{"type":335,"value":877},"i",{"type":330,"tag":357,"props":879,"children":880},{"style":597},[881],{"type":335,"value":882},"] ",{"type":330,"tag":357,"props":884,"children":885},{"style":586},[886],{"type":335,"value":887},">",{"type":330,"tag":357,"props":889,"children":890},{"style":632},[891],{"type":335,"value":763},{"type":330,"tag":357,"props":893,"children":894},{"style":597},[895],{"type":335,"value":611},{"type":330,"tag":357,"props":897,"children":899},{"class":359,"line":898},13,[900],{"type":330,"tag":357,"props":901,"children":902},{"style":512},[903],{"type":335,"value":904},"      // 找到第三个数\n",{"type":330,"tag":357,"props":906,"children":908},{"class":359,"line":907},14,[909,914,919],{"type":330,"tag":357,"props":910,"children":911},{"style":668},[912],{"type":335,"value":913},"      return",{"type":330,"tag":357,"props":915,"children":916},{"style":688},[917],{"type":335,"value":918}," true",{"type":330,"tag":357,"props":920,"children":921},{"style":658},[922],{"type":335,"value":661},{"type":330,"tag":357,"props":924,"children":926},{"class":359,"line":925},15,[927,932,937,942,946,950,954,958,962,966,970],{"type":330,"tag":357,"props":928,"children":929},{"style":597},[930],{"type":335,"value":931},"    } ",{"type":330,"tag":357,"props":933,"children":934},{"style":668},[935],{"type":335,"value":936},"else",{"type":330,"tag":357,"props":938,"children":939},{"style":668},[940],{"type":335,"value":941}," if",{"type":330,"tag":357,"props":943,"children":944},{"style":597},[945],{"type":335,"value":600},{"type":330,"tag":357,"props":947,"children":948},{"style":632},[949],{"type":335,"value":606},{"type":330,"tag":357,"props":951,"children":952},{"style":597},[953],{"type":335,"value":736},{"type":330,"tag":357,"props":955,"children":956},{"style":632},[957],{"type":335,"value":877},{"type":330,"tag":357,"props":959,"children":960},{"style":597},[961],{"type":335,"value":882},{"type":330,"tag":357,"props":963,"children":964},{"style":586},[965],{"type":335,"value":887},{"type":330,"tag":357,"props":967,"children":968},{"style":632},[969],{"type":335,"value":723},{"type":330,"tag":357,"props":971,"children":972},{"style":597},[973],{"type":335,"value":611},{"type":330,"tag":357,"props":975,"children":977},{"class":359,"line":976},16,[978],{"type":330,"tag":357,"props":979,"children":980},{"style":512},[981],{"type":335,"value":982},"      // 更新第二个数\n",{"type":330,"tag":357,"props":984,"children":986},{"class":359,"line":985},17,[987,992,996,1000,1004,1008,1012],{"type":330,"tag":357,"props":988,"children":989},{"style":632},[990],{"type":335,"value":991},"      second",{"type":330,"tag":357,"props":993,"children":994},{"style":586},[995],{"type":335,"value":589},{"type":330,"tag":357,"props":997,"children":998},{"style":632},[999],{"type":335,"value":644},{"type":330,"tag":357,"props":1001,"children":1002},{"style":597},[1003],{"type":335,"value":736},{"type":330,"tag":357,"props":1005,"children":1006},{"style":632},[1007],{"type":335,"value":877},{"type":330,"tag":357,"props":1009,"children":1010},{"style":597},[1011],{"type":335,"value":746},{"type":330,"tag":357,"props":1013,"children":1014},{"style":658},[1015],{"type":335,"value":661},{"type":330,"tag":357,"props":1017,"children":1019},{"class":359,"line":1018},18,[1020,1024,1028],{"type":330,"tag":357,"props":1021,"children":1022},{"style":597},[1023],{"type":335,"value":931},{"type":330,"tag":357,"props":1025,"children":1026},{"style":668},[1027],{"type":335,"value":936},{"type":330,"tag":357,"props":1029,"children":1030},{"style":597},[1031],{"type":335,"value":1032}," {\n",{"type":330,"tag":357,"props":1034,"children":1036},{"class":359,"line":1035},19,[1037],{"type":330,"tag":357,"props":1038,"children":1039},{"style":512},[1040],{"type":335,"value":1041},"      // 更新第一个数\n",{"type":330,"tag":357,"props":1043,"children":1045},{"class":359,"line":1044},20,[1046,1051,1055,1059,1063,1067,1071],{"type":330,"tag":357,"props":1047,"children":1048},{"style":632},[1049],{"type":335,"value":1050},"      first",{"type":330,"tag":357,"props":1052,"children":1053},{"style":586},[1054],{"type":335,"value":589},{"type":330,"tag":357,"props":1056,"children":1057},{"style":632},[1058],{"type":335,"value":644},{"type":330,"tag":357,"props":1060,"children":1061},{"style":597},[1062],{"type":335,"value":736},{"type":330,"tag":357,"props":1064,"children":1065},{"style":632},[1066],{"type":335,"value":877},{"type":330,"tag":357,"props":1068,"children":1069},{"style":597},[1070],{"type":335,"value":746},{"type":330,"tag":357,"props":1072,"children":1073},{"style":658},[1074],{"type":335,"value":661},{"type":330,"tag":357,"props":1076,"children":1078},{"class":359,"line":1077},21,[1079],{"type":330,"tag":357,"props":1080,"children":1081},{"style":597},[1082],{"type":335,"value":1083},"    }\n",{"type":330,"tag":357,"props":1085,"children":1087},{"class":359,"line":1086},22,[1088],{"type":330,"tag":357,"props":1089,"children":1090},{"style":597},[1091],{"type":335,"value":1092},"  }\n",{"type":330,"tag":357,"props":1094,"children":1096},{"class":359,"line":1095},23,[1097,1102,1106],{"type":330,"tag":357,"props":1098,"children":1099},{"style":668},[1100],{"type":335,"value":1101},"  return",{"type":330,"tag":357,"props":1103,"children":1104},{"style":688},[1105],{"type":335,"value":706},{"type":330,"tag":357,"props":1107,"children":1108},{"style":658},[1109],{"type":335,"value":661},{"type":330,"tag":357,"props":1111,"children":1113},{"class":359,"line":1112},24,[1114,1119],{"type":330,"tag":357,"props":1115,"children":1116},{"style":597},[1117],{"type":335,"value":1118},"}",{"type":330,"tag":357,"props":1120,"children":1121},{"style":658},[1122],{"type":335,"value":661},{"type":330,"tag":1124,"props":1125,"children":1126},"style",{},[1127],{"type":335,"value":1128},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":323,"searchDepth":570,"depth":570,"links":1130},[1131,1132],{"id":484,"depth":369,"text":484},{"id":489,"depth":369,"text":489,"children":1133},[1134],{"id":495,"depth":378,"text":495},"markdown","content:2.code:1.algorithm:2.leetcode:334.increasing-triplet-subsequence.md","content","2.code/1.algorithm/2.leetcode/334.increasing-triplet-subsequence.md","md",[1141,1143],{"_path":215,"title":214,"description":1142},"给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。",{"_path":221,"title":220,"description":1144},"编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。",1712112510526]