[{"data":1,"prerenderedAt":1346},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/sum-root-to-leaf-numbers":359,"/code/algorithm/leetcode/sum-root-to-leaf-numbers-surround":1341},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,269,318],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263,266],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.165 比较版本号","/code/algorithm/leetcode/compare-version-numbers",{"title":198,"_path":199},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":201,"_path":202},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":204,"_path":205},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":207,"_path":208},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":210,"_path":211},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":213,"_path":214},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":216,"_path":217},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":219,"_path":220},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":222,"_path":223},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":225,"_path":226},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":228,"_path":229},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":231,"_path":232},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":234,"_path":235},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":237,"_path":238},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":240,"_path":241},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":243,"_path":244},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":246,"_path":247},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":249,"_path":250},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":252,"_path":253},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":255,"_path":256},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":258,"_path":259},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":261,"_path":262},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":264,"_path":265},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":267,"_path":268},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":270,"_path":271,"children":272},"源码实现","/code/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/code/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/code/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/code/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/code/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/code/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/code/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/code/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/code/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/code/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/code/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/code/source/string",[315],{"title":316,"_path":317},"repeat()","/code/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/code/scene",[322,344,347,350,353,356],{"title":323,"_path":324,"children":325},"Promise","/code/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/code/scene/calcuate-object-bytes",{"title":348,"_path":349},"lodash.get","/code/scene/lodash-get",{"title":351,"_path":352},"记忆化请求函数 - 可缓存请求函数","/code/scene/memorize-request",{"title":354,"_path":355},"sku 算法实现","/code/scene/sku",{"title":357,"_path":358},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":169,"_dir":360,"_draft":361,"_partial":361,"_locale":362,"title":168,"description":363,"url":364,"body":365,"_type":1336,"_id":1337,"_source":1338,"_file":1339,"_extension":1340},"leetcode",false,"","给你一个二叉树的根节点 root ，树中每个节点都存放有一个 0 到 9 之间的数字。\n每条从根节点到叶节点的路径都代表一个数字：","https://leetcode.cn/problems/sum-root-to-leaf-numbers",{"type":366,"children":367,"toc":1330},"root",[368,375,380,385,390,399,465,470,478,541,546,566,572,577,584,1324],{"type":369,"tag":370,"props":371,"children":372},"element","p",{},[373],{"type":374,"value":363},"text",{"type":369,"tag":370,"props":376,"children":377},{},[378],{"type":374,"value":379},"例如，从根节点到叶节点的路径 1 -> 2 -> 3 表示数字 123 。\n计算从根节点到叶节点生成的 所有数字之和 。",{"type":369,"tag":370,"props":381,"children":382},{},[383],{"type":374,"value":384},"叶节点 是指没有子节点的节点。",{"type":369,"tag":370,"props":386,"children":387},{},[388],{"type":374,"value":389},"示例 1：",{"type":369,"tag":370,"props":391,"children":392},{},[393],{"type":369,"tag":394,"props":395,"children":398},"img",{"alt":396,"src":397},"num1tree","/img/code_leetcode_No.129_num1tree.png",[],{"type":369,"tag":400,"props":401,"children":404},"pre",{"className":402,"code":403,"language":374,"meta":362,"style":362},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：root = [1,2,3]\n输出：25\n解释：\n从根到叶子节点路径 1->2 代表数字 12\n从根到叶子节点路径 1->3 代表数字 13\n因此，数字总和 = 12 + 13 = 25\n",[405],{"type":369,"tag":406,"props":407,"children":408},"code",{"__ignoreMap":362},[409,420,429,438,447,456],{"type":369,"tag":410,"props":411,"children":414},"span",{"class":412,"line":413},"line",1,[415],{"type":369,"tag":410,"props":416,"children":417},{},[418],{"type":374,"value":419},"输入：root = [1,2,3]\n",{"type":369,"tag":410,"props":421,"children":423},{"class":412,"line":422},2,[424],{"type":369,"tag":410,"props":425,"children":426},{},[427],{"type":374,"value":428},"输出：25\n",{"type":369,"tag":410,"props":430,"children":432},{"class":412,"line":431},3,[433],{"type":369,"tag":410,"props":434,"children":435},{},[436],{"type":374,"value":437},"解释：\n",{"type":369,"tag":410,"props":439,"children":441},{"class":412,"line":440},4,[442],{"type":369,"tag":410,"props":443,"children":444},{},[445],{"type":374,"value":446},"从根到叶子节点路径 1->2 代表数字 12\n",{"type":369,"tag":410,"props":448,"children":450},{"class":412,"line":449},5,[451],{"type":369,"tag":410,"props":452,"children":453},{},[454],{"type":374,"value":455},"从根到叶子节点路径 1->3 代表数字 13\n",{"type":369,"tag":410,"props":457,"children":459},{"class":412,"line":458},6,[460],{"type":369,"tag":410,"props":461,"children":462},{},[463],{"type":374,"value":464},"因此，数字总和 = 12 + 13 = 25\n",{"type":369,"tag":370,"props":466,"children":467},{},[468],{"type":374,"value":469},"示例 2：",{"type":369,"tag":370,"props":471,"children":472},{},[473],{"type":369,"tag":394,"props":474,"children":477},{"alt":475,"src":476},"num2tree","/img/code_leetcode_No.129_num2tree.png",[],{"type":369,"tag":400,"props":479,"children":481},{"className":402,"code":480,"language":374,"meta":362,"style":362},"输入：root = [4,9,0,5,1]\n输出：1026\n解释：\n从根到叶子节点路径 4->9->5 代表数字 495\n从根到叶子节点路径 4->9->1 代表数字 491\n从根到叶子节点路径 4->0 代表数字 40\n因此，数字总和 = 495 + 491 + 40 = 1026\n",[482],{"type":369,"tag":406,"props":483,"children":484},{"__ignoreMap":362},[485,493,501,508,516,524,532],{"type":369,"tag":410,"props":486,"children":487},{"class":412,"line":413},[488],{"type":369,"tag":410,"props":489,"children":490},{},[491],{"type":374,"value":492},"输入：root = [4,9,0,5,1]\n",{"type":369,"tag":410,"props":494,"children":495},{"class":412,"line":422},[496],{"type":369,"tag":410,"props":497,"children":498},{},[499],{"type":374,"value":500},"输出：1026\n",{"type":369,"tag":410,"props":502,"children":503},{"class":412,"line":431},[504],{"type":369,"tag":410,"props":505,"children":506},{},[507],{"type":374,"value":437},{"type":369,"tag":410,"props":509,"children":510},{"class":412,"line":440},[511],{"type":369,"tag":410,"props":512,"children":513},{},[514],{"type":374,"value":515},"从根到叶子节点路径 4->9->5 代表数字 495\n",{"type":369,"tag":410,"props":517,"children":518},{"class":412,"line":449},[519],{"type":369,"tag":410,"props":520,"children":521},{},[522],{"type":374,"value":523},"从根到叶子节点路径 4->9->1 代表数字 491\n",{"type":369,"tag":410,"props":525,"children":526},{"class":412,"line":458},[527],{"type":369,"tag":410,"props":528,"children":529},{},[530],{"type":374,"value":531},"从根到叶子节点路径 4->0 代表数字 40\n",{"type":369,"tag":410,"props":533,"children":535},{"class":412,"line":534},7,[536],{"type":369,"tag":410,"props":537,"children":538},{},[539],{"type":374,"value":540},"因此，数字总和 = 495 + 491 + 40 = 1026\n",{"type":369,"tag":370,"props":542,"children":543},{},[544],{"type":374,"value":545},"提示：",{"type":369,"tag":547,"props":548,"children":549},"ul",{},[550,556,561],{"type":369,"tag":551,"props":552,"children":553},"li",{},[554],{"type":374,"value":555},"树中节点的数目在范围 [1, 1000] 内",{"type":369,"tag":551,"props":557,"children":558},{},[559],{"type":374,"value":560},"0 \u003C= Node.val \u003C= 9",{"type":369,"tag":551,"props":562,"children":563},{},[564],{"type":374,"value":565},"树的深度不超过 10",{"type":369,"tag":567,"props":568,"children":570},"h2",{"id":569},"解题思路",[571],{"type":374,"value":569},{"type":369,"tag":567,"props":573,"children":575},{"id":574},"实现",[576],{"type":374,"value":574},{"type":369,"tag":578,"props":579,"children":581},"h3",{"id":580},"深度优先搜素-dfs",[582],{"type":374,"value":583},"深度优先搜素 - dfs",{"type":369,"tag":400,"props":585,"children":589},{"className":586,"code":587,"language":588,"meta":362,"style":362},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar sumNumbers = function (root) {\n  const dfs = (node, prev) => {\n    if (node === null) return 0;\n    let sum = prev * 10 + node.val;\n    if (node.left === null && node.right === null) return sum;\n    return dfs(node.left, sum) + dfs(node.right, sum);\n  };\n  return dfs(root, 0);\n};\n","js",[590],{"type":369,"tag":406,"props":591,"children":592},{"__ignoreMap":362},[593,602,610,618,670,736,789,841,850,860,868,895,913,921,957,1008,1051,1105,1178,1261,1274,1311],{"type":369,"tag":410,"props":594,"children":595},{"class":412,"line":413},[596],{"type":369,"tag":410,"props":597,"children":599},{"style":598},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[600],{"type":374,"value":601},"/**\n",{"type":369,"tag":410,"props":603,"children":604},{"class":412,"line":422},[605],{"type":369,"tag":410,"props":606,"children":607},{"style":598},[608],{"type":374,"value":609}," * Definition for a binary tree node.\n",{"type":369,"tag":410,"props":611,"children":612},{"class":412,"line":431},[613],{"type":369,"tag":410,"props":614,"children":615},{"style":598},[616],{"type":374,"value":617}," */\n",{"type":369,"tag":410,"props":619,"children":620},{"class":412,"line":440},[621,627,633,639,645,651,656,660,665],{"type":369,"tag":410,"props":622,"children":624},{"style":623},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[625],{"type":374,"value":626},"function",{"type":369,"tag":410,"props":628,"children":630},{"style":629},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[631],{"type":374,"value":632}," TreeNode",{"type":369,"tag":410,"props":634,"children":636},{"style":635},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[637],{"type":374,"value":638},"(",{"type":369,"tag":410,"props":640,"children":642},{"style":641},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[643],{"type":374,"value":644},"val",{"type":369,"tag":410,"props":646,"children":648},{"style":647},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[649],{"type":374,"value":650},",",{"type":369,"tag":410,"props":652,"children":653},{"style":641},[654],{"type":374,"value":655}," left",{"type":369,"tag":410,"props":657,"children":658},{"style":647},[659],{"type":374,"value":650},{"type":369,"tag":410,"props":661,"children":662},{"style":641},[663],{"type":374,"value":664}," right",{"type":369,"tag":410,"props":666,"children":667},{"style":635},[668],{"type":374,"value":669},") {\n",{"type":369,"tag":410,"props":671,"children":672},{"class":412,"line":449},[673,679,685,690,696,701,706,712,717,722,727,731],{"type":369,"tag":410,"props":674,"children":676},{"style":675},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[677],{"type":374,"value":678},"  this",{"type":369,"tag":410,"props":680,"children":682},{"style":681},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[683],{"type":374,"value":684},".",{"type":369,"tag":410,"props":686,"children":688},{"style":687},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[689],{"type":374,"value":644},{"type":369,"tag":410,"props":691,"children":693},{"style":692},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[694],{"type":374,"value":695}," =",{"type":369,"tag":410,"props":697,"children":698},{"style":687},[699],{"type":374,"value":700}," val",{"type":369,"tag":410,"props":702,"children":703},{"style":692},[704],{"type":374,"value":705}," ===",{"type":369,"tag":410,"props":707,"children":709},{"style":708},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[710],{"type":374,"value":711}," undefined",{"type":369,"tag":410,"props":713,"children":714},{"style":692},[715],{"type":374,"value":716}," ?",{"type":369,"tag":410,"props":718,"children":719},{"style":708},[720],{"type":374,"value":721}," 0",{"type":369,"tag":410,"props":723,"children":724},{"style":692},[725],{"type":374,"value":726}," :",{"type":369,"tag":410,"props":728,"children":729},{"style":687},[730],{"type":374,"value":700},{"type":369,"tag":410,"props":732,"children":733},{"style":647},[734],{"type":374,"value":735},";\n",{"type":369,"tag":410,"props":737,"children":738},{"class":412,"line":458},[739,743,747,752,756,760,764,768,772,777,781,785],{"type":369,"tag":410,"props":740,"children":741},{"style":675},[742],{"type":374,"value":678},{"type":369,"tag":410,"props":744,"children":745},{"style":681},[746],{"type":374,"value":684},{"type":369,"tag":410,"props":748,"children":749},{"style":687},[750],{"type":374,"value":751},"left",{"type":369,"tag":410,"props":753,"children":754},{"style":692},[755],{"type":374,"value":695},{"type":369,"tag":410,"props":757,"children":758},{"style":687},[759],{"type":374,"value":655},{"type":369,"tag":410,"props":761,"children":762},{"style":692},[763],{"type":374,"value":705},{"type":369,"tag":410,"props":765,"children":766},{"style":708},[767],{"type":374,"value":711},{"type":369,"tag":410,"props":769,"children":770},{"style":692},[771],{"type":374,"value":716},{"type":369,"tag":410,"props":773,"children":774},{"style":708},[775],{"type":374,"value":776}," null",{"type":369,"tag":410,"props":778,"children":779},{"style":692},[780],{"type":374,"value":726},{"type":369,"tag":410,"props":782,"children":783},{"style":687},[784],{"type":374,"value":655},{"type":369,"tag":410,"props":786,"children":787},{"style":647},[788],{"type":374,"value":735},{"type":369,"tag":410,"props":790,"children":791},{"class":412,"line":534},[792,796,800,805,809,813,817,821,825,829,833,837],{"type":369,"tag":410,"props":793,"children":794},{"style":675},[795],{"type":374,"value":678},{"type":369,"tag":410,"props":797,"children":798},{"style":681},[799],{"type":374,"value":684},{"type":369,"tag":410,"props":801,"children":802},{"style":687},[803],{"type":374,"value":804},"right",{"type":369,"tag":410,"props":806,"children":807},{"style":692},[808],{"type":374,"value":695},{"type":369,"tag":410,"props":810,"children":811},{"style":687},[812],{"type":374,"value":664},{"type":369,"tag":410,"props":814,"children":815},{"style":692},[816],{"type":374,"value":705},{"type":369,"tag":410,"props":818,"children":819},{"style":708},[820],{"type":374,"value":711},{"type":369,"tag":410,"props":822,"children":823},{"style":692},[824],{"type":374,"value":716},{"type":369,"tag":410,"props":826,"children":827},{"style":708},[828],{"type":374,"value":776},{"type":369,"tag":410,"props":830,"children":831},{"style":692},[832],{"type":374,"value":726},{"type":369,"tag":410,"props":834,"children":835},{"style":687},[836],{"type":374,"value":664},{"type":369,"tag":410,"props":838,"children":839},{"style":647},[840],{"type":374,"value":735},{"type":369,"tag":410,"props":842,"children":844},{"class":412,"line":843},8,[845],{"type":369,"tag":410,"props":846,"children":847},{"style":635},[848],{"type":374,"value":849},"}\n",{"type":369,"tag":410,"props":851,"children":853},{"class":412,"line":852},9,[854],{"type":369,"tag":410,"props":855,"children":857},{"emptyLinePlaceholder":856},true,[858],{"type":374,"value":859},"\n",{"type":369,"tag":410,"props":861,"children":863},{"class":412,"line":862},10,[864],{"type":369,"tag":410,"props":865,"children":866},{"style":598},[867],{"type":374,"value":601},{"type":369,"tag":410,"props":869,"children":871},{"class":412,"line":870},11,[872,877,883,889],{"type":369,"tag":410,"props":873,"children":874},{"style":598},[875],{"type":374,"value":876}," * ",{"type":369,"tag":410,"props":878,"children":880},{"style":879},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[881],{"type":374,"value":882},"@param",{"type":369,"tag":410,"props":884,"children":886},{"style":885},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[887],{"type":374,"value":888}," {TreeNode}",{"type":369,"tag":410,"props":890,"children":892},{"style":891},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[893],{"type":374,"value":894}," root\n",{"type":369,"tag":410,"props":896,"children":898},{"class":412,"line":897},12,[899,903,908],{"type":369,"tag":410,"props":900,"children":901},{"style":598},[902],{"type":374,"value":876},{"type":369,"tag":410,"props":904,"children":905},{"style":879},[906],{"type":374,"value":907},"@return",{"type":369,"tag":410,"props":909,"children":910},{"style":885},[911],{"type":374,"value":912}," {number}\n",{"type":369,"tag":410,"props":914,"children":916},{"class":412,"line":915},13,[917],{"type":369,"tag":410,"props":918,"children":919},{"style":598},[920],{"type":374,"value":617},{"type":369,"tag":410,"props":922,"children":924},{"class":412,"line":923},14,[925,930,935,939,944,949,953],{"type":369,"tag":410,"props":926,"children":927},{"style":623},[928],{"type":374,"value":929},"var",{"type":369,"tag":410,"props":931,"children":932},{"style":629},[933],{"type":374,"value":934}," sumNumbers",{"type":369,"tag":410,"props":936,"children":937},{"style":692},[938],{"type":374,"value":695},{"type":369,"tag":410,"props":940,"children":941},{"style":623},[942],{"type":374,"value":943}," function",{"type":369,"tag":410,"props":945,"children":946},{"style":635},[947],{"type":374,"value":948}," (",{"type":369,"tag":410,"props":950,"children":951},{"style":641},[952],{"type":374,"value":366},{"type":369,"tag":410,"props":954,"children":955},{"style":635},[956],{"type":374,"value":669},{"type":369,"tag":410,"props":958,"children":960},{"class":412,"line":959},15,[961,966,971,975,979,984,988,993,998,1003],{"type":369,"tag":410,"props":962,"children":963},{"style":623},[964],{"type":374,"value":965},"  const",{"type":369,"tag":410,"props":967,"children":968},{"style":629},[969],{"type":374,"value":970}," dfs",{"type":369,"tag":410,"props":972,"children":973},{"style":692},[974],{"type":374,"value":695},{"type":369,"tag":410,"props":976,"children":977},{"style":635},[978],{"type":374,"value":948},{"type":369,"tag":410,"props":980,"children":981},{"style":641},[982],{"type":374,"value":983},"node",{"type":369,"tag":410,"props":985,"children":986},{"style":647},[987],{"type":374,"value":650},{"type":369,"tag":410,"props":989,"children":990},{"style":641},[991],{"type":374,"value":992}," prev",{"type":369,"tag":410,"props":994,"children":995},{"style":635},[996],{"type":374,"value":997},") ",{"type":369,"tag":410,"props":999,"children":1000},{"style":623},[1001],{"type":374,"value":1002},"=>",{"type":369,"tag":410,"props":1004,"children":1005},{"style":635},[1006],{"type":374,"value":1007}," {\n",{"type":369,"tag":410,"props":1009,"children":1011},{"class":412,"line":1010},16,[1012,1018,1022,1026,1030,1034,1038,1043,1047],{"type":369,"tag":410,"props":1013,"children":1015},{"style":1014},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[1016],{"type":374,"value":1017},"    if",{"type":369,"tag":410,"props":1019,"children":1020},{"style":635},[1021],{"type":374,"value":948},{"type":369,"tag":410,"props":1023,"children":1024},{"style":687},[1025],{"type":374,"value":983},{"type":369,"tag":410,"props":1027,"children":1028},{"style":692},[1029],{"type":374,"value":705},{"type":369,"tag":410,"props":1031,"children":1032},{"style":708},[1033],{"type":374,"value":776},{"type":369,"tag":410,"props":1035,"children":1036},{"style":635},[1037],{"type":374,"value":997},{"type":369,"tag":410,"props":1039,"children":1040},{"style":1014},[1041],{"type":374,"value":1042},"return",{"type":369,"tag":410,"props":1044,"children":1045},{"style":708},[1046],{"type":374,"value":721},{"type":369,"tag":410,"props":1048,"children":1049},{"style":647},[1050],{"type":374,"value":735},{"type":369,"tag":410,"props":1052,"children":1054},{"class":412,"line":1053},17,[1055,1060,1065,1069,1073,1078,1083,1088,1093,1097,1101],{"type":369,"tag":410,"props":1056,"children":1057},{"style":623},[1058],{"type":374,"value":1059},"    let",{"type":369,"tag":410,"props":1061,"children":1062},{"style":687},[1063],{"type":374,"value":1064}," sum",{"type":369,"tag":410,"props":1066,"children":1067},{"style":692},[1068],{"type":374,"value":695},{"type":369,"tag":410,"props":1070,"children":1071},{"style":687},[1072],{"type":374,"value":992},{"type":369,"tag":410,"props":1074,"children":1075},{"style":692},[1076],{"type":374,"value":1077}," *",{"type":369,"tag":410,"props":1079,"children":1080},{"style":708},[1081],{"type":374,"value":1082}," 10",{"type":369,"tag":410,"props":1084,"children":1085},{"style":692},[1086],{"type":374,"value":1087}," +",{"type":369,"tag":410,"props":1089,"children":1090},{"style":687},[1091],{"type":374,"value":1092}," node",{"type":369,"tag":410,"props":1094,"children":1095},{"style":681},[1096],{"type":374,"value":684},{"type":369,"tag":410,"props":1098,"children":1099},{"style":687},[1100],{"type":374,"value":644},{"type":369,"tag":410,"props":1102,"children":1103},{"style":647},[1104],{"type":374,"value":735},{"type":369,"tag":410,"props":1106,"children":1108},{"class":412,"line":1107},18,[1109,1113,1117,1121,1125,1129,1133,1137,1142,1146,1150,1154,1158,1162,1166,1170,1174],{"type":369,"tag":410,"props":1110,"children":1111},{"style":1014},[1112],{"type":374,"value":1017},{"type":369,"tag":410,"props":1114,"children":1115},{"style":635},[1116],{"type":374,"value":948},{"type":369,"tag":410,"props":1118,"children":1119},{"style":687},[1120],{"type":374,"value":983},{"type":369,"tag":410,"props":1122,"children":1123},{"style":681},[1124],{"type":374,"value":684},{"type":369,"tag":410,"props":1126,"children":1127},{"style":687},[1128],{"type":374,"value":751},{"type":369,"tag":410,"props":1130,"children":1131},{"style":692},[1132],{"type":374,"value":705},{"type":369,"tag":410,"props":1134,"children":1135},{"style":708},[1136],{"type":374,"value":776},{"type":369,"tag":410,"props":1138,"children":1139},{"style":692},[1140],{"type":374,"value":1141}," &&",{"type":369,"tag":410,"props":1143,"children":1144},{"style":687},[1145],{"type":374,"value":1092},{"type":369,"tag":410,"props":1147,"children":1148},{"style":681},[1149],{"type":374,"value":684},{"type":369,"tag":410,"props":1151,"children":1152},{"style":687},[1153],{"type":374,"value":804},{"type":369,"tag":410,"props":1155,"children":1156},{"style":692},[1157],{"type":374,"value":705},{"type":369,"tag":410,"props":1159,"children":1160},{"style":708},[1161],{"type":374,"value":776},{"type":369,"tag":410,"props":1163,"children":1164},{"style":635},[1165],{"type":374,"value":997},{"type":369,"tag":410,"props":1167,"children":1168},{"style":1014},[1169],{"type":374,"value":1042},{"type":369,"tag":410,"props":1171,"children":1172},{"style":687},[1173],{"type":374,"value":1064},{"type":369,"tag":410,"props":1175,"children":1176},{"style":647},[1177],{"type":374,"value":735},{"type":369,"tag":410,"props":1179,"children":1181},{"class":412,"line":1180},19,[1182,1187,1191,1195,1199,1203,1207,1211,1215,1219,1224,1228,1232,1236,1240,1244,1248,1252,1257],{"type":369,"tag":410,"props":1183,"children":1184},{"style":1014},[1185],{"type":374,"value":1186},"    return",{"type":369,"tag":410,"props":1188,"children":1189},{"style":629},[1190],{"type":374,"value":970},{"type":369,"tag":410,"props":1192,"children":1193},{"style":635},[1194],{"type":374,"value":638},{"type":369,"tag":410,"props":1196,"children":1197},{"style":687},[1198],{"type":374,"value":983},{"type":369,"tag":410,"props":1200,"children":1201},{"style":681},[1202],{"type":374,"value":684},{"type":369,"tag":410,"props":1204,"children":1205},{"style":687},[1206],{"type":374,"value":751},{"type":369,"tag":410,"props":1208,"children":1209},{"style":647},[1210],{"type":374,"value":650},{"type":369,"tag":410,"props":1212,"children":1213},{"style":687},[1214],{"type":374,"value":1064},{"type":369,"tag":410,"props":1216,"children":1217},{"style":635},[1218],{"type":374,"value":997},{"type":369,"tag":410,"props":1220,"children":1221},{"style":692},[1222],{"type":374,"value":1223},"+",{"type":369,"tag":410,"props":1225,"children":1226},{"style":629},[1227],{"type":374,"value":970},{"type":369,"tag":410,"props":1229,"children":1230},{"style":635},[1231],{"type":374,"value":638},{"type":369,"tag":410,"props":1233,"children":1234},{"style":687},[1235],{"type":374,"value":983},{"type":369,"tag":410,"props":1237,"children":1238},{"style":681},[1239],{"type":374,"value":684},{"type":369,"tag":410,"props":1241,"children":1242},{"style":687},[1243],{"type":374,"value":804},{"type":369,"tag":410,"props":1245,"children":1246},{"style":647},[1247],{"type":374,"value":650},{"type":369,"tag":410,"props":1249,"children":1250},{"style":687},[1251],{"type":374,"value":1064},{"type":369,"tag":410,"props":1253,"children":1254},{"style":635},[1255],{"type":374,"value":1256},")",{"type":369,"tag":410,"props":1258,"children":1259},{"style":647},[1260],{"type":374,"value":735},{"type":369,"tag":410,"props":1262,"children":1264},{"class":412,"line":1263},20,[1265,1270],{"type":369,"tag":410,"props":1266,"children":1267},{"style":635},[1268],{"type":374,"value":1269},"  }",{"type":369,"tag":410,"props":1271,"children":1272},{"style":647},[1273],{"type":374,"value":735},{"type":369,"tag":410,"props":1275,"children":1277},{"class":412,"line":1276},21,[1278,1283,1287,1291,1295,1299,1303,1307],{"type":369,"tag":410,"props":1279,"children":1280},{"style":1014},[1281],{"type":374,"value":1282},"  return",{"type":369,"tag":410,"props":1284,"children":1285},{"style":629},[1286],{"type":374,"value":970},{"type":369,"tag":410,"props":1288,"children":1289},{"style":635},[1290],{"type":374,"value":638},{"type":369,"tag":410,"props":1292,"children":1293},{"style":687},[1294],{"type":374,"value":366},{"type":369,"tag":410,"props":1296,"children":1297},{"style":647},[1298],{"type":374,"value":650},{"type":369,"tag":410,"props":1300,"children":1301},{"style":708},[1302],{"type":374,"value":721},{"type":369,"tag":410,"props":1304,"children":1305},{"style":635},[1306],{"type":374,"value":1256},{"type":369,"tag":410,"props":1308,"children":1309},{"style":647},[1310],{"type":374,"value":735},{"type":369,"tag":410,"props":1312,"children":1314},{"class":412,"line":1313},22,[1315,1320],{"type":369,"tag":410,"props":1316,"children":1317},{"style":635},[1318],{"type":374,"value":1319},"}",{"type":369,"tag":410,"props":1321,"children":1322},{"style":647},[1323],{"type":374,"value":735},{"type":369,"tag":1325,"props":1326,"children":1327},"style",{},[1328],{"type":374,"value":1329},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":362,"searchDepth":449,"depth":449,"links":1331},[1332,1333],{"id":569,"depth":422,"text":569},{"id":574,"depth":422,"text":574,"children":1334},[1335],{"id":580,"depth":431,"text":583},"markdown","content:2.code:1.algorithm:3.leetcode:129.sum-root-to-leaf-numbers.md","content","2.code/1.algorithm/3.leetcode/129.sum-root-to-leaf-numbers.md","md",[1342,1344],{"_path":166,"title":165,"description":1343},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",{"_path":172,"title":171,"description":1345},"给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。",1712748637717]