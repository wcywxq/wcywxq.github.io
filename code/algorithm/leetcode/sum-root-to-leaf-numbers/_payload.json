[{"data":1,"prerenderedAt":1309},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/sum-root-to-leaf-numbers":322,"/code/algorithm/leetcode/sum-root-to-leaf-numbers-surround":1304},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319],{"title":320,"_path":321},"顺序打印 url 并支持 retry","/code/scene/promise-url-retry",{"_path":169,"_dir":323,"_draft":324,"_partial":324,"_locale":325,"title":168,"description":326,"url":327,"body":328,"_type":1299,"_id":1300,"_source":1301,"_file":1302,"_extension":1303},"leetcode",false,"","给你一个二叉树的根节点 root ，树中每个节点都存放有一个 0 到 9 之间的数字。\n每条从根节点到叶节点的路径都代表一个数字：","https://leetcode.cn/problems/sum-root-to-leaf-numbers",{"type":329,"children":330,"toc":1293},"root",[331,338,343,348,353,362,428,433,441,504,509,529,535,540,547,1287],{"type":332,"tag":333,"props":334,"children":335},"element","p",{},[336],{"type":337,"value":326},"text",{"type":332,"tag":333,"props":339,"children":340},{},[341],{"type":337,"value":342},"例如，从根节点到叶节点的路径 1 -> 2 -> 3 表示数字 123 。\n计算从根节点到叶节点生成的 所有数字之和 。",{"type":332,"tag":333,"props":344,"children":345},{},[346],{"type":337,"value":347},"叶节点 是指没有子节点的节点。",{"type":332,"tag":333,"props":349,"children":350},{},[351],{"type":337,"value":352},"示例 1：",{"type":332,"tag":333,"props":354,"children":355},{},[356],{"type":332,"tag":357,"props":358,"children":361},"img",{"alt":359,"src":360},"num1tree","/img/code_leetcode_No.129_num1tree.png",[],{"type":332,"tag":363,"props":364,"children":367},"pre",{"className":365,"code":366,"language":337,"meta":325,"style":325},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：root = [1,2,3]\n输出：25\n解释：\n从根到叶子节点路径 1->2 代表数字 12\n从根到叶子节点路径 1->3 代表数字 13\n因此，数字总和 = 12 + 13 = 25\n",[368],{"type":332,"tag":369,"props":370,"children":371},"code",{"__ignoreMap":325},[372,383,392,401,410,419],{"type":332,"tag":373,"props":374,"children":377},"span",{"class":375,"line":376},"line",1,[378],{"type":332,"tag":373,"props":379,"children":380},{},[381],{"type":337,"value":382},"输入：root = [1,2,3]\n",{"type":332,"tag":373,"props":384,"children":386},{"class":375,"line":385},2,[387],{"type":332,"tag":373,"props":388,"children":389},{},[390],{"type":337,"value":391},"输出：25\n",{"type":332,"tag":373,"props":393,"children":395},{"class":375,"line":394},3,[396],{"type":332,"tag":373,"props":397,"children":398},{},[399],{"type":337,"value":400},"解释：\n",{"type":332,"tag":373,"props":402,"children":404},{"class":375,"line":403},4,[405],{"type":332,"tag":373,"props":406,"children":407},{},[408],{"type":337,"value":409},"从根到叶子节点路径 1->2 代表数字 12\n",{"type":332,"tag":373,"props":411,"children":413},{"class":375,"line":412},5,[414],{"type":332,"tag":373,"props":415,"children":416},{},[417],{"type":337,"value":418},"从根到叶子节点路径 1->3 代表数字 13\n",{"type":332,"tag":373,"props":420,"children":422},{"class":375,"line":421},6,[423],{"type":332,"tag":373,"props":424,"children":425},{},[426],{"type":337,"value":427},"因此，数字总和 = 12 + 13 = 25\n",{"type":332,"tag":333,"props":429,"children":430},{},[431],{"type":337,"value":432},"示例 2：",{"type":332,"tag":333,"props":434,"children":435},{},[436],{"type":332,"tag":357,"props":437,"children":440},{"alt":438,"src":439},"num2tree","/img/code_leetcode_No.129_num2tree.png",[],{"type":332,"tag":363,"props":442,"children":444},{"className":365,"code":443,"language":337,"meta":325,"style":325},"输入：root = [4,9,0,5,1]\n输出：1026\n解释：\n从根到叶子节点路径 4->9->5 代表数字 495\n从根到叶子节点路径 4->9->1 代表数字 491\n从根到叶子节点路径 4->0 代表数字 40\n因此，数字总和 = 495 + 491 + 40 = 1026\n",[445],{"type":332,"tag":369,"props":446,"children":447},{"__ignoreMap":325},[448,456,464,471,479,487,495],{"type":332,"tag":373,"props":449,"children":450},{"class":375,"line":376},[451],{"type":332,"tag":373,"props":452,"children":453},{},[454],{"type":337,"value":455},"输入：root = [4,9,0,5,1]\n",{"type":332,"tag":373,"props":457,"children":458},{"class":375,"line":385},[459],{"type":332,"tag":373,"props":460,"children":461},{},[462],{"type":337,"value":463},"输出：1026\n",{"type":332,"tag":373,"props":465,"children":466},{"class":375,"line":394},[467],{"type":332,"tag":373,"props":468,"children":469},{},[470],{"type":337,"value":400},{"type":332,"tag":373,"props":472,"children":473},{"class":375,"line":403},[474],{"type":332,"tag":373,"props":475,"children":476},{},[477],{"type":337,"value":478},"从根到叶子节点路径 4->9->5 代表数字 495\n",{"type":332,"tag":373,"props":480,"children":481},{"class":375,"line":412},[482],{"type":332,"tag":373,"props":483,"children":484},{},[485],{"type":337,"value":486},"从根到叶子节点路径 4->9->1 代表数字 491\n",{"type":332,"tag":373,"props":488,"children":489},{"class":375,"line":421},[490],{"type":332,"tag":373,"props":491,"children":492},{},[493],{"type":337,"value":494},"从根到叶子节点路径 4->0 代表数字 40\n",{"type":332,"tag":373,"props":496,"children":498},{"class":375,"line":497},7,[499],{"type":332,"tag":373,"props":500,"children":501},{},[502],{"type":337,"value":503},"因此，数字总和 = 495 + 491 + 40 = 1026\n",{"type":332,"tag":333,"props":505,"children":506},{},[507],{"type":337,"value":508},"提示：",{"type":332,"tag":510,"props":511,"children":512},"ul",{},[513,519,524],{"type":332,"tag":514,"props":515,"children":516},"li",{},[517],{"type":337,"value":518},"树中节点的数目在范围 [1, 1000] 内",{"type":332,"tag":514,"props":520,"children":521},{},[522],{"type":337,"value":523},"0 \u003C= Node.val \u003C= 9",{"type":332,"tag":514,"props":525,"children":526},{},[527],{"type":337,"value":528},"树的深度不超过 10",{"type":332,"tag":530,"props":531,"children":533},"h2",{"id":532},"解题思路",[534],{"type":337,"value":532},{"type":332,"tag":530,"props":536,"children":538},{"id":537},"实现",[539],{"type":337,"value":537},{"type":332,"tag":541,"props":542,"children":544},"h3",{"id":543},"深度优先搜素-dfs",[545],{"type":337,"value":546},"深度优先搜素 - dfs",{"type":332,"tag":363,"props":548,"children":552},{"className":549,"code":550,"language":551,"meta":325,"style":325},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar sumNumbers = function (root) {\n  const dfs = (node, prev) => {\n    if (node === null) return 0;\n    let sum = prev * 10 + node.val;\n    if (node.left === null && node.right === null) return sum;\n    return dfs(node.left, sum) + dfs(node.right, sum);\n  };\n  return dfs(root, 0);\n};\n","js",[553],{"type":332,"tag":369,"props":554,"children":555},{"__ignoreMap":325},[556,565,573,581,633,699,752,804,813,823,831,858,876,884,920,971,1014,1068,1141,1224,1237,1274],{"type":332,"tag":373,"props":557,"children":558},{"class":375,"line":376},[559],{"type":332,"tag":373,"props":560,"children":562},{"style":561},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[563],{"type":337,"value":564},"/**\n",{"type":332,"tag":373,"props":566,"children":567},{"class":375,"line":385},[568],{"type":332,"tag":373,"props":569,"children":570},{"style":561},[571],{"type":337,"value":572}," * Definition for a binary tree node.\n",{"type":332,"tag":373,"props":574,"children":575},{"class":375,"line":394},[576],{"type":332,"tag":373,"props":577,"children":578},{"style":561},[579],{"type":337,"value":580}," */\n",{"type":332,"tag":373,"props":582,"children":583},{"class":375,"line":403},[584,590,596,602,608,614,619,623,628],{"type":332,"tag":373,"props":585,"children":587},{"style":586},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[588],{"type":337,"value":589},"function",{"type":332,"tag":373,"props":591,"children":593},{"style":592},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[594],{"type":337,"value":595}," TreeNode",{"type":332,"tag":373,"props":597,"children":599},{"style":598},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[600],{"type":337,"value":601},"(",{"type":332,"tag":373,"props":603,"children":605},{"style":604},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[606],{"type":337,"value":607},"val",{"type":332,"tag":373,"props":609,"children":611},{"style":610},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[612],{"type":337,"value":613},",",{"type":332,"tag":373,"props":615,"children":616},{"style":604},[617],{"type":337,"value":618}," left",{"type":332,"tag":373,"props":620,"children":621},{"style":610},[622],{"type":337,"value":613},{"type":332,"tag":373,"props":624,"children":625},{"style":604},[626],{"type":337,"value":627}," right",{"type":332,"tag":373,"props":629,"children":630},{"style":598},[631],{"type":337,"value":632},") {\n",{"type":332,"tag":373,"props":634,"children":635},{"class":375,"line":412},[636,642,648,653,659,664,669,675,680,685,690,694],{"type":332,"tag":373,"props":637,"children":639},{"style":638},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[640],{"type":337,"value":641},"  this",{"type":332,"tag":373,"props":643,"children":645},{"style":644},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[646],{"type":337,"value":647},".",{"type":332,"tag":373,"props":649,"children":651},{"style":650},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[652],{"type":337,"value":607},{"type":332,"tag":373,"props":654,"children":656},{"style":655},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[657],{"type":337,"value":658}," =",{"type":332,"tag":373,"props":660,"children":661},{"style":650},[662],{"type":337,"value":663}," val",{"type":332,"tag":373,"props":665,"children":666},{"style":655},[667],{"type":337,"value":668}," ===",{"type":332,"tag":373,"props":670,"children":672},{"style":671},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[673],{"type":337,"value":674}," undefined",{"type":332,"tag":373,"props":676,"children":677},{"style":655},[678],{"type":337,"value":679}," ?",{"type":332,"tag":373,"props":681,"children":682},{"style":671},[683],{"type":337,"value":684}," 0",{"type":332,"tag":373,"props":686,"children":687},{"style":655},[688],{"type":337,"value":689}," :",{"type":332,"tag":373,"props":691,"children":692},{"style":650},[693],{"type":337,"value":663},{"type":332,"tag":373,"props":695,"children":696},{"style":610},[697],{"type":337,"value":698},";\n",{"type":332,"tag":373,"props":700,"children":701},{"class":375,"line":421},[702,706,710,715,719,723,727,731,735,740,744,748],{"type":332,"tag":373,"props":703,"children":704},{"style":638},[705],{"type":337,"value":641},{"type":332,"tag":373,"props":707,"children":708},{"style":644},[709],{"type":337,"value":647},{"type":332,"tag":373,"props":711,"children":712},{"style":650},[713],{"type":337,"value":714},"left",{"type":332,"tag":373,"props":716,"children":717},{"style":655},[718],{"type":337,"value":658},{"type":332,"tag":373,"props":720,"children":721},{"style":650},[722],{"type":337,"value":618},{"type":332,"tag":373,"props":724,"children":725},{"style":655},[726],{"type":337,"value":668},{"type":332,"tag":373,"props":728,"children":729},{"style":671},[730],{"type":337,"value":674},{"type":332,"tag":373,"props":732,"children":733},{"style":655},[734],{"type":337,"value":679},{"type":332,"tag":373,"props":736,"children":737},{"style":671},[738],{"type":337,"value":739}," null",{"type":332,"tag":373,"props":741,"children":742},{"style":655},[743],{"type":337,"value":689},{"type":332,"tag":373,"props":745,"children":746},{"style":650},[747],{"type":337,"value":618},{"type":332,"tag":373,"props":749,"children":750},{"style":610},[751],{"type":337,"value":698},{"type":332,"tag":373,"props":753,"children":754},{"class":375,"line":497},[755,759,763,768,772,776,780,784,788,792,796,800],{"type":332,"tag":373,"props":756,"children":757},{"style":638},[758],{"type":337,"value":641},{"type":332,"tag":373,"props":760,"children":761},{"style":644},[762],{"type":337,"value":647},{"type":332,"tag":373,"props":764,"children":765},{"style":650},[766],{"type":337,"value":767},"right",{"type":332,"tag":373,"props":769,"children":770},{"style":655},[771],{"type":337,"value":658},{"type":332,"tag":373,"props":773,"children":774},{"style":650},[775],{"type":337,"value":627},{"type":332,"tag":373,"props":777,"children":778},{"style":655},[779],{"type":337,"value":668},{"type":332,"tag":373,"props":781,"children":782},{"style":671},[783],{"type":337,"value":674},{"type":332,"tag":373,"props":785,"children":786},{"style":655},[787],{"type":337,"value":679},{"type":332,"tag":373,"props":789,"children":790},{"style":671},[791],{"type":337,"value":739},{"type":332,"tag":373,"props":793,"children":794},{"style":655},[795],{"type":337,"value":689},{"type":332,"tag":373,"props":797,"children":798},{"style":650},[799],{"type":337,"value":627},{"type":332,"tag":373,"props":801,"children":802},{"style":610},[803],{"type":337,"value":698},{"type":332,"tag":373,"props":805,"children":807},{"class":375,"line":806},8,[808],{"type":332,"tag":373,"props":809,"children":810},{"style":598},[811],{"type":337,"value":812},"}\n",{"type":332,"tag":373,"props":814,"children":816},{"class":375,"line":815},9,[817],{"type":332,"tag":373,"props":818,"children":820},{"emptyLinePlaceholder":819},true,[821],{"type":337,"value":822},"\n",{"type":332,"tag":373,"props":824,"children":826},{"class":375,"line":825},10,[827],{"type":332,"tag":373,"props":828,"children":829},{"style":561},[830],{"type":337,"value":564},{"type":332,"tag":373,"props":832,"children":834},{"class":375,"line":833},11,[835,840,846,852],{"type":332,"tag":373,"props":836,"children":837},{"style":561},[838],{"type":337,"value":839}," * ",{"type":332,"tag":373,"props":841,"children":843},{"style":842},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[844],{"type":337,"value":845},"@param",{"type":332,"tag":373,"props":847,"children":849},{"style":848},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[850],{"type":337,"value":851}," {TreeNode}",{"type":332,"tag":373,"props":853,"children":855},{"style":854},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[856],{"type":337,"value":857}," root\n",{"type":332,"tag":373,"props":859,"children":861},{"class":375,"line":860},12,[862,866,871],{"type":332,"tag":373,"props":863,"children":864},{"style":561},[865],{"type":337,"value":839},{"type":332,"tag":373,"props":867,"children":868},{"style":842},[869],{"type":337,"value":870},"@return",{"type":332,"tag":373,"props":872,"children":873},{"style":848},[874],{"type":337,"value":875}," {number}\n",{"type":332,"tag":373,"props":877,"children":879},{"class":375,"line":878},13,[880],{"type":332,"tag":373,"props":881,"children":882},{"style":561},[883],{"type":337,"value":580},{"type":332,"tag":373,"props":885,"children":887},{"class":375,"line":886},14,[888,893,898,902,907,912,916],{"type":332,"tag":373,"props":889,"children":890},{"style":586},[891],{"type":337,"value":892},"var",{"type":332,"tag":373,"props":894,"children":895},{"style":592},[896],{"type":337,"value":897}," sumNumbers",{"type":332,"tag":373,"props":899,"children":900},{"style":655},[901],{"type":337,"value":658},{"type":332,"tag":373,"props":903,"children":904},{"style":586},[905],{"type":337,"value":906}," function",{"type":332,"tag":373,"props":908,"children":909},{"style":598},[910],{"type":337,"value":911}," (",{"type":332,"tag":373,"props":913,"children":914},{"style":604},[915],{"type":337,"value":329},{"type":332,"tag":373,"props":917,"children":918},{"style":598},[919],{"type":337,"value":632},{"type":332,"tag":373,"props":921,"children":923},{"class":375,"line":922},15,[924,929,934,938,942,947,951,956,961,966],{"type":332,"tag":373,"props":925,"children":926},{"style":586},[927],{"type":337,"value":928},"  const",{"type":332,"tag":373,"props":930,"children":931},{"style":592},[932],{"type":337,"value":933}," dfs",{"type":332,"tag":373,"props":935,"children":936},{"style":655},[937],{"type":337,"value":658},{"type":332,"tag":373,"props":939,"children":940},{"style":598},[941],{"type":337,"value":911},{"type":332,"tag":373,"props":943,"children":944},{"style":604},[945],{"type":337,"value":946},"node",{"type":332,"tag":373,"props":948,"children":949},{"style":610},[950],{"type":337,"value":613},{"type":332,"tag":373,"props":952,"children":953},{"style":604},[954],{"type":337,"value":955}," prev",{"type":332,"tag":373,"props":957,"children":958},{"style":598},[959],{"type":337,"value":960},") ",{"type":332,"tag":373,"props":962,"children":963},{"style":586},[964],{"type":337,"value":965},"=>",{"type":332,"tag":373,"props":967,"children":968},{"style":598},[969],{"type":337,"value":970}," {\n",{"type":332,"tag":373,"props":972,"children":974},{"class":375,"line":973},16,[975,981,985,989,993,997,1001,1006,1010],{"type":332,"tag":373,"props":976,"children":978},{"style":977},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[979],{"type":337,"value":980},"    if",{"type":332,"tag":373,"props":982,"children":983},{"style":598},[984],{"type":337,"value":911},{"type":332,"tag":373,"props":986,"children":987},{"style":650},[988],{"type":337,"value":946},{"type":332,"tag":373,"props":990,"children":991},{"style":655},[992],{"type":337,"value":668},{"type":332,"tag":373,"props":994,"children":995},{"style":671},[996],{"type":337,"value":739},{"type":332,"tag":373,"props":998,"children":999},{"style":598},[1000],{"type":337,"value":960},{"type":332,"tag":373,"props":1002,"children":1003},{"style":977},[1004],{"type":337,"value":1005},"return",{"type":332,"tag":373,"props":1007,"children":1008},{"style":671},[1009],{"type":337,"value":684},{"type":332,"tag":373,"props":1011,"children":1012},{"style":610},[1013],{"type":337,"value":698},{"type":332,"tag":373,"props":1015,"children":1017},{"class":375,"line":1016},17,[1018,1023,1028,1032,1036,1041,1046,1051,1056,1060,1064],{"type":332,"tag":373,"props":1019,"children":1020},{"style":586},[1021],{"type":337,"value":1022},"    let",{"type":332,"tag":373,"props":1024,"children":1025},{"style":650},[1026],{"type":337,"value":1027}," sum",{"type":332,"tag":373,"props":1029,"children":1030},{"style":655},[1031],{"type":337,"value":658},{"type":332,"tag":373,"props":1033,"children":1034},{"style":650},[1035],{"type":337,"value":955},{"type":332,"tag":373,"props":1037,"children":1038},{"style":655},[1039],{"type":337,"value":1040}," *",{"type":332,"tag":373,"props":1042,"children":1043},{"style":671},[1044],{"type":337,"value":1045}," 10",{"type":332,"tag":373,"props":1047,"children":1048},{"style":655},[1049],{"type":337,"value":1050}," +",{"type":332,"tag":373,"props":1052,"children":1053},{"style":650},[1054],{"type":337,"value":1055}," node",{"type":332,"tag":373,"props":1057,"children":1058},{"style":644},[1059],{"type":337,"value":647},{"type":332,"tag":373,"props":1061,"children":1062},{"style":650},[1063],{"type":337,"value":607},{"type":332,"tag":373,"props":1065,"children":1066},{"style":610},[1067],{"type":337,"value":698},{"type":332,"tag":373,"props":1069,"children":1071},{"class":375,"line":1070},18,[1072,1076,1080,1084,1088,1092,1096,1100,1105,1109,1113,1117,1121,1125,1129,1133,1137],{"type":332,"tag":373,"props":1073,"children":1074},{"style":977},[1075],{"type":337,"value":980},{"type":332,"tag":373,"props":1077,"children":1078},{"style":598},[1079],{"type":337,"value":911},{"type":332,"tag":373,"props":1081,"children":1082},{"style":650},[1083],{"type":337,"value":946},{"type":332,"tag":373,"props":1085,"children":1086},{"style":644},[1087],{"type":337,"value":647},{"type":332,"tag":373,"props":1089,"children":1090},{"style":650},[1091],{"type":337,"value":714},{"type":332,"tag":373,"props":1093,"children":1094},{"style":655},[1095],{"type":337,"value":668},{"type":332,"tag":373,"props":1097,"children":1098},{"style":671},[1099],{"type":337,"value":739},{"type":332,"tag":373,"props":1101,"children":1102},{"style":655},[1103],{"type":337,"value":1104}," &&",{"type":332,"tag":373,"props":1106,"children":1107},{"style":650},[1108],{"type":337,"value":1055},{"type":332,"tag":373,"props":1110,"children":1111},{"style":644},[1112],{"type":337,"value":647},{"type":332,"tag":373,"props":1114,"children":1115},{"style":650},[1116],{"type":337,"value":767},{"type":332,"tag":373,"props":1118,"children":1119},{"style":655},[1120],{"type":337,"value":668},{"type":332,"tag":373,"props":1122,"children":1123},{"style":671},[1124],{"type":337,"value":739},{"type":332,"tag":373,"props":1126,"children":1127},{"style":598},[1128],{"type":337,"value":960},{"type":332,"tag":373,"props":1130,"children":1131},{"style":977},[1132],{"type":337,"value":1005},{"type":332,"tag":373,"props":1134,"children":1135},{"style":650},[1136],{"type":337,"value":1027},{"type":332,"tag":373,"props":1138,"children":1139},{"style":610},[1140],{"type":337,"value":698},{"type":332,"tag":373,"props":1142,"children":1144},{"class":375,"line":1143},19,[1145,1150,1154,1158,1162,1166,1170,1174,1178,1182,1187,1191,1195,1199,1203,1207,1211,1215,1220],{"type":332,"tag":373,"props":1146,"children":1147},{"style":977},[1148],{"type":337,"value":1149},"    return",{"type":332,"tag":373,"props":1151,"children":1152},{"style":592},[1153],{"type":337,"value":933},{"type":332,"tag":373,"props":1155,"children":1156},{"style":598},[1157],{"type":337,"value":601},{"type":332,"tag":373,"props":1159,"children":1160},{"style":650},[1161],{"type":337,"value":946},{"type":332,"tag":373,"props":1163,"children":1164},{"style":644},[1165],{"type":337,"value":647},{"type":332,"tag":373,"props":1167,"children":1168},{"style":650},[1169],{"type":337,"value":714},{"type":332,"tag":373,"props":1171,"children":1172},{"style":610},[1173],{"type":337,"value":613},{"type":332,"tag":373,"props":1175,"children":1176},{"style":650},[1177],{"type":337,"value":1027},{"type":332,"tag":373,"props":1179,"children":1180},{"style":598},[1181],{"type":337,"value":960},{"type":332,"tag":373,"props":1183,"children":1184},{"style":655},[1185],{"type":337,"value":1186},"+",{"type":332,"tag":373,"props":1188,"children":1189},{"style":592},[1190],{"type":337,"value":933},{"type":332,"tag":373,"props":1192,"children":1193},{"style":598},[1194],{"type":337,"value":601},{"type":332,"tag":373,"props":1196,"children":1197},{"style":650},[1198],{"type":337,"value":946},{"type":332,"tag":373,"props":1200,"children":1201},{"style":644},[1202],{"type":337,"value":647},{"type":332,"tag":373,"props":1204,"children":1205},{"style":650},[1206],{"type":337,"value":767},{"type":332,"tag":373,"props":1208,"children":1209},{"style":610},[1210],{"type":337,"value":613},{"type":332,"tag":373,"props":1212,"children":1213},{"style":650},[1214],{"type":337,"value":1027},{"type":332,"tag":373,"props":1216,"children":1217},{"style":598},[1218],{"type":337,"value":1219},")",{"type":332,"tag":373,"props":1221,"children":1222},{"style":610},[1223],{"type":337,"value":698},{"type":332,"tag":373,"props":1225,"children":1227},{"class":375,"line":1226},20,[1228,1233],{"type":332,"tag":373,"props":1229,"children":1230},{"style":598},[1231],{"type":337,"value":1232},"  }",{"type":332,"tag":373,"props":1234,"children":1235},{"style":610},[1236],{"type":337,"value":698},{"type":332,"tag":373,"props":1238,"children":1240},{"class":375,"line":1239},21,[1241,1246,1250,1254,1258,1262,1266,1270],{"type":332,"tag":373,"props":1242,"children":1243},{"style":977},[1244],{"type":337,"value":1245},"  return",{"type":332,"tag":373,"props":1247,"children":1248},{"style":592},[1249],{"type":337,"value":933},{"type":332,"tag":373,"props":1251,"children":1252},{"style":598},[1253],{"type":337,"value":601},{"type":332,"tag":373,"props":1255,"children":1256},{"style":650},[1257],{"type":337,"value":329},{"type":332,"tag":373,"props":1259,"children":1260},{"style":610},[1261],{"type":337,"value":613},{"type":332,"tag":373,"props":1263,"children":1264},{"style":671},[1265],{"type":337,"value":684},{"type":332,"tag":373,"props":1267,"children":1268},{"style":598},[1269],{"type":337,"value":1219},{"type":332,"tag":373,"props":1271,"children":1272},{"style":610},[1273],{"type":337,"value":698},{"type":332,"tag":373,"props":1275,"children":1277},{"class":375,"line":1276},22,[1278,1283],{"type":332,"tag":373,"props":1279,"children":1280},{"style":598},[1281],{"type":337,"value":1282},"}",{"type":332,"tag":373,"props":1284,"children":1285},{"style":610},[1286],{"type":337,"value":698},{"type":332,"tag":1288,"props":1289,"children":1290},"style",{},[1291],{"type":337,"value":1292},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":325,"searchDepth":412,"depth":412,"links":1294},[1295,1296],{"id":532,"depth":385,"text":532},{"id":537,"depth":385,"text":537,"children":1297},[1298],{"id":543,"depth":394,"text":546},"markdown","content:2.code:1.algorithm:3.leetcode:129.sum-root-to-leaf-numbers.md","content","2.code/1.algorithm/3.leetcode/129.sum-root-to-leaf-numbers.md","md",[1305,1307],{"_path":166,"title":165,"description":1306},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",{"_path":172,"title":171,"description":1308},"给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。",1712115783021]