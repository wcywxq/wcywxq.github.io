[{"data":1,"prerenderedAt":1126},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/valid-parentheses":359,"/code/algorithm/leetcode/valid-parentheses-surround":1121},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,269,318],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263,266],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.165 比较版本号","/code/algorithm/leetcode/compare-version-numbers",{"title":198,"_path":199},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":201,"_path":202},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":204,"_path":205},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":207,"_path":208},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":210,"_path":211},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":213,"_path":214},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":216,"_path":217},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":219,"_path":220},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":222,"_path":223},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":225,"_path":226},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":228,"_path":229},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":231,"_path":232},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":234,"_path":235},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":237,"_path":238},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":240,"_path":241},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":243,"_path":244},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":246,"_path":247},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":249,"_path":250},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":252,"_path":253},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":255,"_path":256},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":258,"_path":259},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":261,"_path":262},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":264,"_path":265},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":267,"_path":268},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":270,"_path":271,"children":272},"源码实现","/code/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/code/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/code/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/code/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/code/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/code/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/code/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/code/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/code/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/code/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/code/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/code/source/string",[315],{"title":316,"_path":317},"repeat()","/code/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/code/scene",[322,344,347,350,353,356],{"title":323,"_path":324,"children":325},"Promise","/code/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/code/scene/calcuate-object-bytes",{"title":348,"_path":349},"lodash.get","/code/scene/lodash-get",{"title":351,"_path":352},"记忆化请求函数 - 可缓存请求函数","/code/scene/memorize-request",{"title":354,"_path":355},"sku 算法实现","/code/scene/sku",{"title":357,"_path":358},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":88,"_dir":360,"_draft":361,"_partial":361,"_locale":362,"title":87,"description":363,"url":364,"body":365,"_type":1116,"_id":1117,"_source":1118,"_file":1119,"_extension":1120},"leetcode",false,"","给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串 s ，判断字符串是否有效。","https://leetcode.cn/problems/valid-parentheses",{"type":366,"children":367,"toc":1110},"root",[368,375,380,400,405,435,440,462,467,490,495,509,515,520,526,1104],{"type":369,"tag":370,"props":371,"children":372},"element","p",{},[373],{"type":374,"value":363},"text",{"type":369,"tag":370,"props":376,"children":377},{},[378],{"type":374,"value":379},"有效字符串需满足：",{"type":369,"tag":381,"props":382,"children":383},"ol",{},[384,390,395],{"type":369,"tag":385,"props":386,"children":387},"li",{},[388],{"type":374,"value":389},"左括号必须用相同类型的右括号闭合。",{"type":369,"tag":385,"props":391,"children":392},{},[393],{"type":374,"value":394},"左括号必须以正确的顺序闭合。",{"type":369,"tag":385,"props":396,"children":397},{},[398],{"type":374,"value":399},"每个右括号都有一个对应的相同类型的左括号。",{"type":369,"tag":370,"props":401,"children":402},{},[403],{"type":374,"value":404},"示例 1：",{"type":369,"tag":406,"props":407,"children":410},"pre",{"className":408,"code":409,"language":374,"meta":362,"style":362},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：s = \"()\"\n输出：true\n",[411],{"type":369,"tag":412,"props":413,"children":414},"code",{"__ignoreMap":362},[415,426],{"type":369,"tag":416,"props":417,"children":420},"span",{"class":418,"line":419},"line",1,[421],{"type":369,"tag":416,"props":422,"children":423},{},[424],{"type":374,"value":425},"输入：s = \"()\"\n",{"type":369,"tag":416,"props":427,"children":429},{"class":418,"line":428},2,[430],{"type":369,"tag":416,"props":431,"children":432},{},[433],{"type":374,"value":434},"输出：true\n",{"type":369,"tag":370,"props":436,"children":437},{},[438],{"type":374,"value":439},"示例 2：",{"type":369,"tag":406,"props":441,"children":443},{"className":408,"code":442,"language":374,"meta":362,"style":362},"输入：s = \"()[]{}\"\n输出：true\n",[444],{"type":369,"tag":412,"props":445,"children":446},{"__ignoreMap":362},[447,455],{"type":369,"tag":416,"props":448,"children":449},{"class":418,"line":419},[450],{"type":369,"tag":416,"props":451,"children":452},{},[453],{"type":374,"value":454},"输入：s = \"()[]{}\"\n",{"type":369,"tag":416,"props":456,"children":457},{"class":418,"line":428},[458],{"type":369,"tag":416,"props":459,"children":460},{},[461],{"type":374,"value":434},{"type":369,"tag":370,"props":463,"children":464},{},[465],{"type":374,"value":466},"示例 3：",{"type":369,"tag":406,"props":468,"children":470},{"className":408,"code":469,"language":374,"meta":362,"style":362},"输入：s = \"(]\"\n输出：false\n",[471],{"type":369,"tag":412,"props":472,"children":473},{"__ignoreMap":362},[474,482],{"type":369,"tag":416,"props":475,"children":476},{"class":418,"line":419},[477],{"type":369,"tag":416,"props":478,"children":479},{},[480],{"type":374,"value":481},"输入：s = \"(]\"\n",{"type":369,"tag":416,"props":483,"children":484},{"class":418,"line":428},[485],{"type":369,"tag":416,"props":486,"children":487},{},[488],{"type":374,"value":489},"输出：false\n",{"type":369,"tag":370,"props":491,"children":492},{},[493],{"type":374,"value":494},"提示：",{"type":369,"tag":496,"props":497,"children":498},"ul",{},[499,504],{"type":369,"tag":385,"props":500,"children":501},{},[502],{"type":374,"value":503},"1 \u003C= s.length \u003C= 104",{"type":369,"tag":385,"props":505,"children":506},{},[507],{"type":374,"value":508},"s 仅由括号 '()[]{}' 组成",{"type":369,"tag":510,"props":511,"children":513},"h2",{"id":512},"解题思路",[514],{"type":374,"value":512},{"type":369,"tag":510,"props":516,"children":518},{"id":517},"实现",[519],{"type":374,"value":517},{"type":369,"tag":521,"props":522,"children":524},"h3",{"id":523},"栈",[525],{"type":374,"value":523},{"type":369,"tag":406,"props":527,"children":531},{"className":528,"code":529,"language":530,"meta":362,"style":362},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {string} s\n * @return {boolean}\n */\nvar isValid = function (s) {\n  let map = new Map([\n    [\"(\", \")\"],\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n  ]);\n  let stack = [];\n  for (let char of s) {\n    if (map.has(char)) {\n      stack.push(char);\n    } else if (!stack.length || map.get(stack.pop()) !== char) {\n      return false;\n    }\n  }\n  return !stack.length;\n};\n","js",[532],{"type":369,"tag":412,"props":533,"children":534},{"__ignoreMap":362},[535,544,570,588,597,641,675,711,741,771,785,811,849,893,928,1023,1042,1051,1060,1091],{"type":369,"tag":416,"props":536,"children":537},{"class":418,"line":419},[538],{"type":369,"tag":416,"props":539,"children":541},{"style":540},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[542],{"type":374,"value":543},"/**\n",{"type":369,"tag":416,"props":545,"children":546},{"class":418,"line":428},[547,552,558,564],{"type":369,"tag":416,"props":548,"children":549},{"style":540},[550],{"type":374,"value":551}," * ",{"type":369,"tag":416,"props":553,"children":555},{"style":554},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[556],{"type":374,"value":557},"@param",{"type":369,"tag":416,"props":559,"children":561},{"style":560},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[562],{"type":374,"value":563}," {string}",{"type":369,"tag":416,"props":565,"children":567},{"style":566},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[568],{"type":374,"value":569}," s\n",{"type":369,"tag":416,"props":571,"children":573},{"class":418,"line":572},3,[574,578,583],{"type":369,"tag":416,"props":575,"children":576},{"style":540},[577],{"type":374,"value":551},{"type":369,"tag":416,"props":579,"children":580},{"style":554},[581],{"type":374,"value":582},"@return",{"type":369,"tag":416,"props":584,"children":585},{"style":560},[586],{"type":374,"value":587}," {boolean}\n",{"type":369,"tag":416,"props":589,"children":591},{"class":418,"line":590},4,[592],{"type":369,"tag":416,"props":593,"children":594},{"style":540},[595],{"type":374,"value":596}," */\n",{"type":369,"tag":416,"props":598,"children":600},{"class":418,"line":599},5,[601,607,613,619,624,630,636],{"type":369,"tag":416,"props":602,"children":604},{"style":603},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[605],{"type":374,"value":606},"var",{"type":369,"tag":416,"props":608,"children":610},{"style":609},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[611],{"type":374,"value":612}," isValid",{"type":369,"tag":416,"props":614,"children":616},{"style":615},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[617],{"type":374,"value":618}," =",{"type":369,"tag":416,"props":620,"children":621},{"style":603},[622],{"type":374,"value":623}," function",{"type":369,"tag":416,"props":625,"children":627},{"style":626},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[628],{"type":374,"value":629}," (",{"type":369,"tag":416,"props":631,"children":633},{"style":632},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[634],{"type":374,"value":635},"s",{"type":369,"tag":416,"props":637,"children":638},{"style":626},[639],{"type":374,"value":640},") {\n",{"type":369,"tag":416,"props":642,"children":644},{"class":418,"line":643},6,[645,650,656,660,665,670],{"type":369,"tag":416,"props":646,"children":647},{"style":603},[648],{"type":374,"value":649},"  let",{"type":369,"tag":416,"props":651,"children":653},{"style":652},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[654],{"type":374,"value":655}," map",{"type":369,"tag":416,"props":657,"children":658},{"style":615},[659],{"type":374,"value":618},{"type":369,"tag":416,"props":661,"children":662},{"style":615},[663],{"type":374,"value":664}," new",{"type":369,"tag":416,"props":666,"children":667},{"style":609},[668],{"type":374,"value":669}," Map",{"type":369,"tag":416,"props":671,"children":672},{"style":626},[673],{"type":374,"value":674},"([\n",{"type":369,"tag":416,"props":676,"children":678},{"class":418,"line":677},7,[679,684,690,696,701,706],{"type":369,"tag":416,"props":680,"children":681},{"style":626},[682],{"type":374,"value":683},"    [",{"type":369,"tag":416,"props":685,"children":687},{"style":686},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[688],{"type":374,"value":689},"\"(\"",{"type":369,"tag":416,"props":691,"children":693},{"style":692},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[694],{"type":374,"value":695},",",{"type":369,"tag":416,"props":697,"children":698},{"style":686},[699],{"type":374,"value":700}," \")\"",{"type":369,"tag":416,"props":702,"children":703},{"style":626},[704],{"type":374,"value":705},"]",{"type":369,"tag":416,"props":707,"children":708},{"style":692},[709],{"type":374,"value":710},",\n",{"type":369,"tag":416,"props":712,"children":714},{"class":418,"line":713},8,[715,719,724,728,733,737],{"type":369,"tag":416,"props":716,"children":717},{"style":626},[718],{"type":374,"value":683},{"type":369,"tag":416,"props":720,"children":721},{"style":686},[722],{"type":374,"value":723},"\"{\"",{"type":369,"tag":416,"props":725,"children":726},{"style":692},[727],{"type":374,"value":695},{"type":369,"tag":416,"props":729,"children":730},{"style":686},[731],{"type":374,"value":732}," \"}\"",{"type":369,"tag":416,"props":734,"children":735},{"style":626},[736],{"type":374,"value":705},{"type":369,"tag":416,"props":738,"children":739},{"style":692},[740],{"type":374,"value":710},{"type":369,"tag":416,"props":742,"children":744},{"class":418,"line":743},9,[745,749,754,758,763,767],{"type":369,"tag":416,"props":746,"children":747},{"style":626},[748],{"type":374,"value":683},{"type":369,"tag":416,"props":750,"children":751},{"style":686},[752],{"type":374,"value":753},"\"[\"",{"type":369,"tag":416,"props":755,"children":756},{"style":692},[757],{"type":374,"value":695},{"type":369,"tag":416,"props":759,"children":760},{"style":686},[761],{"type":374,"value":762}," \"]\"",{"type":369,"tag":416,"props":764,"children":765},{"style":626},[766],{"type":374,"value":705},{"type":369,"tag":416,"props":768,"children":769},{"style":692},[770],{"type":374,"value":710},{"type":369,"tag":416,"props":772,"children":774},{"class":418,"line":773},10,[775,780],{"type":369,"tag":416,"props":776,"children":777},{"style":626},[778],{"type":374,"value":779},"  ])",{"type":369,"tag":416,"props":781,"children":782},{"style":692},[783],{"type":374,"value":784},";\n",{"type":369,"tag":416,"props":786,"children":788},{"class":418,"line":787},11,[789,793,798,802,807],{"type":369,"tag":416,"props":790,"children":791},{"style":603},[792],{"type":374,"value":649},{"type":369,"tag":416,"props":794,"children":795},{"style":652},[796],{"type":374,"value":797}," stack",{"type":369,"tag":416,"props":799,"children":800},{"style":615},[801],{"type":374,"value":618},{"type":369,"tag":416,"props":803,"children":804},{"style":626},[805],{"type":374,"value":806}," []",{"type":369,"tag":416,"props":808,"children":809},{"style":692},[810],{"type":374,"value":784},{"type":369,"tag":416,"props":812,"children":814},{"class":418,"line":813},12,[815,821,825,830,835,840,845],{"type":369,"tag":416,"props":816,"children":818},{"style":817},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[819],{"type":374,"value":820},"  for",{"type":369,"tag":416,"props":822,"children":823},{"style":626},[824],{"type":374,"value":629},{"type":369,"tag":416,"props":826,"children":827},{"style":603},[828],{"type":374,"value":829},"let",{"type":369,"tag":416,"props":831,"children":832},{"style":652},[833],{"type":374,"value":834}," char",{"type":369,"tag":416,"props":836,"children":837},{"style":615},[838],{"type":374,"value":839}," of",{"type":369,"tag":416,"props":841,"children":842},{"style":652},[843],{"type":374,"value":844}," s",{"type":369,"tag":416,"props":846,"children":847},{"style":626},[848],{"type":374,"value":640},{"type":369,"tag":416,"props":850,"children":852},{"class":418,"line":851},13,[853,858,862,867,873,878,883,888],{"type":369,"tag":416,"props":854,"children":855},{"style":817},[856],{"type":374,"value":857},"    if",{"type":369,"tag":416,"props":859,"children":860},{"style":626},[861],{"type":374,"value":629},{"type":369,"tag":416,"props":863,"children":864},{"style":652},[865],{"type":374,"value":866},"map",{"type":369,"tag":416,"props":868,"children":870},{"style":869},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[871],{"type":374,"value":872},".",{"type":369,"tag":416,"props":874,"children":875},{"style":609},[876],{"type":374,"value":877},"has",{"type":369,"tag":416,"props":879,"children":880},{"style":626},[881],{"type":374,"value":882},"(",{"type":369,"tag":416,"props":884,"children":885},{"style":652},[886],{"type":374,"value":887},"char",{"type":369,"tag":416,"props":889,"children":890},{"style":626},[891],{"type":374,"value":892},")) {\n",{"type":369,"tag":416,"props":894,"children":896},{"class":418,"line":895},14,[897,902,906,911,915,919,924],{"type":369,"tag":416,"props":898,"children":899},{"style":652},[900],{"type":374,"value":901},"      stack",{"type":369,"tag":416,"props":903,"children":904},{"style":869},[905],{"type":374,"value":872},{"type":369,"tag":416,"props":907,"children":908},{"style":609},[909],{"type":374,"value":910},"push",{"type":369,"tag":416,"props":912,"children":913},{"style":626},[914],{"type":374,"value":882},{"type":369,"tag":416,"props":916,"children":917},{"style":652},[918],{"type":374,"value":887},{"type":369,"tag":416,"props":920,"children":921},{"style":626},[922],{"type":374,"value":923},")",{"type":369,"tag":416,"props":925,"children":926},{"style":692},[927],{"type":374,"value":784},{"type":369,"tag":416,"props":929,"children":931},{"class":418,"line":930},15,[932,937,942,947,951,956,961,965,970,975,979,983,988,992,996,1000,1005,1010,1015,1019],{"type":369,"tag":416,"props":933,"children":934},{"style":626},[935],{"type":374,"value":936},"    } ",{"type":369,"tag":416,"props":938,"children":939},{"style":817},[940],{"type":374,"value":941},"else",{"type":369,"tag":416,"props":943,"children":944},{"style":817},[945],{"type":374,"value":946}," if",{"type":369,"tag":416,"props":948,"children":949},{"style":626},[950],{"type":374,"value":629},{"type":369,"tag":416,"props":952,"children":953},{"style":615},[954],{"type":374,"value":955},"!",{"type":369,"tag":416,"props":957,"children":958},{"style":652},[959],{"type":374,"value":960},"stack",{"type":369,"tag":416,"props":962,"children":963},{"style":869},[964],{"type":374,"value":872},{"type":369,"tag":416,"props":966,"children":967},{"style":626},[968],{"type":374,"value":969},"length ",{"type":369,"tag":416,"props":971,"children":972},{"style":615},[973],{"type":374,"value":974},"||",{"type":369,"tag":416,"props":976,"children":977},{"style":652},[978],{"type":374,"value":655},{"type":369,"tag":416,"props":980,"children":981},{"style":869},[982],{"type":374,"value":872},{"type":369,"tag":416,"props":984,"children":985},{"style":609},[986],{"type":374,"value":987},"get",{"type":369,"tag":416,"props":989,"children":990},{"style":626},[991],{"type":374,"value":882},{"type":369,"tag":416,"props":993,"children":994},{"style":652},[995],{"type":374,"value":960},{"type":369,"tag":416,"props":997,"children":998},{"style":869},[999],{"type":374,"value":872},{"type":369,"tag":416,"props":1001,"children":1002},{"style":609},[1003],{"type":374,"value":1004},"pop",{"type":369,"tag":416,"props":1006,"children":1007},{"style":626},[1008],{"type":374,"value":1009},"()) ",{"type":369,"tag":416,"props":1011,"children":1012},{"style":615},[1013],{"type":374,"value":1014},"!==",{"type":369,"tag":416,"props":1016,"children":1017},{"style":652},[1018],{"type":374,"value":834},{"type":369,"tag":416,"props":1020,"children":1021},{"style":626},[1022],{"type":374,"value":640},{"type":369,"tag":416,"props":1024,"children":1026},{"class":418,"line":1025},16,[1027,1032,1038],{"type":369,"tag":416,"props":1028,"children":1029},{"style":817},[1030],{"type":374,"value":1031},"      return",{"type":369,"tag":416,"props":1033,"children":1035},{"style":1034},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[1036],{"type":374,"value":1037}," false",{"type":369,"tag":416,"props":1039,"children":1040},{"style":692},[1041],{"type":374,"value":784},{"type":369,"tag":416,"props":1043,"children":1045},{"class":418,"line":1044},17,[1046],{"type":369,"tag":416,"props":1047,"children":1048},{"style":626},[1049],{"type":374,"value":1050},"    }\n",{"type":369,"tag":416,"props":1052,"children":1054},{"class":418,"line":1053},18,[1055],{"type":369,"tag":416,"props":1056,"children":1057},{"style":626},[1058],{"type":374,"value":1059},"  }\n",{"type":369,"tag":416,"props":1061,"children":1063},{"class":418,"line":1062},19,[1064,1069,1074,1078,1082,1087],{"type":369,"tag":416,"props":1065,"children":1066},{"style":817},[1067],{"type":374,"value":1068},"  return",{"type":369,"tag":416,"props":1070,"children":1071},{"style":615},[1072],{"type":374,"value":1073}," !",{"type":369,"tag":416,"props":1075,"children":1076},{"style":652},[1077],{"type":374,"value":960},{"type":369,"tag":416,"props":1079,"children":1080},{"style":869},[1081],{"type":374,"value":872},{"type":369,"tag":416,"props":1083,"children":1084},{"style":626},[1085],{"type":374,"value":1086},"length",{"type":369,"tag":416,"props":1088,"children":1089},{"style":692},[1090],{"type":374,"value":784},{"type":369,"tag":416,"props":1092,"children":1094},{"class":418,"line":1093},20,[1095,1100],{"type":369,"tag":416,"props":1096,"children":1097},{"style":626},[1098],{"type":374,"value":1099},"}",{"type":369,"tag":416,"props":1101,"children":1102},{"style":692},[1103],{"type":374,"value":784},{"type":369,"tag":1105,"props":1106,"children":1107},"style",{},[1108],{"type":374,"value":1109},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":362,"searchDepth":599,"depth":599,"links":1111},[1112,1113],{"id":512,"depth":428,"text":512},{"id":517,"depth":428,"text":517,"children":1114},[1115],{"id":523,"depth":572,"text":523},"markdown","content:2.code:1.algorithm:3.leetcode:20.valid-parentheses.md","content","2.code/1.algorithm/3.leetcode/20.valid-parentheses.md","md",[1122,1124],{"_path":85,"title":84,"description":1123},"给你一个整数数组 nums ，判断是否存在三元组 [nums[i], nums[j], nums[k]] 满足 i != j、i != k 且 j != k ，同时还满足 nums[i] + nums[j] + nums[k] == 0 。请",{"_path":91,"title":90,"description":1125},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",1712748635930]