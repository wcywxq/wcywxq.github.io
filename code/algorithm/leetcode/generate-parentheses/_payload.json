[{"data":1,"prerenderedAt":1222},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/generate-parentheses":329,"/code/algorithm/leetcode/generate-parentheses-surround":1217},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319],{"title":320,"_path":321,"children":322},"Promise","/code/scene/promise",[323,326],{"title":324,"_path":325},"顺序打印 url 并支持 retry","/code/scene/promise/order-print-url-and-retry",{"title":327,"_path":328},"promise 实现图片加载数量限制","/code/scene/promise/limit-image-load-count",{"_path":94,"_dir":330,"_draft":331,"_partial":331,"_locale":332,"title":93,"description":333,"url":334,"body":335,"_type":1212,"_id":1213,"_source":1214,"_file":1215,"_extension":1216},"leetcode",false,"","数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。","https://leetcode.cn/problems/generate-parentheses",{"type":336,"children":337,"toc":1206},"root",[338,345,350,380,385,408,413,423,429,434,447,452,458,1200],{"type":339,"tag":340,"props":341,"children":342},"element","p",{},[343],{"type":344,"value":333},"text",{"type":339,"tag":340,"props":346,"children":347},{},[348],{"type":344,"value":349},"示例 1：",{"type":339,"tag":351,"props":352,"children":355},"pre",{"className":353,"code":354,"language":344,"meta":332,"style":332},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：n = 3\n输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",[356],{"type":339,"tag":357,"props":358,"children":359},"code",{"__ignoreMap":332},[360,371],{"type":339,"tag":361,"props":362,"children":365},"span",{"class":363,"line":364},"line",1,[366],{"type":339,"tag":361,"props":367,"children":368},{},[369],{"type":344,"value":370},"输入：n = 3\n",{"type":339,"tag":361,"props":372,"children":374},{"class":363,"line":373},2,[375],{"type":339,"tag":361,"props":376,"children":377},{},[378],{"type":344,"value":379},"输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",{"type":339,"tag":340,"props":381,"children":382},{},[383],{"type":344,"value":384},"示例 2：",{"type":339,"tag":351,"props":386,"children":388},{"className":353,"code":387,"language":344,"meta":332,"style":332},"输入：n = 1\n输出：[\"()\"]\n",[389],{"type":339,"tag":357,"props":390,"children":391},{"__ignoreMap":332},[392,400],{"type":339,"tag":361,"props":393,"children":394},{"class":363,"line":364},[395],{"type":339,"tag":361,"props":396,"children":397},{},[398],{"type":344,"value":399},"输入：n = 1\n",{"type":339,"tag":361,"props":401,"children":402},{"class":363,"line":373},[403],{"type":339,"tag":361,"props":404,"children":405},{},[406],{"type":344,"value":407},"输出：[\"()\"]\n",{"type":339,"tag":340,"props":409,"children":410},{},[411],{"type":344,"value":412},"提示：",{"type":339,"tag":414,"props":415,"children":416},"ul",{},[417],{"type":339,"tag":418,"props":419,"children":420},"li",{},[421],{"type":344,"value":422},"1 \u003C= n \u003C= 8",{"type":339,"tag":424,"props":425,"children":427},"h2",{"id":426},"解题思路",[428],{"type":344,"value":426},{"type":339,"tag":340,"props":430,"children":431},{},[432],{"type":344,"value":433},"由于需要求解所有的可能，因此回溯就不难想到，回溯的思路和写法相对比较固定，并且回溯的优化手段大多是剪枝。\n不难想到，如果左括号的数据小于右括号，我们可以提前退出，这就是这道题的剪枝。例如：())...，后面就不用看了，直接退出即可。回溯的退出条件也不难想到：",{"type":339,"tag":414,"props":435,"children":436},{},[437,442],{"type":339,"tag":418,"props":438,"children":439},{},[440],{"type":344,"value":441},"左括号数目 = 右括号数目",{"type":339,"tag":418,"props":443,"children":444},{},[445],{"type":344,"value":446},"左括号数据 + 右括号数据 = 2 * n\n因此这道题可以使用深度优先搜索（回溯思想），从空字符串开始构造，做加法，即 dfs(左括号数目，右括号数据，路径)，我们从 dfs(0, 0, \"\") 开始",{"type":339,"tag":424,"props":448,"children":450},{"id":449},"实现",[451],{"type":344,"value":449},{"type":339,"tag":453,"props":454,"children":456},"h3",{"id":455},"回溯",[457],{"type":344,"value":455},{"type":339,"tag":351,"props":459,"children":463},{"className":460,"code":461,"language":462,"meta":332,"style":332},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number} n\n * @return {string[]}\n */\nvar generateParenthesis = function (n) {\n  const res = [];\n\n  /**\n   * @param l 左侧括号已经用了几个\n   * @param r 右侧括号已经用了几个\n   * @param str 当前递归得到的拼接字符串结果\n   */\n  function dfs(l, r, str) {\n    if (l === n && r === n) {\n      return res.push(str);\n    }\n    // l \u003C r 时不满足条件，剪枝\n    if (l \u003C r) return;\n    // l \u003C n 时可插入左括号，最多可以插入 n 个\n    if (l \u003C n) {\n      dfs(l + 1, r, str + \"(\");\n    }\n    // r \u003C l 时，可以插入右括号\n    if (r \u003C l) {\n      dfs(l, r + 1, str + \")\");\n    }\n  }\n\n  dfs(0, 0, \"\");\n\n  return res;\n};\n","js",[464],{"type":339,"tag":357,"props":465,"children":466},{"__ignoreMap":332},[467,476,502,520,529,573,603,613,622,645,667,689,698,743,792,834,843,852,891,900,928,990,998,1007,1036,1093,1101,1110,1118,1162,1170,1187],{"type":339,"tag":361,"props":468,"children":469},{"class":363,"line":364},[470],{"type":339,"tag":361,"props":471,"children":473},{"style":472},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[474],{"type":344,"value":475},"/**\n",{"type":339,"tag":361,"props":477,"children":478},{"class":363,"line":373},[479,484,490,496],{"type":339,"tag":361,"props":480,"children":481},{"style":472},[482],{"type":344,"value":483}," * ",{"type":339,"tag":361,"props":485,"children":487},{"style":486},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[488],{"type":344,"value":489},"@param",{"type":339,"tag":361,"props":491,"children":493},{"style":492},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[494],{"type":344,"value":495}," {number}",{"type":339,"tag":361,"props":497,"children":499},{"style":498},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[500],{"type":344,"value":501}," n\n",{"type":339,"tag":361,"props":503,"children":505},{"class":363,"line":504},3,[506,510,515],{"type":339,"tag":361,"props":507,"children":508},{"style":472},[509],{"type":344,"value":483},{"type":339,"tag":361,"props":511,"children":512},{"style":486},[513],{"type":344,"value":514},"@return",{"type":339,"tag":361,"props":516,"children":517},{"style":492},[518],{"type":344,"value":519}," {string[]}\n",{"type":339,"tag":361,"props":521,"children":523},{"class":363,"line":522},4,[524],{"type":339,"tag":361,"props":525,"children":526},{"style":472},[527],{"type":344,"value":528}," */\n",{"type":339,"tag":361,"props":530,"children":532},{"class":363,"line":531},5,[533,539,545,551,556,562,568],{"type":339,"tag":361,"props":534,"children":536},{"style":535},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[537],{"type":344,"value":538},"var",{"type":339,"tag":361,"props":540,"children":542},{"style":541},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[543],{"type":344,"value":544}," generateParenthesis",{"type":339,"tag":361,"props":546,"children":548},{"style":547},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[549],{"type":344,"value":550}," =",{"type":339,"tag":361,"props":552,"children":553},{"style":535},[554],{"type":344,"value":555}," function",{"type":339,"tag":361,"props":557,"children":559},{"style":558},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[560],{"type":344,"value":561}," (",{"type":339,"tag":361,"props":563,"children":565},{"style":564},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[566],{"type":344,"value":567},"n",{"type":339,"tag":361,"props":569,"children":570},{"style":558},[571],{"type":344,"value":572},") {\n",{"type":339,"tag":361,"props":574,"children":576},{"class":363,"line":575},6,[577,582,588,592,597],{"type":339,"tag":361,"props":578,"children":579},{"style":535},[580],{"type":344,"value":581},"  const",{"type":339,"tag":361,"props":583,"children":585},{"style":584},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[586],{"type":344,"value":587}," res",{"type":339,"tag":361,"props":589,"children":590},{"style":547},[591],{"type":344,"value":550},{"type":339,"tag":361,"props":593,"children":594},{"style":558},[595],{"type":344,"value":596}," []",{"type":339,"tag":361,"props":598,"children":600},{"style":599},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[601],{"type":344,"value":602},";\n",{"type":339,"tag":361,"props":604,"children":606},{"class":363,"line":605},7,[607],{"type":339,"tag":361,"props":608,"children":610},{"emptyLinePlaceholder":609},true,[611],{"type":344,"value":612},"\n",{"type":339,"tag":361,"props":614,"children":616},{"class":363,"line":615},8,[617],{"type":339,"tag":361,"props":618,"children":619},{"style":472},[620],{"type":344,"value":621},"  /**\n",{"type":339,"tag":361,"props":623,"children":625},{"class":363,"line":624},9,[626,631,635,640],{"type":339,"tag":361,"props":627,"children":628},{"style":472},[629],{"type":344,"value":630},"   * ",{"type":339,"tag":361,"props":632,"children":633},{"style":486},[634],{"type":344,"value":489},{"type":339,"tag":361,"props":636,"children":637},{"style":498},[638],{"type":344,"value":639}," l",{"type":339,"tag":361,"props":641,"children":642},{"style":472},[643],{"type":344,"value":644}," 左侧括号已经用了几个\n",{"type":339,"tag":361,"props":646,"children":648},{"class":363,"line":647},10,[649,653,657,662],{"type":339,"tag":361,"props":650,"children":651},{"style":472},[652],{"type":344,"value":630},{"type":339,"tag":361,"props":654,"children":655},{"style":486},[656],{"type":344,"value":489},{"type":339,"tag":361,"props":658,"children":659},{"style":498},[660],{"type":344,"value":661}," r",{"type":339,"tag":361,"props":663,"children":664},{"style":472},[665],{"type":344,"value":666}," 右侧括号已经用了几个\n",{"type":339,"tag":361,"props":668,"children":670},{"class":363,"line":669},11,[671,675,679,684],{"type":339,"tag":361,"props":672,"children":673},{"style":472},[674],{"type":344,"value":630},{"type":339,"tag":361,"props":676,"children":677},{"style":486},[678],{"type":344,"value":489},{"type":339,"tag":361,"props":680,"children":681},{"style":498},[682],{"type":344,"value":683}," str",{"type":339,"tag":361,"props":685,"children":686},{"style":472},[687],{"type":344,"value":688}," 当前递归得到的拼接字符串结果\n",{"type":339,"tag":361,"props":690,"children":692},{"class":363,"line":691},12,[693],{"type":339,"tag":361,"props":694,"children":695},{"style":472},[696],{"type":344,"value":697},"   */\n",{"type":339,"tag":361,"props":699,"children":701},{"class":363,"line":700},13,[702,707,712,717,722,727,731,735,739],{"type":339,"tag":361,"props":703,"children":704},{"style":535},[705],{"type":344,"value":706},"  function",{"type":339,"tag":361,"props":708,"children":709},{"style":541},[710],{"type":344,"value":711}," dfs",{"type":339,"tag":361,"props":713,"children":714},{"style":558},[715],{"type":344,"value":716},"(",{"type":339,"tag":361,"props":718,"children":719},{"style":564},[720],{"type":344,"value":721},"l",{"type":339,"tag":361,"props":723,"children":724},{"style":599},[725],{"type":344,"value":726},",",{"type":339,"tag":361,"props":728,"children":729},{"style":564},[730],{"type":344,"value":661},{"type":339,"tag":361,"props":732,"children":733},{"style":599},[734],{"type":344,"value":726},{"type":339,"tag":361,"props":736,"children":737},{"style":564},[738],{"type":344,"value":683},{"type":339,"tag":361,"props":740,"children":741},{"style":558},[742],{"type":344,"value":572},{"type":339,"tag":361,"props":744,"children":746},{"class":363,"line":745},14,[747,753,757,761,766,771,776,780,784,788],{"type":339,"tag":361,"props":748,"children":750},{"style":749},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[751],{"type":344,"value":752},"    if",{"type":339,"tag":361,"props":754,"children":755},{"style":558},[756],{"type":344,"value":561},{"type":339,"tag":361,"props":758,"children":759},{"style":584},[760],{"type":344,"value":721},{"type":339,"tag":361,"props":762,"children":763},{"style":547},[764],{"type":344,"value":765}," ===",{"type":339,"tag":361,"props":767,"children":768},{"style":584},[769],{"type":344,"value":770}," n",{"type":339,"tag":361,"props":772,"children":773},{"style":547},[774],{"type":344,"value":775}," &&",{"type":339,"tag":361,"props":777,"children":778},{"style":584},[779],{"type":344,"value":661},{"type":339,"tag":361,"props":781,"children":782},{"style":547},[783],{"type":344,"value":765},{"type":339,"tag":361,"props":785,"children":786},{"style":584},[787],{"type":344,"value":770},{"type":339,"tag":361,"props":789,"children":790},{"style":558},[791],{"type":344,"value":572},{"type":339,"tag":361,"props":793,"children":795},{"class":363,"line":794},15,[796,801,805,811,816,820,825,830],{"type":339,"tag":361,"props":797,"children":798},{"style":749},[799],{"type":344,"value":800},"      return",{"type":339,"tag":361,"props":802,"children":803},{"style":584},[804],{"type":344,"value":587},{"type":339,"tag":361,"props":806,"children":808},{"style":807},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[809],{"type":344,"value":810},".",{"type":339,"tag":361,"props":812,"children":813},{"style":541},[814],{"type":344,"value":815},"push",{"type":339,"tag":361,"props":817,"children":818},{"style":558},[819],{"type":344,"value":716},{"type":339,"tag":361,"props":821,"children":822},{"style":584},[823],{"type":344,"value":824},"str",{"type":339,"tag":361,"props":826,"children":827},{"style":558},[828],{"type":344,"value":829},")",{"type":339,"tag":361,"props":831,"children":832},{"style":599},[833],{"type":344,"value":602},{"type":339,"tag":361,"props":835,"children":837},{"class":363,"line":836},16,[838],{"type":339,"tag":361,"props":839,"children":840},{"style":558},[841],{"type":344,"value":842},"    }\n",{"type":339,"tag":361,"props":844,"children":846},{"class":363,"line":845},17,[847],{"type":339,"tag":361,"props":848,"children":849},{"style":472},[850],{"type":344,"value":851},"    // l \u003C r 时不满足条件，剪枝\n",{"type":339,"tag":361,"props":853,"children":855},{"class":363,"line":854},18,[856,860,864,868,873,877,882,887],{"type":339,"tag":361,"props":857,"children":858},{"style":749},[859],{"type":344,"value":752},{"type":339,"tag":361,"props":861,"children":862},{"style":558},[863],{"type":344,"value":561},{"type":339,"tag":361,"props":865,"children":866},{"style":584},[867],{"type":344,"value":721},{"type":339,"tag":361,"props":869,"children":870},{"style":547},[871],{"type":344,"value":872}," \u003C",{"type":339,"tag":361,"props":874,"children":875},{"style":584},[876],{"type":344,"value":661},{"type":339,"tag":361,"props":878,"children":879},{"style":558},[880],{"type":344,"value":881},") ",{"type":339,"tag":361,"props":883,"children":884},{"style":749},[885],{"type":344,"value":886},"return",{"type":339,"tag":361,"props":888,"children":889},{"style":599},[890],{"type":344,"value":602},{"type":339,"tag":361,"props":892,"children":894},{"class":363,"line":893},19,[895],{"type":339,"tag":361,"props":896,"children":897},{"style":472},[898],{"type":344,"value":899},"    // l \u003C n 时可插入左括号，最多可以插入 n 个\n",{"type":339,"tag":361,"props":901,"children":903},{"class":363,"line":902},20,[904,908,912,916,920,924],{"type":339,"tag":361,"props":905,"children":906},{"style":749},[907],{"type":344,"value":752},{"type":339,"tag":361,"props":909,"children":910},{"style":558},[911],{"type":344,"value":561},{"type":339,"tag":361,"props":913,"children":914},{"style":584},[915],{"type":344,"value":721},{"type":339,"tag":361,"props":917,"children":918},{"style":547},[919],{"type":344,"value":872},{"type":339,"tag":361,"props":921,"children":922},{"style":584},[923],{"type":344,"value":770},{"type":339,"tag":361,"props":925,"children":926},{"style":558},[927],{"type":344,"value":572},{"type":339,"tag":361,"props":929,"children":931},{"class":363,"line":930},21,[932,937,941,945,950,956,960,964,968,972,976,982,986],{"type":339,"tag":361,"props":933,"children":934},{"style":541},[935],{"type":344,"value":936},"      dfs",{"type":339,"tag":361,"props":938,"children":939},{"style":558},[940],{"type":344,"value":716},{"type":339,"tag":361,"props":942,"children":943},{"style":584},[944],{"type":344,"value":721},{"type":339,"tag":361,"props":946,"children":947},{"style":547},[948],{"type":344,"value":949}," +",{"type":339,"tag":361,"props":951,"children":953},{"style":952},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[954],{"type":344,"value":955}," 1",{"type":339,"tag":361,"props":957,"children":958},{"style":599},[959],{"type":344,"value":726},{"type":339,"tag":361,"props":961,"children":962},{"style":584},[963],{"type":344,"value":661},{"type":339,"tag":361,"props":965,"children":966},{"style":599},[967],{"type":344,"value":726},{"type":339,"tag":361,"props":969,"children":970},{"style":584},[971],{"type":344,"value":683},{"type":339,"tag":361,"props":973,"children":974},{"style":547},[975],{"type":344,"value":949},{"type":339,"tag":361,"props":977,"children":979},{"style":978},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[980],{"type":344,"value":981}," \"(\"",{"type":339,"tag":361,"props":983,"children":984},{"style":558},[985],{"type":344,"value":829},{"type":339,"tag":361,"props":987,"children":988},{"style":599},[989],{"type":344,"value":602},{"type":339,"tag":361,"props":991,"children":993},{"class":363,"line":992},22,[994],{"type":339,"tag":361,"props":995,"children":996},{"style":558},[997],{"type":344,"value":842},{"type":339,"tag":361,"props":999,"children":1001},{"class":363,"line":1000},23,[1002],{"type":339,"tag":361,"props":1003,"children":1004},{"style":472},[1005],{"type":344,"value":1006},"    // r \u003C l 时，可以插入右括号\n",{"type":339,"tag":361,"props":1008,"children":1010},{"class":363,"line":1009},24,[1011,1015,1019,1024,1028,1032],{"type":339,"tag":361,"props":1012,"children":1013},{"style":749},[1014],{"type":344,"value":752},{"type":339,"tag":361,"props":1016,"children":1017},{"style":558},[1018],{"type":344,"value":561},{"type":339,"tag":361,"props":1020,"children":1021},{"style":584},[1022],{"type":344,"value":1023},"r",{"type":339,"tag":361,"props":1025,"children":1026},{"style":547},[1027],{"type":344,"value":872},{"type":339,"tag":361,"props":1029,"children":1030},{"style":584},[1031],{"type":344,"value":639},{"type":339,"tag":361,"props":1033,"children":1034},{"style":558},[1035],{"type":344,"value":572},{"type":339,"tag":361,"props":1037,"children":1039},{"class":363,"line":1038},25,[1040,1044,1048,1052,1056,1060,1064,1068,1072,1076,1080,1085,1089],{"type":339,"tag":361,"props":1041,"children":1042},{"style":541},[1043],{"type":344,"value":936},{"type":339,"tag":361,"props":1045,"children":1046},{"style":558},[1047],{"type":344,"value":716},{"type":339,"tag":361,"props":1049,"children":1050},{"style":584},[1051],{"type":344,"value":721},{"type":339,"tag":361,"props":1053,"children":1054},{"style":599},[1055],{"type":344,"value":726},{"type":339,"tag":361,"props":1057,"children":1058},{"style":584},[1059],{"type":344,"value":661},{"type":339,"tag":361,"props":1061,"children":1062},{"style":547},[1063],{"type":344,"value":949},{"type":339,"tag":361,"props":1065,"children":1066},{"style":952},[1067],{"type":344,"value":955},{"type":339,"tag":361,"props":1069,"children":1070},{"style":599},[1071],{"type":344,"value":726},{"type":339,"tag":361,"props":1073,"children":1074},{"style":584},[1075],{"type":344,"value":683},{"type":339,"tag":361,"props":1077,"children":1078},{"style":547},[1079],{"type":344,"value":949},{"type":339,"tag":361,"props":1081,"children":1082},{"style":978},[1083],{"type":344,"value":1084}," \")\"",{"type":339,"tag":361,"props":1086,"children":1087},{"style":558},[1088],{"type":344,"value":829},{"type":339,"tag":361,"props":1090,"children":1091},{"style":599},[1092],{"type":344,"value":602},{"type":339,"tag":361,"props":1094,"children":1096},{"class":363,"line":1095},26,[1097],{"type":339,"tag":361,"props":1098,"children":1099},{"style":558},[1100],{"type":344,"value":842},{"type":339,"tag":361,"props":1102,"children":1104},{"class":363,"line":1103},27,[1105],{"type":339,"tag":361,"props":1106,"children":1107},{"style":558},[1108],{"type":344,"value":1109},"  }\n",{"type":339,"tag":361,"props":1111,"children":1113},{"class":363,"line":1112},28,[1114],{"type":339,"tag":361,"props":1115,"children":1116},{"emptyLinePlaceholder":609},[1117],{"type":344,"value":612},{"type":339,"tag":361,"props":1119,"children":1121},{"class":363,"line":1120},29,[1122,1127,1131,1136,1140,1145,1149,1154,1158],{"type":339,"tag":361,"props":1123,"children":1124},{"style":541},[1125],{"type":344,"value":1126},"  dfs",{"type":339,"tag":361,"props":1128,"children":1129},{"style":558},[1130],{"type":344,"value":716},{"type":339,"tag":361,"props":1132,"children":1133},{"style":952},[1134],{"type":344,"value":1135},"0",{"type":339,"tag":361,"props":1137,"children":1138},{"style":599},[1139],{"type":344,"value":726},{"type":339,"tag":361,"props":1141,"children":1142},{"style":952},[1143],{"type":344,"value":1144}," 0",{"type":339,"tag":361,"props":1146,"children":1147},{"style":599},[1148],{"type":344,"value":726},{"type":339,"tag":361,"props":1150,"children":1151},{"style":978},[1152],{"type":344,"value":1153}," \"\"",{"type":339,"tag":361,"props":1155,"children":1156},{"style":558},[1157],{"type":344,"value":829},{"type":339,"tag":361,"props":1159,"children":1160},{"style":599},[1161],{"type":344,"value":602},{"type":339,"tag":361,"props":1163,"children":1165},{"class":363,"line":1164},30,[1166],{"type":339,"tag":361,"props":1167,"children":1168},{"emptyLinePlaceholder":609},[1169],{"type":344,"value":612},{"type":339,"tag":361,"props":1171,"children":1173},{"class":363,"line":1172},31,[1174,1179,1183],{"type":339,"tag":361,"props":1175,"children":1176},{"style":749},[1177],{"type":344,"value":1178},"  return",{"type":339,"tag":361,"props":1180,"children":1181},{"style":584},[1182],{"type":344,"value":587},{"type":339,"tag":361,"props":1184,"children":1185},{"style":599},[1186],{"type":344,"value":602},{"type":339,"tag":361,"props":1188,"children":1190},{"class":363,"line":1189},32,[1191,1196],{"type":339,"tag":361,"props":1192,"children":1193},{"style":558},[1194],{"type":344,"value":1195},"}",{"type":339,"tag":361,"props":1197,"children":1198},{"style":599},[1199],{"type":344,"value":602},{"type":339,"tag":1201,"props":1202,"children":1203},"style",{},[1204],{"type":344,"value":1205},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":332,"searchDepth":531,"depth":531,"links":1207},[1208,1209],{"id":426,"depth":373,"text":426},{"id":449,"depth":373,"text":449,"children":1210},[1211],{"id":455,"depth":504,"text":455},"markdown","content:2.code:1.algorithm:3.leetcode:22.generate-parentheses.md","content","2.code/1.algorithm/3.leetcode/22.generate-parentheses.md","md",[1218,1220],{"_path":91,"title":90,"description":1219},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",{"_path":97,"title":96,"description":1221},"给你一个链表数组，每个链表都已经按升序排列。",1712330886994]