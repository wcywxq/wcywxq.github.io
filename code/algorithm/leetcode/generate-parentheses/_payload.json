[{"data":1,"prerenderedAt":1204},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/generate-parentheses":281,"/code/algorithm/leetcode/generate-parentheses-surround":1199},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,225,274],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,47],{"title":41,"_path":42,"children":43},"剑指 offer","/code/algorithm/sword-ofter",[44],{"title":45,"_path":46},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":48,"_path":49,"children":50},"力扣 leetCode","/code/algorithm/leetcode",[51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222],{"title":52,"_path":53},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":55,"_path":56},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":58,"_path":59},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":61,"_path":62},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":64,"_path":65},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":67,"_path":68},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":70,"_path":71},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":73,"_path":74},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":76,"_path":77},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":79,"_path":80},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":82,"_path":83},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":85,"_path":86},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":88,"_path":89},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":91,"_path":92},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":94,"_path":95},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":97,"_path":98},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":100,"_path":101},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":103,"_path":104},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":106,"_path":107},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":109,"_path":110},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":112,"_path":113},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":115,"_path":116},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":118,"_path":119},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":121,"_path":122},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":124,"_path":125},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":127,"_path":128},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":130,"_path":131},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":133,"_path":134},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":136,"_path":137},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":139,"_path":140},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":142,"_path":143},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":145,"_path":146},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":148,"_path":149},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":151,"_path":152},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":154,"_path":155},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":157,"_path":158},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":160,"_path":161},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":163,"_path":164},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":166,"_path":167},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":169,"_path":170},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":172,"_path":173},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":175,"_path":176},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":178,"_path":179},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":181,"_path":182},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":184,"_path":185},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":187,"_path":188},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":190,"_path":191},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":193,"_path":194},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":196,"_path":197},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":199,"_path":200},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":202,"_path":203},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":217,"_path":218},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":220,"_path":221},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":223,"_path":224},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":226,"_path":227,"children":228},"源码实现","/code/source",[229,254,267],{"title":230,"_path":231,"children":232},"原生 api","/code/source/native-api",[233,236,239,242,245,248,251],{"title":234,"_path":235},"ajax","/code/source/native-api/ajax",{"title":237,"_path":238},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":240,"_path":241},"new 操作符","/code/source/native-api/new",{"title":243,"_path":244},"instanceof 关键字","/code/source/native-api/instanceof",{"title":246,"_path":247},"定时器","/code/source/native-api/timer",{"title":249,"_path":250},"JSON.stringify","/code/source/native-api/json-stringify",{"title":252,"_path":253},"Iterator 迭代器","/code/source/native-api/iterator",{"title":255,"_path":256,"children":257},"数组 Array","/code/source/array",[258,261,264],{"title":259,"_path":260},"数组去重","/code/source/array/remove-duplicate",{"title":262,"_path":263},"数组扁平化","/code/source/array/flat",{"title":265,"_path":266},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":268,"_path":269,"children":270},"字符串 String","/code/source/string",[271],{"title":272,"_path":273},"repeat()","/code/source/string/repeat",{"title":275,"_path":276,"children":277},"业务场景","/code/scene",[278],{"title":279,"_path":280},"顺序打印 url 并支持 retry","/code/scene/promise-url-retry",{"_path":77,"_dir":282,"_draft":283,"_partial":283,"_locale":284,"title":76,"description":285,"url":286,"body":287,"_type":1195,"_id":1196,"_source":1197,"_file":1198,"_extension":307},"leetcode",false,"","数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。","https://leetcode.cn/problems/generate-parentheses",{"type":288,"children":289,"toc":1189},"root",[290,297,302,351,356,391,396,406,412,417,430,435,441,1183],{"type":291,"tag":292,"props":293,"children":294},"element","p",{},[295],{"type":296,"value":285},"text",{"type":291,"tag":292,"props":298,"children":299},{},[300],{"type":296,"value":301},"示例 1：",{"type":291,"tag":303,"props":304,"children":308},"pre",{"className":305,"code":306,"language":307,"meta":284,"style":284},"language-md shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：n = 3\n输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n","md",[309],{"type":291,"tag":310,"props":311,"children":312},"code",{"__ignoreMap":284},[313,325],{"type":291,"tag":314,"props":315,"children":318},"span",{"class":316,"line":317},"line",1,[319],{"type":291,"tag":314,"props":320,"children":322},{"style":321},"--shiki-light:#110000;--shiki-default:#110000;--shiki-dark:#BFBDB6",[323],{"type":296,"value":324},"输入：n = 3\n",{"type":291,"tag":314,"props":326,"children":328},{"class":316,"line":327},2,[329,334,340,346],{"type":291,"tag":314,"props":330,"children":331},{"style":321},[332],{"type":296,"value":333},"输出：",{"type":291,"tag":314,"props":335,"children":337},{"style":336},"--shiki-light:#87429A;--shiki-default:#87429A;--shiki-dark:#BFBDB6",[338],{"type":296,"value":339},"[",{"type":291,"tag":314,"props":341,"children":343},{"style":342},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#39BAE6",[344],{"type":296,"value":345},"\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"",{"type":291,"tag":314,"props":347,"children":348},{"style":336},[349],{"type":296,"value":350},"]\n",{"type":291,"tag":292,"props":352,"children":353},{},[354],{"type":296,"value":355},"示例 2：",{"type":291,"tag":303,"props":357,"children":359},{"className":305,"code":358,"language":307,"meta":284,"style":284},"输入：n = 1\n输出：[\"()\"]\n",[360],{"type":291,"tag":310,"props":361,"children":362},{"__ignoreMap":284},[363,371],{"type":291,"tag":314,"props":364,"children":365},{"class":316,"line":317},[366],{"type":291,"tag":314,"props":367,"children":368},{"style":321},[369],{"type":296,"value":370},"输入：n = 1\n",{"type":291,"tag":314,"props":372,"children":373},{"class":316,"line":327},[374,378,382,387],{"type":291,"tag":314,"props":375,"children":376},{"style":321},[377],{"type":296,"value":333},{"type":291,"tag":314,"props":379,"children":380},{"style":336},[381],{"type":296,"value":339},{"type":291,"tag":314,"props":383,"children":384},{"style":342},[385],{"type":296,"value":386},"\"()\"",{"type":291,"tag":314,"props":388,"children":389},{"style":336},[390],{"type":296,"value":350},{"type":291,"tag":292,"props":392,"children":393},{},[394],{"type":296,"value":395},"提示：",{"type":291,"tag":397,"props":398,"children":399},"ul",{},[400],{"type":291,"tag":401,"props":402,"children":403},"li",{},[404],{"type":296,"value":405},"1 \u003C= n \u003C= 8",{"type":291,"tag":407,"props":408,"children":410},"h2",{"id":409},"解题思路",[411],{"type":296,"value":409},{"type":291,"tag":292,"props":413,"children":414},{},[415],{"type":296,"value":416},"由于需要求解所有的可能，因此回溯就不难想到，回溯的思路和写法相对比较固定，并且回溯的优化手段大多是剪枝。\n不难想到，如果左括号的数据小于右括号，我们可以提前退出，这就是这道题的剪枝。例如：())...，后面就不用看了，直接退出即可。回溯的退出条件也不难想到：",{"type":291,"tag":397,"props":418,"children":419},{},[420,425],{"type":291,"tag":401,"props":421,"children":422},{},[423],{"type":296,"value":424},"左括号数目 = 右括号数目",{"type":291,"tag":401,"props":426,"children":427},{},[428],{"type":296,"value":429},"左括号数据 + 右括号数据 = 2 * n\n因此这道题可以使用深度优先搜索（回溯思想），从空字符串开始构造，做加法，即 dfs(左括号数目，右括号数据，路径)，我们从 dfs(0, 0, \"\") 开始",{"type":291,"tag":407,"props":431,"children":433},{"id":432},"实现",[434],{"type":296,"value":432},{"type":291,"tag":436,"props":437,"children":439},"h3",{"id":438},"回溯",[440],{"type":296,"value":438},{"type":291,"tag":303,"props":442,"children":446},{"className":443,"code":444,"language":445,"meta":284,"style":284},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number} n\n * @return {string[]}\n */\nvar generateParenthesis = function (n) {\n  const res = [];\n\n  /**\n   * @param l 左侧括号已经用了几个\n   * @param r 右侧括号已经用了几个\n   * @param str 当前递归得到的拼接字符串结果\n   */\n  function dfs(l, r, str) {\n    if (l === n && r === n) {\n      return res.push(str);\n    }\n    // l \u003C r 时不满足条件，剪枝\n    if (l \u003C r) return;\n    // l \u003C n 时可插入左括号，最多可以插入 n 个\n    if (l \u003C n) {\n      dfs(l + 1, r, str + \"(\");\n    }\n    // r \u003C l 时，可以插入右括号\n    if (r \u003C l) {\n      dfs(l, r + 1, str + \")\");\n    }\n  }\n\n  dfs(0, 0, \"\");\n\n  return res;\n};\n","js",[447],{"type":291,"tag":310,"props":448,"children":449},{"__ignoreMap":284},[450,459,485,503,512,556,586,596,605,628,650,672,681,726,775,817,826,835,874,883,911,973,981,990,1019,1076,1084,1093,1101,1145,1153,1170],{"type":291,"tag":314,"props":451,"children":452},{"class":316,"line":317},[453],{"type":291,"tag":314,"props":454,"children":456},{"style":455},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[457],{"type":296,"value":458},"/**\n",{"type":291,"tag":314,"props":460,"children":461},{"class":316,"line":327},[462,467,473,479],{"type":291,"tag":314,"props":463,"children":464},{"style":455},[465],{"type":296,"value":466}," * ",{"type":291,"tag":314,"props":468,"children":470},{"style":469},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[471],{"type":296,"value":472},"@param",{"type":291,"tag":314,"props":474,"children":476},{"style":475},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[477],{"type":296,"value":478}," {number}",{"type":291,"tag":314,"props":480,"children":482},{"style":481},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[483],{"type":296,"value":484}," n\n",{"type":291,"tag":314,"props":486,"children":488},{"class":316,"line":487},3,[489,493,498],{"type":291,"tag":314,"props":490,"children":491},{"style":455},[492],{"type":296,"value":466},{"type":291,"tag":314,"props":494,"children":495},{"style":469},[496],{"type":296,"value":497},"@return",{"type":291,"tag":314,"props":499,"children":500},{"style":475},[501],{"type":296,"value":502}," {string[]}\n",{"type":291,"tag":314,"props":504,"children":506},{"class":316,"line":505},4,[507],{"type":291,"tag":314,"props":508,"children":509},{"style":455},[510],{"type":296,"value":511}," */\n",{"type":291,"tag":314,"props":513,"children":515},{"class":316,"line":514},5,[516,522,528,534,539,545,551],{"type":291,"tag":314,"props":517,"children":519},{"style":518},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[520],{"type":296,"value":521},"var",{"type":291,"tag":314,"props":523,"children":525},{"style":524},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[526],{"type":296,"value":527}," generateParenthesis",{"type":291,"tag":314,"props":529,"children":531},{"style":530},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[532],{"type":296,"value":533}," =",{"type":291,"tag":314,"props":535,"children":536},{"style":518},[537],{"type":296,"value":538}," function",{"type":291,"tag":314,"props":540,"children":542},{"style":541},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[543],{"type":296,"value":544}," (",{"type":291,"tag":314,"props":546,"children":548},{"style":547},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[549],{"type":296,"value":550},"n",{"type":291,"tag":314,"props":552,"children":553},{"style":541},[554],{"type":296,"value":555},") {\n",{"type":291,"tag":314,"props":557,"children":559},{"class":316,"line":558},6,[560,565,571,575,580],{"type":291,"tag":314,"props":561,"children":562},{"style":518},[563],{"type":296,"value":564},"  const",{"type":291,"tag":314,"props":566,"children":568},{"style":567},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[569],{"type":296,"value":570}," res",{"type":291,"tag":314,"props":572,"children":573},{"style":530},[574],{"type":296,"value":533},{"type":291,"tag":314,"props":576,"children":577},{"style":541},[578],{"type":296,"value":579}," []",{"type":291,"tag":314,"props":581,"children":583},{"style":582},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[584],{"type":296,"value":585},";\n",{"type":291,"tag":314,"props":587,"children":589},{"class":316,"line":588},7,[590],{"type":291,"tag":314,"props":591,"children":593},{"emptyLinePlaceholder":592},true,[594],{"type":296,"value":595},"\n",{"type":291,"tag":314,"props":597,"children":599},{"class":316,"line":598},8,[600],{"type":291,"tag":314,"props":601,"children":602},{"style":455},[603],{"type":296,"value":604},"  /**\n",{"type":291,"tag":314,"props":606,"children":608},{"class":316,"line":607},9,[609,614,618,623],{"type":291,"tag":314,"props":610,"children":611},{"style":455},[612],{"type":296,"value":613},"   * ",{"type":291,"tag":314,"props":615,"children":616},{"style":469},[617],{"type":296,"value":472},{"type":291,"tag":314,"props":619,"children":620},{"style":481},[621],{"type":296,"value":622}," l",{"type":291,"tag":314,"props":624,"children":625},{"style":455},[626],{"type":296,"value":627}," 左侧括号已经用了几个\n",{"type":291,"tag":314,"props":629,"children":631},{"class":316,"line":630},10,[632,636,640,645],{"type":291,"tag":314,"props":633,"children":634},{"style":455},[635],{"type":296,"value":613},{"type":291,"tag":314,"props":637,"children":638},{"style":469},[639],{"type":296,"value":472},{"type":291,"tag":314,"props":641,"children":642},{"style":481},[643],{"type":296,"value":644}," r",{"type":291,"tag":314,"props":646,"children":647},{"style":455},[648],{"type":296,"value":649}," 右侧括号已经用了几个\n",{"type":291,"tag":314,"props":651,"children":653},{"class":316,"line":652},11,[654,658,662,667],{"type":291,"tag":314,"props":655,"children":656},{"style":455},[657],{"type":296,"value":613},{"type":291,"tag":314,"props":659,"children":660},{"style":469},[661],{"type":296,"value":472},{"type":291,"tag":314,"props":663,"children":664},{"style":481},[665],{"type":296,"value":666}," str",{"type":291,"tag":314,"props":668,"children":669},{"style":455},[670],{"type":296,"value":671}," 当前递归得到的拼接字符串结果\n",{"type":291,"tag":314,"props":673,"children":675},{"class":316,"line":674},12,[676],{"type":291,"tag":314,"props":677,"children":678},{"style":455},[679],{"type":296,"value":680},"   */\n",{"type":291,"tag":314,"props":682,"children":684},{"class":316,"line":683},13,[685,690,695,700,705,710,714,718,722],{"type":291,"tag":314,"props":686,"children":687},{"style":518},[688],{"type":296,"value":689},"  function",{"type":291,"tag":314,"props":691,"children":692},{"style":524},[693],{"type":296,"value":694}," dfs",{"type":291,"tag":314,"props":696,"children":697},{"style":541},[698],{"type":296,"value":699},"(",{"type":291,"tag":314,"props":701,"children":702},{"style":547},[703],{"type":296,"value":704},"l",{"type":291,"tag":314,"props":706,"children":707},{"style":582},[708],{"type":296,"value":709},",",{"type":291,"tag":314,"props":711,"children":712},{"style":547},[713],{"type":296,"value":644},{"type":291,"tag":314,"props":715,"children":716},{"style":582},[717],{"type":296,"value":709},{"type":291,"tag":314,"props":719,"children":720},{"style":547},[721],{"type":296,"value":666},{"type":291,"tag":314,"props":723,"children":724},{"style":541},[725],{"type":296,"value":555},{"type":291,"tag":314,"props":727,"children":729},{"class":316,"line":728},14,[730,736,740,744,749,754,759,763,767,771],{"type":291,"tag":314,"props":731,"children":733},{"style":732},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[734],{"type":296,"value":735},"    if",{"type":291,"tag":314,"props":737,"children":738},{"style":541},[739],{"type":296,"value":544},{"type":291,"tag":314,"props":741,"children":742},{"style":567},[743],{"type":296,"value":704},{"type":291,"tag":314,"props":745,"children":746},{"style":530},[747],{"type":296,"value":748}," ===",{"type":291,"tag":314,"props":750,"children":751},{"style":567},[752],{"type":296,"value":753}," n",{"type":291,"tag":314,"props":755,"children":756},{"style":530},[757],{"type":296,"value":758}," &&",{"type":291,"tag":314,"props":760,"children":761},{"style":567},[762],{"type":296,"value":644},{"type":291,"tag":314,"props":764,"children":765},{"style":530},[766],{"type":296,"value":748},{"type":291,"tag":314,"props":768,"children":769},{"style":567},[770],{"type":296,"value":753},{"type":291,"tag":314,"props":772,"children":773},{"style":541},[774],{"type":296,"value":555},{"type":291,"tag":314,"props":776,"children":778},{"class":316,"line":777},15,[779,784,788,794,799,803,808,813],{"type":291,"tag":314,"props":780,"children":781},{"style":732},[782],{"type":296,"value":783},"      return",{"type":291,"tag":314,"props":785,"children":786},{"style":567},[787],{"type":296,"value":570},{"type":291,"tag":314,"props":789,"children":791},{"style":790},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[792],{"type":296,"value":793},".",{"type":291,"tag":314,"props":795,"children":796},{"style":524},[797],{"type":296,"value":798},"push",{"type":291,"tag":314,"props":800,"children":801},{"style":541},[802],{"type":296,"value":699},{"type":291,"tag":314,"props":804,"children":805},{"style":567},[806],{"type":296,"value":807},"str",{"type":291,"tag":314,"props":809,"children":810},{"style":541},[811],{"type":296,"value":812},")",{"type":291,"tag":314,"props":814,"children":815},{"style":582},[816],{"type":296,"value":585},{"type":291,"tag":314,"props":818,"children":820},{"class":316,"line":819},16,[821],{"type":291,"tag":314,"props":822,"children":823},{"style":541},[824],{"type":296,"value":825},"    }\n",{"type":291,"tag":314,"props":827,"children":829},{"class":316,"line":828},17,[830],{"type":291,"tag":314,"props":831,"children":832},{"style":455},[833],{"type":296,"value":834},"    // l \u003C r 时不满足条件，剪枝\n",{"type":291,"tag":314,"props":836,"children":838},{"class":316,"line":837},18,[839,843,847,851,856,860,865,870],{"type":291,"tag":314,"props":840,"children":841},{"style":732},[842],{"type":296,"value":735},{"type":291,"tag":314,"props":844,"children":845},{"style":541},[846],{"type":296,"value":544},{"type":291,"tag":314,"props":848,"children":849},{"style":567},[850],{"type":296,"value":704},{"type":291,"tag":314,"props":852,"children":853},{"style":530},[854],{"type":296,"value":855}," \u003C",{"type":291,"tag":314,"props":857,"children":858},{"style":567},[859],{"type":296,"value":644},{"type":291,"tag":314,"props":861,"children":862},{"style":541},[863],{"type":296,"value":864},") ",{"type":291,"tag":314,"props":866,"children":867},{"style":732},[868],{"type":296,"value":869},"return",{"type":291,"tag":314,"props":871,"children":872},{"style":582},[873],{"type":296,"value":585},{"type":291,"tag":314,"props":875,"children":877},{"class":316,"line":876},19,[878],{"type":291,"tag":314,"props":879,"children":880},{"style":455},[881],{"type":296,"value":882},"    // l \u003C n 时可插入左括号，最多可以插入 n 个\n",{"type":291,"tag":314,"props":884,"children":886},{"class":316,"line":885},20,[887,891,895,899,903,907],{"type":291,"tag":314,"props":888,"children":889},{"style":732},[890],{"type":296,"value":735},{"type":291,"tag":314,"props":892,"children":893},{"style":541},[894],{"type":296,"value":544},{"type":291,"tag":314,"props":896,"children":897},{"style":567},[898],{"type":296,"value":704},{"type":291,"tag":314,"props":900,"children":901},{"style":530},[902],{"type":296,"value":855},{"type":291,"tag":314,"props":904,"children":905},{"style":567},[906],{"type":296,"value":753},{"type":291,"tag":314,"props":908,"children":909},{"style":541},[910],{"type":296,"value":555},{"type":291,"tag":314,"props":912,"children":914},{"class":316,"line":913},21,[915,920,924,928,933,939,943,947,951,955,959,965,969],{"type":291,"tag":314,"props":916,"children":917},{"style":524},[918],{"type":296,"value":919},"      dfs",{"type":291,"tag":314,"props":921,"children":922},{"style":541},[923],{"type":296,"value":699},{"type":291,"tag":314,"props":925,"children":926},{"style":567},[927],{"type":296,"value":704},{"type":291,"tag":314,"props":929,"children":930},{"style":530},[931],{"type":296,"value":932}," +",{"type":291,"tag":314,"props":934,"children":936},{"style":935},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[937],{"type":296,"value":938}," 1",{"type":291,"tag":314,"props":940,"children":941},{"style":582},[942],{"type":296,"value":709},{"type":291,"tag":314,"props":944,"children":945},{"style":567},[946],{"type":296,"value":644},{"type":291,"tag":314,"props":948,"children":949},{"style":582},[950],{"type":296,"value":709},{"type":291,"tag":314,"props":952,"children":953},{"style":567},[954],{"type":296,"value":666},{"type":291,"tag":314,"props":956,"children":957},{"style":530},[958],{"type":296,"value":932},{"type":291,"tag":314,"props":960,"children":962},{"style":961},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[963],{"type":296,"value":964}," \"(\"",{"type":291,"tag":314,"props":966,"children":967},{"style":541},[968],{"type":296,"value":812},{"type":291,"tag":314,"props":970,"children":971},{"style":582},[972],{"type":296,"value":585},{"type":291,"tag":314,"props":974,"children":976},{"class":316,"line":975},22,[977],{"type":291,"tag":314,"props":978,"children":979},{"style":541},[980],{"type":296,"value":825},{"type":291,"tag":314,"props":982,"children":984},{"class":316,"line":983},23,[985],{"type":291,"tag":314,"props":986,"children":987},{"style":455},[988],{"type":296,"value":989},"    // r \u003C l 时，可以插入右括号\n",{"type":291,"tag":314,"props":991,"children":993},{"class":316,"line":992},24,[994,998,1002,1007,1011,1015],{"type":291,"tag":314,"props":995,"children":996},{"style":732},[997],{"type":296,"value":735},{"type":291,"tag":314,"props":999,"children":1000},{"style":541},[1001],{"type":296,"value":544},{"type":291,"tag":314,"props":1003,"children":1004},{"style":567},[1005],{"type":296,"value":1006},"r",{"type":291,"tag":314,"props":1008,"children":1009},{"style":530},[1010],{"type":296,"value":855},{"type":291,"tag":314,"props":1012,"children":1013},{"style":567},[1014],{"type":296,"value":622},{"type":291,"tag":314,"props":1016,"children":1017},{"style":541},[1018],{"type":296,"value":555},{"type":291,"tag":314,"props":1020,"children":1022},{"class":316,"line":1021},25,[1023,1027,1031,1035,1039,1043,1047,1051,1055,1059,1063,1068,1072],{"type":291,"tag":314,"props":1024,"children":1025},{"style":524},[1026],{"type":296,"value":919},{"type":291,"tag":314,"props":1028,"children":1029},{"style":541},[1030],{"type":296,"value":699},{"type":291,"tag":314,"props":1032,"children":1033},{"style":567},[1034],{"type":296,"value":704},{"type":291,"tag":314,"props":1036,"children":1037},{"style":582},[1038],{"type":296,"value":709},{"type":291,"tag":314,"props":1040,"children":1041},{"style":567},[1042],{"type":296,"value":644},{"type":291,"tag":314,"props":1044,"children":1045},{"style":530},[1046],{"type":296,"value":932},{"type":291,"tag":314,"props":1048,"children":1049},{"style":935},[1050],{"type":296,"value":938},{"type":291,"tag":314,"props":1052,"children":1053},{"style":582},[1054],{"type":296,"value":709},{"type":291,"tag":314,"props":1056,"children":1057},{"style":567},[1058],{"type":296,"value":666},{"type":291,"tag":314,"props":1060,"children":1061},{"style":530},[1062],{"type":296,"value":932},{"type":291,"tag":314,"props":1064,"children":1065},{"style":961},[1066],{"type":296,"value":1067}," \")\"",{"type":291,"tag":314,"props":1069,"children":1070},{"style":541},[1071],{"type":296,"value":812},{"type":291,"tag":314,"props":1073,"children":1074},{"style":582},[1075],{"type":296,"value":585},{"type":291,"tag":314,"props":1077,"children":1079},{"class":316,"line":1078},26,[1080],{"type":291,"tag":314,"props":1081,"children":1082},{"style":541},[1083],{"type":296,"value":825},{"type":291,"tag":314,"props":1085,"children":1087},{"class":316,"line":1086},27,[1088],{"type":291,"tag":314,"props":1089,"children":1090},{"style":541},[1091],{"type":296,"value":1092},"  }\n",{"type":291,"tag":314,"props":1094,"children":1096},{"class":316,"line":1095},28,[1097],{"type":291,"tag":314,"props":1098,"children":1099},{"emptyLinePlaceholder":592},[1100],{"type":296,"value":595},{"type":291,"tag":314,"props":1102,"children":1104},{"class":316,"line":1103},29,[1105,1110,1114,1119,1123,1128,1132,1137,1141],{"type":291,"tag":314,"props":1106,"children":1107},{"style":524},[1108],{"type":296,"value":1109},"  dfs",{"type":291,"tag":314,"props":1111,"children":1112},{"style":541},[1113],{"type":296,"value":699},{"type":291,"tag":314,"props":1115,"children":1116},{"style":935},[1117],{"type":296,"value":1118},"0",{"type":291,"tag":314,"props":1120,"children":1121},{"style":582},[1122],{"type":296,"value":709},{"type":291,"tag":314,"props":1124,"children":1125},{"style":935},[1126],{"type":296,"value":1127}," 0",{"type":291,"tag":314,"props":1129,"children":1130},{"style":582},[1131],{"type":296,"value":709},{"type":291,"tag":314,"props":1133,"children":1134},{"style":961},[1135],{"type":296,"value":1136}," \"\"",{"type":291,"tag":314,"props":1138,"children":1139},{"style":541},[1140],{"type":296,"value":812},{"type":291,"tag":314,"props":1142,"children":1143},{"style":582},[1144],{"type":296,"value":585},{"type":291,"tag":314,"props":1146,"children":1148},{"class":316,"line":1147},30,[1149],{"type":291,"tag":314,"props":1150,"children":1151},{"emptyLinePlaceholder":592},[1152],{"type":296,"value":595},{"type":291,"tag":314,"props":1154,"children":1156},{"class":316,"line":1155},31,[1157,1162,1166],{"type":291,"tag":314,"props":1158,"children":1159},{"style":732},[1160],{"type":296,"value":1161},"  return",{"type":291,"tag":314,"props":1163,"children":1164},{"style":567},[1165],{"type":296,"value":570},{"type":291,"tag":314,"props":1167,"children":1168},{"style":582},[1169],{"type":296,"value":585},{"type":291,"tag":314,"props":1171,"children":1173},{"class":316,"line":1172},32,[1174,1179],{"type":291,"tag":314,"props":1175,"children":1176},{"style":541},[1177],{"type":296,"value":1178},"}",{"type":291,"tag":314,"props":1180,"children":1181},{"style":582},[1182],{"type":296,"value":585},{"type":291,"tag":1184,"props":1185,"children":1186},"style",{},[1187],{"type":296,"value":1188},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":284,"searchDepth":514,"depth":514,"links":1190},[1191,1192],{"id":409,"depth":327,"text":409},{"id":432,"depth":327,"text":432,"children":1193},[1194],{"id":438,"depth":487,"text":438},"markdown","content:2.code:1.algorithm:2.leetcode:22.generate-parentheses.md","content","2.code/1.algorithm/2.leetcode/22.generate-parentheses.md",[1200,1202],{"_path":74,"title":73,"description":1201},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",{"_path":80,"title":79,"description":1203},"给你一个链表数组，每个链表都已经按升序排列。",1711979731869]