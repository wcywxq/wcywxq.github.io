[{"data":1,"prerenderedAt":1246},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/generate-parentheses":353,"/code/algorithm/leetcode/generate-parentheses-surround":1241},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319,341,344,347,350],{"title":320,"_path":321,"children":322},"Promise","/code/scene/promise",[323,326,329,332,335,338],{"title":324,"_path":325},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":327,"_path":328},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":330,"_path":331},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":333,"_path":334},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":336,"_path":337},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":339,"_path":340},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":342,"_path":343},"计算对象占用字节数","/code/scene/calcuate-object-bytes",{"title":345,"_path":346},"lodash.get","/code/scene/lodash-get",{"title":348,"_path":349},"sku 算法实现","/code/scene/sku",{"title":351,"_path":352},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":94,"_dir":354,"_draft":355,"_partial":355,"_locale":356,"title":93,"description":357,"url":358,"body":359,"_type":1236,"_id":1237,"_source":1238,"_file":1239,"_extension":1240},"leetcode",false,"","数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。","https://leetcode.cn/problems/generate-parentheses",{"type":360,"children":361,"toc":1230},"root",[362,369,374,404,409,432,437,447,453,458,471,476,482,1224],{"type":363,"tag":364,"props":365,"children":366},"element","p",{},[367],{"type":368,"value":357},"text",{"type":363,"tag":364,"props":370,"children":371},{},[372],{"type":368,"value":373},"示例 1：",{"type":363,"tag":375,"props":376,"children":379},"pre",{"className":377,"code":378,"language":368,"meta":356,"style":356},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：n = 3\n输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",[380],{"type":363,"tag":381,"props":382,"children":383},"code",{"__ignoreMap":356},[384,395],{"type":363,"tag":385,"props":386,"children":389},"span",{"class":387,"line":388},"line",1,[390],{"type":363,"tag":385,"props":391,"children":392},{},[393],{"type":368,"value":394},"输入：n = 3\n",{"type":363,"tag":385,"props":396,"children":398},{"class":387,"line":397},2,[399],{"type":363,"tag":385,"props":400,"children":401},{},[402],{"type":368,"value":403},"输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",{"type":363,"tag":364,"props":405,"children":406},{},[407],{"type":368,"value":408},"示例 2：",{"type":363,"tag":375,"props":410,"children":412},{"className":377,"code":411,"language":368,"meta":356,"style":356},"输入：n = 1\n输出：[\"()\"]\n",[413],{"type":363,"tag":381,"props":414,"children":415},{"__ignoreMap":356},[416,424],{"type":363,"tag":385,"props":417,"children":418},{"class":387,"line":388},[419],{"type":363,"tag":385,"props":420,"children":421},{},[422],{"type":368,"value":423},"输入：n = 1\n",{"type":363,"tag":385,"props":425,"children":426},{"class":387,"line":397},[427],{"type":363,"tag":385,"props":428,"children":429},{},[430],{"type":368,"value":431},"输出：[\"()\"]\n",{"type":363,"tag":364,"props":433,"children":434},{},[435],{"type":368,"value":436},"提示：",{"type":363,"tag":438,"props":439,"children":440},"ul",{},[441],{"type":363,"tag":442,"props":443,"children":444},"li",{},[445],{"type":368,"value":446},"1 \u003C= n \u003C= 8",{"type":363,"tag":448,"props":449,"children":451},"h2",{"id":450},"解题思路",[452],{"type":368,"value":450},{"type":363,"tag":364,"props":454,"children":455},{},[456],{"type":368,"value":457},"由于需要求解所有的可能，因此回溯就不难想到，回溯的思路和写法相对比较固定，并且回溯的优化手段大多是剪枝。\n不难想到，如果左括号的数据小于右括号，我们可以提前退出，这就是这道题的剪枝。例如：())...，后面就不用看了，直接退出即可。回溯的退出条件也不难想到：",{"type":363,"tag":438,"props":459,"children":460},{},[461,466],{"type":363,"tag":442,"props":462,"children":463},{},[464],{"type":368,"value":465},"左括号数目 = 右括号数目",{"type":363,"tag":442,"props":467,"children":468},{},[469],{"type":368,"value":470},"左括号数据 + 右括号数据 = 2 * n\n因此这道题可以使用深度优先搜索（回溯思想），从空字符串开始构造，做加法，即 dfs(左括号数目，右括号数据，路径)，我们从 dfs(0, 0, \"\") 开始",{"type":363,"tag":448,"props":472,"children":474},{"id":473},"实现",[475],{"type":368,"value":473},{"type":363,"tag":477,"props":478,"children":480},"h3",{"id":479},"回溯",[481],{"type":368,"value":479},{"type":363,"tag":375,"props":483,"children":487},{"className":484,"code":485,"language":486,"meta":356,"style":356},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number} n\n * @return {string[]}\n */\nvar generateParenthesis = function (n) {\n  const res = [];\n\n  /**\n   * @param l 左侧括号已经用了几个\n   * @param r 右侧括号已经用了几个\n   * @param str 当前递归得到的拼接字符串结果\n   */\n  function dfs(l, r, str) {\n    if (l === n && r === n) {\n      return res.push(str);\n    }\n    // l \u003C r 时不满足条件，剪枝\n    if (l \u003C r) return;\n    // l \u003C n 时可插入左括号，最多可以插入 n 个\n    if (l \u003C n) {\n      dfs(l + 1, r, str + \"(\");\n    }\n    // r \u003C l 时，可以插入右括号\n    if (r \u003C l) {\n      dfs(l, r + 1, str + \")\");\n    }\n  }\n\n  dfs(0, 0, \"\");\n\n  return res;\n};\n","js",[488],{"type":363,"tag":381,"props":489,"children":490},{"__ignoreMap":356},[491,500,526,544,553,597,627,637,646,669,691,713,722,767,816,858,867,876,915,924,952,1014,1022,1031,1060,1117,1125,1134,1142,1186,1194,1211],{"type":363,"tag":385,"props":492,"children":493},{"class":387,"line":388},[494],{"type":363,"tag":385,"props":495,"children":497},{"style":496},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[498],{"type":368,"value":499},"/**\n",{"type":363,"tag":385,"props":501,"children":502},{"class":387,"line":397},[503,508,514,520],{"type":363,"tag":385,"props":504,"children":505},{"style":496},[506],{"type":368,"value":507}," * ",{"type":363,"tag":385,"props":509,"children":511},{"style":510},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[512],{"type":368,"value":513},"@param",{"type":363,"tag":385,"props":515,"children":517},{"style":516},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[518],{"type":368,"value":519}," {number}",{"type":363,"tag":385,"props":521,"children":523},{"style":522},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[524],{"type":368,"value":525}," n\n",{"type":363,"tag":385,"props":527,"children":529},{"class":387,"line":528},3,[530,534,539],{"type":363,"tag":385,"props":531,"children":532},{"style":496},[533],{"type":368,"value":507},{"type":363,"tag":385,"props":535,"children":536},{"style":510},[537],{"type":368,"value":538},"@return",{"type":363,"tag":385,"props":540,"children":541},{"style":516},[542],{"type":368,"value":543}," {string[]}\n",{"type":363,"tag":385,"props":545,"children":547},{"class":387,"line":546},4,[548],{"type":363,"tag":385,"props":549,"children":550},{"style":496},[551],{"type":368,"value":552}," */\n",{"type":363,"tag":385,"props":554,"children":556},{"class":387,"line":555},5,[557,563,569,575,580,586,592],{"type":363,"tag":385,"props":558,"children":560},{"style":559},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[561],{"type":368,"value":562},"var",{"type":363,"tag":385,"props":564,"children":566},{"style":565},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[567],{"type":368,"value":568}," generateParenthesis",{"type":363,"tag":385,"props":570,"children":572},{"style":571},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[573],{"type":368,"value":574}," =",{"type":363,"tag":385,"props":576,"children":577},{"style":559},[578],{"type":368,"value":579}," function",{"type":363,"tag":385,"props":581,"children":583},{"style":582},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[584],{"type":368,"value":585}," (",{"type":363,"tag":385,"props":587,"children":589},{"style":588},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[590],{"type":368,"value":591},"n",{"type":363,"tag":385,"props":593,"children":594},{"style":582},[595],{"type":368,"value":596},") {\n",{"type":363,"tag":385,"props":598,"children":600},{"class":387,"line":599},6,[601,606,612,616,621],{"type":363,"tag":385,"props":602,"children":603},{"style":559},[604],{"type":368,"value":605},"  const",{"type":363,"tag":385,"props":607,"children":609},{"style":608},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[610],{"type":368,"value":611}," res",{"type":363,"tag":385,"props":613,"children":614},{"style":571},[615],{"type":368,"value":574},{"type":363,"tag":385,"props":617,"children":618},{"style":582},[619],{"type":368,"value":620}," []",{"type":363,"tag":385,"props":622,"children":624},{"style":623},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[625],{"type":368,"value":626},";\n",{"type":363,"tag":385,"props":628,"children":630},{"class":387,"line":629},7,[631],{"type":363,"tag":385,"props":632,"children":634},{"emptyLinePlaceholder":633},true,[635],{"type":368,"value":636},"\n",{"type":363,"tag":385,"props":638,"children":640},{"class":387,"line":639},8,[641],{"type":363,"tag":385,"props":642,"children":643},{"style":496},[644],{"type":368,"value":645},"  /**\n",{"type":363,"tag":385,"props":647,"children":649},{"class":387,"line":648},9,[650,655,659,664],{"type":363,"tag":385,"props":651,"children":652},{"style":496},[653],{"type":368,"value":654},"   * ",{"type":363,"tag":385,"props":656,"children":657},{"style":510},[658],{"type":368,"value":513},{"type":363,"tag":385,"props":660,"children":661},{"style":522},[662],{"type":368,"value":663}," l",{"type":363,"tag":385,"props":665,"children":666},{"style":496},[667],{"type":368,"value":668}," 左侧括号已经用了几个\n",{"type":363,"tag":385,"props":670,"children":672},{"class":387,"line":671},10,[673,677,681,686],{"type":363,"tag":385,"props":674,"children":675},{"style":496},[676],{"type":368,"value":654},{"type":363,"tag":385,"props":678,"children":679},{"style":510},[680],{"type":368,"value":513},{"type":363,"tag":385,"props":682,"children":683},{"style":522},[684],{"type":368,"value":685}," r",{"type":363,"tag":385,"props":687,"children":688},{"style":496},[689],{"type":368,"value":690}," 右侧括号已经用了几个\n",{"type":363,"tag":385,"props":692,"children":694},{"class":387,"line":693},11,[695,699,703,708],{"type":363,"tag":385,"props":696,"children":697},{"style":496},[698],{"type":368,"value":654},{"type":363,"tag":385,"props":700,"children":701},{"style":510},[702],{"type":368,"value":513},{"type":363,"tag":385,"props":704,"children":705},{"style":522},[706],{"type":368,"value":707}," str",{"type":363,"tag":385,"props":709,"children":710},{"style":496},[711],{"type":368,"value":712}," 当前递归得到的拼接字符串结果\n",{"type":363,"tag":385,"props":714,"children":716},{"class":387,"line":715},12,[717],{"type":363,"tag":385,"props":718,"children":719},{"style":496},[720],{"type":368,"value":721},"   */\n",{"type":363,"tag":385,"props":723,"children":725},{"class":387,"line":724},13,[726,731,736,741,746,751,755,759,763],{"type":363,"tag":385,"props":727,"children":728},{"style":559},[729],{"type":368,"value":730},"  function",{"type":363,"tag":385,"props":732,"children":733},{"style":565},[734],{"type":368,"value":735}," dfs",{"type":363,"tag":385,"props":737,"children":738},{"style":582},[739],{"type":368,"value":740},"(",{"type":363,"tag":385,"props":742,"children":743},{"style":588},[744],{"type":368,"value":745},"l",{"type":363,"tag":385,"props":747,"children":748},{"style":623},[749],{"type":368,"value":750},",",{"type":363,"tag":385,"props":752,"children":753},{"style":588},[754],{"type":368,"value":685},{"type":363,"tag":385,"props":756,"children":757},{"style":623},[758],{"type":368,"value":750},{"type":363,"tag":385,"props":760,"children":761},{"style":588},[762],{"type":368,"value":707},{"type":363,"tag":385,"props":764,"children":765},{"style":582},[766],{"type":368,"value":596},{"type":363,"tag":385,"props":768,"children":770},{"class":387,"line":769},14,[771,777,781,785,790,795,800,804,808,812],{"type":363,"tag":385,"props":772,"children":774},{"style":773},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[775],{"type":368,"value":776},"    if",{"type":363,"tag":385,"props":778,"children":779},{"style":582},[780],{"type":368,"value":585},{"type":363,"tag":385,"props":782,"children":783},{"style":608},[784],{"type":368,"value":745},{"type":363,"tag":385,"props":786,"children":787},{"style":571},[788],{"type":368,"value":789}," ===",{"type":363,"tag":385,"props":791,"children":792},{"style":608},[793],{"type":368,"value":794}," n",{"type":363,"tag":385,"props":796,"children":797},{"style":571},[798],{"type":368,"value":799}," &&",{"type":363,"tag":385,"props":801,"children":802},{"style":608},[803],{"type":368,"value":685},{"type":363,"tag":385,"props":805,"children":806},{"style":571},[807],{"type":368,"value":789},{"type":363,"tag":385,"props":809,"children":810},{"style":608},[811],{"type":368,"value":794},{"type":363,"tag":385,"props":813,"children":814},{"style":582},[815],{"type":368,"value":596},{"type":363,"tag":385,"props":817,"children":819},{"class":387,"line":818},15,[820,825,829,835,840,844,849,854],{"type":363,"tag":385,"props":821,"children":822},{"style":773},[823],{"type":368,"value":824},"      return",{"type":363,"tag":385,"props":826,"children":827},{"style":608},[828],{"type":368,"value":611},{"type":363,"tag":385,"props":830,"children":832},{"style":831},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[833],{"type":368,"value":834},".",{"type":363,"tag":385,"props":836,"children":837},{"style":565},[838],{"type":368,"value":839},"push",{"type":363,"tag":385,"props":841,"children":842},{"style":582},[843],{"type":368,"value":740},{"type":363,"tag":385,"props":845,"children":846},{"style":608},[847],{"type":368,"value":848},"str",{"type":363,"tag":385,"props":850,"children":851},{"style":582},[852],{"type":368,"value":853},")",{"type":363,"tag":385,"props":855,"children":856},{"style":623},[857],{"type":368,"value":626},{"type":363,"tag":385,"props":859,"children":861},{"class":387,"line":860},16,[862],{"type":363,"tag":385,"props":863,"children":864},{"style":582},[865],{"type":368,"value":866},"    }\n",{"type":363,"tag":385,"props":868,"children":870},{"class":387,"line":869},17,[871],{"type":363,"tag":385,"props":872,"children":873},{"style":496},[874],{"type":368,"value":875},"    // l \u003C r 时不满足条件，剪枝\n",{"type":363,"tag":385,"props":877,"children":879},{"class":387,"line":878},18,[880,884,888,892,897,901,906,911],{"type":363,"tag":385,"props":881,"children":882},{"style":773},[883],{"type":368,"value":776},{"type":363,"tag":385,"props":885,"children":886},{"style":582},[887],{"type":368,"value":585},{"type":363,"tag":385,"props":889,"children":890},{"style":608},[891],{"type":368,"value":745},{"type":363,"tag":385,"props":893,"children":894},{"style":571},[895],{"type":368,"value":896}," \u003C",{"type":363,"tag":385,"props":898,"children":899},{"style":608},[900],{"type":368,"value":685},{"type":363,"tag":385,"props":902,"children":903},{"style":582},[904],{"type":368,"value":905},") ",{"type":363,"tag":385,"props":907,"children":908},{"style":773},[909],{"type":368,"value":910},"return",{"type":363,"tag":385,"props":912,"children":913},{"style":623},[914],{"type":368,"value":626},{"type":363,"tag":385,"props":916,"children":918},{"class":387,"line":917},19,[919],{"type":363,"tag":385,"props":920,"children":921},{"style":496},[922],{"type":368,"value":923},"    // l \u003C n 时可插入左括号，最多可以插入 n 个\n",{"type":363,"tag":385,"props":925,"children":927},{"class":387,"line":926},20,[928,932,936,940,944,948],{"type":363,"tag":385,"props":929,"children":930},{"style":773},[931],{"type":368,"value":776},{"type":363,"tag":385,"props":933,"children":934},{"style":582},[935],{"type":368,"value":585},{"type":363,"tag":385,"props":937,"children":938},{"style":608},[939],{"type":368,"value":745},{"type":363,"tag":385,"props":941,"children":942},{"style":571},[943],{"type":368,"value":896},{"type":363,"tag":385,"props":945,"children":946},{"style":608},[947],{"type":368,"value":794},{"type":363,"tag":385,"props":949,"children":950},{"style":582},[951],{"type":368,"value":596},{"type":363,"tag":385,"props":953,"children":955},{"class":387,"line":954},21,[956,961,965,969,974,980,984,988,992,996,1000,1006,1010],{"type":363,"tag":385,"props":957,"children":958},{"style":565},[959],{"type":368,"value":960},"      dfs",{"type":363,"tag":385,"props":962,"children":963},{"style":582},[964],{"type":368,"value":740},{"type":363,"tag":385,"props":966,"children":967},{"style":608},[968],{"type":368,"value":745},{"type":363,"tag":385,"props":970,"children":971},{"style":571},[972],{"type":368,"value":973}," +",{"type":363,"tag":385,"props":975,"children":977},{"style":976},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[978],{"type":368,"value":979}," 1",{"type":363,"tag":385,"props":981,"children":982},{"style":623},[983],{"type":368,"value":750},{"type":363,"tag":385,"props":985,"children":986},{"style":608},[987],{"type":368,"value":685},{"type":363,"tag":385,"props":989,"children":990},{"style":623},[991],{"type":368,"value":750},{"type":363,"tag":385,"props":993,"children":994},{"style":608},[995],{"type":368,"value":707},{"type":363,"tag":385,"props":997,"children":998},{"style":571},[999],{"type":368,"value":973},{"type":363,"tag":385,"props":1001,"children":1003},{"style":1002},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[1004],{"type":368,"value":1005}," \"(\"",{"type":363,"tag":385,"props":1007,"children":1008},{"style":582},[1009],{"type":368,"value":853},{"type":363,"tag":385,"props":1011,"children":1012},{"style":623},[1013],{"type":368,"value":626},{"type":363,"tag":385,"props":1015,"children":1017},{"class":387,"line":1016},22,[1018],{"type":363,"tag":385,"props":1019,"children":1020},{"style":582},[1021],{"type":368,"value":866},{"type":363,"tag":385,"props":1023,"children":1025},{"class":387,"line":1024},23,[1026],{"type":363,"tag":385,"props":1027,"children":1028},{"style":496},[1029],{"type":368,"value":1030},"    // r \u003C l 时，可以插入右括号\n",{"type":363,"tag":385,"props":1032,"children":1034},{"class":387,"line":1033},24,[1035,1039,1043,1048,1052,1056],{"type":363,"tag":385,"props":1036,"children":1037},{"style":773},[1038],{"type":368,"value":776},{"type":363,"tag":385,"props":1040,"children":1041},{"style":582},[1042],{"type":368,"value":585},{"type":363,"tag":385,"props":1044,"children":1045},{"style":608},[1046],{"type":368,"value":1047},"r",{"type":363,"tag":385,"props":1049,"children":1050},{"style":571},[1051],{"type":368,"value":896},{"type":363,"tag":385,"props":1053,"children":1054},{"style":608},[1055],{"type":368,"value":663},{"type":363,"tag":385,"props":1057,"children":1058},{"style":582},[1059],{"type":368,"value":596},{"type":363,"tag":385,"props":1061,"children":1063},{"class":387,"line":1062},25,[1064,1068,1072,1076,1080,1084,1088,1092,1096,1100,1104,1109,1113],{"type":363,"tag":385,"props":1065,"children":1066},{"style":565},[1067],{"type":368,"value":960},{"type":363,"tag":385,"props":1069,"children":1070},{"style":582},[1071],{"type":368,"value":740},{"type":363,"tag":385,"props":1073,"children":1074},{"style":608},[1075],{"type":368,"value":745},{"type":363,"tag":385,"props":1077,"children":1078},{"style":623},[1079],{"type":368,"value":750},{"type":363,"tag":385,"props":1081,"children":1082},{"style":608},[1083],{"type":368,"value":685},{"type":363,"tag":385,"props":1085,"children":1086},{"style":571},[1087],{"type":368,"value":973},{"type":363,"tag":385,"props":1089,"children":1090},{"style":976},[1091],{"type":368,"value":979},{"type":363,"tag":385,"props":1093,"children":1094},{"style":623},[1095],{"type":368,"value":750},{"type":363,"tag":385,"props":1097,"children":1098},{"style":608},[1099],{"type":368,"value":707},{"type":363,"tag":385,"props":1101,"children":1102},{"style":571},[1103],{"type":368,"value":973},{"type":363,"tag":385,"props":1105,"children":1106},{"style":1002},[1107],{"type":368,"value":1108}," \")\"",{"type":363,"tag":385,"props":1110,"children":1111},{"style":582},[1112],{"type":368,"value":853},{"type":363,"tag":385,"props":1114,"children":1115},{"style":623},[1116],{"type":368,"value":626},{"type":363,"tag":385,"props":1118,"children":1120},{"class":387,"line":1119},26,[1121],{"type":363,"tag":385,"props":1122,"children":1123},{"style":582},[1124],{"type":368,"value":866},{"type":363,"tag":385,"props":1126,"children":1128},{"class":387,"line":1127},27,[1129],{"type":363,"tag":385,"props":1130,"children":1131},{"style":582},[1132],{"type":368,"value":1133},"  }\n",{"type":363,"tag":385,"props":1135,"children":1137},{"class":387,"line":1136},28,[1138],{"type":363,"tag":385,"props":1139,"children":1140},{"emptyLinePlaceholder":633},[1141],{"type":368,"value":636},{"type":363,"tag":385,"props":1143,"children":1145},{"class":387,"line":1144},29,[1146,1151,1155,1160,1164,1169,1173,1178,1182],{"type":363,"tag":385,"props":1147,"children":1148},{"style":565},[1149],{"type":368,"value":1150},"  dfs",{"type":363,"tag":385,"props":1152,"children":1153},{"style":582},[1154],{"type":368,"value":740},{"type":363,"tag":385,"props":1156,"children":1157},{"style":976},[1158],{"type":368,"value":1159},"0",{"type":363,"tag":385,"props":1161,"children":1162},{"style":623},[1163],{"type":368,"value":750},{"type":363,"tag":385,"props":1165,"children":1166},{"style":976},[1167],{"type":368,"value":1168}," 0",{"type":363,"tag":385,"props":1170,"children":1171},{"style":623},[1172],{"type":368,"value":750},{"type":363,"tag":385,"props":1174,"children":1175},{"style":1002},[1176],{"type":368,"value":1177}," \"\"",{"type":363,"tag":385,"props":1179,"children":1180},{"style":582},[1181],{"type":368,"value":853},{"type":363,"tag":385,"props":1183,"children":1184},{"style":623},[1185],{"type":368,"value":626},{"type":363,"tag":385,"props":1187,"children":1189},{"class":387,"line":1188},30,[1190],{"type":363,"tag":385,"props":1191,"children":1192},{"emptyLinePlaceholder":633},[1193],{"type":368,"value":636},{"type":363,"tag":385,"props":1195,"children":1197},{"class":387,"line":1196},31,[1198,1203,1207],{"type":363,"tag":385,"props":1199,"children":1200},{"style":773},[1201],{"type":368,"value":1202},"  return",{"type":363,"tag":385,"props":1204,"children":1205},{"style":608},[1206],{"type":368,"value":611},{"type":363,"tag":385,"props":1208,"children":1209},{"style":623},[1210],{"type":368,"value":626},{"type":363,"tag":385,"props":1212,"children":1214},{"class":387,"line":1213},32,[1215,1220],{"type":363,"tag":385,"props":1216,"children":1217},{"style":582},[1218],{"type":368,"value":1219},"}",{"type":363,"tag":385,"props":1221,"children":1222},{"style":623},[1223],{"type":368,"value":626},{"type":363,"tag":1225,"props":1226,"children":1227},"style",{},[1228],{"type":368,"value":1229},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":356,"searchDepth":555,"depth":555,"links":1231},[1232,1233],{"id":450,"depth":397,"text":450},{"id":473,"depth":397,"text":473,"children":1234},[1235],{"id":479,"depth":528,"text":479},"markdown","content:2.code:1.algorithm:3.leetcode:22.generate-parentheses.md","content","2.code/1.algorithm/3.leetcode/22.generate-parentheses.md","md",[1242,1244],{"_path":91,"title":90,"description":1243},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",{"_path":97,"title":96,"description":1245},"给你一个链表数组，每个链表都已经按升序排列。",1712589909705]