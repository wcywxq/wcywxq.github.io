[{"data":1,"prerenderedAt":1240},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/generate-parentheses":347,"/code/algorithm/leetcode/generate-parentheses-surround":1235},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319,341,344],{"title":320,"_path":321,"children":322},"Promise","/code/scene/promise",[323,326,329,332,335,338],{"title":324,"_path":325},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":327,"_path":328},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":330,"_path":331},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":333,"_path":334},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":336,"_path":337},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":339,"_path":340},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":342,"_path":343},"lodash.get","/code/scene/lodash-get",{"title":345,"_path":346},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":94,"_dir":348,"_draft":349,"_partial":349,"_locale":350,"title":93,"description":351,"url":352,"body":353,"_type":1230,"_id":1231,"_source":1232,"_file":1233,"_extension":1234},"leetcode",false,"","数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。","https://leetcode.cn/problems/generate-parentheses",{"type":354,"children":355,"toc":1224},"root",[356,363,368,398,403,426,431,441,447,452,465,470,476,1218],{"type":357,"tag":358,"props":359,"children":360},"element","p",{},[361],{"type":362,"value":351},"text",{"type":357,"tag":358,"props":364,"children":365},{},[366],{"type":362,"value":367},"示例 1：",{"type":357,"tag":369,"props":370,"children":373},"pre",{"className":371,"code":372,"language":362,"meta":350,"style":350},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：n = 3\n输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",[374],{"type":357,"tag":375,"props":376,"children":377},"code",{"__ignoreMap":350},[378,389],{"type":357,"tag":379,"props":380,"children":383},"span",{"class":381,"line":382},"line",1,[384],{"type":357,"tag":379,"props":385,"children":386},{},[387],{"type":362,"value":388},"输入：n = 3\n",{"type":357,"tag":379,"props":390,"children":392},{"class":381,"line":391},2,[393],{"type":357,"tag":379,"props":394,"children":395},{},[396],{"type":362,"value":397},"输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",{"type":357,"tag":358,"props":399,"children":400},{},[401],{"type":362,"value":402},"示例 2：",{"type":357,"tag":369,"props":404,"children":406},{"className":371,"code":405,"language":362,"meta":350,"style":350},"输入：n = 1\n输出：[\"()\"]\n",[407],{"type":357,"tag":375,"props":408,"children":409},{"__ignoreMap":350},[410,418],{"type":357,"tag":379,"props":411,"children":412},{"class":381,"line":382},[413],{"type":357,"tag":379,"props":414,"children":415},{},[416],{"type":362,"value":417},"输入：n = 1\n",{"type":357,"tag":379,"props":419,"children":420},{"class":381,"line":391},[421],{"type":357,"tag":379,"props":422,"children":423},{},[424],{"type":362,"value":425},"输出：[\"()\"]\n",{"type":357,"tag":358,"props":427,"children":428},{},[429],{"type":362,"value":430},"提示：",{"type":357,"tag":432,"props":433,"children":434},"ul",{},[435],{"type":357,"tag":436,"props":437,"children":438},"li",{},[439],{"type":362,"value":440},"1 \u003C= n \u003C= 8",{"type":357,"tag":442,"props":443,"children":445},"h2",{"id":444},"解题思路",[446],{"type":362,"value":444},{"type":357,"tag":358,"props":448,"children":449},{},[450],{"type":362,"value":451},"由于需要求解所有的可能，因此回溯就不难想到，回溯的思路和写法相对比较固定，并且回溯的优化手段大多是剪枝。\n不难想到，如果左括号的数据小于右括号，我们可以提前退出，这就是这道题的剪枝。例如：())...，后面就不用看了，直接退出即可。回溯的退出条件也不难想到：",{"type":357,"tag":432,"props":453,"children":454},{},[455,460],{"type":357,"tag":436,"props":456,"children":457},{},[458],{"type":362,"value":459},"左括号数目 = 右括号数目",{"type":357,"tag":436,"props":461,"children":462},{},[463],{"type":362,"value":464},"左括号数据 + 右括号数据 = 2 * n\n因此这道题可以使用深度优先搜索（回溯思想），从空字符串开始构造，做加法，即 dfs(左括号数目，右括号数据，路径)，我们从 dfs(0, 0, \"\") 开始",{"type":357,"tag":442,"props":466,"children":468},{"id":467},"实现",[469],{"type":362,"value":467},{"type":357,"tag":471,"props":472,"children":474},"h3",{"id":473},"回溯",[475],{"type":362,"value":473},{"type":357,"tag":369,"props":477,"children":481},{"className":478,"code":479,"language":480,"meta":350,"style":350},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number} n\n * @return {string[]}\n */\nvar generateParenthesis = function (n) {\n  const res = [];\n\n  /**\n   * @param l 左侧括号已经用了几个\n   * @param r 右侧括号已经用了几个\n   * @param str 当前递归得到的拼接字符串结果\n   */\n  function dfs(l, r, str) {\n    if (l === n && r === n) {\n      return res.push(str);\n    }\n    // l \u003C r 时不满足条件，剪枝\n    if (l \u003C r) return;\n    // l \u003C n 时可插入左括号，最多可以插入 n 个\n    if (l \u003C n) {\n      dfs(l + 1, r, str + \"(\");\n    }\n    // r \u003C l 时，可以插入右括号\n    if (r \u003C l) {\n      dfs(l, r + 1, str + \")\");\n    }\n  }\n\n  dfs(0, 0, \"\");\n\n  return res;\n};\n","js",[482],{"type":357,"tag":375,"props":483,"children":484},{"__ignoreMap":350},[485,494,520,538,547,591,621,631,640,663,685,707,716,761,810,852,861,870,909,918,946,1008,1016,1025,1054,1111,1119,1128,1136,1180,1188,1205],{"type":357,"tag":379,"props":486,"children":487},{"class":381,"line":382},[488],{"type":357,"tag":379,"props":489,"children":491},{"style":490},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[492],{"type":362,"value":493},"/**\n",{"type":357,"tag":379,"props":495,"children":496},{"class":381,"line":391},[497,502,508,514],{"type":357,"tag":379,"props":498,"children":499},{"style":490},[500],{"type":362,"value":501}," * ",{"type":357,"tag":379,"props":503,"children":505},{"style":504},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[506],{"type":362,"value":507},"@param",{"type":357,"tag":379,"props":509,"children":511},{"style":510},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[512],{"type":362,"value":513}," {number}",{"type":357,"tag":379,"props":515,"children":517},{"style":516},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[518],{"type":362,"value":519}," n\n",{"type":357,"tag":379,"props":521,"children":523},{"class":381,"line":522},3,[524,528,533],{"type":357,"tag":379,"props":525,"children":526},{"style":490},[527],{"type":362,"value":501},{"type":357,"tag":379,"props":529,"children":530},{"style":504},[531],{"type":362,"value":532},"@return",{"type":357,"tag":379,"props":534,"children":535},{"style":510},[536],{"type":362,"value":537}," {string[]}\n",{"type":357,"tag":379,"props":539,"children":541},{"class":381,"line":540},4,[542],{"type":357,"tag":379,"props":543,"children":544},{"style":490},[545],{"type":362,"value":546}," */\n",{"type":357,"tag":379,"props":548,"children":550},{"class":381,"line":549},5,[551,557,563,569,574,580,586],{"type":357,"tag":379,"props":552,"children":554},{"style":553},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[555],{"type":362,"value":556},"var",{"type":357,"tag":379,"props":558,"children":560},{"style":559},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[561],{"type":362,"value":562}," generateParenthesis",{"type":357,"tag":379,"props":564,"children":566},{"style":565},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[567],{"type":362,"value":568}," =",{"type":357,"tag":379,"props":570,"children":571},{"style":553},[572],{"type":362,"value":573}," function",{"type":357,"tag":379,"props":575,"children":577},{"style":576},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[578],{"type":362,"value":579}," (",{"type":357,"tag":379,"props":581,"children":583},{"style":582},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[584],{"type":362,"value":585},"n",{"type":357,"tag":379,"props":587,"children":588},{"style":576},[589],{"type":362,"value":590},") {\n",{"type":357,"tag":379,"props":592,"children":594},{"class":381,"line":593},6,[595,600,606,610,615],{"type":357,"tag":379,"props":596,"children":597},{"style":553},[598],{"type":362,"value":599},"  const",{"type":357,"tag":379,"props":601,"children":603},{"style":602},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[604],{"type":362,"value":605}," res",{"type":357,"tag":379,"props":607,"children":608},{"style":565},[609],{"type":362,"value":568},{"type":357,"tag":379,"props":611,"children":612},{"style":576},[613],{"type":362,"value":614}," []",{"type":357,"tag":379,"props":616,"children":618},{"style":617},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[619],{"type":362,"value":620},";\n",{"type":357,"tag":379,"props":622,"children":624},{"class":381,"line":623},7,[625],{"type":357,"tag":379,"props":626,"children":628},{"emptyLinePlaceholder":627},true,[629],{"type":362,"value":630},"\n",{"type":357,"tag":379,"props":632,"children":634},{"class":381,"line":633},8,[635],{"type":357,"tag":379,"props":636,"children":637},{"style":490},[638],{"type":362,"value":639},"  /**\n",{"type":357,"tag":379,"props":641,"children":643},{"class":381,"line":642},9,[644,649,653,658],{"type":357,"tag":379,"props":645,"children":646},{"style":490},[647],{"type":362,"value":648},"   * ",{"type":357,"tag":379,"props":650,"children":651},{"style":504},[652],{"type":362,"value":507},{"type":357,"tag":379,"props":654,"children":655},{"style":516},[656],{"type":362,"value":657}," l",{"type":357,"tag":379,"props":659,"children":660},{"style":490},[661],{"type":362,"value":662}," 左侧括号已经用了几个\n",{"type":357,"tag":379,"props":664,"children":666},{"class":381,"line":665},10,[667,671,675,680],{"type":357,"tag":379,"props":668,"children":669},{"style":490},[670],{"type":362,"value":648},{"type":357,"tag":379,"props":672,"children":673},{"style":504},[674],{"type":362,"value":507},{"type":357,"tag":379,"props":676,"children":677},{"style":516},[678],{"type":362,"value":679}," r",{"type":357,"tag":379,"props":681,"children":682},{"style":490},[683],{"type":362,"value":684}," 右侧括号已经用了几个\n",{"type":357,"tag":379,"props":686,"children":688},{"class":381,"line":687},11,[689,693,697,702],{"type":357,"tag":379,"props":690,"children":691},{"style":490},[692],{"type":362,"value":648},{"type":357,"tag":379,"props":694,"children":695},{"style":504},[696],{"type":362,"value":507},{"type":357,"tag":379,"props":698,"children":699},{"style":516},[700],{"type":362,"value":701}," str",{"type":357,"tag":379,"props":703,"children":704},{"style":490},[705],{"type":362,"value":706}," 当前递归得到的拼接字符串结果\n",{"type":357,"tag":379,"props":708,"children":710},{"class":381,"line":709},12,[711],{"type":357,"tag":379,"props":712,"children":713},{"style":490},[714],{"type":362,"value":715},"   */\n",{"type":357,"tag":379,"props":717,"children":719},{"class":381,"line":718},13,[720,725,730,735,740,745,749,753,757],{"type":357,"tag":379,"props":721,"children":722},{"style":553},[723],{"type":362,"value":724},"  function",{"type":357,"tag":379,"props":726,"children":727},{"style":559},[728],{"type":362,"value":729}," dfs",{"type":357,"tag":379,"props":731,"children":732},{"style":576},[733],{"type":362,"value":734},"(",{"type":357,"tag":379,"props":736,"children":737},{"style":582},[738],{"type":362,"value":739},"l",{"type":357,"tag":379,"props":741,"children":742},{"style":617},[743],{"type":362,"value":744},",",{"type":357,"tag":379,"props":746,"children":747},{"style":582},[748],{"type":362,"value":679},{"type":357,"tag":379,"props":750,"children":751},{"style":617},[752],{"type":362,"value":744},{"type":357,"tag":379,"props":754,"children":755},{"style":582},[756],{"type":362,"value":701},{"type":357,"tag":379,"props":758,"children":759},{"style":576},[760],{"type":362,"value":590},{"type":357,"tag":379,"props":762,"children":764},{"class":381,"line":763},14,[765,771,775,779,784,789,794,798,802,806],{"type":357,"tag":379,"props":766,"children":768},{"style":767},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[769],{"type":362,"value":770},"    if",{"type":357,"tag":379,"props":772,"children":773},{"style":576},[774],{"type":362,"value":579},{"type":357,"tag":379,"props":776,"children":777},{"style":602},[778],{"type":362,"value":739},{"type":357,"tag":379,"props":780,"children":781},{"style":565},[782],{"type":362,"value":783}," ===",{"type":357,"tag":379,"props":785,"children":786},{"style":602},[787],{"type":362,"value":788}," n",{"type":357,"tag":379,"props":790,"children":791},{"style":565},[792],{"type":362,"value":793}," &&",{"type":357,"tag":379,"props":795,"children":796},{"style":602},[797],{"type":362,"value":679},{"type":357,"tag":379,"props":799,"children":800},{"style":565},[801],{"type":362,"value":783},{"type":357,"tag":379,"props":803,"children":804},{"style":602},[805],{"type":362,"value":788},{"type":357,"tag":379,"props":807,"children":808},{"style":576},[809],{"type":362,"value":590},{"type":357,"tag":379,"props":811,"children":813},{"class":381,"line":812},15,[814,819,823,829,834,838,843,848],{"type":357,"tag":379,"props":815,"children":816},{"style":767},[817],{"type":362,"value":818},"      return",{"type":357,"tag":379,"props":820,"children":821},{"style":602},[822],{"type":362,"value":605},{"type":357,"tag":379,"props":824,"children":826},{"style":825},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[827],{"type":362,"value":828},".",{"type":357,"tag":379,"props":830,"children":831},{"style":559},[832],{"type":362,"value":833},"push",{"type":357,"tag":379,"props":835,"children":836},{"style":576},[837],{"type":362,"value":734},{"type":357,"tag":379,"props":839,"children":840},{"style":602},[841],{"type":362,"value":842},"str",{"type":357,"tag":379,"props":844,"children":845},{"style":576},[846],{"type":362,"value":847},")",{"type":357,"tag":379,"props":849,"children":850},{"style":617},[851],{"type":362,"value":620},{"type":357,"tag":379,"props":853,"children":855},{"class":381,"line":854},16,[856],{"type":357,"tag":379,"props":857,"children":858},{"style":576},[859],{"type":362,"value":860},"    }\n",{"type":357,"tag":379,"props":862,"children":864},{"class":381,"line":863},17,[865],{"type":357,"tag":379,"props":866,"children":867},{"style":490},[868],{"type":362,"value":869},"    // l \u003C r 时不满足条件，剪枝\n",{"type":357,"tag":379,"props":871,"children":873},{"class":381,"line":872},18,[874,878,882,886,891,895,900,905],{"type":357,"tag":379,"props":875,"children":876},{"style":767},[877],{"type":362,"value":770},{"type":357,"tag":379,"props":879,"children":880},{"style":576},[881],{"type":362,"value":579},{"type":357,"tag":379,"props":883,"children":884},{"style":602},[885],{"type":362,"value":739},{"type":357,"tag":379,"props":887,"children":888},{"style":565},[889],{"type":362,"value":890}," \u003C",{"type":357,"tag":379,"props":892,"children":893},{"style":602},[894],{"type":362,"value":679},{"type":357,"tag":379,"props":896,"children":897},{"style":576},[898],{"type":362,"value":899},") ",{"type":357,"tag":379,"props":901,"children":902},{"style":767},[903],{"type":362,"value":904},"return",{"type":357,"tag":379,"props":906,"children":907},{"style":617},[908],{"type":362,"value":620},{"type":357,"tag":379,"props":910,"children":912},{"class":381,"line":911},19,[913],{"type":357,"tag":379,"props":914,"children":915},{"style":490},[916],{"type":362,"value":917},"    // l \u003C n 时可插入左括号，最多可以插入 n 个\n",{"type":357,"tag":379,"props":919,"children":921},{"class":381,"line":920},20,[922,926,930,934,938,942],{"type":357,"tag":379,"props":923,"children":924},{"style":767},[925],{"type":362,"value":770},{"type":357,"tag":379,"props":927,"children":928},{"style":576},[929],{"type":362,"value":579},{"type":357,"tag":379,"props":931,"children":932},{"style":602},[933],{"type":362,"value":739},{"type":357,"tag":379,"props":935,"children":936},{"style":565},[937],{"type":362,"value":890},{"type":357,"tag":379,"props":939,"children":940},{"style":602},[941],{"type":362,"value":788},{"type":357,"tag":379,"props":943,"children":944},{"style":576},[945],{"type":362,"value":590},{"type":357,"tag":379,"props":947,"children":949},{"class":381,"line":948},21,[950,955,959,963,968,974,978,982,986,990,994,1000,1004],{"type":357,"tag":379,"props":951,"children":952},{"style":559},[953],{"type":362,"value":954},"      dfs",{"type":357,"tag":379,"props":956,"children":957},{"style":576},[958],{"type":362,"value":734},{"type":357,"tag":379,"props":960,"children":961},{"style":602},[962],{"type":362,"value":739},{"type":357,"tag":379,"props":964,"children":965},{"style":565},[966],{"type":362,"value":967}," +",{"type":357,"tag":379,"props":969,"children":971},{"style":970},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[972],{"type":362,"value":973}," 1",{"type":357,"tag":379,"props":975,"children":976},{"style":617},[977],{"type":362,"value":744},{"type":357,"tag":379,"props":979,"children":980},{"style":602},[981],{"type":362,"value":679},{"type":357,"tag":379,"props":983,"children":984},{"style":617},[985],{"type":362,"value":744},{"type":357,"tag":379,"props":987,"children":988},{"style":602},[989],{"type":362,"value":701},{"type":357,"tag":379,"props":991,"children":992},{"style":565},[993],{"type":362,"value":967},{"type":357,"tag":379,"props":995,"children":997},{"style":996},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[998],{"type":362,"value":999}," \"(\"",{"type":357,"tag":379,"props":1001,"children":1002},{"style":576},[1003],{"type":362,"value":847},{"type":357,"tag":379,"props":1005,"children":1006},{"style":617},[1007],{"type":362,"value":620},{"type":357,"tag":379,"props":1009,"children":1011},{"class":381,"line":1010},22,[1012],{"type":357,"tag":379,"props":1013,"children":1014},{"style":576},[1015],{"type":362,"value":860},{"type":357,"tag":379,"props":1017,"children":1019},{"class":381,"line":1018},23,[1020],{"type":357,"tag":379,"props":1021,"children":1022},{"style":490},[1023],{"type":362,"value":1024},"    // r \u003C l 时，可以插入右括号\n",{"type":357,"tag":379,"props":1026,"children":1028},{"class":381,"line":1027},24,[1029,1033,1037,1042,1046,1050],{"type":357,"tag":379,"props":1030,"children":1031},{"style":767},[1032],{"type":362,"value":770},{"type":357,"tag":379,"props":1034,"children":1035},{"style":576},[1036],{"type":362,"value":579},{"type":357,"tag":379,"props":1038,"children":1039},{"style":602},[1040],{"type":362,"value":1041},"r",{"type":357,"tag":379,"props":1043,"children":1044},{"style":565},[1045],{"type":362,"value":890},{"type":357,"tag":379,"props":1047,"children":1048},{"style":602},[1049],{"type":362,"value":657},{"type":357,"tag":379,"props":1051,"children":1052},{"style":576},[1053],{"type":362,"value":590},{"type":357,"tag":379,"props":1055,"children":1057},{"class":381,"line":1056},25,[1058,1062,1066,1070,1074,1078,1082,1086,1090,1094,1098,1103,1107],{"type":357,"tag":379,"props":1059,"children":1060},{"style":559},[1061],{"type":362,"value":954},{"type":357,"tag":379,"props":1063,"children":1064},{"style":576},[1065],{"type":362,"value":734},{"type":357,"tag":379,"props":1067,"children":1068},{"style":602},[1069],{"type":362,"value":739},{"type":357,"tag":379,"props":1071,"children":1072},{"style":617},[1073],{"type":362,"value":744},{"type":357,"tag":379,"props":1075,"children":1076},{"style":602},[1077],{"type":362,"value":679},{"type":357,"tag":379,"props":1079,"children":1080},{"style":565},[1081],{"type":362,"value":967},{"type":357,"tag":379,"props":1083,"children":1084},{"style":970},[1085],{"type":362,"value":973},{"type":357,"tag":379,"props":1087,"children":1088},{"style":617},[1089],{"type":362,"value":744},{"type":357,"tag":379,"props":1091,"children":1092},{"style":602},[1093],{"type":362,"value":701},{"type":357,"tag":379,"props":1095,"children":1096},{"style":565},[1097],{"type":362,"value":967},{"type":357,"tag":379,"props":1099,"children":1100},{"style":996},[1101],{"type":362,"value":1102}," \")\"",{"type":357,"tag":379,"props":1104,"children":1105},{"style":576},[1106],{"type":362,"value":847},{"type":357,"tag":379,"props":1108,"children":1109},{"style":617},[1110],{"type":362,"value":620},{"type":357,"tag":379,"props":1112,"children":1114},{"class":381,"line":1113},26,[1115],{"type":357,"tag":379,"props":1116,"children":1117},{"style":576},[1118],{"type":362,"value":860},{"type":357,"tag":379,"props":1120,"children":1122},{"class":381,"line":1121},27,[1123],{"type":357,"tag":379,"props":1124,"children":1125},{"style":576},[1126],{"type":362,"value":1127},"  }\n",{"type":357,"tag":379,"props":1129,"children":1131},{"class":381,"line":1130},28,[1132],{"type":357,"tag":379,"props":1133,"children":1134},{"emptyLinePlaceholder":627},[1135],{"type":362,"value":630},{"type":357,"tag":379,"props":1137,"children":1139},{"class":381,"line":1138},29,[1140,1145,1149,1154,1158,1163,1167,1172,1176],{"type":357,"tag":379,"props":1141,"children":1142},{"style":559},[1143],{"type":362,"value":1144},"  dfs",{"type":357,"tag":379,"props":1146,"children":1147},{"style":576},[1148],{"type":362,"value":734},{"type":357,"tag":379,"props":1150,"children":1151},{"style":970},[1152],{"type":362,"value":1153},"0",{"type":357,"tag":379,"props":1155,"children":1156},{"style":617},[1157],{"type":362,"value":744},{"type":357,"tag":379,"props":1159,"children":1160},{"style":970},[1161],{"type":362,"value":1162}," 0",{"type":357,"tag":379,"props":1164,"children":1165},{"style":617},[1166],{"type":362,"value":744},{"type":357,"tag":379,"props":1168,"children":1169},{"style":996},[1170],{"type":362,"value":1171}," \"\"",{"type":357,"tag":379,"props":1173,"children":1174},{"style":576},[1175],{"type":362,"value":847},{"type":357,"tag":379,"props":1177,"children":1178},{"style":617},[1179],{"type":362,"value":620},{"type":357,"tag":379,"props":1181,"children":1183},{"class":381,"line":1182},30,[1184],{"type":357,"tag":379,"props":1185,"children":1186},{"emptyLinePlaceholder":627},[1187],{"type":362,"value":630},{"type":357,"tag":379,"props":1189,"children":1191},{"class":381,"line":1190},31,[1192,1197,1201],{"type":357,"tag":379,"props":1193,"children":1194},{"style":767},[1195],{"type":362,"value":1196},"  return",{"type":357,"tag":379,"props":1198,"children":1199},{"style":602},[1200],{"type":362,"value":605},{"type":357,"tag":379,"props":1202,"children":1203},{"style":617},[1204],{"type":362,"value":620},{"type":357,"tag":379,"props":1206,"children":1208},{"class":381,"line":1207},32,[1209,1214],{"type":357,"tag":379,"props":1210,"children":1211},{"style":576},[1212],{"type":362,"value":1213},"}",{"type":357,"tag":379,"props":1215,"children":1216},{"style":617},[1217],{"type":362,"value":620},{"type":357,"tag":1219,"props":1220,"children":1221},"style",{},[1222],{"type":362,"value":1223},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":350,"searchDepth":549,"depth":549,"links":1225},[1226,1227],{"id":444,"depth":391,"text":444},{"id":467,"depth":391,"text":467,"children":1228},[1229],{"id":473,"depth":522,"text":473},"markdown","content:2.code:1.algorithm:3.leetcode:22.generate-parentheses.md","content","2.code/1.algorithm/3.leetcode/22.generate-parentheses.md","md",[1236,1238],{"_path":91,"title":90,"description":1237},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",{"_path":97,"title":96,"description":1239},"给你一个链表数组，每个链表都已经按升序排列。",1712581261060]