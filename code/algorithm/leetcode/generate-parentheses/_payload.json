[{"data":1,"prerenderedAt":1252},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/generate-parentheses":359,"/code/algorithm/leetcode/generate-parentheses-surround":1247},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,269,318],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263,266],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.165 比较版本号","/code/algorithm/leetcode/compare-version-numbers",{"title":198,"_path":199},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":201,"_path":202},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":204,"_path":205},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":207,"_path":208},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":210,"_path":211},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":213,"_path":214},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":216,"_path":217},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":219,"_path":220},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":222,"_path":223},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":225,"_path":226},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":228,"_path":229},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":231,"_path":232},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":234,"_path":235},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":237,"_path":238},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":240,"_path":241},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":243,"_path":244},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":246,"_path":247},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":249,"_path":250},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":252,"_path":253},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":255,"_path":256},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":258,"_path":259},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":261,"_path":262},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":264,"_path":265},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":267,"_path":268},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":270,"_path":271,"children":272},"源码实现","/code/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/code/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/code/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/code/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/code/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/code/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/code/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/code/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/code/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/code/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/code/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/code/source/string",[315],{"title":316,"_path":317},"repeat()","/code/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/code/scene",[322,344,347,350,353,356],{"title":323,"_path":324,"children":325},"Promise","/code/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/code/scene/calcuate-object-bytes",{"title":348,"_path":349},"lodash.get","/code/scene/lodash-get",{"title":351,"_path":352},"记忆化请求函数 - 可缓存请求函数","/code/scene/memorize-request",{"title":354,"_path":355},"sku 算法实现","/code/scene/sku",{"title":357,"_path":358},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":94,"_dir":360,"_draft":361,"_partial":361,"_locale":362,"title":93,"description":363,"url":364,"body":365,"_type":1242,"_id":1243,"_source":1244,"_file":1245,"_extension":1246},"leetcode",false,"","数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。","https://leetcode.cn/problems/generate-parentheses",{"type":366,"children":367,"toc":1236},"root",[368,375,380,410,415,438,443,453,459,464,477,482,488,1230],{"type":369,"tag":370,"props":371,"children":372},"element","p",{},[373],{"type":374,"value":363},"text",{"type":369,"tag":370,"props":376,"children":377},{},[378],{"type":374,"value":379},"示例 1：",{"type":369,"tag":381,"props":382,"children":385},"pre",{"className":383,"code":384,"language":374,"meta":362,"style":362},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：n = 3\n输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",[386],{"type":369,"tag":387,"props":388,"children":389},"code",{"__ignoreMap":362},[390,401],{"type":369,"tag":391,"props":392,"children":395},"span",{"class":393,"line":394},"line",1,[396],{"type":369,"tag":391,"props":397,"children":398},{},[399],{"type":374,"value":400},"输入：n = 3\n",{"type":369,"tag":391,"props":402,"children":404},{"class":393,"line":403},2,[405],{"type":369,"tag":391,"props":406,"children":407},{},[408],{"type":374,"value":409},"输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",{"type":369,"tag":370,"props":411,"children":412},{},[413],{"type":374,"value":414},"示例 2：",{"type":369,"tag":381,"props":416,"children":418},{"className":383,"code":417,"language":374,"meta":362,"style":362},"输入：n = 1\n输出：[\"()\"]\n",[419],{"type":369,"tag":387,"props":420,"children":421},{"__ignoreMap":362},[422,430],{"type":369,"tag":391,"props":423,"children":424},{"class":393,"line":394},[425],{"type":369,"tag":391,"props":426,"children":427},{},[428],{"type":374,"value":429},"输入：n = 1\n",{"type":369,"tag":391,"props":431,"children":432},{"class":393,"line":403},[433],{"type":369,"tag":391,"props":434,"children":435},{},[436],{"type":374,"value":437},"输出：[\"()\"]\n",{"type":369,"tag":370,"props":439,"children":440},{},[441],{"type":374,"value":442},"提示：",{"type":369,"tag":444,"props":445,"children":446},"ul",{},[447],{"type":369,"tag":448,"props":449,"children":450},"li",{},[451],{"type":374,"value":452},"1 \u003C= n \u003C= 8",{"type":369,"tag":454,"props":455,"children":457},"h2",{"id":456},"解题思路",[458],{"type":374,"value":456},{"type":369,"tag":370,"props":460,"children":461},{},[462],{"type":374,"value":463},"由于需要求解所有的可能，因此回溯就不难想到，回溯的思路和写法相对比较固定，并且回溯的优化手段大多是剪枝。\n不难想到，如果左括号的数据小于右括号，我们可以提前退出，这就是这道题的剪枝。例如：())...，后面就不用看了，直接退出即可。回溯的退出条件也不难想到：",{"type":369,"tag":444,"props":465,"children":466},{},[467,472],{"type":369,"tag":448,"props":468,"children":469},{},[470],{"type":374,"value":471},"左括号数目 = 右括号数目",{"type":369,"tag":448,"props":473,"children":474},{},[475],{"type":374,"value":476},"左括号数据 + 右括号数据 = 2 * n\n因此这道题可以使用深度优先搜索（回溯思想），从空字符串开始构造，做加法，即 dfs(左括号数目，右括号数据，路径)，我们从 dfs(0, 0, \"\") 开始",{"type":369,"tag":454,"props":478,"children":480},{"id":479},"实现",[481],{"type":374,"value":479},{"type":369,"tag":483,"props":484,"children":486},"h3",{"id":485},"回溯",[487],{"type":374,"value":485},{"type":369,"tag":381,"props":489,"children":493},{"className":490,"code":491,"language":492,"meta":362,"style":362},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number} n\n * @return {string[]}\n */\nvar generateParenthesis = function (n) {\n  const res = [];\n\n  /**\n   * @param l 左侧括号已经用了几个\n   * @param r 右侧括号已经用了几个\n   * @param str 当前递归得到的拼接字符串结果\n   */\n  function dfs(l, r, str) {\n    if (l === n && r === n) {\n      return res.push(str);\n    }\n    // l \u003C r 时不满足条件，剪枝\n    if (l \u003C r) return;\n    // l \u003C n 时可插入左括号，最多可以插入 n 个\n    if (l \u003C n) {\n      dfs(l + 1, r, str + \"(\");\n    }\n    // r \u003C l 时，可以插入右括号\n    if (r \u003C l) {\n      dfs(l, r + 1, str + \")\");\n    }\n  }\n\n  dfs(0, 0, \"\");\n\n  return res;\n};\n","js",[494],{"type":369,"tag":387,"props":495,"children":496},{"__ignoreMap":362},[497,506,532,550,559,603,633,643,652,675,697,719,728,773,822,864,873,882,921,930,958,1020,1028,1037,1066,1123,1131,1140,1148,1192,1200,1217],{"type":369,"tag":391,"props":498,"children":499},{"class":393,"line":394},[500],{"type":369,"tag":391,"props":501,"children":503},{"style":502},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[504],{"type":374,"value":505},"/**\n",{"type":369,"tag":391,"props":507,"children":508},{"class":393,"line":403},[509,514,520,526],{"type":369,"tag":391,"props":510,"children":511},{"style":502},[512],{"type":374,"value":513}," * ",{"type":369,"tag":391,"props":515,"children":517},{"style":516},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[518],{"type":374,"value":519},"@param",{"type":369,"tag":391,"props":521,"children":523},{"style":522},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[524],{"type":374,"value":525}," {number}",{"type":369,"tag":391,"props":527,"children":529},{"style":528},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[530],{"type":374,"value":531}," n\n",{"type":369,"tag":391,"props":533,"children":535},{"class":393,"line":534},3,[536,540,545],{"type":369,"tag":391,"props":537,"children":538},{"style":502},[539],{"type":374,"value":513},{"type":369,"tag":391,"props":541,"children":542},{"style":516},[543],{"type":374,"value":544},"@return",{"type":369,"tag":391,"props":546,"children":547},{"style":522},[548],{"type":374,"value":549}," {string[]}\n",{"type":369,"tag":391,"props":551,"children":553},{"class":393,"line":552},4,[554],{"type":369,"tag":391,"props":555,"children":556},{"style":502},[557],{"type":374,"value":558}," */\n",{"type":369,"tag":391,"props":560,"children":562},{"class":393,"line":561},5,[563,569,575,581,586,592,598],{"type":369,"tag":391,"props":564,"children":566},{"style":565},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[567],{"type":374,"value":568},"var",{"type":369,"tag":391,"props":570,"children":572},{"style":571},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[573],{"type":374,"value":574}," generateParenthesis",{"type":369,"tag":391,"props":576,"children":578},{"style":577},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[579],{"type":374,"value":580}," =",{"type":369,"tag":391,"props":582,"children":583},{"style":565},[584],{"type":374,"value":585}," function",{"type":369,"tag":391,"props":587,"children":589},{"style":588},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[590],{"type":374,"value":591}," (",{"type":369,"tag":391,"props":593,"children":595},{"style":594},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[596],{"type":374,"value":597},"n",{"type":369,"tag":391,"props":599,"children":600},{"style":588},[601],{"type":374,"value":602},") {\n",{"type":369,"tag":391,"props":604,"children":606},{"class":393,"line":605},6,[607,612,618,622,627],{"type":369,"tag":391,"props":608,"children":609},{"style":565},[610],{"type":374,"value":611},"  const",{"type":369,"tag":391,"props":613,"children":615},{"style":614},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[616],{"type":374,"value":617}," res",{"type":369,"tag":391,"props":619,"children":620},{"style":577},[621],{"type":374,"value":580},{"type":369,"tag":391,"props":623,"children":624},{"style":588},[625],{"type":374,"value":626}," []",{"type":369,"tag":391,"props":628,"children":630},{"style":629},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[631],{"type":374,"value":632},";\n",{"type":369,"tag":391,"props":634,"children":636},{"class":393,"line":635},7,[637],{"type":369,"tag":391,"props":638,"children":640},{"emptyLinePlaceholder":639},true,[641],{"type":374,"value":642},"\n",{"type":369,"tag":391,"props":644,"children":646},{"class":393,"line":645},8,[647],{"type":369,"tag":391,"props":648,"children":649},{"style":502},[650],{"type":374,"value":651},"  /**\n",{"type":369,"tag":391,"props":653,"children":655},{"class":393,"line":654},9,[656,661,665,670],{"type":369,"tag":391,"props":657,"children":658},{"style":502},[659],{"type":374,"value":660},"   * ",{"type":369,"tag":391,"props":662,"children":663},{"style":516},[664],{"type":374,"value":519},{"type":369,"tag":391,"props":666,"children":667},{"style":528},[668],{"type":374,"value":669}," l",{"type":369,"tag":391,"props":671,"children":672},{"style":502},[673],{"type":374,"value":674}," 左侧括号已经用了几个\n",{"type":369,"tag":391,"props":676,"children":678},{"class":393,"line":677},10,[679,683,687,692],{"type":369,"tag":391,"props":680,"children":681},{"style":502},[682],{"type":374,"value":660},{"type":369,"tag":391,"props":684,"children":685},{"style":516},[686],{"type":374,"value":519},{"type":369,"tag":391,"props":688,"children":689},{"style":528},[690],{"type":374,"value":691}," r",{"type":369,"tag":391,"props":693,"children":694},{"style":502},[695],{"type":374,"value":696}," 右侧括号已经用了几个\n",{"type":369,"tag":391,"props":698,"children":700},{"class":393,"line":699},11,[701,705,709,714],{"type":369,"tag":391,"props":702,"children":703},{"style":502},[704],{"type":374,"value":660},{"type":369,"tag":391,"props":706,"children":707},{"style":516},[708],{"type":374,"value":519},{"type":369,"tag":391,"props":710,"children":711},{"style":528},[712],{"type":374,"value":713}," str",{"type":369,"tag":391,"props":715,"children":716},{"style":502},[717],{"type":374,"value":718}," 当前递归得到的拼接字符串结果\n",{"type":369,"tag":391,"props":720,"children":722},{"class":393,"line":721},12,[723],{"type":369,"tag":391,"props":724,"children":725},{"style":502},[726],{"type":374,"value":727},"   */\n",{"type":369,"tag":391,"props":729,"children":731},{"class":393,"line":730},13,[732,737,742,747,752,757,761,765,769],{"type":369,"tag":391,"props":733,"children":734},{"style":565},[735],{"type":374,"value":736},"  function",{"type":369,"tag":391,"props":738,"children":739},{"style":571},[740],{"type":374,"value":741}," dfs",{"type":369,"tag":391,"props":743,"children":744},{"style":588},[745],{"type":374,"value":746},"(",{"type":369,"tag":391,"props":748,"children":749},{"style":594},[750],{"type":374,"value":751},"l",{"type":369,"tag":391,"props":753,"children":754},{"style":629},[755],{"type":374,"value":756},",",{"type":369,"tag":391,"props":758,"children":759},{"style":594},[760],{"type":374,"value":691},{"type":369,"tag":391,"props":762,"children":763},{"style":629},[764],{"type":374,"value":756},{"type":369,"tag":391,"props":766,"children":767},{"style":594},[768],{"type":374,"value":713},{"type":369,"tag":391,"props":770,"children":771},{"style":588},[772],{"type":374,"value":602},{"type":369,"tag":391,"props":774,"children":776},{"class":393,"line":775},14,[777,783,787,791,796,801,806,810,814,818],{"type":369,"tag":391,"props":778,"children":780},{"style":779},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[781],{"type":374,"value":782},"    if",{"type":369,"tag":391,"props":784,"children":785},{"style":588},[786],{"type":374,"value":591},{"type":369,"tag":391,"props":788,"children":789},{"style":614},[790],{"type":374,"value":751},{"type":369,"tag":391,"props":792,"children":793},{"style":577},[794],{"type":374,"value":795}," ===",{"type":369,"tag":391,"props":797,"children":798},{"style":614},[799],{"type":374,"value":800}," n",{"type":369,"tag":391,"props":802,"children":803},{"style":577},[804],{"type":374,"value":805}," &&",{"type":369,"tag":391,"props":807,"children":808},{"style":614},[809],{"type":374,"value":691},{"type":369,"tag":391,"props":811,"children":812},{"style":577},[813],{"type":374,"value":795},{"type":369,"tag":391,"props":815,"children":816},{"style":614},[817],{"type":374,"value":800},{"type":369,"tag":391,"props":819,"children":820},{"style":588},[821],{"type":374,"value":602},{"type":369,"tag":391,"props":823,"children":825},{"class":393,"line":824},15,[826,831,835,841,846,850,855,860],{"type":369,"tag":391,"props":827,"children":828},{"style":779},[829],{"type":374,"value":830},"      return",{"type":369,"tag":391,"props":832,"children":833},{"style":614},[834],{"type":374,"value":617},{"type":369,"tag":391,"props":836,"children":838},{"style":837},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[839],{"type":374,"value":840},".",{"type":369,"tag":391,"props":842,"children":843},{"style":571},[844],{"type":374,"value":845},"push",{"type":369,"tag":391,"props":847,"children":848},{"style":588},[849],{"type":374,"value":746},{"type":369,"tag":391,"props":851,"children":852},{"style":614},[853],{"type":374,"value":854},"str",{"type":369,"tag":391,"props":856,"children":857},{"style":588},[858],{"type":374,"value":859},")",{"type":369,"tag":391,"props":861,"children":862},{"style":629},[863],{"type":374,"value":632},{"type":369,"tag":391,"props":865,"children":867},{"class":393,"line":866},16,[868],{"type":369,"tag":391,"props":869,"children":870},{"style":588},[871],{"type":374,"value":872},"    }\n",{"type":369,"tag":391,"props":874,"children":876},{"class":393,"line":875},17,[877],{"type":369,"tag":391,"props":878,"children":879},{"style":502},[880],{"type":374,"value":881},"    // l \u003C r 时不满足条件，剪枝\n",{"type":369,"tag":391,"props":883,"children":885},{"class":393,"line":884},18,[886,890,894,898,903,907,912,917],{"type":369,"tag":391,"props":887,"children":888},{"style":779},[889],{"type":374,"value":782},{"type":369,"tag":391,"props":891,"children":892},{"style":588},[893],{"type":374,"value":591},{"type":369,"tag":391,"props":895,"children":896},{"style":614},[897],{"type":374,"value":751},{"type":369,"tag":391,"props":899,"children":900},{"style":577},[901],{"type":374,"value":902}," \u003C",{"type":369,"tag":391,"props":904,"children":905},{"style":614},[906],{"type":374,"value":691},{"type":369,"tag":391,"props":908,"children":909},{"style":588},[910],{"type":374,"value":911},") ",{"type":369,"tag":391,"props":913,"children":914},{"style":779},[915],{"type":374,"value":916},"return",{"type":369,"tag":391,"props":918,"children":919},{"style":629},[920],{"type":374,"value":632},{"type":369,"tag":391,"props":922,"children":924},{"class":393,"line":923},19,[925],{"type":369,"tag":391,"props":926,"children":927},{"style":502},[928],{"type":374,"value":929},"    // l \u003C n 时可插入左括号，最多可以插入 n 个\n",{"type":369,"tag":391,"props":931,"children":933},{"class":393,"line":932},20,[934,938,942,946,950,954],{"type":369,"tag":391,"props":935,"children":936},{"style":779},[937],{"type":374,"value":782},{"type":369,"tag":391,"props":939,"children":940},{"style":588},[941],{"type":374,"value":591},{"type":369,"tag":391,"props":943,"children":944},{"style":614},[945],{"type":374,"value":751},{"type":369,"tag":391,"props":947,"children":948},{"style":577},[949],{"type":374,"value":902},{"type":369,"tag":391,"props":951,"children":952},{"style":614},[953],{"type":374,"value":800},{"type":369,"tag":391,"props":955,"children":956},{"style":588},[957],{"type":374,"value":602},{"type":369,"tag":391,"props":959,"children":961},{"class":393,"line":960},21,[962,967,971,975,980,986,990,994,998,1002,1006,1012,1016],{"type":369,"tag":391,"props":963,"children":964},{"style":571},[965],{"type":374,"value":966},"      dfs",{"type":369,"tag":391,"props":968,"children":969},{"style":588},[970],{"type":374,"value":746},{"type":369,"tag":391,"props":972,"children":973},{"style":614},[974],{"type":374,"value":751},{"type":369,"tag":391,"props":976,"children":977},{"style":577},[978],{"type":374,"value":979}," +",{"type":369,"tag":391,"props":981,"children":983},{"style":982},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[984],{"type":374,"value":985}," 1",{"type":369,"tag":391,"props":987,"children":988},{"style":629},[989],{"type":374,"value":756},{"type":369,"tag":391,"props":991,"children":992},{"style":614},[993],{"type":374,"value":691},{"type":369,"tag":391,"props":995,"children":996},{"style":629},[997],{"type":374,"value":756},{"type":369,"tag":391,"props":999,"children":1000},{"style":614},[1001],{"type":374,"value":713},{"type":369,"tag":391,"props":1003,"children":1004},{"style":577},[1005],{"type":374,"value":979},{"type":369,"tag":391,"props":1007,"children":1009},{"style":1008},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[1010],{"type":374,"value":1011}," \"(\"",{"type":369,"tag":391,"props":1013,"children":1014},{"style":588},[1015],{"type":374,"value":859},{"type":369,"tag":391,"props":1017,"children":1018},{"style":629},[1019],{"type":374,"value":632},{"type":369,"tag":391,"props":1021,"children":1023},{"class":393,"line":1022},22,[1024],{"type":369,"tag":391,"props":1025,"children":1026},{"style":588},[1027],{"type":374,"value":872},{"type":369,"tag":391,"props":1029,"children":1031},{"class":393,"line":1030},23,[1032],{"type":369,"tag":391,"props":1033,"children":1034},{"style":502},[1035],{"type":374,"value":1036},"    // r \u003C l 时，可以插入右括号\n",{"type":369,"tag":391,"props":1038,"children":1040},{"class":393,"line":1039},24,[1041,1045,1049,1054,1058,1062],{"type":369,"tag":391,"props":1042,"children":1043},{"style":779},[1044],{"type":374,"value":782},{"type":369,"tag":391,"props":1046,"children":1047},{"style":588},[1048],{"type":374,"value":591},{"type":369,"tag":391,"props":1050,"children":1051},{"style":614},[1052],{"type":374,"value":1053},"r",{"type":369,"tag":391,"props":1055,"children":1056},{"style":577},[1057],{"type":374,"value":902},{"type":369,"tag":391,"props":1059,"children":1060},{"style":614},[1061],{"type":374,"value":669},{"type":369,"tag":391,"props":1063,"children":1064},{"style":588},[1065],{"type":374,"value":602},{"type":369,"tag":391,"props":1067,"children":1069},{"class":393,"line":1068},25,[1070,1074,1078,1082,1086,1090,1094,1098,1102,1106,1110,1115,1119],{"type":369,"tag":391,"props":1071,"children":1072},{"style":571},[1073],{"type":374,"value":966},{"type":369,"tag":391,"props":1075,"children":1076},{"style":588},[1077],{"type":374,"value":746},{"type":369,"tag":391,"props":1079,"children":1080},{"style":614},[1081],{"type":374,"value":751},{"type":369,"tag":391,"props":1083,"children":1084},{"style":629},[1085],{"type":374,"value":756},{"type":369,"tag":391,"props":1087,"children":1088},{"style":614},[1089],{"type":374,"value":691},{"type":369,"tag":391,"props":1091,"children":1092},{"style":577},[1093],{"type":374,"value":979},{"type":369,"tag":391,"props":1095,"children":1096},{"style":982},[1097],{"type":374,"value":985},{"type":369,"tag":391,"props":1099,"children":1100},{"style":629},[1101],{"type":374,"value":756},{"type":369,"tag":391,"props":1103,"children":1104},{"style":614},[1105],{"type":374,"value":713},{"type":369,"tag":391,"props":1107,"children":1108},{"style":577},[1109],{"type":374,"value":979},{"type":369,"tag":391,"props":1111,"children":1112},{"style":1008},[1113],{"type":374,"value":1114}," \")\"",{"type":369,"tag":391,"props":1116,"children":1117},{"style":588},[1118],{"type":374,"value":859},{"type":369,"tag":391,"props":1120,"children":1121},{"style":629},[1122],{"type":374,"value":632},{"type":369,"tag":391,"props":1124,"children":1126},{"class":393,"line":1125},26,[1127],{"type":369,"tag":391,"props":1128,"children":1129},{"style":588},[1130],{"type":374,"value":872},{"type":369,"tag":391,"props":1132,"children":1134},{"class":393,"line":1133},27,[1135],{"type":369,"tag":391,"props":1136,"children":1137},{"style":588},[1138],{"type":374,"value":1139},"  }\n",{"type":369,"tag":391,"props":1141,"children":1143},{"class":393,"line":1142},28,[1144],{"type":369,"tag":391,"props":1145,"children":1146},{"emptyLinePlaceholder":639},[1147],{"type":374,"value":642},{"type":369,"tag":391,"props":1149,"children":1151},{"class":393,"line":1150},29,[1152,1157,1161,1166,1170,1175,1179,1184,1188],{"type":369,"tag":391,"props":1153,"children":1154},{"style":571},[1155],{"type":374,"value":1156},"  dfs",{"type":369,"tag":391,"props":1158,"children":1159},{"style":588},[1160],{"type":374,"value":746},{"type":369,"tag":391,"props":1162,"children":1163},{"style":982},[1164],{"type":374,"value":1165},"0",{"type":369,"tag":391,"props":1167,"children":1168},{"style":629},[1169],{"type":374,"value":756},{"type":369,"tag":391,"props":1171,"children":1172},{"style":982},[1173],{"type":374,"value":1174}," 0",{"type":369,"tag":391,"props":1176,"children":1177},{"style":629},[1178],{"type":374,"value":756},{"type":369,"tag":391,"props":1180,"children":1181},{"style":1008},[1182],{"type":374,"value":1183}," \"\"",{"type":369,"tag":391,"props":1185,"children":1186},{"style":588},[1187],{"type":374,"value":859},{"type":369,"tag":391,"props":1189,"children":1190},{"style":629},[1191],{"type":374,"value":632},{"type":369,"tag":391,"props":1193,"children":1195},{"class":393,"line":1194},30,[1196],{"type":369,"tag":391,"props":1197,"children":1198},{"emptyLinePlaceholder":639},[1199],{"type":374,"value":642},{"type":369,"tag":391,"props":1201,"children":1203},{"class":393,"line":1202},31,[1204,1209,1213],{"type":369,"tag":391,"props":1205,"children":1206},{"style":779},[1207],{"type":374,"value":1208},"  return",{"type":369,"tag":391,"props":1210,"children":1211},{"style":614},[1212],{"type":374,"value":617},{"type":369,"tag":391,"props":1214,"children":1215},{"style":629},[1216],{"type":374,"value":632},{"type":369,"tag":391,"props":1218,"children":1220},{"class":393,"line":1219},32,[1221,1226],{"type":369,"tag":391,"props":1222,"children":1223},{"style":588},[1224],{"type":374,"value":1225},"}",{"type":369,"tag":391,"props":1227,"children":1228},{"style":629},[1229],{"type":374,"value":632},{"type":369,"tag":1231,"props":1232,"children":1233},"style",{},[1234],{"type":374,"value":1235},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":362,"searchDepth":561,"depth":561,"links":1237},[1238,1239],{"id":456,"depth":403,"text":456},{"id":479,"depth":403,"text":479,"children":1240},[1241],{"id":485,"depth":534,"text":485},"markdown","content:2.code:1.algorithm:3.leetcode:22.generate-parentheses.md","content","2.code/1.algorithm/3.leetcode/22.generate-parentheses.md","md",[1248,1250],{"_path":91,"title":90,"description":1249},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",{"_path":97,"title":96,"description":1251},"给你一个链表数组，每个链表都已经按升序排列。",1712748635969]