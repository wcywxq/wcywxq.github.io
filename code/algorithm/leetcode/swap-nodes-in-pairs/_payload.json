[{"data":1,"prerenderedAt":1167},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/swap-nodes-in-pairs":322,"/code/algorithm/leetcode/swap-nodes-in-pairs-surround":1162},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319],{"title":320,"_path":321},"顺序打印 url 并支持 retry","/code/scene/promise-url-retry",{"_path":100,"_dir":323,"_draft":324,"_partial":324,"_locale":325,"title":99,"description":326,"url":327,"body":328,"_type":1157,"_id":1158,"_source":1159,"_file":1160,"_extension":1161},"leetcode",false,"","给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。","https://leetcode.cn/problems/swap-nodes-in-pairs",{"type":329,"children":330,"toc":1151},"root",[331,338,349,379,384,407,412,435,440,455,461,466,472,477,516,1145],{"type":332,"tag":333,"props":334,"children":335},"element","p",{},[336],{"type":337,"value":326},"text",{"type":332,"tag":333,"props":339,"children":340},{},[341,343],{"type":337,"value":342},"示例 1：\n",{"type":332,"tag":344,"props":345,"children":348},"img",{"alt":346,"src":347},"swap_ex1","/img/code_leetcode_No.24_swap_ex1.png",[],{"type":332,"tag":350,"props":351,"children":354},"pre",{"className":352,"code":353,"language":337,"meta":325,"style":325},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：head = [1,2,3,4]\n输出：[2,1,4,3]\n",[355],{"type":332,"tag":356,"props":357,"children":358},"code",{"__ignoreMap":325},[359,370],{"type":332,"tag":360,"props":361,"children":364},"span",{"class":362,"line":363},"line",1,[365],{"type":332,"tag":360,"props":366,"children":367},{},[368],{"type":337,"value":369},"输入：head = [1,2,3,4]\n",{"type":332,"tag":360,"props":371,"children":373},{"class":362,"line":372},2,[374],{"type":332,"tag":360,"props":375,"children":376},{},[377],{"type":337,"value":378},"输出：[2,1,4,3]\n",{"type":332,"tag":333,"props":380,"children":381},{},[382],{"type":337,"value":383},"示例 2：",{"type":332,"tag":350,"props":385,"children":387},{"className":352,"code":386,"language":337,"meta":325,"style":325},"输入：head = []\n输出：[]\n",[388],{"type":332,"tag":356,"props":389,"children":390},{"__ignoreMap":325},[391,399],{"type":332,"tag":360,"props":392,"children":393},{"class":362,"line":363},[394],{"type":332,"tag":360,"props":395,"children":396},{},[397],{"type":337,"value":398},"输入：head = []\n",{"type":332,"tag":360,"props":400,"children":401},{"class":362,"line":372},[402],{"type":332,"tag":360,"props":403,"children":404},{},[405],{"type":337,"value":406},"输出：[]\n",{"type":332,"tag":333,"props":408,"children":409},{},[410],{"type":337,"value":411},"示例 3：",{"type":332,"tag":350,"props":413,"children":415},{"className":352,"code":414,"language":337,"meta":325,"style":325},"输入：head = [1]\n输出：[1]\n",[416],{"type":332,"tag":356,"props":417,"children":418},{"__ignoreMap":325},[419,427],{"type":332,"tag":360,"props":420,"children":421},{"class":362,"line":363},[422],{"type":332,"tag":360,"props":423,"children":424},{},[425],{"type":337,"value":426},"输入：head = [1]\n",{"type":332,"tag":360,"props":428,"children":429},{"class":362,"line":372},[430],{"type":332,"tag":360,"props":431,"children":432},{},[433],{"type":337,"value":434},"输出：[1]\n",{"type":332,"tag":333,"props":436,"children":437},{},[438],{"type":337,"value":439},"提示：",{"type":332,"tag":441,"props":442,"children":443},"ul",{},[444,450],{"type":332,"tag":445,"props":446,"children":447},"li",{},[448],{"type":337,"value":449},"链表中节点的数目在范围 [0, 100] 内",{"type":332,"tag":445,"props":451,"children":452},{},[453],{"type":337,"value":454},"0 \u003C= Node.val \u003C= 100",{"type":332,"tag":456,"props":457,"children":459},"h2",{"id":458},"解题思路",[460],{"type":337,"value":458},{"type":332,"tag":456,"props":462,"children":464},{"id":463},"实现",[465],{"type":337,"value":463},{"type":332,"tag":467,"props":468,"children":470},"h3",{"id":469},"双指针",[471],{"type":337,"value":469},{"type":332,"tag":333,"props":473,"children":474},{},[475],{"type":337,"value":476},"设置一个 dummy 节点简化操作，dummy.next 指向 head",{"type":332,"tag":478,"props":479,"children":480},"ol",{},[481,486,491,496,501,506,511],{"type":332,"tag":445,"props":482,"children":483},{},[484],{"type":337,"value":485},"初始化 first 为第一个节点",{"type":332,"tag":445,"props":487,"children":488},{},[489],{"type":337,"value":490},"初始化 second 为第二个节点",{"type":332,"tag":445,"props":492,"children":493},{},[494],{"type":337,"value":495},"初始化 current 为 dummy",{"type":332,"tag":445,"props":497,"children":498},{},[499],{"type":337,"value":500},"first.next = second.next",{"type":332,"tag":445,"props":502,"children":503},{},[504],{"type":337,"value":505},"current.next = second",{"type":332,"tag":445,"props":507,"children":508},{},[509],{"type":337,"value":510},"current 移动 2 格",{"type":332,"tag":445,"props":512,"children":513},{},[514],{"type":337,"value":515},"重复执行",{"type":332,"tag":350,"props":517,"children":521},{"className":518,"code":519,"language":520,"meta":325,"style":325},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar swapPairs = function (head) {\n  const dummy = new ListNode();\n  dummy.next = head;\n  let current = dummy;\n  while (current.next && current.next.next) {\n    // 初始化双指针\n    const first = current.next;\n    const second = current.next.next;\n\n    // 更新双指针和 current 指针\n    first.next = second.next;\n    second.next = first;\n    current.next = second;\n\n    // 指针移动\n    current = current.next.next;\n  }\n  return dummy.next;\n};\n","js",[522],{"type":332,"tag":356,"props":523,"children":524},{"__ignoreMap":325},[525,534,542,551,560,569,578,587,595,622,640,648,692,732,765,791,847,856,890,931,941,950,987,1016,1045,1053,1062,1098,1107,1132],{"type":332,"tag":360,"props":526,"children":527},{"class":362,"line":363},[528],{"type":332,"tag":360,"props":529,"children":531},{"style":530},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[532],{"type":337,"value":533},"/**\n",{"type":332,"tag":360,"props":535,"children":536},{"class":362,"line":372},[537],{"type":332,"tag":360,"props":538,"children":539},{"style":530},[540],{"type":337,"value":541}," * Definition for singly-linked list.\n",{"type":332,"tag":360,"props":543,"children":545},{"class":362,"line":544},3,[546],{"type":332,"tag":360,"props":547,"children":548},{"style":530},[549],{"type":337,"value":550}," * function ListNode(val, next) {\n",{"type":332,"tag":360,"props":552,"children":554},{"class":362,"line":553},4,[555],{"type":332,"tag":360,"props":556,"children":557},{"style":530},[558],{"type":337,"value":559}," *     this.val = (val===undefined ? 0 : val)\n",{"type":332,"tag":360,"props":561,"children":563},{"class":362,"line":562},5,[564],{"type":332,"tag":360,"props":565,"children":566},{"style":530},[567],{"type":337,"value":568}," *     this.next = (next===undefined ? null : next)\n",{"type":332,"tag":360,"props":570,"children":572},{"class":362,"line":571},6,[573],{"type":332,"tag":360,"props":574,"children":575},{"style":530},[576],{"type":337,"value":577}," * }\n",{"type":332,"tag":360,"props":579,"children":581},{"class":362,"line":580},7,[582],{"type":332,"tag":360,"props":583,"children":584},{"style":530},[585],{"type":337,"value":586}," */\n",{"type":332,"tag":360,"props":588,"children":590},{"class":362,"line":589},8,[591],{"type":332,"tag":360,"props":592,"children":593},{"style":530},[594],{"type":337,"value":533},{"type":332,"tag":360,"props":596,"children":598},{"class":362,"line":597},9,[599,604,610,616],{"type":332,"tag":360,"props":600,"children":601},{"style":530},[602],{"type":337,"value":603}," * ",{"type":332,"tag":360,"props":605,"children":607},{"style":606},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[608],{"type":337,"value":609},"@param",{"type":332,"tag":360,"props":611,"children":613},{"style":612},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[614],{"type":337,"value":615}," {ListNode}",{"type":332,"tag":360,"props":617,"children":619},{"style":618},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[620],{"type":337,"value":621}," head\n",{"type":332,"tag":360,"props":623,"children":625},{"class":362,"line":624},10,[626,630,635],{"type":332,"tag":360,"props":627,"children":628},{"style":530},[629],{"type":337,"value":603},{"type":332,"tag":360,"props":631,"children":632},{"style":606},[633],{"type":337,"value":634},"@return",{"type":332,"tag":360,"props":636,"children":637},{"style":612},[638],{"type":337,"value":639}," {ListNode}\n",{"type":332,"tag":360,"props":641,"children":643},{"class":362,"line":642},11,[644],{"type":332,"tag":360,"props":645,"children":646},{"style":530},[647],{"type":337,"value":586},{"type":332,"tag":360,"props":649,"children":651},{"class":362,"line":650},12,[652,658,664,670,675,681,687],{"type":332,"tag":360,"props":653,"children":655},{"style":654},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[656],{"type":337,"value":657},"var",{"type":332,"tag":360,"props":659,"children":661},{"style":660},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[662],{"type":337,"value":663}," swapPairs",{"type":332,"tag":360,"props":665,"children":667},{"style":666},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[668],{"type":337,"value":669}," =",{"type":332,"tag":360,"props":671,"children":672},{"style":654},[673],{"type":337,"value":674}," function",{"type":332,"tag":360,"props":676,"children":678},{"style":677},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[679],{"type":337,"value":680}," (",{"type":332,"tag":360,"props":682,"children":684},{"style":683},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[685],{"type":337,"value":686},"head",{"type":332,"tag":360,"props":688,"children":689},{"style":677},[690],{"type":337,"value":691},") {\n",{"type":332,"tag":360,"props":693,"children":695},{"class":362,"line":694},13,[696,701,707,711,716,721,726],{"type":332,"tag":360,"props":697,"children":698},{"style":654},[699],{"type":337,"value":700},"  const",{"type":332,"tag":360,"props":702,"children":704},{"style":703},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[705],{"type":337,"value":706}," dummy",{"type":332,"tag":360,"props":708,"children":709},{"style":666},[710],{"type":337,"value":669},{"type":332,"tag":360,"props":712,"children":713},{"style":666},[714],{"type":337,"value":715}," new",{"type":332,"tag":360,"props":717,"children":718},{"style":660},[719],{"type":337,"value":720}," ListNode",{"type":332,"tag":360,"props":722,"children":723},{"style":677},[724],{"type":337,"value":725},"()",{"type":332,"tag":360,"props":727,"children":729},{"style":728},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[730],{"type":337,"value":731},";\n",{"type":332,"tag":360,"props":733,"children":735},{"class":362,"line":734},14,[736,741,747,752,756,761],{"type":332,"tag":360,"props":737,"children":738},{"style":703},[739],{"type":337,"value":740},"  dummy",{"type":332,"tag":360,"props":742,"children":744},{"style":743},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[745],{"type":337,"value":746},".",{"type":332,"tag":360,"props":748,"children":749},{"style":703},[750],{"type":337,"value":751},"next",{"type":332,"tag":360,"props":753,"children":754},{"style":666},[755],{"type":337,"value":669},{"type":332,"tag":360,"props":757,"children":758},{"style":703},[759],{"type":337,"value":760}," head",{"type":332,"tag":360,"props":762,"children":763},{"style":728},[764],{"type":337,"value":731},{"type":332,"tag":360,"props":766,"children":768},{"class":362,"line":767},15,[769,774,779,783,787],{"type":332,"tag":360,"props":770,"children":771},{"style":654},[772],{"type":337,"value":773},"  let",{"type":332,"tag":360,"props":775,"children":776},{"style":703},[777],{"type":337,"value":778}," current",{"type":332,"tag":360,"props":780,"children":781},{"style":666},[782],{"type":337,"value":669},{"type":332,"tag":360,"props":784,"children":785},{"style":703},[786],{"type":337,"value":706},{"type":332,"tag":360,"props":788,"children":789},{"style":728},[790],{"type":337,"value":731},{"type":332,"tag":360,"props":792,"children":794},{"class":362,"line":793},16,[795,801,805,810,814,818,823,827,831,835,839,843],{"type":332,"tag":360,"props":796,"children":798},{"style":797},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[799],{"type":337,"value":800},"  while",{"type":332,"tag":360,"props":802,"children":803},{"style":677},[804],{"type":337,"value":680},{"type":332,"tag":360,"props":806,"children":807},{"style":703},[808],{"type":337,"value":809},"current",{"type":332,"tag":360,"props":811,"children":812},{"style":743},[813],{"type":337,"value":746},{"type":332,"tag":360,"props":815,"children":816},{"style":703},[817],{"type":337,"value":751},{"type":332,"tag":360,"props":819,"children":820},{"style":666},[821],{"type":337,"value":822}," &&",{"type":332,"tag":360,"props":824,"children":825},{"style":703},[826],{"type":337,"value":778},{"type":332,"tag":360,"props":828,"children":829},{"style":743},[830],{"type":337,"value":746},{"type":332,"tag":360,"props":832,"children":833},{"style":703},[834],{"type":337,"value":751},{"type":332,"tag":360,"props":836,"children":837},{"style":743},[838],{"type":337,"value":746},{"type":332,"tag":360,"props":840,"children":841},{"style":703},[842],{"type":337,"value":751},{"type":332,"tag":360,"props":844,"children":845},{"style":677},[846],{"type":337,"value":691},{"type":332,"tag":360,"props":848,"children":850},{"class":362,"line":849},17,[851],{"type":332,"tag":360,"props":852,"children":853},{"style":530},[854],{"type":337,"value":855},"    // 初始化双指针\n",{"type":332,"tag":360,"props":857,"children":859},{"class":362,"line":858},18,[860,865,870,874,878,882,886],{"type":332,"tag":360,"props":861,"children":862},{"style":654},[863],{"type":337,"value":864},"    const",{"type":332,"tag":360,"props":866,"children":867},{"style":703},[868],{"type":337,"value":869}," first",{"type":332,"tag":360,"props":871,"children":872},{"style":666},[873],{"type":337,"value":669},{"type":332,"tag":360,"props":875,"children":876},{"style":703},[877],{"type":337,"value":778},{"type":332,"tag":360,"props":879,"children":880},{"style":743},[881],{"type":337,"value":746},{"type":332,"tag":360,"props":883,"children":884},{"style":703},[885],{"type":337,"value":751},{"type":332,"tag":360,"props":887,"children":888},{"style":728},[889],{"type":337,"value":731},{"type":332,"tag":360,"props":891,"children":893},{"class":362,"line":892},19,[894,898,903,907,911,915,919,923,927],{"type":332,"tag":360,"props":895,"children":896},{"style":654},[897],{"type":337,"value":864},{"type":332,"tag":360,"props":899,"children":900},{"style":703},[901],{"type":337,"value":902}," second",{"type":332,"tag":360,"props":904,"children":905},{"style":666},[906],{"type":337,"value":669},{"type":332,"tag":360,"props":908,"children":909},{"style":703},[910],{"type":337,"value":778},{"type":332,"tag":360,"props":912,"children":913},{"style":743},[914],{"type":337,"value":746},{"type":332,"tag":360,"props":916,"children":917},{"style":703},[918],{"type":337,"value":751},{"type":332,"tag":360,"props":920,"children":921},{"style":743},[922],{"type":337,"value":746},{"type":332,"tag":360,"props":924,"children":925},{"style":703},[926],{"type":337,"value":751},{"type":332,"tag":360,"props":928,"children":929},{"style":728},[930],{"type":337,"value":731},{"type":332,"tag":360,"props":932,"children":934},{"class":362,"line":933},20,[935],{"type":332,"tag":360,"props":936,"children":938},{"emptyLinePlaceholder":937},true,[939],{"type":337,"value":940},"\n",{"type":332,"tag":360,"props":942,"children":944},{"class":362,"line":943},21,[945],{"type":332,"tag":360,"props":946,"children":947},{"style":530},[948],{"type":337,"value":949},"    // 更新双指针和 current 指针\n",{"type":332,"tag":360,"props":951,"children":953},{"class":362,"line":952},22,[954,959,963,967,971,975,979,983],{"type":332,"tag":360,"props":955,"children":956},{"style":703},[957],{"type":337,"value":958},"    first",{"type":332,"tag":360,"props":960,"children":961},{"style":743},[962],{"type":337,"value":746},{"type":332,"tag":360,"props":964,"children":965},{"style":703},[966],{"type":337,"value":751},{"type":332,"tag":360,"props":968,"children":969},{"style":666},[970],{"type":337,"value":669},{"type":332,"tag":360,"props":972,"children":973},{"style":703},[974],{"type":337,"value":902},{"type":332,"tag":360,"props":976,"children":977},{"style":743},[978],{"type":337,"value":746},{"type":332,"tag":360,"props":980,"children":981},{"style":703},[982],{"type":337,"value":751},{"type":332,"tag":360,"props":984,"children":985},{"style":728},[986],{"type":337,"value":731},{"type":332,"tag":360,"props":988,"children":990},{"class":362,"line":989},23,[991,996,1000,1004,1008,1012],{"type":332,"tag":360,"props":992,"children":993},{"style":703},[994],{"type":337,"value":995},"    second",{"type":332,"tag":360,"props":997,"children":998},{"style":743},[999],{"type":337,"value":746},{"type":332,"tag":360,"props":1001,"children":1002},{"style":703},[1003],{"type":337,"value":751},{"type":332,"tag":360,"props":1005,"children":1006},{"style":666},[1007],{"type":337,"value":669},{"type":332,"tag":360,"props":1009,"children":1010},{"style":703},[1011],{"type":337,"value":869},{"type":332,"tag":360,"props":1013,"children":1014},{"style":728},[1015],{"type":337,"value":731},{"type":332,"tag":360,"props":1017,"children":1019},{"class":362,"line":1018},24,[1020,1025,1029,1033,1037,1041],{"type":332,"tag":360,"props":1021,"children":1022},{"style":703},[1023],{"type":337,"value":1024},"    current",{"type":332,"tag":360,"props":1026,"children":1027},{"style":743},[1028],{"type":337,"value":746},{"type":332,"tag":360,"props":1030,"children":1031},{"style":703},[1032],{"type":337,"value":751},{"type":332,"tag":360,"props":1034,"children":1035},{"style":666},[1036],{"type":337,"value":669},{"type":332,"tag":360,"props":1038,"children":1039},{"style":703},[1040],{"type":337,"value":902},{"type":332,"tag":360,"props":1042,"children":1043},{"style":728},[1044],{"type":337,"value":731},{"type":332,"tag":360,"props":1046,"children":1048},{"class":362,"line":1047},25,[1049],{"type":332,"tag":360,"props":1050,"children":1051},{"emptyLinePlaceholder":937},[1052],{"type":337,"value":940},{"type":332,"tag":360,"props":1054,"children":1056},{"class":362,"line":1055},26,[1057],{"type":332,"tag":360,"props":1058,"children":1059},{"style":530},[1060],{"type":337,"value":1061},"    // 指针移动\n",{"type":332,"tag":360,"props":1063,"children":1065},{"class":362,"line":1064},27,[1066,1070,1074,1078,1082,1086,1090,1094],{"type":332,"tag":360,"props":1067,"children":1068},{"style":703},[1069],{"type":337,"value":1024},{"type":332,"tag":360,"props":1071,"children":1072},{"style":666},[1073],{"type":337,"value":669},{"type":332,"tag":360,"props":1075,"children":1076},{"style":703},[1077],{"type":337,"value":778},{"type":332,"tag":360,"props":1079,"children":1080},{"style":743},[1081],{"type":337,"value":746},{"type":332,"tag":360,"props":1083,"children":1084},{"style":703},[1085],{"type":337,"value":751},{"type":332,"tag":360,"props":1087,"children":1088},{"style":743},[1089],{"type":337,"value":746},{"type":332,"tag":360,"props":1091,"children":1092},{"style":703},[1093],{"type":337,"value":751},{"type":332,"tag":360,"props":1095,"children":1096},{"style":728},[1097],{"type":337,"value":731},{"type":332,"tag":360,"props":1099,"children":1101},{"class":362,"line":1100},28,[1102],{"type":332,"tag":360,"props":1103,"children":1104},{"style":677},[1105],{"type":337,"value":1106},"  }\n",{"type":332,"tag":360,"props":1108,"children":1110},{"class":362,"line":1109},29,[1111,1116,1120,1124,1128],{"type":332,"tag":360,"props":1112,"children":1113},{"style":797},[1114],{"type":337,"value":1115},"  return",{"type":332,"tag":360,"props":1117,"children":1118},{"style":703},[1119],{"type":337,"value":706},{"type":332,"tag":360,"props":1121,"children":1122},{"style":743},[1123],{"type":337,"value":746},{"type":332,"tag":360,"props":1125,"children":1126},{"style":703},[1127],{"type":337,"value":751},{"type":332,"tag":360,"props":1129,"children":1130},{"style":728},[1131],{"type":337,"value":731},{"type":332,"tag":360,"props":1133,"children":1135},{"class":362,"line":1134},30,[1136,1141],{"type":332,"tag":360,"props":1137,"children":1138},{"style":677},[1139],{"type":337,"value":1140},"}",{"type":332,"tag":360,"props":1142,"children":1143},{"style":728},[1144],{"type":337,"value":731},{"type":332,"tag":1146,"props":1147,"children":1148},"style",{},[1149],{"type":337,"value":1150},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":325,"searchDepth":562,"depth":562,"links":1152},[1153,1154],{"id":458,"depth":372,"text":458},{"id":463,"depth":372,"text":463,"children":1155},[1156],{"id":469,"depth":544,"text":469},"markdown","content:2.code:1.algorithm:3.leetcode:24.swap-nodes-in-pairs.md","content","2.code/1.algorithm/3.leetcode/24.swap-nodes-in-pairs.md","md",[1163,1165],{"_path":97,"title":96,"description":1164},"给你一个链表数组，每个链表都已经按升序排列。",{"_path":103,"title":102,"description":1166},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",1712123929943]