[{"data":1,"prerenderedAt":1204},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/swap-nodes-in-pairs":359,"/code/algorithm/leetcode/swap-nodes-in-pairs-surround":1199},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,269,318],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263,266],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.165 比较版本号","/code/algorithm/leetcode/compare-version-numbers",{"title":198,"_path":199},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":201,"_path":202},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":204,"_path":205},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":207,"_path":208},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":210,"_path":211},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":213,"_path":214},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":216,"_path":217},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":219,"_path":220},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":222,"_path":223},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":225,"_path":226},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":228,"_path":229},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":231,"_path":232},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":234,"_path":235},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":237,"_path":238},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":240,"_path":241},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":243,"_path":244},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":246,"_path":247},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":249,"_path":250},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":252,"_path":253},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":255,"_path":256},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":258,"_path":259},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":261,"_path":262},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":264,"_path":265},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":267,"_path":268},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":270,"_path":271,"children":272},"源码实现","/code/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/code/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/code/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/code/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/code/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/code/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/code/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/code/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/code/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/code/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/code/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/code/source/string",[315],{"title":316,"_path":317},"repeat()","/code/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/code/scene",[322,344,347,350,353,356],{"title":323,"_path":324,"children":325},"Promise","/code/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/code/scene/calcuate-object-bytes",{"title":348,"_path":349},"lodash.get","/code/scene/lodash-get",{"title":351,"_path":352},"记忆化请求函数 - 可缓存请求函数","/code/scene/memorize-request",{"title":354,"_path":355},"sku 算法实现","/code/scene/sku",{"title":357,"_path":358},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":100,"_dir":360,"_draft":361,"_partial":361,"_locale":362,"title":99,"description":363,"url":364,"body":365,"_type":1194,"_id":1195,"_source":1196,"_file":1197,"_extension":1198},"leetcode",false,"","给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。","https://leetcode.cn/problems/swap-nodes-in-pairs",{"type":366,"children":367,"toc":1188},"root",[368,375,386,416,421,444,449,472,477,492,498,503,509,514,553,1182],{"type":369,"tag":370,"props":371,"children":372},"element","p",{},[373],{"type":374,"value":363},"text",{"type":369,"tag":370,"props":376,"children":377},{},[378,380],{"type":374,"value":379},"示例 1：\n",{"type":369,"tag":381,"props":382,"children":385},"img",{"alt":383,"src":384},"swap_ex1","/img/code_leetcode_No.24_swap_ex1.png",[],{"type":369,"tag":387,"props":388,"children":391},"pre",{"className":389,"code":390,"language":374,"meta":362,"style":362},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：head = [1,2,3,4]\n输出：[2,1,4,3]\n",[392],{"type":369,"tag":393,"props":394,"children":395},"code",{"__ignoreMap":362},[396,407],{"type":369,"tag":397,"props":398,"children":401},"span",{"class":399,"line":400},"line",1,[402],{"type":369,"tag":397,"props":403,"children":404},{},[405],{"type":374,"value":406},"输入：head = [1,2,3,4]\n",{"type":369,"tag":397,"props":408,"children":410},{"class":399,"line":409},2,[411],{"type":369,"tag":397,"props":412,"children":413},{},[414],{"type":374,"value":415},"输出：[2,1,4,3]\n",{"type":369,"tag":370,"props":417,"children":418},{},[419],{"type":374,"value":420},"示例 2：",{"type":369,"tag":387,"props":422,"children":424},{"className":389,"code":423,"language":374,"meta":362,"style":362},"输入：head = []\n输出：[]\n",[425],{"type":369,"tag":393,"props":426,"children":427},{"__ignoreMap":362},[428,436],{"type":369,"tag":397,"props":429,"children":430},{"class":399,"line":400},[431],{"type":369,"tag":397,"props":432,"children":433},{},[434],{"type":374,"value":435},"输入：head = []\n",{"type":369,"tag":397,"props":437,"children":438},{"class":399,"line":409},[439],{"type":369,"tag":397,"props":440,"children":441},{},[442],{"type":374,"value":443},"输出：[]\n",{"type":369,"tag":370,"props":445,"children":446},{},[447],{"type":374,"value":448},"示例 3：",{"type":369,"tag":387,"props":450,"children":452},{"className":389,"code":451,"language":374,"meta":362,"style":362},"输入：head = [1]\n输出：[1]\n",[453],{"type":369,"tag":393,"props":454,"children":455},{"__ignoreMap":362},[456,464],{"type":369,"tag":397,"props":457,"children":458},{"class":399,"line":400},[459],{"type":369,"tag":397,"props":460,"children":461},{},[462],{"type":374,"value":463},"输入：head = [1]\n",{"type":369,"tag":397,"props":465,"children":466},{"class":399,"line":409},[467],{"type":369,"tag":397,"props":468,"children":469},{},[470],{"type":374,"value":471},"输出：[1]\n",{"type":369,"tag":370,"props":473,"children":474},{},[475],{"type":374,"value":476},"提示：",{"type":369,"tag":478,"props":479,"children":480},"ul",{},[481,487],{"type":369,"tag":482,"props":483,"children":484},"li",{},[485],{"type":374,"value":486},"链表中节点的数目在范围 [0, 100] 内",{"type":369,"tag":482,"props":488,"children":489},{},[490],{"type":374,"value":491},"0 \u003C= Node.val \u003C= 100",{"type":369,"tag":493,"props":494,"children":496},"h2",{"id":495},"解题思路",[497],{"type":374,"value":495},{"type":369,"tag":493,"props":499,"children":501},{"id":500},"实现",[502],{"type":374,"value":500},{"type":369,"tag":504,"props":505,"children":507},"h3",{"id":506},"双指针",[508],{"type":374,"value":506},{"type":369,"tag":370,"props":510,"children":511},{},[512],{"type":374,"value":513},"设置一个 dummy 节点简化操作，dummy.next 指向 head",{"type":369,"tag":515,"props":516,"children":517},"ol",{},[518,523,528,533,538,543,548],{"type":369,"tag":482,"props":519,"children":520},{},[521],{"type":374,"value":522},"初始化 first 为第一个节点",{"type":369,"tag":482,"props":524,"children":525},{},[526],{"type":374,"value":527},"初始化 second 为第二个节点",{"type":369,"tag":482,"props":529,"children":530},{},[531],{"type":374,"value":532},"初始化 current 为 dummy",{"type":369,"tag":482,"props":534,"children":535},{},[536],{"type":374,"value":537},"first.next = second.next",{"type":369,"tag":482,"props":539,"children":540},{},[541],{"type":374,"value":542},"current.next = second",{"type":369,"tag":482,"props":544,"children":545},{},[546],{"type":374,"value":547},"current 移动 2 格",{"type":369,"tag":482,"props":549,"children":550},{},[551],{"type":374,"value":552},"重复执行",{"type":369,"tag":387,"props":554,"children":558},{"className":555,"code":556,"language":557,"meta":362,"style":362},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar swapPairs = function (head) {\n  const dummy = new ListNode();\n  dummy.next = head;\n  let current = dummy;\n  while (current.next && current.next.next) {\n    // 初始化双指针\n    const first = current.next;\n    const second = current.next.next;\n\n    // 更新双指针和 current 指针\n    first.next = second.next;\n    second.next = first;\n    current.next = second;\n\n    // 指针移动\n    current = current.next.next;\n  }\n  return dummy.next;\n};\n","js",[559],{"type":369,"tag":393,"props":560,"children":561},{"__ignoreMap":362},[562,571,579,588,597,606,615,624,632,659,677,685,729,769,802,828,884,893,927,968,978,987,1024,1053,1082,1090,1099,1135,1144,1169],{"type":369,"tag":397,"props":563,"children":564},{"class":399,"line":400},[565],{"type":369,"tag":397,"props":566,"children":568},{"style":567},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[569],{"type":374,"value":570},"/**\n",{"type":369,"tag":397,"props":572,"children":573},{"class":399,"line":409},[574],{"type":369,"tag":397,"props":575,"children":576},{"style":567},[577],{"type":374,"value":578}," * Definition for singly-linked list.\n",{"type":369,"tag":397,"props":580,"children":582},{"class":399,"line":581},3,[583],{"type":369,"tag":397,"props":584,"children":585},{"style":567},[586],{"type":374,"value":587}," * function ListNode(val, next) {\n",{"type":369,"tag":397,"props":589,"children":591},{"class":399,"line":590},4,[592],{"type":369,"tag":397,"props":593,"children":594},{"style":567},[595],{"type":374,"value":596}," *     this.val = (val===undefined ? 0 : val)\n",{"type":369,"tag":397,"props":598,"children":600},{"class":399,"line":599},5,[601],{"type":369,"tag":397,"props":602,"children":603},{"style":567},[604],{"type":374,"value":605}," *     this.next = (next===undefined ? null : next)\n",{"type":369,"tag":397,"props":607,"children":609},{"class":399,"line":608},6,[610],{"type":369,"tag":397,"props":611,"children":612},{"style":567},[613],{"type":374,"value":614}," * }\n",{"type":369,"tag":397,"props":616,"children":618},{"class":399,"line":617},7,[619],{"type":369,"tag":397,"props":620,"children":621},{"style":567},[622],{"type":374,"value":623}," */\n",{"type":369,"tag":397,"props":625,"children":627},{"class":399,"line":626},8,[628],{"type":369,"tag":397,"props":629,"children":630},{"style":567},[631],{"type":374,"value":570},{"type":369,"tag":397,"props":633,"children":635},{"class":399,"line":634},9,[636,641,647,653],{"type":369,"tag":397,"props":637,"children":638},{"style":567},[639],{"type":374,"value":640}," * ",{"type":369,"tag":397,"props":642,"children":644},{"style":643},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[645],{"type":374,"value":646},"@param",{"type":369,"tag":397,"props":648,"children":650},{"style":649},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[651],{"type":374,"value":652}," {ListNode}",{"type":369,"tag":397,"props":654,"children":656},{"style":655},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[657],{"type":374,"value":658}," head\n",{"type":369,"tag":397,"props":660,"children":662},{"class":399,"line":661},10,[663,667,672],{"type":369,"tag":397,"props":664,"children":665},{"style":567},[666],{"type":374,"value":640},{"type":369,"tag":397,"props":668,"children":669},{"style":643},[670],{"type":374,"value":671},"@return",{"type":369,"tag":397,"props":673,"children":674},{"style":649},[675],{"type":374,"value":676}," {ListNode}\n",{"type":369,"tag":397,"props":678,"children":680},{"class":399,"line":679},11,[681],{"type":369,"tag":397,"props":682,"children":683},{"style":567},[684],{"type":374,"value":623},{"type":369,"tag":397,"props":686,"children":688},{"class":399,"line":687},12,[689,695,701,707,712,718,724],{"type":369,"tag":397,"props":690,"children":692},{"style":691},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[693],{"type":374,"value":694},"var",{"type":369,"tag":397,"props":696,"children":698},{"style":697},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[699],{"type":374,"value":700}," swapPairs",{"type":369,"tag":397,"props":702,"children":704},{"style":703},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[705],{"type":374,"value":706}," =",{"type":369,"tag":397,"props":708,"children":709},{"style":691},[710],{"type":374,"value":711}," function",{"type":369,"tag":397,"props":713,"children":715},{"style":714},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[716],{"type":374,"value":717}," (",{"type":369,"tag":397,"props":719,"children":721},{"style":720},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[722],{"type":374,"value":723},"head",{"type":369,"tag":397,"props":725,"children":726},{"style":714},[727],{"type":374,"value":728},") {\n",{"type":369,"tag":397,"props":730,"children":732},{"class":399,"line":731},13,[733,738,744,748,753,758,763],{"type":369,"tag":397,"props":734,"children":735},{"style":691},[736],{"type":374,"value":737},"  const",{"type":369,"tag":397,"props":739,"children":741},{"style":740},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[742],{"type":374,"value":743}," dummy",{"type":369,"tag":397,"props":745,"children":746},{"style":703},[747],{"type":374,"value":706},{"type":369,"tag":397,"props":749,"children":750},{"style":703},[751],{"type":374,"value":752}," new",{"type":369,"tag":397,"props":754,"children":755},{"style":697},[756],{"type":374,"value":757}," ListNode",{"type":369,"tag":397,"props":759,"children":760},{"style":714},[761],{"type":374,"value":762},"()",{"type":369,"tag":397,"props":764,"children":766},{"style":765},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[767],{"type":374,"value":768},";\n",{"type":369,"tag":397,"props":770,"children":772},{"class":399,"line":771},14,[773,778,784,789,793,798],{"type":369,"tag":397,"props":774,"children":775},{"style":740},[776],{"type":374,"value":777},"  dummy",{"type":369,"tag":397,"props":779,"children":781},{"style":780},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[782],{"type":374,"value":783},".",{"type":369,"tag":397,"props":785,"children":786},{"style":740},[787],{"type":374,"value":788},"next",{"type":369,"tag":397,"props":790,"children":791},{"style":703},[792],{"type":374,"value":706},{"type":369,"tag":397,"props":794,"children":795},{"style":740},[796],{"type":374,"value":797}," head",{"type":369,"tag":397,"props":799,"children":800},{"style":765},[801],{"type":374,"value":768},{"type":369,"tag":397,"props":803,"children":805},{"class":399,"line":804},15,[806,811,816,820,824],{"type":369,"tag":397,"props":807,"children":808},{"style":691},[809],{"type":374,"value":810},"  let",{"type":369,"tag":397,"props":812,"children":813},{"style":740},[814],{"type":374,"value":815}," current",{"type":369,"tag":397,"props":817,"children":818},{"style":703},[819],{"type":374,"value":706},{"type":369,"tag":397,"props":821,"children":822},{"style":740},[823],{"type":374,"value":743},{"type":369,"tag":397,"props":825,"children":826},{"style":765},[827],{"type":374,"value":768},{"type":369,"tag":397,"props":829,"children":831},{"class":399,"line":830},16,[832,838,842,847,851,855,860,864,868,872,876,880],{"type":369,"tag":397,"props":833,"children":835},{"style":834},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[836],{"type":374,"value":837},"  while",{"type":369,"tag":397,"props":839,"children":840},{"style":714},[841],{"type":374,"value":717},{"type":369,"tag":397,"props":843,"children":844},{"style":740},[845],{"type":374,"value":846},"current",{"type":369,"tag":397,"props":848,"children":849},{"style":780},[850],{"type":374,"value":783},{"type":369,"tag":397,"props":852,"children":853},{"style":740},[854],{"type":374,"value":788},{"type":369,"tag":397,"props":856,"children":857},{"style":703},[858],{"type":374,"value":859}," &&",{"type":369,"tag":397,"props":861,"children":862},{"style":740},[863],{"type":374,"value":815},{"type":369,"tag":397,"props":865,"children":866},{"style":780},[867],{"type":374,"value":783},{"type":369,"tag":397,"props":869,"children":870},{"style":740},[871],{"type":374,"value":788},{"type":369,"tag":397,"props":873,"children":874},{"style":780},[875],{"type":374,"value":783},{"type":369,"tag":397,"props":877,"children":878},{"style":740},[879],{"type":374,"value":788},{"type":369,"tag":397,"props":881,"children":882},{"style":714},[883],{"type":374,"value":728},{"type":369,"tag":397,"props":885,"children":887},{"class":399,"line":886},17,[888],{"type":369,"tag":397,"props":889,"children":890},{"style":567},[891],{"type":374,"value":892},"    // 初始化双指针\n",{"type":369,"tag":397,"props":894,"children":896},{"class":399,"line":895},18,[897,902,907,911,915,919,923],{"type":369,"tag":397,"props":898,"children":899},{"style":691},[900],{"type":374,"value":901},"    const",{"type":369,"tag":397,"props":903,"children":904},{"style":740},[905],{"type":374,"value":906}," first",{"type":369,"tag":397,"props":908,"children":909},{"style":703},[910],{"type":374,"value":706},{"type":369,"tag":397,"props":912,"children":913},{"style":740},[914],{"type":374,"value":815},{"type":369,"tag":397,"props":916,"children":917},{"style":780},[918],{"type":374,"value":783},{"type":369,"tag":397,"props":920,"children":921},{"style":740},[922],{"type":374,"value":788},{"type":369,"tag":397,"props":924,"children":925},{"style":765},[926],{"type":374,"value":768},{"type":369,"tag":397,"props":928,"children":930},{"class":399,"line":929},19,[931,935,940,944,948,952,956,960,964],{"type":369,"tag":397,"props":932,"children":933},{"style":691},[934],{"type":374,"value":901},{"type":369,"tag":397,"props":936,"children":937},{"style":740},[938],{"type":374,"value":939}," second",{"type":369,"tag":397,"props":941,"children":942},{"style":703},[943],{"type":374,"value":706},{"type":369,"tag":397,"props":945,"children":946},{"style":740},[947],{"type":374,"value":815},{"type":369,"tag":397,"props":949,"children":950},{"style":780},[951],{"type":374,"value":783},{"type":369,"tag":397,"props":953,"children":954},{"style":740},[955],{"type":374,"value":788},{"type":369,"tag":397,"props":957,"children":958},{"style":780},[959],{"type":374,"value":783},{"type":369,"tag":397,"props":961,"children":962},{"style":740},[963],{"type":374,"value":788},{"type":369,"tag":397,"props":965,"children":966},{"style":765},[967],{"type":374,"value":768},{"type":369,"tag":397,"props":969,"children":971},{"class":399,"line":970},20,[972],{"type":369,"tag":397,"props":973,"children":975},{"emptyLinePlaceholder":974},true,[976],{"type":374,"value":977},"\n",{"type":369,"tag":397,"props":979,"children":981},{"class":399,"line":980},21,[982],{"type":369,"tag":397,"props":983,"children":984},{"style":567},[985],{"type":374,"value":986},"    // 更新双指针和 current 指针\n",{"type":369,"tag":397,"props":988,"children":990},{"class":399,"line":989},22,[991,996,1000,1004,1008,1012,1016,1020],{"type":369,"tag":397,"props":992,"children":993},{"style":740},[994],{"type":374,"value":995},"    first",{"type":369,"tag":397,"props":997,"children":998},{"style":780},[999],{"type":374,"value":783},{"type":369,"tag":397,"props":1001,"children":1002},{"style":740},[1003],{"type":374,"value":788},{"type":369,"tag":397,"props":1005,"children":1006},{"style":703},[1007],{"type":374,"value":706},{"type":369,"tag":397,"props":1009,"children":1010},{"style":740},[1011],{"type":374,"value":939},{"type":369,"tag":397,"props":1013,"children":1014},{"style":780},[1015],{"type":374,"value":783},{"type":369,"tag":397,"props":1017,"children":1018},{"style":740},[1019],{"type":374,"value":788},{"type":369,"tag":397,"props":1021,"children":1022},{"style":765},[1023],{"type":374,"value":768},{"type":369,"tag":397,"props":1025,"children":1027},{"class":399,"line":1026},23,[1028,1033,1037,1041,1045,1049],{"type":369,"tag":397,"props":1029,"children":1030},{"style":740},[1031],{"type":374,"value":1032},"    second",{"type":369,"tag":397,"props":1034,"children":1035},{"style":780},[1036],{"type":374,"value":783},{"type":369,"tag":397,"props":1038,"children":1039},{"style":740},[1040],{"type":374,"value":788},{"type":369,"tag":397,"props":1042,"children":1043},{"style":703},[1044],{"type":374,"value":706},{"type":369,"tag":397,"props":1046,"children":1047},{"style":740},[1048],{"type":374,"value":906},{"type":369,"tag":397,"props":1050,"children":1051},{"style":765},[1052],{"type":374,"value":768},{"type":369,"tag":397,"props":1054,"children":1056},{"class":399,"line":1055},24,[1057,1062,1066,1070,1074,1078],{"type":369,"tag":397,"props":1058,"children":1059},{"style":740},[1060],{"type":374,"value":1061},"    current",{"type":369,"tag":397,"props":1063,"children":1064},{"style":780},[1065],{"type":374,"value":783},{"type":369,"tag":397,"props":1067,"children":1068},{"style":740},[1069],{"type":374,"value":788},{"type":369,"tag":397,"props":1071,"children":1072},{"style":703},[1073],{"type":374,"value":706},{"type":369,"tag":397,"props":1075,"children":1076},{"style":740},[1077],{"type":374,"value":939},{"type":369,"tag":397,"props":1079,"children":1080},{"style":765},[1081],{"type":374,"value":768},{"type":369,"tag":397,"props":1083,"children":1085},{"class":399,"line":1084},25,[1086],{"type":369,"tag":397,"props":1087,"children":1088},{"emptyLinePlaceholder":974},[1089],{"type":374,"value":977},{"type":369,"tag":397,"props":1091,"children":1093},{"class":399,"line":1092},26,[1094],{"type":369,"tag":397,"props":1095,"children":1096},{"style":567},[1097],{"type":374,"value":1098},"    // 指针移动\n",{"type":369,"tag":397,"props":1100,"children":1102},{"class":399,"line":1101},27,[1103,1107,1111,1115,1119,1123,1127,1131],{"type":369,"tag":397,"props":1104,"children":1105},{"style":740},[1106],{"type":374,"value":1061},{"type":369,"tag":397,"props":1108,"children":1109},{"style":703},[1110],{"type":374,"value":706},{"type":369,"tag":397,"props":1112,"children":1113},{"style":740},[1114],{"type":374,"value":815},{"type":369,"tag":397,"props":1116,"children":1117},{"style":780},[1118],{"type":374,"value":783},{"type":369,"tag":397,"props":1120,"children":1121},{"style":740},[1122],{"type":374,"value":788},{"type":369,"tag":397,"props":1124,"children":1125},{"style":780},[1126],{"type":374,"value":783},{"type":369,"tag":397,"props":1128,"children":1129},{"style":740},[1130],{"type":374,"value":788},{"type":369,"tag":397,"props":1132,"children":1133},{"style":765},[1134],{"type":374,"value":768},{"type":369,"tag":397,"props":1136,"children":1138},{"class":399,"line":1137},28,[1139],{"type":369,"tag":397,"props":1140,"children":1141},{"style":714},[1142],{"type":374,"value":1143},"  }\n",{"type":369,"tag":397,"props":1145,"children":1147},{"class":399,"line":1146},29,[1148,1153,1157,1161,1165],{"type":369,"tag":397,"props":1149,"children":1150},{"style":834},[1151],{"type":374,"value":1152},"  return",{"type":369,"tag":397,"props":1154,"children":1155},{"style":740},[1156],{"type":374,"value":743},{"type":369,"tag":397,"props":1158,"children":1159},{"style":780},[1160],{"type":374,"value":783},{"type":369,"tag":397,"props":1162,"children":1163},{"style":740},[1164],{"type":374,"value":788},{"type":369,"tag":397,"props":1166,"children":1167},{"style":765},[1168],{"type":374,"value":768},{"type":369,"tag":397,"props":1170,"children":1172},{"class":399,"line":1171},30,[1173,1178],{"type":369,"tag":397,"props":1174,"children":1175},{"style":714},[1176],{"type":374,"value":1177},"}",{"type":369,"tag":397,"props":1179,"children":1180},{"style":765},[1181],{"type":374,"value":768},{"type":369,"tag":1183,"props":1184,"children":1185},"style",{},[1186],{"type":374,"value":1187},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":362,"searchDepth":599,"depth":599,"links":1189},[1190,1191],{"id":495,"depth":409,"text":495},{"id":500,"depth":409,"text":500,"children":1192},[1193],{"id":506,"depth":581,"text":506},"markdown","content:2.code:1.algorithm:3.leetcode:24.swap-nodes-in-pairs.md","content","2.code/1.algorithm/3.leetcode/24.swap-nodes-in-pairs.md","md",[1200,1202],{"_path":97,"title":96,"description":1201},"给你一个链表数组，每个链表都已经按升序排列。",{"_path":103,"title":102,"description":1203},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",1712748635996]