[{"data":1,"prerenderedAt":1165},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/swap-nodes-in-pairs":320,"/code/algorithm/leetcode/swap-nodes-in-pairs-surround":1160},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,264,313],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,53],{"title":41,"_path":42,"children":43},"剑指 offer","/code/algorithm/sword-ofter",[44,47,50],{"title":45,"_path":46},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":48,"_path":49},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":51,"_path":52},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":54,"_path":55,"children":56},"力扣 leetCode","/code/algorithm/leetcode",[57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261],{"title":58,"_path":59},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":61,"_path":62},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":64,"_path":65},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":67,"_path":68},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":70,"_path":71},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":73,"_path":74},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":76,"_path":77},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":79,"_path":80},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":82,"_path":83},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":85,"_path":86},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":88,"_path":89},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":91,"_path":92},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":94,"_path":95},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":97,"_path":98},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":100,"_path":101},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":103,"_path":104},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":106,"_path":107},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":109,"_path":110},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":112,"_path":113},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":115,"_path":116},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":118,"_path":119},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":121,"_path":122},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":124,"_path":125},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":127,"_path":128},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":130,"_path":131},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":133,"_path":134},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":136,"_path":137},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":139,"_path":140},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":142,"_path":143},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":145,"_path":146},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":148,"_path":149},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":151,"_path":152},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":154,"_path":155},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":157,"_path":158},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":160,"_path":161},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":163,"_path":164},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":166,"_path":167},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":169,"_path":170},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":172,"_path":173},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":175,"_path":176},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":178,"_path":179},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":181,"_path":182},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":184,"_path":185},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":187,"_path":188},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":190,"_path":191},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":193,"_path":194},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":196,"_path":197},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":199,"_path":200},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":202,"_path":203},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":205,"_path":206},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":208,"_path":209},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":211,"_path":212},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":214,"_path":215},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":217,"_path":218},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":220,"_path":221},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":223,"_path":224},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":226,"_path":227},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":229,"_path":230},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":232,"_path":233},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":235,"_path":236},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":238,"_path":239},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":241,"_path":242},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":244,"_path":245},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":247,"_path":248},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":250,"_path":251},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":253,"_path":254},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":256,"_path":257},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":259,"_path":260},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":262,"_path":263},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":265,"_path":266,"children":267},"源码实现","/code/source",[268,293,306],{"title":269,"_path":270,"children":271},"原生 api","/code/source/native-api",[272,275,278,281,284,287,290],{"title":273,"_path":274},"ajax","/code/source/native-api/ajax",{"title":276,"_path":277},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":279,"_path":280},"new 操作符","/code/source/native-api/new",{"title":282,"_path":283},"instanceof 关键字","/code/source/native-api/instanceof",{"title":285,"_path":286},"定时器","/code/source/native-api/timer",{"title":288,"_path":289},"JSON.stringify","/code/source/native-api/json-stringify",{"title":291,"_path":292},"Iterator 迭代器","/code/source/native-api/iterator",{"title":294,"_path":295,"children":296},"数组 Array","/code/source/array",[297,300,303],{"title":298,"_path":299},"数组去重","/code/source/array/remove-duplicate",{"title":301,"_path":302},"数组扁平化","/code/source/array/flat",{"title":304,"_path":305},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":307,"_path":308,"children":309},"字符串 String","/code/source/string",[310],{"title":311,"_path":312},"repeat()","/code/source/string/repeat",{"title":314,"_path":315,"children":316},"业务场景","/code/scene",[317],{"title":318,"_path":319},"顺序打印 url 并支持 retry","/code/scene/promise-url-retry",{"_path":98,"_dir":321,"_draft":322,"_partial":322,"_locale":323,"title":97,"description":324,"url":325,"body":326,"_type":1155,"_id":1156,"_source":1157,"_file":1158,"_extension":1159},"leetcode",false,"","给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。","https://leetcode.cn/problems/swap-nodes-in-pairs",{"type":327,"children":328,"toc":1149},"root",[329,336,347,377,382,405,410,433,438,453,459,464,470,475,514,1143],{"type":330,"tag":331,"props":332,"children":333},"element","p",{},[334],{"type":335,"value":324},"text",{"type":330,"tag":331,"props":337,"children":338},{},[339,341],{"type":335,"value":340},"示例 1：\n",{"type":330,"tag":342,"props":343,"children":346},"img",{"alt":344,"src":345},"swap_ex1","/img/code_leetcode_No.24_swap_ex1.png",[],{"type":330,"tag":348,"props":349,"children":352},"pre",{"className":350,"code":351,"language":335,"meta":323,"style":323},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：head = [1,2,3,4]\n输出：[2,1,4,3]\n",[353],{"type":330,"tag":354,"props":355,"children":356},"code",{"__ignoreMap":323},[357,368],{"type":330,"tag":358,"props":359,"children":362},"span",{"class":360,"line":361},"line",1,[363],{"type":330,"tag":358,"props":364,"children":365},{},[366],{"type":335,"value":367},"输入：head = [1,2,3,4]\n",{"type":330,"tag":358,"props":369,"children":371},{"class":360,"line":370},2,[372],{"type":330,"tag":358,"props":373,"children":374},{},[375],{"type":335,"value":376},"输出：[2,1,4,3]\n",{"type":330,"tag":331,"props":378,"children":379},{},[380],{"type":335,"value":381},"示例 2：",{"type":330,"tag":348,"props":383,"children":385},{"className":350,"code":384,"language":335,"meta":323,"style":323},"输入：head = []\n输出：[]\n",[386],{"type":330,"tag":354,"props":387,"children":388},{"__ignoreMap":323},[389,397],{"type":330,"tag":358,"props":390,"children":391},{"class":360,"line":361},[392],{"type":330,"tag":358,"props":393,"children":394},{},[395],{"type":335,"value":396},"输入：head = []\n",{"type":330,"tag":358,"props":398,"children":399},{"class":360,"line":370},[400],{"type":330,"tag":358,"props":401,"children":402},{},[403],{"type":335,"value":404},"输出：[]\n",{"type":330,"tag":331,"props":406,"children":407},{},[408],{"type":335,"value":409},"示例 3：",{"type":330,"tag":348,"props":411,"children":413},{"className":350,"code":412,"language":335,"meta":323,"style":323},"输入：head = [1]\n输出：[1]\n",[414],{"type":330,"tag":354,"props":415,"children":416},{"__ignoreMap":323},[417,425],{"type":330,"tag":358,"props":418,"children":419},{"class":360,"line":361},[420],{"type":330,"tag":358,"props":421,"children":422},{},[423],{"type":335,"value":424},"输入：head = [1]\n",{"type":330,"tag":358,"props":426,"children":427},{"class":360,"line":370},[428],{"type":330,"tag":358,"props":429,"children":430},{},[431],{"type":335,"value":432},"输出：[1]\n",{"type":330,"tag":331,"props":434,"children":435},{},[436],{"type":335,"value":437},"提示：",{"type":330,"tag":439,"props":440,"children":441},"ul",{},[442,448],{"type":330,"tag":443,"props":444,"children":445},"li",{},[446],{"type":335,"value":447},"链表中节点的数目在范围 [0, 100] 内",{"type":330,"tag":443,"props":449,"children":450},{},[451],{"type":335,"value":452},"0 \u003C= Node.val \u003C= 100",{"type":330,"tag":454,"props":455,"children":457},"h2",{"id":456},"解题思路",[458],{"type":335,"value":456},{"type":330,"tag":454,"props":460,"children":462},{"id":461},"实现",[463],{"type":335,"value":461},{"type":330,"tag":465,"props":466,"children":468},"h3",{"id":467},"双指针",[469],{"type":335,"value":467},{"type":330,"tag":331,"props":471,"children":472},{},[473],{"type":335,"value":474},"设置一个 dummy 节点简化操作，dummy.next 指向 head",{"type":330,"tag":476,"props":477,"children":478},"ol",{},[479,484,489,494,499,504,509],{"type":330,"tag":443,"props":480,"children":481},{},[482],{"type":335,"value":483},"初始化 first 为第一个节点",{"type":330,"tag":443,"props":485,"children":486},{},[487],{"type":335,"value":488},"初始化 second 为第二个节点",{"type":330,"tag":443,"props":490,"children":491},{},[492],{"type":335,"value":493},"初始化 current 为 dummy",{"type":330,"tag":443,"props":495,"children":496},{},[497],{"type":335,"value":498},"first.next = second.next",{"type":330,"tag":443,"props":500,"children":501},{},[502],{"type":335,"value":503},"current.next = second",{"type":330,"tag":443,"props":505,"children":506},{},[507],{"type":335,"value":508},"current 移动 2 格",{"type":330,"tag":443,"props":510,"children":511},{},[512],{"type":335,"value":513},"重复执行",{"type":330,"tag":348,"props":515,"children":519},{"className":516,"code":517,"language":518,"meta":323,"style":323},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar swapPairs = function (head) {\n  const dummy = new ListNode();\n  dummy.next = head;\n  let current = dummy;\n  while (current.next && current.next.next) {\n    // 初始化双指针\n    const first = current.next;\n    const second = current.next.next;\n\n    // 更新双指针和 current 指针\n    first.next = second.next;\n    second.next = first;\n    current.next = second;\n\n    // 指针移动\n    current = current.next.next;\n  }\n  return dummy.next;\n};\n","js",[520],{"type":330,"tag":354,"props":521,"children":522},{"__ignoreMap":323},[523,532,540,549,558,567,576,585,593,620,638,646,690,730,763,789,845,854,888,929,939,948,985,1014,1043,1051,1060,1096,1105,1130],{"type":330,"tag":358,"props":524,"children":525},{"class":360,"line":361},[526],{"type":330,"tag":358,"props":527,"children":529},{"style":528},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[530],{"type":335,"value":531},"/**\n",{"type":330,"tag":358,"props":533,"children":534},{"class":360,"line":370},[535],{"type":330,"tag":358,"props":536,"children":537},{"style":528},[538],{"type":335,"value":539}," * Definition for singly-linked list.\n",{"type":330,"tag":358,"props":541,"children":543},{"class":360,"line":542},3,[544],{"type":330,"tag":358,"props":545,"children":546},{"style":528},[547],{"type":335,"value":548}," * function ListNode(val, next) {\n",{"type":330,"tag":358,"props":550,"children":552},{"class":360,"line":551},4,[553],{"type":330,"tag":358,"props":554,"children":555},{"style":528},[556],{"type":335,"value":557}," *     this.val = (val===undefined ? 0 : val)\n",{"type":330,"tag":358,"props":559,"children":561},{"class":360,"line":560},5,[562],{"type":330,"tag":358,"props":563,"children":564},{"style":528},[565],{"type":335,"value":566}," *     this.next = (next===undefined ? null : next)\n",{"type":330,"tag":358,"props":568,"children":570},{"class":360,"line":569},6,[571],{"type":330,"tag":358,"props":572,"children":573},{"style":528},[574],{"type":335,"value":575}," * }\n",{"type":330,"tag":358,"props":577,"children":579},{"class":360,"line":578},7,[580],{"type":330,"tag":358,"props":581,"children":582},{"style":528},[583],{"type":335,"value":584}," */\n",{"type":330,"tag":358,"props":586,"children":588},{"class":360,"line":587},8,[589],{"type":330,"tag":358,"props":590,"children":591},{"style":528},[592],{"type":335,"value":531},{"type":330,"tag":358,"props":594,"children":596},{"class":360,"line":595},9,[597,602,608,614],{"type":330,"tag":358,"props":598,"children":599},{"style":528},[600],{"type":335,"value":601}," * ",{"type":330,"tag":358,"props":603,"children":605},{"style":604},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[606],{"type":335,"value":607},"@param",{"type":330,"tag":358,"props":609,"children":611},{"style":610},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[612],{"type":335,"value":613}," {ListNode}",{"type":330,"tag":358,"props":615,"children":617},{"style":616},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[618],{"type":335,"value":619}," head\n",{"type":330,"tag":358,"props":621,"children":623},{"class":360,"line":622},10,[624,628,633],{"type":330,"tag":358,"props":625,"children":626},{"style":528},[627],{"type":335,"value":601},{"type":330,"tag":358,"props":629,"children":630},{"style":604},[631],{"type":335,"value":632},"@return",{"type":330,"tag":358,"props":634,"children":635},{"style":610},[636],{"type":335,"value":637}," {ListNode}\n",{"type":330,"tag":358,"props":639,"children":641},{"class":360,"line":640},11,[642],{"type":330,"tag":358,"props":643,"children":644},{"style":528},[645],{"type":335,"value":584},{"type":330,"tag":358,"props":647,"children":649},{"class":360,"line":648},12,[650,656,662,668,673,679,685],{"type":330,"tag":358,"props":651,"children":653},{"style":652},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[654],{"type":335,"value":655},"var",{"type":330,"tag":358,"props":657,"children":659},{"style":658},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[660],{"type":335,"value":661}," swapPairs",{"type":330,"tag":358,"props":663,"children":665},{"style":664},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[666],{"type":335,"value":667}," =",{"type":330,"tag":358,"props":669,"children":670},{"style":652},[671],{"type":335,"value":672}," function",{"type":330,"tag":358,"props":674,"children":676},{"style":675},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[677],{"type":335,"value":678}," (",{"type":330,"tag":358,"props":680,"children":682},{"style":681},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[683],{"type":335,"value":684},"head",{"type":330,"tag":358,"props":686,"children":687},{"style":675},[688],{"type":335,"value":689},") {\n",{"type":330,"tag":358,"props":691,"children":693},{"class":360,"line":692},13,[694,699,705,709,714,719,724],{"type":330,"tag":358,"props":695,"children":696},{"style":652},[697],{"type":335,"value":698},"  const",{"type":330,"tag":358,"props":700,"children":702},{"style":701},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[703],{"type":335,"value":704}," dummy",{"type":330,"tag":358,"props":706,"children":707},{"style":664},[708],{"type":335,"value":667},{"type":330,"tag":358,"props":710,"children":711},{"style":664},[712],{"type":335,"value":713}," new",{"type":330,"tag":358,"props":715,"children":716},{"style":658},[717],{"type":335,"value":718}," ListNode",{"type":330,"tag":358,"props":720,"children":721},{"style":675},[722],{"type":335,"value":723},"()",{"type":330,"tag":358,"props":725,"children":727},{"style":726},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[728],{"type":335,"value":729},";\n",{"type":330,"tag":358,"props":731,"children":733},{"class":360,"line":732},14,[734,739,745,750,754,759],{"type":330,"tag":358,"props":735,"children":736},{"style":701},[737],{"type":335,"value":738},"  dummy",{"type":330,"tag":358,"props":740,"children":742},{"style":741},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[743],{"type":335,"value":744},".",{"type":330,"tag":358,"props":746,"children":747},{"style":701},[748],{"type":335,"value":749},"next",{"type":330,"tag":358,"props":751,"children":752},{"style":664},[753],{"type":335,"value":667},{"type":330,"tag":358,"props":755,"children":756},{"style":701},[757],{"type":335,"value":758}," head",{"type":330,"tag":358,"props":760,"children":761},{"style":726},[762],{"type":335,"value":729},{"type":330,"tag":358,"props":764,"children":766},{"class":360,"line":765},15,[767,772,777,781,785],{"type":330,"tag":358,"props":768,"children":769},{"style":652},[770],{"type":335,"value":771},"  let",{"type":330,"tag":358,"props":773,"children":774},{"style":701},[775],{"type":335,"value":776}," current",{"type":330,"tag":358,"props":778,"children":779},{"style":664},[780],{"type":335,"value":667},{"type":330,"tag":358,"props":782,"children":783},{"style":701},[784],{"type":335,"value":704},{"type":330,"tag":358,"props":786,"children":787},{"style":726},[788],{"type":335,"value":729},{"type":330,"tag":358,"props":790,"children":792},{"class":360,"line":791},16,[793,799,803,808,812,816,821,825,829,833,837,841],{"type":330,"tag":358,"props":794,"children":796},{"style":795},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[797],{"type":335,"value":798},"  while",{"type":330,"tag":358,"props":800,"children":801},{"style":675},[802],{"type":335,"value":678},{"type":330,"tag":358,"props":804,"children":805},{"style":701},[806],{"type":335,"value":807},"current",{"type":330,"tag":358,"props":809,"children":810},{"style":741},[811],{"type":335,"value":744},{"type":330,"tag":358,"props":813,"children":814},{"style":701},[815],{"type":335,"value":749},{"type":330,"tag":358,"props":817,"children":818},{"style":664},[819],{"type":335,"value":820}," &&",{"type":330,"tag":358,"props":822,"children":823},{"style":701},[824],{"type":335,"value":776},{"type":330,"tag":358,"props":826,"children":827},{"style":741},[828],{"type":335,"value":744},{"type":330,"tag":358,"props":830,"children":831},{"style":701},[832],{"type":335,"value":749},{"type":330,"tag":358,"props":834,"children":835},{"style":741},[836],{"type":335,"value":744},{"type":330,"tag":358,"props":838,"children":839},{"style":701},[840],{"type":335,"value":749},{"type":330,"tag":358,"props":842,"children":843},{"style":675},[844],{"type":335,"value":689},{"type":330,"tag":358,"props":846,"children":848},{"class":360,"line":847},17,[849],{"type":330,"tag":358,"props":850,"children":851},{"style":528},[852],{"type":335,"value":853},"    // 初始化双指针\n",{"type":330,"tag":358,"props":855,"children":857},{"class":360,"line":856},18,[858,863,868,872,876,880,884],{"type":330,"tag":358,"props":859,"children":860},{"style":652},[861],{"type":335,"value":862},"    const",{"type":330,"tag":358,"props":864,"children":865},{"style":701},[866],{"type":335,"value":867}," first",{"type":330,"tag":358,"props":869,"children":870},{"style":664},[871],{"type":335,"value":667},{"type":330,"tag":358,"props":873,"children":874},{"style":701},[875],{"type":335,"value":776},{"type":330,"tag":358,"props":877,"children":878},{"style":741},[879],{"type":335,"value":744},{"type":330,"tag":358,"props":881,"children":882},{"style":701},[883],{"type":335,"value":749},{"type":330,"tag":358,"props":885,"children":886},{"style":726},[887],{"type":335,"value":729},{"type":330,"tag":358,"props":889,"children":891},{"class":360,"line":890},19,[892,896,901,905,909,913,917,921,925],{"type":330,"tag":358,"props":893,"children":894},{"style":652},[895],{"type":335,"value":862},{"type":330,"tag":358,"props":897,"children":898},{"style":701},[899],{"type":335,"value":900}," second",{"type":330,"tag":358,"props":902,"children":903},{"style":664},[904],{"type":335,"value":667},{"type":330,"tag":358,"props":906,"children":907},{"style":701},[908],{"type":335,"value":776},{"type":330,"tag":358,"props":910,"children":911},{"style":741},[912],{"type":335,"value":744},{"type":330,"tag":358,"props":914,"children":915},{"style":701},[916],{"type":335,"value":749},{"type":330,"tag":358,"props":918,"children":919},{"style":741},[920],{"type":335,"value":744},{"type":330,"tag":358,"props":922,"children":923},{"style":701},[924],{"type":335,"value":749},{"type":330,"tag":358,"props":926,"children":927},{"style":726},[928],{"type":335,"value":729},{"type":330,"tag":358,"props":930,"children":932},{"class":360,"line":931},20,[933],{"type":330,"tag":358,"props":934,"children":936},{"emptyLinePlaceholder":935},true,[937],{"type":335,"value":938},"\n",{"type":330,"tag":358,"props":940,"children":942},{"class":360,"line":941},21,[943],{"type":330,"tag":358,"props":944,"children":945},{"style":528},[946],{"type":335,"value":947},"    // 更新双指针和 current 指针\n",{"type":330,"tag":358,"props":949,"children":951},{"class":360,"line":950},22,[952,957,961,965,969,973,977,981],{"type":330,"tag":358,"props":953,"children":954},{"style":701},[955],{"type":335,"value":956},"    first",{"type":330,"tag":358,"props":958,"children":959},{"style":741},[960],{"type":335,"value":744},{"type":330,"tag":358,"props":962,"children":963},{"style":701},[964],{"type":335,"value":749},{"type":330,"tag":358,"props":966,"children":967},{"style":664},[968],{"type":335,"value":667},{"type":330,"tag":358,"props":970,"children":971},{"style":701},[972],{"type":335,"value":900},{"type":330,"tag":358,"props":974,"children":975},{"style":741},[976],{"type":335,"value":744},{"type":330,"tag":358,"props":978,"children":979},{"style":701},[980],{"type":335,"value":749},{"type":330,"tag":358,"props":982,"children":983},{"style":726},[984],{"type":335,"value":729},{"type":330,"tag":358,"props":986,"children":988},{"class":360,"line":987},23,[989,994,998,1002,1006,1010],{"type":330,"tag":358,"props":990,"children":991},{"style":701},[992],{"type":335,"value":993},"    second",{"type":330,"tag":358,"props":995,"children":996},{"style":741},[997],{"type":335,"value":744},{"type":330,"tag":358,"props":999,"children":1000},{"style":701},[1001],{"type":335,"value":749},{"type":330,"tag":358,"props":1003,"children":1004},{"style":664},[1005],{"type":335,"value":667},{"type":330,"tag":358,"props":1007,"children":1008},{"style":701},[1009],{"type":335,"value":867},{"type":330,"tag":358,"props":1011,"children":1012},{"style":726},[1013],{"type":335,"value":729},{"type":330,"tag":358,"props":1015,"children":1017},{"class":360,"line":1016},24,[1018,1023,1027,1031,1035,1039],{"type":330,"tag":358,"props":1019,"children":1020},{"style":701},[1021],{"type":335,"value":1022},"    current",{"type":330,"tag":358,"props":1024,"children":1025},{"style":741},[1026],{"type":335,"value":744},{"type":330,"tag":358,"props":1028,"children":1029},{"style":701},[1030],{"type":335,"value":749},{"type":330,"tag":358,"props":1032,"children":1033},{"style":664},[1034],{"type":335,"value":667},{"type":330,"tag":358,"props":1036,"children":1037},{"style":701},[1038],{"type":335,"value":900},{"type":330,"tag":358,"props":1040,"children":1041},{"style":726},[1042],{"type":335,"value":729},{"type":330,"tag":358,"props":1044,"children":1046},{"class":360,"line":1045},25,[1047],{"type":330,"tag":358,"props":1048,"children":1049},{"emptyLinePlaceholder":935},[1050],{"type":335,"value":938},{"type":330,"tag":358,"props":1052,"children":1054},{"class":360,"line":1053},26,[1055],{"type":330,"tag":358,"props":1056,"children":1057},{"style":528},[1058],{"type":335,"value":1059},"    // 指针移动\n",{"type":330,"tag":358,"props":1061,"children":1063},{"class":360,"line":1062},27,[1064,1068,1072,1076,1080,1084,1088,1092],{"type":330,"tag":358,"props":1065,"children":1066},{"style":701},[1067],{"type":335,"value":1022},{"type":330,"tag":358,"props":1069,"children":1070},{"style":664},[1071],{"type":335,"value":667},{"type":330,"tag":358,"props":1073,"children":1074},{"style":701},[1075],{"type":335,"value":776},{"type":330,"tag":358,"props":1077,"children":1078},{"style":741},[1079],{"type":335,"value":744},{"type":330,"tag":358,"props":1081,"children":1082},{"style":701},[1083],{"type":335,"value":749},{"type":330,"tag":358,"props":1085,"children":1086},{"style":741},[1087],{"type":335,"value":744},{"type":330,"tag":358,"props":1089,"children":1090},{"style":701},[1091],{"type":335,"value":749},{"type":330,"tag":358,"props":1093,"children":1094},{"style":726},[1095],{"type":335,"value":729},{"type":330,"tag":358,"props":1097,"children":1099},{"class":360,"line":1098},28,[1100],{"type":330,"tag":358,"props":1101,"children":1102},{"style":675},[1103],{"type":335,"value":1104},"  }\n",{"type":330,"tag":358,"props":1106,"children":1108},{"class":360,"line":1107},29,[1109,1114,1118,1122,1126],{"type":330,"tag":358,"props":1110,"children":1111},{"style":795},[1112],{"type":335,"value":1113},"  return",{"type":330,"tag":358,"props":1115,"children":1116},{"style":701},[1117],{"type":335,"value":704},{"type":330,"tag":358,"props":1119,"children":1120},{"style":741},[1121],{"type":335,"value":744},{"type":330,"tag":358,"props":1123,"children":1124},{"style":701},[1125],{"type":335,"value":749},{"type":330,"tag":358,"props":1127,"children":1128},{"style":726},[1129],{"type":335,"value":729},{"type":330,"tag":358,"props":1131,"children":1133},{"class":360,"line":1132},30,[1134,1139],{"type":330,"tag":358,"props":1135,"children":1136},{"style":675},[1137],{"type":335,"value":1138},"}",{"type":330,"tag":358,"props":1140,"children":1141},{"style":726},[1142],{"type":335,"value":729},{"type":330,"tag":1144,"props":1145,"children":1146},"style",{},[1147],{"type":335,"value":1148},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":323,"searchDepth":560,"depth":560,"links":1150},[1151,1152],{"id":456,"depth":370,"text":456},{"id":461,"depth":370,"text":461,"children":1153},[1154],{"id":467,"depth":542,"text":467},"markdown","content:2.code:1.algorithm:2.leetcode:24.swap-nodes-in-pairs.md","content","2.code/1.algorithm/2.leetcode/24.swap-nodes-in-pairs.md","md",[1161,1163],{"_path":95,"title":94,"description":1162},"给你一个链表数组，每个链表都已经按升序排列。",{"_path":101,"title":100,"description":1164},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",1712112507910]