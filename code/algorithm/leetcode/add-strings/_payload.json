[{"data":1,"prerenderedAt":1303},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/add-strings":359,"/code/algorithm/leetcode/add-strings-surround":1298},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,269,318],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263,266],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.165 比较版本号","/code/algorithm/leetcode/compare-version-numbers",{"title":198,"_path":199},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":201,"_path":202},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":204,"_path":205},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":207,"_path":208},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":210,"_path":211},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":213,"_path":214},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":216,"_path":217},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":219,"_path":220},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":222,"_path":223},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":225,"_path":226},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":228,"_path":229},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":231,"_path":232},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":234,"_path":235},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":237,"_path":238},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":240,"_path":241},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":243,"_path":244},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":246,"_path":247},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":249,"_path":250},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":252,"_path":253},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":255,"_path":256},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":258,"_path":259},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":261,"_path":262},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":264,"_path":265},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":267,"_path":268},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":270,"_path":271,"children":272},"源码实现","/code/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/code/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/code/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/code/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/code/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/code/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/code/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/code/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/code/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/code/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/code/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/code/source/string",[315],{"title":316,"_path":317},"repeat()","/code/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/code/scene",[322,344,347,350,353,356],{"title":323,"_path":324,"children":325},"Promise","/code/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/code/scene/calcuate-object-bytes",{"title":348,"_path":349},"lodash.get","/code/scene/lodash-get",{"title":351,"_path":352},"记忆化请求函数 - 可缓存请求函数","/code/scene/memorize-request",{"title":354,"_path":355},"sku 算法实现","/code/scene/sku",{"title":357,"_path":358},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":235,"_dir":360,"_draft":361,"_partial":361,"_locale":362,"title":234,"description":363,"url":364,"body":365,"_type":1293,"_id":1294,"_source":1295,"_file":1296,"_extension":1297},"leetcode",false,"","给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。","https://leetcode.cn/problems/add-strings",{"type":366,"children":367,"toc":1287},"root",[368,375,380,385,415,420,443,448,471,476,496,502,621,642,647,675,680,686,1281],{"type":369,"tag":370,"props":371,"children":372},"element","p",{},[373],{"type":374,"value":363},"text",{"type":369,"tag":370,"props":376,"children":377},{},[378],{"type":374,"value":379},"你不能使用任何內建的用于处理大整数的库（比如 BigInteger）， 也不能直接将输入的字符串转换为整数形式。",{"type":369,"tag":370,"props":381,"children":382},{},[383],{"type":374,"value":384},"示例 1：",{"type":369,"tag":386,"props":387,"children":390},"pre",{"className":388,"code":389,"language":374,"meta":362,"style":362},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：num1 = \"11\", num2 = \"123\"\n输出：\"134\"\n",[391],{"type":369,"tag":392,"props":393,"children":394},"code",{"__ignoreMap":362},[395,406],{"type":369,"tag":396,"props":397,"children":400},"span",{"class":398,"line":399},"line",1,[401],{"type":369,"tag":396,"props":402,"children":403},{},[404],{"type":374,"value":405},"输入：num1 = \"11\", num2 = \"123\"\n",{"type":369,"tag":396,"props":407,"children":409},{"class":398,"line":408},2,[410],{"type":369,"tag":396,"props":411,"children":412},{},[413],{"type":374,"value":414},"输出：\"134\"\n",{"type":369,"tag":370,"props":416,"children":417},{},[418],{"type":374,"value":419},"示例 2：",{"type":369,"tag":386,"props":421,"children":423},{"className":388,"code":422,"language":374,"meta":362,"style":362},"输入：num1 = \"456\", num2 = \"77\"\n输出：\"533\"\n",[424],{"type":369,"tag":392,"props":425,"children":426},{"__ignoreMap":362},[427,435],{"type":369,"tag":396,"props":428,"children":429},{"class":398,"line":399},[430],{"type":369,"tag":396,"props":431,"children":432},{},[433],{"type":374,"value":434},"输入：num1 = \"456\", num2 = \"77\"\n",{"type":369,"tag":396,"props":436,"children":437},{"class":398,"line":408},[438],{"type":369,"tag":396,"props":439,"children":440},{},[441],{"type":374,"value":442},"输出：\"533\"\n",{"type":369,"tag":370,"props":444,"children":445},{},[446],{"type":374,"value":447},"示例 3：",{"type":369,"tag":386,"props":449,"children":451},{"className":388,"code":450,"language":374,"meta":362,"style":362},"输入：num1 = \"0\", num2 = \"0\"\n输出：\"0\"\n",[452],{"type":369,"tag":392,"props":453,"children":454},{"__ignoreMap":362},[455,463],{"type":369,"tag":396,"props":456,"children":457},{"class":398,"line":399},[458],{"type":369,"tag":396,"props":459,"children":460},{},[461],{"type":374,"value":462},"输入：num1 = \"0\", num2 = \"0\"\n",{"type":369,"tag":396,"props":464,"children":465},{"class":398,"line":408},[466],{"type":369,"tag":396,"props":467,"children":468},{},[469],{"type":374,"value":470},"输出：\"0\"\n",{"type":369,"tag":370,"props":472,"children":473},{},[474],{"type":374,"value":475},"提示：",{"type":369,"tag":477,"props":478,"children":479},"ul",{},[480,486,491],{"type":369,"tag":481,"props":482,"children":483},"li",{},[484],{"type":374,"value":485},"1 \u003C= num1.length, num2.length \u003C= 10^4",{"type":369,"tag":481,"props":487,"children":488},{},[489],{"type":374,"value":490},"num1 和 num2 都只包含数字 0-9",{"type":369,"tag":481,"props":492,"children":493},{},[494],{"type":374,"value":495},"num1 和 num2 都不包含任何前导零",{"type":369,"tag":497,"props":498,"children":500},"h2",{"id":499},"解题思路",[501],{"type":374,"value":499},{"type":369,"tag":386,"props":503,"children":507},{"className":504,"code":505,"language":506,"meta":362,"style":362},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","Number.MAX_VALUE; // 1.7976931348623157e+308\nNumber.MAX_SAFE_INTEGER; // 9007199254740991\nNumber.MIN_VALUE; // 5e-324\nNumber.MIN_SAFE_INTEGER; // -9007199254740991\n","js",[508],{"type":369,"tag":392,"props":509,"children":510},{"__ignoreMap":362},[511,544,569,595],{"type":369,"tag":396,"props":512,"children":513},{"class":398,"line":399},[514,520,526,532,538],{"type":369,"tag":396,"props":515,"children":517},{"style":516},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[518],{"type":374,"value":519},"Number",{"type":369,"tag":396,"props":521,"children":523},{"style":522},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[524],{"type":374,"value":525},".",{"type":369,"tag":396,"props":527,"children":529},{"style":528},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[530],{"type":374,"value":531},"MAX_VALUE",{"type":369,"tag":396,"props":533,"children":535},{"style":534},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[536],{"type":374,"value":537},";",{"type":369,"tag":396,"props":539,"children":541},{"style":540},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[542],{"type":374,"value":543}," // 1.7976931348623157e+308\n",{"type":369,"tag":396,"props":545,"children":546},{"class":398,"line":408},[547,551,555,560,564],{"type":369,"tag":396,"props":548,"children":549},{"style":516},[550],{"type":374,"value":519},{"type":369,"tag":396,"props":552,"children":553},{"style":522},[554],{"type":374,"value":525},{"type":369,"tag":396,"props":556,"children":557},{"style":528},[558],{"type":374,"value":559},"MAX_SAFE_INTEGER",{"type":369,"tag":396,"props":561,"children":562},{"style":534},[563],{"type":374,"value":537},{"type":369,"tag":396,"props":565,"children":566},{"style":540},[567],{"type":374,"value":568}," // 9007199254740991\n",{"type":369,"tag":396,"props":570,"children":572},{"class":398,"line":571},3,[573,577,581,586,590],{"type":369,"tag":396,"props":574,"children":575},{"style":516},[576],{"type":374,"value":519},{"type":369,"tag":396,"props":578,"children":579},{"style":522},[580],{"type":374,"value":525},{"type":369,"tag":396,"props":582,"children":583},{"style":528},[584],{"type":374,"value":585},"MIN_VALUE",{"type":369,"tag":396,"props":587,"children":588},{"style":534},[589],{"type":374,"value":537},{"type":369,"tag":396,"props":591,"children":592},{"style":540},[593],{"type":374,"value":594}," // 5e-324\n",{"type":369,"tag":396,"props":596,"children":598},{"class":398,"line":597},4,[599,603,607,612,616],{"type":369,"tag":396,"props":600,"children":601},{"style":516},[602],{"type":374,"value":519},{"type":369,"tag":396,"props":604,"children":605},{"style":522},[606],{"type":374,"value":525},{"type":369,"tag":396,"props":608,"children":609},{"style":528},[610],{"type":374,"value":611},"MIN_SAFE_INTEGER",{"type":369,"tag":396,"props":613,"children":614},{"style":534},[615],{"type":374,"value":537},{"type":369,"tag":396,"props":617,"children":618},{"style":540},[619],{"type":374,"value":620}," // -9007199254740991\n",{"type":369,"tag":370,"props":622,"children":623},{},[624,626,632,634,640],{"type":374,"value":625},"如果想要对一个超大的整数 ",{"type":369,"tag":392,"props":627,"children":629},{"className":628},[],[630],{"type":374,"value":631},"> Number.MAX_SAFE_INTEGER",{"type":374,"value":633}," 进行加法运算，但是又想要输出为一般形式，那么使用 + 是无法做到的，因为一旦数字超过 ",{"type":369,"tag":392,"props":635,"children":637},{"className":636},[],[638],{"type":374,"value":639},"Number.MAX_SAFE_INTEGER",{"type":374,"value":641}," 就会被转换为科学技术法，并且数字精度相比之前会有误差。",{"type":369,"tag":370,"props":643,"children":644},{},[645],{"type":374,"value":646},"使用算法实现大数相加：",{"type":369,"tag":477,"props":648,"children":649},{},[650,655,660,665,670],{"type":369,"tag":481,"props":651,"children":652},{},[653],{"type":374,"value":654},"首先，利用字符串的方式来保存大数，这样数字在数学表示上就不会发生变化；",{"type":369,"tag":481,"props":656,"children":657},{},[658],{"type":374,"value":659},"第二步，初始化 res、temp 来保存中间的计算结果，并将两个字符串转化为数组，方便进行每一位的加法运算；",{"type":369,"tag":481,"props":661,"children":662},{},[663],{"type":374,"value":664},"第三步，将两个数组的对应\"位\"进行相加，两个数相加的结果可能大于 10，所以可能要考虑\"进位\"，此时需要对 10 进行取余操作，将结果保存在当前位；",{"type":369,"tag":481,"props":666,"children":667},{},[668],{"type":374,"value":669},"第四步，判断当前位是否大于 9，即判断是否会进位。如果是则将 temp 赋值为 true，因为在加法运算中，true 自动隐式转换为 1，方便下一次相加；",{"type":369,"tag":481,"props":671,"children":672},{},[673],{"type":374,"value":674},"重复以上操作，直到计算出结果；",{"type":369,"tag":497,"props":676,"children":678},{"id":677},"实现",[679],{"type":374,"value":677},{"type":369,"tag":681,"props":682,"children":684},"h3",{"id":683},"大数相加",[685],{"type":374,"value":683},{"type":369,"tag":386,"props":687,"children":689},{"className":504,"code":688,"language":506,"meta":362,"style":362},"/**\n * @param {string} num1\n * @param {string} num2\n * @return {string}\n */\nvar addStrings = function (num1, num2) {\n  let n1 = num1.toString().split(\"\");\n  let n2 = num2.toString().split(\"\");\n  let res = \"\";\n  let temp = 0;\n  while (n1.length || n2.length || temp) {\n    temp += ~~n1.pop() + ~~n2.pop();\n    res += temp % 10;\n    temp = temp > 9;\n  }\n  return res.split(\"\").reverse().join(\"\");\n};\n",[690],{"type":369,"tag":392,"props":691,"children":692},{"__ignoreMap":362},[693,701,727,747,764,773,826,893,950,976,1003,1060,1127,1158,1188,1197,1268],{"type":369,"tag":396,"props":694,"children":695},{"class":398,"line":399},[696],{"type":369,"tag":396,"props":697,"children":698},{"style":540},[699],{"type":374,"value":700},"/**\n",{"type":369,"tag":396,"props":702,"children":703},{"class":398,"line":408},[704,709,715,721],{"type":369,"tag":396,"props":705,"children":706},{"style":540},[707],{"type":374,"value":708}," * ",{"type":369,"tag":396,"props":710,"children":712},{"style":711},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[713],{"type":374,"value":714},"@param",{"type":369,"tag":396,"props":716,"children":718},{"style":717},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[719],{"type":374,"value":720}," {string}",{"type":369,"tag":396,"props":722,"children":724},{"style":723},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[725],{"type":374,"value":726}," num1\n",{"type":369,"tag":396,"props":728,"children":729},{"class":398,"line":571},[730,734,738,742],{"type":369,"tag":396,"props":731,"children":732},{"style":540},[733],{"type":374,"value":708},{"type":369,"tag":396,"props":735,"children":736},{"style":711},[737],{"type":374,"value":714},{"type":369,"tag":396,"props":739,"children":740},{"style":717},[741],{"type":374,"value":720},{"type":369,"tag":396,"props":743,"children":744},{"style":723},[745],{"type":374,"value":746}," num2\n",{"type":369,"tag":396,"props":748,"children":749},{"class":398,"line":597},[750,754,759],{"type":369,"tag":396,"props":751,"children":752},{"style":540},[753],{"type":374,"value":708},{"type":369,"tag":396,"props":755,"children":756},{"style":711},[757],{"type":374,"value":758},"@return",{"type":369,"tag":396,"props":760,"children":761},{"style":717},[762],{"type":374,"value":763}," {string}\n",{"type":369,"tag":396,"props":765,"children":767},{"class":398,"line":766},5,[768],{"type":369,"tag":396,"props":769,"children":770},{"style":540},[771],{"type":374,"value":772}," */\n",{"type":369,"tag":396,"props":774,"children":776},{"class":398,"line":775},6,[777,783,789,795,800,805,811,816,821],{"type":369,"tag":396,"props":778,"children":780},{"style":779},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[781],{"type":374,"value":782},"var",{"type":369,"tag":396,"props":784,"children":786},{"style":785},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[787],{"type":374,"value":788}," addStrings",{"type":369,"tag":396,"props":790,"children":792},{"style":791},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[793],{"type":374,"value":794}," =",{"type":369,"tag":396,"props":796,"children":797},{"style":779},[798],{"type":374,"value":799}," function",{"type":369,"tag":396,"props":801,"children":802},{"style":528},[803],{"type":374,"value":804}," (",{"type":369,"tag":396,"props":806,"children":808},{"style":807},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[809],{"type":374,"value":810},"num1",{"type":369,"tag":396,"props":812,"children":813},{"style":534},[814],{"type":374,"value":815},",",{"type":369,"tag":396,"props":817,"children":818},{"style":807},[819],{"type":374,"value":820}," num2",{"type":369,"tag":396,"props":822,"children":823},{"style":528},[824],{"type":374,"value":825},") {\n",{"type":369,"tag":396,"props":827,"children":829},{"class":398,"line":828},7,[830,835,840,844,849,853,858,863,867,872,877,883,888],{"type":369,"tag":396,"props":831,"children":832},{"style":779},[833],{"type":374,"value":834},"  let",{"type":369,"tag":396,"props":836,"children":837},{"style":516},[838],{"type":374,"value":839}," n1",{"type":369,"tag":396,"props":841,"children":842},{"style":791},[843],{"type":374,"value":794},{"type":369,"tag":396,"props":845,"children":846},{"style":516},[847],{"type":374,"value":848}," num1",{"type":369,"tag":396,"props":850,"children":851},{"style":522},[852],{"type":374,"value":525},{"type":369,"tag":396,"props":854,"children":855},{"style":785},[856],{"type":374,"value":857},"toString",{"type":369,"tag":396,"props":859,"children":860},{"style":528},[861],{"type":374,"value":862},"()",{"type":369,"tag":396,"props":864,"children":865},{"style":522},[866],{"type":374,"value":525},{"type":369,"tag":396,"props":868,"children":869},{"style":785},[870],{"type":374,"value":871},"split",{"type":369,"tag":396,"props":873,"children":874},{"style":528},[875],{"type":374,"value":876},"(",{"type":369,"tag":396,"props":878,"children":880},{"style":879},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[881],{"type":374,"value":882},"\"\"",{"type":369,"tag":396,"props":884,"children":885},{"style":528},[886],{"type":374,"value":887},")",{"type":369,"tag":396,"props":889,"children":890},{"style":534},[891],{"type":374,"value":892},";\n",{"type":369,"tag":396,"props":894,"children":896},{"class":398,"line":895},8,[897,901,906,910,914,918,922,926,930,934,938,942,946],{"type":369,"tag":396,"props":898,"children":899},{"style":779},[900],{"type":374,"value":834},{"type":369,"tag":396,"props":902,"children":903},{"style":516},[904],{"type":374,"value":905}," n2",{"type":369,"tag":396,"props":907,"children":908},{"style":791},[909],{"type":374,"value":794},{"type":369,"tag":396,"props":911,"children":912},{"style":516},[913],{"type":374,"value":820},{"type":369,"tag":396,"props":915,"children":916},{"style":522},[917],{"type":374,"value":525},{"type":369,"tag":396,"props":919,"children":920},{"style":785},[921],{"type":374,"value":857},{"type":369,"tag":396,"props":923,"children":924},{"style":528},[925],{"type":374,"value":862},{"type":369,"tag":396,"props":927,"children":928},{"style":522},[929],{"type":374,"value":525},{"type":369,"tag":396,"props":931,"children":932},{"style":785},[933],{"type":374,"value":871},{"type":369,"tag":396,"props":935,"children":936},{"style":528},[937],{"type":374,"value":876},{"type":369,"tag":396,"props":939,"children":940},{"style":879},[941],{"type":374,"value":882},{"type":369,"tag":396,"props":943,"children":944},{"style":528},[945],{"type":374,"value":887},{"type":369,"tag":396,"props":947,"children":948},{"style":534},[949],{"type":374,"value":892},{"type":369,"tag":396,"props":951,"children":953},{"class":398,"line":952},9,[954,958,963,967,972],{"type":369,"tag":396,"props":955,"children":956},{"style":779},[957],{"type":374,"value":834},{"type":369,"tag":396,"props":959,"children":960},{"style":516},[961],{"type":374,"value":962}," res",{"type":369,"tag":396,"props":964,"children":965},{"style":791},[966],{"type":374,"value":794},{"type":369,"tag":396,"props":968,"children":969},{"style":879},[970],{"type":374,"value":971}," \"\"",{"type":369,"tag":396,"props":973,"children":974},{"style":534},[975],{"type":374,"value":892},{"type":369,"tag":396,"props":977,"children":979},{"class":398,"line":978},10,[980,984,989,993,999],{"type":369,"tag":396,"props":981,"children":982},{"style":779},[983],{"type":374,"value":834},{"type":369,"tag":396,"props":985,"children":986},{"style":516},[987],{"type":374,"value":988}," temp",{"type":369,"tag":396,"props":990,"children":991},{"style":791},[992],{"type":374,"value":794},{"type":369,"tag":396,"props":994,"children":996},{"style":995},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[997],{"type":374,"value":998}," 0",{"type":369,"tag":396,"props":1000,"children":1001},{"style":534},[1002],{"type":374,"value":892},{"type":369,"tag":396,"props":1004,"children":1006},{"class":398,"line":1005},11,[1007,1013,1017,1022,1026,1031,1036,1040,1044,1048,1052,1056],{"type":369,"tag":396,"props":1008,"children":1010},{"style":1009},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[1011],{"type":374,"value":1012},"  while",{"type":369,"tag":396,"props":1014,"children":1015},{"style":528},[1016],{"type":374,"value":804},{"type":369,"tag":396,"props":1018,"children":1019},{"style":516},[1020],{"type":374,"value":1021},"n1",{"type":369,"tag":396,"props":1023,"children":1024},{"style":522},[1025],{"type":374,"value":525},{"type":369,"tag":396,"props":1027,"children":1028},{"style":528},[1029],{"type":374,"value":1030},"length ",{"type":369,"tag":396,"props":1032,"children":1033},{"style":791},[1034],{"type":374,"value":1035},"||",{"type":369,"tag":396,"props":1037,"children":1038},{"style":516},[1039],{"type":374,"value":905},{"type":369,"tag":396,"props":1041,"children":1042},{"style":522},[1043],{"type":374,"value":525},{"type":369,"tag":396,"props":1045,"children":1046},{"style":528},[1047],{"type":374,"value":1030},{"type":369,"tag":396,"props":1049,"children":1050},{"style":791},[1051],{"type":374,"value":1035},{"type":369,"tag":396,"props":1053,"children":1054},{"style":516},[1055],{"type":374,"value":988},{"type":369,"tag":396,"props":1057,"children":1058},{"style":528},[1059],{"type":374,"value":825},{"type":369,"tag":396,"props":1061,"children":1063},{"class":398,"line":1062},12,[1064,1069,1074,1079,1083,1087,1092,1097,1102,1106,1111,1115,1119,1123],{"type":369,"tag":396,"props":1065,"children":1066},{"style":516},[1067],{"type":374,"value":1068},"    temp",{"type":369,"tag":396,"props":1070,"children":1071},{"style":791},[1072],{"type":374,"value":1073}," +=",{"type":369,"tag":396,"props":1075,"children":1076},{"style":791},[1077],{"type":374,"value":1078}," ~~",{"type":369,"tag":396,"props":1080,"children":1081},{"style":516},[1082],{"type":374,"value":1021},{"type":369,"tag":396,"props":1084,"children":1085},{"style":522},[1086],{"type":374,"value":525},{"type":369,"tag":396,"props":1088,"children":1089},{"style":785},[1090],{"type":374,"value":1091},"pop",{"type":369,"tag":396,"props":1093,"children":1094},{"style":528},[1095],{"type":374,"value":1096},"() ",{"type":369,"tag":396,"props":1098,"children":1099},{"style":791},[1100],{"type":374,"value":1101},"+",{"type":369,"tag":396,"props":1103,"children":1104},{"style":791},[1105],{"type":374,"value":1078},{"type":369,"tag":396,"props":1107,"children":1108},{"style":516},[1109],{"type":374,"value":1110},"n2",{"type":369,"tag":396,"props":1112,"children":1113},{"style":522},[1114],{"type":374,"value":525},{"type":369,"tag":396,"props":1116,"children":1117},{"style":785},[1118],{"type":374,"value":1091},{"type":369,"tag":396,"props":1120,"children":1121},{"style":528},[1122],{"type":374,"value":862},{"type":369,"tag":396,"props":1124,"children":1125},{"style":534},[1126],{"type":374,"value":892},{"type":369,"tag":396,"props":1128,"children":1130},{"class":398,"line":1129},13,[1131,1136,1140,1144,1149,1154],{"type":369,"tag":396,"props":1132,"children":1133},{"style":516},[1134],{"type":374,"value":1135},"    res",{"type":369,"tag":396,"props":1137,"children":1138},{"style":791},[1139],{"type":374,"value":1073},{"type":369,"tag":396,"props":1141,"children":1142},{"style":516},[1143],{"type":374,"value":988},{"type":369,"tag":396,"props":1145,"children":1146},{"style":791},[1147],{"type":374,"value":1148}," %",{"type":369,"tag":396,"props":1150,"children":1151},{"style":995},[1152],{"type":374,"value":1153}," 10",{"type":369,"tag":396,"props":1155,"children":1156},{"style":534},[1157],{"type":374,"value":892},{"type":369,"tag":396,"props":1159,"children":1161},{"class":398,"line":1160},14,[1162,1166,1170,1174,1179,1184],{"type":369,"tag":396,"props":1163,"children":1164},{"style":516},[1165],{"type":374,"value":1068},{"type":369,"tag":396,"props":1167,"children":1168},{"style":791},[1169],{"type":374,"value":794},{"type":369,"tag":396,"props":1171,"children":1172},{"style":516},[1173],{"type":374,"value":988},{"type":369,"tag":396,"props":1175,"children":1176},{"style":791},[1177],{"type":374,"value":1178}," >",{"type":369,"tag":396,"props":1180,"children":1181},{"style":995},[1182],{"type":374,"value":1183}," 9",{"type":369,"tag":396,"props":1185,"children":1186},{"style":534},[1187],{"type":374,"value":892},{"type":369,"tag":396,"props":1189,"children":1191},{"class":398,"line":1190},15,[1192],{"type":369,"tag":396,"props":1193,"children":1194},{"style":528},[1195],{"type":374,"value":1196},"  }\n",{"type":369,"tag":396,"props":1198,"children":1200},{"class":398,"line":1199},16,[1201,1206,1210,1214,1218,1222,1226,1230,1234,1239,1243,1247,1252,1256,1260,1264],{"type":369,"tag":396,"props":1202,"children":1203},{"style":1009},[1204],{"type":374,"value":1205},"  return",{"type":369,"tag":396,"props":1207,"children":1208},{"style":516},[1209],{"type":374,"value":962},{"type":369,"tag":396,"props":1211,"children":1212},{"style":522},[1213],{"type":374,"value":525},{"type":369,"tag":396,"props":1215,"children":1216},{"style":785},[1217],{"type":374,"value":871},{"type":369,"tag":396,"props":1219,"children":1220},{"style":528},[1221],{"type":374,"value":876},{"type":369,"tag":396,"props":1223,"children":1224},{"style":879},[1225],{"type":374,"value":882},{"type":369,"tag":396,"props":1227,"children":1228},{"style":528},[1229],{"type":374,"value":887},{"type":369,"tag":396,"props":1231,"children":1232},{"style":522},[1233],{"type":374,"value":525},{"type":369,"tag":396,"props":1235,"children":1236},{"style":785},[1237],{"type":374,"value":1238},"reverse",{"type":369,"tag":396,"props":1240,"children":1241},{"style":528},[1242],{"type":374,"value":862},{"type":369,"tag":396,"props":1244,"children":1245},{"style":522},[1246],{"type":374,"value":525},{"type":369,"tag":396,"props":1248,"children":1249},{"style":785},[1250],{"type":374,"value":1251},"join",{"type":369,"tag":396,"props":1253,"children":1254},{"style":528},[1255],{"type":374,"value":876},{"type":369,"tag":396,"props":1257,"children":1258},{"style":879},[1259],{"type":374,"value":882},{"type":369,"tag":396,"props":1261,"children":1262},{"style":528},[1263],{"type":374,"value":887},{"type":369,"tag":396,"props":1265,"children":1266},{"style":534},[1267],{"type":374,"value":892},{"type":369,"tag":396,"props":1269,"children":1271},{"class":398,"line":1270},17,[1272,1277],{"type":369,"tag":396,"props":1273,"children":1274},{"style":528},[1275],{"type":374,"value":1276},"}",{"type":369,"tag":396,"props":1278,"children":1279},{"style":534},[1280],{"type":374,"value":892},{"type":369,"tag":1282,"props":1283,"children":1284},"style",{},[1285],{"type":374,"value":1286},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":362,"searchDepth":766,"depth":766,"links":1288},[1289,1290],{"id":499,"depth":408,"text":499},{"id":677,"depth":408,"text":677,"children":1291},[1292],{"id":683,"depth":571,"text":683},"markdown","content:2.code:1.algorithm:3.leetcode:415.add-strings.md","content","2.code/1.algorithm/3.leetcode/415.add-strings.md","md",[1299,1301],{"_path":232,"title":231,"description":1300},"给你一个整数数组 nums ，设计算法来打乱一个没有重复元素的数组。打乱后，数组的所有排列应该是 等可能 的。",{"_path":238,"title":237,"description":1302},"给你一个字符数组 chars ，请使用下述算法压缩：",1712748640760]