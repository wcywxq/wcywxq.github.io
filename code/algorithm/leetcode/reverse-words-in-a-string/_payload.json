[{"data":1,"prerenderedAt":1362},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/reverse-words-in-a-string":322,"/code/algorithm/leetcode/reverse-words-in-a-string-surround":1357},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319],{"title":320,"_path":321},"顺序打印 url 并支持 retry","/code/scene/promise-url-retry",{"_path":181,"_dir":323,"_draft":324,"_partial":324,"_locale":325,"title":180,"description":326,"url":327,"body":328,"_type":1352,"_id":1353,"_source":1354,"_file":1355,"_extension":1356},"leetcode",false,"","给你一个字符串 s ，请你反转字符串中 单词 的顺序。","https://leetcode.cn/problems/reverse-words-in-a-string",{"type":329,"children":330,"toc":1345},"root",[331,338,343,348,353,358,388,393,425,430,461,466,486,491,497,502,508,741,746,1339],{"type":332,"tag":333,"props":334,"children":335},"element","p",{},[336],{"type":337,"value":326},"text",{"type":332,"tag":333,"props":339,"children":340},{},[341],{"type":337,"value":342},"单词 是由非空格字符组成的字符串。s 中使用至少一个空格将字符串中的 单词 分隔开。",{"type":332,"tag":333,"props":344,"children":345},{},[346],{"type":337,"value":347},"返回 单词 顺序颠倒且 单词 之间用单个空格连接的结果字符串。",{"type":332,"tag":333,"props":349,"children":350},{},[351],{"type":337,"value":352},"注意：输入字符串 s 中可能会存在前导空格、尾随空格或者单词间的多个空格。返回的结果字符串中，单词间应当仅用单个空格分隔，且不包含任何额外的空格。",{"type":332,"tag":333,"props":354,"children":355},{},[356],{"type":337,"value":357},"示例 1：",{"type":332,"tag":359,"props":360,"children":363},"pre",{"className":361,"code":362,"language":337,"meta":325,"style":325},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：s = \"the sky is blue\"\n输出：\"blue is sky the\"\n",[364],{"type":332,"tag":365,"props":366,"children":367},"code",{"__ignoreMap":325},[368,379],{"type":332,"tag":369,"props":370,"children":373},"span",{"class":371,"line":372},"line",1,[374],{"type":332,"tag":369,"props":375,"children":376},{},[377],{"type":337,"value":378},"输入：s = \"the sky is blue\"\n",{"type":332,"tag":369,"props":380,"children":382},{"class":371,"line":381},2,[383],{"type":332,"tag":369,"props":384,"children":385},{},[386],{"type":337,"value":387},"输出：\"blue is sky the\"\n",{"type":332,"tag":333,"props":389,"children":390},{},[391],{"type":337,"value":392},"示例 2：",{"type":332,"tag":359,"props":394,"children":396},{"className":361,"code":395,"language":337,"meta":325,"style":325},"输入：s = \" hello world \"\n输出：\"world hello\"\n解释：反转后的字符串中不能存在前导空格和尾随空格。\n",[397],{"type":332,"tag":365,"props":398,"children":399},{"__ignoreMap":325},[400,408,416],{"type":332,"tag":369,"props":401,"children":402},{"class":371,"line":372},[403],{"type":332,"tag":369,"props":404,"children":405},{},[406],{"type":337,"value":407},"输入：s = \" hello world \"\n",{"type":332,"tag":369,"props":409,"children":410},{"class":371,"line":381},[411],{"type":332,"tag":369,"props":412,"children":413},{},[414],{"type":337,"value":415},"输出：\"world hello\"\n",{"type":332,"tag":369,"props":417,"children":419},{"class":371,"line":418},3,[420],{"type":332,"tag":369,"props":421,"children":422},{},[423],{"type":337,"value":424},"解释：反转后的字符串中不能存在前导空格和尾随空格。\n",{"type":332,"tag":333,"props":426,"children":427},{},[428],{"type":337,"value":429},"示例 3：",{"type":332,"tag":359,"props":431,"children":433},{"className":361,"code":432,"language":337,"meta":325,"style":325},"输入：s = \"a good example\"\n输出：\"example good a\"\n解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",[434],{"type":332,"tag":365,"props":435,"children":436},{"__ignoreMap":325},[437,445,453],{"type":332,"tag":369,"props":438,"children":439},{"class":371,"line":372},[440],{"type":332,"tag":369,"props":441,"children":442},{},[443],{"type":337,"value":444},"输入：s = \"a good example\"\n",{"type":332,"tag":369,"props":446,"children":447},{"class":371,"line":381},[448],{"type":332,"tag":369,"props":449,"children":450},{},[451],{"type":337,"value":452},"输出：\"example good a\"\n",{"type":332,"tag":369,"props":454,"children":455},{"class":371,"line":418},[456],{"type":332,"tag":369,"props":457,"children":458},{},[459],{"type":337,"value":460},"解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",{"type":332,"tag":333,"props":462,"children":463},{},[464],{"type":337,"value":465},"提示：",{"type":332,"tag":467,"props":468,"children":469},"ul",{},[470,476,481],{"type":332,"tag":471,"props":472,"children":473},"li",{},[474],{"type":337,"value":475},"1 \u003C= s.length \u003C= 10^4",{"type":332,"tag":471,"props":477,"children":478},{},[479],{"type":337,"value":480},"s 包含英文大小写字母、数字和空格 ' '",{"type":332,"tag":471,"props":482,"children":483},{},[484],{"type":337,"value":485},"s 中 至少存在一个 单词",{"type":332,"tag":333,"props":487,"children":488},{},[489],{"type":337,"value":490},"进阶：如果字符串在你使用的编程语言中是一种可变数据类型，请尝试使用 O(1) 额外空间复杂度的 原地 解法。",{"type":332,"tag":492,"props":493,"children":495},"h2",{"id":494},"解题思路",[496],{"type":337,"value":494},{"type":332,"tag":492,"props":498,"children":500},{"id":499},"实现",[501],{"type":337,"value":499},{"type":332,"tag":503,"props":504,"children":506},"h3",{"id":505},"语言特性",[507],{"type":337,"value":505},{"type":332,"tag":359,"props":509,"children":513},{"className":510,"code":511,"language":512,"meta":325,"style":325},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  return s.split(\" \").filter(Boolean).reverse().join(\" \");\n};\n","js",[514],{"type":332,"tag":365,"props":515,"children":516},{"__ignoreMap":325},[517,526,552,569,578,622,728],{"type":332,"tag":369,"props":518,"children":519},{"class":371,"line":372},[520],{"type":332,"tag":369,"props":521,"children":523},{"style":522},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[524],{"type":337,"value":525},"/**\n",{"type":332,"tag":369,"props":527,"children":528},{"class":371,"line":381},[529,534,540,546],{"type":332,"tag":369,"props":530,"children":531},{"style":522},[532],{"type":337,"value":533}," * ",{"type":332,"tag":369,"props":535,"children":537},{"style":536},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[538],{"type":337,"value":539},"@param",{"type":332,"tag":369,"props":541,"children":543},{"style":542},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[544],{"type":337,"value":545}," {string}",{"type":332,"tag":369,"props":547,"children":549},{"style":548},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[550],{"type":337,"value":551}," s\n",{"type":332,"tag":369,"props":553,"children":554},{"class":371,"line":418},[555,559,564],{"type":332,"tag":369,"props":556,"children":557},{"style":522},[558],{"type":337,"value":533},{"type":332,"tag":369,"props":560,"children":561},{"style":536},[562],{"type":337,"value":563},"@return",{"type":332,"tag":369,"props":565,"children":566},{"style":542},[567],{"type":337,"value":568}," {string}\n",{"type":332,"tag":369,"props":570,"children":572},{"class":371,"line":571},4,[573],{"type":332,"tag":369,"props":574,"children":575},{"style":522},[576],{"type":337,"value":577}," */\n",{"type":332,"tag":369,"props":579,"children":581},{"class":371,"line":580},5,[582,588,594,600,605,611,617],{"type":332,"tag":369,"props":583,"children":585},{"style":584},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[586],{"type":337,"value":587},"var",{"type":332,"tag":369,"props":589,"children":591},{"style":590},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[592],{"type":337,"value":593}," reverseWords",{"type":332,"tag":369,"props":595,"children":597},{"style":596},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[598],{"type":337,"value":599}," =",{"type":332,"tag":369,"props":601,"children":602},{"style":584},[603],{"type":337,"value":604}," function",{"type":332,"tag":369,"props":606,"children":608},{"style":607},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[609],{"type":337,"value":610}," (",{"type":332,"tag":369,"props":612,"children":614},{"style":613},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[615],{"type":337,"value":616},"s",{"type":332,"tag":369,"props":618,"children":619},{"style":607},[620],{"type":337,"value":621},") {\n",{"type":332,"tag":369,"props":623,"children":625},{"class":371,"line":624},6,[626,632,638,644,649,654,660,665,669,674,678,683,687,691,696,701,705,710,714,718,722],{"type":332,"tag":369,"props":627,"children":629},{"style":628},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[630],{"type":337,"value":631},"  return",{"type":332,"tag":369,"props":633,"children":635},{"style":634},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[636],{"type":337,"value":637}," s",{"type":332,"tag":369,"props":639,"children":641},{"style":640},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[642],{"type":337,"value":643},".",{"type":332,"tag":369,"props":645,"children":646},{"style":590},[647],{"type":337,"value":648},"split",{"type":332,"tag":369,"props":650,"children":651},{"style":607},[652],{"type":337,"value":653},"(",{"type":332,"tag":369,"props":655,"children":657},{"style":656},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[658],{"type":337,"value":659},"\" \"",{"type":332,"tag":369,"props":661,"children":662},{"style":607},[663],{"type":337,"value":664},")",{"type":332,"tag":369,"props":666,"children":667},{"style":640},[668],{"type":337,"value":643},{"type":332,"tag":369,"props":670,"children":671},{"style":590},[672],{"type":337,"value":673},"filter",{"type":332,"tag":369,"props":675,"children":676},{"style":607},[677],{"type":337,"value":653},{"type":332,"tag":369,"props":679,"children":680},{"style":634},[681],{"type":337,"value":682},"Boolean",{"type":332,"tag":369,"props":684,"children":685},{"style":607},[686],{"type":337,"value":664},{"type":332,"tag":369,"props":688,"children":689},{"style":640},[690],{"type":337,"value":643},{"type":332,"tag":369,"props":692,"children":693},{"style":590},[694],{"type":337,"value":695},"reverse",{"type":332,"tag":369,"props":697,"children":698},{"style":607},[699],{"type":337,"value":700},"()",{"type":332,"tag":369,"props":702,"children":703},{"style":640},[704],{"type":337,"value":643},{"type":332,"tag":369,"props":706,"children":707},{"style":590},[708],{"type":337,"value":709},"join",{"type":332,"tag":369,"props":711,"children":712},{"style":607},[713],{"type":337,"value":653},{"type":332,"tag":369,"props":715,"children":716},{"style":656},[717],{"type":337,"value":659},{"type":332,"tag":369,"props":719,"children":720},{"style":607},[721],{"type":337,"value":664},{"type":332,"tag":369,"props":723,"children":725},{"style":724},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[726],{"type":337,"value":727},";\n",{"type":332,"tag":369,"props":729,"children":731},{"class":371,"line":730},7,[732,737],{"type":332,"tag":369,"props":733,"children":734},{"style":607},[735],{"type":337,"value":736},"}",{"type":332,"tag":369,"props":738,"children":739},{"style":724},[740],{"type":337,"value":727},{"type":332,"tag":503,"props":742,"children":744},{"id":743},"双指针",[745],{"type":337,"value":743},{"type":332,"tag":359,"props":747,"children":749},{"className":510,"code":748,"language":512,"meta":325,"style":325},"/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  // 倒序遍历字符串\n  // 1. 索引 i 从右向左搜索首个空格\n  // 2. 添加单词 s[i + 1, j + 1] 到 res\n  // 3. 索引 i 绕过两个单词间所有空格\n  // 4. 执行 j = i\n  let res = [];\n  let i = s.length - 1;\n  let j = i;\n  while (i >= 0) {\n    while (i >= 0 && s[i] !== \" \") i--; // 搜索首个空格\n    res.push(s.substring(i + 1, j + 1)); // 添加单词\n    while (i >= 0 && s[i] === \" \") i--; // 跳过单词间空格\n    j = i; // 指针移动，指向下个单词的尾字符\n  }\n  return res.join(\" \").trim();\n};\n",[750],{"type":332,"tag":365,"props":751,"children":752},{"__ignoreMap":325},[753,760,779,794,801,832,840,848,857,866,875,902,947,972,1004,1086,1169,1243,1269,1278,1327],{"type":332,"tag":369,"props":754,"children":755},{"class":371,"line":372},[756],{"type":332,"tag":369,"props":757,"children":758},{"style":522},[759],{"type":337,"value":525},{"type":332,"tag":369,"props":761,"children":762},{"class":371,"line":381},[763,767,771,775],{"type":332,"tag":369,"props":764,"children":765},{"style":522},[766],{"type":337,"value":533},{"type":332,"tag":369,"props":768,"children":769},{"style":536},[770],{"type":337,"value":539},{"type":332,"tag":369,"props":772,"children":773},{"style":542},[774],{"type":337,"value":545},{"type":332,"tag":369,"props":776,"children":777},{"style":548},[778],{"type":337,"value":551},{"type":332,"tag":369,"props":780,"children":781},{"class":371,"line":418},[782,786,790],{"type":332,"tag":369,"props":783,"children":784},{"style":522},[785],{"type":337,"value":533},{"type":332,"tag":369,"props":787,"children":788},{"style":536},[789],{"type":337,"value":563},{"type":332,"tag":369,"props":791,"children":792},{"style":542},[793],{"type":337,"value":568},{"type":332,"tag":369,"props":795,"children":796},{"class":371,"line":571},[797],{"type":332,"tag":369,"props":798,"children":799},{"style":522},[800],{"type":337,"value":577},{"type":332,"tag":369,"props":802,"children":803},{"class":371,"line":580},[804,808,812,816,820,824,828],{"type":332,"tag":369,"props":805,"children":806},{"style":584},[807],{"type":337,"value":587},{"type":332,"tag":369,"props":809,"children":810},{"style":590},[811],{"type":337,"value":593},{"type":332,"tag":369,"props":813,"children":814},{"style":596},[815],{"type":337,"value":599},{"type":332,"tag":369,"props":817,"children":818},{"style":584},[819],{"type":337,"value":604},{"type":332,"tag":369,"props":821,"children":822},{"style":607},[823],{"type":337,"value":610},{"type":332,"tag":369,"props":825,"children":826},{"style":613},[827],{"type":337,"value":616},{"type":332,"tag":369,"props":829,"children":830},{"style":607},[831],{"type":337,"value":621},{"type":332,"tag":369,"props":833,"children":834},{"class":371,"line":624},[835],{"type":332,"tag":369,"props":836,"children":837},{"style":522},[838],{"type":337,"value":839},"  // 倒序遍历字符串\n",{"type":332,"tag":369,"props":841,"children":842},{"class":371,"line":730},[843],{"type":332,"tag":369,"props":844,"children":845},{"style":522},[846],{"type":337,"value":847},"  // 1. 索引 i 从右向左搜索首个空格\n",{"type":332,"tag":369,"props":849,"children":851},{"class":371,"line":850},8,[852],{"type":332,"tag":369,"props":853,"children":854},{"style":522},[855],{"type":337,"value":856},"  // 2. 添加单词 s[i + 1, j + 1] 到 res\n",{"type":332,"tag":369,"props":858,"children":860},{"class":371,"line":859},9,[861],{"type":332,"tag":369,"props":862,"children":863},{"style":522},[864],{"type":337,"value":865},"  // 3. 索引 i 绕过两个单词间所有空格\n",{"type":332,"tag":369,"props":867,"children":869},{"class":371,"line":868},10,[870],{"type":332,"tag":369,"props":871,"children":872},{"style":522},[873],{"type":337,"value":874},"  // 4. 执行 j = i\n",{"type":332,"tag":369,"props":876,"children":878},{"class":371,"line":877},11,[879,884,889,893,898],{"type":332,"tag":369,"props":880,"children":881},{"style":584},[882],{"type":337,"value":883},"  let",{"type":332,"tag":369,"props":885,"children":886},{"style":634},[887],{"type":337,"value":888}," res",{"type":332,"tag":369,"props":890,"children":891},{"style":596},[892],{"type":337,"value":599},{"type":332,"tag":369,"props":894,"children":895},{"style":607},[896],{"type":337,"value":897}," []",{"type":332,"tag":369,"props":899,"children":900},{"style":724},[901],{"type":337,"value":727},{"type":332,"tag":369,"props":903,"children":905},{"class":371,"line":904},12,[906,910,915,919,923,927,932,937,943],{"type":332,"tag":369,"props":907,"children":908},{"style":584},[909],{"type":337,"value":883},{"type":332,"tag":369,"props":911,"children":912},{"style":634},[913],{"type":337,"value":914}," i",{"type":332,"tag":369,"props":916,"children":917},{"style":596},[918],{"type":337,"value":599},{"type":332,"tag":369,"props":920,"children":921},{"style":634},[922],{"type":337,"value":637},{"type":332,"tag":369,"props":924,"children":925},{"style":640},[926],{"type":337,"value":643},{"type":332,"tag":369,"props":928,"children":929},{"style":607},[930],{"type":337,"value":931},"length ",{"type":332,"tag":369,"props":933,"children":934},{"style":596},[935],{"type":337,"value":936},"-",{"type":332,"tag":369,"props":938,"children":940},{"style":939},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[941],{"type":337,"value":942}," 1",{"type":332,"tag":369,"props":944,"children":945},{"style":724},[946],{"type":337,"value":727},{"type":332,"tag":369,"props":948,"children":950},{"class":371,"line":949},13,[951,955,960,964,968],{"type":332,"tag":369,"props":952,"children":953},{"style":584},[954],{"type":337,"value":883},{"type":332,"tag":369,"props":956,"children":957},{"style":634},[958],{"type":337,"value":959}," j",{"type":332,"tag":369,"props":961,"children":962},{"style":596},[963],{"type":337,"value":599},{"type":332,"tag":369,"props":965,"children":966},{"style":634},[967],{"type":337,"value":914},{"type":332,"tag":369,"props":969,"children":970},{"style":724},[971],{"type":337,"value":727},{"type":332,"tag":369,"props":973,"children":975},{"class":371,"line":974},14,[976,981,985,990,995,1000],{"type":332,"tag":369,"props":977,"children":978},{"style":628},[979],{"type":337,"value":980},"  while",{"type":332,"tag":369,"props":982,"children":983},{"style":607},[984],{"type":337,"value":610},{"type":332,"tag":369,"props":986,"children":987},{"style":634},[988],{"type":337,"value":989},"i",{"type":332,"tag":369,"props":991,"children":992},{"style":596},[993],{"type":337,"value":994}," >=",{"type":332,"tag":369,"props":996,"children":997},{"style":939},[998],{"type":337,"value":999}," 0",{"type":332,"tag":369,"props":1001,"children":1002},{"style":607},[1003],{"type":337,"value":621},{"type":332,"tag":369,"props":1005,"children":1007},{"class":371,"line":1006},15,[1008,1013,1017,1021,1025,1029,1034,1038,1043,1047,1052,1057,1062,1067,1071,1076,1081],{"type":332,"tag":369,"props":1009,"children":1010},{"style":628},[1011],{"type":337,"value":1012},"    while",{"type":332,"tag":369,"props":1014,"children":1015},{"style":607},[1016],{"type":337,"value":610},{"type":332,"tag":369,"props":1018,"children":1019},{"style":634},[1020],{"type":337,"value":989},{"type":332,"tag":369,"props":1022,"children":1023},{"style":596},[1024],{"type":337,"value":994},{"type":332,"tag":369,"props":1026,"children":1027},{"style":939},[1028],{"type":337,"value":999},{"type":332,"tag":369,"props":1030,"children":1031},{"style":596},[1032],{"type":337,"value":1033}," &&",{"type":332,"tag":369,"props":1035,"children":1036},{"style":634},[1037],{"type":337,"value":637},{"type":332,"tag":369,"props":1039,"children":1040},{"style":607},[1041],{"type":337,"value":1042},"[",{"type":332,"tag":369,"props":1044,"children":1045},{"style":634},[1046],{"type":337,"value":989},{"type":332,"tag":369,"props":1048,"children":1049},{"style":607},[1050],{"type":337,"value":1051},"] ",{"type":332,"tag":369,"props":1053,"children":1054},{"style":596},[1055],{"type":337,"value":1056},"!==",{"type":332,"tag":369,"props":1058,"children":1059},{"style":656},[1060],{"type":337,"value":1061}," \" \"",{"type":332,"tag":369,"props":1063,"children":1064},{"style":607},[1065],{"type":337,"value":1066},") ",{"type":332,"tag":369,"props":1068,"children":1069},{"style":634},[1070],{"type":337,"value":989},{"type":332,"tag":369,"props":1072,"children":1073},{"style":596},[1074],{"type":337,"value":1075},"--",{"type":332,"tag":369,"props":1077,"children":1078},{"style":724},[1079],{"type":337,"value":1080},";",{"type":332,"tag":369,"props":1082,"children":1083},{"style":522},[1084],{"type":337,"value":1085}," // 搜索首个空格\n",{"type":332,"tag":369,"props":1087,"children":1089},{"class":371,"line":1088},16,[1090,1095,1099,1104,1108,1112,1116,1121,1125,1129,1134,1138,1143,1147,1151,1155,1160,1164],{"type":332,"tag":369,"props":1091,"children":1092},{"style":634},[1093],{"type":337,"value":1094},"    res",{"type":332,"tag":369,"props":1096,"children":1097},{"style":640},[1098],{"type":337,"value":643},{"type":332,"tag":369,"props":1100,"children":1101},{"style":590},[1102],{"type":337,"value":1103},"push",{"type":332,"tag":369,"props":1105,"children":1106},{"style":607},[1107],{"type":337,"value":653},{"type":332,"tag":369,"props":1109,"children":1110},{"style":634},[1111],{"type":337,"value":616},{"type":332,"tag":369,"props":1113,"children":1114},{"style":640},[1115],{"type":337,"value":643},{"type":332,"tag":369,"props":1117,"children":1118},{"style":590},[1119],{"type":337,"value":1120},"substring",{"type":332,"tag":369,"props":1122,"children":1123},{"style":607},[1124],{"type":337,"value":653},{"type":332,"tag":369,"props":1126,"children":1127},{"style":634},[1128],{"type":337,"value":989},{"type":332,"tag":369,"props":1130,"children":1131},{"style":596},[1132],{"type":337,"value":1133}," +",{"type":332,"tag":369,"props":1135,"children":1136},{"style":939},[1137],{"type":337,"value":942},{"type":332,"tag":369,"props":1139,"children":1140},{"style":724},[1141],{"type":337,"value":1142},",",{"type":332,"tag":369,"props":1144,"children":1145},{"style":634},[1146],{"type":337,"value":959},{"type":332,"tag":369,"props":1148,"children":1149},{"style":596},[1150],{"type":337,"value":1133},{"type":332,"tag":369,"props":1152,"children":1153},{"style":939},[1154],{"type":337,"value":942},{"type":332,"tag":369,"props":1156,"children":1157},{"style":607},[1158],{"type":337,"value":1159},"))",{"type":332,"tag":369,"props":1161,"children":1162},{"style":724},[1163],{"type":337,"value":1080},{"type":332,"tag":369,"props":1165,"children":1166},{"style":522},[1167],{"type":337,"value":1168}," // 添加单词\n",{"type":332,"tag":369,"props":1170,"children":1172},{"class":371,"line":1171},17,[1173,1177,1181,1185,1189,1193,1197,1201,1205,1209,1213,1218,1222,1226,1230,1234,1238],{"type":332,"tag":369,"props":1174,"children":1175},{"style":628},[1176],{"type":337,"value":1012},{"type":332,"tag":369,"props":1178,"children":1179},{"style":607},[1180],{"type":337,"value":610},{"type":332,"tag":369,"props":1182,"children":1183},{"style":634},[1184],{"type":337,"value":989},{"type":332,"tag":369,"props":1186,"children":1187},{"style":596},[1188],{"type":337,"value":994},{"type":332,"tag":369,"props":1190,"children":1191},{"style":939},[1192],{"type":337,"value":999},{"type":332,"tag":369,"props":1194,"children":1195},{"style":596},[1196],{"type":337,"value":1033},{"type":332,"tag":369,"props":1198,"children":1199},{"style":634},[1200],{"type":337,"value":637},{"type":332,"tag":369,"props":1202,"children":1203},{"style":607},[1204],{"type":337,"value":1042},{"type":332,"tag":369,"props":1206,"children":1207},{"style":634},[1208],{"type":337,"value":989},{"type":332,"tag":369,"props":1210,"children":1211},{"style":607},[1212],{"type":337,"value":1051},{"type":332,"tag":369,"props":1214,"children":1215},{"style":596},[1216],{"type":337,"value":1217},"===",{"type":332,"tag":369,"props":1219,"children":1220},{"style":656},[1221],{"type":337,"value":1061},{"type":332,"tag":369,"props":1223,"children":1224},{"style":607},[1225],{"type":337,"value":1066},{"type":332,"tag":369,"props":1227,"children":1228},{"style":634},[1229],{"type":337,"value":989},{"type":332,"tag":369,"props":1231,"children":1232},{"style":596},[1233],{"type":337,"value":1075},{"type":332,"tag":369,"props":1235,"children":1236},{"style":724},[1237],{"type":337,"value":1080},{"type":332,"tag":369,"props":1239,"children":1240},{"style":522},[1241],{"type":337,"value":1242}," // 跳过单词间空格\n",{"type":332,"tag":369,"props":1244,"children":1246},{"class":371,"line":1245},18,[1247,1252,1256,1260,1264],{"type":332,"tag":369,"props":1248,"children":1249},{"style":634},[1250],{"type":337,"value":1251},"    j",{"type":332,"tag":369,"props":1253,"children":1254},{"style":596},[1255],{"type":337,"value":599},{"type":332,"tag":369,"props":1257,"children":1258},{"style":634},[1259],{"type":337,"value":914},{"type":332,"tag":369,"props":1261,"children":1262},{"style":724},[1263],{"type":337,"value":1080},{"type":332,"tag":369,"props":1265,"children":1266},{"style":522},[1267],{"type":337,"value":1268}," // 指针移动，指向下个单词的尾字符\n",{"type":332,"tag":369,"props":1270,"children":1272},{"class":371,"line":1271},19,[1273],{"type":332,"tag":369,"props":1274,"children":1275},{"style":607},[1276],{"type":337,"value":1277},"  }\n",{"type":332,"tag":369,"props":1279,"children":1281},{"class":371,"line":1280},20,[1282,1286,1290,1294,1298,1302,1306,1310,1314,1319,1323],{"type":332,"tag":369,"props":1283,"children":1284},{"style":628},[1285],{"type":337,"value":631},{"type":332,"tag":369,"props":1287,"children":1288},{"style":634},[1289],{"type":337,"value":888},{"type":332,"tag":369,"props":1291,"children":1292},{"style":640},[1293],{"type":337,"value":643},{"type":332,"tag":369,"props":1295,"children":1296},{"style":590},[1297],{"type":337,"value":709},{"type":332,"tag":369,"props":1299,"children":1300},{"style":607},[1301],{"type":337,"value":653},{"type":332,"tag":369,"props":1303,"children":1304},{"style":656},[1305],{"type":337,"value":659},{"type":332,"tag":369,"props":1307,"children":1308},{"style":607},[1309],{"type":337,"value":664},{"type":332,"tag":369,"props":1311,"children":1312},{"style":640},[1313],{"type":337,"value":643},{"type":332,"tag":369,"props":1315,"children":1316},{"style":590},[1317],{"type":337,"value":1318},"trim",{"type":332,"tag":369,"props":1320,"children":1321},{"style":607},[1322],{"type":337,"value":700},{"type":332,"tag":369,"props":1324,"children":1325},{"style":724},[1326],{"type":337,"value":727},{"type":332,"tag":369,"props":1328,"children":1330},{"class":371,"line":1329},21,[1331,1335],{"type":332,"tag":369,"props":1332,"children":1333},{"style":607},[1334],{"type":337,"value":736},{"type":332,"tag":369,"props":1336,"children":1337},{"style":724},[1338],{"type":337,"value":727},{"type":332,"tag":1340,"props":1341,"children":1342},"style",{},[1343],{"type":337,"value":1344},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":325,"searchDepth":580,"depth":580,"links":1346},[1347,1348],{"id":494,"depth":381,"text":494},{"id":499,"depth":381,"text":499,"children":1349},[1350,1351],{"id":505,"depth":418,"text":505},{"id":743,"depth":418,"text":743},"markdown","content:2.code:1.algorithm:3.leetcode:151.reverse-words-in-a-string.md","content","2.code/1.algorithm/3.leetcode/151.reverse-words-in-a-string.md","md",[1358,1360],{"_path":178,"title":177,"description":1359},"请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：",{"_path":184,"title":183,"description":1361},"已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：",1712115783608]