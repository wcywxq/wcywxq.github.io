[{"data":1,"prerenderedAt":1369},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/reverse-words-in-a-string":329,"/code/algorithm/leetcode/reverse-words-in-a-string-surround":1364},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319],{"title":320,"_path":321,"children":322},"Promise","/code/scene/promise",[323,326],{"title":324,"_path":325},"顺序打印 url 并支持 retry","/code/scene/promise/order-print-url-and-retry",{"title":327,"_path":328},"promise 实现图片加载数量限制","/code/scene/promise/limit-image-load-count",{"_path":181,"_dir":330,"_draft":331,"_partial":331,"_locale":332,"title":180,"description":333,"url":334,"body":335,"_type":1359,"_id":1360,"_source":1361,"_file":1362,"_extension":1363},"leetcode",false,"","给你一个字符串 s ，请你反转字符串中 单词 的顺序。","https://leetcode.cn/problems/reverse-words-in-a-string",{"type":336,"children":337,"toc":1352},"root",[338,345,350,355,360,365,395,400,432,437,468,473,493,498,504,509,515,748,753,1346],{"type":339,"tag":340,"props":341,"children":342},"element","p",{},[343],{"type":344,"value":333},"text",{"type":339,"tag":340,"props":346,"children":347},{},[348],{"type":344,"value":349},"单词 是由非空格字符组成的字符串。s 中使用至少一个空格将字符串中的 单词 分隔开。",{"type":339,"tag":340,"props":351,"children":352},{},[353],{"type":344,"value":354},"返回 单词 顺序颠倒且 单词 之间用单个空格连接的结果字符串。",{"type":339,"tag":340,"props":356,"children":357},{},[358],{"type":344,"value":359},"注意：输入字符串 s 中可能会存在前导空格、尾随空格或者单词间的多个空格。返回的结果字符串中，单词间应当仅用单个空格分隔，且不包含任何额外的空格。",{"type":339,"tag":340,"props":361,"children":362},{},[363],{"type":344,"value":364},"示例 1：",{"type":339,"tag":366,"props":367,"children":370},"pre",{"className":368,"code":369,"language":344,"meta":332,"style":332},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：s = \"the sky is blue\"\n输出：\"blue is sky the\"\n",[371],{"type":339,"tag":372,"props":373,"children":374},"code",{"__ignoreMap":332},[375,386],{"type":339,"tag":376,"props":377,"children":380},"span",{"class":378,"line":379},"line",1,[381],{"type":339,"tag":376,"props":382,"children":383},{},[384],{"type":344,"value":385},"输入：s = \"the sky is blue\"\n",{"type":339,"tag":376,"props":387,"children":389},{"class":378,"line":388},2,[390],{"type":339,"tag":376,"props":391,"children":392},{},[393],{"type":344,"value":394},"输出：\"blue is sky the\"\n",{"type":339,"tag":340,"props":396,"children":397},{},[398],{"type":344,"value":399},"示例 2：",{"type":339,"tag":366,"props":401,"children":403},{"className":368,"code":402,"language":344,"meta":332,"style":332},"输入：s = \" hello world \"\n输出：\"world hello\"\n解释：反转后的字符串中不能存在前导空格和尾随空格。\n",[404],{"type":339,"tag":372,"props":405,"children":406},{"__ignoreMap":332},[407,415,423],{"type":339,"tag":376,"props":408,"children":409},{"class":378,"line":379},[410],{"type":339,"tag":376,"props":411,"children":412},{},[413],{"type":344,"value":414},"输入：s = \" hello world \"\n",{"type":339,"tag":376,"props":416,"children":417},{"class":378,"line":388},[418],{"type":339,"tag":376,"props":419,"children":420},{},[421],{"type":344,"value":422},"输出：\"world hello\"\n",{"type":339,"tag":376,"props":424,"children":426},{"class":378,"line":425},3,[427],{"type":339,"tag":376,"props":428,"children":429},{},[430],{"type":344,"value":431},"解释：反转后的字符串中不能存在前导空格和尾随空格。\n",{"type":339,"tag":340,"props":433,"children":434},{},[435],{"type":344,"value":436},"示例 3：",{"type":339,"tag":366,"props":438,"children":440},{"className":368,"code":439,"language":344,"meta":332,"style":332},"输入：s = \"a good example\"\n输出：\"example good a\"\n解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",[441],{"type":339,"tag":372,"props":442,"children":443},{"__ignoreMap":332},[444,452,460],{"type":339,"tag":376,"props":445,"children":446},{"class":378,"line":379},[447],{"type":339,"tag":376,"props":448,"children":449},{},[450],{"type":344,"value":451},"输入：s = \"a good example\"\n",{"type":339,"tag":376,"props":453,"children":454},{"class":378,"line":388},[455],{"type":339,"tag":376,"props":456,"children":457},{},[458],{"type":344,"value":459},"输出：\"example good a\"\n",{"type":339,"tag":376,"props":461,"children":462},{"class":378,"line":425},[463],{"type":339,"tag":376,"props":464,"children":465},{},[466],{"type":344,"value":467},"解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",{"type":339,"tag":340,"props":469,"children":470},{},[471],{"type":344,"value":472},"提示：",{"type":339,"tag":474,"props":475,"children":476},"ul",{},[477,483,488],{"type":339,"tag":478,"props":479,"children":480},"li",{},[481],{"type":344,"value":482},"1 \u003C= s.length \u003C= 10^4",{"type":339,"tag":478,"props":484,"children":485},{},[486],{"type":344,"value":487},"s 包含英文大小写字母、数字和空格 ' '",{"type":339,"tag":478,"props":489,"children":490},{},[491],{"type":344,"value":492},"s 中 至少存在一个 单词",{"type":339,"tag":340,"props":494,"children":495},{},[496],{"type":344,"value":497},"进阶：如果字符串在你使用的编程语言中是一种可变数据类型，请尝试使用 O(1) 额外空间复杂度的 原地 解法。",{"type":339,"tag":499,"props":500,"children":502},"h2",{"id":501},"解题思路",[503],{"type":344,"value":501},{"type":339,"tag":499,"props":505,"children":507},{"id":506},"实现",[508],{"type":344,"value":506},{"type":339,"tag":510,"props":511,"children":513},"h3",{"id":512},"语言特性",[514],{"type":344,"value":512},{"type":339,"tag":366,"props":516,"children":520},{"className":517,"code":518,"language":519,"meta":332,"style":332},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  return s.split(\" \").filter(Boolean).reverse().join(\" \");\n};\n","js",[521],{"type":339,"tag":372,"props":522,"children":523},{"__ignoreMap":332},[524,533,559,576,585,629,735],{"type":339,"tag":376,"props":525,"children":526},{"class":378,"line":379},[527],{"type":339,"tag":376,"props":528,"children":530},{"style":529},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[531],{"type":344,"value":532},"/**\n",{"type":339,"tag":376,"props":534,"children":535},{"class":378,"line":388},[536,541,547,553],{"type":339,"tag":376,"props":537,"children":538},{"style":529},[539],{"type":344,"value":540}," * ",{"type":339,"tag":376,"props":542,"children":544},{"style":543},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[545],{"type":344,"value":546},"@param",{"type":339,"tag":376,"props":548,"children":550},{"style":549},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[551],{"type":344,"value":552}," {string}",{"type":339,"tag":376,"props":554,"children":556},{"style":555},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[557],{"type":344,"value":558}," s\n",{"type":339,"tag":376,"props":560,"children":561},{"class":378,"line":425},[562,566,571],{"type":339,"tag":376,"props":563,"children":564},{"style":529},[565],{"type":344,"value":540},{"type":339,"tag":376,"props":567,"children":568},{"style":543},[569],{"type":344,"value":570},"@return",{"type":339,"tag":376,"props":572,"children":573},{"style":549},[574],{"type":344,"value":575}," {string}\n",{"type":339,"tag":376,"props":577,"children":579},{"class":378,"line":578},4,[580],{"type":339,"tag":376,"props":581,"children":582},{"style":529},[583],{"type":344,"value":584}," */\n",{"type":339,"tag":376,"props":586,"children":588},{"class":378,"line":587},5,[589,595,601,607,612,618,624],{"type":339,"tag":376,"props":590,"children":592},{"style":591},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[593],{"type":344,"value":594},"var",{"type":339,"tag":376,"props":596,"children":598},{"style":597},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[599],{"type":344,"value":600}," reverseWords",{"type":339,"tag":376,"props":602,"children":604},{"style":603},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[605],{"type":344,"value":606}," =",{"type":339,"tag":376,"props":608,"children":609},{"style":591},[610],{"type":344,"value":611}," function",{"type":339,"tag":376,"props":613,"children":615},{"style":614},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[616],{"type":344,"value":617}," (",{"type":339,"tag":376,"props":619,"children":621},{"style":620},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[622],{"type":344,"value":623},"s",{"type":339,"tag":376,"props":625,"children":626},{"style":614},[627],{"type":344,"value":628},") {\n",{"type":339,"tag":376,"props":630,"children":632},{"class":378,"line":631},6,[633,639,645,651,656,661,667,672,676,681,685,690,694,698,703,708,712,717,721,725,729],{"type":339,"tag":376,"props":634,"children":636},{"style":635},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[637],{"type":344,"value":638},"  return",{"type":339,"tag":376,"props":640,"children":642},{"style":641},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[643],{"type":344,"value":644}," s",{"type":339,"tag":376,"props":646,"children":648},{"style":647},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[649],{"type":344,"value":650},".",{"type":339,"tag":376,"props":652,"children":653},{"style":597},[654],{"type":344,"value":655},"split",{"type":339,"tag":376,"props":657,"children":658},{"style":614},[659],{"type":344,"value":660},"(",{"type":339,"tag":376,"props":662,"children":664},{"style":663},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[665],{"type":344,"value":666},"\" \"",{"type":339,"tag":376,"props":668,"children":669},{"style":614},[670],{"type":344,"value":671},")",{"type":339,"tag":376,"props":673,"children":674},{"style":647},[675],{"type":344,"value":650},{"type":339,"tag":376,"props":677,"children":678},{"style":597},[679],{"type":344,"value":680},"filter",{"type":339,"tag":376,"props":682,"children":683},{"style":614},[684],{"type":344,"value":660},{"type":339,"tag":376,"props":686,"children":687},{"style":641},[688],{"type":344,"value":689},"Boolean",{"type":339,"tag":376,"props":691,"children":692},{"style":614},[693],{"type":344,"value":671},{"type":339,"tag":376,"props":695,"children":696},{"style":647},[697],{"type":344,"value":650},{"type":339,"tag":376,"props":699,"children":700},{"style":597},[701],{"type":344,"value":702},"reverse",{"type":339,"tag":376,"props":704,"children":705},{"style":614},[706],{"type":344,"value":707},"()",{"type":339,"tag":376,"props":709,"children":710},{"style":647},[711],{"type":344,"value":650},{"type":339,"tag":376,"props":713,"children":714},{"style":597},[715],{"type":344,"value":716},"join",{"type":339,"tag":376,"props":718,"children":719},{"style":614},[720],{"type":344,"value":660},{"type":339,"tag":376,"props":722,"children":723},{"style":663},[724],{"type":344,"value":666},{"type":339,"tag":376,"props":726,"children":727},{"style":614},[728],{"type":344,"value":671},{"type":339,"tag":376,"props":730,"children":732},{"style":731},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[733],{"type":344,"value":734},";\n",{"type":339,"tag":376,"props":736,"children":738},{"class":378,"line":737},7,[739,744],{"type":339,"tag":376,"props":740,"children":741},{"style":614},[742],{"type":344,"value":743},"}",{"type":339,"tag":376,"props":745,"children":746},{"style":731},[747],{"type":344,"value":734},{"type":339,"tag":510,"props":749,"children":751},{"id":750},"双指针",[752],{"type":344,"value":750},{"type":339,"tag":366,"props":754,"children":756},{"className":517,"code":755,"language":519,"meta":332,"style":332},"/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  // 倒序遍历字符串\n  // 1. 索引 i 从右向左搜索首个空格\n  // 2. 添加单词 s[i + 1, j + 1] 到 res\n  // 3. 索引 i 绕过两个单词间所有空格\n  // 4. 执行 j = i\n  let res = [];\n  let i = s.length - 1;\n  let j = i;\n  while (i >= 0) {\n    while (i >= 0 && s[i] !== \" \") i--; // 搜索首个空格\n    res.push(s.substring(i + 1, j + 1)); // 添加单词\n    while (i >= 0 && s[i] === \" \") i--; // 跳过单词间空格\n    j = i; // 指针移动，指向下个单词的尾字符\n  }\n  return res.join(\" \").trim();\n};\n",[757],{"type":339,"tag":372,"props":758,"children":759},{"__ignoreMap":332},[760,767,786,801,808,839,847,855,864,873,882,909,954,979,1011,1093,1176,1250,1276,1285,1334],{"type":339,"tag":376,"props":761,"children":762},{"class":378,"line":379},[763],{"type":339,"tag":376,"props":764,"children":765},{"style":529},[766],{"type":344,"value":532},{"type":339,"tag":376,"props":768,"children":769},{"class":378,"line":388},[770,774,778,782],{"type":339,"tag":376,"props":771,"children":772},{"style":529},[773],{"type":344,"value":540},{"type":339,"tag":376,"props":775,"children":776},{"style":543},[777],{"type":344,"value":546},{"type":339,"tag":376,"props":779,"children":780},{"style":549},[781],{"type":344,"value":552},{"type":339,"tag":376,"props":783,"children":784},{"style":555},[785],{"type":344,"value":558},{"type":339,"tag":376,"props":787,"children":788},{"class":378,"line":425},[789,793,797],{"type":339,"tag":376,"props":790,"children":791},{"style":529},[792],{"type":344,"value":540},{"type":339,"tag":376,"props":794,"children":795},{"style":543},[796],{"type":344,"value":570},{"type":339,"tag":376,"props":798,"children":799},{"style":549},[800],{"type":344,"value":575},{"type":339,"tag":376,"props":802,"children":803},{"class":378,"line":578},[804],{"type":339,"tag":376,"props":805,"children":806},{"style":529},[807],{"type":344,"value":584},{"type":339,"tag":376,"props":809,"children":810},{"class":378,"line":587},[811,815,819,823,827,831,835],{"type":339,"tag":376,"props":812,"children":813},{"style":591},[814],{"type":344,"value":594},{"type":339,"tag":376,"props":816,"children":817},{"style":597},[818],{"type":344,"value":600},{"type":339,"tag":376,"props":820,"children":821},{"style":603},[822],{"type":344,"value":606},{"type":339,"tag":376,"props":824,"children":825},{"style":591},[826],{"type":344,"value":611},{"type":339,"tag":376,"props":828,"children":829},{"style":614},[830],{"type":344,"value":617},{"type":339,"tag":376,"props":832,"children":833},{"style":620},[834],{"type":344,"value":623},{"type":339,"tag":376,"props":836,"children":837},{"style":614},[838],{"type":344,"value":628},{"type":339,"tag":376,"props":840,"children":841},{"class":378,"line":631},[842],{"type":339,"tag":376,"props":843,"children":844},{"style":529},[845],{"type":344,"value":846},"  // 倒序遍历字符串\n",{"type":339,"tag":376,"props":848,"children":849},{"class":378,"line":737},[850],{"type":339,"tag":376,"props":851,"children":852},{"style":529},[853],{"type":344,"value":854},"  // 1. 索引 i 从右向左搜索首个空格\n",{"type":339,"tag":376,"props":856,"children":858},{"class":378,"line":857},8,[859],{"type":339,"tag":376,"props":860,"children":861},{"style":529},[862],{"type":344,"value":863},"  // 2. 添加单词 s[i + 1, j + 1] 到 res\n",{"type":339,"tag":376,"props":865,"children":867},{"class":378,"line":866},9,[868],{"type":339,"tag":376,"props":869,"children":870},{"style":529},[871],{"type":344,"value":872},"  // 3. 索引 i 绕过两个单词间所有空格\n",{"type":339,"tag":376,"props":874,"children":876},{"class":378,"line":875},10,[877],{"type":339,"tag":376,"props":878,"children":879},{"style":529},[880],{"type":344,"value":881},"  // 4. 执行 j = i\n",{"type":339,"tag":376,"props":883,"children":885},{"class":378,"line":884},11,[886,891,896,900,905],{"type":339,"tag":376,"props":887,"children":888},{"style":591},[889],{"type":344,"value":890},"  let",{"type":339,"tag":376,"props":892,"children":893},{"style":641},[894],{"type":344,"value":895}," res",{"type":339,"tag":376,"props":897,"children":898},{"style":603},[899],{"type":344,"value":606},{"type":339,"tag":376,"props":901,"children":902},{"style":614},[903],{"type":344,"value":904}," []",{"type":339,"tag":376,"props":906,"children":907},{"style":731},[908],{"type":344,"value":734},{"type":339,"tag":376,"props":910,"children":912},{"class":378,"line":911},12,[913,917,922,926,930,934,939,944,950],{"type":339,"tag":376,"props":914,"children":915},{"style":591},[916],{"type":344,"value":890},{"type":339,"tag":376,"props":918,"children":919},{"style":641},[920],{"type":344,"value":921}," i",{"type":339,"tag":376,"props":923,"children":924},{"style":603},[925],{"type":344,"value":606},{"type":339,"tag":376,"props":927,"children":928},{"style":641},[929],{"type":344,"value":644},{"type":339,"tag":376,"props":931,"children":932},{"style":647},[933],{"type":344,"value":650},{"type":339,"tag":376,"props":935,"children":936},{"style":614},[937],{"type":344,"value":938},"length ",{"type":339,"tag":376,"props":940,"children":941},{"style":603},[942],{"type":344,"value":943},"-",{"type":339,"tag":376,"props":945,"children":947},{"style":946},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[948],{"type":344,"value":949}," 1",{"type":339,"tag":376,"props":951,"children":952},{"style":731},[953],{"type":344,"value":734},{"type":339,"tag":376,"props":955,"children":957},{"class":378,"line":956},13,[958,962,967,971,975],{"type":339,"tag":376,"props":959,"children":960},{"style":591},[961],{"type":344,"value":890},{"type":339,"tag":376,"props":963,"children":964},{"style":641},[965],{"type":344,"value":966}," j",{"type":339,"tag":376,"props":968,"children":969},{"style":603},[970],{"type":344,"value":606},{"type":339,"tag":376,"props":972,"children":973},{"style":641},[974],{"type":344,"value":921},{"type":339,"tag":376,"props":976,"children":977},{"style":731},[978],{"type":344,"value":734},{"type":339,"tag":376,"props":980,"children":982},{"class":378,"line":981},14,[983,988,992,997,1002,1007],{"type":339,"tag":376,"props":984,"children":985},{"style":635},[986],{"type":344,"value":987},"  while",{"type":339,"tag":376,"props":989,"children":990},{"style":614},[991],{"type":344,"value":617},{"type":339,"tag":376,"props":993,"children":994},{"style":641},[995],{"type":344,"value":996},"i",{"type":339,"tag":376,"props":998,"children":999},{"style":603},[1000],{"type":344,"value":1001}," >=",{"type":339,"tag":376,"props":1003,"children":1004},{"style":946},[1005],{"type":344,"value":1006}," 0",{"type":339,"tag":376,"props":1008,"children":1009},{"style":614},[1010],{"type":344,"value":628},{"type":339,"tag":376,"props":1012,"children":1014},{"class":378,"line":1013},15,[1015,1020,1024,1028,1032,1036,1041,1045,1050,1054,1059,1064,1069,1074,1078,1083,1088],{"type":339,"tag":376,"props":1016,"children":1017},{"style":635},[1018],{"type":344,"value":1019},"    while",{"type":339,"tag":376,"props":1021,"children":1022},{"style":614},[1023],{"type":344,"value":617},{"type":339,"tag":376,"props":1025,"children":1026},{"style":641},[1027],{"type":344,"value":996},{"type":339,"tag":376,"props":1029,"children":1030},{"style":603},[1031],{"type":344,"value":1001},{"type":339,"tag":376,"props":1033,"children":1034},{"style":946},[1035],{"type":344,"value":1006},{"type":339,"tag":376,"props":1037,"children":1038},{"style":603},[1039],{"type":344,"value":1040}," &&",{"type":339,"tag":376,"props":1042,"children":1043},{"style":641},[1044],{"type":344,"value":644},{"type":339,"tag":376,"props":1046,"children":1047},{"style":614},[1048],{"type":344,"value":1049},"[",{"type":339,"tag":376,"props":1051,"children":1052},{"style":641},[1053],{"type":344,"value":996},{"type":339,"tag":376,"props":1055,"children":1056},{"style":614},[1057],{"type":344,"value":1058},"] ",{"type":339,"tag":376,"props":1060,"children":1061},{"style":603},[1062],{"type":344,"value":1063},"!==",{"type":339,"tag":376,"props":1065,"children":1066},{"style":663},[1067],{"type":344,"value":1068}," \" \"",{"type":339,"tag":376,"props":1070,"children":1071},{"style":614},[1072],{"type":344,"value":1073},") ",{"type":339,"tag":376,"props":1075,"children":1076},{"style":641},[1077],{"type":344,"value":996},{"type":339,"tag":376,"props":1079,"children":1080},{"style":603},[1081],{"type":344,"value":1082},"--",{"type":339,"tag":376,"props":1084,"children":1085},{"style":731},[1086],{"type":344,"value":1087},";",{"type":339,"tag":376,"props":1089,"children":1090},{"style":529},[1091],{"type":344,"value":1092}," // 搜索首个空格\n",{"type":339,"tag":376,"props":1094,"children":1096},{"class":378,"line":1095},16,[1097,1102,1106,1111,1115,1119,1123,1128,1132,1136,1141,1145,1150,1154,1158,1162,1167,1171],{"type":339,"tag":376,"props":1098,"children":1099},{"style":641},[1100],{"type":344,"value":1101},"    res",{"type":339,"tag":376,"props":1103,"children":1104},{"style":647},[1105],{"type":344,"value":650},{"type":339,"tag":376,"props":1107,"children":1108},{"style":597},[1109],{"type":344,"value":1110},"push",{"type":339,"tag":376,"props":1112,"children":1113},{"style":614},[1114],{"type":344,"value":660},{"type":339,"tag":376,"props":1116,"children":1117},{"style":641},[1118],{"type":344,"value":623},{"type":339,"tag":376,"props":1120,"children":1121},{"style":647},[1122],{"type":344,"value":650},{"type":339,"tag":376,"props":1124,"children":1125},{"style":597},[1126],{"type":344,"value":1127},"substring",{"type":339,"tag":376,"props":1129,"children":1130},{"style":614},[1131],{"type":344,"value":660},{"type":339,"tag":376,"props":1133,"children":1134},{"style":641},[1135],{"type":344,"value":996},{"type":339,"tag":376,"props":1137,"children":1138},{"style":603},[1139],{"type":344,"value":1140}," +",{"type":339,"tag":376,"props":1142,"children":1143},{"style":946},[1144],{"type":344,"value":949},{"type":339,"tag":376,"props":1146,"children":1147},{"style":731},[1148],{"type":344,"value":1149},",",{"type":339,"tag":376,"props":1151,"children":1152},{"style":641},[1153],{"type":344,"value":966},{"type":339,"tag":376,"props":1155,"children":1156},{"style":603},[1157],{"type":344,"value":1140},{"type":339,"tag":376,"props":1159,"children":1160},{"style":946},[1161],{"type":344,"value":949},{"type":339,"tag":376,"props":1163,"children":1164},{"style":614},[1165],{"type":344,"value":1166},"))",{"type":339,"tag":376,"props":1168,"children":1169},{"style":731},[1170],{"type":344,"value":1087},{"type":339,"tag":376,"props":1172,"children":1173},{"style":529},[1174],{"type":344,"value":1175}," // 添加单词\n",{"type":339,"tag":376,"props":1177,"children":1179},{"class":378,"line":1178},17,[1180,1184,1188,1192,1196,1200,1204,1208,1212,1216,1220,1225,1229,1233,1237,1241,1245],{"type":339,"tag":376,"props":1181,"children":1182},{"style":635},[1183],{"type":344,"value":1019},{"type":339,"tag":376,"props":1185,"children":1186},{"style":614},[1187],{"type":344,"value":617},{"type":339,"tag":376,"props":1189,"children":1190},{"style":641},[1191],{"type":344,"value":996},{"type":339,"tag":376,"props":1193,"children":1194},{"style":603},[1195],{"type":344,"value":1001},{"type":339,"tag":376,"props":1197,"children":1198},{"style":946},[1199],{"type":344,"value":1006},{"type":339,"tag":376,"props":1201,"children":1202},{"style":603},[1203],{"type":344,"value":1040},{"type":339,"tag":376,"props":1205,"children":1206},{"style":641},[1207],{"type":344,"value":644},{"type":339,"tag":376,"props":1209,"children":1210},{"style":614},[1211],{"type":344,"value":1049},{"type":339,"tag":376,"props":1213,"children":1214},{"style":641},[1215],{"type":344,"value":996},{"type":339,"tag":376,"props":1217,"children":1218},{"style":614},[1219],{"type":344,"value":1058},{"type":339,"tag":376,"props":1221,"children":1222},{"style":603},[1223],{"type":344,"value":1224},"===",{"type":339,"tag":376,"props":1226,"children":1227},{"style":663},[1228],{"type":344,"value":1068},{"type":339,"tag":376,"props":1230,"children":1231},{"style":614},[1232],{"type":344,"value":1073},{"type":339,"tag":376,"props":1234,"children":1235},{"style":641},[1236],{"type":344,"value":996},{"type":339,"tag":376,"props":1238,"children":1239},{"style":603},[1240],{"type":344,"value":1082},{"type":339,"tag":376,"props":1242,"children":1243},{"style":731},[1244],{"type":344,"value":1087},{"type":339,"tag":376,"props":1246,"children":1247},{"style":529},[1248],{"type":344,"value":1249}," // 跳过单词间空格\n",{"type":339,"tag":376,"props":1251,"children":1253},{"class":378,"line":1252},18,[1254,1259,1263,1267,1271],{"type":339,"tag":376,"props":1255,"children":1256},{"style":641},[1257],{"type":344,"value":1258},"    j",{"type":339,"tag":376,"props":1260,"children":1261},{"style":603},[1262],{"type":344,"value":606},{"type":339,"tag":376,"props":1264,"children":1265},{"style":641},[1266],{"type":344,"value":921},{"type":339,"tag":376,"props":1268,"children":1269},{"style":731},[1270],{"type":344,"value":1087},{"type":339,"tag":376,"props":1272,"children":1273},{"style":529},[1274],{"type":344,"value":1275}," // 指针移动，指向下个单词的尾字符\n",{"type":339,"tag":376,"props":1277,"children":1279},{"class":378,"line":1278},19,[1280],{"type":339,"tag":376,"props":1281,"children":1282},{"style":614},[1283],{"type":344,"value":1284},"  }\n",{"type":339,"tag":376,"props":1286,"children":1288},{"class":378,"line":1287},20,[1289,1293,1297,1301,1305,1309,1313,1317,1321,1326,1330],{"type":339,"tag":376,"props":1290,"children":1291},{"style":635},[1292],{"type":344,"value":638},{"type":339,"tag":376,"props":1294,"children":1295},{"style":641},[1296],{"type":344,"value":895},{"type":339,"tag":376,"props":1298,"children":1299},{"style":647},[1300],{"type":344,"value":650},{"type":339,"tag":376,"props":1302,"children":1303},{"style":597},[1304],{"type":344,"value":716},{"type":339,"tag":376,"props":1306,"children":1307},{"style":614},[1308],{"type":344,"value":660},{"type":339,"tag":376,"props":1310,"children":1311},{"style":663},[1312],{"type":344,"value":666},{"type":339,"tag":376,"props":1314,"children":1315},{"style":614},[1316],{"type":344,"value":671},{"type":339,"tag":376,"props":1318,"children":1319},{"style":647},[1320],{"type":344,"value":650},{"type":339,"tag":376,"props":1322,"children":1323},{"style":597},[1324],{"type":344,"value":1325},"trim",{"type":339,"tag":376,"props":1327,"children":1328},{"style":614},[1329],{"type":344,"value":707},{"type":339,"tag":376,"props":1331,"children":1332},{"style":731},[1333],{"type":344,"value":734},{"type":339,"tag":376,"props":1335,"children":1337},{"class":378,"line":1336},21,[1338,1342],{"type":339,"tag":376,"props":1339,"children":1340},{"style":614},[1341],{"type":344,"value":743},{"type":339,"tag":376,"props":1343,"children":1344},{"style":731},[1345],{"type":344,"value":734},{"type":339,"tag":1347,"props":1348,"children":1349},"style",{},[1350],{"type":344,"value":1351},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":332,"searchDepth":587,"depth":587,"links":1353},[1354,1355],{"id":501,"depth":388,"text":501},{"id":506,"depth":388,"text":506,"children":1356},[1357,1358],{"id":512,"depth":425,"text":512},{"id":750,"depth":425,"text":750},"markdown","content:2.code:1.algorithm:3.leetcode:151.reverse-words-in-a-string.md","content","2.code/1.algorithm/3.leetcode/151.reverse-words-in-a-string.md","md",[1365,1367],{"_path":178,"title":177,"description":1366},"请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：",{"_path":184,"title":183,"description":1368},"已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：",1712330888755]