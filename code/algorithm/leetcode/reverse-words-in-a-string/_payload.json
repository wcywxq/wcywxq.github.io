[{"data":1,"prerenderedAt":1387},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/reverse-words-in-a-string":347,"/code/algorithm/leetcode/reverse-words-in-a-string-surround":1382},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319,341,344],{"title":320,"_path":321,"children":322},"Promise","/code/scene/promise",[323,326,329,332,335,338],{"title":324,"_path":325},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":327,"_path":328},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":330,"_path":331},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":333,"_path":334},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":336,"_path":337},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":339,"_path":340},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":342,"_path":343},"lodash.get","/code/scene/lodash-get",{"title":345,"_path":346},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":181,"_dir":348,"_draft":349,"_partial":349,"_locale":350,"title":180,"description":351,"url":352,"body":353,"_type":1377,"_id":1378,"_source":1379,"_file":1380,"_extension":1381},"leetcode",false,"","给你一个字符串 s ，请你反转字符串中 单词 的顺序。","https://leetcode.cn/problems/reverse-words-in-a-string",{"type":354,"children":355,"toc":1370},"root",[356,363,368,373,378,383,413,418,450,455,486,491,511,516,522,527,533,766,771,1364],{"type":357,"tag":358,"props":359,"children":360},"element","p",{},[361],{"type":362,"value":351},"text",{"type":357,"tag":358,"props":364,"children":365},{},[366],{"type":362,"value":367},"单词 是由非空格字符组成的字符串。s 中使用至少一个空格将字符串中的 单词 分隔开。",{"type":357,"tag":358,"props":369,"children":370},{},[371],{"type":362,"value":372},"返回 单词 顺序颠倒且 单词 之间用单个空格连接的结果字符串。",{"type":357,"tag":358,"props":374,"children":375},{},[376],{"type":362,"value":377},"注意：输入字符串 s 中可能会存在前导空格、尾随空格或者单词间的多个空格。返回的结果字符串中，单词间应当仅用单个空格分隔，且不包含任何额外的空格。",{"type":357,"tag":358,"props":379,"children":380},{},[381],{"type":362,"value":382},"示例 1：",{"type":357,"tag":384,"props":385,"children":388},"pre",{"className":386,"code":387,"language":362,"meta":350,"style":350},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：s = \"the sky is blue\"\n输出：\"blue is sky the\"\n",[389],{"type":357,"tag":390,"props":391,"children":392},"code",{"__ignoreMap":350},[393,404],{"type":357,"tag":394,"props":395,"children":398},"span",{"class":396,"line":397},"line",1,[399],{"type":357,"tag":394,"props":400,"children":401},{},[402],{"type":362,"value":403},"输入：s = \"the sky is blue\"\n",{"type":357,"tag":394,"props":405,"children":407},{"class":396,"line":406},2,[408],{"type":357,"tag":394,"props":409,"children":410},{},[411],{"type":362,"value":412},"输出：\"blue is sky the\"\n",{"type":357,"tag":358,"props":414,"children":415},{},[416],{"type":362,"value":417},"示例 2：",{"type":357,"tag":384,"props":419,"children":421},{"className":386,"code":420,"language":362,"meta":350,"style":350},"输入：s = \" hello world \"\n输出：\"world hello\"\n解释：反转后的字符串中不能存在前导空格和尾随空格。\n",[422],{"type":357,"tag":390,"props":423,"children":424},{"__ignoreMap":350},[425,433,441],{"type":357,"tag":394,"props":426,"children":427},{"class":396,"line":397},[428],{"type":357,"tag":394,"props":429,"children":430},{},[431],{"type":362,"value":432},"输入：s = \" hello world \"\n",{"type":357,"tag":394,"props":434,"children":435},{"class":396,"line":406},[436],{"type":357,"tag":394,"props":437,"children":438},{},[439],{"type":362,"value":440},"输出：\"world hello\"\n",{"type":357,"tag":394,"props":442,"children":444},{"class":396,"line":443},3,[445],{"type":357,"tag":394,"props":446,"children":447},{},[448],{"type":362,"value":449},"解释：反转后的字符串中不能存在前导空格和尾随空格。\n",{"type":357,"tag":358,"props":451,"children":452},{},[453],{"type":362,"value":454},"示例 3：",{"type":357,"tag":384,"props":456,"children":458},{"className":386,"code":457,"language":362,"meta":350,"style":350},"输入：s = \"a good example\"\n输出：\"example good a\"\n解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",[459],{"type":357,"tag":390,"props":460,"children":461},{"__ignoreMap":350},[462,470,478],{"type":357,"tag":394,"props":463,"children":464},{"class":396,"line":397},[465],{"type":357,"tag":394,"props":466,"children":467},{},[468],{"type":362,"value":469},"输入：s = \"a good example\"\n",{"type":357,"tag":394,"props":471,"children":472},{"class":396,"line":406},[473],{"type":357,"tag":394,"props":474,"children":475},{},[476],{"type":362,"value":477},"输出：\"example good a\"\n",{"type":357,"tag":394,"props":479,"children":480},{"class":396,"line":443},[481],{"type":357,"tag":394,"props":482,"children":483},{},[484],{"type":362,"value":485},"解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",{"type":357,"tag":358,"props":487,"children":488},{},[489],{"type":362,"value":490},"提示：",{"type":357,"tag":492,"props":493,"children":494},"ul",{},[495,501,506],{"type":357,"tag":496,"props":497,"children":498},"li",{},[499],{"type":362,"value":500},"1 \u003C= s.length \u003C= 10^4",{"type":357,"tag":496,"props":502,"children":503},{},[504],{"type":362,"value":505},"s 包含英文大小写字母、数字和空格 ' '",{"type":357,"tag":496,"props":507,"children":508},{},[509],{"type":362,"value":510},"s 中 至少存在一个 单词",{"type":357,"tag":358,"props":512,"children":513},{},[514],{"type":362,"value":515},"进阶：如果字符串在你使用的编程语言中是一种可变数据类型，请尝试使用 O(1) 额外空间复杂度的 原地 解法。",{"type":357,"tag":517,"props":518,"children":520},"h2",{"id":519},"解题思路",[521],{"type":362,"value":519},{"type":357,"tag":517,"props":523,"children":525},{"id":524},"实现",[526],{"type":362,"value":524},{"type":357,"tag":528,"props":529,"children":531},"h3",{"id":530},"语言特性",[532],{"type":362,"value":530},{"type":357,"tag":384,"props":534,"children":538},{"className":535,"code":536,"language":537,"meta":350,"style":350},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  return s.split(\" \").filter(Boolean).reverse().join(\" \");\n};\n","js",[539],{"type":357,"tag":390,"props":540,"children":541},{"__ignoreMap":350},[542,551,577,594,603,647,753],{"type":357,"tag":394,"props":543,"children":544},{"class":396,"line":397},[545],{"type":357,"tag":394,"props":546,"children":548},{"style":547},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[549],{"type":362,"value":550},"/**\n",{"type":357,"tag":394,"props":552,"children":553},{"class":396,"line":406},[554,559,565,571],{"type":357,"tag":394,"props":555,"children":556},{"style":547},[557],{"type":362,"value":558}," * ",{"type":357,"tag":394,"props":560,"children":562},{"style":561},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[563],{"type":362,"value":564},"@param",{"type":357,"tag":394,"props":566,"children":568},{"style":567},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[569],{"type":362,"value":570}," {string}",{"type":357,"tag":394,"props":572,"children":574},{"style":573},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[575],{"type":362,"value":576}," s\n",{"type":357,"tag":394,"props":578,"children":579},{"class":396,"line":443},[580,584,589],{"type":357,"tag":394,"props":581,"children":582},{"style":547},[583],{"type":362,"value":558},{"type":357,"tag":394,"props":585,"children":586},{"style":561},[587],{"type":362,"value":588},"@return",{"type":357,"tag":394,"props":590,"children":591},{"style":567},[592],{"type":362,"value":593}," {string}\n",{"type":357,"tag":394,"props":595,"children":597},{"class":396,"line":596},4,[598],{"type":357,"tag":394,"props":599,"children":600},{"style":547},[601],{"type":362,"value":602}," */\n",{"type":357,"tag":394,"props":604,"children":606},{"class":396,"line":605},5,[607,613,619,625,630,636,642],{"type":357,"tag":394,"props":608,"children":610},{"style":609},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[611],{"type":362,"value":612},"var",{"type":357,"tag":394,"props":614,"children":616},{"style":615},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[617],{"type":362,"value":618}," reverseWords",{"type":357,"tag":394,"props":620,"children":622},{"style":621},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[623],{"type":362,"value":624}," =",{"type":357,"tag":394,"props":626,"children":627},{"style":609},[628],{"type":362,"value":629}," function",{"type":357,"tag":394,"props":631,"children":633},{"style":632},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[634],{"type":362,"value":635}," (",{"type":357,"tag":394,"props":637,"children":639},{"style":638},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[640],{"type":362,"value":641},"s",{"type":357,"tag":394,"props":643,"children":644},{"style":632},[645],{"type":362,"value":646},") {\n",{"type":357,"tag":394,"props":648,"children":650},{"class":396,"line":649},6,[651,657,663,669,674,679,685,690,694,699,703,708,712,716,721,726,730,735,739,743,747],{"type":357,"tag":394,"props":652,"children":654},{"style":653},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[655],{"type":362,"value":656},"  return",{"type":357,"tag":394,"props":658,"children":660},{"style":659},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[661],{"type":362,"value":662}," s",{"type":357,"tag":394,"props":664,"children":666},{"style":665},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[667],{"type":362,"value":668},".",{"type":357,"tag":394,"props":670,"children":671},{"style":615},[672],{"type":362,"value":673},"split",{"type":357,"tag":394,"props":675,"children":676},{"style":632},[677],{"type":362,"value":678},"(",{"type":357,"tag":394,"props":680,"children":682},{"style":681},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[683],{"type":362,"value":684},"\" \"",{"type":357,"tag":394,"props":686,"children":687},{"style":632},[688],{"type":362,"value":689},")",{"type":357,"tag":394,"props":691,"children":692},{"style":665},[693],{"type":362,"value":668},{"type":357,"tag":394,"props":695,"children":696},{"style":615},[697],{"type":362,"value":698},"filter",{"type":357,"tag":394,"props":700,"children":701},{"style":632},[702],{"type":362,"value":678},{"type":357,"tag":394,"props":704,"children":705},{"style":659},[706],{"type":362,"value":707},"Boolean",{"type":357,"tag":394,"props":709,"children":710},{"style":632},[711],{"type":362,"value":689},{"type":357,"tag":394,"props":713,"children":714},{"style":665},[715],{"type":362,"value":668},{"type":357,"tag":394,"props":717,"children":718},{"style":615},[719],{"type":362,"value":720},"reverse",{"type":357,"tag":394,"props":722,"children":723},{"style":632},[724],{"type":362,"value":725},"()",{"type":357,"tag":394,"props":727,"children":728},{"style":665},[729],{"type":362,"value":668},{"type":357,"tag":394,"props":731,"children":732},{"style":615},[733],{"type":362,"value":734},"join",{"type":357,"tag":394,"props":736,"children":737},{"style":632},[738],{"type":362,"value":678},{"type":357,"tag":394,"props":740,"children":741},{"style":681},[742],{"type":362,"value":684},{"type":357,"tag":394,"props":744,"children":745},{"style":632},[746],{"type":362,"value":689},{"type":357,"tag":394,"props":748,"children":750},{"style":749},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[751],{"type":362,"value":752},";\n",{"type":357,"tag":394,"props":754,"children":756},{"class":396,"line":755},7,[757,762],{"type":357,"tag":394,"props":758,"children":759},{"style":632},[760],{"type":362,"value":761},"}",{"type":357,"tag":394,"props":763,"children":764},{"style":749},[765],{"type":362,"value":752},{"type":357,"tag":528,"props":767,"children":769},{"id":768},"双指针",[770],{"type":362,"value":768},{"type":357,"tag":384,"props":772,"children":774},{"className":535,"code":773,"language":537,"meta":350,"style":350},"/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  // 倒序遍历字符串\n  // 1. 索引 i 从右向左搜索首个空格\n  // 2. 添加单词 s[i + 1, j + 1] 到 res\n  // 3. 索引 i 绕过两个单词间所有空格\n  // 4. 执行 j = i\n  let res = [];\n  let i = s.length - 1;\n  let j = i;\n  while (i >= 0) {\n    while (i >= 0 && s[i] !== \" \") i--; // 搜索首个空格\n    res.push(s.substring(i + 1, j + 1)); // 添加单词\n    while (i >= 0 && s[i] === \" \") i--; // 跳过单词间空格\n    j = i; // 指针移动，指向下个单词的尾字符\n  }\n  return res.join(\" \").trim();\n};\n",[775],{"type":357,"tag":390,"props":776,"children":777},{"__ignoreMap":350},[778,785,804,819,826,857,865,873,882,891,900,927,972,997,1029,1111,1194,1268,1294,1303,1352],{"type":357,"tag":394,"props":779,"children":780},{"class":396,"line":397},[781],{"type":357,"tag":394,"props":782,"children":783},{"style":547},[784],{"type":362,"value":550},{"type":357,"tag":394,"props":786,"children":787},{"class":396,"line":406},[788,792,796,800],{"type":357,"tag":394,"props":789,"children":790},{"style":547},[791],{"type":362,"value":558},{"type":357,"tag":394,"props":793,"children":794},{"style":561},[795],{"type":362,"value":564},{"type":357,"tag":394,"props":797,"children":798},{"style":567},[799],{"type":362,"value":570},{"type":357,"tag":394,"props":801,"children":802},{"style":573},[803],{"type":362,"value":576},{"type":357,"tag":394,"props":805,"children":806},{"class":396,"line":443},[807,811,815],{"type":357,"tag":394,"props":808,"children":809},{"style":547},[810],{"type":362,"value":558},{"type":357,"tag":394,"props":812,"children":813},{"style":561},[814],{"type":362,"value":588},{"type":357,"tag":394,"props":816,"children":817},{"style":567},[818],{"type":362,"value":593},{"type":357,"tag":394,"props":820,"children":821},{"class":396,"line":596},[822],{"type":357,"tag":394,"props":823,"children":824},{"style":547},[825],{"type":362,"value":602},{"type":357,"tag":394,"props":827,"children":828},{"class":396,"line":605},[829,833,837,841,845,849,853],{"type":357,"tag":394,"props":830,"children":831},{"style":609},[832],{"type":362,"value":612},{"type":357,"tag":394,"props":834,"children":835},{"style":615},[836],{"type":362,"value":618},{"type":357,"tag":394,"props":838,"children":839},{"style":621},[840],{"type":362,"value":624},{"type":357,"tag":394,"props":842,"children":843},{"style":609},[844],{"type":362,"value":629},{"type":357,"tag":394,"props":846,"children":847},{"style":632},[848],{"type":362,"value":635},{"type":357,"tag":394,"props":850,"children":851},{"style":638},[852],{"type":362,"value":641},{"type":357,"tag":394,"props":854,"children":855},{"style":632},[856],{"type":362,"value":646},{"type":357,"tag":394,"props":858,"children":859},{"class":396,"line":649},[860],{"type":357,"tag":394,"props":861,"children":862},{"style":547},[863],{"type":362,"value":864},"  // 倒序遍历字符串\n",{"type":357,"tag":394,"props":866,"children":867},{"class":396,"line":755},[868],{"type":357,"tag":394,"props":869,"children":870},{"style":547},[871],{"type":362,"value":872},"  // 1. 索引 i 从右向左搜索首个空格\n",{"type":357,"tag":394,"props":874,"children":876},{"class":396,"line":875},8,[877],{"type":357,"tag":394,"props":878,"children":879},{"style":547},[880],{"type":362,"value":881},"  // 2. 添加单词 s[i + 1, j + 1] 到 res\n",{"type":357,"tag":394,"props":883,"children":885},{"class":396,"line":884},9,[886],{"type":357,"tag":394,"props":887,"children":888},{"style":547},[889],{"type":362,"value":890},"  // 3. 索引 i 绕过两个单词间所有空格\n",{"type":357,"tag":394,"props":892,"children":894},{"class":396,"line":893},10,[895],{"type":357,"tag":394,"props":896,"children":897},{"style":547},[898],{"type":362,"value":899},"  // 4. 执行 j = i\n",{"type":357,"tag":394,"props":901,"children":903},{"class":396,"line":902},11,[904,909,914,918,923],{"type":357,"tag":394,"props":905,"children":906},{"style":609},[907],{"type":362,"value":908},"  let",{"type":357,"tag":394,"props":910,"children":911},{"style":659},[912],{"type":362,"value":913}," res",{"type":357,"tag":394,"props":915,"children":916},{"style":621},[917],{"type":362,"value":624},{"type":357,"tag":394,"props":919,"children":920},{"style":632},[921],{"type":362,"value":922}," []",{"type":357,"tag":394,"props":924,"children":925},{"style":749},[926],{"type":362,"value":752},{"type":357,"tag":394,"props":928,"children":930},{"class":396,"line":929},12,[931,935,940,944,948,952,957,962,968],{"type":357,"tag":394,"props":932,"children":933},{"style":609},[934],{"type":362,"value":908},{"type":357,"tag":394,"props":936,"children":937},{"style":659},[938],{"type":362,"value":939}," i",{"type":357,"tag":394,"props":941,"children":942},{"style":621},[943],{"type":362,"value":624},{"type":357,"tag":394,"props":945,"children":946},{"style":659},[947],{"type":362,"value":662},{"type":357,"tag":394,"props":949,"children":950},{"style":665},[951],{"type":362,"value":668},{"type":357,"tag":394,"props":953,"children":954},{"style":632},[955],{"type":362,"value":956},"length ",{"type":357,"tag":394,"props":958,"children":959},{"style":621},[960],{"type":362,"value":961},"-",{"type":357,"tag":394,"props":963,"children":965},{"style":964},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[966],{"type":362,"value":967}," 1",{"type":357,"tag":394,"props":969,"children":970},{"style":749},[971],{"type":362,"value":752},{"type":357,"tag":394,"props":973,"children":975},{"class":396,"line":974},13,[976,980,985,989,993],{"type":357,"tag":394,"props":977,"children":978},{"style":609},[979],{"type":362,"value":908},{"type":357,"tag":394,"props":981,"children":982},{"style":659},[983],{"type":362,"value":984}," j",{"type":357,"tag":394,"props":986,"children":987},{"style":621},[988],{"type":362,"value":624},{"type":357,"tag":394,"props":990,"children":991},{"style":659},[992],{"type":362,"value":939},{"type":357,"tag":394,"props":994,"children":995},{"style":749},[996],{"type":362,"value":752},{"type":357,"tag":394,"props":998,"children":1000},{"class":396,"line":999},14,[1001,1006,1010,1015,1020,1025],{"type":357,"tag":394,"props":1002,"children":1003},{"style":653},[1004],{"type":362,"value":1005},"  while",{"type":357,"tag":394,"props":1007,"children":1008},{"style":632},[1009],{"type":362,"value":635},{"type":357,"tag":394,"props":1011,"children":1012},{"style":659},[1013],{"type":362,"value":1014},"i",{"type":357,"tag":394,"props":1016,"children":1017},{"style":621},[1018],{"type":362,"value":1019}," >=",{"type":357,"tag":394,"props":1021,"children":1022},{"style":964},[1023],{"type":362,"value":1024}," 0",{"type":357,"tag":394,"props":1026,"children":1027},{"style":632},[1028],{"type":362,"value":646},{"type":357,"tag":394,"props":1030,"children":1032},{"class":396,"line":1031},15,[1033,1038,1042,1046,1050,1054,1059,1063,1068,1072,1077,1082,1087,1092,1096,1101,1106],{"type":357,"tag":394,"props":1034,"children":1035},{"style":653},[1036],{"type":362,"value":1037},"    while",{"type":357,"tag":394,"props":1039,"children":1040},{"style":632},[1041],{"type":362,"value":635},{"type":357,"tag":394,"props":1043,"children":1044},{"style":659},[1045],{"type":362,"value":1014},{"type":357,"tag":394,"props":1047,"children":1048},{"style":621},[1049],{"type":362,"value":1019},{"type":357,"tag":394,"props":1051,"children":1052},{"style":964},[1053],{"type":362,"value":1024},{"type":357,"tag":394,"props":1055,"children":1056},{"style":621},[1057],{"type":362,"value":1058}," &&",{"type":357,"tag":394,"props":1060,"children":1061},{"style":659},[1062],{"type":362,"value":662},{"type":357,"tag":394,"props":1064,"children":1065},{"style":632},[1066],{"type":362,"value":1067},"[",{"type":357,"tag":394,"props":1069,"children":1070},{"style":659},[1071],{"type":362,"value":1014},{"type":357,"tag":394,"props":1073,"children":1074},{"style":632},[1075],{"type":362,"value":1076},"] ",{"type":357,"tag":394,"props":1078,"children":1079},{"style":621},[1080],{"type":362,"value":1081},"!==",{"type":357,"tag":394,"props":1083,"children":1084},{"style":681},[1085],{"type":362,"value":1086}," \" \"",{"type":357,"tag":394,"props":1088,"children":1089},{"style":632},[1090],{"type":362,"value":1091},") ",{"type":357,"tag":394,"props":1093,"children":1094},{"style":659},[1095],{"type":362,"value":1014},{"type":357,"tag":394,"props":1097,"children":1098},{"style":621},[1099],{"type":362,"value":1100},"--",{"type":357,"tag":394,"props":1102,"children":1103},{"style":749},[1104],{"type":362,"value":1105},";",{"type":357,"tag":394,"props":1107,"children":1108},{"style":547},[1109],{"type":362,"value":1110}," // 搜索首个空格\n",{"type":357,"tag":394,"props":1112,"children":1114},{"class":396,"line":1113},16,[1115,1120,1124,1129,1133,1137,1141,1146,1150,1154,1159,1163,1168,1172,1176,1180,1185,1189],{"type":357,"tag":394,"props":1116,"children":1117},{"style":659},[1118],{"type":362,"value":1119},"    res",{"type":357,"tag":394,"props":1121,"children":1122},{"style":665},[1123],{"type":362,"value":668},{"type":357,"tag":394,"props":1125,"children":1126},{"style":615},[1127],{"type":362,"value":1128},"push",{"type":357,"tag":394,"props":1130,"children":1131},{"style":632},[1132],{"type":362,"value":678},{"type":357,"tag":394,"props":1134,"children":1135},{"style":659},[1136],{"type":362,"value":641},{"type":357,"tag":394,"props":1138,"children":1139},{"style":665},[1140],{"type":362,"value":668},{"type":357,"tag":394,"props":1142,"children":1143},{"style":615},[1144],{"type":362,"value":1145},"substring",{"type":357,"tag":394,"props":1147,"children":1148},{"style":632},[1149],{"type":362,"value":678},{"type":357,"tag":394,"props":1151,"children":1152},{"style":659},[1153],{"type":362,"value":1014},{"type":357,"tag":394,"props":1155,"children":1156},{"style":621},[1157],{"type":362,"value":1158}," +",{"type":357,"tag":394,"props":1160,"children":1161},{"style":964},[1162],{"type":362,"value":967},{"type":357,"tag":394,"props":1164,"children":1165},{"style":749},[1166],{"type":362,"value":1167},",",{"type":357,"tag":394,"props":1169,"children":1170},{"style":659},[1171],{"type":362,"value":984},{"type":357,"tag":394,"props":1173,"children":1174},{"style":621},[1175],{"type":362,"value":1158},{"type":357,"tag":394,"props":1177,"children":1178},{"style":964},[1179],{"type":362,"value":967},{"type":357,"tag":394,"props":1181,"children":1182},{"style":632},[1183],{"type":362,"value":1184},"))",{"type":357,"tag":394,"props":1186,"children":1187},{"style":749},[1188],{"type":362,"value":1105},{"type":357,"tag":394,"props":1190,"children":1191},{"style":547},[1192],{"type":362,"value":1193}," // 添加单词\n",{"type":357,"tag":394,"props":1195,"children":1197},{"class":396,"line":1196},17,[1198,1202,1206,1210,1214,1218,1222,1226,1230,1234,1238,1243,1247,1251,1255,1259,1263],{"type":357,"tag":394,"props":1199,"children":1200},{"style":653},[1201],{"type":362,"value":1037},{"type":357,"tag":394,"props":1203,"children":1204},{"style":632},[1205],{"type":362,"value":635},{"type":357,"tag":394,"props":1207,"children":1208},{"style":659},[1209],{"type":362,"value":1014},{"type":357,"tag":394,"props":1211,"children":1212},{"style":621},[1213],{"type":362,"value":1019},{"type":357,"tag":394,"props":1215,"children":1216},{"style":964},[1217],{"type":362,"value":1024},{"type":357,"tag":394,"props":1219,"children":1220},{"style":621},[1221],{"type":362,"value":1058},{"type":357,"tag":394,"props":1223,"children":1224},{"style":659},[1225],{"type":362,"value":662},{"type":357,"tag":394,"props":1227,"children":1228},{"style":632},[1229],{"type":362,"value":1067},{"type":357,"tag":394,"props":1231,"children":1232},{"style":659},[1233],{"type":362,"value":1014},{"type":357,"tag":394,"props":1235,"children":1236},{"style":632},[1237],{"type":362,"value":1076},{"type":357,"tag":394,"props":1239,"children":1240},{"style":621},[1241],{"type":362,"value":1242},"===",{"type":357,"tag":394,"props":1244,"children":1245},{"style":681},[1246],{"type":362,"value":1086},{"type":357,"tag":394,"props":1248,"children":1249},{"style":632},[1250],{"type":362,"value":1091},{"type":357,"tag":394,"props":1252,"children":1253},{"style":659},[1254],{"type":362,"value":1014},{"type":357,"tag":394,"props":1256,"children":1257},{"style":621},[1258],{"type":362,"value":1100},{"type":357,"tag":394,"props":1260,"children":1261},{"style":749},[1262],{"type":362,"value":1105},{"type":357,"tag":394,"props":1264,"children":1265},{"style":547},[1266],{"type":362,"value":1267}," // 跳过单词间空格\n",{"type":357,"tag":394,"props":1269,"children":1271},{"class":396,"line":1270},18,[1272,1277,1281,1285,1289],{"type":357,"tag":394,"props":1273,"children":1274},{"style":659},[1275],{"type":362,"value":1276},"    j",{"type":357,"tag":394,"props":1278,"children":1279},{"style":621},[1280],{"type":362,"value":624},{"type":357,"tag":394,"props":1282,"children":1283},{"style":659},[1284],{"type":362,"value":939},{"type":357,"tag":394,"props":1286,"children":1287},{"style":749},[1288],{"type":362,"value":1105},{"type":357,"tag":394,"props":1290,"children":1291},{"style":547},[1292],{"type":362,"value":1293}," // 指针移动，指向下个单词的尾字符\n",{"type":357,"tag":394,"props":1295,"children":1297},{"class":396,"line":1296},19,[1298],{"type":357,"tag":394,"props":1299,"children":1300},{"style":632},[1301],{"type":362,"value":1302},"  }\n",{"type":357,"tag":394,"props":1304,"children":1306},{"class":396,"line":1305},20,[1307,1311,1315,1319,1323,1327,1331,1335,1339,1344,1348],{"type":357,"tag":394,"props":1308,"children":1309},{"style":653},[1310],{"type":362,"value":656},{"type":357,"tag":394,"props":1312,"children":1313},{"style":659},[1314],{"type":362,"value":913},{"type":357,"tag":394,"props":1316,"children":1317},{"style":665},[1318],{"type":362,"value":668},{"type":357,"tag":394,"props":1320,"children":1321},{"style":615},[1322],{"type":362,"value":734},{"type":357,"tag":394,"props":1324,"children":1325},{"style":632},[1326],{"type":362,"value":678},{"type":357,"tag":394,"props":1328,"children":1329},{"style":681},[1330],{"type":362,"value":684},{"type":357,"tag":394,"props":1332,"children":1333},{"style":632},[1334],{"type":362,"value":689},{"type":357,"tag":394,"props":1336,"children":1337},{"style":665},[1338],{"type":362,"value":668},{"type":357,"tag":394,"props":1340,"children":1341},{"style":615},[1342],{"type":362,"value":1343},"trim",{"type":357,"tag":394,"props":1345,"children":1346},{"style":632},[1347],{"type":362,"value":725},{"type":357,"tag":394,"props":1349,"children":1350},{"style":749},[1351],{"type":362,"value":752},{"type":357,"tag":394,"props":1353,"children":1355},{"class":396,"line":1354},21,[1356,1360],{"type":357,"tag":394,"props":1357,"children":1358},{"style":632},[1359],{"type":362,"value":761},{"type":357,"tag":394,"props":1361,"children":1362},{"style":749},[1363],{"type":362,"value":752},{"type":357,"tag":1365,"props":1366,"children":1367},"style",{},[1368],{"type":362,"value":1369},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":350,"searchDepth":605,"depth":605,"links":1371},[1372,1373],{"id":519,"depth":406,"text":519},{"id":524,"depth":406,"text":524,"children":1374},[1375,1376],{"id":530,"depth":443,"text":530},{"id":768,"depth":443,"text":768},"markdown","content:2.code:1.algorithm:3.leetcode:151.reverse-words-in-a-string.md","content","2.code/1.algorithm/3.leetcode/151.reverse-words-in-a-string.md","md",[1383,1385],{"_path":178,"title":177,"description":1384},"请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：",{"_path":184,"title":183,"description":1386},"已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：",1712581263576]