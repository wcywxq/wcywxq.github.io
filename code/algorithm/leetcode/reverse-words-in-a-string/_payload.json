[{"data":1,"prerenderedAt":1360},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/reverse-words-in-a-string":320,"/code/algorithm/leetcode/reverse-words-in-a-string-surround":1355},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,264,313],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,53],{"title":41,"_path":42,"children":43},"剑指 offer","/code/algorithm/sword-ofter",[44,47,50],{"title":45,"_path":46},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":48,"_path":49},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":51,"_path":52},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":54,"_path":55,"children":56},"力扣 leetCode","/code/algorithm/leetcode",[57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261],{"title":58,"_path":59},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":61,"_path":62},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":64,"_path":65},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":67,"_path":68},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":70,"_path":71},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":73,"_path":74},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":76,"_path":77},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":79,"_path":80},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":82,"_path":83},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":85,"_path":86},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":88,"_path":89},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":91,"_path":92},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":94,"_path":95},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":97,"_path":98},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":100,"_path":101},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":103,"_path":104},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":106,"_path":107},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":109,"_path":110},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":112,"_path":113},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":115,"_path":116},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":118,"_path":119},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":121,"_path":122},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":124,"_path":125},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":127,"_path":128},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":130,"_path":131},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":133,"_path":134},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":136,"_path":137},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":139,"_path":140},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":142,"_path":143},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":145,"_path":146},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":148,"_path":149},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":151,"_path":152},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":154,"_path":155},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":157,"_path":158},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":160,"_path":161},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":163,"_path":164},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":166,"_path":167},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":169,"_path":170},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":172,"_path":173},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":175,"_path":176},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":178,"_path":179},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":181,"_path":182},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":184,"_path":185},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":187,"_path":188},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":190,"_path":191},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":193,"_path":194},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":196,"_path":197},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":199,"_path":200},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":202,"_path":203},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":205,"_path":206},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":208,"_path":209},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":211,"_path":212},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":214,"_path":215},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":217,"_path":218},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":220,"_path":221},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":223,"_path":224},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":226,"_path":227},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":229,"_path":230},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":232,"_path":233},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":235,"_path":236},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":238,"_path":239},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":241,"_path":242},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":244,"_path":245},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":247,"_path":248},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":250,"_path":251},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":253,"_path":254},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":256,"_path":257},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":259,"_path":260},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":262,"_path":263},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":265,"_path":266,"children":267},"源码实现","/code/source",[268,293,306],{"title":269,"_path":270,"children":271},"原生 api","/code/source/native-api",[272,275,278,281,284,287,290],{"title":273,"_path":274},"ajax","/code/source/native-api/ajax",{"title":276,"_path":277},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":279,"_path":280},"new 操作符","/code/source/native-api/new",{"title":282,"_path":283},"instanceof 关键字","/code/source/native-api/instanceof",{"title":285,"_path":286},"定时器","/code/source/native-api/timer",{"title":288,"_path":289},"JSON.stringify","/code/source/native-api/json-stringify",{"title":291,"_path":292},"Iterator 迭代器","/code/source/native-api/iterator",{"title":294,"_path":295,"children":296},"数组 Array","/code/source/array",[297,300,303],{"title":298,"_path":299},"数组去重","/code/source/array/remove-duplicate",{"title":301,"_path":302},"数组扁平化","/code/source/array/flat",{"title":304,"_path":305},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":307,"_path":308,"children":309},"字符串 String","/code/source/string",[310],{"title":311,"_path":312},"repeat()","/code/source/string/repeat",{"title":314,"_path":315,"children":316},"业务场景","/code/scene",[317],{"title":318,"_path":319},"顺序打印 url 并支持 retry","/code/scene/promise-url-retry",{"_path":179,"_dir":321,"_draft":322,"_partial":322,"_locale":323,"title":178,"description":324,"url":325,"body":326,"_type":1350,"_id":1351,"_source":1352,"_file":1353,"_extension":1354},"leetcode",false,"","给你一个字符串 s ，请你反转字符串中 单词 的顺序。","https://leetcode.cn/problems/reverse-words-in-a-string",{"type":327,"children":328,"toc":1343},"root",[329,336,341,346,351,356,386,391,423,428,459,464,484,489,495,500,506,739,744,1337],{"type":330,"tag":331,"props":332,"children":333},"element","p",{},[334],{"type":335,"value":324},"text",{"type":330,"tag":331,"props":337,"children":338},{},[339],{"type":335,"value":340},"单词 是由非空格字符组成的字符串。s 中使用至少一个空格将字符串中的 单词 分隔开。",{"type":330,"tag":331,"props":342,"children":343},{},[344],{"type":335,"value":345},"返回 单词 顺序颠倒且 单词 之间用单个空格连接的结果字符串。",{"type":330,"tag":331,"props":347,"children":348},{},[349],{"type":335,"value":350},"注意：输入字符串 s 中可能会存在前导空格、尾随空格或者单词间的多个空格。返回的结果字符串中，单词间应当仅用单个空格分隔，且不包含任何额外的空格。",{"type":330,"tag":331,"props":352,"children":353},{},[354],{"type":335,"value":355},"示例 1：",{"type":330,"tag":357,"props":358,"children":361},"pre",{"className":359,"code":360,"language":335,"meta":323,"style":323},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：s = \"the sky is blue\"\n输出：\"blue is sky the\"\n",[362],{"type":330,"tag":363,"props":364,"children":365},"code",{"__ignoreMap":323},[366,377],{"type":330,"tag":367,"props":368,"children":371},"span",{"class":369,"line":370},"line",1,[372],{"type":330,"tag":367,"props":373,"children":374},{},[375],{"type":335,"value":376},"输入：s = \"the sky is blue\"\n",{"type":330,"tag":367,"props":378,"children":380},{"class":369,"line":379},2,[381],{"type":330,"tag":367,"props":382,"children":383},{},[384],{"type":335,"value":385},"输出：\"blue is sky the\"\n",{"type":330,"tag":331,"props":387,"children":388},{},[389],{"type":335,"value":390},"示例 2：",{"type":330,"tag":357,"props":392,"children":394},{"className":359,"code":393,"language":335,"meta":323,"style":323},"输入：s = \" hello world \"\n输出：\"world hello\"\n解释：反转后的字符串中不能存在前导空格和尾随空格。\n",[395],{"type":330,"tag":363,"props":396,"children":397},{"__ignoreMap":323},[398,406,414],{"type":330,"tag":367,"props":399,"children":400},{"class":369,"line":370},[401],{"type":330,"tag":367,"props":402,"children":403},{},[404],{"type":335,"value":405},"输入：s = \" hello world \"\n",{"type":330,"tag":367,"props":407,"children":408},{"class":369,"line":379},[409],{"type":330,"tag":367,"props":410,"children":411},{},[412],{"type":335,"value":413},"输出：\"world hello\"\n",{"type":330,"tag":367,"props":415,"children":417},{"class":369,"line":416},3,[418],{"type":330,"tag":367,"props":419,"children":420},{},[421],{"type":335,"value":422},"解释：反转后的字符串中不能存在前导空格和尾随空格。\n",{"type":330,"tag":331,"props":424,"children":425},{},[426],{"type":335,"value":427},"示例 3：",{"type":330,"tag":357,"props":429,"children":431},{"className":359,"code":430,"language":335,"meta":323,"style":323},"输入：s = \"a good example\"\n输出：\"example good a\"\n解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",[432],{"type":330,"tag":363,"props":433,"children":434},{"__ignoreMap":323},[435,443,451],{"type":330,"tag":367,"props":436,"children":437},{"class":369,"line":370},[438],{"type":330,"tag":367,"props":439,"children":440},{},[441],{"type":335,"value":442},"输入：s = \"a good example\"\n",{"type":330,"tag":367,"props":444,"children":445},{"class":369,"line":379},[446],{"type":330,"tag":367,"props":447,"children":448},{},[449],{"type":335,"value":450},"输出：\"example good a\"\n",{"type":330,"tag":367,"props":452,"children":453},{"class":369,"line":416},[454],{"type":330,"tag":367,"props":455,"children":456},{},[457],{"type":335,"value":458},"解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",{"type":330,"tag":331,"props":460,"children":461},{},[462],{"type":335,"value":463},"提示：",{"type":330,"tag":465,"props":466,"children":467},"ul",{},[468,474,479],{"type":330,"tag":469,"props":470,"children":471},"li",{},[472],{"type":335,"value":473},"1 \u003C= s.length \u003C= 10^4",{"type":330,"tag":469,"props":475,"children":476},{},[477],{"type":335,"value":478},"s 包含英文大小写字母、数字和空格 ' '",{"type":330,"tag":469,"props":480,"children":481},{},[482],{"type":335,"value":483},"s 中 至少存在一个 单词",{"type":330,"tag":331,"props":485,"children":486},{},[487],{"type":335,"value":488},"进阶：如果字符串在你使用的编程语言中是一种可变数据类型，请尝试使用 O(1) 额外空间复杂度的 原地 解法。",{"type":330,"tag":490,"props":491,"children":493},"h2",{"id":492},"解题思路",[494],{"type":335,"value":492},{"type":330,"tag":490,"props":496,"children":498},{"id":497},"实现",[499],{"type":335,"value":497},{"type":330,"tag":501,"props":502,"children":504},"h3",{"id":503},"语言特性",[505],{"type":335,"value":503},{"type":330,"tag":357,"props":507,"children":511},{"className":508,"code":509,"language":510,"meta":323,"style":323},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  return s.split(\" \").filter(Boolean).reverse().join(\" \");\n};\n","js",[512],{"type":330,"tag":363,"props":513,"children":514},{"__ignoreMap":323},[515,524,550,567,576,620,726],{"type":330,"tag":367,"props":516,"children":517},{"class":369,"line":370},[518],{"type":330,"tag":367,"props":519,"children":521},{"style":520},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[522],{"type":335,"value":523},"/**\n",{"type":330,"tag":367,"props":525,"children":526},{"class":369,"line":379},[527,532,538,544],{"type":330,"tag":367,"props":528,"children":529},{"style":520},[530],{"type":335,"value":531}," * ",{"type":330,"tag":367,"props":533,"children":535},{"style":534},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[536],{"type":335,"value":537},"@param",{"type":330,"tag":367,"props":539,"children":541},{"style":540},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[542],{"type":335,"value":543}," {string}",{"type":330,"tag":367,"props":545,"children":547},{"style":546},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[548],{"type":335,"value":549}," s\n",{"type":330,"tag":367,"props":551,"children":552},{"class":369,"line":416},[553,557,562],{"type":330,"tag":367,"props":554,"children":555},{"style":520},[556],{"type":335,"value":531},{"type":330,"tag":367,"props":558,"children":559},{"style":534},[560],{"type":335,"value":561},"@return",{"type":330,"tag":367,"props":563,"children":564},{"style":540},[565],{"type":335,"value":566}," {string}\n",{"type":330,"tag":367,"props":568,"children":570},{"class":369,"line":569},4,[571],{"type":330,"tag":367,"props":572,"children":573},{"style":520},[574],{"type":335,"value":575}," */\n",{"type":330,"tag":367,"props":577,"children":579},{"class":369,"line":578},5,[580,586,592,598,603,609,615],{"type":330,"tag":367,"props":581,"children":583},{"style":582},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[584],{"type":335,"value":585},"var",{"type":330,"tag":367,"props":587,"children":589},{"style":588},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[590],{"type":335,"value":591}," reverseWords",{"type":330,"tag":367,"props":593,"children":595},{"style":594},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[596],{"type":335,"value":597}," =",{"type":330,"tag":367,"props":599,"children":600},{"style":582},[601],{"type":335,"value":602}," function",{"type":330,"tag":367,"props":604,"children":606},{"style":605},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[607],{"type":335,"value":608}," (",{"type":330,"tag":367,"props":610,"children":612},{"style":611},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[613],{"type":335,"value":614},"s",{"type":330,"tag":367,"props":616,"children":617},{"style":605},[618],{"type":335,"value":619},") {\n",{"type":330,"tag":367,"props":621,"children":623},{"class":369,"line":622},6,[624,630,636,642,647,652,658,663,667,672,676,681,685,689,694,699,703,708,712,716,720],{"type":330,"tag":367,"props":625,"children":627},{"style":626},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[628],{"type":335,"value":629},"  return",{"type":330,"tag":367,"props":631,"children":633},{"style":632},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[634],{"type":335,"value":635}," s",{"type":330,"tag":367,"props":637,"children":639},{"style":638},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[640],{"type":335,"value":641},".",{"type":330,"tag":367,"props":643,"children":644},{"style":588},[645],{"type":335,"value":646},"split",{"type":330,"tag":367,"props":648,"children":649},{"style":605},[650],{"type":335,"value":651},"(",{"type":330,"tag":367,"props":653,"children":655},{"style":654},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[656],{"type":335,"value":657},"\" \"",{"type":330,"tag":367,"props":659,"children":660},{"style":605},[661],{"type":335,"value":662},")",{"type":330,"tag":367,"props":664,"children":665},{"style":638},[666],{"type":335,"value":641},{"type":330,"tag":367,"props":668,"children":669},{"style":588},[670],{"type":335,"value":671},"filter",{"type":330,"tag":367,"props":673,"children":674},{"style":605},[675],{"type":335,"value":651},{"type":330,"tag":367,"props":677,"children":678},{"style":632},[679],{"type":335,"value":680},"Boolean",{"type":330,"tag":367,"props":682,"children":683},{"style":605},[684],{"type":335,"value":662},{"type":330,"tag":367,"props":686,"children":687},{"style":638},[688],{"type":335,"value":641},{"type":330,"tag":367,"props":690,"children":691},{"style":588},[692],{"type":335,"value":693},"reverse",{"type":330,"tag":367,"props":695,"children":696},{"style":605},[697],{"type":335,"value":698},"()",{"type":330,"tag":367,"props":700,"children":701},{"style":638},[702],{"type":335,"value":641},{"type":330,"tag":367,"props":704,"children":705},{"style":588},[706],{"type":335,"value":707},"join",{"type":330,"tag":367,"props":709,"children":710},{"style":605},[711],{"type":335,"value":651},{"type":330,"tag":367,"props":713,"children":714},{"style":654},[715],{"type":335,"value":657},{"type":330,"tag":367,"props":717,"children":718},{"style":605},[719],{"type":335,"value":662},{"type":330,"tag":367,"props":721,"children":723},{"style":722},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[724],{"type":335,"value":725},";\n",{"type":330,"tag":367,"props":727,"children":729},{"class":369,"line":728},7,[730,735],{"type":330,"tag":367,"props":731,"children":732},{"style":605},[733],{"type":335,"value":734},"}",{"type":330,"tag":367,"props":736,"children":737},{"style":722},[738],{"type":335,"value":725},{"type":330,"tag":501,"props":740,"children":742},{"id":741},"双指针",[743],{"type":335,"value":741},{"type":330,"tag":357,"props":745,"children":747},{"className":508,"code":746,"language":510,"meta":323,"style":323},"/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  // 倒序遍历字符串\n  // 1. 索引 i 从右向左搜索首个空格\n  // 2. 添加单词 s[i + 1, j + 1] 到 res\n  // 3. 索引 i 绕过两个单词间所有空格\n  // 4. 执行 j = i\n  let res = [];\n  let i = s.length - 1;\n  let j = i;\n  while (i >= 0) {\n    while (i >= 0 && s[i] !== \" \") i--; // 搜索首个空格\n    res.push(s.substring(i + 1, j + 1)); // 添加单词\n    while (i >= 0 && s[i] === \" \") i--; // 跳过单词间空格\n    j = i; // 指针移动，指向下个单词的尾字符\n  }\n  return res.join(\" \").trim();\n};\n",[748],{"type":330,"tag":363,"props":749,"children":750},{"__ignoreMap":323},[751,758,777,792,799,830,838,846,855,864,873,900,945,970,1002,1084,1167,1241,1267,1276,1325],{"type":330,"tag":367,"props":752,"children":753},{"class":369,"line":370},[754],{"type":330,"tag":367,"props":755,"children":756},{"style":520},[757],{"type":335,"value":523},{"type":330,"tag":367,"props":759,"children":760},{"class":369,"line":379},[761,765,769,773],{"type":330,"tag":367,"props":762,"children":763},{"style":520},[764],{"type":335,"value":531},{"type":330,"tag":367,"props":766,"children":767},{"style":534},[768],{"type":335,"value":537},{"type":330,"tag":367,"props":770,"children":771},{"style":540},[772],{"type":335,"value":543},{"type":330,"tag":367,"props":774,"children":775},{"style":546},[776],{"type":335,"value":549},{"type":330,"tag":367,"props":778,"children":779},{"class":369,"line":416},[780,784,788],{"type":330,"tag":367,"props":781,"children":782},{"style":520},[783],{"type":335,"value":531},{"type":330,"tag":367,"props":785,"children":786},{"style":534},[787],{"type":335,"value":561},{"type":330,"tag":367,"props":789,"children":790},{"style":540},[791],{"type":335,"value":566},{"type":330,"tag":367,"props":793,"children":794},{"class":369,"line":569},[795],{"type":330,"tag":367,"props":796,"children":797},{"style":520},[798],{"type":335,"value":575},{"type":330,"tag":367,"props":800,"children":801},{"class":369,"line":578},[802,806,810,814,818,822,826],{"type":330,"tag":367,"props":803,"children":804},{"style":582},[805],{"type":335,"value":585},{"type":330,"tag":367,"props":807,"children":808},{"style":588},[809],{"type":335,"value":591},{"type":330,"tag":367,"props":811,"children":812},{"style":594},[813],{"type":335,"value":597},{"type":330,"tag":367,"props":815,"children":816},{"style":582},[817],{"type":335,"value":602},{"type":330,"tag":367,"props":819,"children":820},{"style":605},[821],{"type":335,"value":608},{"type":330,"tag":367,"props":823,"children":824},{"style":611},[825],{"type":335,"value":614},{"type":330,"tag":367,"props":827,"children":828},{"style":605},[829],{"type":335,"value":619},{"type":330,"tag":367,"props":831,"children":832},{"class":369,"line":622},[833],{"type":330,"tag":367,"props":834,"children":835},{"style":520},[836],{"type":335,"value":837},"  // 倒序遍历字符串\n",{"type":330,"tag":367,"props":839,"children":840},{"class":369,"line":728},[841],{"type":330,"tag":367,"props":842,"children":843},{"style":520},[844],{"type":335,"value":845},"  // 1. 索引 i 从右向左搜索首个空格\n",{"type":330,"tag":367,"props":847,"children":849},{"class":369,"line":848},8,[850],{"type":330,"tag":367,"props":851,"children":852},{"style":520},[853],{"type":335,"value":854},"  // 2. 添加单词 s[i + 1, j + 1] 到 res\n",{"type":330,"tag":367,"props":856,"children":858},{"class":369,"line":857},9,[859],{"type":330,"tag":367,"props":860,"children":861},{"style":520},[862],{"type":335,"value":863},"  // 3. 索引 i 绕过两个单词间所有空格\n",{"type":330,"tag":367,"props":865,"children":867},{"class":369,"line":866},10,[868],{"type":330,"tag":367,"props":869,"children":870},{"style":520},[871],{"type":335,"value":872},"  // 4. 执行 j = i\n",{"type":330,"tag":367,"props":874,"children":876},{"class":369,"line":875},11,[877,882,887,891,896],{"type":330,"tag":367,"props":878,"children":879},{"style":582},[880],{"type":335,"value":881},"  let",{"type":330,"tag":367,"props":883,"children":884},{"style":632},[885],{"type":335,"value":886}," res",{"type":330,"tag":367,"props":888,"children":889},{"style":594},[890],{"type":335,"value":597},{"type":330,"tag":367,"props":892,"children":893},{"style":605},[894],{"type":335,"value":895}," []",{"type":330,"tag":367,"props":897,"children":898},{"style":722},[899],{"type":335,"value":725},{"type":330,"tag":367,"props":901,"children":903},{"class":369,"line":902},12,[904,908,913,917,921,925,930,935,941],{"type":330,"tag":367,"props":905,"children":906},{"style":582},[907],{"type":335,"value":881},{"type":330,"tag":367,"props":909,"children":910},{"style":632},[911],{"type":335,"value":912}," i",{"type":330,"tag":367,"props":914,"children":915},{"style":594},[916],{"type":335,"value":597},{"type":330,"tag":367,"props":918,"children":919},{"style":632},[920],{"type":335,"value":635},{"type":330,"tag":367,"props":922,"children":923},{"style":638},[924],{"type":335,"value":641},{"type":330,"tag":367,"props":926,"children":927},{"style":605},[928],{"type":335,"value":929},"length ",{"type":330,"tag":367,"props":931,"children":932},{"style":594},[933],{"type":335,"value":934},"-",{"type":330,"tag":367,"props":936,"children":938},{"style":937},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[939],{"type":335,"value":940}," 1",{"type":330,"tag":367,"props":942,"children":943},{"style":722},[944],{"type":335,"value":725},{"type":330,"tag":367,"props":946,"children":948},{"class":369,"line":947},13,[949,953,958,962,966],{"type":330,"tag":367,"props":950,"children":951},{"style":582},[952],{"type":335,"value":881},{"type":330,"tag":367,"props":954,"children":955},{"style":632},[956],{"type":335,"value":957}," j",{"type":330,"tag":367,"props":959,"children":960},{"style":594},[961],{"type":335,"value":597},{"type":330,"tag":367,"props":963,"children":964},{"style":632},[965],{"type":335,"value":912},{"type":330,"tag":367,"props":967,"children":968},{"style":722},[969],{"type":335,"value":725},{"type":330,"tag":367,"props":971,"children":973},{"class":369,"line":972},14,[974,979,983,988,993,998],{"type":330,"tag":367,"props":975,"children":976},{"style":626},[977],{"type":335,"value":978},"  while",{"type":330,"tag":367,"props":980,"children":981},{"style":605},[982],{"type":335,"value":608},{"type":330,"tag":367,"props":984,"children":985},{"style":632},[986],{"type":335,"value":987},"i",{"type":330,"tag":367,"props":989,"children":990},{"style":594},[991],{"type":335,"value":992}," >=",{"type":330,"tag":367,"props":994,"children":995},{"style":937},[996],{"type":335,"value":997}," 0",{"type":330,"tag":367,"props":999,"children":1000},{"style":605},[1001],{"type":335,"value":619},{"type":330,"tag":367,"props":1003,"children":1005},{"class":369,"line":1004},15,[1006,1011,1015,1019,1023,1027,1032,1036,1041,1045,1050,1055,1060,1065,1069,1074,1079],{"type":330,"tag":367,"props":1007,"children":1008},{"style":626},[1009],{"type":335,"value":1010},"    while",{"type":330,"tag":367,"props":1012,"children":1013},{"style":605},[1014],{"type":335,"value":608},{"type":330,"tag":367,"props":1016,"children":1017},{"style":632},[1018],{"type":335,"value":987},{"type":330,"tag":367,"props":1020,"children":1021},{"style":594},[1022],{"type":335,"value":992},{"type":330,"tag":367,"props":1024,"children":1025},{"style":937},[1026],{"type":335,"value":997},{"type":330,"tag":367,"props":1028,"children":1029},{"style":594},[1030],{"type":335,"value":1031}," &&",{"type":330,"tag":367,"props":1033,"children":1034},{"style":632},[1035],{"type":335,"value":635},{"type":330,"tag":367,"props":1037,"children":1038},{"style":605},[1039],{"type":335,"value":1040},"[",{"type":330,"tag":367,"props":1042,"children":1043},{"style":632},[1044],{"type":335,"value":987},{"type":330,"tag":367,"props":1046,"children":1047},{"style":605},[1048],{"type":335,"value":1049},"] ",{"type":330,"tag":367,"props":1051,"children":1052},{"style":594},[1053],{"type":335,"value":1054},"!==",{"type":330,"tag":367,"props":1056,"children":1057},{"style":654},[1058],{"type":335,"value":1059}," \" \"",{"type":330,"tag":367,"props":1061,"children":1062},{"style":605},[1063],{"type":335,"value":1064},") ",{"type":330,"tag":367,"props":1066,"children":1067},{"style":632},[1068],{"type":335,"value":987},{"type":330,"tag":367,"props":1070,"children":1071},{"style":594},[1072],{"type":335,"value":1073},"--",{"type":330,"tag":367,"props":1075,"children":1076},{"style":722},[1077],{"type":335,"value":1078},";",{"type":330,"tag":367,"props":1080,"children":1081},{"style":520},[1082],{"type":335,"value":1083}," // 搜索首个空格\n",{"type":330,"tag":367,"props":1085,"children":1087},{"class":369,"line":1086},16,[1088,1093,1097,1102,1106,1110,1114,1119,1123,1127,1132,1136,1141,1145,1149,1153,1158,1162],{"type":330,"tag":367,"props":1089,"children":1090},{"style":632},[1091],{"type":335,"value":1092},"    res",{"type":330,"tag":367,"props":1094,"children":1095},{"style":638},[1096],{"type":335,"value":641},{"type":330,"tag":367,"props":1098,"children":1099},{"style":588},[1100],{"type":335,"value":1101},"push",{"type":330,"tag":367,"props":1103,"children":1104},{"style":605},[1105],{"type":335,"value":651},{"type":330,"tag":367,"props":1107,"children":1108},{"style":632},[1109],{"type":335,"value":614},{"type":330,"tag":367,"props":1111,"children":1112},{"style":638},[1113],{"type":335,"value":641},{"type":330,"tag":367,"props":1115,"children":1116},{"style":588},[1117],{"type":335,"value":1118},"substring",{"type":330,"tag":367,"props":1120,"children":1121},{"style":605},[1122],{"type":335,"value":651},{"type":330,"tag":367,"props":1124,"children":1125},{"style":632},[1126],{"type":335,"value":987},{"type":330,"tag":367,"props":1128,"children":1129},{"style":594},[1130],{"type":335,"value":1131}," +",{"type":330,"tag":367,"props":1133,"children":1134},{"style":937},[1135],{"type":335,"value":940},{"type":330,"tag":367,"props":1137,"children":1138},{"style":722},[1139],{"type":335,"value":1140},",",{"type":330,"tag":367,"props":1142,"children":1143},{"style":632},[1144],{"type":335,"value":957},{"type":330,"tag":367,"props":1146,"children":1147},{"style":594},[1148],{"type":335,"value":1131},{"type":330,"tag":367,"props":1150,"children":1151},{"style":937},[1152],{"type":335,"value":940},{"type":330,"tag":367,"props":1154,"children":1155},{"style":605},[1156],{"type":335,"value":1157},"))",{"type":330,"tag":367,"props":1159,"children":1160},{"style":722},[1161],{"type":335,"value":1078},{"type":330,"tag":367,"props":1163,"children":1164},{"style":520},[1165],{"type":335,"value":1166}," // 添加单词\n",{"type":330,"tag":367,"props":1168,"children":1170},{"class":369,"line":1169},17,[1171,1175,1179,1183,1187,1191,1195,1199,1203,1207,1211,1216,1220,1224,1228,1232,1236],{"type":330,"tag":367,"props":1172,"children":1173},{"style":626},[1174],{"type":335,"value":1010},{"type":330,"tag":367,"props":1176,"children":1177},{"style":605},[1178],{"type":335,"value":608},{"type":330,"tag":367,"props":1180,"children":1181},{"style":632},[1182],{"type":335,"value":987},{"type":330,"tag":367,"props":1184,"children":1185},{"style":594},[1186],{"type":335,"value":992},{"type":330,"tag":367,"props":1188,"children":1189},{"style":937},[1190],{"type":335,"value":997},{"type":330,"tag":367,"props":1192,"children":1193},{"style":594},[1194],{"type":335,"value":1031},{"type":330,"tag":367,"props":1196,"children":1197},{"style":632},[1198],{"type":335,"value":635},{"type":330,"tag":367,"props":1200,"children":1201},{"style":605},[1202],{"type":335,"value":1040},{"type":330,"tag":367,"props":1204,"children":1205},{"style":632},[1206],{"type":335,"value":987},{"type":330,"tag":367,"props":1208,"children":1209},{"style":605},[1210],{"type":335,"value":1049},{"type":330,"tag":367,"props":1212,"children":1213},{"style":594},[1214],{"type":335,"value":1215},"===",{"type":330,"tag":367,"props":1217,"children":1218},{"style":654},[1219],{"type":335,"value":1059},{"type":330,"tag":367,"props":1221,"children":1222},{"style":605},[1223],{"type":335,"value":1064},{"type":330,"tag":367,"props":1225,"children":1226},{"style":632},[1227],{"type":335,"value":987},{"type":330,"tag":367,"props":1229,"children":1230},{"style":594},[1231],{"type":335,"value":1073},{"type":330,"tag":367,"props":1233,"children":1234},{"style":722},[1235],{"type":335,"value":1078},{"type":330,"tag":367,"props":1237,"children":1238},{"style":520},[1239],{"type":335,"value":1240}," // 跳过单词间空格\n",{"type":330,"tag":367,"props":1242,"children":1244},{"class":369,"line":1243},18,[1245,1250,1254,1258,1262],{"type":330,"tag":367,"props":1246,"children":1247},{"style":632},[1248],{"type":335,"value":1249},"    j",{"type":330,"tag":367,"props":1251,"children":1252},{"style":594},[1253],{"type":335,"value":597},{"type":330,"tag":367,"props":1255,"children":1256},{"style":632},[1257],{"type":335,"value":912},{"type":330,"tag":367,"props":1259,"children":1260},{"style":722},[1261],{"type":335,"value":1078},{"type":330,"tag":367,"props":1263,"children":1264},{"style":520},[1265],{"type":335,"value":1266}," // 指针移动，指向下个单词的尾字符\n",{"type":330,"tag":367,"props":1268,"children":1270},{"class":369,"line":1269},19,[1271],{"type":330,"tag":367,"props":1272,"children":1273},{"style":605},[1274],{"type":335,"value":1275},"  }\n",{"type":330,"tag":367,"props":1277,"children":1279},{"class":369,"line":1278},20,[1280,1284,1288,1292,1296,1300,1304,1308,1312,1317,1321],{"type":330,"tag":367,"props":1281,"children":1282},{"style":626},[1283],{"type":335,"value":629},{"type":330,"tag":367,"props":1285,"children":1286},{"style":632},[1287],{"type":335,"value":886},{"type":330,"tag":367,"props":1289,"children":1290},{"style":638},[1291],{"type":335,"value":641},{"type":330,"tag":367,"props":1293,"children":1294},{"style":588},[1295],{"type":335,"value":707},{"type":330,"tag":367,"props":1297,"children":1298},{"style":605},[1299],{"type":335,"value":651},{"type":330,"tag":367,"props":1301,"children":1302},{"style":654},[1303],{"type":335,"value":657},{"type":330,"tag":367,"props":1305,"children":1306},{"style":605},[1307],{"type":335,"value":662},{"type":330,"tag":367,"props":1309,"children":1310},{"style":638},[1311],{"type":335,"value":641},{"type":330,"tag":367,"props":1313,"children":1314},{"style":588},[1315],{"type":335,"value":1316},"trim",{"type":330,"tag":367,"props":1318,"children":1319},{"style":605},[1320],{"type":335,"value":698},{"type":330,"tag":367,"props":1322,"children":1323},{"style":722},[1324],{"type":335,"value":725},{"type":330,"tag":367,"props":1326,"children":1328},{"class":369,"line":1327},21,[1329,1333],{"type":330,"tag":367,"props":1330,"children":1331},{"style":605},[1332],{"type":335,"value":734},{"type":330,"tag":367,"props":1334,"children":1335},{"style":722},[1336],{"type":335,"value":725},{"type":330,"tag":1338,"props":1339,"children":1340},"style",{},[1341],{"type":335,"value":1342},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":323,"searchDepth":578,"depth":578,"links":1344},[1345,1346],{"id":492,"depth":379,"text":492},{"id":497,"depth":379,"text":497,"children":1347},[1348,1349],{"id":503,"depth":416,"text":503},{"id":741,"depth":416,"text":741},"markdown","content:2.code:1.algorithm:2.leetcode:151.reverse-words-in-a-string.md","content","2.code/1.algorithm/2.leetcode/151.reverse-words-in-a-string.md","md",[1356,1358],{"_path":176,"title":175,"description":1357},"请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：",{"_path":182,"title":181,"description":1359},"已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：",1712112509351]