[{"data":1,"prerenderedAt":1322},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/reverse-words-in-a-string":281,"/code/algorithm/leetcode/reverse-words-in-a-string-surround":1317},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,225,274],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,47],{"title":41,"_path":42,"children":43},"剑指 offer","/code/algorithm/sword-ofter",[44],{"title":45,"_path":46},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":48,"_path":49,"children":50},"力扣 leetCode","/code/algorithm/leetcode",[51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222],{"title":52,"_path":53},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":55,"_path":56},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":58,"_path":59},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":61,"_path":62},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":64,"_path":65},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":67,"_path":68},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":70,"_path":71},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":73,"_path":74},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":76,"_path":77},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":79,"_path":80},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":82,"_path":83},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":85,"_path":86},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":88,"_path":89},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":91,"_path":92},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":94,"_path":95},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":97,"_path":98},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":100,"_path":101},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":103,"_path":104},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":106,"_path":107},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":109,"_path":110},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":112,"_path":113},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":115,"_path":116},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":118,"_path":119},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":121,"_path":122},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":124,"_path":125},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":127,"_path":128},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":130,"_path":131},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":133,"_path":134},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":136,"_path":137},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":139,"_path":140},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":142,"_path":143},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":145,"_path":146},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":148,"_path":149},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":151,"_path":152},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":154,"_path":155},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":157,"_path":158},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":160,"_path":161},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":163,"_path":164},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":166,"_path":167},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":169,"_path":170},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":172,"_path":173},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":175,"_path":176},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":178,"_path":179},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":181,"_path":182},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":184,"_path":185},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":187,"_path":188},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":190,"_path":191},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":193,"_path":194},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":196,"_path":197},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":199,"_path":200},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":202,"_path":203},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":217,"_path":218},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":220,"_path":221},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":223,"_path":224},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":226,"_path":227,"children":228},"源码实现","/code/source",[229,254,267],{"title":230,"_path":231,"children":232},"原生 api","/code/source/native-api",[233,236,239,242,245,248,251],{"title":234,"_path":235},"ajax","/code/source/native-api/ajax",{"title":237,"_path":238},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":240,"_path":241},"new 操作符","/code/source/native-api/new",{"title":243,"_path":244},"instanceof 关键字","/code/source/native-api/instanceof",{"title":246,"_path":247},"定时器","/code/source/native-api/timer",{"title":249,"_path":250},"JSON.stringify","/code/source/native-api/json-stringify",{"title":252,"_path":253},"Iterator 迭代器","/code/source/native-api/iterator",{"title":255,"_path":256,"children":257},"数组 Array","/code/source/array",[258,261,264],{"title":259,"_path":260},"数组去重","/code/source/array/remove-duplicate",{"title":262,"_path":263},"数组扁平化","/code/source/array/flat",{"title":265,"_path":266},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":268,"_path":269,"children":270},"字符串 String","/code/source/string",[271],{"title":272,"_path":273},"repeat()","/code/source/string/repeat",{"title":275,"_path":276,"children":277},"业务场景","/code/scene",[278],{"title":279,"_path":280},"顺序打印 url 并支持 retry","/code/scene/promise-url-retry",{"_path":158,"_dir":282,"_draft":283,"_partial":283,"_locale":284,"title":157,"description":285,"url":286,"body":287,"_type":1313,"_id":1314,"_source":1315,"_file":1316,"_extension":322},"leetcode",false,"","给你一个字符串 s ，请你反转字符串中 单词 的顺序。","https://leetcode.cn/problems/reverse-words-in-a-string",{"type":288,"children":289,"toc":1306},"root",[290,297,302,307,312,317,349,354,386,391,422,427,447,452,458,463,469,702,707,1300],{"type":291,"tag":292,"props":293,"children":294},"element","p",{},[295],{"type":296,"value":285},"text",{"type":291,"tag":292,"props":298,"children":299},{},[300],{"type":296,"value":301},"单词 是由非空格字符组成的字符串。s 中使用至少一个空格将字符串中的 单词 分隔开。",{"type":291,"tag":292,"props":303,"children":304},{},[305],{"type":296,"value":306},"返回 单词 顺序颠倒且 单词 之间用单个空格连接的结果字符串。",{"type":291,"tag":292,"props":308,"children":309},{},[310],{"type":296,"value":311},"注意：输入字符串 s 中可能会存在前导空格、尾随空格或者单词间的多个空格。返回的结果字符串中，单词间应当仅用单个空格分隔，且不包含任何额外的空格。",{"type":291,"tag":292,"props":313,"children":314},{},[315],{"type":296,"value":316},"示例 1：",{"type":291,"tag":318,"props":319,"children":323},"pre",{"className":320,"code":321,"language":322,"meta":284,"style":284},"language-md shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：s = \"the sky is blue\"\n输出：\"blue is sky the\"\n","md",[324],{"type":291,"tag":325,"props":326,"children":327},"code",{"__ignoreMap":284},[328,340],{"type":291,"tag":329,"props":330,"children":333},"span",{"class":331,"line":332},"line",1,[334],{"type":291,"tag":329,"props":335,"children":337},{"style":336},"--shiki-light:#110000;--shiki-default:#110000;--shiki-dark:#BFBDB6",[338],{"type":296,"value":339},"输入：s = \"the sky is blue\"\n",{"type":291,"tag":329,"props":341,"children":343},{"class":331,"line":342},2,[344],{"type":291,"tag":329,"props":345,"children":346},{"style":336},[347],{"type":296,"value":348},"输出：\"blue is sky the\"\n",{"type":291,"tag":292,"props":350,"children":351},{},[352],{"type":296,"value":353},"示例 2：",{"type":291,"tag":318,"props":355,"children":357},{"className":320,"code":356,"language":322,"meta":284,"style":284},"输入：s = \" hello world \"\n输出：\"world hello\"\n解释：反转后的字符串中不能存在前导空格和尾随空格。\n",[358],{"type":291,"tag":325,"props":359,"children":360},{"__ignoreMap":284},[361,369,377],{"type":291,"tag":329,"props":362,"children":363},{"class":331,"line":332},[364],{"type":291,"tag":329,"props":365,"children":366},{"style":336},[367],{"type":296,"value":368},"输入：s = \" hello world \"\n",{"type":291,"tag":329,"props":370,"children":371},{"class":331,"line":342},[372],{"type":291,"tag":329,"props":373,"children":374},{"style":336},[375],{"type":296,"value":376},"输出：\"world hello\"\n",{"type":291,"tag":329,"props":378,"children":380},{"class":331,"line":379},3,[381],{"type":291,"tag":329,"props":382,"children":383},{"style":336},[384],{"type":296,"value":385},"解释：反转后的字符串中不能存在前导空格和尾随空格。\n",{"type":291,"tag":292,"props":387,"children":388},{},[389],{"type":296,"value":390},"示例 3：",{"type":291,"tag":318,"props":392,"children":394},{"className":320,"code":393,"language":322,"meta":284,"style":284},"输入：s = \"a good example\"\n输出：\"example good a\"\n解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",[395],{"type":291,"tag":325,"props":396,"children":397},{"__ignoreMap":284},[398,406,414],{"type":291,"tag":329,"props":399,"children":400},{"class":331,"line":332},[401],{"type":291,"tag":329,"props":402,"children":403},{"style":336},[404],{"type":296,"value":405},"输入：s = \"a good example\"\n",{"type":291,"tag":329,"props":407,"children":408},{"class":331,"line":342},[409],{"type":291,"tag":329,"props":410,"children":411},{"style":336},[412],{"type":296,"value":413},"输出：\"example good a\"\n",{"type":291,"tag":329,"props":415,"children":416},{"class":331,"line":379},[417],{"type":291,"tag":329,"props":418,"children":419},{"style":336},[420],{"type":296,"value":421},"解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",{"type":291,"tag":292,"props":423,"children":424},{},[425],{"type":296,"value":426},"提示：",{"type":291,"tag":428,"props":429,"children":430},"ul",{},[431,437,442],{"type":291,"tag":432,"props":433,"children":434},"li",{},[435],{"type":296,"value":436},"1 \u003C= s.length \u003C= 10^4",{"type":291,"tag":432,"props":438,"children":439},{},[440],{"type":296,"value":441},"s 包含英文大小写字母、数字和空格 ' '",{"type":291,"tag":432,"props":443,"children":444},{},[445],{"type":296,"value":446},"s 中 至少存在一个 单词",{"type":291,"tag":292,"props":448,"children":449},{},[450],{"type":296,"value":451},"进阶：如果字符串在你使用的编程语言中是一种可变数据类型，请尝试使用 O(1) 额外空间复杂度的 原地 解法。",{"type":291,"tag":453,"props":454,"children":456},"h2",{"id":455},"解题思路",[457],{"type":296,"value":455},{"type":291,"tag":453,"props":459,"children":461},{"id":460},"实现",[462],{"type":296,"value":460},{"type":291,"tag":464,"props":465,"children":467},"h3",{"id":466},"语言特性",[468],{"type":296,"value":466},{"type":291,"tag":318,"props":470,"children":474},{"className":471,"code":472,"language":473,"meta":284,"style":284},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  return s.split(\" \").filter(Boolean).reverse().join(\" \");\n};\n","js",[475],{"type":291,"tag":325,"props":476,"children":477},{"__ignoreMap":284},[478,487,513,530,539,583,689],{"type":291,"tag":329,"props":479,"children":480},{"class":331,"line":332},[481],{"type":291,"tag":329,"props":482,"children":484},{"style":483},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[485],{"type":296,"value":486},"/**\n",{"type":291,"tag":329,"props":488,"children":489},{"class":331,"line":342},[490,495,501,507],{"type":291,"tag":329,"props":491,"children":492},{"style":483},[493],{"type":296,"value":494}," * ",{"type":291,"tag":329,"props":496,"children":498},{"style":497},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[499],{"type":296,"value":500},"@param",{"type":291,"tag":329,"props":502,"children":504},{"style":503},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[505],{"type":296,"value":506}," {string}",{"type":291,"tag":329,"props":508,"children":510},{"style":509},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[511],{"type":296,"value":512}," s\n",{"type":291,"tag":329,"props":514,"children":515},{"class":331,"line":379},[516,520,525],{"type":291,"tag":329,"props":517,"children":518},{"style":483},[519],{"type":296,"value":494},{"type":291,"tag":329,"props":521,"children":522},{"style":497},[523],{"type":296,"value":524},"@return",{"type":291,"tag":329,"props":526,"children":527},{"style":503},[528],{"type":296,"value":529}," {string}\n",{"type":291,"tag":329,"props":531,"children":533},{"class":331,"line":532},4,[534],{"type":291,"tag":329,"props":535,"children":536},{"style":483},[537],{"type":296,"value":538}," */\n",{"type":291,"tag":329,"props":540,"children":542},{"class":331,"line":541},5,[543,549,555,561,566,572,578],{"type":291,"tag":329,"props":544,"children":546},{"style":545},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[547],{"type":296,"value":548},"var",{"type":291,"tag":329,"props":550,"children":552},{"style":551},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[553],{"type":296,"value":554}," reverseWords",{"type":291,"tag":329,"props":556,"children":558},{"style":557},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[559],{"type":296,"value":560}," =",{"type":291,"tag":329,"props":562,"children":563},{"style":545},[564],{"type":296,"value":565}," function",{"type":291,"tag":329,"props":567,"children":569},{"style":568},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[570],{"type":296,"value":571}," (",{"type":291,"tag":329,"props":573,"children":575},{"style":574},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[576],{"type":296,"value":577},"s",{"type":291,"tag":329,"props":579,"children":580},{"style":568},[581],{"type":296,"value":582},") {\n",{"type":291,"tag":329,"props":584,"children":586},{"class":331,"line":585},6,[587,593,599,605,610,615,621,626,630,635,639,644,648,652,657,662,666,671,675,679,683],{"type":291,"tag":329,"props":588,"children":590},{"style":589},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[591],{"type":296,"value":592},"  return",{"type":291,"tag":329,"props":594,"children":596},{"style":595},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[597],{"type":296,"value":598}," s",{"type":291,"tag":329,"props":600,"children":602},{"style":601},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[603],{"type":296,"value":604},".",{"type":291,"tag":329,"props":606,"children":607},{"style":551},[608],{"type":296,"value":609},"split",{"type":291,"tag":329,"props":611,"children":612},{"style":568},[613],{"type":296,"value":614},"(",{"type":291,"tag":329,"props":616,"children":618},{"style":617},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[619],{"type":296,"value":620},"\" \"",{"type":291,"tag":329,"props":622,"children":623},{"style":568},[624],{"type":296,"value":625},")",{"type":291,"tag":329,"props":627,"children":628},{"style":601},[629],{"type":296,"value":604},{"type":291,"tag":329,"props":631,"children":632},{"style":551},[633],{"type":296,"value":634},"filter",{"type":291,"tag":329,"props":636,"children":637},{"style":568},[638],{"type":296,"value":614},{"type":291,"tag":329,"props":640,"children":641},{"style":595},[642],{"type":296,"value":643},"Boolean",{"type":291,"tag":329,"props":645,"children":646},{"style":568},[647],{"type":296,"value":625},{"type":291,"tag":329,"props":649,"children":650},{"style":601},[651],{"type":296,"value":604},{"type":291,"tag":329,"props":653,"children":654},{"style":551},[655],{"type":296,"value":656},"reverse",{"type":291,"tag":329,"props":658,"children":659},{"style":568},[660],{"type":296,"value":661},"()",{"type":291,"tag":329,"props":663,"children":664},{"style":601},[665],{"type":296,"value":604},{"type":291,"tag":329,"props":667,"children":668},{"style":551},[669],{"type":296,"value":670},"join",{"type":291,"tag":329,"props":672,"children":673},{"style":568},[674],{"type":296,"value":614},{"type":291,"tag":329,"props":676,"children":677},{"style":617},[678],{"type":296,"value":620},{"type":291,"tag":329,"props":680,"children":681},{"style":568},[682],{"type":296,"value":625},{"type":291,"tag":329,"props":684,"children":686},{"style":685},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[687],{"type":296,"value":688},";\n",{"type":291,"tag":329,"props":690,"children":692},{"class":331,"line":691},7,[693,698],{"type":291,"tag":329,"props":694,"children":695},{"style":568},[696],{"type":296,"value":697},"}",{"type":291,"tag":329,"props":699,"children":700},{"style":685},[701],{"type":296,"value":688},{"type":291,"tag":464,"props":703,"children":705},{"id":704},"双指针",[706],{"type":296,"value":704},{"type":291,"tag":318,"props":708,"children":710},{"className":471,"code":709,"language":473,"meta":284,"style":284},"/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  // 倒序遍历字符串\n  // 1. 索引 i 从右向左搜索首个空格\n  // 2. 添加单词 s[i + 1, j + 1] 到 res\n  // 3. 索引 i 绕过两个单词间所有空格\n  // 4. 执行 j = i\n  let res = [];\n  let i = s.length - 1;\n  let j = i;\n  while (i >= 0) {\n    while (i >= 0 && s[i] !== \" \") i--; // 搜索首个空格\n    res.push(s.substring(i + 1, j + 1)); // 添加单词\n    while (i >= 0 && s[i] === \" \") i--; // 跳过单词间空格\n    j = i; // 指针移动，指向下个单词的尾字符\n  }\n  return res.join(\" \").trim();\n};\n",[711],{"type":291,"tag":325,"props":712,"children":713},{"__ignoreMap":284},[714,721,740,755,762,793,801,809,818,827,836,863,908,933,965,1047,1130,1204,1230,1239,1288],{"type":291,"tag":329,"props":715,"children":716},{"class":331,"line":332},[717],{"type":291,"tag":329,"props":718,"children":719},{"style":483},[720],{"type":296,"value":486},{"type":291,"tag":329,"props":722,"children":723},{"class":331,"line":342},[724,728,732,736],{"type":291,"tag":329,"props":725,"children":726},{"style":483},[727],{"type":296,"value":494},{"type":291,"tag":329,"props":729,"children":730},{"style":497},[731],{"type":296,"value":500},{"type":291,"tag":329,"props":733,"children":734},{"style":503},[735],{"type":296,"value":506},{"type":291,"tag":329,"props":737,"children":738},{"style":509},[739],{"type":296,"value":512},{"type":291,"tag":329,"props":741,"children":742},{"class":331,"line":379},[743,747,751],{"type":291,"tag":329,"props":744,"children":745},{"style":483},[746],{"type":296,"value":494},{"type":291,"tag":329,"props":748,"children":749},{"style":497},[750],{"type":296,"value":524},{"type":291,"tag":329,"props":752,"children":753},{"style":503},[754],{"type":296,"value":529},{"type":291,"tag":329,"props":756,"children":757},{"class":331,"line":532},[758],{"type":291,"tag":329,"props":759,"children":760},{"style":483},[761],{"type":296,"value":538},{"type":291,"tag":329,"props":763,"children":764},{"class":331,"line":541},[765,769,773,777,781,785,789],{"type":291,"tag":329,"props":766,"children":767},{"style":545},[768],{"type":296,"value":548},{"type":291,"tag":329,"props":770,"children":771},{"style":551},[772],{"type":296,"value":554},{"type":291,"tag":329,"props":774,"children":775},{"style":557},[776],{"type":296,"value":560},{"type":291,"tag":329,"props":778,"children":779},{"style":545},[780],{"type":296,"value":565},{"type":291,"tag":329,"props":782,"children":783},{"style":568},[784],{"type":296,"value":571},{"type":291,"tag":329,"props":786,"children":787},{"style":574},[788],{"type":296,"value":577},{"type":291,"tag":329,"props":790,"children":791},{"style":568},[792],{"type":296,"value":582},{"type":291,"tag":329,"props":794,"children":795},{"class":331,"line":585},[796],{"type":291,"tag":329,"props":797,"children":798},{"style":483},[799],{"type":296,"value":800},"  // 倒序遍历字符串\n",{"type":291,"tag":329,"props":802,"children":803},{"class":331,"line":691},[804],{"type":291,"tag":329,"props":805,"children":806},{"style":483},[807],{"type":296,"value":808},"  // 1. 索引 i 从右向左搜索首个空格\n",{"type":291,"tag":329,"props":810,"children":812},{"class":331,"line":811},8,[813],{"type":291,"tag":329,"props":814,"children":815},{"style":483},[816],{"type":296,"value":817},"  // 2. 添加单词 s[i + 1, j + 1] 到 res\n",{"type":291,"tag":329,"props":819,"children":821},{"class":331,"line":820},9,[822],{"type":291,"tag":329,"props":823,"children":824},{"style":483},[825],{"type":296,"value":826},"  // 3. 索引 i 绕过两个单词间所有空格\n",{"type":291,"tag":329,"props":828,"children":830},{"class":331,"line":829},10,[831],{"type":291,"tag":329,"props":832,"children":833},{"style":483},[834],{"type":296,"value":835},"  // 4. 执行 j = i\n",{"type":291,"tag":329,"props":837,"children":839},{"class":331,"line":838},11,[840,845,850,854,859],{"type":291,"tag":329,"props":841,"children":842},{"style":545},[843],{"type":296,"value":844},"  let",{"type":291,"tag":329,"props":846,"children":847},{"style":595},[848],{"type":296,"value":849}," res",{"type":291,"tag":329,"props":851,"children":852},{"style":557},[853],{"type":296,"value":560},{"type":291,"tag":329,"props":855,"children":856},{"style":568},[857],{"type":296,"value":858}," []",{"type":291,"tag":329,"props":860,"children":861},{"style":685},[862],{"type":296,"value":688},{"type":291,"tag":329,"props":864,"children":866},{"class":331,"line":865},12,[867,871,876,880,884,888,893,898,904],{"type":291,"tag":329,"props":868,"children":869},{"style":545},[870],{"type":296,"value":844},{"type":291,"tag":329,"props":872,"children":873},{"style":595},[874],{"type":296,"value":875}," i",{"type":291,"tag":329,"props":877,"children":878},{"style":557},[879],{"type":296,"value":560},{"type":291,"tag":329,"props":881,"children":882},{"style":595},[883],{"type":296,"value":598},{"type":291,"tag":329,"props":885,"children":886},{"style":601},[887],{"type":296,"value":604},{"type":291,"tag":329,"props":889,"children":890},{"style":568},[891],{"type":296,"value":892},"length ",{"type":291,"tag":329,"props":894,"children":895},{"style":557},[896],{"type":296,"value":897},"-",{"type":291,"tag":329,"props":899,"children":901},{"style":900},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[902],{"type":296,"value":903}," 1",{"type":291,"tag":329,"props":905,"children":906},{"style":685},[907],{"type":296,"value":688},{"type":291,"tag":329,"props":909,"children":911},{"class":331,"line":910},13,[912,916,921,925,929],{"type":291,"tag":329,"props":913,"children":914},{"style":545},[915],{"type":296,"value":844},{"type":291,"tag":329,"props":917,"children":918},{"style":595},[919],{"type":296,"value":920}," j",{"type":291,"tag":329,"props":922,"children":923},{"style":557},[924],{"type":296,"value":560},{"type":291,"tag":329,"props":926,"children":927},{"style":595},[928],{"type":296,"value":875},{"type":291,"tag":329,"props":930,"children":931},{"style":685},[932],{"type":296,"value":688},{"type":291,"tag":329,"props":934,"children":936},{"class":331,"line":935},14,[937,942,946,951,956,961],{"type":291,"tag":329,"props":938,"children":939},{"style":589},[940],{"type":296,"value":941},"  while",{"type":291,"tag":329,"props":943,"children":944},{"style":568},[945],{"type":296,"value":571},{"type":291,"tag":329,"props":947,"children":948},{"style":595},[949],{"type":296,"value":950},"i",{"type":291,"tag":329,"props":952,"children":953},{"style":557},[954],{"type":296,"value":955}," >=",{"type":291,"tag":329,"props":957,"children":958},{"style":900},[959],{"type":296,"value":960}," 0",{"type":291,"tag":329,"props":962,"children":963},{"style":568},[964],{"type":296,"value":582},{"type":291,"tag":329,"props":966,"children":968},{"class":331,"line":967},15,[969,974,978,982,986,990,995,999,1004,1008,1013,1018,1023,1028,1032,1037,1042],{"type":291,"tag":329,"props":970,"children":971},{"style":589},[972],{"type":296,"value":973},"    while",{"type":291,"tag":329,"props":975,"children":976},{"style":568},[977],{"type":296,"value":571},{"type":291,"tag":329,"props":979,"children":980},{"style":595},[981],{"type":296,"value":950},{"type":291,"tag":329,"props":983,"children":984},{"style":557},[985],{"type":296,"value":955},{"type":291,"tag":329,"props":987,"children":988},{"style":900},[989],{"type":296,"value":960},{"type":291,"tag":329,"props":991,"children":992},{"style":557},[993],{"type":296,"value":994}," &&",{"type":291,"tag":329,"props":996,"children":997},{"style":595},[998],{"type":296,"value":598},{"type":291,"tag":329,"props":1000,"children":1001},{"style":568},[1002],{"type":296,"value":1003},"[",{"type":291,"tag":329,"props":1005,"children":1006},{"style":595},[1007],{"type":296,"value":950},{"type":291,"tag":329,"props":1009,"children":1010},{"style":568},[1011],{"type":296,"value":1012},"] ",{"type":291,"tag":329,"props":1014,"children":1015},{"style":557},[1016],{"type":296,"value":1017},"!==",{"type":291,"tag":329,"props":1019,"children":1020},{"style":617},[1021],{"type":296,"value":1022}," \" \"",{"type":291,"tag":329,"props":1024,"children":1025},{"style":568},[1026],{"type":296,"value":1027},") ",{"type":291,"tag":329,"props":1029,"children":1030},{"style":595},[1031],{"type":296,"value":950},{"type":291,"tag":329,"props":1033,"children":1034},{"style":557},[1035],{"type":296,"value":1036},"--",{"type":291,"tag":329,"props":1038,"children":1039},{"style":685},[1040],{"type":296,"value":1041},";",{"type":291,"tag":329,"props":1043,"children":1044},{"style":483},[1045],{"type":296,"value":1046}," // 搜索首个空格\n",{"type":291,"tag":329,"props":1048,"children":1050},{"class":331,"line":1049},16,[1051,1056,1060,1065,1069,1073,1077,1082,1086,1090,1095,1099,1104,1108,1112,1116,1121,1125],{"type":291,"tag":329,"props":1052,"children":1053},{"style":595},[1054],{"type":296,"value":1055},"    res",{"type":291,"tag":329,"props":1057,"children":1058},{"style":601},[1059],{"type":296,"value":604},{"type":291,"tag":329,"props":1061,"children":1062},{"style":551},[1063],{"type":296,"value":1064},"push",{"type":291,"tag":329,"props":1066,"children":1067},{"style":568},[1068],{"type":296,"value":614},{"type":291,"tag":329,"props":1070,"children":1071},{"style":595},[1072],{"type":296,"value":577},{"type":291,"tag":329,"props":1074,"children":1075},{"style":601},[1076],{"type":296,"value":604},{"type":291,"tag":329,"props":1078,"children":1079},{"style":551},[1080],{"type":296,"value":1081},"substring",{"type":291,"tag":329,"props":1083,"children":1084},{"style":568},[1085],{"type":296,"value":614},{"type":291,"tag":329,"props":1087,"children":1088},{"style":595},[1089],{"type":296,"value":950},{"type":291,"tag":329,"props":1091,"children":1092},{"style":557},[1093],{"type":296,"value":1094}," +",{"type":291,"tag":329,"props":1096,"children":1097},{"style":900},[1098],{"type":296,"value":903},{"type":291,"tag":329,"props":1100,"children":1101},{"style":685},[1102],{"type":296,"value":1103},",",{"type":291,"tag":329,"props":1105,"children":1106},{"style":595},[1107],{"type":296,"value":920},{"type":291,"tag":329,"props":1109,"children":1110},{"style":557},[1111],{"type":296,"value":1094},{"type":291,"tag":329,"props":1113,"children":1114},{"style":900},[1115],{"type":296,"value":903},{"type":291,"tag":329,"props":1117,"children":1118},{"style":568},[1119],{"type":296,"value":1120},"))",{"type":291,"tag":329,"props":1122,"children":1123},{"style":685},[1124],{"type":296,"value":1041},{"type":291,"tag":329,"props":1126,"children":1127},{"style":483},[1128],{"type":296,"value":1129}," // 添加单词\n",{"type":291,"tag":329,"props":1131,"children":1133},{"class":331,"line":1132},17,[1134,1138,1142,1146,1150,1154,1158,1162,1166,1170,1174,1179,1183,1187,1191,1195,1199],{"type":291,"tag":329,"props":1135,"children":1136},{"style":589},[1137],{"type":296,"value":973},{"type":291,"tag":329,"props":1139,"children":1140},{"style":568},[1141],{"type":296,"value":571},{"type":291,"tag":329,"props":1143,"children":1144},{"style":595},[1145],{"type":296,"value":950},{"type":291,"tag":329,"props":1147,"children":1148},{"style":557},[1149],{"type":296,"value":955},{"type":291,"tag":329,"props":1151,"children":1152},{"style":900},[1153],{"type":296,"value":960},{"type":291,"tag":329,"props":1155,"children":1156},{"style":557},[1157],{"type":296,"value":994},{"type":291,"tag":329,"props":1159,"children":1160},{"style":595},[1161],{"type":296,"value":598},{"type":291,"tag":329,"props":1163,"children":1164},{"style":568},[1165],{"type":296,"value":1003},{"type":291,"tag":329,"props":1167,"children":1168},{"style":595},[1169],{"type":296,"value":950},{"type":291,"tag":329,"props":1171,"children":1172},{"style":568},[1173],{"type":296,"value":1012},{"type":291,"tag":329,"props":1175,"children":1176},{"style":557},[1177],{"type":296,"value":1178},"===",{"type":291,"tag":329,"props":1180,"children":1181},{"style":617},[1182],{"type":296,"value":1022},{"type":291,"tag":329,"props":1184,"children":1185},{"style":568},[1186],{"type":296,"value":1027},{"type":291,"tag":329,"props":1188,"children":1189},{"style":595},[1190],{"type":296,"value":950},{"type":291,"tag":329,"props":1192,"children":1193},{"style":557},[1194],{"type":296,"value":1036},{"type":291,"tag":329,"props":1196,"children":1197},{"style":685},[1198],{"type":296,"value":1041},{"type":291,"tag":329,"props":1200,"children":1201},{"style":483},[1202],{"type":296,"value":1203}," // 跳过单词间空格\n",{"type":291,"tag":329,"props":1205,"children":1207},{"class":331,"line":1206},18,[1208,1213,1217,1221,1225],{"type":291,"tag":329,"props":1209,"children":1210},{"style":595},[1211],{"type":296,"value":1212},"    j",{"type":291,"tag":329,"props":1214,"children":1215},{"style":557},[1216],{"type":296,"value":560},{"type":291,"tag":329,"props":1218,"children":1219},{"style":595},[1220],{"type":296,"value":875},{"type":291,"tag":329,"props":1222,"children":1223},{"style":685},[1224],{"type":296,"value":1041},{"type":291,"tag":329,"props":1226,"children":1227},{"style":483},[1228],{"type":296,"value":1229}," // 指针移动，指向下个单词的尾字符\n",{"type":291,"tag":329,"props":1231,"children":1233},{"class":331,"line":1232},19,[1234],{"type":291,"tag":329,"props":1235,"children":1236},{"style":568},[1237],{"type":296,"value":1238},"  }\n",{"type":291,"tag":329,"props":1240,"children":1242},{"class":331,"line":1241},20,[1243,1247,1251,1255,1259,1263,1267,1271,1275,1280,1284],{"type":291,"tag":329,"props":1244,"children":1245},{"style":589},[1246],{"type":296,"value":592},{"type":291,"tag":329,"props":1248,"children":1249},{"style":595},[1250],{"type":296,"value":849},{"type":291,"tag":329,"props":1252,"children":1253},{"style":601},[1254],{"type":296,"value":604},{"type":291,"tag":329,"props":1256,"children":1257},{"style":551},[1258],{"type":296,"value":670},{"type":291,"tag":329,"props":1260,"children":1261},{"style":568},[1262],{"type":296,"value":614},{"type":291,"tag":329,"props":1264,"children":1265},{"style":617},[1266],{"type":296,"value":620},{"type":291,"tag":329,"props":1268,"children":1269},{"style":568},[1270],{"type":296,"value":625},{"type":291,"tag":329,"props":1272,"children":1273},{"style":601},[1274],{"type":296,"value":604},{"type":291,"tag":329,"props":1276,"children":1277},{"style":551},[1278],{"type":296,"value":1279},"trim",{"type":291,"tag":329,"props":1281,"children":1282},{"style":568},[1283],{"type":296,"value":661},{"type":291,"tag":329,"props":1285,"children":1286},{"style":685},[1287],{"type":296,"value":688},{"type":291,"tag":329,"props":1289,"children":1291},{"class":331,"line":1290},21,[1292,1296],{"type":291,"tag":329,"props":1293,"children":1294},{"style":568},[1295],{"type":296,"value":697},{"type":291,"tag":329,"props":1297,"children":1298},{"style":685},[1299],{"type":296,"value":688},{"type":291,"tag":1301,"props":1302,"children":1303},"style",{},[1304],{"type":296,"value":1305},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":284,"searchDepth":541,"depth":541,"links":1307},[1308,1309],{"id":455,"depth":342,"text":455},{"id":460,"depth":342,"text":460,"children":1310},[1311,1312],{"id":466,"depth":379,"text":466},{"id":704,"depth":379,"text":704},"markdown","content:2.code:1.algorithm:2.leetcode:151.reverse-words-in-a-string.md","content","2.code/1.algorithm/2.leetcode/151.reverse-words-in-a-string.md",[1318,1320],{"_path":155,"title":154,"description":1319},"请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：",{"_path":161,"title":160,"description":1321},"已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：",1711978556206]