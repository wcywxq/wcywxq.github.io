[{"data":1,"prerenderedAt":1393},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/reverse-words-in-a-string":353,"/code/algorithm/leetcode/reverse-words-in-a-string-surround":1388},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319,341,344,347,350],{"title":320,"_path":321,"children":322},"Promise","/code/scene/promise",[323,326,329,332,335,338],{"title":324,"_path":325},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":327,"_path":328},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":330,"_path":331},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":333,"_path":334},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":336,"_path":337},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":339,"_path":340},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":342,"_path":343},"计算对象占用字节数","/code/scene/calcuate-object-bytes",{"title":345,"_path":346},"lodash.get","/code/scene/lodash-get",{"title":348,"_path":349},"sku 算法实现","/code/scene/sku",{"title":351,"_path":352},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":181,"_dir":354,"_draft":355,"_partial":355,"_locale":356,"title":180,"description":357,"url":358,"body":359,"_type":1383,"_id":1384,"_source":1385,"_file":1386,"_extension":1387},"leetcode",false,"","给你一个字符串 s ，请你反转字符串中 单词 的顺序。","https://leetcode.cn/problems/reverse-words-in-a-string",{"type":360,"children":361,"toc":1376},"root",[362,369,374,379,384,389,419,424,456,461,492,497,517,522,528,533,539,772,777,1370],{"type":363,"tag":364,"props":365,"children":366},"element","p",{},[367],{"type":368,"value":357},"text",{"type":363,"tag":364,"props":370,"children":371},{},[372],{"type":368,"value":373},"单词 是由非空格字符组成的字符串。s 中使用至少一个空格将字符串中的 单词 分隔开。",{"type":363,"tag":364,"props":375,"children":376},{},[377],{"type":368,"value":378},"返回 单词 顺序颠倒且 单词 之间用单个空格连接的结果字符串。",{"type":363,"tag":364,"props":380,"children":381},{},[382],{"type":368,"value":383},"注意：输入字符串 s 中可能会存在前导空格、尾随空格或者单词间的多个空格。返回的结果字符串中，单词间应当仅用单个空格分隔，且不包含任何额外的空格。",{"type":363,"tag":364,"props":385,"children":386},{},[387],{"type":368,"value":388},"示例 1：",{"type":363,"tag":390,"props":391,"children":394},"pre",{"className":392,"code":393,"language":368,"meta":356,"style":356},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：s = \"the sky is blue\"\n输出：\"blue is sky the\"\n",[395],{"type":363,"tag":396,"props":397,"children":398},"code",{"__ignoreMap":356},[399,410],{"type":363,"tag":400,"props":401,"children":404},"span",{"class":402,"line":403},"line",1,[405],{"type":363,"tag":400,"props":406,"children":407},{},[408],{"type":368,"value":409},"输入：s = \"the sky is blue\"\n",{"type":363,"tag":400,"props":411,"children":413},{"class":402,"line":412},2,[414],{"type":363,"tag":400,"props":415,"children":416},{},[417],{"type":368,"value":418},"输出：\"blue is sky the\"\n",{"type":363,"tag":364,"props":420,"children":421},{},[422],{"type":368,"value":423},"示例 2：",{"type":363,"tag":390,"props":425,"children":427},{"className":392,"code":426,"language":368,"meta":356,"style":356},"输入：s = \" hello world \"\n输出：\"world hello\"\n解释：反转后的字符串中不能存在前导空格和尾随空格。\n",[428],{"type":363,"tag":396,"props":429,"children":430},{"__ignoreMap":356},[431,439,447],{"type":363,"tag":400,"props":432,"children":433},{"class":402,"line":403},[434],{"type":363,"tag":400,"props":435,"children":436},{},[437],{"type":368,"value":438},"输入：s = \" hello world \"\n",{"type":363,"tag":400,"props":440,"children":441},{"class":402,"line":412},[442],{"type":363,"tag":400,"props":443,"children":444},{},[445],{"type":368,"value":446},"输出：\"world hello\"\n",{"type":363,"tag":400,"props":448,"children":450},{"class":402,"line":449},3,[451],{"type":363,"tag":400,"props":452,"children":453},{},[454],{"type":368,"value":455},"解释：反转后的字符串中不能存在前导空格和尾随空格。\n",{"type":363,"tag":364,"props":457,"children":458},{},[459],{"type":368,"value":460},"示例 3：",{"type":363,"tag":390,"props":462,"children":464},{"className":392,"code":463,"language":368,"meta":356,"style":356},"输入：s = \"a good example\"\n输出：\"example good a\"\n解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",[465],{"type":363,"tag":396,"props":466,"children":467},{"__ignoreMap":356},[468,476,484],{"type":363,"tag":400,"props":469,"children":470},{"class":402,"line":403},[471],{"type":363,"tag":400,"props":472,"children":473},{},[474],{"type":368,"value":475},"输入：s = \"a good example\"\n",{"type":363,"tag":400,"props":477,"children":478},{"class":402,"line":412},[479],{"type":363,"tag":400,"props":480,"children":481},{},[482],{"type":368,"value":483},"输出：\"example good a\"\n",{"type":363,"tag":400,"props":485,"children":486},{"class":402,"line":449},[487],{"type":363,"tag":400,"props":488,"children":489},{},[490],{"type":368,"value":491},"解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",{"type":363,"tag":364,"props":493,"children":494},{},[495],{"type":368,"value":496},"提示：",{"type":363,"tag":498,"props":499,"children":500},"ul",{},[501,507,512],{"type":363,"tag":502,"props":503,"children":504},"li",{},[505],{"type":368,"value":506},"1 \u003C= s.length \u003C= 10^4",{"type":363,"tag":502,"props":508,"children":509},{},[510],{"type":368,"value":511},"s 包含英文大小写字母、数字和空格 ' '",{"type":363,"tag":502,"props":513,"children":514},{},[515],{"type":368,"value":516},"s 中 至少存在一个 单词",{"type":363,"tag":364,"props":518,"children":519},{},[520],{"type":368,"value":521},"进阶：如果字符串在你使用的编程语言中是一种可变数据类型，请尝试使用 O(1) 额外空间复杂度的 原地 解法。",{"type":363,"tag":523,"props":524,"children":526},"h2",{"id":525},"解题思路",[527],{"type":368,"value":525},{"type":363,"tag":523,"props":529,"children":531},{"id":530},"实现",[532],{"type":368,"value":530},{"type":363,"tag":534,"props":535,"children":537},"h3",{"id":536},"语言特性",[538],{"type":368,"value":536},{"type":363,"tag":390,"props":540,"children":544},{"className":541,"code":542,"language":543,"meta":356,"style":356},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  return s.split(\" \").filter(Boolean).reverse().join(\" \");\n};\n","js",[545],{"type":363,"tag":396,"props":546,"children":547},{"__ignoreMap":356},[548,557,583,600,609,653,759],{"type":363,"tag":400,"props":549,"children":550},{"class":402,"line":403},[551],{"type":363,"tag":400,"props":552,"children":554},{"style":553},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[555],{"type":368,"value":556},"/**\n",{"type":363,"tag":400,"props":558,"children":559},{"class":402,"line":412},[560,565,571,577],{"type":363,"tag":400,"props":561,"children":562},{"style":553},[563],{"type":368,"value":564}," * ",{"type":363,"tag":400,"props":566,"children":568},{"style":567},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[569],{"type":368,"value":570},"@param",{"type":363,"tag":400,"props":572,"children":574},{"style":573},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[575],{"type":368,"value":576}," {string}",{"type":363,"tag":400,"props":578,"children":580},{"style":579},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[581],{"type":368,"value":582}," s\n",{"type":363,"tag":400,"props":584,"children":585},{"class":402,"line":449},[586,590,595],{"type":363,"tag":400,"props":587,"children":588},{"style":553},[589],{"type":368,"value":564},{"type":363,"tag":400,"props":591,"children":592},{"style":567},[593],{"type":368,"value":594},"@return",{"type":363,"tag":400,"props":596,"children":597},{"style":573},[598],{"type":368,"value":599}," {string}\n",{"type":363,"tag":400,"props":601,"children":603},{"class":402,"line":602},4,[604],{"type":363,"tag":400,"props":605,"children":606},{"style":553},[607],{"type":368,"value":608}," */\n",{"type":363,"tag":400,"props":610,"children":612},{"class":402,"line":611},5,[613,619,625,631,636,642,648],{"type":363,"tag":400,"props":614,"children":616},{"style":615},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[617],{"type":368,"value":618},"var",{"type":363,"tag":400,"props":620,"children":622},{"style":621},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[623],{"type":368,"value":624}," reverseWords",{"type":363,"tag":400,"props":626,"children":628},{"style":627},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[629],{"type":368,"value":630}," =",{"type":363,"tag":400,"props":632,"children":633},{"style":615},[634],{"type":368,"value":635}," function",{"type":363,"tag":400,"props":637,"children":639},{"style":638},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[640],{"type":368,"value":641}," (",{"type":363,"tag":400,"props":643,"children":645},{"style":644},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[646],{"type":368,"value":647},"s",{"type":363,"tag":400,"props":649,"children":650},{"style":638},[651],{"type":368,"value":652},") {\n",{"type":363,"tag":400,"props":654,"children":656},{"class":402,"line":655},6,[657,663,669,675,680,685,691,696,700,705,709,714,718,722,727,732,736,741,745,749,753],{"type":363,"tag":400,"props":658,"children":660},{"style":659},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[661],{"type":368,"value":662},"  return",{"type":363,"tag":400,"props":664,"children":666},{"style":665},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[667],{"type":368,"value":668}," s",{"type":363,"tag":400,"props":670,"children":672},{"style":671},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[673],{"type":368,"value":674},".",{"type":363,"tag":400,"props":676,"children":677},{"style":621},[678],{"type":368,"value":679},"split",{"type":363,"tag":400,"props":681,"children":682},{"style":638},[683],{"type":368,"value":684},"(",{"type":363,"tag":400,"props":686,"children":688},{"style":687},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[689],{"type":368,"value":690},"\" \"",{"type":363,"tag":400,"props":692,"children":693},{"style":638},[694],{"type":368,"value":695},")",{"type":363,"tag":400,"props":697,"children":698},{"style":671},[699],{"type":368,"value":674},{"type":363,"tag":400,"props":701,"children":702},{"style":621},[703],{"type":368,"value":704},"filter",{"type":363,"tag":400,"props":706,"children":707},{"style":638},[708],{"type":368,"value":684},{"type":363,"tag":400,"props":710,"children":711},{"style":665},[712],{"type":368,"value":713},"Boolean",{"type":363,"tag":400,"props":715,"children":716},{"style":638},[717],{"type":368,"value":695},{"type":363,"tag":400,"props":719,"children":720},{"style":671},[721],{"type":368,"value":674},{"type":363,"tag":400,"props":723,"children":724},{"style":621},[725],{"type":368,"value":726},"reverse",{"type":363,"tag":400,"props":728,"children":729},{"style":638},[730],{"type":368,"value":731},"()",{"type":363,"tag":400,"props":733,"children":734},{"style":671},[735],{"type":368,"value":674},{"type":363,"tag":400,"props":737,"children":738},{"style":621},[739],{"type":368,"value":740},"join",{"type":363,"tag":400,"props":742,"children":743},{"style":638},[744],{"type":368,"value":684},{"type":363,"tag":400,"props":746,"children":747},{"style":687},[748],{"type":368,"value":690},{"type":363,"tag":400,"props":750,"children":751},{"style":638},[752],{"type":368,"value":695},{"type":363,"tag":400,"props":754,"children":756},{"style":755},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[757],{"type":368,"value":758},";\n",{"type":363,"tag":400,"props":760,"children":762},{"class":402,"line":761},7,[763,768],{"type":363,"tag":400,"props":764,"children":765},{"style":638},[766],{"type":368,"value":767},"}",{"type":363,"tag":400,"props":769,"children":770},{"style":755},[771],{"type":368,"value":758},{"type":363,"tag":534,"props":773,"children":775},{"id":774},"双指针",[776],{"type":368,"value":774},{"type":363,"tag":390,"props":778,"children":780},{"className":541,"code":779,"language":543,"meta":356,"style":356},"/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  // 倒序遍历字符串\n  // 1. 索引 i 从右向左搜索首个空格\n  // 2. 添加单词 s[i + 1, j + 1] 到 res\n  // 3. 索引 i 绕过两个单词间所有空格\n  // 4. 执行 j = i\n  let res = [];\n  let i = s.length - 1;\n  let j = i;\n  while (i >= 0) {\n    while (i >= 0 && s[i] !== \" \") i--; // 搜索首个空格\n    res.push(s.substring(i + 1, j + 1)); // 添加单词\n    while (i >= 0 && s[i] === \" \") i--; // 跳过单词间空格\n    j = i; // 指针移动，指向下个单词的尾字符\n  }\n  return res.join(\" \").trim();\n};\n",[781],{"type":363,"tag":396,"props":782,"children":783},{"__ignoreMap":356},[784,791,810,825,832,863,871,879,888,897,906,933,978,1003,1035,1117,1200,1274,1300,1309,1358],{"type":363,"tag":400,"props":785,"children":786},{"class":402,"line":403},[787],{"type":363,"tag":400,"props":788,"children":789},{"style":553},[790],{"type":368,"value":556},{"type":363,"tag":400,"props":792,"children":793},{"class":402,"line":412},[794,798,802,806],{"type":363,"tag":400,"props":795,"children":796},{"style":553},[797],{"type":368,"value":564},{"type":363,"tag":400,"props":799,"children":800},{"style":567},[801],{"type":368,"value":570},{"type":363,"tag":400,"props":803,"children":804},{"style":573},[805],{"type":368,"value":576},{"type":363,"tag":400,"props":807,"children":808},{"style":579},[809],{"type":368,"value":582},{"type":363,"tag":400,"props":811,"children":812},{"class":402,"line":449},[813,817,821],{"type":363,"tag":400,"props":814,"children":815},{"style":553},[816],{"type":368,"value":564},{"type":363,"tag":400,"props":818,"children":819},{"style":567},[820],{"type":368,"value":594},{"type":363,"tag":400,"props":822,"children":823},{"style":573},[824],{"type":368,"value":599},{"type":363,"tag":400,"props":826,"children":827},{"class":402,"line":602},[828],{"type":363,"tag":400,"props":829,"children":830},{"style":553},[831],{"type":368,"value":608},{"type":363,"tag":400,"props":833,"children":834},{"class":402,"line":611},[835,839,843,847,851,855,859],{"type":363,"tag":400,"props":836,"children":837},{"style":615},[838],{"type":368,"value":618},{"type":363,"tag":400,"props":840,"children":841},{"style":621},[842],{"type":368,"value":624},{"type":363,"tag":400,"props":844,"children":845},{"style":627},[846],{"type":368,"value":630},{"type":363,"tag":400,"props":848,"children":849},{"style":615},[850],{"type":368,"value":635},{"type":363,"tag":400,"props":852,"children":853},{"style":638},[854],{"type":368,"value":641},{"type":363,"tag":400,"props":856,"children":857},{"style":644},[858],{"type":368,"value":647},{"type":363,"tag":400,"props":860,"children":861},{"style":638},[862],{"type":368,"value":652},{"type":363,"tag":400,"props":864,"children":865},{"class":402,"line":655},[866],{"type":363,"tag":400,"props":867,"children":868},{"style":553},[869],{"type":368,"value":870},"  // 倒序遍历字符串\n",{"type":363,"tag":400,"props":872,"children":873},{"class":402,"line":761},[874],{"type":363,"tag":400,"props":875,"children":876},{"style":553},[877],{"type":368,"value":878},"  // 1. 索引 i 从右向左搜索首个空格\n",{"type":363,"tag":400,"props":880,"children":882},{"class":402,"line":881},8,[883],{"type":363,"tag":400,"props":884,"children":885},{"style":553},[886],{"type":368,"value":887},"  // 2. 添加单词 s[i + 1, j + 1] 到 res\n",{"type":363,"tag":400,"props":889,"children":891},{"class":402,"line":890},9,[892],{"type":363,"tag":400,"props":893,"children":894},{"style":553},[895],{"type":368,"value":896},"  // 3. 索引 i 绕过两个单词间所有空格\n",{"type":363,"tag":400,"props":898,"children":900},{"class":402,"line":899},10,[901],{"type":363,"tag":400,"props":902,"children":903},{"style":553},[904],{"type":368,"value":905},"  // 4. 执行 j = i\n",{"type":363,"tag":400,"props":907,"children":909},{"class":402,"line":908},11,[910,915,920,924,929],{"type":363,"tag":400,"props":911,"children":912},{"style":615},[913],{"type":368,"value":914},"  let",{"type":363,"tag":400,"props":916,"children":917},{"style":665},[918],{"type":368,"value":919}," res",{"type":363,"tag":400,"props":921,"children":922},{"style":627},[923],{"type":368,"value":630},{"type":363,"tag":400,"props":925,"children":926},{"style":638},[927],{"type":368,"value":928}," []",{"type":363,"tag":400,"props":930,"children":931},{"style":755},[932],{"type":368,"value":758},{"type":363,"tag":400,"props":934,"children":936},{"class":402,"line":935},12,[937,941,946,950,954,958,963,968,974],{"type":363,"tag":400,"props":938,"children":939},{"style":615},[940],{"type":368,"value":914},{"type":363,"tag":400,"props":942,"children":943},{"style":665},[944],{"type":368,"value":945}," i",{"type":363,"tag":400,"props":947,"children":948},{"style":627},[949],{"type":368,"value":630},{"type":363,"tag":400,"props":951,"children":952},{"style":665},[953],{"type":368,"value":668},{"type":363,"tag":400,"props":955,"children":956},{"style":671},[957],{"type":368,"value":674},{"type":363,"tag":400,"props":959,"children":960},{"style":638},[961],{"type":368,"value":962},"length ",{"type":363,"tag":400,"props":964,"children":965},{"style":627},[966],{"type":368,"value":967},"-",{"type":363,"tag":400,"props":969,"children":971},{"style":970},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[972],{"type":368,"value":973}," 1",{"type":363,"tag":400,"props":975,"children":976},{"style":755},[977],{"type":368,"value":758},{"type":363,"tag":400,"props":979,"children":981},{"class":402,"line":980},13,[982,986,991,995,999],{"type":363,"tag":400,"props":983,"children":984},{"style":615},[985],{"type":368,"value":914},{"type":363,"tag":400,"props":987,"children":988},{"style":665},[989],{"type":368,"value":990}," j",{"type":363,"tag":400,"props":992,"children":993},{"style":627},[994],{"type":368,"value":630},{"type":363,"tag":400,"props":996,"children":997},{"style":665},[998],{"type":368,"value":945},{"type":363,"tag":400,"props":1000,"children":1001},{"style":755},[1002],{"type":368,"value":758},{"type":363,"tag":400,"props":1004,"children":1006},{"class":402,"line":1005},14,[1007,1012,1016,1021,1026,1031],{"type":363,"tag":400,"props":1008,"children":1009},{"style":659},[1010],{"type":368,"value":1011},"  while",{"type":363,"tag":400,"props":1013,"children":1014},{"style":638},[1015],{"type":368,"value":641},{"type":363,"tag":400,"props":1017,"children":1018},{"style":665},[1019],{"type":368,"value":1020},"i",{"type":363,"tag":400,"props":1022,"children":1023},{"style":627},[1024],{"type":368,"value":1025}," >=",{"type":363,"tag":400,"props":1027,"children":1028},{"style":970},[1029],{"type":368,"value":1030}," 0",{"type":363,"tag":400,"props":1032,"children":1033},{"style":638},[1034],{"type":368,"value":652},{"type":363,"tag":400,"props":1036,"children":1038},{"class":402,"line":1037},15,[1039,1044,1048,1052,1056,1060,1065,1069,1074,1078,1083,1088,1093,1098,1102,1107,1112],{"type":363,"tag":400,"props":1040,"children":1041},{"style":659},[1042],{"type":368,"value":1043},"    while",{"type":363,"tag":400,"props":1045,"children":1046},{"style":638},[1047],{"type":368,"value":641},{"type":363,"tag":400,"props":1049,"children":1050},{"style":665},[1051],{"type":368,"value":1020},{"type":363,"tag":400,"props":1053,"children":1054},{"style":627},[1055],{"type":368,"value":1025},{"type":363,"tag":400,"props":1057,"children":1058},{"style":970},[1059],{"type":368,"value":1030},{"type":363,"tag":400,"props":1061,"children":1062},{"style":627},[1063],{"type":368,"value":1064}," &&",{"type":363,"tag":400,"props":1066,"children":1067},{"style":665},[1068],{"type":368,"value":668},{"type":363,"tag":400,"props":1070,"children":1071},{"style":638},[1072],{"type":368,"value":1073},"[",{"type":363,"tag":400,"props":1075,"children":1076},{"style":665},[1077],{"type":368,"value":1020},{"type":363,"tag":400,"props":1079,"children":1080},{"style":638},[1081],{"type":368,"value":1082},"] ",{"type":363,"tag":400,"props":1084,"children":1085},{"style":627},[1086],{"type":368,"value":1087},"!==",{"type":363,"tag":400,"props":1089,"children":1090},{"style":687},[1091],{"type":368,"value":1092}," \" \"",{"type":363,"tag":400,"props":1094,"children":1095},{"style":638},[1096],{"type":368,"value":1097},") ",{"type":363,"tag":400,"props":1099,"children":1100},{"style":665},[1101],{"type":368,"value":1020},{"type":363,"tag":400,"props":1103,"children":1104},{"style":627},[1105],{"type":368,"value":1106},"--",{"type":363,"tag":400,"props":1108,"children":1109},{"style":755},[1110],{"type":368,"value":1111},";",{"type":363,"tag":400,"props":1113,"children":1114},{"style":553},[1115],{"type":368,"value":1116}," // 搜索首个空格\n",{"type":363,"tag":400,"props":1118,"children":1120},{"class":402,"line":1119},16,[1121,1126,1130,1135,1139,1143,1147,1152,1156,1160,1165,1169,1174,1178,1182,1186,1191,1195],{"type":363,"tag":400,"props":1122,"children":1123},{"style":665},[1124],{"type":368,"value":1125},"    res",{"type":363,"tag":400,"props":1127,"children":1128},{"style":671},[1129],{"type":368,"value":674},{"type":363,"tag":400,"props":1131,"children":1132},{"style":621},[1133],{"type":368,"value":1134},"push",{"type":363,"tag":400,"props":1136,"children":1137},{"style":638},[1138],{"type":368,"value":684},{"type":363,"tag":400,"props":1140,"children":1141},{"style":665},[1142],{"type":368,"value":647},{"type":363,"tag":400,"props":1144,"children":1145},{"style":671},[1146],{"type":368,"value":674},{"type":363,"tag":400,"props":1148,"children":1149},{"style":621},[1150],{"type":368,"value":1151},"substring",{"type":363,"tag":400,"props":1153,"children":1154},{"style":638},[1155],{"type":368,"value":684},{"type":363,"tag":400,"props":1157,"children":1158},{"style":665},[1159],{"type":368,"value":1020},{"type":363,"tag":400,"props":1161,"children":1162},{"style":627},[1163],{"type":368,"value":1164}," +",{"type":363,"tag":400,"props":1166,"children":1167},{"style":970},[1168],{"type":368,"value":973},{"type":363,"tag":400,"props":1170,"children":1171},{"style":755},[1172],{"type":368,"value":1173},",",{"type":363,"tag":400,"props":1175,"children":1176},{"style":665},[1177],{"type":368,"value":990},{"type":363,"tag":400,"props":1179,"children":1180},{"style":627},[1181],{"type":368,"value":1164},{"type":363,"tag":400,"props":1183,"children":1184},{"style":970},[1185],{"type":368,"value":973},{"type":363,"tag":400,"props":1187,"children":1188},{"style":638},[1189],{"type":368,"value":1190},"))",{"type":363,"tag":400,"props":1192,"children":1193},{"style":755},[1194],{"type":368,"value":1111},{"type":363,"tag":400,"props":1196,"children":1197},{"style":553},[1198],{"type":368,"value":1199}," // 添加单词\n",{"type":363,"tag":400,"props":1201,"children":1203},{"class":402,"line":1202},17,[1204,1208,1212,1216,1220,1224,1228,1232,1236,1240,1244,1249,1253,1257,1261,1265,1269],{"type":363,"tag":400,"props":1205,"children":1206},{"style":659},[1207],{"type":368,"value":1043},{"type":363,"tag":400,"props":1209,"children":1210},{"style":638},[1211],{"type":368,"value":641},{"type":363,"tag":400,"props":1213,"children":1214},{"style":665},[1215],{"type":368,"value":1020},{"type":363,"tag":400,"props":1217,"children":1218},{"style":627},[1219],{"type":368,"value":1025},{"type":363,"tag":400,"props":1221,"children":1222},{"style":970},[1223],{"type":368,"value":1030},{"type":363,"tag":400,"props":1225,"children":1226},{"style":627},[1227],{"type":368,"value":1064},{"type":363,"tag":400,"props":1229,"children":1230},{"style":665},[1231],{"type":368,"value":668},{"type":363,"tag":400,"props":1233,"children":1234},{"style":638},[1235],{"type":368,"value":1073},{"type":363,"tag":400,"props":1237,"children":1238},{"style":665},[1239],{"type":368,"value":1020},{"type":363,"tag":400,"props":1241,"children":1242},{"style":638},[1243],{"type":368,"value":1082},{"type":363,"tag":400,"props":1245,"children":1246},{"style":627},[1247],{"type":368,"value":1248},"===",{"type":363,"tag":400,"props":1250,"children":1251},{"style":687},[1252],{"type":368,"value":1092},{"type":363,"tag":400,"props":1254,"children":1255},{"style":638},[1256],{"type":368,"value":1097},{"type":363,"tag":400,"props":1258,"children":1259},{"style":665},[1260],{"type":368,"value":1020},{"type":363,"tag":400,"props":1262,"children":1263},{"style":627},[1264],{"type":368,"value":1106},{"type":363,"tag":400,"props":1266,"children":1267},{"style":755},[1268],{"type":368,"value":1111},{"type":363,"tag":400,"props":1270,"children":1271},{"style":553},[1272],{"type":368,"value":1273}," // 跳过单词间空格\n",{"type":363,"tag":400,"props":1275,"children":1277},{"class":402,"line":1276},18,[1278,1283,1287,1291,1295],{"type":363,"tag":400,"props":1279,"children":1280},{"style":665},[1281],{"type":368,"value":1282},"    j",{"type":363,"tag":400,"props":1284,"children":1285},{"style":627},[1286],{"type":368,"value":630},{"type":363,"tag":400,"props":1288,"children":1289},{"style":665},[1290],{"type":368,"value":945},{"type":363,"tag":400,"props":1292,"children":1293},{"style":755},[1294],{"type":368,"value":1111},{"type":363,"tag":400,"props":1296,"children":1297},{"style":553},[1298],{"type":368,"value":1299}," // 指针移动，指向下个单词的尾字符\n",{"type":363,"tag":400,"props":1301,"children":1303},{"class":402,"line":1302},19,[1304],{"type":363,"tag":400,"props":1305,"children":1306},{"style":638},[1307],{"type":368,"value":1308},"  }\n",{"type":363,"tag":400,"props":1310,"children":1312},{"class":402,"line":1311},20,[1313,1317,1321,1325,1329,1333,1337,1341,1345,1350,1354],{"type":363,"tag":400,"props":1314,"children":1315},{"style":659},[1316],{"type":368,"value":662},{"type":363,"tag":400,"props":1318,"children":1319},{"style":665},[1320],{"type":368,"value":919},{"type":363,"tag":400,"props":1322,"children":1323},{"style":671},[1324],{"type":368,"value":674},{"type":363,"tag":400,"props":1326,"children":1327},{"style":621},[1328],{"type":368,"value":740},{"type":363,"tag":400,"props":1330,"children":1331},{"style":638},[1332],{"type":368,"value":684},{"type":363,"tag":400,"props":1334,"children":1335},{"style":687},[1336],{"type":368,"value":690},{"type":363,"tag":400,"props":1338,"children":1339},{"style":638},[1340],{"type":368,"value":695},{"type":363,"tag":400,"props":1342,"children":1343},{"style":671},[1344],{"type":368,"value":674},{"type":363,"tag":400,"props":1346,"children":1347},{"style":621},[1348],{"type":368,"value":1349},"trim",{"type":363,"tag":400,"props":1351,"children":1352},{"style":638},[1353],{"type":368,"value":731},{"type":363,"tag":400,"props":1355,"children":1356},{"style":755},[1357],{"type":368,"value":758},{"type":363,"tag":400,"props":1359,"children":1361},{"class":402,"line":1360},21,[1362,1366],{"type":363,"tag":400,"props":1363,"children":1364},{"style":638},[1365],{"type":368,"value":767},{"type":363,"tag":400,"props":1367,"children":1368},{"style":755},[1369],{"type":368,"value":758},{"type":363,"tag":1371,"props":1372,"children":1373},"style",{},[1374],{"type":368,"value":1375},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":356,"searchDepth":611,"depth":611,"links":1377},[1378,1379],{"id":525,"depth":412,"text":525},{"id":530,"depth":412,"text":530,"children":1380},[1381,1382],{"id":536,"depth":449,"text":536},{"id":774,"depth":449,"text":774},"markdown","content:2.code:1.algorithm:3.leetcode:151.reverse-words-in-a-string.md","content","2.code/1.algorithm/3.leetcode/151.reverse-words-in-a-string.md","md",[1389,1391],{"_path":178,"title":177,"description":1390},"请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：",{"_path":184,"title":183,"description":1392},"已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：",1712589911746]