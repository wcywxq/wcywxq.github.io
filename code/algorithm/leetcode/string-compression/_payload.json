[{"data":1,"prerenderedAt":1269},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/string-compression":359,"/code/algorithm/leetcode/string-compression-surround":1264},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,269,318],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263,266],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.165 比较版本号","/code/algorithm/leetcode/compare-version-numbers",{"title":198,"_path":199},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":201,"_path":202},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":204,"_path":205},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":207,"_path":208},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":210,"_path":211},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":213,"_path":214},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":216,"_path":217},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":219,"_path":220},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":222,"_path":223},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":225,"_path":226},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":228,"_path":229},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":231,"_path":232},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":234,"_path":235},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":237,"_path":238},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":240,"_path":241},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":243,"_path":244},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":246,"_path":247},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":249,"_path":250},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":252,"_path":253},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":255,"_path":256},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":258,"_path":259},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":261,"_path":262},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":264,"_path":265},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":267,"_path":268},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":270,"_path":271,"children":272},"源码实现","/code/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/code/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/code/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/code/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/code/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/code/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/code/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/code/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/code/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/code/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/code/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/code/source/string",[315],{"title":316,"_path":317},"repeat()","/code/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/code/scene",[322,344,347,350,353,356],{"title":323,"_path":324,"children":325},"Promise","/code/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/code/scene/calcuate-object-bytes",{"title":348,"_path":349},"lodash.get","/code/scene/lodash-get",{"title":351,"_path":352},"记忆化请求函数 - 可缓存请求函数","/code/scene/memorize-request",{"title":354,"_path":355},"sku 算法实现","/code/scene/sku",{"title":357,"_path":358},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":238,"_dir":360,"_draft":361,"_partial":361,"_locale":362,"title":237,"description":363,"url":364,"body":365,"_type":1259,"_id":1260,"_source":1261,"_file":1262,"_extension":1263},"leetcode",false,"","给你一个字符数组 chars ，请使用下述算法压缩：","https://leetcode.cn/problems/string-compression",{"type":366,"children":367,"toc":1253},"root",[368,375,380,385,390,395,400,439,444,475,480,511,516,531,537,542,548,1247],{"type":369,"tag":370,"props":371,"children":372},"element","p",{},[373],{"type":374,"value":363},"text",{"type":369,"tag":370,"props":376,"children":377},{},[378],{"type":374,"value":379},"从一个空字符串 s 开始。对于 chars 中的每组 连续重复字符 ：",{"type":369,"tag":370,"props":381,"children":382},{},[383],{"type":374,"value":384},"如果这一组长度为 1 ，则将字符追加到 s 中。\n否则，需要向 s 追加字符，后跟这一组的长度。\n压缩后得到的字符串 s 不应该直接返回 ，需要转储到字符数组 chars 中。需要注意的是，如果组长度为 10 或 10 以上，则在 chars 数组中会被拆分为多个字符。",{"type":369,"tag":370,"props":386,"children":387},{},[388],{"type":374,"value":389},"请在 修改完输入数组后 ，返回该数组的新长度。",{"type":369,"tag":370,"props":391,"children":392},{},[393],{"type":374,"value":394},"你必须设计并实现一个只使用常量额外空间的算法来解决此问题。",{"type":369,"tag":370,"props":396,"children":397},{},[398],{"type":374,"value":399},"示例 1：",{"type":369,"tag":401,"props":402,"children":405},"pre",{"className":403,"code":404,"language":374,"meta":362,"style":362},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",[406],{"type":369,"tag":407,"props":408,"children":409},"code",{"__ignoreMap":362},[410,421,430],{"type":369,"tag":411,"props":412,"children":415},"span",{"class":413,"line":414},"line",1,[416],{"type":369,"tag":411,"props":417,"children":418},{},[419],{"type":374,"value":420},"输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n",{"type":369,"tag":411,"props":422,"children":424},{"class":413,"line":423},2,[425],{"type":369,"tag":411,"props":426,"children":427},{},[428],{"type":374,"value":429},"输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n",{"type":369,"tag":411,"props":431,"children":433},{"class":413,"line":432},3,[434],{"type":369,"tag":411,"props":435,"children":436},{},[437],{"type":374,"value":438},"解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",{"type":369,"tag":370,"props":440,"children":441},{},[442],{"type":374,"value":443},"示例 2：",{"type":369,"tag":401,"props":445,"children":447},{"className":403,"code":446,"language":374,"meta":362,"style":362},"输入：chars = [\"a\"]\n输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",[448],{"type":369,"tag":407,"props":449,"children":450},{"__ignoreMap":362},[451,459,467],{"type":369,"tag":411,"props":452,"children":453},{"class":413,"line":414},[454],{"type":369,"tag":411,"props":455,"children":456},{},[457],{"type":374,"value":458},"输入：chars = [\"a\"]\n",{"type":369,"tag":411,"props":460,"children":461},{"class":413,"line":423},[462],{"type":369,"tag":411,"props":463,"children":464},{},[465],{"type":374,"value":466},"输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n",{"type":369,"tag":411,"props":468,"children":469},{"class":413,"line":432},[470],{"type":369,"tag":411,"props":471,"children":472},{},[473],{"type":374,"value":474},"解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",{"type":369,"tag":370,"props":476,"children":477},{},[478],{"type":374,"value":479},"示例 3：",{"type":369,"tag":401,"props":481,"children":483},{"className":403,"code":482,"language":374,"meta":362,"style":362},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",[484],{"type":369,"tag":407,"props":485,"children":486},{"__ignoreMap":362},[487,495,503],{"type":369,"tag":411,"props":488,"children":489},{"class":413,"line":414},[490],{"type":369,"tag":411,"props":491,"children":492},{},[493],{"type":374,"value":494},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n",{"type":369,"tag":411,"props":496,"children":497},{"class":413,"line":423},[498],{"type":369,"tag":411,"props":499,"children":500},{},[501],{"type":374,"value":502},"输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n",{"type":369,"tag":411,"props":504,"children":505},{"class":413,"line":432},[506],{"type":369,"tag":411,"props":507,"children":508},{},[509],{"type":374,"value":510},"解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",{"type":369,"tag":370,"props":512,"children":513},{},[514],{"type":374,"value":515},"提示：",{"type":369,"tag":517,"props":518,"children":519},"ul",{},[520,526],{"type":369,"tag":521,"props":522,"children":523},"li",{},[524],{"type":374,"value":525},"1 \u003C= chars.length \u003C= 2000",{"type":369,"tag":521,"props":527,"children":528},{},[529],{"type":374,"value":530},"chars[i] 可以是小写英文字母、大写英文字母、数字或符号",{"type":369,"tag":532,"props":533,"children":535},"h2",{"id":534},"解题思路",[536],{"type":374,"value":534},{"type":369,"tag":532,"props":538,"children":540},{"id":539},"实现",[541],{"type":374,"value":539},{"type":369,"tag":543,"props":544,"children":546},"h3",{"id":545},"双指针",[547],{"type":374,"value":545},{"type":369,"tag":401,"props":549,"children":553},{"className":550,"code":551,"language":552,"meta":362,"style":362},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {character[]} chars\n * @return {number}\n */\nvar compress = function (chars) {\n  const len = chars.length;\n  let i = 0;\n  let j = i + 1;\n  let s = \"\";\n\n  while (j \u003C= len) {\n    if (chars[i] !== chars[j]) {\n      s += j - i > 1 ? `${chars[i]}${j - i}` : chars[i];\n      i = j;\n    }\n    j++;\n  }\n\n  for (let i = 0; i \u003C s.length; i++) {\n    chars[i] = s[i];\n  }\n\n  return s.length;\n};\n","js",[554],{"type":369,"tag":407,"props":555,"children":556},{"__ignoreMap":362},[557,566,592,609,618,662,703,731,766,793,803,835,889,1011,1032,1041,1059,1068,1076,1148,1194,1202,1210,1235],{"type":369,"tag":411,"props":558,"children":559},{"class":413,"line":414},[560],{"type":369,"tag":411,"props":561,"children":563},{"style":562},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[564],{"type":374,"value":565},"/**\n",{"type":369,"tag":411,"props":567,"children":568},{"class":413,"line":423},[569,574,580,586],{"type":369,"tag":411,"props":570,"children":571},{"style":562},[572],{"type":374,"value":573}," * ",{"type":369,"tag":411,"props":575,"children":577},{"style":576},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[578],{"type":374,"value":579},"@param",{"type":369,"tag":411,"props":581,"children":583},{"style":582},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[584],{"type":374,"value":585}," {character[]}",{"type":369,"tag":411,"props":587,"children":589},{"style":588},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[590],{"type":374,"value":591}," chars\n",{"type":369,"tag":411,"props":593,"children":594},{"class":413,"line":432},[595,599,604],{"type":369,"tag":411,"props":596,"children":597},{"style":562},[598],{"type":374,"value":573},{"type":369,"tag":411,"props":600,"children":601},{"style":576},[602],{"type":374,"value":603},"@return",{"type":369,"tag":411,"props":605,"children":606},{"style":582},[607],{"type":374,"value":608}," {number}\n",{"type":369,"tag":411,"props":610,"children":612},{"class":413,"line":611},4,[613],{"type":369,"tag":411,"props":614,"children":615},{"style":562},[616],{"type":374,"value":617}," */\n",{"type":369,"tag":411,"props":619,"children":621},{"class":413,"line":620},5,[622,628,634,640,645,651,657],{"type":369,"tag":411,"props":623,"children":625},{"style":624},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[626],{"type":374,"value":627},"var",{"type":369,"tag":411,"props":629,"children":631},{"style":630},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[632],{"type":374,"value":633}," compress",{"type":369,"tag":411,"props":635,"children":637},{"style":636},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[638],{"type":374,"value":639}," =",{"type":369,"tag":411,"props":641,"children":642},{"style":624},[643],{"type":374,"value":644}," function",{"type":369,"tag":411,"props":646,"children":648},{"style":647},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[649],{"type":374,"value":650}," (",{"type":369,"tag":411,"props":652,"children":654},{"style":653},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[655],{"type":374,"value":656},"chars",{"type":369,"tag":411,"props":658,"children":659},{"style":647},[660],{"type":374,"value":661},") {\n",{"type":369,"tag":411,"props":663,"children":665},{"class":413,"line":664},6,[666,671,677,681,686,692,697],{"type":369,"tag":411,"props":667,"children":668},{"style":624},[669],{"type":374,"value":670},"  const",{"type":369,"tag":411,"props":672,"children":674},{"style":673},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[675],{"type":374,"value":676}," len",{"type":369,"tag":411,"props":678,"children":679},{"style":636},[680],{"type":374,"value":639},{"type":369,"tag":411,"props":682,"children":683},{"style":673},[684],{"type":374,"value":685}," chars",{"type":369,"tag":411,"props":687,"children":689},{"style":688},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[690],{"type":374,"value":691},".",{"type":369,"tag":411,"props":693,"children":694},{"style":647},[695],{"type":374,"value":696},"length",{"type":369,"tag":411,"props":698,"children":700},{"style":699},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[701],{"type":374,"value":702},";\n",{"type":369,"tag":411,"props":704,"children":706},{"class":413,"line":705},7,[707,712,717,721,727],{"type":369,"tag":411,"props":708,"children":709},{"style":624},[710],{"type":374,"value":711},"  let",{"type":369,"tag":411,"props":713,"children":714},{"style":673},[715],{"type":374,"value":716}," i",{"type":369,"tag":411,"props":718,"children":719},{"style":636},[720],{"type":374,"value":639},{"type":369,"tag":411,"props":722,"children":724},{"style":723},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[725],{"type":374,"value":726}," 0",{"type":369,"tag":411,"props":728,"children":729},{"style":699},[730],{"type":374,"value":702},{"type":369,"tag":411,"props":732,"children":734},{"class":413,"line":733},8,[735,739,744,748,752,757,762],{"type":369,"tag":411,"props":736,"children":737},{"style":624},[738],{"type":374,"value":711},{"type":369,"tag":411,"props":740,"children":741},{"style":673},[742],{"type":374,"value":743}," j",{"type":369,"tag":411,"props":745,"children":746},{"style":636},[747],{"type":374,"value":639},{"type":369,"tag":411,"props":749,"children":750},{"style":673},[751],{"type":374,"value":716},{"type":369,"tag":411,"props":753,"children":754},{"style":636},[755],{"type":374,"value":756}," +",{"type":369,"tag":411,"props":758,"children":759},{"style":723},[760],{"type":374,"value":761}," 1",{"type":369,"tag":411,"props":763,"children":764},{"style":699},[765],{"type":374,"value":702},{"type":369,"tag":411,"props":767,"children":769},{"class":413,"line":768},9,[770,774,779,783,789],{"type":369,"tag":411,"props":771,"children":772},{"style":624},[773],{"type":374,"value":711},{"type":369,"tag":411,"props":775,"children":776},{"style":673},[777],{"type":374,"value":778}," s",{"type":369,"tag":411,"props":780,"children":781},{"style":636},[782],{"type":374,"value":639},{"type":369,"tag":411,"props":784,"children":786},{"style":785},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[787],{"type":374,"value":788}," \"\"",{"type":369,"tag":411,"props":790,"children":791},{"style":699},[792],{"type":374,"value":702},{"type":369,"tag":411,"props":794,"children":796},{"class":413,"line":795},10,[797],{"type":369,"tag":411,"props":798,"children":800},{"emptyLinePlaceholder":799},true,[801],{"type":374,"value":802},"\n",{"type":369,"tag":411,"props":804,"children":806},{"class":413,"line":805},11,[807,813,817,822,827,831],{"type":369,"tag":411,"props":808,"children":810},{"style":809},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[811],{"type":374,"value":812},"  while",{"type":369,"tag":411,"props":814,"children":815},{"style":647},[816],{"type":374,"value":650},{"type":369,"tag":411,"props":818,"children":819},{"style":673},[820],{"type":374,"value":821},"j",{"type":369,"tag":411,"props":823,"children":824},{"style":636},[825],{"type":374,"value":826}," \u003C=",{"type":369,"tag":411,"props":828,"children":829},{"style":673},[830],{"type":374,"value":676},{"type":369,"tag":411,"props":832,"children":833},{"style":647},[834],{"type":374,"value":661},{"type":369,"tag":411,"props":836,"children":838},{"class":413,"line":837},12,[839,844,848,852,857,862,867,872,876,880,884],{"type":369,"tag":411,"props":840,"children":841},{"style":809},[842],{"type":374,"value":843},"    if",{"type":369,"tag":411,"props":845,"children":846},{"style":647},[847],{"type":374,"value":650},{"type":369,"tag":411,"props":849,"children":850},{"style":673},[851],{"type":374,"value":656},{"type":369,"tag":411,"props":853,"children":854},{"style":647},[855],{"type":374,"value":856},"[",{"type":369,"tag":411,"props":858,"children":859},{"style":673},[860],{"type":374,"value":861},"i",{"type":369,"tag":411,"props":863,"children":864},{"style":647},[865],{"type":374,"value":866},"] ",{"type":369,"tag":411,"props":868,"children":869},{"style":636},[870],{"type":374,"value":871},"!==",{"type":369,"tag":411,"props":873,"children":874},{"style":673},[875],{"type":374,"value":685},{"type":369,"tag":411,"props":877,"children":878},{"style":647},[879],{"type":374,"value":856},{"type":369,"tag":411,"props":881,"children":882},{"style":673},[883],{"type":374,"value":821},{"type":369,"tag":411,"props":885,"children":886},{"style":647},[887],{"type":374,"value":888},"]) {\n",{"type":369,"tag":411,"props":890,"children":892},{"class":413,"line":891},13,[893,898,903,907,912,916,921,925,930,935,941,945,950,954,959,964,968,972,976,981,986,991,995,999,1003,1007],{"type":369,"tag":411,"props":894,"children":895},{"style":673},[896],{"type":374,"value":897},"      s",{"type":369,"tag":411,"props":899,"children":900},{"style":636},[901],{"type":374,"value":902}," +=",{"type":369,"tag":411,"props":904,"children":905},{"style":673},[906],{"type":374,"value":743},{"type":369,"tag":411,"props":908,"children":909},{"style":636},[910],{"type":374,"value":911}," -",{"type":369,"tag":411,"props":913,"children":914},{"style":673},[915],{"type":374,"value":716},{"type":369,"tag":411,"props":917,"children":918},{"style":636},[919],{"type":374,"value":920}," >",{"type":369,"tag":411,"props":922,"children":923},{"style":723},[924],{"type":374,"value":761},{"type":369,"tag":411,"props":926,"children":927},{"style":636},[928],{"type":374,"value":929}," ?",{"type":369,"tag":411,"props":931,"children":932},{"style":785},[933],{"type":374,"value":934}," `",{"type":369,"tag":411,"props":936,"children":938},{"style":937},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#FF8F40",[939],{"type":374,"value":940},"${",{"type":369,"tag":411,"props":942,"children":943},{"style":673},[944],{"type":374,"value":656},{"type":369,"tag":411,"props":946,"children":948},{"style":947},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#BFBDB6",[949],{"type":374,"value":856},{"type":369,"tag":411,"props":951,"children":952},{"style":673},[953],{"type":374,"value":861},{"type":369,"tag":411,"props":955,"children":956},{"style":947},[957],{"type":374,"value":958},"]",{"type":369,"tag":411,"props":960,"children":961},{"style":937},[962],{"type":374,"value":963},"}${",{"type":369,"tag":411,"props":965,"children":966},{"style":673},[967],{"type":374,"value":821},{"type":369,"tag":411,"props":969,"children":970},{"style":636},[971],{"type":374,"value":911},{"type":369,"tag":411,"props":973,"children":974},{"style":673},[975],{"type":374,"value":716},{"type":369,"tag":411,"props":977,"children":978},{"style":937},[979],{"type":374,"value":980},"}",{"type":369,"tag":411,"props":982,"children":983},{"style":785},[984],{"type":374,"value":985},"`",{"type":369,"tag":411,"props":987,"children":988},{"style":636},[989],{"type":374,"value":990}," :",{"type":369,"tag":411,"props":992,"children":993},{"style":673},[994],{"type":374,"value":685},{"type":369,"tag":411,"props":996,"children":997},{"style":647},[998],{"type":374,"value":856},{"type":369,"tag":411,"props":1000,"children":1001},{"style":673},[1002],{"type":374,"value":861},{"type":369,"tag":411,"props":1004,"children":1005},{"style":647},[1006],{"type":374,"value":958},{"type":369,"tag":411,"props":1008,"children":1009},{"style":699},[1010],{"type":374,"value":702},{"type":369,"tag":411,"props":1012,"children":1014},{"class":413,"line":1013},14,[1015,1020,1024,1028],{"type":369,"tag":411,"props":1016,"children":1017},{"style":673},[1018],{"type":374,"value":1019},"      i",{"type":369,"tag":411,"props":1021,"children":1022},{"style":636},[1023],{"type":374,"value":639},{"type":369,"tag":411,"props":1025,"children":1026},{"style":673},[1027],{"type":374,"value":743},{"type":369,"tag":411,"props":1029,"children":1030},{"style":699},[1031],{"type":374,"value":702},{"type":369,"tag":411,"props":1033,"children":1035},{"class":413,"line":1034},15,[1036],{"type":369,"tag":411,"props":1037,"children":1038},{"style":647},[1039],{"type":374,"value":1040},"    }\n",{"type":369,"tag":411,"props":1042,"children":1044},{"class":413,"line":1043},16,[1045,1050,1055],{"type":369,"tag":411,"props":1046,"children":1047},{"style":673},[1048],{"type":374,"value":1049},"    j",{"type":369,"tag":411,"props":1051,"children":1052},{"style":636},[1053],{"type":374,"value":1054},"++",{"type":369,"tag":411,"props":1056,"children":1057},{"style":699},[1058],{"type":374,"value":702},{"type":369,"tag":411,"props":1060,"children":1062},{"class":413,"line":1061},17,[1063],{"type":369,"tag":411,"props":1064,"children":1065},{"style":647},[1066],{"type":374,"value":1067},"  }\n",{"type":369,"tag":411,"props":1069,"children":1071},{"class":413,"line":1070},18,[1072],{"type":369,"tag":411,"props":1073,"children":1074},{"emptyLinePlaceholder":799},[1075],{"type":374,"value":802},{"type":369,"tag":411,"props":1077,"children":1079},{"class":413,"line":1078},19,[1080,1085,1089,1094,1098,1102,1106,1111,1115,1120,1124,1128,1132,1136,1140,1144],{"type":369,"tag":411,"props":1081,"children":1082},{"style":809},[1083],{"type":374,"value":1084},"  for",{"type":369,"tag":411,"props":1086,"children":1087},{"style":647},[1088],{"type":374,"value":650},{"type":369,"tag":411,"props":1090,"children":1091},{"style":624},[1092],{"type":374,"value":1093},"let",{"type":369,"tag":411,"props":1095,"children":1096},{"style":673},[1097],{"type":374,"value":716},{"type":369,"tag":411,"props":1099,"children":1100},{"style":636},[1101],{"type":374,"value":639},{"type":369,"tag":411,"props":1103,"children":1104},{"style":723},[1105],{"type":374,"value":726},{"type":369,"tag":411,"props":1107,"children":1108},{"style":699},[1109],{"type":374,"value":1110},";",{"type":369,"tag":411,"props":1112,"children":1113},{"style":673},[1114],{"type":374,"value":716},{"type":369,"tag":411,"props":1116,"children":1117},{"style":636},[1118],{"type":374,"value":1119}," \u003C",{"type":369,"tag":411,"props":1121,"children":1122},{"style":673},[1123],{"type":374,"value":778},{"type":369,"tag":411,"props":1125,"children":1126},{"style":688},[1127],{"type":374,"value":691},{"type":369,"tag":411,"props":1129,"children":1130},{"style":647},[1131],{"type":374,"value":696},{"type":369,"tag":411,"props":1133,"children":1134},{"style":699},[1135],{"type":374,"value":1110},{"type":369,"tag":411,"props":1137,"children":1138},{"style":673},[1139],{"type":374,"value":716},{"type":369,"tag":411,"props":1141,"children":1142},{"style":636},[1143],{"type":374,"value":1054},{"type":369,"tag":411,"props":1145,"children":1146},{"style":647},[1147],{"type":374,"value":661},{"type":369,"tag":411,"props":1149,"children":1151},{"class":413,"line":1150},20,[1152,1157,1161,1165,1169,1174,1178,1182,1186,1190],{"type":369,"tag":411,"props":1153,"children":1154},{"style":673},[1155],{"type":374,"value":1156},"    chars",{"type":369,"tag":411,"props":1158,"children":1159},{"style":647},[1160],{"type":374,"value":856},{"type":369,"tag":411,"props":1162,"children":1163},{"style":673},[1164],{"type":374,"value":861},{"type":369,"tag":411,"props":1166,"children":1167},{"style":647},[1168],{"type":374,"value":866},{"type":369,"tag":411,"props":1170,"children":1171},{"style":636},[1172],{"type":374,"value":1173},"=",{"type":369,"tag":411,"props":1175,"children":1176},{"style":673},[1177],{"type":374,"value":778},{"type":369,"tag":411,"props":1179,"children":1180},{"style":647},[1181],{"type":374,"value":856},{"type":369,"tag":411,"props":1183,"children":1184},{"style":673},[1185],{"type":374,"value":861},{"type":369,"tag":411,"props":1187,"children":1188},{"style":647},[1189],{"type":374,"value":958},{"type":369,"tag":411,"props":1191,"children":1192},{"style":699},[1193],{"type":374,"value":702},{"type":369,"tag":411,"props":1195,"children":1197},{"class":413,"line":1196},21,[1198],{"type":369,"tag":411,"props":1199,"children":1200},{"style":647},[1201],{"type":374,"value":1067},{"type":369,"tag":411,"props":1203,"children":1205},{"class":413,"line":1204},22,[1206],{"type":369,"tag":411,"props":1207,"children":1208},{"emptyLinePlaceholder":799},[1209],{"type":374,"value":802},{"type":369,"tag":411,"props":1211,"children":1213},{"class":413,"line":1212},23,[1214,1219,1223,1227,1231],{"type":369,"tag":411,"props":1215,"children":1216},{"style":809},[1217],{"type":374,"value":1218},"  return",{"type":369,"tag":411,"props":1220,"children":1221},{"style":673},[1222],{"type":374,"value":778},{"type":369,"tag":411,"props":1224,"children":1225},{"style":688},[1226],{"type":374,"value":691},{"type":369,"tag":411,"props":1228,"children":1229},{"style":647},[1230],{"type":374,"value":696},{"type":369,"tag":411,"props":1232,"children":1233},{"style":699},[1234],{"type":374,"value":702},{"type":369,"tag":411,"props":1236,"children":1238},{"class":413,"line":1237},24,[1239,1243],{"type":369,"tag":411,"props":1240,"children":1241},{"style":647},[1242],{"type":374,"value":980},{"type":369,"tag":411,"props":1244,"children":1245},{"style":699},[1246],{"type":374,"value":702},{"type":369,"tag":1248,"props":1249,"children":1250},"style",{},[1251],{"type":374,"value":1252},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":362,"searchDepth":620,"depth":620,"links":1254},[1255,1256],{"id":534,"depth":423,"text":534},{"id":539,"depth":423,"text":539,"children":1257},[1258],{"id":545,"depth":432,"text":545},"markdown","content:2.code:1.algorithm:3.leetcode:443.string-compression.md","content","2.code/1.algorithm/3.leetcode/443.string-compression.md","md",[1265,1267],{"_path":235,"title":234,"description":1266},"给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。",{"_path":241,"title":240,"description":1268},"斐波那契数 （通常用 F(n) 表示）形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：",1712748640766]