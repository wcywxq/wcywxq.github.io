[{"data":1,"prerenderedAt":1232},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/string-compression":322,"/code/algorithm/leetcode/string-compression-surround":1227},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319],{"title":320,"_path":321},"顺序打印 url 并支持 retry","/code/scene/promise-url-retry",{"_path":235,"_dir":323,"_draft":324,"_partial":324,"_locale":325,"title":234,"description":326,"url":327,"body":328,"_type":1222,"_id":1223,"_source":1224,"_file":1225,"_extension":1226},"leetcode",false,"","给你一个字符数组 chars ，请使用下述算法压缩：","https://leetcode.cn/problems/string-compression",{"type":329,"children":330,"toc":1216},"root",[331,338,343,348,353,358,363,402,407,438,443,474,479,494,500,505,511,1210],{"type":332,"tag":333,"props":334,"children":335},"element","p",{},[336],{"type":337,"value":326},"text",{"type":332,"tag":333,"props":339,"children":340},{},[341],{"type":337,"value":342},"从一个空字符串 s 开始。对于 chars 中的每组 连续重复字符 ：",{"type":332,"tag":333,"props":344,"children":345},{},[346],{"type":337,"value":347},"如果这一组长度为 1 ，则将字符追加到 s 中。\n否则，需要向 s 追加字符，后跟这一组的长度。\n压缩后得到的字符串 s 不应该直接返回 ，需要转储到字符数组 chars 中。需要注意的是，如果组长度为 10 或 10 以上，则在 chars 数组中会被拆分为多个字符。",{"type":332,"tag":333,"props":349,"children":350},{},[351],{"type":337,"value":352},"请在 修改完输入数组后 ，返回该数组的新长度。",{"type":332,"tag":333,"props":354,"children":355},{},[356],{"type":337,"value":357},"你必须设计并实现一个只使用常量额外空间的算法来解决此问题。",{"type":332,"tag":333,"props":359,"children":360},{},[361],{"type":337,"value":362},"示例 1：",{"type":332,"tag":364,"props":365,"children":368},"pre",{"className":366,"code":367,"language":337,"meta":325,"style":325},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",[369],{"type":332,"tag":370,"props":371,"children":372},"code",{"__ignoreMap":325},[373,384,393],{"type":332,"tag":374,"props":375,"children":378},"span",{"class":376,"line":377},"line",1,[379],{"type":332,"tag":374,"props":380,"children":381},{},[382],{"type":337,"value":383},"输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n",{"type":332,"tag":374,"props":385,"children":387},{"class":376,"line":386},2,[388],{"type":332,"tag":374,"props":389,"children":390},{},[391],{"type":337,"value":392},"输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n",{"type":332,"tag":374,"props":394,"children":396},{"class":376,"line":395},3,[397],{"type":332,"tag":374,"props":398,"children":399},{},[400],{"type":337,"value":401},"解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",{"type":332,"tag":333,"props":403,"children":404},{},[405],{"type":337,"value":406},"示例 2：",{"type":332,"tag":364,"props":408,"children":410},{"className":366,"code":409,"language":337,"meta":325,"style":325},"输入：chars = [\"a\"]\n输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",[411],{"type":332,"tag":370,"props":412,"children":413},{"__ignoreMap":325},[414,422,430],{"type":332,"tag":374,"props":415,"children":416},{"class":376,"line":377},[417],{"type":332,"tag":374,"props":418,"children":419},{},[420],{"type":337,"value":421},"输入：chars = [\"a\"]\n",{"type":332,"tag":374,"props":423,"children":424},{"class":376,"line":386},[425],{"type":332,"tag":374,"props":426,"children":427},{},[428],{"type":337,"value":429},"输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n",{"type":332,"tag":374,"props":431,"children":432},{"class":376,"line":395},[433],{"type":332,"tag":374,"props":434,"children":435},{},[436],{"type":337,"value":437},"解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",{"type":332,"tag":333,"props":439,"children":440},{},[441],{"type":337,"value":442},"示例 3：",{"type":332,"tag":364,"props":444,"children":446},{"className":366,"code":445,"language":337,"meta":325,"style":325},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",[447],{"type":332,"tag":370,"props":448,"children":449},{"__ignoreMap":325},[450,458,466],{"type":332,"tag":374,"props":451,"children":452},{"class":376,"line":377},[453],{"type":332,"tag":374,"props":454,"children":455},{},[456],{"type":337,"value":457},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n",{"type":332,"tag":374,"props":459,"children":460},{"class":376,"line":386},[461],{"type":332,"tag":374,"props":462,"children":463},{},[464],{"type":337,"value":465},"输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n",{"type":332,"tag":374,"props":467,"children":468},{"class":376,"line":395},[469],{"type":332,"tag":374,"props":470,"children":471},{},[472],{"type":337,"value":473},"解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",{"type":332,"tag":333,"props":475,"children":476},{},[477],{"type":337,"value":478},"提示：",{"type":332,"tag":480,"props":481,"children":482},"ul",{},[483,489],{"type":332,"tag":484,"props":485,"children":486},"li",{},[487],{"type":337,"value":488},"1 \u003C= chars.length \u003C= 2000",{"type":332,"tag":484,"props":490,"children":491},{},[492],{"type":337,"value":493},"chars[i] 可以是小写英文字母、大写英文字母、数字或符号",{"type":332,"tag":495,"props":496,"children":498},"h2",{"id":497},"解题思路",[499],{"type":337,"value":497},{"type":332,"tag":495,"props":501,"children":503},{"id":502},"实现",[504],{"type":337,"value":502},{"type":332,"tag":506,"props":507,"children":509},"h3",{"id":508},"双指针",[510],{"type":337,"value":508},{"type":332,"tag":364,"props":512,"children":516},{"className":513,"code":514,"language":515,"meta":325,"style":325},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {character[]} chars\n * @return {number}\n */\nvar compress = function (chars) {\n  const len = chars.length;\n  let i = 0;\n  let j = i + 1;\n  let s = \"\";\n\n  while (j \u003C= len) {\n    if (chars[i] !== chars[j]) {\n      s += j - i > 1 ? `${chars[i]}${j - i}` : chars[i];\n      i = j;\n    }\n    j++;\n  }\n\n  for (let i = 0; i \u003C s.length; i++) {\n    chars[i] = s[i];\n  }\n\n  return s.length;\n};\n","js",[517],{"type":332,"tag":370,"props":518,"children":519},{"__ignoreMap":325},[520,529,555,572,581,625,666,694,729,756,766,798,852,974,995,1004,1022,1031,1039,1111,1157,1165,1173,1198],{"type":332,"tag":374,"props":521,"children":522},{"class":376,"line":377},[523],{"type":332,"tag":374,"props":524,"children":526},{"style":525},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[527],{"type":337,"value":528},"/**\n",{"type":332,"tag":374,"props":530,"children":531},{"class":376,"line":386},[532,537,543,549],{"type":332,"tag":374,"props":533,"children":534},{"style":525},[535],{"type":337,"value":536}," * ",{"type":332,"tag":374,"props":538,"children":540},{"style":539},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[541],{"type":337,"value":542},"@param",{"type":332,"tag":374,"props":544,"children":546},{"style":545},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[547],{"type":337,"value":548}," {character[]}",{"type":332,"tag":374,"props":550,"children":552},{"style":551},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[553],{"type":337,"value":554}," chars\n",{"type":332,"tag":374,"props":556,"children":557},{"class":376,"line":395},[558,562,567],{"type":332,"tag":374,"props":559,"children":560},{"style":525},[561],{"type":337,"value":536},{"type":332,"tag":374,"props":563,"children":564},{"style":539},[565],{"type":337,"value":566},"@return",{"type":332,"tag":374,"props":568,"children":569},{"style":545},[570],{"type":337,"value":571}," {number}\n",{"type":332,"tag":374,"props":573,"children":575},{"class":376,"line":574},4,[576],{"type":332,"tag":374,"props":577,"children":578},{"style":525},[579],{"type":337,"value":580}," */\n",{"type":332,"tag":374,"props":582,"children":584},{"class":376,"line":583},5,[585,591,597,603,608,614,620],{"type":332,"tag":374,"props":586,"children":588},{"style":587},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[589],{"type":337,"value":590},"var",{"type":332,"tag":374,"props":592,"children":594},{"style":593},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[595],{"type":337,"value":596}," compress",{"type":332,"tag":374,"props":598,"children":600},{"style":599},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[601],{"type":337,"value":602}," =",{"type":332,"tag":374,"props":604,"children":605},{"style":587},[606],{"type":337,"value":607}," function",{"type":332,"tag":374,"props":609,"children":611},{"style":610},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[612],{"type":337,"value":613}," (",{"type":332,"tag":374,"props":615,"children":617},{"style":616},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[618],{"type":337,"value":619},"chars",{"type":332,"tag":374,"props":621,"children":622},{"style":610},[623],{"type":337,"value":624},") {\n",{"type":332,"tag":374,"props":626,"children":628},{"class":376,"line":627},6,[629,634,640,644,649,655,660],{"type":332,"tag":374,"props":630,"children":631},{"style":587},[632],{"type":337,"value":633},"  const",{"type":332,"tag":374,"props":635,"children":637},{"style":636},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[638],{"type":337,"value":639}," len",{"type":332,"tag":374,"props":641,"children":642},{"style":599},[643],{"type":337,"value":602},{"type":332,"tag":374,"props":645,"children":646},{"style":636},[647],{"type":337,"value":648}," chars",{"type":332,"tag":374,"props":650,"children":652},{"style":651},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[653],{"type":337,"value":654},".",{"type":332,"tag":374,"props":656,"children":657},{"style":610},[658],{"type":337,"value":659},"length",{"type":332,"tag":374,"props":661,"children":663},{"style":662},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[664],{"type":337,"value":665},";\n",{"type":332,"tag":374,"props":667,"children":669},{"class":376,"line":668},7,[670,675,680,684,690],{"type":332,"tag":374,"props":671,"children":672},{"style":587},[673],{"type":337,"value":674},"  let",{"type":332,"tag":374,"props":676,"children":677},{"style":636},[678],{"type":337,"value":679}," i",{"type":332,"tag":374,"props":681,"children":682},{"style":599},[683],{"type":337,"value":602},{"type":332,"tag":374,"props":685,"children":687},{"style":686},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[688],{"type":337,"value":689}," 0",{"type":332,"tag":374,"props":691,"children":692},{"style":662},[693],{"type":337,"value":665},{"type":332,"tag":374,"props":695,"children":697},{"class":376,"line":696},8,[698,702,707,711,715,720,725],{"type":332,"tag":374,"props":699,"children":700},{"style":587},[701],{"type":337,"value":674},{"type":332,"tag":374,"props":703,"children":704},{"style":636},[705],{"type":337,"value":706}," j",{"type":332,"tag":374,"props":708,"children":709},{"style":599},[710],{"type":337,"value":602},{"type":332,"tag":374,"props":712,"children":713},{"style":636},[714],{"type":337,"value":679},{"type":332,"tag":374,"props":716,"children":717},{"style":599},[718],{"type":337,"value":719}," +",{"type":332,"tag":374,"props":721,"children":722},{"style":686},[723],{"type":337,"value":724}," 1",{"type":332,"tag":374,"props":726,"children":727},{"style":662},[728],{"type":337,"value":665},{"type":332,"tag":374,"props":730,"children":732},{"class":376,"line":731},9,[733,737,742,746,752],{"type":332,"tag":374,"props":734,"children":735},{"style":587},[736],{"type":337,"value":674},{"type":332,"tag":374,"props":738,"children":739},{"style":636},[740],{"type":337,"value":741}," s",{"type":332,"tag":374,"props":743,"children":744},{"style":599},[745],{"type":337,"value":602},{"type":332,"tag":374,"props":747,"children":749},{"style":748},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[750],{"type":337,"value":751}," \"\"",{"type":332,"tag":374,"props":753,"children":754},{"style":662},[755],{"type":337,"value":665},{"type":332,"tag":374,"props":757,"children":759},{"class":376,"line":758},10,[760],{"type":332,"tag":374,"props":761,"children":763},{"emptyLinePlaceholder":762},true,[764],{"type":337,"value":765},"\n",{"type":332,"tag":374,"props":767,"children":769},{"class":376,"line":768},11,[770,776,780,785,790,794],{"type":332,"tag":374,"props":771,"children":773},{"style":772},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[774],{"type":337,"value":775},"  while",{"type":332,"tag":374,"props":777,"children":778},{"style":610},[779],{"type":337,"value":613},{"type":332,"tag":374,"props":781,"children":782},{"style":636},[783],{"type":337,"value":784},"j",{"type":332,"tag":374,"props":786,"children":787},{"style":599},[788],{"type":337,"value":789}," \u003C=",{"type":332,"tag":374,"props":791,"children":792},{"style":636},[793],{"type":337,"value":639},{"type":332,"tag":374,"props":795,"children":796},{"style":610},[797],{"type":337,"value":624},{"type":332,"tag":374,"props":799,"children":801},{"class":376,"line":800},12,[802,807,811,815,820,825,830,835,839,843,847],{"type":332,"tag":374,"props":803,"children":804},{"style":772},[805],{"type":337,"value":806},"    if",{"type":332,"tag":374,"props":808,"children":809},{"style":610},[810],{"type":337,"value":613},{"type":332,"tag":374,"props":812,"children":813},{"style":636},[814],{"type":337,"value":619},{"type":332,"tag":374,"props":816,"children":817},{"style":610},[818],{"type":337,"value":819},"[",{"type":332,"tag":374,"props":821,"children":822},{"style":636},[823],{"type":337,"value":824},"i",{"type":332,"tag":374,"props":826,"children":827},{"style":610},[828],{"type":337,"value":829},"] ",{"type":332,"tag":374,"props":831,"children":832},{"style":599},[833],{"type":337,"value":834},"!==",{"type":332,"tag":374,"props":836,"children":837},{"style":636},[838],{"type":337,"value":648},{"type":332,"tag":374,"props":840,"children":841},{"style":610},[842],{"type":337,"value":819},{"type":332,"tag":374,"props":844,"children":845},{"style":636},[846],{"type":337,"value":784},{"type":332,"tag":374,"props":848,"children":849},{"style":610},[850],{"type":337,"value":851},"]) {\n",{"type":332,"tag":374,"props":853,"children":855},{"class":376,"line":854},13,[856,861,866,870,875,879,884,888,893,898,904,908,913,917,922,927,931,935,939,944,949,954,958,962,966,970],{"type":332,"tag":374,"props":857,"children":858},{"style":636},[859],{"type":337,"value":860},"      s",{"type":332,"tag":374,"props":862,"children":863},{"style":599},[864],{"type":337,"value":865}," +=",{"type":332,"tag":374,"props":867,"children":868},{"style":636},[869],{"type":337,"value":706},{"type":332,"tag":374,"props":871,"children":872},{"style":599},[873],{"type":337,"value":874}," -",{"type":332,"tag":374,"props":876,"children":877},{"style":636},[878],{"type":337,"value":679},{"type":332,"tag":374,"props":880,"children":881},{"style":599},[882],{"type":337,"value":883}," >",{"type":332,"tag":374,"props":885,"children":886},{"style":686},[887],{"type":337,"value":724},{"type":332,"tag":374,"props":889,"children":890},{"style":599},[891],{"type":337,"value":892}," ?",{"type":332,"tag":374,"props":894,"children":895},{"style":748},[896],{"type":337,"value":897}," `",{"type":332,"tag":374,"props":899,"children":901},{"style":900},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#FF8F40",[902],{"type":337,"value":903},"${",{"type":332,"tag":374,"props":905,"children":906},{"style":636},[907],{"type":337,"value":619},{"type":332,"tag":374,"props":909,"children":911},{"style":910},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#BFBDB6",[912],{"type":337,"value":819},{"type":332,"tag":374,"props":914,"children":915},{"style":636},[916],{"type":337,"value":824},{"type":332,"tag":374,"props":918,"children":919},{"style":910},[920],{"type":337,"value":921},"]",{"type":332,"tag":374,"props":923,"children":924},{"style":900},[925],{"type":337,"value":926},"}${",{"type":332,"tag":374,"props":928,"children":929},{"style":636},[930],{"type":337,"value":784},{"type":332,"tag":374,"props":932,"children":933},{"style":599},[934],{"type":337,"value":874},{"type":332,"tag":374,"props":936,"children":937},{"style":636},[938],{"type":337,"value":679},{"type":332,"tag":374,"props":940,"children":941},{"style":900},[942],{"type":337,"value":943},"}",{"type":332,"tag":374,"props":945,"children":946},{"style":748},[947],{"type":337,"value":948},"`",{"type":332,"tag":374,"props":950,"children":951},{"style":599},[952],{"type":337,"value":953}," :",{"type":332,"tag":374,"props":955,"children":956},{"style":636},[957],{"type":337,"value":648},{"type":332,"tag":374,"props":959,"children":960},{"style":610},[961],{"type":337,"value":819},{"type":332,"tag":374,"props":963,"children":964},{"style":636},[965],{"type":337,"value":824},{"type":332,"tag":374,"props":967,"children":968},{"style":610},[969],{"type":337,"value":921},{"type":332,"tag":374,"props":971,"children":972},{"style":662},[973],{"type":337,"value":665},{"type":332,"tag":374,"props":975,"children":977},{"class":376,"line":976},14,[978,983,987,991],{"type":332,"tag":374,"props":979,"children":980},{"style":636},[981],{"type":337,"value":982},"      i",{"type":332,"tag":374,"props":984,"children":985},{"style":599},[986],{"type":337,"value":602},{"type":332,"tag":374,"props":988,"children":989},{"style":636},[990],{"type":337,"value":706},{"type":332,"tag":374,"props":992,"children":993},{"style":662},[994],{"type":337,"value":665},{"type":332,"tag":374,"props":996,"children":998},{"class":376,"line":997},15,[999],{"type":332,"tag":374,"props":1000,"children":1001},{"style":610},[1002],{"type":337,"value":1003},"    }\n",{"type":332,"tag":374,"props":1005,"children":1007},{"class":376,"line":1006},16,[1008,1013,1018],{"type":332,"tag":374,"props":1009,"children":1010},{"style":636},[1011],{"type":337,"value":1012},"    j",{"type":332,"tag":374,"props":1014,"children":1015},{"style":599},[1016],{"type":337,"value":1017},"++",{"type":332,"tag":374,"props":1019,"children":1020},{"style":662},[1021],{"type":337,"value":665},{"type":332,"tag":374,"props":1023,"children":1025},{"class":376,"line":1024},17,[1026],{"type":332,"tag":374,"props":1027,"children":1028},{"style":610},[1029],{"type":337,"value":1030},"  }\n",{"type":332,"tag":374,"props":1032,"children":1034},{"class":376,"line":1033},18,[1035],{"type":332,"tag":374,"props":1036,"children":1037},{"emptyLinePlaceholder":762},[1038],{"type":337,"value":765},{"type":332,"tag":374,"props":1040,"children":1042},{"class":376,"line":1041},19,[1043,1048,1052,1057,1061,1065,1069,1074,1078,1083,1087,1091,1095,1099,1103,1107],{"type":332,"tag":374,"props":1044,"children":1045},{"style":772},[1046],{"type":337,"value":1047},"  for",{"type":332,"tag":374,"props":1049,"children":1050},{"style":610},[1051],{"type":337,"value":613},{"type":332,"tag":374,"props":1053,"children":1054},{"style":587},[1055],{"type":337,"value":1056},"let",{"type":332,"tag":374,"props":1058,"children":1059},{"style":636},[1060],{"type":337,"value":679},{"type":332,"tag":374,"props":1062,"children":1063},{"style":599},[1064],{"type":337,"value":602},{"type":332,"tag":374,"props":1066,"children":1067},{"style":686},[1068],{"type":337,"value":689},{"type":332,"tag":374,"props":1070,"children":1071},{"style":662},[1072],{"type":337,"value":1073},";",{"type":332,"tag":374,"props":1075,"children":1076},{"style":636},[1077],{"type":337,"value":679},{"type":332,"tag":374,"props":1079,"children":1080},{"style":599},[1081],{"type":337,"value":1082}," \u003C",{"type":332,"tag":374,"props":1084,"children":1085},{"style":636},[1086],{"type":337,"value":741},{"type":332,"tag":374,"props":1088,"children":1089},{"style":651},[1090],{"type":337,"value":654},{"type":332,"tag":374,"props":1092,"children":1093},{"style":610},[1094],{"type":337,"value":659},{"type":332,"tag":374,"props":1096,"children":1097},{"style":662},[1098],{"type":337,"value":1073},{"type":332,"tag":374,"props":1100,"children":1101},{"style":636},[1102],{"type":337,"value":679},{"type":332,"tag":374,"props":1104,"children":1105},{"style":599},[1106],{"type":337,"value":1017},{"type":332,"tag":374,"props":1108,"children":1109},{"style":610},[1110],{"type":337,"value":624},{"type":332,"tag":374,"props":1112,"children":1114},{"class":376,"line":1113},20,[1115,1120,1124,1128,1132,1137,1141,1145,1149,1153],{"type":332,"tag":374,"props":1116,"children":1117},{"style":636},[1118],{"type":337,"value":1119},"    chars",{"type":332,"tag":374,"props":1121,"children":1122},{"style":610},[1123],{"type":337,"value":819},{"type":332,"tag":374,"props":1125,"children":1126},{"style":636},[1127],{"type":337,"value":824},{"type":332,"tag":374,"props":1129,"children":1130},{"style":610},[1131],{"type":337,"value":829},{"type":332,"tag":374,"props":1133,"children":1134},{"style":599},[1135],{"type":337,"value":1136},"=",{"type":332,"tag":374,"props":1138,"children":1139},{"style":636},[1140],{"type":337,"value":741},{"type":332,"tag":374,"props":1142,"children":1143},{"style":610},[1144],{"type":337,"value":819},{"type":332,"tag":374,"props":1146,"children":1147},{"style":636},[1148],{"type":337,"value":824},{"type":332,"tag":374,"props":1150,"children":1151},{"style":610},[1152],{"type":337,"value":921},{"type":332,"tag":374,"props":1154,"children":1155},{"style":662},[1156],{"type":337,"value":665},{"type":332,"tag":374,"props":1158,"children":1160},{"class":376,"line":1159},21,[1161],{"type":332,"tag":374,"props":1162,"children":1163},{"style":610},[1164],{"type":337,"value":1030},{"type":332,"tag":374,"props":1166,"children":1168},{"class":376,"line":1167},22,[1169],{"type":332,"tag":374,"props":1170,"children":1171},{"emptyLinePlaceholder":762},[1172],{"type":337,"value":765},{"type":332,"tag":374,"props":1174,"children":1176},{"class":376,"line":1175},23,[1177,1182,1186,1190,1194],{"type":332,"tag":374,"props":1178,"children":1179},{"style":772},[1180],{"type":337,"value":1181},"  return",{"type":332,"tag":374,"props":1183,"children":1184},{"style":636},[1185],{"type":337,"value":741},{"type":332,"tag":374,"props":1187,"children":1188},{"style":651},[1189],{"type":337,"value":654},{"type":332,"tag":374,"props":1191,"children":1192},{"style":610},[1193],{"type":337,"value":659},{"type":332,"tag":374,"props":1195,"children":1196},{"style":662},[1197],{"type":337,"value":665},{"type":332,"tag":374,"props":1199,"children":1201},{"class":376,"line":1200},24,[1202,1206],{"type":332,"tag":374,"props":1203,"children":1204},{"style":610},[1205],{"type":337,"value":943},{"type":332,"tag":374,"props":1207,"children":1208},{"style":662},[1209],{"type":337,"value":665},{"type":332,"tag":1211,"props":1212,"children":1213},"style",{},[1214],{"type":337,"value":1215},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":325,"searchDepth":583,"depth":583,"links":1217},[1218,1219],{"id":497,"depth":386,"text":497},{"id":502,"depth":386,"text":502,"children":1220},[1221],{"id":508,"depth":395,"text":508},"markdown","content:2.code:1.algorithm:3.leetcode:443.string-compression.md","content","2.code/1.algorithm/3.leetcode/443.string-compression.md","md",[1228,1230],{"_path":232,"title":231,"description":1229},"给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。",{"_path":238,"title":237,"description":1231},"斐波那契数 （通常用 F(n) 表示）形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：",1712115785470]