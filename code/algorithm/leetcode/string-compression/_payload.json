[{"data":1,"prerenderedAt":1230},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/string-compression":320,"/code/algorithm/leetcode/string-compression-surround":1225},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,264,313],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,53],{"title":41,"_path":42,"children":43},"剑指 offer","/code/algorithm/sword-ofter",[44,47,50],{"title":45,"_path":46},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":48,"_path":49},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":51,"_path":52},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":54,"_path":55,"children":56},"力扣 leetCode","/code/algorithm/leetcode",[57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261],{"title":58,"_path":59},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":61,"_path":62},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":64,"_path":65},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":67,"_path":68},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":70,"_path":71},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":73,"_path":74},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":76,"_path":77},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":79,"_path":80},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":82,"_path":83},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":85,"_path":86},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":88,"_path":89},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":91,"_path":92},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":94,"_path":95},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":97,"_path":98},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":100,"_path":101},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":103,"_path":104},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":106,"_path":107},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":109,"_path":110},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":112,"_path":113},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":115,"_path":116},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":118,"_path":119},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":121,"_path":122},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":124,"_path":125},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":127,"_path":128},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":130,"_path":131},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":133,"_path":134},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":136,"_path":137},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":139,"_path":140},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":142,"_path":143},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":145,"_path":146},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":148,"_path":149},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":151,"_path":152},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":154,"_path":155},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":157,"_path":158},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":160,"_path":161},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":163,"_path":164},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":166,"_path":167},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":169,"_path":170},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":172,"_path":173},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":175,"_path":176},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":178,"_path":179},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":181,"_path":182},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":184,"_path":185},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":187,"_path":188},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":190,"_path":191},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":193,"_path":194},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":196,"_path":197},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":199,"_path":200},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":202,"_path":203},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":205,"_path":206},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":208,"_path":209},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":211,"_path":212},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":214,"_path":215},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":217,"_path":218},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":220,"_path":221},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":223,"_path":224},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":226,"_path":227},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":229,"_path":230},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":232,"_path":233},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":235,"_path":236},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":238,"_path":239},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":241,"_path":242},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":244,"_path":245},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":247,"_path":248},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":250,"_path":251},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":253,"_path":254},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":256,"_path":257},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":259,"_path":260},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":262,"_path":263},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":265,"_path":266,"children":267},"源码实现","/code/source",[268,293,306],{"title":269,"_path":270,"children":271},"原生 api","/code/source/native-api",[272,275,278,281,284,287,290],{"title":273,"_path":274},"ajax","/code/source/native-api/ajax",{"title":276,"_path":277},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":279,"_path":280},"new 操作符","/code/source/native-api/new",{"title":282,"_path":283},"instanceof 关键字","/code/source/native-api/instanceof",{"title":285,"_path":286},"定时器","/code/source/native-api/timer",{"title":288,"_path":289},"JSON.stringify","/code/source/native-api/json-stringify",{"title":291,"_path":292},"Iterator 迭代器","/code/source/native-api/iterator",{"title":294,"_path":295,"children":296},"数组 Array","/code/source/array",[297,300,303],{"title":298,"_path":299},"数组去重","/code/source/array/remove-duplicate",{"title":301,"_path":302},"数组扁平化","/code/source/array/flat",{"title":304,"_path":305},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":307,"_path":308,"children":309},"字符串 String","/code/source/string",[310],{"title":311,"_path":312},"repeat()","/code/source/string/repeat",{"title":314,"_path":315,"children":316},"业务场景","/code/scene",[317],{"title":318,"_path":319},"顺序打印 url 并支持 retry","/code/scene/promise-url-retry",{"_path":233,"_dir":321,"_draft":322,"_partial":322,"_locale":323,"title":232,"description":324,"url":325,"body":326,"_type":1220,"_id":1221,"_source":1222,"_file":1223,"_extension":1224},"leetcode",false,"","给你一个字符数组 chars ，请使用下述算法压缩：","https://leetcode.cn/problems/string-compression",{"type":327,"children":328,"toc":1214},"root",[329,336,341,346,351,356,361,400,405,436,441,472,477,492,498,503,509,1208],{"type":330,"tag":331,"props":332,"children":333},"element","p",{},[334],{"type":335,"value":324},"text",{"type":330,"tag":331,"props":337,"children":338},{},[339],{"type":335,"value":340},"从一个空字符串 s 开始。对于 chars 中的每组 连续重复字符 ：",{"type":330,"tag":331,"props":342,"children":343},{},[344],{"type":335,"value":345},"如果这一组长度为 1 ，则将字符追加到 s 中。\n否则，需要向 s 追加字符，后跟这一组的长度。\n压缩后得到的字符串 s 不应该直接返回 ，需要转储到字符数组 chars 中。需要注意的是，如果组长度为 10 或 10 以上，则在 chars 数组中会被拆分为多个字符。",{"type":330,"tag":331,"props":347,"children":348},{},[349],{"type":335,"value":350},"请在 修改完输入数组后 ，返回该数组的新长度。",{"type":330,"tag":331,"props":352,"children":353},{},[354],{"type":335,"value":355},"你必须设计并实现一个只使用常量额外空间的算法来解决此问题。",{"type":330,"tag":331,"props":357,"children":358},{},[359],{"type":335,"value":360},"示例 1：",{"type":330,"tag":362,"props":363,"children":366},"pre",{"className":364,"code":365,"language":335,"meta":323,"style":323},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",[367],{"type":330,"tag":368,"props":369,"children":370},"code",{"__ignoreMap":323},[371,382,391],{"type":330,"tag":372,"props":373,"children":376},"span",{"class":374,"line":375},"line",1,[377],{"type":330,"tag":372,"props":378,"children":379},{},[380],{"type":335,"value":381},"输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n",{"type":330,"tag":372,"props":383,"children":385},{"class":374,"line":384},2,[386],{"type":330,"tag":372,"props":387,"children":388},{},[389],{"type":335,"value":390},"输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n",{"type":330,"tag":372,"props":392,"children":394},{"class":374,"line":393},3,[395],{"type":330,"tag":372,"props":396,"children":397},{},[398],{"type":335,"value":399},"解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",{"type":330,"tag":331,"props":401,"children":402},{},[403],{"type":335,"value":404},"示例 2：",{"type":330,"tag":362,"props":406,"children":408},{"className":364,"code":407,"language":335,"meta":323,"style":323},"输入：chars = [\"a\"]\n输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",[409],{"type":330,"tag":368,"props":410,"children":411},{"__ignoreMap":323},[412,420,428],{"type":330,"tag":372,"props":413,"children":414},{"class":374,"line":375},[415],{"type":330,"tag":372,"props":416,"children":417},{},[418],{"type":335,"value":419},"输入：chars = [\"a\"]\n",{"type":330,"tag":372,"props":421,"children":422},{"class":374,"line":384},[423],{"type":330,"tag":372,"props":424,"children":425},{},[426],{"type":335,"value":427},"输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n",{"type":330,"tag":372,"props":429,"children":430},{"class":374,"line":393},[431],{"type":330,"tag":372,"props":432,"children":433},{},[434],{"type":335,"value":435},"解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",{"type":330,"tag":331,"props":437,"children":438},{},[439],{"type":335,"value":440},"示例 3：",{"type":330,"tag":362,"props":442,"children":444},{"className":364,"code":443,"language":335,"meta":323,"style":323},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",[445],{"type":330,"tag":368,"props":446,"children":447},{"__ignoreMap":323},[448,456,464],{"type":330,"tag":372,"props":449,"children":450},{"class":374,"line":375},[451],{"type":330,"tag":372,"props":452,"children":453},{},[454],{"type":335,"value":455},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n",{"type":330,"tag":372,"props":457,"children":458},{"class":374,"line":384},[459],{"type":330,"tag":372,"props":460,"children":461},{},[462],{"type":335,"value":463},"输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n",{"type":330,"tag":372,"props":465,"children":466},{"class":374,"line":393},[467],{"type":330,"tag":372,"props":468,"children":469},{},[470],{"type":335,"value":471},"解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",{"type":330,"tag":331,"props":473,"children":474},{},[475],{"type":335,"value":476},"提示：",{"type":330,"tag":478,"props":479,"children":480},"ul",{},[481,487],{"type":330,"tag":482,"props":483,"children":484},"li",{},[485],{"type":335,"value":486},"1 \u003C= chars.length \u003C= 2000",{"type":330,"tag":482,"props":488,"children":489},{},[490],{"type":335,"value":491},"chars[i] 可以是小写英文字母、大写英文字母、数字或符号",{"type":330,"tag":493,"props":494,"children":496},"h2",{"id":495},"解题思路",[497],{"type":335,"value":495},{"type":330,"tag":493,"props":499,"children":501},{"id":500},"实现",[502],{"type":335,"value":500},{"type":330,"tag":504,"props":505,"children":507},"h3",{"id":506},"双指针",[508],{"type":335,"value":506},{"type":330,"tag":362,"props":510,"children":514},{"className":511,"code":512,"language":513,"meta":323,"style":323},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {character[]} chars\n * @return {number}\n */\nvar compress = function (chars) {\n  const len = chars.length;\n  let i = 0;\n  let j = i + 1;\n  let s = \"\";\n\n  while (j \u003C= len) {\n    if (chars[i] !== chars[j]) {\n      s += j - i > 1 ? `${chars[i]}${j - i}` : chars[i];\n      i = j;\n    }\n    j++;\n  }\n\n  for (let i = 0; i \u003C s.length; i++) {\n    chars[i] = s[i];\n  }\n\n  return s.length;\n};\n","js",[515],{"type":330,"tag":368,"props":516,"children":517},{"__ignoreMap":323},[518,527,553,570,579,623,664,692,727,754,764,796,850,972,993,1002,1020,1029,1037,1109,1155,1163,1171,1196],{"type":330,"tag":372,"props":519,"children":520},{"class":374,"line":375},[521],{"type":330,"tag":372,"props":522,"children":524},{"style":523},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[525],{"type":335,"value":526},"/**\n",{"type":330,"tag":372,"props":528,"children":529},{"class":374,"line":384},[530,535,541,547],{"type":330,"tag":372,"props":531,"children":532},{"style":523},[533],{"type":335,"value":534}," * ",{"type":330,"tag":372,"props":536,"children":538},{"style":537},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[539],{"type":335,"value":540},"@param",{"type":330,"tag":372,"props":542,"children":544},{"style":543},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[545],{"type":335,"value":546}," {character[]}",{"type":330,"tag":372,"props":548,"children":550},{"style":549},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[551],{"type":335,"value":552}," chars\n",{"type":330,"tag":372,"props":554,"children":555},{"class":374,"line":393},[556,560,565],{"type":330,"tag":372,"props":557,"children":558},{"style":523},[559],{"type":335,"value":534},{"type":330,"tag":372,"props":561,"children":562},{"style":537},[563],{"type":335,"value":564},"@return",{"type":330,"tag":372,"props":566,"children":567},{"style":543},[568],{"type":335,"value":569}," {number}\n",{"type":330,"tag":372,"props":571,"children":573},{"class":374,"line":572},4,[574],{"type":330,"tag":372,"props":575,"children":576},{"style":523},[577],{"type":335,"value":578}," */\n",{"type":330,"tag":372,"props":580,"children":582},{"class":374,"line":581},5,[583,589,595,601,606,612,618],{"type":330,"tag":372,"props":584,"children":586},{"style":585},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[587],{"type":335,"value":588},"var",{"type":330,"tag":372,"props":590,"children":592},{"style":591},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[593],{"type":335,"value":594}," compress",{"type":330,"tag":372,"props":596,"children":598},{"style":597},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[599],{"type":335,"value":600}," =",{"type":330,"tag":372,"props":602,"children":603},{"style":585},[604],{"type":335,"value":605}," function",{"type":330,"tag":372,"props":607,"children":609},{"style":608},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[610],{"type":335,"value":611}," (",{"type":330,"tag":372,"props":613,"children":615},{"style":614},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[616],{"type":335,"value":617},"chars",{"type":330,"tag":372,"props":619,"children":620},{"style":608},[621],{"type":335,"value":622},") {\n",{"type":330,"tag":372,"props":624,"children":626},{"class":374,"line":625},6,[627,632,638,642,647,653,658],{"type":330,"tag":372,"props":628,"children":629},{"style":585},[630],{"type":335,"value":631},"  const",{"type":330,"tag":372,"props":633,"children":635},{"style":634},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[636],{"type":335,"value":637}," len",{"type":330,"tag":372,"props":639,"children":640},{"style":597},[641],{"type":335,"value":600},{"type":330,"tag":372,"props":643,"children":644},{"style":634},[645],{"type":335,"value":646}," chars",{"type":330,"tag":372,"props":648,"children":650},{"style":649},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[651],{"type":335,"value":652},".",{"type":330,"tag":372,"props":654,"children":655},{"style":608},[656],{"type":335,"value":657},"length",{"type":330,"tag":372,"props":659,"children":661},{"style":660},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[662],{"type":335,"value":663},";\n",{"type":330,"tag":372,"props":665,"children":667},{"class":374,"line":666},7,[668,673,678,682,688],{"type":330,"tag":372,"props":669,"children":670},{"style":585},[671],{"type":335,"value":672},"  let",{"type":330,"tag":372,"props":674,"children":675},{"style":634},[676],{"type":335,"value":677}," i",{"type":330,"tag":372,"props":679,"children":680},{"style":597},[681],{"type":335,"value":600},{"type":330,"tag":372,"props":683,"children":685},{"style":684},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[686],{"type":335,"value":687}," 0",{"type":330,"tag":372,"props":689,"children":690},{"style":660},[691],{"type":335,"value":663},{"type":330,"tag":372,"props":693,"children":695},{"class":374,"line":694},8,[696,700,705,709,713,718,723],{"type":330,"tag":372,"props":697,"children":698},{"style":585},[699],{"type":335,"value":672},{"type":330,"tag":372,"props":701,"children":702},{"style":634},[703],{"type":335,"value":704}," j",{"type":330,"tag":372,"props":706,"children":707},{"style":597},[708],{"type":335,"value":600},{"type":330,"tag":372,"props":710,"children":711},{"style":634},[712],{"type":335,"value":677},{"type":330,"tag":372,"props":714,"children":715},{"style":597},[716],{"type":335,"value":717}," +",{"type":330,"tag":372,"props":719,"children":720},{"style":684},[721],{"type":335,"value":722}," 1",{"type":330,"tag":372,"props":724,"children":725},{"style":660},[726],{"type":335,"value":663},{"type":330,"tag":372,"props":728,"children":730},{"class":374,"line":729},9,[731,735,740,744,750],{"type":330,"tag":372,"props":732,"children":733},{"style":585},[734],{"type":335,"value":672},{"type":330,"tag":372,"props":736,"children":737},{"style":634},[738],{"type":335,"value":739}," s",{"type":330,"tag":372,"props":741,"children":742},{"style":597},[743],{"type":335,"value":600},{"type":330,"tag":372,"props":745,"children":747},{"style":746},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[748],{"type":335,"value":749}," \"\"",{"type":330,"tag":372,"props":751,"children":752},{"style":660},[753],{"type":335,"value":663},{"type":330,"tag":372,"props":755,"children":757},{"class":374,"line":756},10,[758],{"type":330,"tag":372,"props":759,"children":761},{"emptyLinePlaceholder":760},true,[762],{"type":335,"value":763},"\n",{"type":330,"tag":372,"props":765,"children":767},{"class":374,"line":766},11,[768,774,778,783,788,792],{"type":330,"tag":372,"props":769,"children":771},{"style":770},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[772],{"type":335,"value":773},"  while",{"type":330,"tag":372,"props":775,"children":776},{"style":608},[777],{"type":335,"value":611},{"type":330,"tag":372,"props":779,"children":780},{"style":634},[781],{"type":335,"value":782},"j",{"type":330,"tag":372,"props":784,"children":785},{"style":597},[786],{"type":335,"value":787}," \u003C=",{"type":330,"tag":372,"props":789,"children":790},{"style":634},[791],{"type":335,"value":637},{"type":330,"tag":372,"props":793,"children":794},{"style":608},[795],{"type":335,"value":622},{"type":330,"tag":372,"props":797,"children":799},{"class":374,"line":798},12,[800,805,809,813,818,823,828,833,837,841,845],{"type":330,"tag":372,"props":801,"children":802},{"style":770},[803],{"type":335,"value":804},"    if",{"type":330,"tag":372,"props":806,"children":807},{"style":608},[808],{"type":335,"value":611},{"type":330,"tag":372,"props":810,"children":811},{"style":634},[812],{"type":335,"value":617},{"type":330,"tag":372,"props":814,"children":815},{"style":608},[816],{"type":335,"value":817},"[",{"type":330,"tag":372,"props":819,"children":820},{"style":634},[821],{"type":335,"value":822},"i",{"type":330,"tag":372,"props":824,"children":825},{"style":608},[826],{"type":335,"value":827},"] ",{"type":330,"tag":372,"props":829,"children":830},{"style":597},[831],{"type":335,"value":832},"!==",{"type":330,"tag":372,"props":834,"children":835},{"style":634},[836],{"type":335,"value":646},{"type":330,"tag":372,"props":838,"children":839},{"style":608},[840],{"type":335,"value":817},{"type":330,"tag":372,"props":842,"children":843},{"style":634},[844],{"type":335,"value":782},{"type":330,"tag":372,"props":846,"children":847},{"style":608},[848],{"type":335,"value":849},"]) {\n",{"type":330,"tag":372,"props":851,"children":853},{"class":374,"line":852},13,[854,859,864,868,873,877,882,886,891,896,902,906,911,915,920,925,929,933,937,942,947,952,956,960,964,968],{"type":330,"tag":372,"props":855,"children":856},{"style":634},[857],{"type":335,"value":858},"      s",{"type":330,"tag":372,"props":860,"children":861},{"style":597},[862],{"type":335,"value":863}," +=",{"type":330,"tag":372,"props":865,"children":866},{"style":634},[867],{"type":335,"value":704},{"type":330,"tag":372,"props":869,"children":870},{"style":597},[871],{"type":335,"value":872}," -",{"type":330,"tag":372,"props":874,"children":875},{"style":634},[876],{"type":335,"value":677},{"type":330,"tag":372,"props":878,"children":879},{"style":597},[880],{"type":335,"value":881}," >",{"type":330,"tag":372,"props":883,"children":884},{"style":684},[885],{"type":335,"value":722},{"type":330,"tag":372,"props":887,"children":888},{"style":597},[889],{"type":335,"value":890}," ?",{"type":330,"tag":372,"props":892,"children":893},{"style":746},[894],{"type":335,"value":895}," `",{"type":330,"tag":372,"props":897,"children":899},{"style":898},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#FF8F40",[900],{"type":335,"value":901},"${",{"type":330,"tag":372,"props":903,"children":904},{"style":634},[905],{"type":335,"value":617},{"type":330,"tag":372,"props":907,"children":909},{"style":908},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#BFBDB6",[910],{"type":335,"value":817},{"type":330,"tag":372,"props":912,"children":913},{"style":634},[914],{"type":335,"value":822},{"type":330,"tag":372,"props":916,"children":917},{"style":908},[918],{"type":335,"value":919},"]",{"type":330,"tag":372,"props":921,"children":922},{"style":898},[923],{"type":335,"value":924},"}${",{"type":330,"tag":372,"props":926,"children":927},{"style":634},[928],{"type":335,"value":782},{"type":330,"tag":372,"props":930,"children":931},{"style":597},[932],{"type":335,"value":872},{"type":330,"tag":372,"props":934,"children":935},{"style":634},[936],{"type":335,"value":677},{"type":330,"tag":372,"props":938,"children":939},{"style":898},[940],{"type":335,"value":941},"}",{"type":330,"tag":372,"props":943,"children":944},{"style":746},[945],{"type":335,"value":946},"`",{"type":330,"tag":372,"props":948,"children":949},{"style":597},[950],{"type":335,"value":951}," :",{"type":330,"tag":372,"props":953,"children":954},{"style":634},[955],{"type":335,"value":646},{"type":330,"tag":372,"props":957,"children":958},{"style":608},[959],{"type":335,"value":817},{"type":330,"tag":372,"props":961,"children":962},{"style":634},[963],{"type":335,"value":822},{"type":330,"tag":372,"props":965,"children":966},{"style":608},[967],{"type":335,"value":919},{"type":330,"tag":372,"props":969,"children":970},{"style":660},[971],{"type":335,"value":663},{"type":330,"tag":372,"props":973,"children":975},{"class":374,"line":974},14,[976,981,985,989],{"type":330,"tag":372,"props":977,"children":978},{"style":634},[979],{"type":335,"value":980},"      i",{"type":330,"tag":372,"props":982,"children":983},{"style":597},[984],{"type":335,"value":600},{"type":330,"tag":372,"props":986,"children":987},{"style":634},[988],{"type":335,"value":704},{"type":330,"tag":372,"props":990,"children":991},{"style":660},[992],{"type":335,"value":663},{"type":330,"tag":372,"props":994,"children":996},{"class":374,"line":995},15,[997],{"type":330,"tag":372,"props":998,"children":999},{"style":608},[1000],{"type":335,"value":1001},"    }\n",{"type":330,"tag":372,"props":1003,"children":1005},{"class":374,"line":1004},16,[1006,1011,1016],{"type":330,"tag":372,"props":1007,"children":1008},{"style":634},[1009],{"type":335,"value":1010},"    j",{"type":330,"tag":372,"props":1012,"children":1013},{"style":597},[1014],{"type":335,"value":1015},"++",{"type":330,"tag":372,"props":1017,"children":1018},{"style":660},[1019],{"type":335,"value":663},{"type":330,"tag":372,"props":1021,"children":1023},{"class":374,"line":1022},17,[1024],{"type":330,"tag":372,"props":1025,"children":1026},{"style":608},[1027],{"type":335,"value":1028},"  }\n",{"type":330,"tag":372,"props":1030,"children":1032},{"class":374,"line":1031},18,[1033],{"type":330,"tag":372,"props":1034,"children":1035},{"emptyLinePlaceholder":760},[1036],{"type":335,"value":763},{"type":330,"tag":372,"props":1038,"children":1040},{"class":374,"line":1039},19,[1041,1046,1050,1055,1059,1063,1067,1072,1076,1081,1085,1089,1093,1097,1101,1105],{"type":330,"tag":372,"props":1042,"children":1043},{"style":770},[1044],{"type":335,"value":1045},"  for",{"type":330,"tag":372,"props":1047,"children":1048},{"style":608},[1049],{"type":335,"value":611},{"type":330,"tag":372,"props":1051,"children":1052},{"style":585},[1053],{"type":335,"value":1054},"let",{"type":330,"tag":372,"props":1056,"children":1057},{"style":634},[1058],{"type":335,"value":677},{"type":330,"tag":372,"props":1060,"children":1061},{"style":597},[1062],{"type":335,"value":600},{"type":330,"tag":372,"props":1064,"children":1065},{"style":684},[1066],{"type":335,"value":687},{"type":330,"tag":372,"props":1068,"children":1069},{"style":660},[1070],{"type":335,"value":1071},";",{"type":330,"tag":372,"props":1073,"children":1074},{"style":634},[1075],{"type":335,"value":677},{"type":330,"tag":372,"props":1077,"children":1078},{"style":597},[1079],{"type":335,"value":1080}," \u003C",{"type":330,"tag":372,"props":1082,"children":1083},{"style":634},[1084],{"type":335,"value":739},{"type":330,"tag":372,"props":1086,"children":1087},{"style":649},[1088],{"type":335,"value":652},{"type":330,"tag":372,"props":1090,"children":1091},{"style":608},[1092],{"type":335,"value":657},{"type":330,"tag":372,"props":1094,"children":1095},{"style":660},[1096],{"type":335,"value":1071},{"type":330,"tag":372,"props":1098,"children":1099},{"style":634},[1100],{"type":335,"value":677},{"type":330,"tag":372,"props":1102,"children":1103},{"style":597},[1104],{"type":335,"value":1015},{"type":330,"tag":372,"props":1106,"children":1107},{"style":608},[1108],{"type":335,"value":622},{"type":330,"tag":372,"props":1110,"children":1112},{"class":374,"line":1111},20,[1113,1118,1122,1126,1130,1135,1139,1143,1147,1151],{"type":330,"tag":372,"props":1114,"children":1115},{"style":634},[1116],{"type":335,"value":1117},"    chars",{"type":330,"tag":372,"props":1119,"children":1120},{"style":608},[1121],{"type":335,"value":817},{"type":330,"tag":372,"props":1123,"children":1124},{"style":634},[1125],{"type":335,"value":822},{"type":330,"tag":372,"props":1127,"children":1128},{"style":608},[1129],{"type":335,"value":827},{"type":330,"tag":372,"props":1131,"children":1132},{"style":597},[1133],{"type":335,"value":1134},"=",{"type":330,"tag":372,"props":1136,"children":1137},{"style":634},[1138],{"type":335,"value":739},{"type":330,"tag":372,"props":1140,"children":1141},{"style":608},[1142],{"type":335,"value":817},{"type":330,"tag":372,"props":1144,"children":1145},{"style":634},[1146],{"type":335,"value":822},{"type":330,"tag":372,"props":1148,"children":1149},{"style":608},[1150],{"type":335,"value":919},{"type":330,"tag":372,"props":1152,"children":1153},{"style":660},[1154],{"type":335,"value":663},{"type":330,"tag":372,"props":1156,"children":1158},{"class":374,"line":1157},21,[1159],{"type":330,"tag":372,"props":1160,"children":1161},{"style":608},[1162],{"type":335,"value":1028},{"type":330,"tag":372,"props":1164,"children":1166},{"class":374,"line":1165},22,[1167],{"type":330,"tag":372,"props":1168,"children":1169},{"emptyLinePlaceholder":760},[1170],{"type":335,"value":763},{"type":330,"tag":372,"props":1172,"children":1174},{"class":374,"line":1173},23,[1175,1180,1184,1188,1192],{"type":330,"tag":372,"props":1176,"children":1177},{"style":770},[1178],{"type":335,"value":1179},"  return",{"type":330,"tag":372,"props":1181,"children":1182},{"style":634},[1183],{"type":335,"value":739},{"type":330,"tag":372,"props":1185,"children":1186},{"style":649},[1187],{"type":335,"value":652},{"type":330,"tag":372,"props":1189,"children":1190},{"style":608},[1191],{"type":335,"value":657},{"type":330,"tag":372,"props":1193,"children":1194},{"style":660},[1195],{"type":335,"value":663},{"type":330,"tag":372,"props":1197,"children":1199},{"class":374,"line":1198},24,[1200,1204],{"type":330,"tag":372,"props":1201,"children":1202},{"style":608},[1203],{"type":335,"value":941},{"type":330,"tag":372,"props":1205,"children":1206},{"style":660},[1207],{"type":335,"value":663},{"type":330,"tag":1209,"props":1210,"children":1211},"style",{},[1212],{"type":335,"value":1213},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":323,"searchDepth":581,"depth":581,"links":1215},[1216,1217],{"id":495,"depth":384,"text":495},{"id":500,"depth":384,"text":500,"children":1218},[1219],{"id":506,"depth":393,"text":506},"markdown","content:2.code:1.algorithm:2.leetcode:443.string-compression.md","content","2.code/1.algorithm/2.leetcode/443.string-compression.md","md",[1226,1228],{"_path":230,"title":229,"description":1227},"给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。",{"_path":236,"title":235,"description":1229},"斐波那契数 （通常用 F(n) 表示）形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：",1712112511590]