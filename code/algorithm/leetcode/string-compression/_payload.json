[{"data":1,"prerenderedAt":1239},["Reactive",2],{"navigation":3,"/code/algorithm/leetcode/string-compression":329,"/code/algorithm/leetcode/string-compression-surround":1234},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319],{"title":320,"_path":321,"children":322},"Promise","/code/scene/promise",[323,326],{"title":324,"_path":325},"顺序打印 url 并支持 retry","/code/scene/promise/order-print-url-and-retry",{"title":327,"_path":328},"promise 实现图片加载数量限制","/code/scene/promise/limit-image-load-count",{"_path":235,"_dir":330,"_draft":331,"_partial":331,"_locale":332,"title":234,"description":333,"url":334,"body":335,"_type":1229,"_id":1230,"_source":1231,"_file":1232,"_extension":1233},"leetcode",false,"","给你一个字符数组 chars ，请使用下述算法压缩：","https://leetcode.cn/problems/string-compression",{"type":336,"children":337,"toc":1223},"root",[338,345,350,355,360,365,370,409,414,445,450,481,486,501,507,512,518,1217],{"type":339,"tag":340,"props":341,"children":342},"element","p",{},[343],{"type":344,"value":333},"text",{"type":339,"tag":340,"props":346,"children":347},{},[348],{"type":344,"value":349},"从一个空字符串 s 开始。对于 chars 中的每组 连续重复字符 ：",{"type":339,"tag":340,"props":351,"children":352},{},[353],{"type":344,"value":354},"如果这一组长度为 1 ，则将字符追加到 s 中。\n否则，需要向 s 追加字符，后跟这一组的长度。\n压缩后得到的字符串 s 不应该直接返回 ，需要转储到字符数组 chars 中。需要注意的是，如果组长度为 10 或 10 以上，则在 chars 数组中会被拆分为多个字符。",{"type":339,"tag":340,"props":356,"children":357},{},[358],{"type":344,"value":359},"请在 修改完输入数组后 ，返回该数组的新长度。",{"type":339,"tag":340,"props":361,"children":362},{},[363],{"type":344,"value":364},"你必须设计并实现一个只使用常量额外空间的算法来解决此问题。",{"type":339,"tag":340,"props":366,"children":367},{},[368],{"type":344,"value":369},"示例 1：",{"type":339,"tag":371,"props":372,"children":375},"pre",{"className":373,"code":374,"language":344,"meta":332,"style":332},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",[376],{"type":339,"tag":377,"props":378,"children":379},"code",{"__ignoreMap":332},[380,391,400],{"type":339,"tag":381,"props":382,"children":385},"span",{"class":383,"line":384},"line",1,[386],{"type":339,"tag":381,"props":387,"children":388},{},[389],{"type":344,"value":390},"输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n",{"type":339,"tag":381,"props":392,"children":394},{"class":383,"line":393},2,[395],{"type":339,"tag":381,"props":396,"children":397},{},[398],{"type":344,"value":399},"输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n",{"type":339,"tag":381,"props":401,"children":403},{"class":383,"line":402},3,[404],{"type":339,"tag":381,"props":405,"children":406},{},[407],{"type":344,"value":408},"解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",{"type":339,"tag":340,"props":410,"children":411},{},[412],{"type":344,"value":413},"示例 2：",{"type":339,"tag":371,"props":415,"children":417},{"className":373,"code":416,"language":344,"meta":332,"style":332},"输入：chars = [\"a\"]\n输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",[418],{"type":339,"tag":377,"props":419,"children":420},{"__ignoreMap":332},[421,429,437],{"type":339,"tag":381,"props":422,"children":423},{"class":383,"line":384},[424],{"type":339,"tag":381,"props":425,"children":426},{},[427],{"type":344,"value":428},"输入：chars = [\"a\"]\n",{"type":339,"tag":381,"props":430,"children":431},{"class":383,"line":393},[432],{"type":339,"tag":381,"props":433,"children":434},{},[435],{"type":344,"value":436},"输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n",{"type":339,"tag":381,"props":438,"children":439},{"class":383,"line":402},[440],{"type":339,"tag":381,"props":441,"children":442},{},[443],{"type":344,"value":444},"解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",{"type":339,"tag":340,"props":446,"children":447},{},[448],{"type":344,"value":449},"示例 3：",{"type":339,"tag":371,"props":451,"children":453},{"className":373,"code":452,"language":344,"meta":332,"style":332},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",[454],{"type":339,"tag":377,"props":455,"children":456},{"__ignoreMap":332},[457,465,473],{"type":339,"tag":381,"props":458,"children":459},{"class":383,"line":384},[460],{"type":339,"tag":381,"props":461,"children":462},{},[463],{"type":344,"value":464},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n",{"type":339,"tag":381,"props":466,"children":467},{"class":383,"line":393},[468],{"type":339,"tag":381,"props":469,"children":470},{},[471],{"type":344,"value":472},"输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n",{"type":339,"tag":381,"props":474,"children":475},{"class":383,"line":402},[476],{"type":339,"tag":381,"props":477,"children":478},{},[479],{"type":344,"value":480},"解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",{"type":339,"tag":340,"props":482,"children":483},{},[484],{"type":344,"value":485},"提示：",{"type":339,"tag":487,"props":488,"children":489},"ul",{},[490,496],{"type":339,"tag":491,"props":492,"children":493},"li",{},[494],{"type":344,"value":495},"1 \u003C= chars.length \u003C= 2000",{"type":339,"tag":491,"props":497,"children":498},{},[499],{"type":344,"value":500},"chars[i] 可以是小写英文字母、大写英文字母、数字或符号",{"type":339,"tag":502,"props":503,"children":505},"h2",{"id":504},"解题思路",[506],{"type":344,"value":504},{"type":339,"tag":502,"props":508,"children":510},{"id":509},"实现",[511],{"type":344,"value":509},{"type":339,"tag":513,"props":514,"children":516},"h3",{"id":515},"双指针",[517],{"type":344,"value":515},{"type":339,"tag":371,"props":519,"children":523},{"className":520,"code":521,"language":522,"meta":332,"style":332},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {character[]} chars\n * @return {number}\n */\nvar compress = function (chars) {\n  const len = chars.length;\n  let i = 0;\n  let j = i + 1;\n  let s = \"\";\n\n  while (j \u003C= len) {\n    if (chars[i] !== chars[j]) {\n      s += j - i > 1 ? `${chars[i]}${j - i}` : chars[i];\n      i = j;\n    }\n    j++;\n  }\n\n  for (let i = 0; i \u003C s.length; i++) {\n    chars[i] = s[i];\n  }\n\n  return s.length;\n};\n","js",[524],{"type":339,"tag":377,"props":525,"children":526},{"__ignoreMap":332},[527,536,562,579,588,632,673,701,736,763,773,805,859,981,1002,1011,1029,1038,1046,1118,1164,1172,1180,1205],{"type":339,"tag":381,"props":528,"children":529},{"class":383,"line":384},[530],{"type":339,"tag":381,"props":531,"children":533},{"style":532},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[534],{"type":344,"value":535},"/**\n",{"type":339,"tag":381,"props":537,"children":538},{"class":383,"line":393},[539,544,550,556],{"type":339,"tag":381,"props":540,"children":541},{"style":532},[542],{"type":344,"value":543}," * ",{"type":339,"tag":381,"props":545,"children":547},{"style":546},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[548],{"type":344,"value":549},"@param",{"type":339,"tag":381,"props":551,"children":553},{"style":552},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[554],{"type":344,"value":555}," {character[]}",{"type":339,"tag":381,"props":557,"children":559},{"style":558},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[560],{"type":344,"value":561}," chars\n",{"type":339,"tag":381,"props":563,"children":564},{"class":383,"line":402},[565,569,574],{"type":339,"tag":381,"props":566,"children":567},{"style":532},[568],{"type":344,"value":543},{"type":339,"tag":381,"props":570,"children":571},{"style":546},[572],{"type":344,"value":573},"@return",{"type":339,"tag":381,"props":575,"children":576},{"style":552},[577],{"type":344,"value":578}," {number}\n",{"type":339,"tag":381,"props":580,"children":582},{"class":383,"line":581},4,[583],{"type":339,"tag":381,"props":584,"children":585},{"style":532},[586],{"type":344,"value":587}," */\n",{"type":339,"tag":381,"props":589,"children":591},{"class":383,"line":590},5,[592,598,604,610,615,621,627],{"type":339,"tag":381,"props":593,"children":595},{"style":594},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[596],{"type":344,"value":597},"var",{"type":339,"tag":381,"props":599,"children":601},{"style":600},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[602],{"type":344,"value":603}," compress",{"type":339,"tag":381,"props":605,"children":607},{"style":606},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[608],{"type":344,"value":609}," =",{"type":339,"tag":381,"props":611,"children":612},{"style":594},[613],{"type":344,"value":614}," function",{"type":339,"tag":381,"props":616,"children":618},{"style":617},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[619],{"type":344,"value":620}," (",{"type":339,"tag":381,"props":622,"children":624},{"style":623},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[625],{"type":344,"value":626},"chars",{"type":339,"tag":381,"props":628,"children":629},{"style":617},[630],{"type":344,"value":631},") {\n",{"type":339,"tag":381,"props":633,"children":635},{"class":383,"line":634},6,[636,641,647,651,656,662,667],{"type":339,"tag":381,"props":637,"children":638},{"style":594},[639],{"type":344,"value":640},"  const",{"type":339,"tag":381,"props":642,"children":644},{"style":643},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[645],{"type":344,"value":646}," len",{"type":339,"tag":381,"props":648,"children":649},{"style":606},[650],{"type":344,"value":609},{"type":339,"tag":381,"props":652,"children":653},{"style":643},[654],{"type":344,"value":655}," chars",{"type":339,"tag":381,"props":657,"children":659},{"style":658},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[660],{"type":344,"value":661},".",{"type":339,"tag":381,"props":663,"children":664},{"style":617},[665],{"type":344,"value":666},"length",{"type":339,"tag":381,"props":668,"children":670},{"style":669},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[671],{"type":344,"value":672},";\n",{"type":339,"tag":381,"props":674,"children":676},{"class":383,"line":675},7,[677,682,687,691,697],{"type":339,"tag":381,"props":678,"children":679},{"style":594},[680],{"type":344,"value":681},"  let",{"type":339,"tag":381,"props":683,"children":684},{"style":643},[685],{"type":344,"value":686}," i",{"type":339,"tag":381,"props":688,"children":689},{"style":606},[690],{"type":344,"value":609},{"type":339,"tag":381,"props":692,"children":694},{"style":693},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[695],{"type":344,"value":696}," 0",{"type":339,"tag":381,"props":698,"children":699},{"style":669},[700],{"type":344,"value":672},{"type":339,"tag":381,"props":702,"children":704},{"class":383,"line":703},8,[705,709,714,718,722,727,732],{"type":339,"tag":381,"props":706,"children":707},{"style":594},[708],{"type":344,"value":681},{"type":339,"tag":381,"props":710,"children":711},{"style":643},[712],{"type":344,"value":713}," j",{"type":339,"tag":381,"props":715,"children":716},{"style":606},[717],{"type":344,"value":609},{"type":339,"tag":381,"props":719,"children":720},{"style":643},[721],{"type":344,"value":686},{"type":339,"tag":381,"props":723,"children":724},{"style":606},[725],{"type":344,"value":726}," +",{"type":339,"tag":381,"props":728,"children":729},{"style":693},[730],{"type":344,"value":731}," 1",{"type":339,"tag":381,"props":733,"children":734},{"style":669},[735],{"type":344,"value":672},{"type":339,"tag":381,"props":737,"children":739},{"class":383,"line":738},9,[740,744,749,753,759],{"type":339,"tag":381,"props":741,"children":742},{"style":594},[743],{"type":344,"value":681},{"type":339,"tag":381,"props":745,"children":746},{"style":643},[747],{"type":344,"value":748}," s",{"type":339,"tag":381,"props":750,"children":751},{"style":606},[752],{"type":344,"value":609},{"type":339,"tag":381,"props":754,"children":756},{"style":755},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[757],{"type":344,"value":758}," \"\"",{"type":339,"tag":381,"props":760,"children":761},{"style":669},[762],{"type":344,"value":672},{"type":339,"tag":381,"props":764,"children":766},{"class":383,"line":765},10,[767],{"type":339,"tag":381,"props":768,"children":770},{"emptyLinePlaceholder":769},true,[771],{"type":344,"value":772},"\n",{"type":339,"tag":381,"props":774,"children":776},{"class":383,"line":775},11,[777,783,787,792,797,801],{"type":339,"tag":381,"props":778,"children":780},{"style":779},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[781],{"type":344,"value":782},"  while",{"type":339,"tag":381,"props":784,"children":785},{"style":617},[786],{"type":344,"value":620},{"type":339,"tag":381,"props":788,"children":789},{"style":643},[790],{"type":344,"value":791},"j",{"type":339,"tag":381,"props":793,"children":794},{"style":606},[795],{"type":344,"value":796}," \u003C=",{"type":339,"tag":381,"props":798,"children":799},{"style":643},[800],{"type":344,"value":646},{"type":339,"tag":381,"props":802,"children":803},{"style":617},[804],{"type":344,"value":631},{"type":339,"tag":381,"props":806,"children":808},{"class":383,"line":807},12,[809,814,818,822,827,832,837,842,846,850,854],{"type":339,"tag":381,"props":810,"children":811},{"style":779},[812],{"type":344,"value":813},"    if",{"type":339,"tag":381,"props":815,"children":816},{"style":617},[817],{"type":344,"value":620},{"type":339,"tag":381,"props":819,"children":820},{"style":643},[821],{"type":344,"value":626},{"type":339,"tag":381,"props":823,"children":824},{"style":617},[825],{"type":344,"value":826},"[",{"type":339,"tag":381,"props":828,"children":829},{"style":643},[830],{"type":344,"value":831},"i",{"type":339,"tag":381,"props":833,"children":834},{"style":617},[835],{"type":344,"value":836},"] ",{"type":339,"tag":381,"props":838,"children":839},{"style":606},[840],{"type":344,"value":841},"!==",{"type":339,"tag":381,"props":843,"children":844},{"style":643},[845],{"type":344,"value":655},{"type":339,"tag":381,"props":847,"children":848},{"style":617},[849],{"type":344,"value":826},{"type":339,"tag":381,"props":851,"children":852},{"style":643},[853],{"type":344,"value":791},{"type":339,"tag":381,"props":855,"children":856},{"style":617},[857],{"type":344,"value":858},"]) {\n",{"type":339,"tag":381,"props":860,"children":862},{"class":383,"line":861},13,[863,868,873,877,882,886,891,895,900,905,911,915,920,924,929,934,938,942,946,951,956,961,965,969,973,977],{"type":339,"tag":381,"props":864,"children":865},{"style":643},[866],{"type":344,"value":867},"      s",{"type":339,"tag":381,"props":869,"children":870},{"style":606},[871],{"type":344,"value":872}," +=",{"type":339,"tag":381,"props":874,"children":875},{"style":643},[876],{"type":344,"value":713},{"type":339,"tag":381,"props":878,"children":879},{"style":606},[880],{"type":344,"value":881}," -",{"type":339,"tag":381,"props":883,"children":884},{"style":643},[885],{"type":344,"value":686},{"type":339,"tag":381,"props":887,"children":888},{"style":606},[889],{"type":344,"value":890}," >",{"type":339,"tag":381,"props":892,"children":893},{"style":693},[894],{"type":344,"value":731},{"type":339,"tag":381,"props":896,"children":897},{"style":606},[898],{"type":344,"value":899}," ?",{"type":339,"tag":381,"props":901,"children":902},{"style":755},[903],{"type":344,"value":904}," `",{"type":339,"tag":381,"props":906,"children":908},{"style":907},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#FF8F40",[909],{"type":344,"value":910},"${",{"type":339,"tag":381,"props":912,"children":913},{"style":643},[914],{"type":344,"value":626},{"type":339,"tag":381,"props":916,"children":918},{"style":917},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#BFBDB6",[919],{"type":344,"value":826},{"type":339,"tag":381,"props":921,"children":922},{"style":643},[923],{"type":344,"value":831},{"type":339,"tag":381,"props":925,"children":926},{"style":917},[927],{"type":344,"value":928},"]",{"type":339,"tag":381,"props":930,"children":931},{"style":907},[932],{"type":344,"value":933},"}${",{"type":339,"tag":381,"props":935,"children":936},{"style":643},[937],{"type":344,"value":791},{"type":339,"tag":381,"props":939,"children":940},{"style":606},[941],{"type":344,"value":881},{"type":339,"tag":381,"props":943,"children":944},{"style":643},[945],{"type":344,"value":686},{"type":339,"tag":381,"props":947,"children":948},{"style":907},[949],{"type":344,"value":950},"}",{"type":339,"tag":381,"props":952,"children":953},{"style":755},[954],{"type":344,"value":955},"`",{"type":339,"tag":381,"props":957,"children":958},{"style":606},[959],{"type":344,"value":960}," :",{"type":339,"tag":381,"props":962,"children":963},{"style":643},[964],{"type":344,"value":655},{"type":339,"tag":381,"props":966,"children":967},{"style":617},[968],{"type":344,"value":826},{"type":339,"tag":381,"props":970,"children":971},{"style":643},[972],{"type":344,"value":831},{"type":339,"tag":381,"props":974,"children":975},{"style":617},[976],{"type":344,"value":928},{"type":339,"tag":381,"props":978,"children":979},{"style":669},[980],{"type":344,"value":672},{"type":339,"tag":381,"props":982,"children":984},{"class":383,"line":983},14,[985,990,994,998],{"type":339,"tag":381,"props":986,"children":987},{"style":643},[988],{"type":344,"value":989},"      i",{"type":339,"tag":381,"props":991,"children":992},{"style":606},[993],{"type":344,"value":609},{"type":339,"tag":381,"props":995,"children":996},{"style":643},[997],{"type":344,"value":713},{"type":339,"tag":381,"props":999,"children":1000},{"style":669},[1001],{"type":344,"value":672},{"type":339,"tag":381,"props":1003,"children":1005},{"class":383,"line":1004},15,[1006],{"type":339,"tag":381,"props":1007,"children":1008},{"style":617},[1009],{"type":344,"value":1010},"    }\n",{"type":339,"tag":381,"props":1012,"children":1014},{"class":383,"line":1013},16,[1015,1020,1025],{"type":339,"tag":381,"props":1016,"children":1017},{"style":643},[1018],{"type":344,"value":1019},"    j",{"type":339,"tag":381,"props":1021,"children":1022},{"style":606},[1023],{"type":344,"value":1024},"++",{"type":339,"tag":381,"props":1026,"children":1027},{"style":669},[1028],{"type":344,"value":672},{"type":339,"tag":381,"props":1030,"children":1032},{"class":383,"line":1031},17,[1033],{"type":339,"tag":381,"props":1034,"children":1035},{"style":617},[1036],{"type":344,"value":1037},"  }\n",{"type":339,"tag":381,"props":1039,"children":1041},{"class":383,"line":1040},18,[1042],{"type":339,"tag":381,"props":1043,"children":1044},{"emptyLinePlaceholder":769},[1045],{"type":344,"value":772},{"type":339,"tag":381,"props":1047,"children":1049},{"class":383,"line":1048},19,[1050,1055,1059,1064,1068,1072,1076,1081,1085,1090,1094,1098,1102,1106,1110,1114],{"type":339,"tag":381,"props":1051,"children":1052},{"style":779},[1053],{"type":344,"value":1054},"  for",{"type":339,"tag":381,"props":1056,"children":1057},{"style":617},[1058],{"type":344,"value":620},{"type":339,"tag":381,"props":1060,"children":1061},{"style":594},[1062],{"type":344,"value":1063},"let",{"type":339,"tag":381,"props":1065,"children":1066},{"style":643},[1067],{"type":344,"value":686},{"type":339,"tag":381,"props":1069,"children":1070},{"style":606},[1071],{"type":344,"value":609},{"type":339,"tag":381,"props":1073,"children":1074},{"style":693},[1075],{"type":344,"value":696},{"type":339,"tag":381,"props":1077,"children":1078},{"style":669},[1079],{"type":344,"value":1080},";",{"type":339,"tag":381,"props":1082,"children":1083},{"style":643},[1084],{"type":344,"value":686},{"type":339,"tag":381,"props":1086,"children":1087},{"style":606},[1088],{"type":344,"value":1089}," \u003C",{"type":339,"tag":381,"props":1091,"children":1092},{"style":643},[1093],{"type":344,"value":748},{"type":339,"tag":381,"props":1095,"children":1096},{"style":658},[1097],{"type":344,"value":661},{"type":339,"tag":381,"props":1099,"children":1100},{"style":617},[1101],{"type":344,"value":666},{"type":339,"tag":381,"props":1103,"children":1104},{"style":669},[1105],{"type":344,"value":1080},{"type":339,"tag":381,"props":1107,"children":1108},{"style":643},[1109],{"type":344,"value":686},{"type":339,"tag":381,"props":1111,"children":1112},{"style":606},[1113],{"type":344,"value":1024},{"type":339,"tag":381,"props":1115,"children":1116},{"style":617},[1117],{"type":344,"value":631},{"type":339,"tag":381,"props":1119,"children":1121},{"class":383,"line":1120},20,[1122,1127,1131,1135,1139,1144,1148,1152,1156,1160],{"type":339,"tag":381,"props":1123,"children":1124},{"style":643},[1125],{"type":344,"value":1126},"    chars",{"type":339,"tag":381,"props":1128,"children":1129},{"style":617},[1130],{"type":344,"value":826},{"type":339,"tag":381,"props":1132,"children":1133},{"style":643},[1134],{"type":344,"value":831},{"type":339,"tag":381,"props":1136,"children":1137},{"style":617},[1138],{"type":344,"value":836},{"type":339,"tag":381,"props":1140,"children":1141},{"style":606},[1142],{"type":344,"value":1143},"=",{"type":339,"tag":381,"props":1145,"children":1146},{"style":643},[1147],{"type":344,"value":748},{"type":339,"tag":381,"props":1149,"children":1150},{"style":617},[1151],{"type":344,"value":826},{"type":339,"tag":381,"props":1153,"children":1154},{"style":643},[1155],{"type":344,"value":831},{"type":339,"tag":381,"props":1157,"children":1158},{"style":617},[1159],{"type":344,"value":928},{"type":339,"tag":381,"props":1161,"children":1162},{"style":669},[1163],{"type":344,"value":672},{"type":339,"tag":381,"props":1165,"children":1167},{"class":383,"line":1166},21,[1168],{"type":339,"tag":381,"props":1169,"children":1170},{"style":617},[1171],{"type":344,"value":1037},{"type":339,"tag":381,"props":1173,"children":1175},{"class":383,"line":1174},22,[1176],{"type":339,"tag":381,"props":1177,"children":1178},{"emptyLinePlaceholder":769},[1179],{"type":344,"value":772},{"type":339,"tag":381,"props":1181,"children":1183},{"class":383,"line":1182},23,[1184,1189,1193,1197,1201],{"type":339,"tag":381,"props":1185,"children":1186},{"style":779},[1187],{"type":344,"value":1188},"  return",{"type":339,"tag":381,"props":1190,"children":1191},{"style":643},[1192],{"type":344,"value":748},{"type":339,"tag":381,"props":1194,"children":1195},{"style":658},[1196],{"type":344,"value":661},{"type":339,"tag":381,"props":1198,"children":1199},{"style":617},[1200],{"type":344,"value":666},{"type":339,"tag":381,"props":1202,"children":1203},{"style":669},[1204],{"type":344,"value":672},{"type":339,"tag":381,"props":1206,"children":1208},{"class":383,"line":1207},24,[1209,1213],{"type":339,"tag":381,"props":1210,"children":1211},{"style":617},[1212],{"type":344,"value":950},{"type":339,"tag":381,"props":1214,"children":1215},{"style":669},[1216],{"type":344,"value":672},{"type":339,"tag":1218,"props":1219,"children":1220},"style",{},[1221],{"type":344,"value":1222},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":332,"searchDepth":590,"depth":590,"links":1224},[1225,1226],{"id":504,"depth":393,"text":504},{"id":509,"depth":393,"text":509,"children":1227},[1228],{"id":515,"depth":402,"text":515},"markdown","content:2.code:1.algorithm:3.leetcode:443.string-compression.md","content","2.code/1.algorithm/3.leetcode/443.string-compression.md","md",[1235,1237],{"_path":232,"title":231,"description":1236},"给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。",{"_path":238,"title":237,"description":1238},"斐波那契数 （通常用 F(n) 表示）形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：",1712330891189]