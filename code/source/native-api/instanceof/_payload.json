[{"data":1,"prerenderedAt":816},["Reactive",2],{"navigation":3,"/code/source/native-api/instanceof":353,"/code/source/native-api/instanceof-surround":812},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319,341,344,347,350],{"title":320,"_path":321,"children":322},"Promise","/code/scene/promise",[323,326,329,332,335,338],{"title":324,"_path":325},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":327,"_path":328},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":330,"_path":331},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":333,"_path":334},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":336,"_path":337},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":339,"_path":340},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":342,"_path":343},"计算对象占用字节数","/code/scene/calcuate-object-bytes",{"title":345,"_path":346},"lodash.get","/code/scene/lodash-get",{"title":348,"_path":349},"sku 算法实现","/code/scene/sku",{"title":351,"_path":352},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":285,"_dir":354,"_draft":355,"_partial":355,"_locale":356,"title":284,"description":356,"body":357,"_type":807,"_id":808,"_source":809,"_file":810,"_extension":811},"native-api",false,"",{"type":358,"children":359,"toc":805},"root",[360,382,799],{"type":361,"tag":362,"props":363,"children":364},"element","ol",{},[365,372,377],{"type":361,"tag":366,"props":367,"children":368},"li",{},[369],{"type":370,"value":371},"text","首先获取原型的类型",{"type":361,"tag":366,"props":373,"children":374},{},[375],{"type":370,"value":376},"然后获取对象的类型",{"type":361,"tag":366,"props":378,"children":379},{},[380],{"type":370,"value":381},"然后一直循环判断对象的原型是否等于类型的原型，直到对象原型为 null，因为原型链最终为 null",{"type":361,"tag":383,"props":384,"children":388},"pre",{"className":385,"code":386,"language":387,"meta":356,"style":356},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","function _instanceof(target, origin) {\n  if (typeof target !== \"object\" || target === null) return false;\n  if (typeof origin !== \"function\") {\n    throw new TypeError(\"origin must be function\");\n  }\n  let proto = Object.getPrototypeOf(target); // 相当于: proto = target.__proto__\n  while (proto) {\n    if (proto === origin.prototype) return true;\n    proto = Object.getPrototypeOf(proto);\n  }\n  return false;\n}\n","js",[389],{"type":361,"tag":390,"props":391,"children":392},"code",{"__ignoreMap":356},[393,439,517,550,587,596,654,676,724,765,773,790],{"type":361,"tag":394,"props":395,"children":398},"span",{"class":396,"line":397},"line",1,[399,405,411,417,423,429,434],{"type":361,"tag":394,"props":400,"children":402},{"style":401},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[403],{"type":370,"value":404},"function",{"type":361,"tag":394,"props":406,"children":408},{"style":407},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[409],{"type":370,"value":410}," _instanceof",{"type":361,"tag":394,"props":412,"children":414},{"style":413},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[415],{"type":370,"value":416},"(",{"type":361,"tag":394,"props":418,"children":420},{"style":419},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[421],{"type":370,"value":422},"target",{"type":361,"tag":394,"props":424,"children":426},{"style":425},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[427],{"type":370,"value":428},",",{"type":361,"tag":394,"props":430,"children":431},{"style":419},[432],{"type":370,"value":433}," origin",{"type":361,"tag":394,"props":435,"children":436},{"style":413},[437],{"type":370,"value":438},") {\n",{"type":361,"tag":394,"props":440,"children":442},{"class":396,"line":441},2,[443,449,454,460,466,471,477,482,486,491,497,502,507,512],{"type":361,"tag":394,"props":444,"children":446},{"style":445},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[447],{"type":370,"value":448},"  if",{"type":361,"tag":394,"props":450,"children":451},{"style":413},[452],{"type":370,"value":453}," (",{"type":361,"tag":394,"props":455,"children":457},{"style":456},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[458],{"type":370,"value":459},"typeof",{"type":361,"tag":394,"props":461,"children":463},{"style":462},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[464],{"type":370,"value":465}," target",{"type":361,"tag":394,"props":467,"children":468},{"style":456},[469],{"type":370,"value":470}," !==",{"type":361,"tag":394,"props":472,"children":474},{"style":473},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[475],{"type":370,"value":476}," \"object\"",{"type":361,"tag":394,"props":478,"children":479},{"style":456},[480],{"type":370,"value":481}," ||",{"type":361,"tag":394,"props":483,"children":484},{"style":462},[485],{"type":370,"value":465},{"type":361,"tag":394,"props":487,"children":488},{"style":456},[489],{"type":370,"value":490}," ===",{"type":361,"tag":394,"props":492,"children":494},{"style":493},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[495],{"type":370,"value":496}," null",{"type":361,"tag":394,"props":498,"children":499},{"style":413},[500],{"type":370,"value":501},") ",{"type":361,"tag":394,"props":503,"children":504},{"style":445},[505],{"type":370,"value":506},"return",{"type":361,"tag":394,"props":508,"children":509},{"style":493},[510],{"type":370,"value":511}," false",{"type":361,"tag":394,"props":513,"children":514},{"style":425},[515],{"type":370,"value":516},";\n",{"type":361,"tag":394,"props":518,"children":520},{"class":396,"line":519},3,[521,525,529,533,537,541,546],{"type":361,"tag":394,"props":522,"children":523},{"style":445},[524],{"type":370,"value":448},{"type":361,"tag":394,"props":526,"children":527},{"style":413},[528],{"type":370,"value":453},{"type":361,"tag":394,"props":530,"children":531},{"style":456},[532],{"type":370,"value":459},{"type":361,"tag":394,"props":534,"children":535},{"style":462},[536],{"type":370,"value":433},{"type":361,"tag":394,"props":538,"children":539},{"style":456},[540],{"type":370,"value":470},{"type":361,"tag":394,"props":542,"children":543},{"style":473},[544],{"type":370,"value":545}," \"function\"",{"type":361,"tag":394,"props":547,"children":548},{"style":413},[549],{"type":370,"value":438},{"type":361,"tag":394,"props":551,"children":553},{"class":396,"line":552},4,[554,559,564,569,573,578,583],{"type":361,"tag":394,"props":555,"children":556},{"style":445},[557],{"type":370,"value":558},"    throw",{"type":361,"tag":394,"props":560,"children":561},{"style":456},[562],{"type":370,"value":563}," new",{"type":361,"tag":394,"props":565,"children":566},{"style":407},[567],{"type":370,"value":568}," TypeError",{"type":361,"tag":394,"props":570,"children":571},{"style":413},[572],{"type":370,"value":416},{"type":361,"tag":394,"props":574,"children":575},{"style":473},[576],{"type":370,"value":577},"\"origin must be function\"",{"type":361,"tag":394,"props":579,"children":580},{"style":413},[581],{"type":370,"value":582},")",{"type":361,"tag":394,"props":584,"children":585},{"style":425},[586],{"type":370,"value":516},{"type":361,"tag":394,"props":588,"children":590},{"class":396,"line":589},5,[591],{"type":361,"tag":394,"props":592,"children":593},{"style":413},[594],{"type":370,"value":595},"  }\n",{"type":361,"tag":394,"props":597,"children":599},{"class":396,"line":598},6,[600,605,610,615,620,626,631,635,639,643,648],{"type":361,"tag":394,"props":601,"children":602},{"style":401},[603],{"type":370,"value":604},"  let",{"type":361,"tag":394,"props":606,"children":607},{"style":462},[608],{"type":370,"value":609}," proto",{"type":361,"tag":394,"props":611,"children":612},{"style":456},[613],{"type":370,"value":614}," =",{"type":361,"tag":394,"props":616,"children":617},{"style":462},[618],{"type":370,"value":619}," Object",{"type":361,"tag":394,"props":621,"children":623},{"style":622},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[624],{"type":370,"value":625},".",{"type":361,"tag":394,"props":627,"children":628},{"style":407},[629],{"type":370,"value":630},"getPrototypeOf",{"type":361,"tag":394,"props":632,"children":633},{"style":413},[634],{"type":370,"value":416},{"type":361,"tag":394,"props":636,"children":637},{"style":462},[638],{"type":370,"value":422},{"type":361,"tag":394,"props":640,"children":641},{"style":413},[642],{"type":370,"value":582},{"type":361,"tag":394,"props":644,"children":645},{"style":425},[646],{"type":370,"value":647},";",{"type":361,"tag":394,"props":649,"children":651},{"style":650},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[652],{"type":370,"value":653}," // 相当于: proto = target.__proto__\n",{"type":361,"tag":394,"props":655,"children":657},{"class":396,"line":656},7,[658,663,667,672],{"type":361,"tag":394,"props":659,"children":660},{"style":445},[661],{"type":370,"value":662},"  while",{"type":361,"tag":394,"props":664,"children":665},{"style":413},[666],{"type":370,"value":453},{"type":361,"tag":394,"props":668,"children":669},{"style":462},[670],{"type":370,"value":671},"proto",{"type":361,"tag":394,"props":673,"children":674},{"style":413},[675],{"type":370,"value":438},{"type":361,"tag":394,"props":677,"children":679},{"class":396,"line":678},8,[680,685,689,693,697,702,706,711,715,720],{"type":361,"tag":394,"props":681,"children":682},{"style":445},[683],{"type":370,"value":684},"    if",{"type":361,"tag":394,"props":686,"children":687},{"style":413},[688],{"type":370,"value":453},{"type":361,"tag":394,"props":690,"children":691},{"style":462},[692],{"type":370,"value":671},{"type":361,"tag":394,"props":694,"children":695},{"style":456},[696],{"type":370,"value":490},{"type":361,"tag":394,"props":698,"children":700},{"style":699},"--shiki-light:#DC3EB7;--shiki-default:#DC3EB7;--shiki-dark:#39BAE6",[701],{"type":370,"value":433},{"type":361,"tag":394,"props":703,"children":704},{"style":622},[705],{"type":370,"value":625},{"type":361,"tag":394,"props":707,"children":708},{"style":413},[709],{"type":370,"value":710},"prototype) ",{"type":361,"tag":394,"props":712,"children":713},{"style":445},[714],{"type":370,"value":506},{"type":361,"tag":394,"props":716,"children":717},{"style":493},[718],{"type":370,"value":719}," true",{"type":361,"tag":394,"props":721,"children":722},{"style":425},[723],{"type":370,"value":516},{"type":361,"tag":394,"props":725,"children":727},{"class":396,"line":726},9,[728,733,737,741,745,749,753,757,761],{"type":361,"tag":394,"props":729,"children":730},{"style":462},[731],{"type":370,"value":732},"    proto",{"type":361,"tag":394,"props":734,"children":735},{"style":456},[736],{"type":370,"value":614},{"type":361,"tag":394,"props":738,"children":739},{"style":462},[740],{"type":370,"value":619},{"type":361,"tag":394,"props":742,"children":743},{"style":622},[744],{"type":370,"value":625},{"type":361,"tag":394,"props":746,"children":747},{"style":407},[748],{"type":370,"value":630},{"type":361,"tag":394,"props":750,"children":751},{"style":413},[752],{"type":370,"value":416},{"type":361,"tag":394,"props":754,"children":755},{"style":462},[756],{"type":370,"value":671},{"type":361,"tag":394,"props":758,"children":759},{"style":413},[760],{"type":370,"value":582},{"type":361,"tag":394,"props":762,"children":763},{"style":425},[764],{"type":370,"value":516},{"type":361,"tag":394,"props":766,"children":768},{"class":396,"line":767},10,[769],{"type":361,"tag":394,"props":770,"children":771},{"style":413},[772],{"type":370,"value":595},{"type":361,"tag":394,"props":774,"children":776},{"class":396,"line":775},11,[777,782,786],{"type":361,"tag":394,"props":778,"children":779},{"style":445},[780],{"type":370,"value":781},"  return",{"type":361,"tag":394,"props":783,"children":784},{"style":493},[785],{"type":370,"value":511},{"type":361,"tag":394,"props":787,"children":788},{"style":425},[789],{"type":370,"value":516},{"type":361,"tag":394,"props":791,"children":793},{"class":396,"line":792},12,[794],{"type":361,"tag":394,"props":795,"children":796},{"style":413},[797],{"type":370,"value":798},"}\n",{"type":361,"tag":800,"props":801,"children":802},"style",{},[803],{"type":370,"value":804},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":356,"searchDepth":589,"depth":589,"links":806},[],"markdown","content:2.code:2.source:1.native-api:4.instanceof.md","content","2.code/2.source/1.native-api/4.instanceof.md","md",[813,815],{"_path":282,"title":281,"description":814},"在调用 new 的过程中会发生以上 4 件事情：",{"_path":288,"title":287,"description":356},1712589915145]