[{"data":1,"prerenderedAt":822},["Reactive",2],{"navigation":3,"/code/source/native-api/instanceof":359,"/code/source/native-api/instanceof-surround":818},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,269,318],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263,266],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.165 比较版本号","/code/algorithm/leetcode/compare-version-numbers",{"title":198,"_path":199},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":201,"_path":202},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":204,"_path":205},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":207,"_path":208},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":210,"_path":211},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":213,"_path":214},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":216,"_path":217},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":219,"_path":220},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":222,"_path":223},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":225,"_path":226},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":228,"_path":229},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":231,"_path":232},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":234,"_path":235},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":237,"_path":238},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":240,"_path":241},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":243,"_path":244},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":246,"_path":247},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":249,"_path":250},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":252,"_path":253},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":255,"_path":256},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":258,"_path":259},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":261,"_path":262},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":264,"_path":265},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":267,"_path":268},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":270,"_path":271,"children":272},"源码实现","/code/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/code/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/code/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/code/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/code/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/code/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/code/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/code/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/code/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/code/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/code/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/code/source/string",[315],{"title":316,"_path":317},"repeat()","/code/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/code/scene",[322,344,347,350,353,356],{"title":323,"_path":324,"children":325},"Promise","/code/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/code/scene/calcuate-object-bytes",{"title":348,"_path":349},"lodash.get","/code/scene/lodash-get",{"title":351,"_path":352},"记忆化请求函数 - 可缓存请求函数","/code/scene/memorize-request",{"title":354,"_path":355},"sku 算法实现","/code/scene/sku",{"title":357,"_path":358},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":288,"_dir":360,"_draft":361,"_partial":361,"_locale":362,"title":287,"description":362,"body":363,"_type":813,"_id":814,"_source":815,"_file":816,"_extension":817},"native-api",false,"",{"type":364,"children":365,"toc":811},"root",[366,388,805],{"type":367,"tag":368,"props":369,"children":370},"element","ol",{},[371,378,383],{"type":367,"tag":372,"props":373,"children":374},"li",{},[375],{"type":376,"value":377},"text","首先获取原型的类型",{"type":367,"tag":372,"props":379,"children":380},{},[381],{"type":376,"value":382},"然后获取对象的类型",{"type":367,"tag":372,"props":384,"children":385},{},[386],{"type":376,"value":387},"然后一直循环判断对象的原型是否等于类型的原型，直到对象原型为 null，因为原型链最终为 null",{"type":367,"tag":389,"props":390,"children":394},"pre",{"className":391,"code":392,"language":393,"meta":362,"style":362},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","function _instanceof(target, origin) {\n  if (typeof target !== \"object\" || target === null) return false;\n  if (typeof origin !== \"function\") {\n    throw new TypeError(\"origin must be function\");\n  }\n  let proto = Object.getPrototypeOf(target); // 相当于: proto = target.__proto__\n  while (proto) {\n    if (proto === origin.prototype) return true;\n    proto = Object.getPrototypeOf(proto);\n  }\n  return false;\n}\n","js",[395],{"type":367,"tag":396,"props":397,"children":398},"code",{"__ignoreMap":362},[399,445,523,556,593,602,660,682,730,771,779,796],{"type":367,"tag":400,"props":401,"children":404},"span",{"class":402,"line":403},"line",1,[405,411,417,423,429,435,440],{"type":367,"tag":400,"props":406,"children":408},{"style":407},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[409],{"type":376,"value":410},"function",{"type":367,"tag":400,"props":412,"children":414},{"style":413},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[415],{"type":376,"value":416}," _instanceof",{"type":367,"tag":400,"props":418,"children":420},{"style":419},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[421],{"type":376,"value":422},"(",{"type":367,"tag":400,"props":424,"children":426},{"style":425},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[427],{"type":376,"value":428},"target",{"type":367,"tag":400,"props":430,"children":432},{"style":431},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[433],{"type":376,"value":434},",",{"type":367,"tag":400,"props":436,"children":437},{"style":425},[438],{"type":376,"value":439}," origin",{"type":367,"tag":400,"props":441,"children":442},{"style":419},[443],{"type":376,"value":444},") {\n",{"type":367,"tag":400,"props":446,"children":448},{"class":402,"line":447},2,[449,455,460,466,472,477,483,488,492,497,503,508,513,518],{"type":367,"tag":400,"props":450,"children":452},{"style":451},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[453],{"type":376,"value":454},"  if",{"type":367,"tag":400,"props":456,"children":457},{"style":419},[458],{"type":376,"value":459}," (",{"type":367,"tag":400,"props":461,"children":463},{"style":462},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[464],{"type":376,"value":465},"typeof",{"type":367,"tag":400,"props":467,"children":469},{"style":468},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[470],{"type":376,"value":471}," target",{"type":367,"tag":400,"props":473,"children":474},{"style":462},[475],{"type":376,"value":476}," !==",{"type":367,"tag":400,"props":478,"children":480},{"style":479},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[481],{"type":376,"value":482}," \"object\"",{"type":367,"tag":400,"props":484,"children":485},{"style":462},[486],{"type":376,"value":487}," ||",{"type":367,"tag":400,"props":489,"children":490},{"style":468},[491],{"type":376,"value":471},{"type":367,"tag":400,"props":493,"children":494},{"style":462},[495],{"type":376,"value":496}," ===",{"type":367,"tag":400,"props":498,"children":500},{"style":499},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[501],{"type":376,"value":502}," null",{"type":367,"tag":400,"props":504,"children":505},{"style":419},[506],{"type":376,"value":507},") ",{"type":367,"tag":400,"props":509,"children":510},{"style":451},[511],{"type":376,"value":512},"return",{"type":367,"tag":400,"props":514,"children":515},{"style":499},[516],{"type":376,"value":517}," false",{"type":367,"tag":400,"props":519,"children":520},{"style":431},[521],{"type":376,"value":522},";\n",{"type":367,"tag":400,"props":524,"children":526},{"class":402,"line":525},3,[527,531,535,539,543,547,552],{"type":367,"tag":400,"props":528,"children":529},{"style":451},[530],{"type":376,"value":454},{"type":367,"tag":400,"props":532,"children":533},{"style":419},[534],{"type":376,"value":459},{"type":367,"tag":400,"props":536,"children":537},{"style":462},[538],{"type":376,"value":465},{"type":367,"tag":400,"props":540,"children":541},{"style":468},[542],{"type":376,"value":439},{"type":367,"tag":400,"props":544,"children":545},{"style":462},[546],{"type":376,"value":476},{"type":367,"tag":400,"props":548,"children":549},{"style":479},[550],{"type":376,"value":551}," \"function\"",{"type":367,"tag":400,"props":553,"children":554},{"style":419},[555],{"type":376,"value":444},{"type":367,"tag":400,"props":557,"children":559},{"class":402,"line":558},4,[560,565,570,575,579,584,589],{"type":367,"tag":400,"props":561,"children":562},{"style":451},[563],{"type":376,"value":564},"    throw",{"type":367,"tag":400,"props":566,"children":567},{"style":462},[568],{"type":376,"value":569}," new",{"type":367,"tag":400,"props":571,"children":572},{"style":413},[573],{"type":376,"value":574}," TypeError",{"type":367,"tag":400,"props":576,"children":577},{"style":419},[578],{"type":376,"value":422},{"type":367,"tag":400,"props":580,"children":581},{"style":479},[582],{"type":376,"value":583},"\"origin must be function\"",{"type":367,"tag":400,"props":585,"children":586},{"style":419},[587],{"type":376,"value":588},")",{"type":367,"tag":400,"props":590,"children":591},{"style":431},[592],{"type":376,"value":522},{"type":367,"tag":400,"props":594,"children":596},{"class":402,"line":595},5,[597],{"type":367,"tag":400,"props":598,"children":599},{"style":419},[600],{"type":376,"value":601},"  }\n",{"type":367,"tag":400,"props":603,"children":605},{"class":402,"line":604},6,[606,611,616,621,626,632,637,641,645,649,654],{"type":367,"tag":400,"props":607,"children":608},{"style":407},[609],{"type":376,"value":610},"  let",{"type":367,"tag":400,"props":612,"children":613},{"style":468},[614],{"type":376,"value":615}," proto",{"type":367,"tag":400,"props":617,"children":618},{"style":462},[619],{"type":376,"value":620}," =",{"type":367,"tag":400,"props":622,"children":623},{"style":468},[624],{"type":376,"value":625}," Object",{"type":367,"tag":400,"props":627,"children":629},{"style":628},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[630],{"type":376,"value":631},".",{"type":367,"tag":400,"props":633,"children":634},{"style":413},[635],{"type":376,"value":636},"getPrototypeOf",{"type":367,"tag":400,"props":638,"children":639},{"style":419},[640],{"type":376,"value":422},{"type":367,"tag":400,"props":642,"children":643},{"style":468},[644],{"type":376,"value":428},{"type":367,"tag":400,"props":646,"children":647},{"style":419},[648],{"type":376,"value":588},{"type":367,"tag":400,"props":650,"children":651},{"style":431},[652],{"type":376,"value":653},";",{"type":367,"tag":400,"props":655,"children":657},{"style":656},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[658],{"type":376,"value":659}," // 相当于: proto = target.__proto__\n",{"type":367,"tag":400,"props":661,"children":663},{"class":402,"line":662},7,[664,669,673,678],{"type":367,"tag":400,"props":665,"children":666},{"style":451},[667],{"type":376,"value":668},"  while",{"type":367,"tag":400,"props":670,"children":671},{"style":419},[672],{"type":376,"value":459},{"type":367,"tag":400,"props":674,"children":675},{"style":468},[676],{"type":376,"value":677},"proto",{"type":367,"tag":400,"props":679,"children":680},{"style":419},[681],{"type":376,"value":444},{"type":367,"tag":400,"props":683,"children":685},{"class":402,"line":684},8,[686,691,695,699,703,708,712,717,721,726],{"type":367,"tag":400,"props":687,"children":688},{"style":451},[689],{"type":376,"value":690},"    if",{"type":367,"tag":400,"props":692,"children":693},{"style":419},[694],{"type":376,"value":459},{"type":367,"tag":400,"props":696,"children":697},{"style":468},[698],{"type":376,"value":677},{"type":367,"tag":400,"props":700,"children":701},{"style":462},[702],{"type":376,"value":496},{"type":367,"tag":400,"props":704,"children":706},{"style":705},"--shiki-light:#DC3EB7;--shiki-default:#DC3EB7;--shiki-dark:#39BAE6",[707],{"type":376,"value":439},{"type":367,"tag":400,"props":709,"children":710},{"style":628},[711],{"type":376,"value":631},{"type":367,"tag":400,"props":713,"children":714},{"style":419},[715],{"type":376,"value":716},"prototype) ",{"type":367,"tag":400,"props":718,"children":719},{"style":451},[720],{"type":376,"value":512},{"type":367,"tag":400,"props":722,"children":723},{"style":499},[724],{"type":376,"value":725}," true",{"type":367,"tag":400,"props":727,"children":728},{"style":431},[729],{"type":376,"value":522},{"type":367,"tag":400,"props":731,"children":733},{"class":402,"line":732},9,[734,739,743,747,751,755,759,763,767],{"type":367,"tag":400,"props":735,"children":736},{"style":468},[737],{"type":376,"value":738},"    proto",{"type":367,"tag":400,"props":740,"children":741},{"style":462},[742],{"type":376,"value":620},{"type":367,"tag":400,"props":744,"children":745},{"style":468},[746],{"type":376,"value":625},{"type":367,"tag":400,"props":748,"children":749},{"style":628},[750],{"type":376,"value":631},{"type":367,"tag":400,"props":752,"children":753},{"style":413},[754],{"type":376,"value":636},{"type":367,"tag":400,"props":756,"children":757},{"style":419},[758],{"type":376,"value":422},{"type":367,"tag":400,"props":760,"children":761},{"style":468},[762],{"type":376,"value":677},{"type":367,"tag":400,"props":764,"children":765},{"style":419},[766],{"type":376,"value":588},{"type":367,"tag":400,"props":768,"children":769},{"style":431},[770],{"type":376,"value":522},{"type":367,"tag":400,"props":772,"children":774},{"class":402,"line":773},10,[775],{"type":367,"tag":400,"props":776,"children":777},{"style":419},[778],{"type":376,"value":601},{"type":367,"tag":400,"props":780,"children":782},{"class":402,"line":781},11,[783,788,792],{"type":367,"tag":400,"props":784,"children":785},{"style":451},[786],{"type":376,"value":787},"  return",{"type":367,"tag":400,"props":789,"children":790},{"style":499},[791],{"type":376,"value":517},{"type":367,"tag":400,"props":793,"children":794},{"style":431},[795],{"type":376,"value":522},{"type":367,"tag":400,"props":797,"children":799},{"class":402,"line":798},12,[800],{"type":367,"tag":400,"props":801,"children":802},{"style":419},[803],{"type":376,"value":804},"}\n",{"type":367,"tag":806,"props":807,"children":808},"style",{},[809],{"type":376,"value":810},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":362,"searchDepth":595,"depth":595,"links":812},[],"markdown","content:2.code:2.source:1.native-api:4.instanceof.md","content","2.code/2.source/1.native-api/4.instanceof.md","md",[819,821],{"_path":285,"title":284,"description":820},"在调用 new 的过程中会发生以上 4 件事情：",{"_path":291,"title":290,"description":362},1712748642282]