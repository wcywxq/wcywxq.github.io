[{"data":1,"prerenderedAt":810},["Reactive",2],{"navigation":3,"/code/source/native-api/instanceof":347,"/code/source/native-api/instanceof-surround":806},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319,341,344],{"title":320,"_path":321,"children":322},"Promise","/code/scene/promise",[323,326,329,332,335,338],{"title":324,"_path":325},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":327,"_path":328},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":330,"_path":331},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":333,"_path":334},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":336,"_path":337},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":339,"_path":340},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":342,"_path":343},"lodash.get","/code/scene/lodash-get",{"title":345,"_path":346},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":285,"_dir":348,"_draft":349,"_partial":349,"_locale":350,"title":284,"description":350,"body":351,"_type":801,"_id":802,"_source":803,"_file":804,"_extension":805},"native-api",false,"",{"type":352,"children":353,"toc":799},"root",[354,376,793],{"type":355,"tag":356,"props":357,"children":358},"element","ol",{},[359,366,371],{"type":355,"tag":360,"props":361,"children":362},"li",{},[363],{"type":364,"value":365},"text","首先获取原型的类型",{"type":355,"tag":360,"props":367,"children":368},{},[369],{"type":364,"value":370},"然后获取对象的类型",{"type":355,"tag":360,"props":372,"children":373},{},[374],{"type":364,"value":375},"然后一直循环判断对象的原型是否等于类型的原型，直到对象原型为 null，因为原型链最终为 null",{"type":355,"tag":377,"props":378,"children":382},"pre",{"className":379,"code":380,"language":381,"meta":350,"style":350},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","function _instanceof(target, origin) {\n  if (typeof target !== \"object\" || target === null) return false;\n  if (typeof origin !== \"function\") {\n    throw new TypeError(\"origin must be function\");\n  }\n  let proto = Object.getPrototypeOf(target); // 相当于: proto = target.__proto__\n  while (proto) {\n    if (proto === origin.prototype) return true;\n    proto = Object.getPrototypeOf(proto);\n  }\n  return false;\n}\n","js",[383],{"type":355,"tag":384,"props":385,"children":386},"code",{"__ignoreMap":350},[387,433,511,544,581,590,648,670,718,759,767,784],{"type":355,"tag":388,"props":389,"children":392},"span",{"class":390,"line":391},"line",1,[393,399,405,411,417,423,428],{"type":355,"tag":388,"props":394,"children":396},{"style":395},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[397],{"type":364,"value":398},"function",{"type":355,"tag":388,"props":400,"children":402},{"style":401},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[403],{"type":364,"value":404}," _instanceof",{"type":355,"tag":388,"props":406,"children":408},{"style":407},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[409],{"type":364,"value":410},"(",{"type":355,"tag":388,"props":412,"children":414},{"style":413},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[415],{"type":364,"value":416},"target",{"type":355,"tag":388,"props":418,"children":420},{"style":419},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[421],{"type":364,"value":422},",",{"type":355,"tag":388,"props":424,"children":425},{"style":413},[426],{"type":364,"value":427}," origin",{"type":355,"tag":388,"props":429,"children":430},{"style":407},[431],{"type":364,"value":432},") {\n",{"type":355,"tag":388,"props":434,"children":436},{"class":390,"line":435},2,[437,443,448,454,460,465,471,476,480,485,491,496,501,506],{"type":355,"tag":388,"props":438,"children":440},{"style":439},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[441],{"type":364,"value":442},"  if",{"type":355,"tag":388,"props":444,"children":445},{"style":407},[446],{"type":364,"value":447}," (",{"type":355,"tag":388,"props":449,"children":451},{"style":450},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[452],{"type":364,"value":453},"typeof",{"type":355,"tag":388,"props":455,"children":457},{"style":456},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[458],{"type":364,"value":459}," target",{"type":355,"tag":388,"props":461,"children":462},{"style":450},[463],{"type":364,"value":464}," !==",{"type":355,"tag":388,"props":466,"children":468},{"style":467},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[469],{"type":364,"value":470}," \"object\"",{"type":355,"tag":388,"props":472,"children":473},{"style":450},[474],{"type":364,"value":475}," ||",{"type":355,"tag":388,"props":477,"children":478},{"style":456},[479],{"type":364,"value":459},{"type":355,"tag":388,"props":481,"children":482},{"style":450},[483],{"type":364,"value":484}," ===",{"type":355,"tag":388,"props":486,"children":488},{"style":487},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[489],{"type":364,"value":490}," null",{"type":355,"tag":388,"props":492,"children":493},{"style":407},[494],{"type":364,"value":495},") ",{"type":355,"tag":388,"props":497,"children":498},{"style":439},[499],{"type":364,"value":500},"return",{"type":355,"tag":388,"props":502,"children":503},{"style":487},[504],{"type":364,"value":505}," false",{"type":355,"tag":388,"props":507,"children":508},{"style":419},[509],{"type":364,"value":510},";\n",{"type":355,"tag":388,"props":512,"children":514},{"class":390,"line":513},3,[515,519,523,527,531,535,540],{"type":355,"tag":388,"props":516,"children":517},{"style":439},[518],{"type":364,"value":442},{"type":355,"tag":388,"props":520,"children":521},{"style":407},[522],{"type":364,"value":447},{"type":355,"tag":388,"props":524,"children":525},{"style":450},[526],{"type":364,"value":453},{"type":355,"tag":388,"props":528,"children":529},{"style":456},[530],{"type":364,"value":427},{"type":355,"tag":388,"props":532,"children":533},{"style":450},[534],{"type":364,"value":464},{"type":355,"tag":388,"props":536,"children":537},{"style":467},[538],{"type":364,"value":539}," \"function\"",{"type":355,"tag":388,"props":541,"children":542},{"style":407},[543],{"type":364,"value":432},{"type":355,"tag":388,"props":545,"children":547},{"class":390,"line":546},4,[548,553,558,563,567,572,577],{"type":355,"tag":388,"props":549,"children":550},{"style":439},[551],{"type":364,"value":552},"    throw",{"type":355,"tag":388,"props":554,"children":555},{"style":450},[556],{"type":364,"value":557}," new",{"type":355,"tag":388,"props":559,"children":560},{"style":401},[561],{"type":364,"value":562}," TypeError",{"type":355,"tag":388,"props":564,"children":565},{"style":407},[566],{"type":364,"value":410},{"type":355,"tag":388,"props":568,"children":569},{"style":467},[570],{"type":364,"value":571},"\"origin must be function\"",{"type":355,"tag":388,"props":573,"children":574},{"style":407},[575],{"type":364,"value":576},")",{"type":355,"tag":388,"props":578,"children":579},{"style":419},[580],{"type":364,"value":510},{"type":355,"tag":388,"props":582,"children":584},{"class":390,"line":583},5,[585],{"type":355,"tag":388,"props":586,"children":587},{"style":407},[588],{"type":364,"value":589},"  }\n",{"type":355,"tag":388,"props":591,"children":593},{"class":390,"line":592},6,[594,599,604,609,614,620,625,629,633,637,642],{"type":355,"tag":388,"props":595,"children":596},{"style":395},[597],{"type":364,"value":598},"  let",{"type":355,"tag":388,"props":600,"children":601},{"style":456},[602],{"type":364,"value":603}," proto",{"type":355,"tag":388,"props":605,"children":606},{"style":450},[607],{"type":364,"value":608}," =",{"type":355,"tag":388,"props":610,"children":611},{"style":456},[612],{"type":364,"value":613}," Object",{"type":355,"tag":388,"props":615,"children":617},{"style":616},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[618],{"type":364,"value":619},".",{"type":355,"tag":388,"props":621,"children":622},{"style":401},[623],{"type":364,"value":624},"getPrototypeOf",{"type":355,"tag":388,"props":626,"children":627},{"style":407},[628],{"type":364,"value":410},{"type":355,"tag":388,"props":630,"children":631},{"style":456},[632],{"type":364,"value":416},{"type":355,"tag":388,"props":634,"children":635},{"style":407},[636],{"type":364,"value":576},{"type":355,"tag":388,"props":638,"children":639},{"style":419},[640],{"type":364,"value":641},";",{"type":355,"tag":388,"props":643,"children":645},{"style":644},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[646],{"type":364,"value":647}," // 相当于: proto = target.__proto__\n",{"type":355,"tag":388,"props":649,"children":651},{"class":390,"line":650},7,[652,657,661,666],{"type":355,"tag":388,"props":653,"children":654},{"style":439},[655],{"type":364,"value":656},"  while",{"type":355,"tag":388,"props":658,"children":659},{"style":407},[660],{"type":364,"value":447},{"type":355,"tag":388,"props":662,"children":663},{"style":456},[664],{"type":364,"value":665},"proto",{"type":355,"tag":388,"props":667,"children":668},{"style":407},[669],{"type":364,"value":432},{"type":355,"tag":388,"props":671,"children":673},{"class":390,"line":672},8,[674,679,683,687,691,696,700,705,709,714],{"type":355,"tag":388,"props":675,"children":676},{"style":439},[677],{"type":364,"value":678},"    if",{"type":355,"tag":388,"props":680,"children":681},{"style":407},[682],{"type":364,"value":447},{"type":355,"tag":388,"props":684,"children":685},{"style":456},[686],{"type":364,"value":665},{"type":355,"tag":388,"props":688,"children":689},{"style":450},[690],{"type":364,"value":484},{"type":355,"tag":388,"props":692,"children":694},{"style":693},"--shiki-light:#DC3EB7;--shiki-default:#DC3EB7;--shiki-dark:#39BAE6",[695],{"type":364,"value":427},{"type":355,"tag":388,"props":697,"children":698},{"style":616},[699],{"type":364,"value":619},{"type":355,"tag":388,"props":701,"children":702},{"style":407},[703],{"type":364,"value":704},"prototype) ",{"type":355,"tag":388,"props":706,"children":707},{"style":439},[708],{"type":364,"value":500},{"type":355,"tag":388,"props":710,"children":711},{"style":487},[712],{"type":364,"value":713}," true",{"type":355,"tag":388,"props":715,"children":716},{"style":419},[717],{"type":364,"value":510},{"type":355,"tag":388,"props":719,"children":721},{"class":390,"line":720},9,[722,727,731,735,739,743,747,751,755],{"type":355,"tag":388,"props":723,"children":724},{"style":456},[725],{"type":364,"value":726},"    proto",{"type":355,"tag":388,"props":728,"children":729},{"style":450},[730],{"type":364,"value":608},{"type":355,"tag":388,"props":732,"children":733},{"style":456},[734],{"type":364,"value":613},{"type":355,"tag":388,"props":736,"children":737},{"style":616},[738],{"type":364,"value":619},{"type":355,"tag":388,"props":740,"children":741},{"style":401},[742],{"type":364,"value":624},{"type":355,"tag":388,"props":744,"children":745},{"style":407},[746],{"type":364,"value":410},{"type":355,"tag":388,"props":748,"children":749},{"style":456},[750],{"type":364,"value":665},{"type":355,"tag":388,"props":752,"children":753},{"style":407},[754],{"type":364,"value":576},{"type":355,"tag":388,"props":756,"children":757},{"style":419},[758],{"type":364,"value":510},{"type":355,"tag":388,"props":760,"children":762},{"class":390,"line":761},10,[763],{"type":355,"tag":388,"props":764,"children":765},{"style":407},[766],{"type":364,"value":589},{"type":355,"tag":388,"props":768,"children":770},{"class":390,"line":769},11,[771,776,780],{"type":355,"tag":388,"props":772,"children":773},{"style":439},[774],{"type":364,"value":775},"  return",{"type":355,"tag":388,"props":777,"children":778},{"style":487},[779],{"type":364,"value":505},{"type":355,"tag":388,"props":781,"children":782},{"style":419},[783],{"type":364,"value":510},{"type":355,"tag":388,"props":785,"children":787},{"class":390,"line":786},12,[788],{"type":355,"tag":388,"props":789,"children":790},{"style":407},[791],{"type":364,"value":792},"}\n",{"type":355,"tag":794,"props":795,"children":796},"style",{},[797],{"type":364,"value":798},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":350,"searchDepth":583,"depth":583,"links":800},[],"markdown","content:2.code:2.source:1.native-api:4.instanceof.md","content","2.code/2.source/1.native-api/4.instanceof.md","md",[807,809],{"_path":282,"title":281,"description":808},"在调用 new 的过程中会发生以上 4 件事情：",{"_path":288,"title":287,"description":350},1712581266208]