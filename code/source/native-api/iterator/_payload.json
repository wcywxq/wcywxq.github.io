[{"data":1,"prerenderedAt":1409},["Reactive",2],{"navigation":3,"/code/source/native-api/iterator":353,"/code/source/native-api/iterator-surround":1405},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319,341,344,347,350],{"title":320,"_path":321,"children":322},"Promise","/code/scene/promise",[323,326,329,332,335,338],{"title":324,"_path":325},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":327,"_path":328},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":330,"_path":331},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":333,"_path":334},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":336,"_path":337},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":339,"_path":340},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":342,"_path":343},"计算对象占用字节数","/code/scene/calcuate-object-bytes",{"title":345,"_path":346},"lodash.get","/code/scene/lodash-get",{"title":348,"_path":349},"sku 算法实现","/code/scene/sku",{"title":351,"_path":352},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":294,"_dir":354,"_draft":355,"_partial":355,"_locale":356,"title":293,"description":356,"body":357,"_type":1400,"_id":1401,"_source":1402,"_file":1403,"_extension":1404},"native-api",false,"",{"type":358,"children":359,"toc":1396},"root",[360,368,876,881,1390],{"type":361,"tag":362,"props":363,"children":365},"element","h2",{"id":364},"实现迭代器函数",[366],{"type":367,"value":364},"text",{"type":361,"tag":369,"props":370,"children":374},"pre",{"className":371,"code":372,"language":373,"meta":356,"style":356},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/*\n * 这是一个手写的迭代器(Iterator)\n * 满足迭代器协议的对象。\n * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n */\nvar it = makeIterator([\"a\", \"b\"]);\n\nit.next(); // { value: \"a\", done: false }\nit.next(); // { value: \"b\", done: false }\nit.next(); // { value: undefined, done: true }\n\nfunction makeIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n  };\n}\n","js",[375],{"type":361,"tag":376,"props":377,"children":378},"code",{"__ignoreMap":356},[379,391,400,409,418,427,488,498,533,562,591,599,628,656,671,695,727,792,840,854,867],{"type":361,"tag":380,"props":381,"children":384},"span",{"class":382,"line":383},"line",1,[385],{"type":361,"tag":380,"props":386,"children":388},{"style":387},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[389],{"type":367,"value":390},"/*\n",{"type":361,"tag":380,"props":392,"children":394},{"class":382,"line":393},2,[395],{"type":361,"tag":380,"props":396,"children":397},{"style":387},[398],{"type":367,"value":399}," * 这是一个手写的迭代器(Iterator)\n",{"type":361,"tag":380,"props":401,"children":403},{"class":382,"line":402},3,[404],{"type":361,"tag":380,"props":405,"children":406},{"style":387},[407],{"type":367,"value":408}," * 满足迭代器协议的对象。\n",{"type":361,"tag":380,"props":410,"children":412},{"class":382,"line":411},4,[413],{"type":361,"tag":380,"props":414,"children":415},{"style":387},[416],{"type":367,"value":417}," * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n",{"type":361,"tag":380,"props":419,"children":421},{"class":382,"line":420},5,[422],{"type":361,"tag":380,"props":423,"children":424},{"style":387},[425],{"type":367,"value":426}," */\n",{"type":361,"tag":380,"props":428,"children":430},{"class":382,"line":429},6,[431,437,443,449,455,461,467,473,478,483],{"type":361,"tag":380,"props":432,"children":434},{"style":433},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[435],{"type":367,"value":436},"var",{"type":361,"tag":380,"props":438,"children":440},{"style":439},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[441],{"type":367,"value":442}," it",{"type":361,"tag":380,"props":444,"children":446},{"style":445},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[447],{"type":367,"value":448}," =",{"type":361,"tag":380,"props":450,"children":452},{"style":451},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[453],{"type":367,"value":454}," makeIterator",{"type":361,"tag":380,"props":456,"children":458},{"style":457},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[459],{"type":367,"value":460},"([",{"type":361,"tag":380,"props":462,"children":464},{"style":463},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[465],{"type":367,"value":466},"\"a\"",{"type":361,"tag":380,"props":468,"children":470},{"style":469},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[471],{"type":367,"value":472},",",{"type":361,"tag":380,"props":474,"children":475},{"style":463},[476],{"type":367,"value":477}," \"b\"",{"type":361,"tag":380,"props":479,"children":480},{"style":457},[481],{"type":367,"value":482},"])",{"type":361,"tag":380,"props":484,"children":485},{"style":469},[486],{"type":367,"value":487},";\n",{"type":361,"tag":380,"props":489,"children":491},{"class":382,"line":490},7,[492],{"type":361,"tag":380,"props":493,"children":495},{"emptyLinePlaceholder":494},true,[496],{"type":367,"value":497},"\n",{"type":361,"tag":380,"props":499,"children":501},{"class":382,"line":500},8,[502,507,513,518,523,528],{"type":361,"tag":380,"props":503,"children":504},{"style":439},[505],{"type":367,"value":506},"it",{"type":361,"tag":380,"props":508,"children":510},{"style":509},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[511],{"type":367,"value":512},".",{"type":361,"tag":380,"props":514,"children":515},{"style":451},[516],{"type":367,"value":517},"next",{"type":361,"tag":380,"props":519,"children":520},{"style":457},[521],{"type":367,"value":522},"()",{"type":361,"tag":380,"props":524,"children":525},{"style":469},[526],{"type":367,"value":527},";",{"type":361,"tag":380,"props":529,"children":530},{"style":387},[531],{"type":367,"value":532}," // { value: \"a\", done: false }\n",{"type":361,"tag":380,"props":534,"children":536},{"class":382,"line":535},9,[537,541,545,549,553,557],{"type":361,"tag":380,"props":538,"children":539},{"style":439},[540],{"type":367,"value":506},{"type":361,"tag":380,"props":542,"children":543},{"style":509},[544],{"type":367,"value":512},{"type":361,"tag":380,"props":546,"children":547},{"style":451},[548],{"type":367,"value":517},{"type":361,"tag":380,"props":550,"children":551},{"style":457},[552],{"type":367,"value":522},{"type":361,"tag":380,"props":554,"children":555},{"style":469},[556],{"type":367,"value":527},{"type":361,"tag":380,"props":558,"children":559},{"style":387},[560],{"type":367,"value":561}," // { value: \"b\", done: false }\n",{"type":361,"tag":380,"props":563,"children":565},{"class":382,"line":564},10,[566,570,574,578,582,586],{"type":361,"tag":380,"props":567,"children":568},{"style":439},[569],{"type":367,"value":506},{"type":361,"tag":380,"props":571,"children":572},{"style":509},[573],{"type":367,"value":512},{"type":361,"tag":380,"props":575,"children":576},{"style":451},[577],{"type":367,"value":517},{"type":361,"tag":380,"props":579,"children":580},{"style":457},[581],{"type":367,"value":522},{"type":361,"tag":380,"props":583,"children":584},{"style":469},[585],{"type":367,"value":527},{"type":361,"tag":380,"props":587,"children":588},{"style":387},[589],{"type":367,"value":590}," // { value: undefined, done: true }\n",{"type":361,"tag":380,"props":592,"children":594},{"class":382,"line":593},11,[595],{"type":361,"tag":380,"props":596,"children":597},{"emptyLinePlaceholder":494},[598],{"type":367,"value":497},{"type":361,"tag":380,"props":600,"children":602},{"class":382,"line":601},12,[603,608,612,617,623],{"type":361,"tag":380,"props":604,"children":605},{"style":433},[606],{"type":367,"value":607},"function",{"type":361,"tag":380,"props":609,"children":610},{"style":451},[611],{"type":367,"value":454},{"type":361,"tag":380,"props":613,"children":614},{"style":457},[615],{"type":367,"value":616},"(",{"type":361,"tag":380,"props":618,"children":620},{"style":619},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[621],{"type":367,"value":622},"array",{"type":361,"tag":380,"props":624,"children":625},{"style":457},[626],{"type":367,"value":627},") {\n",{"type":361,"tag":380,"props":629,"children":631},{"class":382,"line":630},13,[632,637,642,646,652],{"type":361,"tag":380,"props":633,"children":634},{"style":433},[635],{"type":367,"value":636},"  var",{"type":361,"tag":380,"props":638,"children":639},{"style":439},[640],{"type":367,"value":641}," nextIndex",{"type":361,"tag":380,"props":643,"children":644},{"style":445},[645],{"type":367,"value":448},{"type":361,"tag":380,"props":647,"children":649},{"style":648},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[650],{"type":367,"value":651}," 0",{"type":361,"tag":380,"props":653,"children":654},{"style":469},[655],{"type":367,"value":487},{"type":361,"tag":380,"props":657,"children":659},{"class":382,"line":658},14,[660,666],{"type":361,"tag":380,"props":661,"children":663},{"style":662},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[664],{"type":367,"value":665},"  return",{"type":361,"tag":380,"props":667,"children":668},{"style":457},[669],{"type":367,"value":670}," {\n",{"type":361,"tag":380,"props":672,"children":674},{"class":382,"line":673},15,[675,680,685,690],{"type":361,"tag":380,"props":676,"children":677},{"style":451},[678],{"type":367,"value":679},"    next",{"type":361,"tag":380,"props":681,"children":682},{"style":469},[683],{"type":367,"value":684},":",{"type":361,"tag":380,"props":686,"children":687},{"style":433},[688],{"type":367,"value":689}," function",{"type":361,"tag":380,"props":691,"children":692},{"style":457},[693],{"type":367,"value":694}," () {\n",{"type":361,"tag":380,"props":696,"children":698},{"class":382,"line":697},16,[699,704,708,713,718,722],{"type":361,"tag":380,"props":700,"children":701},{"style":662},[702],{"type":367,"value":703},"      return",{"type":361,"tag":380,"props":705,"children":706},{"style":439},[707],{"type":367,"value":641},{"type":361,"tag":380,"props":709,"children":710},{"style":445},[711],{"type":367,"value":712}," \u003C",{"type":361,"tag":380,"props":714,"children":715},{"style":439},[716],{"type":367,"value":717}," array",{"type":361,"tag":380,"props":719,"children":720},{"style":509},[721],{"type":367,"value":512},{"type":361,"tag":380,"props":723,"children":724},{"style":457},[725],{"type":367,"value":726},"length\n",{"type":361,"tag":380,"props":728,"children":730},{"class":382,"line":729},17,[731,736,741,745,749,754,759,764,769,773,778,782,787],{"type":361,"tag":380,"props":732,"children":733},{"style":445},[734],{"type":367,"value":735},"        ?",{"type":361,"tag":380,"props":737,"children":738},{"style":457},[739],{"type":367,"value":740}," { value",{"type":361,"tag":380,"props":742,"children":743},{"style":469},[744],{"type":367,"value":684},{"type":361,"tag":380,"props":746,"children":747},{"style":439},[748],{"type":367,"value":717},{"type":361,"tag":380,"props":750,"children":751},{"style":457},[752],{"type":367,"value":753},"[",{"type":361,"tag":380,"props":755,"children":756},{"style":439},[757],{"type":367,"value":758},"nextIndex",{"type":361,"tag":380,"props":760,"children":761},{"style":445},[762],{"type":367,"value":763},"++",{"type":361,"tag":380,"props":765,"children":766},{"style":457},[767],{"type":367,"value":768},"]",{"type":361,"tag":380,"props":770,"children":771},{"style":469},[772],{"type":367,"value":472},{"type":361,"tag":380,"props":774,"children":775},{"style":457},[776],{"type":367,"value":777}," done",{"type":361,"tag":380,"props":779,"children":780},{"style":469},[781],{"type":367,"value":684},{"type":361,"tag":380,"props":783,"children":784},{"style":648},[785],{"type":367,"value":786}," false",{"type":361,"tag":380,"props":788,"children":789},{"style":457},[790],{"type":367,"value":791}," }\n",{"type":361,"tag":380,"props":793,"children":795},{"class":382,"line":794},18,[796,801,805,809,814,818,822,826,831,836],{"type":361,"tag":380,"props":797,"children":798},{"style":445},[799],{"type":367,"value":800},"        :",{"type":361,"tag":380,"props":802,"children":803},{"style":457},[804],{"type":367,"value":740},{"type":361,"tag":380,"props":806,"children":807},{"style":469},[808],{"type":367,"value":684},{"type":361,"tag":380,"props":810,"children":811},{"style":648},[812],{"type":367,"value":813}," undefined",{"type":361,"tag":380,"props":815,"children":816},{"style":469},[817],{"type":367,"value":472},{"type":361,"tag":380,"props":819,"children":820},{"style":457},[821],{"type":367,"value":777},{"type":361,"tag":380,"props":823,"children":824},{"style":469},[825],{"type":367,"value":684},{"type":361,"tag":380,"props":827,"children":828},{"style":648},[829],{"type":367,"value":830}," true",{"type":361,"tag":380,"props":832,"children":833},{"style":457},[834],{"type":367,"value":835}," }",{"type":361,"tag":380,"props":837,"children":838},{"style":469},[839],{"type":367,"value":487},{"type":361,"tag":380,"props":841,"children":843},{"class":382,"line":842},19,[844,849],{"type":361,"tag":380,"props":845,"children":846},{"style":457},[847],{"type":367,"value":848},"    }",{"type":361,"tag":380,"props":850,"children":851},{"style":469},[852],{"type":367,"value":853},",\n",{"type":361,"tag":380,"props":855,"children":857},{"class":382,"line":856},20,[858,863],{"type":361,"tag":380,"props":859,"children":860},{"style":457},[861],{"type":367,"value":862},"  }",{"type":361,"tag":380,"props":864,"children":865},{"style":469},[866],{"type":367,"value":487},{"type":361,"tag":380,"props":868,"children":870},{"class":382,"line":869},21,[871],{"type":361,"tag":380,"props":872,"children":873},{"style":457},[874],{"type":367,"value":875},"}\n",{"type":361,"tag":362,"props":877,"children":879},{"id":878},"可迭代的迭代器",[880],{"type":367,"value":878},{"type":361,"tag":369,"props":882,"children":884},{"className":371,"code":883,"language":373,"meta":356,"style":356},"/**\n * 使迭代器可迭代\n * makeIterator 函数生成的迭代器并没有实现可迭代协议\n * 所以不能在 for...of 等语法中使用。\n * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n * 从新名了下函数名称 createIterator\n */\nfunction createIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n    [Symbol.iterator]: function () {\n      console.log(\"返回的迭代器:\", this);\n      return this; // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n    },\n  };\n}\n\nvar iterator = createIterator([1, 2, 3]);\nconsole.log(...iterator);\n",[885],{"type":361,"tag":376,"props":886,"children":887},{"__ignoreMap":356},[888,896,904,912,920,928,936,943,967,990,1001,1020,1047,1102,1145,1156,1194,1239,1259,1270,1281,1288,1296,1352],{"type":361,"tag":380,"props":889,"children":890},{"class":382,"line":383},[891],{"type":361,"tag":380,"props":892,"children":893},{"style":387},[894],{"type":367,"value":895},"/**\n",{"type":361,"tag":380,"props":897,"children":898},{"class":382,"line":393},[899],{"type":361,"tag":380,"props":900,"children":901},{"style":387},[902],{"type":367,"value":903}," * 使迭代器可迭代\n",{"type":361,"tag":380,"props":905,"children":906},{"class":382,"line":402},[907],{"type":361,"tag":380,"props":908,"children":909},{"style":387},[910],{"type":367,"value":911}," * makeIterator 函数生成的迭代器并没有实现可迭代协议\n",{"type":361,"tag":380,"props":913,"children":914},{"class":382,"line":411},[915],{"type":361,"tag":380,"props":916,"children":917},{"style":387},[918],{"type":367,"value":919}," * 所以不能在 for...of 等语法中使用。\n",{"type":361,"tag":380,"props":921,"children":922},{"class":382,"line":420},[923],{"type":361,"tag":380,"props":924,"children":925},{"style":387},[926],{"type":367,"value":927}," * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n",{"type":361,"tag":380,"props":929,"children":930},{"class":382,"line":429},[931],{"type":361,"tag":380,"props":932,"children":933},{"style":387},[934],{"type":367,"value":935}," * 从新名了下函数名称 createIterator\n",{"type":361,"tag":380,"props":937,"children":938},{"class":382,"line":490},[939],{"type":361,"tag":380,"props":940,"children":941},{"style":387},[942],{"type":367,"value":426},{"type":361,"tag":380,"props":944,"children":945},{"class":382,"line":500},[946,950,955,959,963],{"type":361,"tag":380,"props":947,"children":948},{"style":433},[949],{"type":367,"value":607},{"type":361,"tag":380,"props":951,"children":952},{"style":451},[953],{"type":367,"value":954}," createIterator",{"type":361,"tag":380,"props":956,"children":957},{"style":457},[958],{"type":367,"value":616},{"type":361,"tag":380,"props":960,"children":961},{"style":619},[962],{"type":367,"value":622},{"type":361,"tag":380,"props":964,"children":965},{"style":457},[966],{"type":367,"value":627},{"type":361,"tag":380,"props":968,"children":969},{"class":382,"line":535},[970,974,978,982,986],{"type":361,"tag":380,"props":971,"children":972},{"style":433},[973],{"type":367,"value":636},{"type":361,"tag":380,"props":975,"children":976},{"style":439},[977],{"type":367,"value":641},{"type":361,"tag":380,"props":979,"children":980},{"style":445},[981],{"type":367,"value":448},{"type":361,"tag":380,"props":983,"children":984},{"style":648},[985],{"type":367,"value":651},{"type":361,"tag":380,"props":987,"children":988},{"style":469},[989],{"type":367,"value":487},{"type":361,"tag":380,"props":991,"children":992},{"class":382,"line":564},[993,997],{"type":361,"tag":380,"props":994,"children":995},{"style":662},[996],{"type":367,"value":665},{"type":361,"tag":380,"props":998,"children":999},{"style":457},[1000],{"type":367,"value":670},{"type":361,"tag":380,"props":1002,"children":1003},{"class":382,"line":593},[1004,1008,1012,1016],{"type":361,"tag":380,"props":1005,"children":1006},{"style":451},[1007],{"type":367,"value":679},{"type":361,"tag":380,"props":1009,"children":1010},{"style":469},[1011],{"type":367,"value":684},{"type":361,"tag":380,"props":1013,"children":1014},{"style":433},[1015],{"type":367,"value":689},{"type":361,"tag":380,"props":1017,"children":1018},{"style":457},[1019],{"type":367,"value":694},{"type":361,"tag":380,"props":1021,"children":1022},{"class":382,"line":601},[1023,1027,1031,1035,1039,1043],{"type":361,"tag":380,"props":1024,"children":1025},{"style":662},[1026],{"type":367,"value":703},{"type":361,"tag":380,"props":1028,"children":1029},{"style":439},[1030],{"type":367,"value":641},{"type":361,"tag":380,"props":1032,"children":1033},{"style":445},[1034],{"type":367,"value":712},{"type":361,"tag":380,"props":1036,"children":1037},{"style":439},[1038],{"type":367,"value":717},{"type":361,"tag":380,"props":1040,"children":1041},{"style":509},[1042],{"type":367,"value":512},{"type":361,"tag":380,"props":1044,"children":1045},{"style":457},[1046],{"type":367,"value":726},{"type":361,"tag":380,"props":1048,"children":1049},{"class":382,"line":630},[1050,1054,1058,1062,1066,1070,1074,1078,1082,1086,1090,1094,1098],{"type":361,"tag":380,"props":1051,"children":1052},{"style":445},[1053],{"type":367,"value":735},{"type":361,"tag":380,"props":1055,"children":1056},{"style":457},[1057],{"type":367,"value":740},{"type":361,"tag":380,"props":1059,"children":1060},{"style":469},[1061],{"type":367,"value":684},{"type":361,"tag":380,"props":1063,"children":1064},{"style":439},[1065],{"type":367,"value":717},{"type":361,"tag":380,"props":1067,"children":1068},{"style":457},[1069],{"type":367,"value":753},{"type":361,"tag":380,"props":1071,"children":1072},{"style":439},[1073],{"type":367,"value":758},{"type":361,"tag":380,"props":1075,"children":1076},{"style":445},[1077],{"type":367,"value":763},{"type":361,"tag":380,"props":1079,"children":1080},{"style":457},[1081],{"type":367,"value":768},{"type":361,"tag":380,"props":1083,"children":1084},{"style":469},[1085],{"type":367,"value":472},{"type":361,"tag":380,"props":1087,"children":1088},{"style":457},[1089],{"type":367,"value":777},{"type":361,"tag":380,"props":1091,"children":1092},{"style":469},[1093],{"type":367,"value":684},{"type":361,"tag":380,"props":1095,"children":1096},{"style":648},[1097],{"type":367,"value":786},{"type":361,"tag":380,"props":1099,"children":1100},{"style":457},[1101],{"type":367,"value":791},{"type":361,"tag":380,"props":1103,"children":1104},{"class":382,"line":658},[1105,1109,1113,1117,1121,1125,1129,1133,1137,1141],{"type":361,"tag":380,"props":1106,"children":1107},{"style":445},[1108],{"type":367,"value":800},{"type":361,"tag":380,"props":1110,"children":1111},{"style":457},[1112],{"type":367,"value":740},{"type":361,"tag":380,"props":1114,"children":1115},{"style":469},[1116],{"type":367,"value":684},{"type":361,"tag":380,"props":1118,"children":1119},{"style":648},[1120],{"type":367,"value":813},{"type":361,"tag":380,"props":1122,"children":1123},{"style":469},[1124],{"type":367,"value":472},{"type":361,"tag":380,"props":1126,"children":1127},{"style":457},[1128],{"type":367,"value":777},{"type":361,"tag":380,"props":1130,"children":1131},{"style":469},[1132],{"type":367,"value":684},{"type":361,"tag":380,"props":1134,"children":1135},{"style":648},[1136],{"type":367,"value":830},{"type":361,"tag":380,"props":1138,"children":1139},{"style":457},[1140],{"type":367,"value":835},{"type":361,"tag":380,"props":1142,"children":1143},{"style":469},[1144],{"type":367,"value":487},{"type":361,"tag":380,"props":1146,"children":1147},{"class":382,"line":673},[1148,1152],{"type":361,"tag":380,"props":1149,"children":1150},{"style":457},[1151],{"type":367,"value":848},{"type":361,"tag":380,"props":1153,"children":1154},{"style":469},[1155],{"type":367,"value":853},{"type":361,"tag":380,"props":1157,"children":1158},{"class":382,"line":697},[1159,1164,1169,1173,1178,1182,1186,1190],{"type":361,"tag":380,"props":1160,"children":1161},{"style":457},[1162],{"type":367,"value":1163},"    [",{"type":361,"tag":380,"props":1165,"children":1166},{"style":439},[1167],{"type":367,"value":1168},"Symbol",{"type":361,"tag":380,"props":1170,"children":1171},{"style":509},[1172],{"type":367,"value":512},{"type":361,"tag":380,"props":1174,"children":1175},{"style":439},[1176],{"type":367,"value":1177},"iterator",{"type":361,"tag":380,"props":1179,"children":1180},{"style":457},[1181],{"type":367,"value":768},{"type":361,"tag":380,"props":1183,"children":1184},{"style":469},[1185],{"type":367,"value":684},{"type":361,"tag":380,"props":1187,"children":1188},{"style":433},[1189],{"type":367,"value":689},{"type":361,"tag":380,"props":1191,"children":1192},{"style":457},[1193],{"type":367,"value":694},{"type":361,"tag":380,"props":1195,"children":1196},{"class":382,"line":729},[1197,1202,1206,1211,1215,1220,1224,1230,1235],{"type":361,"tag":380,"props":1198,"children":1199},{"style":439},[1200],{"type":367,"value":1201},"      console",{"type":361,"tag":380,"props":1203,"children":1204},{"style":509},[1205],{"type":367,"value":512},{"type":361,"tag":380,"props":1207,"children":1208},{"style":451},[1209],{"type":367,"value":1210},"log",{"type":361,"tag":380,"props":1212,"children":1213},{"style":457},[1214],{"type":367,"value":616},{"type":361,"tag":380,"props":1216,"children":1217},{"style":463},[1218],{"type":367,"value":1219},"\"返回的迭代器:\"",{"type":361,"tag":380,"props":1221,"children":1222},{"style":469},[1223],{"type":367,"value":472},{"type":361,"tag":380,"props":1225,"children":1227},{"style":1226},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[1228],{"type":367,"value":1229}," this",{"type":361,"tag":380,"props":1231,"children":1232},{"style":457},[1233],{"type":367,"value":1234},")",{"type":361,"tag":380,"props":1236,"children":1237},{"style":469},[1238],{"type":367,"value":487},{"type":361,"tag":380,"props":1240,"children":1241},{"class":382,"line":794},[1242,1246,1250,1254],{"type":361,"tag":380,"props":1243,"children":1244},{"style":662},[1245],{"type":367,"value":703},{"type":361,"tag":380,"props":1247,"children":1248},{"style":1226},[1249],{"type":367,"value":1229},{"type":361,"tag":380,"props":1251,"children":1252},{"style":469},[1253],{"type":367,"value":527},{"type":361,"tag":380,"props":1255,"children":1256},{"style":387},[1257],{"type":367,"value":1258}," // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n",{"type":361,"tag":380,"props":1260,"children":1261},{"class":382,"line":842},[1262,1266],{"type":361,"tag":380,"props":1263,"children":1264},{"style":457},[1265],{"type":367,"value":848},{"type":361,"tag":380,"props":1267,"children":1268},{"style":469},[1269],{"type":367,"value":853},{"type":361,"tag":380,"props":1271,"children":1272},{"class":382,"line":856},[1273,1277],{"type":361,"tag":380,"props":1274,"children":1275},{"style":457},[1276],{"type":367,"value":862},{"type":361,"tag":380,"props":1278,"children":1279},{"style":469},[1280],{"type":367,"value":487},{"type":361,"tag":380,"props":1282,"children":1283},{"class":382,"line":869},[1284],{"type":361,"tag":380,"props":1285,"children":1286},{"style":457},[1287],{"type":367,"value":875},{"type":361,"tag":380,"props":1289,"children":1291},{"class":382,"line":1290},22,[1292],{"type":361,"tag":380,"props":1293,"children":1294},{"emptyLinePlaceholder":494},[1295],{"type":367,"value":497},{"type":361,"tag":380,"props":1297,"children":1299},{"class":382,"line":1298},23,[1300,1304,1309,1313,1317,1321,1326,1330,1335,1339,1344,1348],{"type":361,"tag":380,"props":1301,"children":1302},{"style":433},[1303],{"type":367,"value":436},{"type":361,"tag":380,"props":1305,"children":1306},{"style":439},[1307],{"type":367,"value":1308}," iterator",{"type":361,"tag":380,"props":1310,"children":1311},{"style":445},[1312],{"type":367,"value":448},{"type":361,"tag":380,"props":1314,"children":1315},{"style":451},[1316],{"type":367,"value":954},{"type":361,"tag":380,"props":1318,"children":1319},{"style":457},[1320],{"type":367,"value":460},{"type":361,"tag":380,"props":1322,"children":1323},{"style":648},[1324],{"type":367,"value":1325},"1",{"type":361,"tag":380,"props":1327,"children":1328},{"style":469},[1329],{"type":367,"value":472},{"type":361,"tag":380,"props":1331,"children":1332},{"style":648},[1333],{"type":367,"value":1334}," 2",{"type":361,"tag":380,"props":1336,"children":1337},{"style":469},[1338],{"type":367,"value":472},{"type":361,"tag":380,"props":1340,"children":1341},{"style":648},[1342],{"type":367,"value":1343}," 3",{"type":361,"tag":380,"props":1345,"children":1346},{"style":457},[1347],{"type":367,"value":482},{"type":361,"tag":380,"props":1349,"children":1350},{"style":469},[1351],{"type":367,"value":487},{"type":361,"tag":380,"props":1353,"children":1355},{"class":382,"line":1354},24,[1356,1361,1365,1369,1373,1378,1382,1386],{"type":361,"tag":380,"props":1357,"children":1358},{"style":439},[1359],{"type":367,"value":1360},"console",{"type":361,"tag":380,"props":1362,"children":1363},{"style":509},[1364],{"type":367,"value":512},{"type":361,"tag":380,"props":1366,"children":1367},{"style":451},[1368],{"type":367,"value":1210},{"type":361,"tag":380,"props":1370,"children":1371},{"style":457},[1372],{"type":367,"value":616},{"type":361,"tag":380,"props":1374,"children":1375},{"style":445},[1376],{"type":367,"value":1377},"...",{"type":361,"tag":380,"props":1379,"children":1380},{"style":439},[1381],{"type":367,"value":1177},{"type":361,"tag":380,"props":1383,"children":1384},{"style":457},[1385],{"type":367,"value":1234},{"type":361,"tag":380,"props":1387,"children":1388},{"style":469},[1389],{"type":367,"value":487},{"type":361,"tag":1391,"props":1392,"children":1393},"style",{},[1394],{"type":367,"value":1395},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":356,"searchDepth":420,"depth":420,"links":1397},[1398,1399],{"id":364,"depth":393,"text":364},{"id":878,"depth":393,"text":878},"markdown","content:2.code:2.source:1.native-api:7.iterator.md","content","2.code/2.source/1.native-api/7.iterator.md","md",[1406,1408],{"_path":291,"title":290,"description":1407},"JSON.stringify() 方法将一个 js 对象或值转换为 json 字符串，如果指定了一个 replacer 函数，则可以选择性地替换值，或者指定的 replacer 是数组，则可选择性地仅包含数组指定的属性。",{"_path":301,"title":300,"description":356},1712589915934]