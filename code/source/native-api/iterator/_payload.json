[{"data":1,"prerenderedAt":1378},["Reactive",2],{"navigation":3,"/code/source/native-api/iterator":322,"/code/source/native-api/iterator-surround":1374},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,266,315],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":198,"_path":199},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":201,"_path":202},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":204,"_path":205},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":207,"_path":208},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":210,"_path":211},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":213,"_path":214},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":216,"_path":217},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":219,"_path":220},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":222,"_path":223},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":225,"_path":226},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":228,"_path":229},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":231,"_path":232},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":234,"_path":235},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":237,"_path":238},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":240,"_path":241},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":243,"_path":244},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":246,"_path":247},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":249,"_path":250},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":252,"_path":253},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":255,"_path":256},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":258,"_path":259},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":261,"_path":262},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":264,"_path":265},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":267,"_path":268,"children":269},"源码实现","/code/source",[270,295,308],{"title":271,"_path":272,"children":273},"原生 api","/code/source/native-api",[274,277,280,283,286,289,292],{"title":275,"_path":276},"ajax","/code/source/native-api/ajax",{"title":278,"_path":279},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":281,"_path":282},"new 操作符","/code/source/native-api/new",{"title":284,"_path":285},"instanceof 关键字","/code/source/native-api/instanceof",{"title":287,"_path":288},"定时器","/code/source/native-api/timer",{"title":290,"_path":291},"JSON.stringify","/code/source/native-api/json-stringify",{"title":293,"_path":294},"Iterator 迭代器","/code/source/native-api/iterator",{"title":296,"_path":297,"children":298},"数组 Array","/code/source/array",[299,302,305],{"title":300,"_path":301},"数组去重","/code/source/array/remove-duplicate",{"title":303,"_path":304},"数组扁平化","/code/source/array/flat",{"title":306,"_path":307},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":309,"_path":310,"children":311},"字符串 String","/code/source/string",[312],{"title":313,"_path":314},"repeat()","/code/source/string/repeat",{"title":316,"_path":317,"children":318},"业务场景","/code/scene",[319],{"title":320,"_path":321},"顺序打印 url 并支持 retry","/code/scene/promise-url-retry",{"_path":294,"_dir":323,"_draft":324,"_partial":324,"_locale":325,"title":293,"description":325,"body":326,"_type":1369,"_id":1370,"_source":1371,"_file":1372,"_extension":1373},"native-api",false,"",{"type":327,"children":328,"toc":1365},"root",[329,337,845,850,1359],{"type":330,"tag":331,"props":332,"children":334},"element","h2",{"id":333},"实现迭代器函数",[335],{"type":336,"value":333},"text",{"type":330,"tag":338,"props":339,"children":343},"pre",{"className":340,"code":341,"language":342,"meta":325,"style":325},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/*\n * 这是一个手写的迭代器(Iterator)\n * 满足迭代器协议的对象。\n * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n */\nvar it = makeIterator([\"a\", \"b\"]);\n\nit.next(); // { value: \"a\", done: false }\nit.next(); // { value: \"b\", done: false }\nit.next(); // { value: undefined, done: true }\n\nfunction makeIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n  };\n}\n","js",[344],{"type":330,"tag":345,"props":346,"children":347},"code",{"__ignoreMap":325},[348,360,369,378,387,396,457,467,502,531,560,568,597,625,640,664,696,761,809,823,836],{"type":330,"tag":349,"props":350,"children":353},"span",{"class":351,"line":352},"line",1,[354],{"type":330,"tag":349,"props":355,"children":357},{"style":356},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[358],{"type":336,"value":359},"/*\n",{"type":330,"tag":349,"props":361,"children":363},{"class":351,"line":362},2,[364],{"type":330,"tag":349,"props":365,"children":366},{"style":356},[367],{"type":336,"value":368}," * 这是一个手写的迭代器(Iterator)\n",{"type":330,"tag":349,"props":370,"children":372},{"class":351,"line":371},3,[373],{"type":330,"tag":349,"props":374,"children":375},{"style":356},[376],{"type":336,"value":377}," * 满足迭代器协议的对象。\n",{"type":330,"tag":349,"props":379,"children":381},{"class":351,"line":380},4,[382],{"type":330,"tag":349,"props":383,"children":384},{"style":356},[385],{"type":336,"value":386}," * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n",{"type":330,"tag":349,"props":388,"children":390},{"class":351,"line":389},5,[391],{"type":330,"tag":349,"props":392,"children":393},{"style":356},[394],{"type":336,"value":395}," */\n",{"type":330,"tag":349,"props":397,"children":399},{"class":351,"line":398},6,[400,406,412,418,424,430,436,442,447,452],{"type":330,"tag":349,"props":401,"children":403},{"style":402},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[404],{"type":336,"value":405},"var",{"type":330,"tag":349,"props":407,"children":409},{"style":408},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[410],{"type":336,"value":411}," it",{"type":330,"tag":349,"props":413,"children":415},{"style":414},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[416],{"type":336,"value":417}," =",{"type":330,"tag":349,"props":419,"children":421},{"style":420},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[422],{"type":336,"value":423}," makeIterator",{"type":330,"tag":349,"props":425,"children":427},{"style":426},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[428],{"type":336,"value":429},"([",{"type":330,"tag":349,"props":431,"children":433},{"style":432},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[434],{"type":336,"value":435},"\"a\"",{"type":330,"tag":349,"props":437,"children":439},{"style":438},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[440],{"type":336,"value":441},",",{"type":330,"tag":349,"props":443,"children":444},{"style":432},[445],{"type":336,"value":446}," \"b\"",{"type":330,"tag":349,"props":448,"children":449},{"style":426},[450],{"type":336,"value":451},"])",{"type":330,"tag":349,"props":453,"children":454},{"style":438},[455],{"type":336,"value":456},";\n",{"type":330,"tag":349,"props":458,"children":460},{"class":351,"line":459},7,[461],{"type":330,"tag":349,"props":462,"children":464},{"emptyLinePlaceholder":463},true,[465],{"type":336,"value":466},"\n",{"type":330,"tag":349,"props":468,"children":470},{"class":351,"line":469},8,[471,476,482,487,492,497],{"type":330,"tag":349,"props":472,"children":473},{"style":408},[474],{"type":336,"value":475},"it",{"type":330,"tag":349,"props":477,"children":479},{"style":478},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[480],{"type":336,"value":481},".",{"type":330,"tag":349,"props":483,"children":484},{"style":420},[485],{"type":336,"value":486},"next",{"type":330,"tag":349,"props":488,"children":489},{"style":426},[490],{"type":336,"value":491},"()",{"type":330,"tag":349,"props":493,"children":494},{"style":438},[495],{"type":336,"value":496},";",{"type":330,"tag":349,"props":498,"children":499},{"style":356},[500],{"type":336,"value":501}," // { value: \"a\", done: false }\n",{"type":330,"tag":349,"props":503,"children":505},{"class":351,"line":504},9,[506,510,514,518,522,526],{"type":330,"tag":349,"props":507,"children":508},{"style":408},[509],{"type":336,"value":475},{"type":330,"tag":349,"props":511,"children":512},{"style":478},[513],{"type":336,"value":481},{"type":330,"tag":349,"props":515,"children":516},{"style":420},[517],{"type":336,"value":486},{"type":330,"tag":349,"props":519,"children":520},{"style":426},[521],{"type":336,"value":491},{"type":330,"tag":349,"props":523,"children":524},{"style":438},[525],{"type":336,"value":496},{"type":330,"tag":349,"props":527,"children":528},{"style":356},[529],{"type":336,"value":530}," // { value: \"b\", done: false }\n",{"type":330,"tag":349,"props":532,"children":534},{"class":351,"line":533},10,[535,539,543,547,551,555],{"type":330,"tag":349,"props":536,"children":537},{"style":408},[538],{"type":336,"value":475},{"type":330,"tag":349,"props":540,"children":541},{"style":478},[542],{"type":336,"value":481},{"type":330,"tag":349,"props":544,"children":545},{"style":420},[546],{"type":336,"value":486},{"type":330,"tag":349,"props":548,"children":549},{"style":426},[550],{"type":336,"value":491},{"type":330,"tag":349,"props":552,"children":553},{"style":438},[554],{"type":336,"value":496},{"type":330,"tag":349,"props":556,"children":557},{"style":356},[558],{"type":336,"value":559}," // { value: undefined, done: true }\n",{"type":330,"tag":349,"props":561,"children":563},{"class":351,"line":562},11,[564],{"type":330,"tag":349,"props":565,"children":566},{"emptyLinePlaceholder":463},[567],{"type":336,"value":466},{"type":330,"tag":349,"props":569,"children":571},{"class":351,"line":570},12,[572,577,581,586,592],{"type":330,"tag":349,"props":573,"children":574},{"style":402},[575],{"type":336,"value":576},"function",{"type":330,"tag":349,"props":578,"children":579},{"style":420},[580],{"type":336,"value":423},{"type":330,"tag":349,"props":582,"children":583},{"style":426},[584],{"type":336,"value":585},"(",{"type":330,"tag":349,"props":587,"children":589},{"style":588},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[590],{"type":336,"value":591},"array",{"type":330,"tag":349,"props":593,"children":594},{"style":426},[595],{"type":336,"value":596},") {\n",{"type":330,"tag":349,"props":598,"children":600},{"class":351,"line":599},13,[601,606,611,615,621],{"type":330,"tag":349,"props":602,"children":603},{"style":402},[604],{"type":336,"value":605},"  var",{"type":330,"tag":349,"props":607,"children":608},{"style":408},[609],{"type":336,"value":610}," nextIndex",{"type":330,"tag":349,"props":612,"children":613},{"style":414},[614],{"type":336,"value":417},{"type":330,"tag":349,"props":616,"children":618},{"style":617},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[619],{"type":336,"value":620}," 0",{"type":330,"tag":349,"props":622,"children":623},{"style":438},[624],{"type":336,"value":456},{"type":330,"tag":349,"props":626,"children":628},{"class":351,"line":627},14,[629,635],{"type":330,"tag":349,"props":630,"children":632},{"style":631},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[633],{"type":336,"value":634},"  return",{"type":330,"tag":349,"props":636,"children":637},{"style":426},[638],{"type":336,"value":639}," {\n",{"type":330,"tag":349,"props":641,"children":643},{"class":351,"line":642},15,[644,649,654,659],{"type":330,"tag":349,"props":645,"children":646},{"style":420},[647],{"type":336,"value":648},"    next",{"type":330,"tag":349,"props":650,"children":651},{"style":438},[652],{"type":336,"value":653},":",{"type":330,"tag":349,"props":655,"children":656},{"style":402},[657],{"type":336,"value":658}," function",{"type":330,"tag":349,"props":660,"children":661},{"style":426},[662],{"type":336,"value":663}," () {\n",{"type":330,"tag":349,"props":665,"children":667},{"class":351,"line":666},16,[668,673,677,682,687,691],{"type":330,"tag":349,"props":669,"children":670},{"style":631},[671],{"type":336,"value":672},"      return",{"type":330,"tag":349,"props":674,"children":675},{"style":408},[676],{"type":336,"value":610},{"type":330,"tag":349,"props":678,"children":679},{"style":414},[680],{"type":336,"value":681}," \u003C",{"type":330,"tag":349,"props":683,"children":684},{"style":408},[685],{"type":336,"value":686}," array",{"type":330,"tag":349,"props":688,"children":689},{"style":478},[690],{"type":336,"value":481},{"type":330,"tag":349,"props":692,"children":693},{"style":426},[694],{"type":336,"value":695},"length\n",{"type":330,"tag":349,"props":697,"children":699},{"class":351,"line":698},17,[700,705,710,714,718,723,728,733,738,742,747,751,756],{"type":330,"tag":349,"props":701,"children":702},{"style":414},[703],{"type":336,"value":704},"        ?",{"type":330,"tag":349,"props":706,"children":707},{"style":426},[708],{"type":336,"value":709}," { value",{"type":330,"tag":349,"props":711,"children":712},{"style":438},[713],{"type":336,"value":653},{"type":330,"tag":349,"props":715,"children":716},{"style":408},[717],{"type":336,"value":686},{"type":330,"tag":349,"props":719,"children":720},{"style":426},[721],{"type":336,"value":722},"[",{"type":330,"tag":349,"props":724,"children":725},{"style":408},[726],{"type":336,"value":727},"nextIndex",{"type":330,"tag":349,"props":729,"children":730},{"style":414},[731],{"type":336,"value":732},"++",{"type":330,"tag":349,"props":734,"children":735},{"style":426},[736],{"type":336,"value":737},"]",{"type":330,"tag":349,"props":739,"children":740},{"style":438},[741],{"type":336,"value":441},{"type":330,"tag":349,"props":743,"children":744},{"style":426},[745],{"type":336,"value":746}," done",{"type":330,"tag":349,"props":748,"children":749},{"style":438},[750],{"type":336,"value":653},{"type":330,"tag":349,"props":752,"children":753},{"style":617},[754],{"type":336,"value":755}," false",{"type":330,"tag":349,"props":757,"children":758},{"style":426},[759],{"type":336,"value":760}," }\n",{"type":330,"tag":349,"props":762,"children":764},{"class":351,"line":763},18,[765,770,774,778,783,787,791,795,800,805],{"type":330,"tag":349,"props":766,"children":767},{"style":414},[768],{"type":336,"value":769},"        :",{"type":330,"tag":349,"props":771,"children":772},{"style":426},[773],{"type":336,"value":709},{"type":330,"tag":349,"props":775,"children":776},{"style":438},[777],{"type":336,"value":653},{"type":330,"tag":349,"props":779,"children":780},{"style":617},[781],{"type":336,"value":782}," undefined",{"type":330,"tag":349,"props":784,"children":785},{"style":438},[786],{"type":336,"value":441},{"type":330,"tag":349,"props":788,"children":789},{"style":426},[790],{"type":336,"value":746},{"type":330,"tag":349,"props":792,"children":793},{"style":438},[794],{"type":336,"value":653},{"type":330,"tag":349,"props":796,"children":797},{"style":617},[798],{"type":336,"value":799}," true",{"type":330,"tag":349,"props":801,"children":802},{"style":426},[803],{"type":336,"value":804}," }",{"type":330,"tag":349,"props":806,"children":807},{"style":438},[808],{"type":336,"value":456},{"type":330,"tag":349,"props":810,"children":812},{"class":351,"line":811},19,[813,818],{"type":330,"tag":349,"props":814,"children":815},{"style":426},[816],{"type":336,"value":817},"    }",{"type":330,"tag":349,"props":819,"children":820},{"style":438},[821],{"type":336,"value":822},",\n",{"type":330,"tag":349,"props":824,"children":826},{"class":351,"line":825},20,[827,832],{"type":330,"tag":349,"props":828,"children":829},{"style":426},[830],{"type":336,"value":831},"  }",{"type":330,"tag":349,"props":833,"children":834},{"style":438},[835],{"type":336,"value":456},{"type":330,"tag":349,"props":837,"children":839},{"class":351,"line":838},21,[840],{"type":330,"tag":349,"props":841,"children":842},{"style":426},[843],{"type":336,"value":844},"}\n",{"type":330,"tag":331,"props":846,"children":848},{"id":847},"可迭代的迭代器",[849],{"type":336,"value":847},{"type":330,"tag":338,"props":851,"children":853},{"className":340,"code":852,"language":342,"meta":325,"style":325},"/**\n * 使迭代器可迭代\n * makeIterator 函数生成的迭代器并没有实现可迭代协议\n * 所以不能在 for...of 等语法中使用。\n * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n * 从新名了下函数名称 createIterator\n */\nfunction createIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n    [Symbol.iterator]: function () {\n      console.log(\"返回的迭代器:\", this);\n      return this; // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n    },\n  };\n}\n\nvar iterator = createIterator([1, 2, 3]);\nconsole.log(...iterator);\n",[854],{"type":330,"tag":345,"props":855,"children":856},{"__ignoreMap":325},[857,865,873,881,889,897,905,912,936,959,970,989,1016,1071,1114,1125,1163,1208,1228,1239,1250,1257,1265,1321],{"type":330,"tag":349,"props":858,"children":859},{"class":351,"line":352},[860],{"type":330,"tag":349,"props":861,"children":862},{"style":356},[863],{"type":336,"value":864},"/**\n",{"type":330,"tag":349,"props":866,"children":867},{"class":351,"line":362},[868],{"type":330,"tag":349,"props":869,"children":870},{"style":356},[871],{"type":336,"value":872}," * 使迭代器可迭代\n",{"type":330,"tag":349,"props":874,"children":875},{"class":351,"line":371},[876],{"type":330,"tag":349,"props":877,"children":878},{"style":356},[879],{"type":336,"value":880}," * makeIterator 函数生成的迭代器并没有实现可迭代协议\n",{"type":330,"tag":349,"props":882,"children":883},{"class":351,"line":380},[884],{"type":330,"tag":349,"props":885,"children":886},{"style":356},[887],{"type":336,"value":888}," * 所以不能在 for...of 等语法中使用。\n",{"type":330,"tag":349,"props":890,"children":891},{"class":351,"line":389},[892],{"type":330,"tag":349,"props":893,"children":894},{"style":356},[895],{"type":336,"value":896}," * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n",{"type":330,"tag":349,"props":898,"children":899},{"class":351,"line":398},[900],{"type":330,"tag":349,"props":901,"children":902},{"style":356},[903],{"type":336,"value":904}," * 从新名了下函数名称 createIterator\n",{"type":330,"tag":349,"props":906,"children":907},{"class":351,"line":459},[908],{"type":330,"tag":349,"props":909,"children":910},{"style":356},[911],{"type":336,"value":395},{"type":330,"tag":349,"props":913,"children":914},{"class":351,"line":469},[915,919,924,928,932],{"type":330,"tag":349,"props":916,"children":917},{"style":402},[918],{"type":336,"value":576},{"type":330,"tag":349,"props":920,"children":921},{"style":420},[922],{"type":336,"value":923}," createIterator",{"type":330,"tag":349,"props":925,"children":926},{"style":426},[927],{"type":336,"value":585},{"type":330,"tag":349,"props":929,"children":930},{"style":588},[931],{"type":336,"value":591},{"type":330,"tag":349,"props":933,"children":934},{"style":426},[935],{"type":336,"value":596},{"type":330,"tag":349,"props":937,"children":938},{"class":351,"line":504},[939,943,947,951,955],{"type":330,"tag":349,"props":940,"children":941},{"style":402},[942],{"type":336,"value":605},{"type":330,"tag":349,"props":944,"children":945},{"style":408},[946],{"type":336,"value":610},{"type":330,"tag":349,"props":948,"children":949},{"style":414},[950],{"type":336,"value":417},{"type":330,"tag":349,"props":952,"children":953},{"style":617},[954],{"type":336,"value":620},{"type":330,"tag":349,"props":956,"children":957},{"style":438},[958],{"type":336,"value":456},{"type":330,"tag":349,"props":960,"children":961},{"class":351,"line":533},[962,966],{"type":330,"tag":349,"props":963,"children":964},{"style":631},[965],{"type":336,"value":634},{"type":330,"tag":349,"props":967,"children":968},{"style":426},[969],{"type":336,"value":639},{"type":330,"tag":349,"props":971,"children":972},{"class":351,"line":562},[973,977,981,985],{"type":330,"tag":349,"props":974,"children":975},{"style":420},[976],{"type":336,"value":648},{"type":330,"tag":349,"props":978,"children":979},{"style":438},[980],{"type":336,"value":653},{"type":330,"tag":349,"props":982,"children":983},{"style":402},[984],{"type":336,"value":658},{"type":330,"tag":349,"props":986,"children":987},{"style":426},[988],{"type":336,"value":663},{"type":330,"tag":349,"props":990,"children":991},{"class":351,"line":570},[992,996,1000,1004,1008,1012],{"type":330,"tag":349,"props":993,"children":994},{"style":631},[995],{"type":336,"value":672},{"type":330,"tag":349,"props":997,"children":998},{"style":408},[999],{"type":336,"value":610},{"type":330,"tag":349,"props":1001,"children":1002},{"style":414},[1003],{"type":336,"value":681},{"type":330,"tag":349,"props":1005,"children":1006},{"style":408},[1007],{"type":336,"value":686},{"type":330,"tag":349,"props":1009,"children":1010},{"style":478},[1011],{"type":336,"value":481},{"type":330,"tag":349,"props":1013,"children":1014},{"style":426},[1015],{"type":336,"value":695},{"type":330,"tag":349,"props":1017,"children":1018},{"class":351,"line":599},[1019,1023,1027,1031,1035,1039,1043,1047,1051,1055,1059,1063,1067],{"type":330,"tag":349,"props":1020,"children":1021},{"style":414},[1022],{"type":336,"value":704},{"type":330,"tag":349,"props":1024,"children":1025},{"style":426},[1026],{"type":336,"value":709},{"type":330,"tag":349,"props":1028,"children":1029},{"style":438},[1030],{"type":336,"value":653},{"type":330,"tag":349,"props":1032,"children":1033},{"style":408},[1034],{"type":336,"value":686},{"type":330,"tag":349,"props":1036,"children":1037},{"style":426},[1038],{"type":336,"value":722},{"type":330,"tag":349,"props":1040,"children":1041},{"style":408},[1042],{"type":336,"value":727},{"type":330,"tag":349,"props":1044,"children":1045},{"style":414},[1046],{"type":336,"value":732},{"type":330,"tag":349,"props":1048,"children":1049},{"style":426},[1050],{"type":336,"value":737},{"type":330,"tag":349,"props":1052,"children":1053},{"style":438},[1054],{"type":336,"value":441},{"type":330,"tag":349,"props":1056,"children":1057},{"style":426},[1058],{"type":336,"value":746},{"type":330,"tag":349,"props":1060,"children":1061},{"style":438},[1062],{"type":336,"value":653},{"type":330,"tag":349,"props":1064,"children":1065},{"style":617},[1066],{"type":336,"value":755},{"type":330,"tag":349,"props":1068,"children":1069},{"style":426},[1070],{"type":336,"value":760},{"type":330,"tag":349,"props":1072,"children":1073},{"class":351,"line":627},[1074,1078,1082,1086,1090,1094,1098,1102,1106,1110],{"type":330,"tag":349,"props":1075,"children":1076},{"style":414},[1077],{"type":336,"value":769},{"type":330,"tag":349,"props":1079,"children":1080},{"style":426},[1081],{"type":336,"value":709},{"type":330,"tag":349,"props":1083,"children":1084},{"style":438},[1085],{"type":336,"value":653},{"type":330,"tag":349,"props":1087,"children":1088},{"style":617},[1089],{"type":336,"value":782},{"type":330,"tag":349,"props":1091,"children":1092},{"style":438},[1093],{"type":336,"value":441},{"type":330,"tag":349,"props":1095,"children":1096},{"style":426},[1097],{"type":336,"value":746},{"type":330,"tag":349,"props":1099,"children":1100},{"style":438},[1101],{"type":336,"value":653},{"type":330,"tag":349,"props":1103,"children":1104},{"style":617},[1105],{"type":336,"value":799},{"type":330,"tag":349,"props":1107,"children":1108},{"style":426},[1109],{"type":336,"value":804},{"type":330,"tag":349,"props":1111,"children":1112},{"style":438},[1113],{"type":336,"value":456},{"type":330,"tag":349,"props":1115,"children":1116},{"class":351,"line":642},[1117,1121],{"type":330,"tag":349,"props":1118,"children":1119},{"style":426},[1120],{"type":336,"value":817},{"type":330,"tag":349,"props":1122,"children":1123},{"style":438},[1124],{"type":336,"value":822},{"type":330,"tag":349,"props":1126,"children":1127},{"class":351,"line":666},[1128,1133,1138,1142,1147,1151,1155,1159],{"type":330,"tag":349,"props":1129,"children":1130},{"style":426},[1131],{"type":336,"value":1132},"    [",{"type":330,"tag":349,"props":1134,"children":1135},{"style":408},[1136],{"type":336,"value":1137},"Symbol",{"type":330,"tag":349,"props":1139,"children":1140},{"style":478},[1141],{"type":336,"value":481},{"type":330,"tag":349,"props":1143,"children":1144},{"style":408},[1145],{"type":336,"value":1146},"iterator",{"type":330,"tag":349,"props":1148,"children":1149},{"style":426},[1150],{"type":336,"value":737},{"type":330,"tag":349,"props":1152,"children":1153},{"style":438},[1154],{"type":336,"value":653},{"type":330,"tag":349,"props":1156,"children":1157},{"style":402},[1158],{"type":336,"value":658},{"type":330,"tag":349,"props":1160,"children":1161},{"style":426},[1162],{"type":336,"value":663},{"type":330,"tag":349,"props":1164,"children":1165},{"class":351,"line":698},[1166,1171,1175,1180,1184,1189,1193,1199,1204],{"type":330,"tag":349,"props":1167,"children":1168},{"style":408},[1169],{"type":336,"value":1170},"      console",{"type":330,"tag":349,"props":1172,"children":1173},{"style":478},[1174],{"type":336,"value":481},{"type":330,"tag":349,"props":1176,"children":1177},{"style":420},[1178],{"type":336,"value":1179},"log",{"type":330,"tag":349,"props":1181,"children":1182},{"style":426},[1183],{"type":336,"value":585},{"type":330,"tag":349,"props":1185,"children":1186},{"style":432},[1187],{"type":336,"value":1188},"\"返回的迭代器:\"",{"type":330,"tag":349,"props":1190,"children":1191},{"style":438},[1192],{"type":336,"value":441},{"type":330,"tag":349,"props":1194,"children":1196},{"style":1195},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[1197],{"type":336,"value":1198}," this",{"type":330,"tag":349,"props":1200,"children":1201},{"style":426},[1202],{"type":336,"value":1203},")",{"type":330,"tag":349,"props":1205,"children":1206},{"style":438},[1207],{"type":336,"value":456},{"type":330,"tag":349,"props":1209,"children":1210},{"class":351,"line":763},[1211,1215,1219,1223],{"type":330,"tag":349,"props":1212,"children":1213},{"style":631},[1214],{"type":336,"value":672},{"type":330,"tag":349,"props":1216,"children":1217},{"style":1195},[1218],{"type":336,"value":1198},{"type":330,"tag":349,"props":1220,"children":1221},{"style":438},[1222],{"type":336,"value":496},{"type":330,"tag":349,"props":1224,"children":1225},{"style":356},[1226],{"type":336,"value":1227}," // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n",{"type":330,"tag":349,"props":1229,"children":1230},{"class":351,"line":811},[1231,1235],{"type":330,"tag":349,"props":1232,"children":1233},{"style":426},[1234],{"type":336,"value":817},{"type":330,"tag":349,"props":1236,"children":1237},{"style":438},[1238],{"type":336,"value":822},{"type":330,"tag":349,"props":1240,"children":1241},{"class":351,"line":825},[1242,1246],{"type":330,"tag":349,"props":1243,"children":1244},{"style":426},[1245],{"type":336,"value":831},{"type":330,"tag":349,"props":1247,"children":1248},{"style":438},[1249],{"type":336,"value":456},{"type":330,"tag":349,"props":1251,"children":1252},{"class":351,"line":838},[1253],{"type":330,"tag":349,"props":1254,"children":1255},{"style":426},[1256],{"type":336,"value":844},{"type":330,"tag":349,"props":1258,"children":1260},{"class":351,"line":1259},22,[1261],{"type":330,"tag":349,"props":1262,"children":1263},{"emptyLinePlaceholder":463},[1264],{"type":336,"value":466},{"type":330,"tag":349,"props":1266,"children":1268},{"class":351,"line":1267},23,[1269,1273,1278,1282,1286,1290,1295,1299,1304,1308,1313,1317],{"type":330,"tag":349,"props":1270,"children":1271},{"style":402},[1272],{"type":336,"value":405},{"type":330,"tag":349,"props":1274,"children":1275},{"style":408},[1276],{"type":336,"value":1277}," iterator",{"type":330,"tag":349,"props":1279,"children":1280},{"style":414},[1281],{"type":336,"value":417},{"type":330,"tag":349,"props":1283,"children":1284},{"style":420},[1285],{"type":336,"value":923},{"type":330,"tag":349,"props":1287,"children":1288},{"style":426},[1289],{"type":336,"value":429},{"type":330,"tag":349,"props":1291,"children":1292},{"style":617},[1293],{"type":336,"value":1294},"1",{"type":330,"tag":349,"props":1296,"children":1297},{"style":438},[1298],{"type":336,"value":441},{"type":330,"tag":349,"props":1300,"children":1301},{"style":617},[1302],{"type":336,"value":1303}," 2",{"type":330,"tag":349,"props":1305,"children":1306},{"style":438},[1307],{"type":336,"value":441},{"type":330,"tag":349,"props":1309,"children":1310},{"style":617},[1311],{"type":336,"value":1312}," 3",{"type":330,"tag":349,"props":1314,"children":1315},{"style":426},[1316],{"type":336,"value":451},{"type":330,"tag":349,"props":1318,"children":1319},{"style":438},[1320],{"type":336,"value":456},{"type":330,"tag":349,"props":1322,"children":1324},{"class":351,"line":1323},24,[1325,1330,1334,1338,1342,1347,1351,1355],{"type":330,"tag":349,"props":1326,"children":1327},{"style":408},[1328],{"type":336,"value":1329},"console",{"type":330,"tag":349,"props":1331,"children":1332},{"style":478},[1333],{"type":336,"value":481},{"type":330,"tag":349,"props":1335,"children":1336},{"style":420},[1337],{"type":336,"value":1179},{"type":330,"tag":349,"props":1339,"children":1340},{"style":426},[1341],{"type":336,"value":585},{"type":330,"tag":349,"props":1343,"children":1344},{"style":414},[1345],{"type":336,"value":1346},"...",{"type":330,"tag":349,"props":1348,"children":1349},{"style":408},[1350],{"type":336,"value":1146},{"type":330,"tag":349,"props":1352,"children":1353},{"style":426},[1354],{"type":336,"value":1203},{"type":330,"tag":349,"props":1356,"children":1357},{"style":438},[1358],{"type":336,"value":456},{"type":330,"tag":1360,"props":1361,"children":1362},"style",{},[1363],{"type":336,"value":1364},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":325,"searchDepth":389,"depth":389,"links":1366},[1367,1368],{"id":333,"depth":362,"text":333},{"id":847,"depth":362,"text":847},"markdown","content:2.code:2.source:1.native-api:7.iterator.md","content","2.code/2.source/1.native-api/7.iterator.md","md",[1375,1377],{"_path":291,"title":290,"description":1376},"JSON.stringify() 方法将一个 js 对象或值转换为 json 字符串，如果指定了一个 replacer 函数，则可以选择性地替换值，或者指定的 replacer 是数组，则可选择性地仅包含数组指定的属性。",{"_path":301,"title":300,"description":325},1712115786792]