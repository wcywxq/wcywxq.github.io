[{"data":1,"prerenderedAt":1370},["Reactive",2],{"navigation":3,"/code/source/native-api/iterator":314,"/code/source/native-api/iterator-surround":1366},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,258,307],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,47],{"title":41,"_path":42,"children":43},"剑指 offer","/code/algorithm/sword-ofter",[44],{"title":45,"_path":46},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":48,"_path":49,"children":50},"力扣 leetCode","/code/algorithm/leetcode",[51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255],{"title":52,"_path":53},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":55,"_path":56},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":58,"_path":59},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":61,"_path":62},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":64,"_path":65},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":67,"_path":68},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":70,"_path":71},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":73,"_path":74},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":76,"_path":77},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":79,"_path":80},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":82,"_path":83},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":85,"_path":86},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":88,"_path":89},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":91,"_path":92},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":94,"_path":95},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":97,"_path":98},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":100,"_path":101},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":103,"_path":104},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":106,"_path":107},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":109,"_path":110},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":112,"_path":113},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":115,"_path":116},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":118,"_path":119},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":121,"_path":122},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":124,"_path":125},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":127,"_path":128},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":130,"_path":131},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":133,"_path":134},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":136,"_path":137},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":139,"_path":140},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":142,"_path":143},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":145,"_path":146},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":148,"_path":149},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":151,"_path":152},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":154,"_path":155},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":157,"_path":158},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":160,"_path":161},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":163,"_path":164},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":166,"_path":167},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":169,"_path":170},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":172,"_path":173},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":175,"_path":176},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":178,"_path":179},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":181,"_path":182},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":184,"_path":185},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":187,"_path":188},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":190,"_path":191},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":193,"_path":194},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":196,"_path":197},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":199,"_path":200},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":202,"_path":203},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":205,"_path":206},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":208,"_path":209},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":211,"_path":212},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":214,"_path":215},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":217,"_path":218},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":220,"_path":221},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":223,"_path":224},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":226,"_path":227},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":229,"_path":230},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":232,"_path":233},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":235,"_path":236},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":238,"_path":239},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":241,"_path":242},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":244,"_path":245},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":247,"_path":248},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":250,"_path":251},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":253,"_path":254},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":256,"_path":257},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":259,"_path":260,"children":261},"源码实现","/code/source",[262,287,300],{"title":263,"_path":264,"children":265},"原生 api","/code/source/native-api",[266,269,272,275,278,281,284],{"title":267,"_path":268},"ajax","/code/source/native-api/ajax",{"title":270,"_path":271},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":273,"_path":274},"new 操作符","/code/source/native-api/new",{"title":276,"_path":277},"instanceof 关键字","/code/source/native-api/instanceof",{"title":279,"_path":280},"定时器","/code/source/native-api/timer",{"title":282,"_path":283},"JSON.stringify","/code/source/native-api/json-stringify",{"title":285,"_path":286},"Iterator 迭代器","/code/source/native-api/iterator",{"title":288,"_path":289,"children":290},"数组 Array","/code/source/array",[291,294,297],{"title":292,"_path":293},"数组去重","/code/source/array/remove-duplicate",{"title":295,"_path":296},"数组扁平化","/code/source/array/flat",{"title":298,"_path":299},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":301,"_path":302,"children":303},"字符串 String","/code/source/string",[304],{"title":305,"_path":306},"repeat()","/code/source/string/repeat",{"title":308,"_path":309,"children":310},"业务场景","/code/scene",[311],{"title":312,"_path":313},"顺序打印 url 并支持 retry","/code/scene/promise-url-retry",{"_path":286,"_dir":315,"_draft":316,"_partial":316,"_locale":317,"title":285,"description":317,"body":318,"_type":1361,"_id":1362,"_source":1363,"_file":1364,"_extension":1365},"native-api",false,"",{"type":319,"children":320,"toc":1357},"root",[321,329,837,842,1351],{"type":322,"tag":323,"props":324,"children":326},"element","h2",{"id":325},"实现迭代器函数",[327],{"type":328,"value":325},"text",{"type":322,"tag":330,"props":331,"children":335},"pre",{"className":332,"code":333,"language":334,"meta":317,"style":317},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/*\n * 这是一个手写的迭代器(Iterator)\n * 满足迭代器协议的对象。\n * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n */\nvar it = makeIterator([\"a\", \"b\"]);\n\nit.next(); // { value: \"a\", done: false }\nit.next(); // { value: \"b\", done: false }\nit.next(); // { value: undefined, done: true }\n\nfunction makeIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n  };\n}\n","js",[336],{"type":322,"tag":337,"props":338,"children":339},"code",{"__ignoreMap":317},[340,352,361,370,379,388,449,459,494,523,552,560,589,617,632,656,688,753,801,815,828],{"type":322,"tag":341,"props":342,"children":345},"span",{"class":343,"line":344},"line",1,[346],{"type":322,"tag":341,"props":347,"children":349},{"style":348},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[350],{"type":328,"value":351},"/*\n",{"type":322,"tag":341,"props":353,"children":355},{"class":343,"line":354},2,[356],{"type":322,"tag":341,"props":357,"children":358},{"style":348},[359],{"type":328,"value":360}," * 这是一个手写的迭代器(Iterator)\n",{"type":322,"tag":341,"props":362,"children":364},{"class":343,"line":363},3,[365],{"type":322,"tag":341,"props":366,"children":367},{"style":348},[368],{"type":328,"value":369}," * 满足迭代器协议的对象。\n",{"type":322,"tag":341,"props":371,"children":373},{"class":343,"line":372},4,[374],{"type":322,"tag":341,"props":375,"children":376},{"style":348},[377],{"type":328,"value":378}," * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n",{"type":322,"tag":341,"props":380,"children":382},{"class":343,"line":381},5,[383],{"type":322,"tag":341,"props":384,"children":385},{"style":348},[386],{"type":328,"value":387}," */\n",{"type":322,"tag":341,"props":389,"children":391},{"class":343,"line":390},6,[392,398,404,410,416,422,428,434,439,444],{"type":322,"tag":341,"props":393,"children":395},{"style":394},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[396],{"type":328,"value":397},"var",{"type":322,"tag":341,"props":399,"children":401},{"style":400},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[402],{"type":328,"value":403}," it",{"type":322,"tag":341,"props":405,"children":407},{"style":406},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[408],{"type":328,"value":409}," =",{"type":322,"tag":341,"props":411,"children":413},{"style":412},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[414],{"type":328,"value":415}," makeIterator",{"type":322,"tag":341,"props":417,"children":419},{"style":418},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[420],{"type":328,"value":421},"([",{"type":322,"tag":341,"props":423,"children":425},{"style":424},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[426],{"type":328,"value":427},"\"a\"",{"type":322,"tag":341,"props":429,"children":431},{"style":430},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[432],{"type":328,"value":433},",",{"type":322,"tag":341,"props":435,"children":436},{"style":424},[437],{"type":328,"value":438}," \"b\"",{"type":322,"tag":341,"props":440,"children":441},{"style":418},[442],{"type":328,"value":443},"])",{"type":322,"tag":341,"props":445,"children":446},{"style":430},[447],{"type":328,"value":448},";\n",{"type":322,"tag":341,"props":450,"children":452},{"class":343,"line":451},7,[453],{"type":322,"tag":341,"props":454,"children":456},{"emptyLinePlaceholder":455},true,[457],{"type":328,"value":458},"\n",{"type":322,"tag":341,"props":460,"children":462},{"class":343,"line":461},8,[463,468,474,479,484,489],{"type":322,"tag":341,"props":464,"children":465},{"style":400},[466],{"type":328,"value":467},"it",{"type":322,"tag":341,"props":469,"children":471},{"style":470},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[472],{"type":328,"value":473},".",{"type":322,"tag":341,"props":475,"children":476},{"style":412},[477],{"type":328,"value":478},"next",{"type":322,"tag":341,"props":480,"children":481},{"style":418},[482],{"type":328,"value":483},"()",{"type":322,"tag":341,"props":485,"children":486},{"style":430},[487],{"type":328,"value":488},";",{"type":322,"tag":341,"props":490,"children":491},{"style":348},[492],{"type":328,"value":493}," // { value: \"a\", done: false }\n",{"type":322,"tag":341,"props":495,"children":497},{"class":343,"line":496},9,[498,502,506,510,514,518],{"type":322,"tag":341,"props":499,"children":500},{"style":400},[501],{"type":328,"value":467},{"type":322,"tag":341,"props":503,"children":504},{"style":470},[505],{"type":328,"value":473},{"type":322,"tag":341,"props":507,"children":508},{"style":412},[509],{"type":328,"value":478},{"type":322,"tag":341,"props":511,"children":512},{"style":418},[513],{"type":328,"value":483},{"type":322,"tag":341,"props":515,"children":516},{"style":430},[517],{"type":328,"value":488},{"type":322,"tag":341,"props":519,"children":520},{"style":348},[521],{"type":328,"value":522}," // { value: \"b\", done: false }\n",{"type":322,"tag":341,"props":524,"children":526},{"class":343,"line":525},10,[527,531,535,539,543,547],{"type":322,"tag":341,"props":528,"children":529},{"style":400},[530],{"type":328,"value":467},{"type":322,"tag":341,"props":532,"children":533},{"style":470},[534],{"type":328,"value":473},{"type":322,"tag":341,"props":536,"children":537},{"style":412},[538],{"type":328,"value":478},{"type":322,"tag":341,"props":540,"children":541},{"style":418},[542],{"type":328,"value":483},{"type":322,"tag":341,"props":544,"children":545},{"style":430},[546],{"type":328,"value":488},{"type":322,"tag":341,"props":548,"children":549},{"style":348},[550],{"type":328,"value":551}," // { value: undefined, done: true }\n",{"type":322,"tag":341,"props":553,"children":555},{"class":343,"line":554},11,[556],{"type":322,"tag":341,"props":557,"children":558},{"emptyLinePlaceholder":455},[559],{"type":328,"value":458},{"type":322,"tag":341,"props":561,"children":563},{"class":343,"line":562},12,[564,569,573,578,584],{"type":322,"tag":341,"props":565,"children":566},{"style":394},[567],{"type":328,"value":568},"function",{"type":322,"tag":341,"props":570,"children":571},{"style":412},[572],{"type":328,"value":415},{"type":322,"tag":341,"props":574,"children":575},{"style":418},[576],{"type":328,"value":577},"(",{"type":322,"tag":341,"props":579,"children":581},{"style":580},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[582],{"type":328,"value":583},"array",{"type":322,"tag":341,"props":585,"children":586},{"style":418},[587],{"type":328,"value":588},") {\n",{"type":322,"tag":341,"props":590,"children":592},{"class":343,"line":591},13,[593,598,603,607,613],{"type":322,"tag":341,"props":594,"children":595},{"style":394},[596],{"type":328,"value":597},"  var",{"type":322,"tag":341,"props":599,"children":600},{"style":400},[601],{"type":328,"value":602}," nextIndex",{"type":322,"tag":341,"props":604,"children":605},{"style":406},[606],{"type":328,"value":409},{"type":322,"tag":341,"props":608,"children":610},{"style":609},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[611],{"type":328,"value":612}," 0",{"type":322,"tag":341,"props":614,"children":615},{"style":430},[616],{"type":328,"value":448},{"type":322,"tag":341,"props":618,"children":620},{"class":343,"line":619},14,[621,627],{"type":322,"tag":341,"props":622,"children":624},{"style":623},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[625],{"type":328,"value":626},"  return",{"type":322,"tag":341,"props":628,"children":629},{"style":418},[630],{"type":328,"value":631}," {\n",{"type":322,"tag":341,"props":633,"children":635},{"class":343,"line":634},15,[636,641,646,651],{"type":322,"tag":341,"props":637,"children":638},{"style":412},[639],{"type":328,"value":640},"    next",{"type":322,"tag":341,"props":642,"children":643},{"style":430},[644],{"type":328,"value":645},":",{"type":322,"tag":341,"props":647,"children":648},{"style":394},[649],{"type":328,"value":650}," function",{"type":322,"tag":341,"props":652,"children":653},{"style":418},[654],{"type":328,"value":655}," () {\n",{"type":322,"tag":341,"props":657,"children":659},{"class":343,"line":658},16,[660,665,669,674,679,683],{"type":322,"tag":341,"props":661,"children":662},{"style":623},[663],{"type":328,"value":664},"      return",{"type":322,"tag":341,"props":666,"children":667},{"style":400},[668],{"type":328,"value":602},{"type":322,"tag":341,"props":670,"children":671},{"style":406},[672],{"type":328,"value":673}," \u003C",{"type":322,"tag":341,"props":675,"children":676},{"style":400},[677],{"type":328,"value":678}," array",{"type":322,"tag":341,"props":680,"children":681},{"style":470},[682],{"type":328,"value":473},{"type":322,"tag":341,"props":684,"children":685},{"style":418},[686],{"type":328,"value":687},"length\n",{"type":322,"tag":341,"props":689,"children":691},{"class":343,"line":690},17,[692,697,702,706,710,715,720,725,730,734,739,743,748],{"type":322,"tag":341,"props":693,"children":694},{"style":406},[695],{"type":328,"value":696},"        ?",{"type":322,"tag":341,"props":698,"children":699},{"style":418},[700],{"type":328,"value":701}," { value",{"type":322,"tag":341,"props":703,"children":704},{"style":430},[705],{"type":328,"value":645},{"type":322,"tag":341,"props":707,"children":708},{"style":400},[709],{"type":328,"value":678},{"type":322,"tag":341,"props":711,"children":712},{"style":418},[713],{"type":328,"value":714},"[",{"type":322,"tag":341,"props":716,"children":717},{"style":400},[718],{"type":328,"value":719},"nextIndex",{"type":322,"tag":341,"props":721,"children":722},{"style":406},[723],{"type":328,"value":724},"++",{"type":322,"tag":341,"props":726,"children":727},{"style":418},[728],{"type":328,"value":729},"]",{"type":322,"tag":341,"props":731,"children":732},{"style":430},[733],{"type":328,"value":433},{"type":322,"tag":341,"props":735,"children":736},{"style":418},[737],{"type":328,"value":738}," done",{"type":322,"tag":341,"props":740,"children":741},{"style":430},[742],{"type":328,"value":645},{"type":322,"tag":341,"props":744,"children":745},{"style":609},[746],{"type":328,"value":747}," false",{"type":322,"tag":341,"props":749,"children":750},{"style":418},[751],{"type":328,"value":752}," }\n",{"type":322,"tag":341,"props":754,"children":756},{"class":343,"line":755},18,[757,762,766,770,775,779,783,787,792,797],{"type":322,"tag":341,"props":758,"children":759},{"style":406},[760],{"type":328,"value":761},"        :",{"type":322,"tag":341,"props":763,"children":764},{"style":418},[765],{"type":328,"value":701},{"type":322,"tag":341,"props":767,"children":768},{"style":430},[769],{"type":328,"value":645},{"type":322,"tag":341,"props":771,"children":772},{"style":609},[773],{"type":328,"value":774}," undefined",{"type":322,"tag":341,"props":776,"children":777},{"style":430},[778],{"type":328,"value":433},{"type":322,"tag":341,"props":780,"children":781},{"style":418},[782],{"type":328,"value":738},{"type":322,"tag":341,"props":784,"children":785},{"style":430},[786],{"type":328,"value":645},{"type":322,"tag":341,"props":788,"children":789},{"style":609},[790],{"type":328,"value":791}," true",{"type":322,"tag":341,"props":793,"children":794},{"style":418},[795],{"type":328,"value":796}," }",{"type":322,"tag":341,"props":798,"children":799},{"style":430},[800],{"type":328,"value":448},{"type":322,"tag":341,"props":802,"children":804},{"class":343,"line":803},19,[805,810],{"type":322,"tag":341,"props":806,"children":807},{"style":418},[808],{"type":328,"value":809},"    }",{"type":322,"tag":341,"props":811,"children":812},{"style":430},[813],{"type":328,"value":814},",\n",{"type":322,"tag":341,"props":816,"children":818},{"class":343,"line":817},20,[819,824],{"type":322,"tag":341,"props":820,"children":821},{"style":418},[822],{"type":328,"value":823},"  }",{"type":322,"tag":341,"props":825,"children":826},{"style":430},[827],{"type":328,"value":448},{"type":322,"tag":341,"props":829,"children":831},{"class":343,"line":830},21,[832],{"type":322,"tag":341,"props":833,"children":834},{"style":418},[835],{"type":328,"value":836},"}\n",{"type":322,"tag":323,"props":838,"children":840},{"id":839},"可迭代的迭代器",[841],{"type":328,"value":839},{"type":322,"tag":330,"props":843,"children":845},{"className":332,"code":844,"language":334,"meta":317,"style":317},"/**\n * 使迭代器可迭代\n * makeIterator 函数生成的迭代器并没有实现可迭代协议\n * 所以不能在 for...of 等语法中使用。\n * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n * 从新名了下函数名称 createIterator\n */\nfunction createIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n    [Symbol.iterator]: function () {\n      console.log(\"返回的迭代器:\", this);\n      return this; // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n    },\n  };\n}\n\nvar iterator = createIterator([1, 2, 3]);\nconsole.log(...iterator);\n",[846],{"type":322,"tag":337,"props":847,"children":848},{"__ignoreMap":317},[849,857,865,873,881,889,897,904,928,951,962,981,1008,1063,1106,1117,1155,1200,1220,1231,1242,1249,1257,1313],{"type":322,"tag":341,"props":850,"children":851},{"class":343,"line":344},[852],{"type":322,"tag":341,"props":853,"children":854},{"style":348},[855],{"type":328,"value":856},"/**\n",{"type":322,"tag":341,"props":858,"children":859},{"class":343,"line":354},[860],{"type":322,"tag":341,"props":861,"children":862},{"style":348},[863],{"type":328,"value":864}," * 使迭代器可迭代\n",{"type":322,"tag":341,"props":866,"children":867},{"class":343,"line":363},[868],{"type":322,"tag":341,"props":869,"children":870},{"style":348},[871],{"type":328,"value":872}," * makeIterator 函数生成的迭代器并没有实现可迭代协议\n",{"type":322,"tag":341,"props":874,"children":875},{"class":343,"line":372},[876],{"type":322,"tag":341,"props":877,"children":878},{"style":348},[879],{"type":328,"value":880}," * 所以不能在 for...of 等语法中使用。\n",{"type":322,"tag":341,"props":882,"children":883},{"class":343,"line":381},[884],{"type":322,"tag":341,"props":885,"children":886},{"style":348},[887],{"type":328,"value":888}," * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n",{"type":322,"tag":341,"props":890,"children":891},{"class":343,"line":390},[892],{"type":322,"tag":341,"props":893,"children":894},{"style":348},[895],{"type":328,"value":896}," * 从新名了下函数名称 createIterator\n",{"type":322,"tag":341,"props":898,"children":899},{"class":343,"line":451},[900],{"type":322,"tag":341,"props":901,"children":902},{"style":348},[903],{"type":328,"value":387},{"type":322,"tag":341,"props":905,"children":906},{"class":343,"line":461},[907,911,916,920,924],{"type":322,"tag":341,"props":908,"children":909},{"style":394},[910],{"type":328,"value":568},{"type":322,"tag":341,"props":912,"children":913},{"style":412},[914],{"type":328,"value":915}," createIterator",{"type":322,"tag":341,"props":917,"children":918},{"style":418},[919],{"type":328,"value":577},{"type":322,"tag":341,"props":921,"children":922},{"style":580},[923],{"type":328,"value":583},{"type":322,"tag":341,"props":925,"children":926},{"style":418},[927],{"type":328,"value":588},{"type":322,"tag":341,"props":929,"children":930},{"class":343,"line":496},[931,935,939,943,947],{"type":322,"tag":341,"props":932,"children":933},{"style":394},[934],{"type":328,"value":597},{"type":322,"tag":341,"props":936,"children":937},{"style":400},[938],{"type":328,"value":602},{"type":322,"tag":341,"props":940,"children":941},{"style":406},[942],{"type":328,"value":409},{"type":322,"tag":341,"props":944,"children":945},{"style":609},[946],{"type":328,"value":612},{"type":322,"tag":341,"props":948,"children":949},{"style":430},[950],{"type":328,"value":448},{"type":322,"tag":341,"props":952,"children":953},{"class":343,"line":525},[954,958],{"type":322,"tag":341,"props":955,"children":956},{"style":623},[957],{"type":328,"value":626},{"type":322,"tag":341,"props":959,"children":960},{"style":418},[961],{"type":328,"value":631},{"type":322,"tag":341,"props":963,"children":964},{"class":343,"line":554},[965,969,973,977],{"type":322,"tag":341,"props":966,"children":967},{"style":412},[968],{"type":328,"value":640},{"type":322,"tag":341,"props":970,"children":971},{"style":430},[972],{"type":328,"value":645},{"type":322,"tag":341,"props":974,"children":975},{"style":394},[976],{"type":328,"value":650},{"type":322,"tag":341,"props":978,"children":979},{"style":418},[980],{"type":328,"value":655},{"type":322,"tag":341,"props":982,"children":983},{"class":343,"line":562},[984,988,992,996,1000,1004],{"type":322,"tag":341,"props":985,"children":986},{"style":623},[987],{"type":328,"value":664},{"type":322,"tag":341,"props":989,"children":990},{"style":400},[991],{"type":328,"value":602},{"type":322,"tag":341,"props":993,"children":994},{"style":406},[995],{"type":328,"value":673},{"type":322,"tag":341,"props":997,"children":998},{"style":400},[999],{"type":328,"value":678},{"type":322,"tag":341,"props":1001,"children":1002},{"style":470},[1003],{"type":328,"value":473},{"type":322,"tag":341,"props":1005,"children":1006},{"style":418},[1007],{"type":328,"value":687},{"type":322,"tag":341,"props":1009,"children":1010},{"class":343,"line":591},[1011,1015,1019,1023,1027,1031,1035,1039,1043,1047,1051,1055,1059],{"type":322,"tag":341,"props":1012,"children":1013},{"style":406},[1014],{"type":328,"value":696},{"type":322,"tag":341,"props":1016,"children":1017},{"style":418},[1018],{"type":328,"value":701},{"type":322,"tag":341,"props":1020,"children":1021},{"style":430},[1022],{"type":328,"value":645},{"type":322,"tag":341,"props":1024,"children":1025},{"style":400},[1026],{"type":328,"value":678},{"type":322,"tag":341,"props":1028,"children":1029},{"style":418},[1030],{"type":328,"value":714},{"type":322,"tag":341,"props":1032,"children":1033},{"style":400},[1034],{"type":328,"value":719},{"type":322,"tag":341,"props":1036,"children":1037},{"style":406},[1038],{"type":328,"value":724},{"type":322,"tag":341,"props":1040,"children":1041},{"style":418},[1042],{"type":328,"value":729},{"type":322,"tag":341,"props":1044,"children":1045},{"style":430},[1046],{"type":328,"value":433},{"type":322,"tag":341,"props":1048,"children":1049},{"style":418},[1050],{"type":328,"value":738},{"type":322,"tag":341,"props":1052,"children":1053},{"style":430},[1054],{"type":328,"value":645},{"type":322,"tag":341,"props":1056,"children":1057},{"style":609},[1058],{"type":328,"value":747},{"type":322,"tag":341,"props":1060,"children":1061},{"style":418},[1062],{"type":328,"value":752},{"type":322,"tag":341,"props":1064,"children":1065},{"class":343,"line":619},[1066,1070,1074,1078,1082,1086,1090,1094,1098,1102],{"type":322,"tag":341,"props":1067,"children":1068},{"style":406},[1069],{"type":328,"value":761},{"type":322,"tag":341,"props":1071,"children":1072},{"style":418},[1073],{"type":328,"value":701},{"type":322,"tag":341,"props":1075,"children":1076},{"style":430},[1077],{"type":328,"value":645},{"type":322,"tag":341,"props":1079,"children":1080},{"style":609},[1081],{"type":328,"value":774},{"type":322,"tag":341,"props":1083,"children":1084},{"style":430},[1085],{"type":328,"value":433},{"type":322,"tag":341,"props":1087,"children":1088},{"style":418},[1089],{"type":328,"value":738},{"type":322,"tag":341,"props":1091,"children":1092},{"style":430},[1093],{"type":328,"value":645},{"type":322,"tag":341,"props":1095,"children":1096},{"style":609},[1097],{"type":328,"value":791},{"type":322,"tag":341,"props":1099,"children":1100},{"style":418},[1101],{"type":328,"value":796},{"type":322,"tag":341,"props":1103,"children":1104},{"style":430},[1105],{"type":328,"value":448},{"type":322,"tag":341,"props":1107,"children":1108},{"class":343,"line":634},[1109,1113],{"type":322,"tag":341,"props":1110,"children":1111},{"style":418},[1112],{"type":328,"value":809},{"type":322,"tag":341,"props":1114,"children":1115},{"style":430},[1116],{"type":328,"value":814},{"type":322,"tag":341,"props":1118,"children":1119},{"class":343,"line":658},[1120,1125,1130,1134,1139,1143,1147,1151],{"type":322,"tag":341,"props":1121,"children":1122},{"style":418},[1123],{"type":328,"value":1124},"    [",{"type":322,"tag":341,"props":1126,"children":1127},{"style":400},[1128],{"type":328,"value":1129},"Symbol",{"type":322,"tag":341,"props":1131,"children":1132},{"style":470},[1133],{"type":328,"value":473},{"type":322,"tag":341,"props":1135,"children":1136},{"style":400},[1137],{"type":328,"value":1138},"iterator",{"type":322,"tag":341,"props":1140,"children":1141},{"style":418},[1142],{"type":328,"value":729},{"type":322,"tag":341,"props":1144,"children":1145},{"style":430},[1146],{"type":328,"value":645},{"type":322,"tag":341,"props":1148,"children":1149},{"style":394},[1150],{"type":328,"value":650},{"type":322,"tag":341,"props":1152,"children":1153},{"style":418},[1154],{"type":328,"value":655},{"type":322,"tag":341,"props":1156,"children":1157},{"class":343,"line":690},[1158,1163,1167,1172,1176,1181,1185,1191,1196],{"type":322,"tag":341,"props":1159,"children":1160},{"style":400},[1161],{"type":328,"value":1162},"      console",{"type":322,"tag":341,"props":1164,"children":1165},{"style":470},[1166],{"type":328,"value":473},{"type":322,"tag":341,"props":1168,"children":1169},{"style":412},[1170],{"type":328,"value":1171},"log",{"type":322,"tag":341,"props":1173,"children":1174},{"style":418},[1175],{"type":328,"value":577},{"type":322,"tag":341,"props":1177,"children":1178},{"style":424},[1179],{"type":328,"value":1180},"\"返回的迭代器:\"",{"type":322,"tag":341,"props":1182,"children":1183},{"style":430},[1184],{"type":328,"value":433},{"type":322,"tag":341,"props":1186,"children":1188},{"style":1187},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[1189],{"type":328,"value":1190}," this",{"type":322,"tag":341,"props":1192,"children":1193},{"style":418},[1194],{"type":328,"value":1195},")",{"type":322,"tag":341,"props":1197,"children":1198},{"style":430},[1199],{"type":328,"value":448},{"type":322,"tag":341,"props":1201,"children":1202},{"class":343,"line":755},[1203,1207,1211,1215],{"type":322,"tag":341,"props":1204,"children":1205},{"style":623},[1206],{"type":328,"value":664},{"type":322,"tag":341,"props":1208,"children":1209},{"style":1187},[1210],{"type":328,"value":1190},{"type":322,"tag":341,"props":1212,"children":1213},{"style":430},[1214],{"type":328,"value":488},{"type":322,"tag":341,"props":1216,"children":1217},{"style":348},[1218],{"type":328,"value":1219}," // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n",{"type":322,"tag":341,"props":1221,"children":1222},{"class":343,"line":803},[1223,1227],{"type":322,"tag":341,"props":1224,"children":1225},{"style":418},[1226],{"type":328,"value":809},{"type":322,"tag":341,"props":1228,"children":1229},{"style":430},[1230],{"type":328,"value":814},{"type":322,"tag":341,"props":1232,"children":1233},{"class":343,"line":817},[1234,1238],{"type":322,"tag":341,"props":1235,"children":1236},{"style":418},[1237],{"type":328,"value":823},{"type":322,"tag":341,"props":1239,"children":1240},{"style":430},[1241],{"type":328,"value":448},{"type":322,"tag":341,"props":1243,"children":1244},{"class":343,"line":830},[1245],{"type":322,"tag":341,"props":1246,"children":1247},{"style":418},[1248],{"type":328,"value":836},{"type":322,"tag":341,"props":1250,"children":1252},{"class":343,"line":1251},22,[1253],{"type":322,"tag":341,"props":1254,"children":1255},{"emptyLinePlaceholder":455},[1256],{"type":328,"value":458},{"type":322,"tag":341,"props":1258,"children":1260},{"class":343,"line":1259},23,[1261,1265,1270,1274,1278,1282,1287,1291,1296,1300,1305,1309],{"type":322,"tag":341,"props":1262,"children":1263},{"style":394},[1264],{"type":328,"value":397},{"type":322,"tag":341,"props":1266,"children":1267},{"style":400},[1268],{"type":328,"value":1269}," iterator",{"type":322,"tag":341,"props":1271,"children":1272},{"style":406},[1273],{"type":328,"value":409},{"type":322,"tag":341,"props":1275,"children":1276},{"style":412},[1277],{"type":328,"value":915},{"type":322,"tag":341,"props":1279,"children":1280},{"style":418},[1281],{"type":328,"value":421},{"type":322,"tag":341,"props":1283,"children":1284},{"style":609},[1285],{"type":328,"value":1286},"1",{"type":322,"tag":341,"props":1288,"children":1289},{"style":430},[1290],{"type":328,"value":433},{"type":322,"tag":341,"props":1292,"children":1293},{"style":609},[1294],{"type":328,"value":1295}," 2",{"type":322,"tag":341,"props":1297,"children":1298},{"style":430},[1299],{"type":328,"value":433},{"type":322,"tag":341,"props":1301,"children":1302},{"style":609},[1303],{"type":328,"value":1304}," 3",{"type":322,"tag":341,"props":1306,"children":1307},{"style":418},[1308],{"type":328,"value":443},{"type":322,"tag":341,"props":1310,"children":1311},{"style":430},[1312],{"type":328,"value":448},{"type":322,"tag":341,"props":1314,"children":1316},{"class":343,"line":1315},24,[1317,1322,1326,1330,1334,1339,1343,1347],{"type":322,"tag":341,"props":1318,"children":1319},{"style":400},[1320],{"type":328,"value":1321},"console",{"type":322,"tag":341,"props":1323,"children":1324},{"style":470},[1325],{"type":328,"value":473},{"type":322,"tag":341,"props":1327,"children":1328},{"style":412},[1329],{"type":328,"value":1171},{"type":322,"tag":341,"props":1331,"children":1332},{"style":418},[1333],{"type":328,"value":577},{"type":322,"tag":341,"props":1335,"children":1336},{"style":406},[1337],{"type":328,"value":1338},"...",{"type":322,"tag":341,"props":1340,"children":1341},{"style":400},[1342],{"type":328,"value":1138},{"type":322,"tag":341,"props":1344,"children":1345},{"style":418},[1346],{"type":328,"value":1195},{"type":322,"tag":341,"props":1348,"children":1349},{"style":430},[1350],{"type":328,"value":448},{"type":322,"tag":1352,"props":1353,"children":1354},"style",{},[1355],{"type":328,"value":1356},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":317,"searchDepth":381,"depth":381,"links":1358},[1359,1360],{"id":325,"depth":354,"text":325},{"id":839,"depth":354,"text":839},"markdown","content:2.code:2.source:1.native-api:7.iterator.md","content","2.code/2.source/1.native-api/7.iterator.md","md",[1367,1369],{"_path":283,"title":282,"description":1368},"JSON.stringify() 方法将一个 js 对象或值转换为 json 字符串，如果指定了一个 replacer 函数，则可以选择性地替换值，或者指定的 replacer 是数组，则可选择性地仅包含数组指定的属性。",{"_path":293,"title":292,"description":317},1712076274773]