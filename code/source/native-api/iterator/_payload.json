[{"data":1,"prerenderedAt":1376},["Reactive",2],{"navigation":3,"/code/source/native-api/iterator":320,"/code/source/native-api/iterator-surround":1372},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,264,313],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,53],{"title":41,"_path":42,"children":43},"剑指 offer","/code/algorithm/sword-ofter",[44,47,50],{"title":45,"_path":46},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":48,"_path":49},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":51,"_path":52},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":54,"_path":55,"children":56},"力扣 leetCode","/code/algorithm/leetcode",[57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261],{"title":58,"_path":59},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":61,"_path":62},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":64,"_path":65},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":67,"_path":68},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":70,"_path":71},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":73,"_path":74},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":76,"_path":77},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":79,"_path":80},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":82,"_path":83},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":85,"_path":86},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":88,"_path":89},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":91,"_path":92},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":94,"_path":95},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":97,"_path":98},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":100,"_path":101},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":103,"_path":104},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":106,"_path":107},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":109,"_path":110},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":112,"_path":113},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":115,"_path":116},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":118,"_path":119},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":121,"_path":122},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":124,"_path":125},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":127,"_path":128},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":130,"_path":131},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":133,"_path":134},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":136,"_path":137},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":139,"_path":140},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":142,"_path":143},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":145,"_path":146},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":148,"_path":149},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":151,"_path":152},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":154,"_path":155},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":157,"_path":158},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":160,"_path":161},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":163,"_path":164},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":166,"_path":167},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":169,"_path":170},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":172,"_path":173},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":175,"_path":176},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":178,"_path":179},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":181,"_path":182},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":184,"_path":185},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":187,"_path":188},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":190,"_path":191},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":193,"_path":194},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":196,"_path":197},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":199,"_path":200},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":202,"_path":203},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":205,"_path":206},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":208,"_path":209},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":211,"_path":212},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":214,"_path":215},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":217,"_path":218},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":220,"_path":221},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":223,"_path":224},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":226,"_path":227},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":229,"_path":230},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":232,"_path":233},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":235,"_path":236},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":238,"_path":239},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":241,"_path":242},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":244,"_path":245},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":247,"_path":248},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":250,"_path":251},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":253,"_path":254},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":256,"_path":257},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":259,"_path":260},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":262,"_path":263},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":265,"_path":266,"children":267},"源码实现","/code/source",[268,293,306],{"title":269,"_path":270,"children":271},"原生 api","/code/source/native-api",[272,275,278,281,284,287,290],{"title":273,"_path":274},"ajax","/code/source/native-api/ajax",{"title":276,"_path":277},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":279,"_path":280},"new 操作符","/code/source/native-api/new",{"title":282,"_path":283},"instanceof 关键字","/code/source/native-api/instanceof",{"title":285,"_path":286},"定时器","/code/source/native-api/timer",{"title":288,"_path":289},"JSON.stringify","/code/source/native-api/json-stringify",{"title":291,"_path":292},"Iterator 迭代器","/code/source/native-api/iterator",{"title":294,"_path":295,"children":296},"数组 Array","/code/source/array",[297,300,303],{"title":298,"_path":299},"数组去重","/code/source/array/remove-duplicate",{"title":301,"_path":302},"数组扁平化","/code/source/array/flat",{"title":304,"_path":305},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":307,"_path":308,"children":309},"字符串 String","/code/source/string",[310],{"title":311,"_path":312},"repeat()","/code/source/string/repeat",{"title":314,"_path":315,"children":316},"业务场景","/code/scene",[317],{"title":318,"_path":319},"顺序打印 url 并支持 retry","/code/scene/promise-url-retry",{"_path":292,"_dir":321,"_draft":322,"_partial":322,"_locale":323,"title":291,"description":323,"body":324,"_type":1367,"_id":1368,"_source":1369,"_file":1370,"_extension":1371},"native-api",false,"",{"type":325,"children":326,"toc":1363},"root",[327,335,843,848,1357],{"type":328,"tag":329,"props":330,"children":332},"element","h2",{"id":331},"实现迭代器函数",[333],{"type":334,"value":331},"text",{"type":328,"tag":336,"props":337,"children":341},"pre",{"className":338,"code":339,"language":340,"meta":323,"style":323},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/*\n * 这是一个手写的迭代器(Iterator)\n * 满足迭代器协议的对象。\n * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n */\nvar it = makeIterator([\"a\", \"b\"]);\n\nit.next(); // { value: \"a\", done: false }\nit.next(); // { value: \"b\", done: false }\nit.next(); // { value: undefined, done: true }\n\nfunction makeIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n  };\n}\n","js",[342],{"type":328,"tag":343,"props":344,"children":345},"code",{"__ignoreMap":323},[346,358,367,376,385,394,455,465,500,529,558,566,595,623,638,662,694,759,807,821,834],{"type":328,"tag":347,"props":348,"children":351},"span",{"class":349,"line":350},"line",1,[352],{"type":328,"tag":347,"props":353,"children":355},{"style":354},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[356],{"type":334,"value":357},"/*\n",{"type":328,"tag":347,"props":359,"children":361},{"class":349,"line":360},2,[362],{"type":328,"tag":347,"props":363,"children":364},{"style":354},[365],{"type":334,"value":366}," * 这是一个手写的迭代器(Iterator)\n",{"type":328,"tag":347,"props":368,"children":370},{"class":349,"line":369},3,[371],{"type":328,"tag":347,"props":372,"children":373},{"style":354},[374],{"type":334,"value":375}," * 满足迭代器协议的对象。\n",{"type":328,"tag":347,"props":377,"children":379},{"class":349,"line":378},4,[380],{"type":328,"tag":347,"props":381,"children":382},{"style":354},[383],{"type":334,"value":384}," * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n",{"type":328,"tag":347,"props":386,"children":388},{"class":349,"line":387},5,[389],{"type":328,"tag":347,"props":390,"children":391},{"style":354},[392],{"type":334,"value":393}," */\n",{"type":328,"tag":347,"props":395,"children":397},{"class":349,"line":396},6,[398,404,410,416,422,428,434,440,445,450],{"type":328,"tag":347,"props":399,"children":401},{"style":400},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[402],{"type":334,"value":403},"var",{"type":328,"tag":347,"props":405,"children":407},{"style":406},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[408],{"type":334,"value":409}," it",{"type":328,"tag":347,"props":411,"children":413},{"style":412},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[414],{"type":334,"value":415}," =",{"type":328,"tag":347,"props":417,"children":419},{"style":418},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[420],{"type":334,"value":421}," makeIterator",{"type":328,"tag":347,"props":423,"children":425},{"style":424},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[426],{"type":334,"value":427},"([",{"type":328,"tag":347,"props":429,"children":431},{"style":430},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[432],{"type":334,"value":433},"\"a\"",{"type":328,"tag":347,"props":435,"children":437},{"style":436},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[438],{"type":334,"value":439},",",{"type":328,"tag":347,"props":441,"children":442},{"style":430},[443],{"type":334,"value":444}," \"b\"",{"type":328,"tag":347,"props":446,"children":447},{"style":424},[448],{"type":334,"value":449},"])",{"type":328,"tag":347,"props":451,"children":452},{"style":436},[453],{"type":334,"value":454},";\n",{"type":328,"tag":347,"props":456,"children":458},{"class":349,"line":457},7,[459],{"type":328,"tag":347,"props":460,"children":462},{"emptyLinePlaceholder":461},true,[463],{"type":334,"value":464},"\n",{"type":328,"tag":347,"props":466,"children":468},{"class":349,"line":467},8,[469,474,480,485,490,495],{"type":328,"tag":347,"props":470,"children":471},{"style":406},[472],{"type":334,"value":473},"it",{"type":328,"tag":347,"props":475,"children":477},{"style":476},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[478],{"type":334,"value":479},".",{"type":328,"tag":347,"props":481,"children":482},{"style":418},[483],{"type":334,"value":484},"next",{"type":328,"tag":347,"props":486,"children":487},{"style":424},[488],{"type":334,"value":489},"()",{"type":328,"tag":347,"props":491,"children":492},{"style":436},[493],{"type":334,"value":494},";",{"type":328,"tag":347,"props":496,"children":497},{"style":354},[498],{"type":334,"value":499}," // { value: \"a\", done: false }\n",{"type":328,"tag":347,"props":501,"children":503},{"class":349,"line":502},9,[504,508,512,516,520,524],{"type":328,"tag":347,"props":505,"children":506},{"style":406},[507],{"type":334,"value":473},{"type":328,"tag":347,"props":509,"children":510},{"style":476},[511],{"type":334,"value":479},{"type":328,"tag":347,"props":513,"children":514},{"style":418},[515],{"type":334,"value":484},{"type":328,"tag":347,"props":517,"children":518},{"style":424},[519],{"type":334,"value":489},{"type":328,"tag":347,"props":521,"children":522},{"style":436},[523],{"type":334,"value":494},{"type":328,"tag":347,"props":525,"children":526},{"style":354},[527],{"type":334,"value":528}," // { value: \"b\", done: false }\n",{"type":328,"tag":347,"props":530,"children":532},{"class":349,"line":531},10,[533,537,541,545,549,553],{"type":328,"tag":347,"props":534,"children":535},{"style":406},[536],{"type":334,"value":473},{"type":328,"tag":347,"props":538,"children":539},{"style":476},[540],{"type":334,"value":479},{"type":328,"tag":347,"props":542,"children":543},{"style":418},[544],{"type":334,"value":484},{"type":328,"tag":347,"props":546,"children":547},{"style":424},[548],{"type":334,"value":489},{"type":328,"tag":347,"props":550,"children":551},{"style":436},[552],{"type":334,"value":494},{"type":328,"tag":347,"props":554,"children":555},{"style":354},[556],{"type":334,"value":557}," // { value: undefined, done: true }\n",{"type":328,"tag":347,"props":559,"children":561},{"class":349,"line":560},11,[562],{"type":328,"tag":347,"props":563,"children":564},{"emptyLinePlaceholder":461},[565],{"type":334,"value":464},{"type":328,"tag":347,"props":567,"children":569},{"class":349,"line":568},12,[570,575,579,584,590],{"type":328,"tag":347,"props":571,"children":572},{"style":400},[573],{"type":334,"value":574},"function",{"type":328,"tag":347,"props":576,"children":577},{"style":418},[578],{"type":334,"value":421},{"type":328,"tag":347,"props":580,"children":581},{"style":424},[582],{"type":334,"value":583},"(",{"type":328,"tag":347,"props":585,"children":587},{"style":586},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[588],{"type":334,"value":589},"array",{"type":328,"tag":347,"props":591,"children":592},{"style":424},[593],{"type":334,"value":594},") {\n",{"type":328,"tag":347,"props":596,"children":598},{"class":349,"line":597},13,[599,604,609,613,619],{"type":328,"tag":347,"props":600,"children":601},{"style":400},[602],{"type":334,"value":603},"  var",{"type":328,"tag":347,"props":605,"children":606},{"style":406},[607],{"type":334,"value":608}," nextIndex",{"type":328,"tag":347,"props":610,"children":611},{"style":412},[612],{"type":334,"value":415},{"type":328,"tag":347,"props":614,"children":616},{"style":615},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[617],{"type":334,"value":618}," 0",{"type":328,"tag":347,"props":620,"children":621},{"style":436},[622],{"type":334,"value":454},{"type":328,"tag":347,"props":624,"children":626},{"class":349,"line":625},14,[627,633],{"type":328,"tag":347,"props":628,"children":630},{"style":629},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[631],{"type":334,"value":632},"  return",{"type":328,"tag":347,"props":634,"children":635},{"style":424},[636],{"type":334,"value":637}," {\n",{"type":328,"tag":347,"props":639,"children":641},{"class":349,"line":640},15,[642,647,652,657],{"type":328,"tag":347,"props":643,"children":644},{"style":418},[645],{"type":334,"value":646},"    next",{"type":328,"tag":347,"props":648,"children":649},{"style":436},[650],{"type":334,"value":651},":",{"type":328,"tag":347,"props":653,"children":654},{"style":400},[655],{"type":334,"value":656}," function",{"type":328,"tag":347,"props":658,"children":659},{"style":424},[660],{"type":334,"value":661}," () {\n",{"type":328,"tag":347,"props":663,"children":665},{"class":349,"line":664},16,[666,671,675,680,685,689],{"type":328,"tag":347,"props":667,"children":668},{"style":629},[669],{"type":334,"value":670},"      return",{"type":328,"tag":347,"props":672,"children":673},{"style":406},[674],{"type":334,"value":608},{"type":328,"tag":347,"props":676,"children":677},{"style":412},[678],{"type":334,"value":679}," \u003C",{"type":328,"tag":347,"props":681,"children":682},{"style":406},[683],{"type":334,"value":684}," array",{"type":328,"tag":347,"props":686,"children":687},{"style":476},[688],{"type":334,"value":479},{"type":328,"tag":347,"props":690,"children":691},{"style":424},[692],{"type":334,"value":693},"length\n",{"type":328,"tag":347,"props":695,"children":697},{"class":349,"line":696},17,[698,703,708,712,716,721,726,731,736,740,745,749,754],{"type":328,"tag":347,"props":699,"children":700},{"style":412},[701],{"type":334,"value":702},"        ?",{"type":328,"tag":347,"props":704,"children":705},{"style":424},[706],{"type":334,"value":707}," { value",{"type":328,"tag":347,"props":709,"children":710},{"style":436},[711],{"type":334,"value":651},{"type":328,"tag":347,"props":713,"children":714},{"style":406},[715],{"type":334,"value":684},{"type":328,"tag":347,"props":717,"children":718},{"style":424},[719],{"type":334,"value":720},"[",{"type":328,"tag":347,"props":722,"children":723},{"style":406},[724],{"type":334,"value":725},"nextIndex",{"type":328,"tag":347,"props":727,"children":728},{"style":412},[729],{"type":334,"value":730},"++",{"type":328,"tag":347,"props":732,"children":733},{"style":424},[734],{"type":334,"value":735},"]",{"type":328,"tag":347,"props":737,"children":738},{"style":436},[739],{"type":334,"value":439},{"type":328,"tag":347,"props":741,"children":742},{"style":424},[743],{"type":334,"value":744}," done",{"type":328,"tag":347,"props":746,"children":747},{"style":436},[748],{"type":334,"value":651},{"type":328,"tag":347,"props":750,"children":751},{"style":615},[752],{"type":334,"value":753}," false",{"type":328,"tag":347,"props":755,"children":756},{"style":424},[757],{"type":334,"value":758}," }\n",{"type":328,"tag":347,"props":760,"children":762},{"class":349,"line":761},18,[763,768,772,776,781,785,789,793,798,803],{"type":328,"tag":347,"props":764,"children":765},{"style":412},[766],{"type":334,"value":767},"        :",{"type":328,"tag":347,"props":769,"children":770},{"style":424},[771],{"type":334,"value":707},{"type":328,"tag":347,"props":773,"children":774},{"style":436},[775],{"type":334,"value":651},{"type":328,"tag":347,"props":777,"children":778},{"style":615},[779],{"type":334,"value":780}," undefined",{"type":328,"tag":347,"props":782,"children":783},{"style":436},[784],{"type":334,"value":439},{"type":328,"tag":347,"props":786,"children":787},{"style":424},[788],{"type":334,"value":744},{"type":328,"tag":347,"props":790,"children":791},{"style":436},[792],{"type":334,"value":651},{"type":328,"tag":347,"props":794,"children":795},{"style":615},[796],{"type":334,"value":797}," true",{"type":328,"tag":347,"props":799,"children":800},{"style":424},[801],{"type":334,"value":802}," }",{"type":328,"tag":347,"props":804,"children":805},{"style":436},[806],{"type":334,"value":454},{"type":328,"tag":347,"props":808,"children":810},{"class":349,"line":809},19,[811,816],{"type":328,"tag":347,"props":812,"children":813},{"style":424},[814],{"type":334,"value":815},"    }",{"type":328,"tag":347,"props":817,"children":818},{"style":436},[819],{"type":334,"value":820},",\n",{"type":328,"tag":347,"props":822,"children":824},{"class":349,"line":823},20,[825,830],{"type":328,"tag":347,"props":826,"children":827},{"style":424},[828],{"type":334,"value":829},"  }",{"type":328,"tag":347,"props":831,"children":832},{"style":436},[833],{"type":334,"value":454},{"type":328,"tag":347,"props":835,"children":837},{"class":349,"line":836},21,[838],{"type":328,"tag":347,"props":839,"children":840},{"style":424},[841],{"type":334,"value":842},"}\n",{"type":328,"tag":329,"props":844,"children":846},{"id":845},"可迭代的迭代器",[847],{"type":334,"value":845},{"type":328,"tag":336,"props":849,"children":851},{"className":338,"code":850,"language":340,"meta":323,"style":323},"/**\n * 使迭代器可迭代\n * makeIterator 函数生成的迭代器并没有实现可迭代协议\n * 所以不能在 for...of 等语法中使用。\n * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n * 从新名了下函数名称 createIterator\n */\nfunction createIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n    [Symbol.iterator]: function () {\n      console.log(\"返回的迭代器:\", this);\n      return this; // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n    },\n  };\n}\n\nvar iterator = createIterator([1, 2, 3]);\nconsole.log(...iterator);\n",[852],{"type":328,"tag":343,"props":853,"children":854},{"__ignoreMap":323},[855,863,871,879,887,895,903,910,934,957,968,987,1014,1069,1112,1123,1161,1206,1226,1237,1248,1255,1263,1319],{"type":328,"tag":347,"props":856,"children":857},{"class":349,"line":350},[858],{"type":328,"tag":347,"props":859,"children":860},{"style":354},[861],{"type":334,"value":862},"/**\n",{"type":328,"tag":347,"props":864,"children":865},{"class":349,"line":360},[866],{"type":328,"tag":347,"props":867,"children":868},{"style":354},[869],{"type":334,"value":870}," * 使迭代器可迭代\n",{"type":328,"tag":347,"props":872,"children":873},{"class":349,"line":369},[874],{"type":328,"tag":347,"props":875,"children":876},{"style":354},[877],{"type":334,"value":878}," * makeIterator 函数生成的迭代器并没有实现可迭代协议\n",{"type":328,"tag":347,"props":880,"children":881},{"class":349,"line":378},[882],{"type":328,"tag":347,"props":883,"children":884},{"style":354},[885],{"type":334,"value":886}," * 所以不能在 for...of 等语法中使用。\n",{"type":328,"tag":347,"props":888,"children":889},{"class":349,"line":387},[890],{"type":328,"tag":347,"props":891,"children":892},{"style":354},[893],{"type":334,"value":894}," * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n",{"type":328,"tag":347,"props":896,"children":897},{"class":349,"line":396},[898],{"type":328,"tag":347,"props":899,"children":900},{"style":354},[901],{"type":334,"value":902}," * 从新名了下函数名称 createIterator\n",{"type":328,"tag":347,"props":904,"children":905},{"class":349,"line":457},[906],{"type":328,"tag":347,"props":907,"children":908},{"style":354},[909],{"type":334,"value":393},{"type":328,"tag":347,"props":911,"children":912},{"class":349,"line":467},[913,917,922,926,930],{"type":328,"tag":347,"props":914,"children":915},{"style":400},[916],{"type":334,"value":574},{"type":328,"tag":347,"props":918,"children":919},{"style":418},[920],{"type":334,"value":921}," createIterator",{"type":328,"tag":347,"props":923,"children":924},{"style":424},[925],{"type":334,"value":583},{"type":328,"tag":347,"props":927,"children":928},{"style":586},[929],{"type":334,"value":589},{"type":328,"tag":347,"props":931,"children":932},{"style":424},[933],{"type":334,"value":594},{"type":328,"tag":347,"props":935,"children":936},{"class":349,"line":502},[937,941,945,949,953],{"type":328,"tag":347,"props":938,"children":939},{"style":400},[940],{"type":334,"value":603},{"type":328,"tag":347,"props":942,"children":943},{"style":406},[944],{"type":334,"value":608},{"type":328,"tag":347,"props":946,"children":947},{"style":412},[948],{"type":334,"value":415},{"type":328,"tag":347,"props":950,"children":951},{"style":615},[952],{"type":334,"value":618},{"type":328,"tag":347,"props":954,"children":955},{"style":436},[956],{"type":334,"value":454},{"type":328,"tag":347,"props":958,"children":959},{"class":349,"line":531},[960,964],{"type":328,"tag":347,"props":961,"children":962},{"style":629},[963],{"type":334,"value":632},{"type":328,"tag":347,"props":965,"children":966},{"style":424},[967],{"type":334,"value":637},{"type":328,"tag":347,"props":969,"children":970},{"class":349,"line":560},[971,975,979,983],{"type":328,"tag":347,"props":972,"children":973},{"style":418},[974],{"type":334,"value":646},{"type":328,"tag":347,"props":976,"children":977},{"style":436},[978],{"type":334,"value":651},{"type":328,"tag":347,"props":980,"children":981},{"style":400},[982],{"type":334,"value":656},{"type":328,"tag":347,"props":984,"children":985},{"style":424},[986],{"type":334,"value":661},{"type":328,"tag":347,"props":988,"children":989},{"class":349,"line":568},[990,994,998,1002,1006,1010],{"type":328,"tag":347,"props":991,"children":992},{"style":629},[993],{"type":334,"value":670},{"type":328,"tag":347,"props":995,"children":996},{"style":406},[997],{"type":334,"value":608},{"type":328,"tag":347,"props":999,"children":1000},{"style":412},[1001],{"type":334,"value":679},{"type":328,"tag":347,"props":1003,"children":1004},{"style":406},[1005],{"type":334,"value":684},{"type":328,"tag":347,"props":1007,"children":1008},{"style":476},[1009],{"type":334,"value":479},{"type":328,"tag":347,"props":1011,"children":1012},{"style":424},[1013],{"type":334,"value":693},{"type":328,"tag":347,"props":1015,"children":1016},{"class":349,"line":597},[1017,1021,1025,1029,1033,1037,1041,1045,1049,1053,1057,1061,1065],{"type":328,"tag":347,"props":1018,"children":1019},{"style":412},[1020],{"type":334,"value":702},{"type":328,"tag":347,"props":1022,"children":1023},{"style":424},[1024],{"type":334,"value":707},{"type":328,"tag":347,"props":1026,"children":1027},{"style":436},[1028],{"type":334,"value":651},{"type":328,"tag":347,"props":1030,"children":1031},{"style":406},[1032],{"type":334,"value":684},{"type":328,"tag":347,"props":1034,"children":1035},{"style":424},[1036],{"type":334,"value":720},{"type":328,"tag":347,"props":1038,"children":1039},{"style":406},[1040],{"type":334,"value":725},{"type":328,"tag":347,"props":1042,"children":1043},{"style":412},[1044],{"type":334,"value":730},{"type":328,"tag":347,"props":1046,"children":1047},{"style":424},[1048],{"type":334,"value":735},{"type":328,"tag":347,"props":1050,"children":1051},{"style":436},[1052],{"type":334,"value":439},{"type":328,"tag":347,"props":1054,"children":1055},{"style":424},[1056],{"type":334,"value":744},{"type":328,"tag":347,"props":1058,"children":1059},{"style":436},[1060],{"type":334,"value":651},{"type":328,"tag":347,"props":1062,"children":1063},{"style":615},[1064],{"type":334,"value":753},{"type":328,"tag":347,"props":1066,"children":1067},{"style":424},[1068],{"type":334,"value":758},{"type":328,"tag":347,"props":1070,"children":1071},{"class":349,"line":625},[1072,1076,1080,1084,1088,1092,1096,1100,1104,1108],{"type":328,"tag":347,"props":1073,"children":1074},{"style":412},[1075],{"type":334,"value":767},{"type":328,"tag":347,"props":1077,"children":1078},{"style":424},[1079],{"type":334,"value":707},{"type":328,"tag":347,"props":1081,"children":1082},{"style":436},[1083],{"type":334,"value":651},{"type":328,"tag":347,"props":1085,"children":1086},{"style":615},[1087],{"type":334,"value":780},{"type":328,"tag":347,"props":1089,"children":1090},{"style":436},[1091],{"type":334,"value":439},{"type":328,"tag":347,"props":1093,"children":1094},{"style":424},[1095],{"type":334,"value":744},{"type":328,"tag":347,"props":1097,"children":1098},{"style":436},[1099],{"type":334,"value":651},{"type":328,"tag":347,"props":1101,"children":1102},{"style":615},[1103],{"type":334,"value":797},{"type":328,"tag":347,"props":1105,"children":1106},{"style":424},[1107],{"type":334,"value":802},{"type":328,"tag":347,"props":1109,"children":1110},{"style":436},[1111],{"type":334,"value":454},{"type":328,"tag":347,"props":1113,"children":1114},{"class":349,"line":640},[1115,1119],{"type":328,"tag":347,"props":1116,"children":1117},{"style":424},[1118],{"type":334,"value":815},{"type":328,"tag":347,"props":1120,"children":1121},{"style":436},[1122],{"type":334,"value":820},{"type":328,"tag":347,"props":1124,"children":1125},{"class":349,"line":664},[1126,1131,1136,1140,1145,1149,1153,1157],{"type":328,"tag":347,"props":1127,"children":1128},{"style":424},[1129],{"type":334,"value":1130},"    [",{"type":328,"tag":347,"props":1132,"children":1133},{"style":406},[1134],{"type":334,"value":1135},"Symbol",{"type":328,"tag":347,"props":1137,"children":1138},{"style":476},[1139],{"type":334,"value":479},{"type":328,"tag":347,"props":1141,"children":1142},{"style":406},[1143],{"type":334,"value":1144},"iterator",{"type":328,"tag":347,"props":1146,"children":1147},{"style":424},[1148],{"type":334,"value":735},{"type":328,"tag":347,"props":1150,"children":1151},{"style":436},[1152],{"type":334,"value":651},{"type":328,"tag":347,"props":1154,"children":1155},{"style":400},[1156],{"type":334,"value":656},{"type":328,"tag":347,"props":1158,"children":1159},{"style":424},[1160],{"type":334,"value":661},{"type":328,"tag":347,"props":1162,"children":1163},{"class":349,"line":696},[1164,1169,1173,1178,1182,1187,1191,1197,1202],{"type":328,"tag":347,"props":1165,"children":1166},{"style":406},[1167],{"type":334,"value":1168},"      console",{"type":328,"tag":347,"props":1170,"children":1171},{"style":476},[1172],{"type":334,"value":479},{"type":328,"tag":347,"props":1174,"children":1175},{"style":418},[1176],{"type":334,"value":1177},"log",{"type":328,"tag":347,"props":1179,"children":1180},{"style":424},[1181],{"type":334,"value":583},{"type":328,"tag":347,"props":1183,"children":1184},{"style":430},[1185],{"type":334,"value":1186},"\"返回的迭代器:\"",{"type":328,"tag":347,"props":1188,"children":1189},{"style":436},[1190],{"type":334,"value":439},{"type":328,"tag":347,"props":1192,"children":1194},{"style":1193},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[1195],{"type":334,"value":1196}," this",{"type":328,"tag":347,"props":1198,"children":1199},{"style":424},[1200],{"type":334,"value":1201},")",{"type":328,"tag":347,"props":1203,"children":1204},{"style":436},[1205],{"type":334,"value":454},{"type":328,"tag":347,"props":1207,"children":1208},{"class":349,"line":761},[1209,1213,1217,1221],{"type":328,"tag":347,"props":1210,"children":1211},{"style":629},[1212],{"type":334,"value":670},{"type":328,"tag":347,"props":1214,"children":1215},{"style":1193},[1216],{"type":334,"value":1196},{"type":328,"tag":347,"props":1218,"children":1219},{"style":436},[1220],{"type":334,"value":494},{"type":328,"tag":347,"props":1222,"children":1223},{"style":354},[1224],{"type":334,"value":1225}," // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n",{"type":328,"tag":347,"props":1227,"children":1228},{"class":349,"line":809},[1229,1233],{"type":328,"tag":347,"props":1230,"children":1231},{"style":424},[1232],{"type":334,"value":815},{"type":328,"tag":347,"props":1234,"children":1235},{"style":436},[1236],{"type":334,"value":820},{"type":328,"tag":347,"props":1238,"children":1239},{"class":349,"line":823},[1240,1244],{"type":328,"tag":347,"props":1241,"children":1242},{"style":424},[1243],{"type":334,"value":829},{"type":328,"tag":347,"props":1245,"children":1246},{"style":436},[1247],{"type":334,"value":454},{"type":328,"tag":347,"props":1249,"children":1250},{"class":349,"line":836},[1251],{"type":328,"tag":347,"props":1252,"children":1253},{"style":424},[1254],{"type":334,"value":842},{"type":328,"tag":347,"props":1256,"children":1258},{"class":349,"line":1257},22,[1259],{"type":328,"tag":347,"props":1260,"children":1261},{"emptyLinePlaceholder":461},[1262],{"type":334,"value":464},{"type":328,"tag":347,"props":1264,"children":1266},{"class":349,"line":1265},23,[1267,1271,1276,1280,1284,1288,1293,1297,1302,1306,1311,1315],{"type":328,"tag":347,"props":1268,"children":1269},{"style":400},[1270],{"type":334,"value":403},{"type":328,"tag":347,"props":1272,"children":1273},{"style":406},[1274],{"type":334,"value":1275}," iterator",{"type":328,"tag":347,"props":1277,"children":1278},{"style":412},[1279],{"type":334,"value":415},{"type":328,"tag":347,"props":1281,"children":1282},{"style":418},[1283],{"type":334,"value":921},{"type":328,"tag":347,"props":1285,"children":1286},{"style":424},[1287],{"type":334,"value":427},{"type":328,"tag":347,"props":1289,"children":1290},{"style":615},[1291],{"type":334,"value":1292},"1",{"type":328,"tag":347,"props":1294,"children":1295},{"style":436},[1296],{"type":334,"value":439},{"type":328,"tag":347,"props":1298,"children":1299},{"style":615},[1300],{"type":334,"value":1301}," 2",{"type":328,"tag":347,"props":1303,"children":1304},{"style":436},[1305],{"type":334,"value":439},{"type":328,"tag":347,"props":1307,"children":1308},{"style":615},[1309],{"type":334,"value":1310}," 3",{"type":328,"tag":347,"props":1312,"children":1313},{"style":424},[1314],{"type":334,"value":449},{"type":328,"tag":347,"props":1316,"children":1317},{"style":436},[1318],{"type":334,"value":454},{"type":328,"tag":347,"props":1320,"children":1322},{"class":349,"line":1321},24,[1323,1328,1332,1336,1340,1345,1349,1353],{"type":328,"tag":347,"props":1324,"children":1325},{"style":406},[1326],{"type":334,"value":1327},"console",{"type":328,"tag":347,"props":1329,"children":1330},{"style":476},[1331],{"type":334,"value":479},{"type":328,"tag":347,"props":1333,"children":1334},{"style":418},[1335],{"type":334,"value":1177},{"type":328,"tag":347,"props":1337,"children":1338},{"style":424},[1339],{"type":334,"value":583},{"type":328,"tag":347,"props":1341,"children":1342},{"style":412},[1343],{"type":334,"value":1344},"...",{"type":328,"tag":347,"props":1346,"children":1347},{"style":406},[1348],{"type":334,"value":1144},{"type":328,"tag":347,"props":1350,"children":1351},{"style":424},[1352],{"type":334,"value":1201},{"type":328,"tag":347,"props":1354,"children":1355},{"style":436},[1356],{"type":334,"value":454},{"type":328,"tag":1358,"props":1359,"children":1360},"style",{},[1361],{"type":334,"value":1362},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":323,"searchDepth":387,"depth":387,"links":1364},[1365,1366],{"id":331,"depth":360,"text":331},{"id":845,"depth":360,"text":845},"markdown","content:2.code:2.source:1.native-api:7.iterator.md","content","2.code/2.source/1.native-api/7.iterator.md","md",[1373,1375],{"_path":289,"title":288,"description":1374},"JSON.stringify() 方法将一个 js 对象或值转换为 json 字符串，如果指定了一个 replacer 函数，则可以选择性地替换值，或者指定的 replacer 是数组，则可选择性地仅包含数组指定的属性。",{"_path":299,"title":298,"description":323},1712112512880]