[{"data":1,"prerenderedAt":1415},["Reactive",2],{"navigation":3,"/code/source/native-api/iterator":359,"/code/source/native-api/iterator-surround":1411},[4,32],{"title":5,"_path":6,"children":7},"八股文","/endorsement",[8,19],{"title":9,"_path":10,"children":11},"构建工具","/endorsement/build-tools",[12],{"title":13,"_path":14,"children":15},"Webpack","/endorsement/build-tools/webpack",[16],{"title":17,"_path":18},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":20,"_path":21,"children":22},"Html","/endorsement/html",[23,26,29],{"title":24,"_path":25},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":27,"_path":28},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":30,"_path":31},"离线存储","/endorsement/html/offline-storage",{"title":33,"_path":34,"children":35},"代码","/code",[36,269,318],{"title":37,"_path":38,"children":39},"算法","/code/algorithm",[40,42,55],{"title":41,"_path":38},"刷题索引",{"title":43,"_path":44,"children":45},"剑指 offer","/code/algorithm/sword-ofter",[46,49,52],{"title":47,"_path":48},"LCR.140 训练计划 II","/code/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":50,"_path":51},"LCR 169. 招式拆解 II","/code/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":53,"_path":54},"LCR 187. 破冰游戏","/code/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":56,"_path":57,"children":58},"力扣 leetCode","/code/algorithm/leetcode",[59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263,266],{"title":60,"_path":61},"No.1 两数相加","/code/algorithm/leetcode/two-sum",{"title":63,"_path":64},"No.2 两数相加","/code/algorithm/leetcode/add-two-numbers",{"title":66,"_path":67},"No.3 无重复字符的最长子串","/code/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":69,"_path":70},"No.4 寻找两个正序数组的中位数","/code/algorithm/leetcode/median-of-two-sorted-arrays",{"title":72,"_path":73},"No.5 最长回文子串","/code/algorithm/leetcode/longest-palindromic-substring",{"title":75,"_path":76},"No.7 整数反转","/code/algorithm/leetcode/reverse-integer",{"title":78,"_path":79},"No.9 回文数","/code/algorithm/leetcode/palindrome-number",{"title":81,"_path":82},"No.14 最长公共前缀","/code/algorithm/leetcode/longest-common-prefix",{"title":84,"_path":85},"No.15 三数之和","/code/algorithm/leetcode/3sum",{"title":87,"_path":88},"No.20 有效的括号","/code/algorithm/leetcode/valid-parentheses",{"title":90,"_path":91},"No.21 合并两个有序链表","/code/algorithm/leetcode/merge-two-sorted-lists",{"title":93,"_path":94},"No.22 括号生成","/code/algorithm/leetcode/generate-parentheses",{"title":96,"_path":97},"No.23 合并 K 个升序链表","/code/algorithm/leetcode/merge-k-sorted-lists",{"title":99,"_path":100},"No.24 两两交换链表中的节点","/code/algorithm/leetcode/swap-nodes-in-pairs",{"title":102,"_path":103},"No.25 K 个一组翻转链表","/code/algorithm/leetcode/reverse-nodes-in-k-group",{"title":105,"_path":106},"No.31 下一个排列","/code/algorithm/leetcode/next-permutation",{"title":108,"_path":109},"No.32 最长有效括号","/code/algorithm/leetcode/longest-valid-parentheses",{"title":111,"_path":112},"No.33 搜索旋转排序数组","/code/algorithm/leetcode/search-in-rotated-sorted-array",{"title":114,"_path":115},"No.34 在排序数组中查找元素的第一个和最后一个位置","/code/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":117,"_path":118},"No.39 组合求和","/code/algorithm/leetcode/combination-sum",{"title":120,"_path":121},"No.42 接雨水","/code/algorithm/leetcode/trapping-rain-water",{"title":123,"_path":124},"No.46 全排列","/code/algorithm/leetcode/permutations",{"title":126,"_path":127},"No.53 最大子序和","/code/algorithm/leetcode/maximum-subarray",{"title":129,"_path":130},"No.56 合并区间","/code/algorithm/leetcode/merge-intervals",{"title":132,"_path":133},"No.67 二进制求和","/code/algorithm/leetcode/add-binary",{"title":135,"_path":136},"No.69 x 的平方根","/code/algorithm/leetcode/sqrtx",{"title":138,"_path":139},"No.70 爬楼梯","/code/algorithm/leetcode/climbing-stairs",{"title":141,"_path":142},"No.88 合并两个有序数组","/code/algorithm/leetcode/merge-sorted-array",{"title":144,"_path":145},"No.92 反转链表 II","/code/algorithm/leetcode/reverse-linked-list-ii",{"title":147,"_path":148},"No.94 二叉树的中序遍历","/code/algorithm/leetcode/binary-tree-inorder-traversal",{"title":150,"_path":151},"No.101 对称二叉树","/code/algorithm/leetcode/symmetric-tree",{"title":153,"_path":154},"No.102 二叉树的层序遍历","/code/algorithm/leetcode/binary-tree-level-order-traversal",{"title":156,"_path":157},"No.104 二叉树的最大深度","/code/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":159,"_path":160},"No.111 二叉树的最小深度","/code/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":162,"_path":163},"No.112 路径总和","/code/algorithm/leetcode/path-sum",{"title":165,"_path":166},"No.121 买股票的最佳时机","/code/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":168,"_path":169},"No.129 求根到叶子节点数字之和","/code/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":171,"_path":172},"No.136 只出现一次的数字","/code/algorithm/leetcode/single-number",{"title":174,"_path":175},"No.141 环型链表","/code/algorithm/leetcode/linked-list-cycle",{"title":177,"_path":178},"No.146 LRU 缓存","/code/algorithm/leetcode/lru-cache",{"title":180,"_path":181},"No.151 反转字符串中的单词","/code/algorithm/leetcode/reverse-words-in-a-string",{"title":183,"_path":184},"No.153 寻找旋转排序数组中的最小值","/code/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":186,"_path":187},"No.155 最小栈","/code/algorithm/leetcode/min-stack",{"title":189,"_path":190},"No.160 相交链表","/code/algorithm/leetcode/intersection-of-two-linked-lists",{"title":192,"_path":193},"No.162 寻找峰值","/code/algorithm/leetcode/find-peak-element",{"title":195,"_path":196},"No.165 比较版本号","/code/algorithm/leetcode/compare-version-numbers",{"title":198,"_path":199},"No.169 多数元素","/code/algorithm/leetcode/majority-element",{"title":201,"_path":202},"No.200 岛屿数量","/code/algorithm/leetcode/number-of-islands",{"title":204,"_path":205},"No.206 反转链表","/code/algorithm/leetcode/reverse-linked-list",{"title":207,"_path":208},"No.209 长度最小的子数组","/code/algorithm/leetcode/minimum-size-subarray-sum",{"title":210,"_path":211},"No.215 数组中的第K个最大元素","/code/algorithm/leetcode/kth-largest-element-in-an-array",{"title":213,"_path":214},"No.226 翻转二叉树","/code/algorithm/leetcode/invert-binary-tree",{"title":216,"_path":217},"No.238 除自身以外数组的乘积","/code/algorithm/leetcode/product-of-array-except-self",{"title":219,"_path":220},"No.322 零钱兑换","/code/algorithm/leetcode/coin-change",{"title":222,"_path":223},"No.334 递增的三元子序列","/code/algorithm/leetcode/increasing-triplet-subsequence",{"title":225,"_path":226},"No.344 反转字符串","/code/algorithm/leetcode/reverse-string",{"title":228,"_path":229},"No.345 反转字符串中的元音字母","/code/algorithm/leetcode/reverse-vowels-of-a-string",{"title":231,"_path":232},"No.384 打乱数组","/code/algorithm/leetcode/shuffle-an-array",{"title":234,"_path":235},"No.415 字符串相加","/code/algorithm/leetcode/add-strings",{"title":237,"_path":238},"No.443 压缩字符串","/code/algorithm/leetcode/string-compression",{"title":240,"_path":241},"No.509 斐波那契数","/code/algorithm/leetcode/fibonacci-number",{"title":243,"_path":244},"No.605 种花问题","/code/algorithm/leetcode/can-place-flowers",{"title":246,"_path":247},"No.617 合并二叉树","/code/algorithm/leetcode/merge-two-binary-trees",{"title":249,"_path":250},"No.678 有效的括号字符串","/code/algorithm/leetcode/valid-parenthesis-string",{"title":252,"_path":253},"No.704 二分查找","/code/algorithm/leetcode/binary-search",{"title":255,"_path":256},"No.912 排序数组","/code/algorithm/leetcode/sort-an-array",{"title":258,"_path":259},"No.1071 字符串的最大公因子","/code/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":261,"_path":262},"No.1143 最长公共子序列","/code/algorithm/leetcode/longest-common-subsequence",{"title":264,"_path":265},"No.1431 拥有最多糖果的孩子","/code/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":267,"_path":268},"No.1768 交替合并字符串","/code/algorithm/leetcode/merge-strings-alternately",{"title":270,"_path":271,"children":272},"源码实现","/code/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/code/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/code/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/code/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/code/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/code/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/code/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/code/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/code/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/code/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/code/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/code/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/code/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/code/source/string",[315],{"title":316,"_path":317},"repeat()","/code/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/code/scene",[322,344,347,350,353,356],{"title":323,"_path":324,"children":325},"Promise","/code/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/code/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/code/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/code/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/code/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/code/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/code/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/code/scene/calcuate-object-bytes",{"title":348,"_path":349},"lodash.get","/code/scene/lodash-get",{"title":351,"_path":352},"记忆化请求函数 - 可缓存请求函数","/code/scene/memorize-request",{"title":354,"_path":355},"sku 算法实现","/code/scene/sku",{"title":357,"_path":358},"长列表虚拟滚动","/code/scene/vitrual-scroll-list",{"_path":297,"_dir":360,"_draft":361,"_partial":361,"_locale":362,"title":296,"description":362,"body":363,"_type":1406,"_id":1407,"_source":1408,"_file":1409,"_extension":1410},"native-api",false,"",{"type":364,"children":365,"toc":1402},"root",[366,374,882,887,1396],{"type":367,"tag":368,"props":369,"children":371},"element","h2",{"id":370},"实现迭代器函数",[372],{"type":373,"value":370},"text",{"type":367,"tag":375,"props":376,"children":380},"pre",{"className":377,"code":378,"language":379,"meta":362,"style":362},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/*\n * 这是一个手写的迭代器(Iterator)\n * 满足迭代器协议的对象。\n * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n */\nvar it = makeIterator([\"a\", \"b\"]);\n\nit.next(); // { value: \"a\", done: false }\nit.next(); // { value: \"b\", done: false }\nit.next(); // { value: undefined, done: true }\n\nfunction makeIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n  };\n}\n","js",[381],{"type":367,"tag":382,"props":383,"children":384},"code",{"__ignoreMap":362},[385,397,406,415,424,433,494,504,539,568,597,605,634,662,677,701,733,798,846,860,873],{"type":367,"tag":386,"props":387,"children":390},"span",{"class":388,"line":389},"line",1,[391],{"type":367,"tag":386,"props":392,"children":394},{"style":393},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[395],{"type":373,"value":396},"/*\n",{"type":367,"tag":386,"props":398,"children":400},{"class":388,"line":399},2,[401],{"type":367,"tag":386,"props":402,"children":403},{"style":393},[404],{"type":373,"value":405}," * 这是一个手写的迭代器(Iterator)\n",{"type":367,"tag":386,"props":407,"children":409},{"class":388,"line":408},3,[410],{"type":367,"tag":386,"props":411,"children":412},{"style":393},[413],{"type":373,"value":414}," * 满足迭代器协议的对象。\n",{"type":367,"tag":386,"props":416,"children":418},{"class":388,"line":417},4,[419],{"type":367,"tag":386,"props":420,"children":421},{"style":393},[422],{"type":373,"value":423}," * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n",{"type":367,"tag":386,"props":425,"children":427},{"class":388,"line":426},5,[428],{"type":367,"tag":386,"props":429,"children":430},{"style":393},[431],{"type":373,"value":432}," */\n",{"type":367,"tag":386,"props":434,"children":436},{"class":388,"line":435},6,[437,443,449,455,461,467,473,479,484,489],{"type":367,"tag":386,"props":438,"children":440},{"style":439},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[441],{"type":373,"value":442},"var",{"type":367,"tag":386,"props":444,"children":446},{"style":445},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[447],{"type":373,"value":448}," it",{"type":367,"tag":386,"props":450,"children":452},{"style":451},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[453],{"type":373,"value":454}," =",{"type":367,"tag":386,"props":456,"children":458},{"style":457},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[459],{"type":373,"value":460}," makeIterator",{"type":367,"tag":386,"props":462,"children":464},{"style":463},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[465],{"type":373,"value":466},"([",{"type":367,"tag":386,"props":468,"children":470},{"style":469},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[471],{"type":373,"value":472},"\"a\"",{"type":367,"tag":386,"props":474,"children":476},{"style":475},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[477],{"type":373,"value":478},",",{"type":367,"tag":386,"props":480,"children":481},{"style":469},[482],{"type":373,"value":483}," \"b\"",{"type":367,"tag":386,"props":485,"children":486},{"style":463},[487],{"type":373,"value":488},"])",{"type":367,"tag":386,"props":490,"children":491},{"style":475},[492],{"type":373,"value":493},";\n",{"type":367,"tag":386,"props":495,"children":497},{"class":388,"line":496},7,[498],{"type":367,"tag":386,"props":499,"children":501},{"emptyLinePlaceholder":500},true,[502],{"type":373,"value":503},"\n",{"type":367,"tag":386,"props":505,"children":507},{"class":388,"line":506},8,[508,513,519,524,529,534],{"type":367,"tag":386,"props":509,"children":510},{"style":445},[511],{"type":373,"value":512},"it",{"type":367,"tag":386,"props":514,"children":516},{"style":515},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[517],{"type":373,"value":518},".",{"type":367,"tag":386,"props":520,"children":521},{"style":457},[522],{"type":373,"value":523},"next",{"type":367,"tag":386,"props":525,"children":526},{"style":463},[527],{"type":373,"value":528},"()",{"type":367,"tag":386,"props":530,"children":531},{"style":475},[532],{"type":373,"value":533},";",{"type":367,"tag":386,"props":535,"children":536},{"style":393},[537],{"type":373,"value":538}," // { value: \"a\", done: false }\n",{"type":367,"tag":386,"props":540,"children":542},{"class":388,"line":541},9,[543,547,551,555,559,563],{"type":367,"tag":386,"props":544,"children":545},{"style":445},[546],{"type":373,"value":512},{"type":367,"tag":386,"props":548,"children":549},{"style":515},[550],{"type":373,"value":518},{"type":367,"tag":386,"props":552,"children":553},{"style":457},[554],{"type":373,"value":523},{"type":367,"tag":386,"props":556,"children":557},{"style":463},[558],{"type":373,"value":528},{"type":367,"tag":386,"props":560,"children":561},{"style":475},[562],{"type":373,"value":533},{"type":367,"tag":386,"props":564,"children":565},{"style":393},[566],{"type":373,"value":567}," // { value: \"b\", done: false }\n",{"type":367,"tag":386,"props":569,"children":571},{"class":388,"line":570},10,[572,576,580,584,588,592],{"type":367,"tag":386,"props":573,"children":574},{"style":445},[575],{"type":373,"value":512},{"type":367,"tag":386,"props":577,"children":578},{"style":515},[579],{"type":373,"value":518},{"type":367,"tag":386,"props":581,"children":582},{"style":457},[583],{"type":373,"value":523},{"type":367,"tag":386,"props":585,"children":586},{"style":463},[587],{"type":373,"value":528},{"type":367,"tag":386,"props":589,"children":590},{"style":475},[591],{"type":373,"value":533},{"type":367,"tag":386,"props":593,"children":594},{"style":393},[595],{"type":373,"value":596}," // { value: undefined, done: true }\n",{"type":367,"tag":386,"props":598,"children":600},{"class":388,"line":599},11,[601],{"type":367,"tag":386,"props":602,"children":603},{"emptyLinePlaceholder":500},[604],{"type":373,"value":503},{"type":367,"tag":386,"props":606,"children":608},{"class":388,"line":607},12,[609,614,618,623,629],{"type":367,"tag":386,"props":610,"children":611},{"style":439},[612],{"type":373,"value":613},"function",{"type":367,"tag":386,"props":615,"children":616},{"style":457},[617],{"type":373,"value":460},{"type":367,"tag":386,"props":619,"children":620},{"style":463},[621],{"type":373,"value":622},"(",{"type":367,"tag":386,"props":624,"children":626},{"style":625},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[627],{"type":373,"value":628},"array",{"type":367,"tag":386,"props":630,"children":631},{"style":463},[632],{"type":373,"value":633},") {\n",{"type":367,"tag":386,"props":635,"children":637},{"class":388,"line":636},13,[638,643,648,652,658],{"type":367,"tag":386,"props":639,"children":640},{"style":439},[641],{"type":373,"value":642},"  var",{"type":367,"tag":386,"props":644,"children":645},{"style":445},[646],{"type":373,"value":647}," nextIndex",{"type":367,"tag":386,"props":649,"children":650},{"style":451},[651],{"type":373,"value":454},{"type":367,"tag":386,"props":653,"children":655},{"style":654},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[656],{"type":373,"value":657}," 0",{"type":367,"tag":386,"props":659,"children":660},{"style":475},[661],{"type":373,"value":493},{"type":367,"tag":386,"props":663,"children":665},{"class":388,"line":664},14,[666,672],{"type":367,"tag":386,"props":667,"children":669},{"style":668},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[670],{"type":373,"value":671},"  return",{"type":367,"tag":386,"props":673,"children":674},{"style":463},[675],{"type":373,"value":676}," {\n",{"type":367,"tag":386,"props":678,"children":680},{"class":388,"line":679},15,[681,686,691,696],{"type":367,"tag":386,"props":682,"children":683},{"style":457},[684],{"type":373,"value":685},"    next",{"type":367,"tag":386,"props":687,"children":688},{"style":475},[689],{"type":373,"value":690},":",{"type":367,"tag":386,"props":692,"children":693},{"style":439},[694],{"type":373,"value":695}," function",{"type":367,"tag":386,"props":697,"children":698},{"style":463},[699],{"type":373,"value":700}," () {\n",{"type":367,"tag":386,"props":702,"children":704},{"class":388,"line":703},16,[705,710,714,719,724,728],{"type":367,"tag":386,"props":706,"children":707},{"style":668},[708],{"type":373,"value":709},"      return",{"type":367,"tag":386,"props":711,"children":712},{"style":445},[713],{"type":373,"value":647},{"type":367,"tag":386,"props":715,"children":716},{"style":451},[717],{"type":373,"value":718}," \u003C",{"type":367,"tag":386,"props":720,"children":721},{"style":445},[722],{"type":373,"value":723}," array",{"type":367,"tag":386,"props":725,"children":726},{"style":515},[727],{"type":373,"value":518},{"type":367,"tag":386,"props":729,"children":730},{"style":463},[731],{"type":373,"value":732},"length\n",{"type":367,"tag":386,"props":734,"children":736},{"class":388,"line":735},17,[737,742,747,751,755,760,765,770,775,779,784,788,793],{"type":367,"tag":386,"props":738,"children":739},{"style":451},[740],{"type":373,"value":741},"        ?",{"type":367,"tag":386,"props":743,"children":744},{"style":463},[745],{"type":373,"value":746}," { value",{"type":367,"tag":386,"props":748,"children":749},{"style":475},[750],{"type":373,"value":690},{"type":367,"tag":386,"props":752,"children":753},{"style":445},[754],{"type":373,"value":723},{"type":367,"tag":386,"props":756,"children":757},{"style":463},[758],{"type":373,"value":759},"[",{"type":367,"tag":386,"props":761,"children":762},{"style":445},[763],{"type":373,"value":764},"nextIndex",{"type":367,"tag":386,"props":766,"children":767},{"style":451},[768],{"type":373,"value":769},"++",{"type":367,"tag":386,"props":771,"children":772},{"style":463},[773],{"type":373,"value":774},"]",{"type":367,"tag":386,"props":776,"children":777},{"style":475},[778],{"type":373,"value":478},{"type":367,"tag":386,"props":780,"children":781},{"style":463},[782],{"type":373,"value":783}," done",{"type":367,"tag":386,"props":785,"children":786},{"style":475},[787],{"type":373,"value":690},{"type":367,"tag":386,"props":789,"children":790},{"style":654},[791],{"type":373,"value":792}," false",{"type":367,"tag":386,"props":794,"children":795},{"style":463},[796],{"type":373,"value":797}," }\n",{"type":367,"tag":386,"props":799,"children":801},{"class":388,"line":800},18,[802,807,811,815,820,824,828,832,837,842],{"type":367,"tag":386,"props":803,"children":804},{"style":451},[805],{"type":373,"value":806},"        :",{"type":367,"tag":386,"props":808,"children":809},{"style":463},[810],{"type":373,"value":746},{"type":367,"tag":386,"props":812,"children":813},{"style":475},[814],{"type":373,"value":690},{"type":367,"tag":386,"props":816,"children":817},{"style":654},[818],{"type":373,"value":819}," undefined",{"type":367,"tag":386,"props":821,"children":822},{"style":475},[823],{"type":373,"value":478},{"type":367,"tag":386,"props":825,"children":826},{"style":463},[827],{"type":373,"value":783},{"type":367,"tag":386,"props":829,"children":830},{"style":475},[831],{"type":373,"value":690},{"type":367,"tag":386,"props":833,"children":834},{"style":654},[835],{"type":373,"value":836}," true",{"type":367,"tag":386,"props":838,"children":839},{"style":463},[840],{"type":373,"value":841}," }",{"type":367,"tag":386,"props":843,"children":844},{"style":475},[845],{"type":373,"value":493},{"type":367,"tag":386,"props":847,"children":849},{"class":388,"line":848},19,[850,855],{"type":367,"tag":386,"props":851,"children":852},{"style":463},[853],{"type":373,"value":854},"    }",{"type":367,"tag":386,"props":856,"children":857},{"style":475},[858],{"type":373,"value":859},",\n",{"type":367,"tag":386,"props":861,"children":863},{"class":388,"line":862},20,[864,869],{"type":367,"tag":386,"props":865,"children":866},{"style":463},[867],{"type":373,"value":868},"  }",{"type":367,"tag":386,"props":870,"children":871},{"style":475},[872],{"type":373,"value":493},{"type":367,"tag":386,"props":874,"children":876},{"class":388,"line":875},21,[877],{"type":367,"tag":386,"props":878,"children":879},{"style":463},[880],{"type":373,"value":881},"}\n",{"type":367,"tag":368,"props":883,"children":885},{"id":884},"可迭代的迭代器",[886],{"type":373,"value":884},{"type":367,"tag":375,"props":888,"children":890},{"className":377,"code":889,"language":379,"meta":362,"style":362},"/**\n * 使迭代器可迭代\n * makeIterator 函数生成的迭代器并没有实现可迭代协议\n * 所以不能在 for...of 等语法中使用。\n * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n * 从新名了下函数名称 createIterator\n */\nfunction createIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n    [Symbol.iterator]: function () {\n      console.log(\"返回的迭代器:\", this);\n      return this; // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n    },\n  };\n}\n\nvar iterator = createIterator([1, 2, 3]);\nconsole.log(...iterator);\n",[891],{"type":367,"tag":382,"props":892,"children":893},{"__ignoreMap":362},[894,902,910,918,926,934,942,949,973,996,1007,1026,1053,1108,1151,1162,1200,1245,1265,1276,1287,1294,1302,1358],{"type":367,"tag":386,"props":895,"children":896},{"class":388,"line":389},[897],{"type":367,"tag":386,"props":898,"children":899},{"style":393},[900],{"type":373,"value":901},"/**\n",{"type":367,"tag":386,"props":903,"children":904},{"class":388,"line":399},[905],{"type":367,"tag":386,"props":906,"children":907},{"style":393},[908],{"type":373,"value":909}," * 使迭代器可迭代\n",{"type":367,"tag":386,"props":911,"children":912},{"class":388,"line":408},[913],{"type":367,"tag":386,"props":914,"children":915},{"style":393},[916],{"type":373,"value":917}," * makeIterator 函数生成的迭代器并没有实现可迭代协议\n",{"type":367,"tag":386,"props":919,"children":920},{"class":388,"line":417},[921],{"type":367,"tag":386,"props":922,"children":923},{"style":393},[924],{"type":373,"value":925}," * 所以不能在 for...of 等语法中使用。\n",{"type":367,"tag":386,"props":927,"children":928},{"class":388,"line":426},[929],{"type":367,"tag":386,"props":930,"children":931},{"style":393},[932],{"type":373,"value":933}," * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n",{"type":367,"tag":386,"props":935,"children":936},{"class":388,"line":435},[937],{"type":367,"tag":386,"props":938,"children":939},{"style":393},[940],{"type":373,"value":941}," * 从新名了下函数名称 createIterator\n",{"type":367,"tag":386,"props":943,"children":944},{"class":388,"line":496},[945],{"type":367,"tag":386,"props":946,"children":947},{"style":393},[948],{"type":373,"value":432},{"type":367,"tag":386,"props":950,"children":951},{"class":388,"line":506},[952,956,961,965,969],{"type":367,"tag":386,"props":953,"children":954},{"style":439},[955],{"type":373,"value":613},{"type":367,"tag":386,"props":957,"children":958},{"style":457},[959],{"type":373,"value":960}," createIterator",{"type":367,"tag":386,"props":962,"children":963},{"style":463},[964],{"type":373,"value":622},{"type":367,"tag":386,"props":966,"children":967},{"style":625},[968],{"type":373,"value":628},{"type":367,"tag":386,"props":970,"children":971},{"style":463},[972],{"type":373,"value":633},{"type":367,"tag":386,"props":974,"children":975},{"class":388,"line":541},[976,980,984,988,992],{"type":367,"tag":386,"props":977,"children":978},{"style":439},[979],{"type":373,"value":642},{"type":367,"tag":386,"props":981,"children":982},{"style":445},[983],{"type":373,"value":647},{"type":367,"tag":386,"props":985,"children":986},{"style":451},[987],{"type":373,"value":454},{"type":367,"tag":386,"props":989,"children":990},{"style":654},[991],{"type":373,"value":657},{"type":367,"tag":386,"props":993,"children":994},{"style":475},[995],{"type":373,"value":493},{"type":367,"tag":386,"props":997,"children":998},{"class":388,"line":570},[999,1003],{"type":367,"tag":386,"props":1000,"children":1001},{"style":668},[1002],{"type":373,"value":671},{"type":367,"tag":386,"props":1004,"children":1005},{"style":463},[1006],{"type":373,"value":676},{"type":367,"tag":386,"props":1008,"children":1009},{"class":388,"line":599},[1010,1014,1018,1022],{"type":367,"tag":386,"props":1011,"children":1012},{"style":457},[1013],{"type":373,"value":685},{"type":367,"tag":386,"props":1015,"children":1016},{"style":475},[1017],{"type":373,"value":690},{"type":367,"tag":386,"props":1019,"children":1020},{"style":439},[1021],{"type":373,"value":695},{"type":367,"tag":386,"props":1023,"children":1024},{"style":463},[1025],{"type":373,"value":700},{"type":367,"tag":386,"props":1027,"children":1028},{"class":388,"line":607},[1029,1033,1037,1041,1045,1049],{"type":367,"tag":386,"props":1030,"children":1031},{"style":668},[1032],{"type":373,"value":709},{"type":367,"tag":386,"props":1034,"children":1035},{"style":445},[1036],{"type":373,"value":647},{"type":367,"tag":386,"props":1038,"children":1039},{"style":451},[1040],{"type":373,"value":718},{"type":367,"tag":386,"props":1042,"children":1043},{"style":445},[1044],{"type":373,"value":723},{"type":367,"tag":386,"props":1046,"children":1047},{"style":515},[1048],{"type":373,"value":518},{"type":367,"tag":386,"props":1050,"children":1051},{"style":463},[1052],{"type":373,"value":732},{"type":367,"tag":386,"props":1054,"children":1055},{"class":388,"line":636},[1056,1060,1064,1068,1072,1076,1080,1084,1088,1092,1096,1100,1104],{"type":367,"tag":386,"props":1057,"children":1058},{"style":451},[1059],{"type":373,"value":741},{"type":367,"tag":386,"props":1061,"children":1062},{"style":463},[1063],{"type":373,"value":746},{"type":367,"tag":386,"props":1065,"children":1066},{"style":475},[1067],{"type":373,"value":690},{"type":367,"tag":386,"props":1069,"children":1070},{"style":445},[1071],{"type":373,"value":723},{"type":367,"tag":386,"props":1073,"children":1074},{"style":463},[1075],{"type":373,"value":759},{"type":367,"tag":386,"props":1077,"children":1078},{"style":445},[1079],{"type":373,"value":764},{"type":367,"tag":386,"props":1081,"children":1082},{"style":451},[1083],{"type":373,"value":769},{"type":367,"tag":386,"props":1085,"children":1086},{"style":463},[1087],{"type":373,"value":774},{"type":367,"tag":386,"props":1089,"children":1090},{"style":475},[1091],{"type":373,"value":478},{"type":367,"tag":386,"props":1093,"children":1094},{"style":463},[1095],{"type":373,"value":783},{"type":367,"tag":386,"props":1097,"children":1098},{"style":475},[1099],{"type":373,"value":690},{"type":367,"tag":386,"props":1101,"children":1102},{"style":654},[1103],{"type":373,"value":792},{"type":367,"tag":386,"props":1105,"children":1106},{"style":463},[1107],{"type":373,"value":797},{"type":367,"tag":386,"props":1109,"children":1110},{"class":388,"line":664},[1111,1115,1119,1123,1127,1131,1135,1139,1143,1147],{"type":367,"tag":386,"props":1112,"children":1113},{"style":451},[1114],{"type":373,"value":806},{"type":367,"tag":386,"props":1116,"children":1117},{"style":463},[1118],{"type":373,"value":746},{"type":367,"tag":386,"props":1120,"children":1121},{"style":475},[1122],{"type":373,"value":690},{"type":367,"tag":386,"props":1124,"children":1125},{"style":654},[1126],{"type":373,"value":819},{"type":367,"tag":386,"props":1128,"children":1129},{"style":475},[1130],{"type":373,"value":478},{"type":367,"tag":386,"props":1132,"children":1133},{"style":463},[1134],{"type":373,"value":783},{"type":367,"tag":386,"props":1136,"children":1137},{"style":475},[1138],{"type":373,"value":690},{"type":367,"tag":386,"props":1140,"children":1141},{"style":654},[1142],{"type":373,"value":836},{"type":367,"tag":386,"props":1144,"children":1145},{"style":463},[1146],{"type":373,"value":841},{"type":367,"tag":386,"props":1148,"children":1149},{"style":475},[1150],{"type":373,"value":493},{"type":367,"tag":386,"props":1152,"children":1153},{"class":388,"line":679},[1154,1158],{"type":367,"tag":386,"props":1155,"children":1156},{"style":463},[1157],{"type":373,"value":854},{"type":367,"tag":386,"props":1159,"children":1160},{"style":475},[1161],{"type":373,"value":859},{"type":367,"tag":386,"props":1163,"children":1164},{"class":388,"line":703},[1165,1170,1175,1179,1184,1188,1192,1196],{"type":367,"tag":386,"props":1166,"children":1167},{"style":463},[1168],{"type":373,"value":1169},"    [",{"type":367,"tag":386,"props":1171,"children":1172},{"style":445},[1173],{"type":373,"value":1174},"Symbol",{"type":367,"tag":386,"props":1176,"children":1177},{"style":515},[1178],{"type":373,"value":518},{"type":367,"tag":386,"props":1180,"children":1181},{"style":445},[1182],{"type":373,"value":1183},"iterator",{"type":367,"tag":386,"props":1185,"children":1186},{"style":463},[1187],{"type":373,"value":774},{"type":367,"tag":386,"props":1189,"children":1190},{"style":475},[1191],{"type":373,"value":690},{"type":367,"tag":386,"props":1193,"children":1194},{"style":439},[1195],{"type":373,"value":695},{"type":367,"tag":386,"props":1197,"children":1198},{"style":463},[1199],{"type":373,"value":700},{"type":367,"tag":386,"props":1201,"children":1202},{"class":388,"line":735},[1203,1208,1212,1217,1221,1226,1230,1236,1241],{"type":367,"tag":386,"props":1204,"children":1205},{"style":445},[1206],{"type":373,"value":1207},"      console",{"type":367,"tag":386,"props":1209,"children":1210},{"style":515},[1211],{"type":373,"value":518},{"type":367,"tag":386,"props":1213,"children":1214},{"style":457},[1215],{"type":373,"value":1216},"log",{"type":367,"tag":386,"props":1218,"children":1219},{"style":463},[1220],{"type":373,"value":622},{"type":367,"tag":386,"props":1222,"children":1223},{"style":469},[1224],{"type":373,"value":1225},"\"返回的迭代器:\"",{"type":367,"tag":386,"props":1227,"children":1228},{"style":475},[1229],{"type":373,"value":478},{"type":367,"tag":386,"props":1231,"children":1233},{"style":1232},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[1234],{"type":373,"value":1235}," this",{"type":367,"tag":386,"props":1237,"children":1238},{"style":463},[1239],{"type":373,"value":1240},")",{"type":367,"tag":386,"props":1242,"children":1243},{"style":475},[1244],{"type":373,"value":493},{"type":367,"tag":386,"props":1246,"children":1247},{"class":388,"line":800},[1248,1252,1256,1260],{"type":367,"tag":386,"props":1249,"children":1250},{"style":668},[1251],{"type":373,"value":709},{"type":367,"tag":386,"props":1253,"children":1254},{"style":1232},[1255],{"type":373,"value":1235},{"type":367,"tag":386,"props":1257,"children":1258},{"style":475},[1259],{"type":373,"value":533},{"type":367,"tag":386,"props":1261,"children":1262},{"style":393},[1263],{"type":373,"value":1264}," // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n",{"type":367,"tag":386,"props":1266,"children":1267},{"class":388,"line":848},[1268,1272],{"type":367,"tag":386,"props":1269,"children":1270},{"style":463},[1271],{"type":373,"value":854},{"type":367,"tag":386,"props":1273,"children":1274},{"style":475},[1275],{"type":373,"value":859},{"type":367,"tag":386,"props":1277,"children":1278},{"class":388,"line":862},[1279,1283],{"type":367,"tag":386,"props":1280,"children":1281},{"style":463},[1282],{"type":373,"value":868},{"type":367,"tag":386,"props":1284,"children":1285},{"style":475},[1286],{"type":373,"value":493},{"type":367,"tag":386,"props":1288,"children":1289},{"class":388,"line":875},[1290],{"type":367,"tag":386,"props":1291,"children":1292},{"style":463},[1293],{"type":373,"value":881},{"type":367,"tag":386,"props":1295,"children":1297},{"class":388,"line":1296},22,[1298],{"type":367,"tag":386,"props":1299,"children":1300},{"emptyLinePlaceholder":500},[1301],{"type":373,"value":503},{"type":367,"tag":386,"props":1303,"children":1305},{"class":388,"line":1304},23,[1306,1310,1315,1319,1323,1327,1332,1336,1341,1345,1350,1354],{"type":367,"tag":386,"props":1307,"children":1308},{"style":439},[1309],{"type":373,"value":442},{"type":367,"tag":386,"props":1311,"children":1312},{"style":445},[1313],{"type":373,"value":1314}," iterator",{"type":367,"tag":386,"props":1316,"children":1317},{"style":451},[1318],{"type":373,"value":454},{"type":367,"tag":386,"props":1320,"children":1321},{"style":457},[1322],{"type":373,"value":960},{"type":367,"tag":386,"props":1324,"children":1325},{"style":463},[1326],{"type":373,"value":466},{"type":367,"tag":386,"props":1328,"children":1329},{"style":654},[1330],{"type":373,"value":1331},"1",{"type":367,"tag":386,"props":1333,"children":1334},{"style":475},[1335],{"type":373,"value":478},{"type":367,"tag":386,"props":1337,"children":1338},{"style":654},[1339],{"type":373,"value":1340}," 2",{"type":367,"tag":386,"props":1342,"children":1343},{"style":475},[1344],{"type":373,"value":478},{"type":367,"tag":386,"props":1346,"children":1347},{"style":654},[1348],{"type":373,"value":1349}," 3",{"type":367,"tag":386,"props":1351,"children":1352},{"style":463},[1353],{"type":373,"value":488},{"type":367,"tag":386,"props":1355,"children":1356},{"style":475},[1357],{"type":373,"value":493},{"type":367,"tag":386,"props":1359,"children":1361},{"class":388,"line":1360},24,[1362,1367,1371,1375,1379,1384,1388,1392],{"type":367,"tag":386,"props":1363,"children":1364},{"style":445},[1365],{"type":373,"value":1366},"console",{"type":367,"tag":386,"props":1368,"children":1369},{"style":515},[1370],{"type":373,"value":518},{"type":367,"tag":386,"props":1372,"children":1373},{"style":457},[1374],{"type":373,"value":1216},{"type":367,"tag":386,"props":1376,"children":1377},{"style":463},[1378],{"type":373,"value":622},{"type":367,"tag":386,"props":1380,"children":1381},{"style":451},[1382],{"type":373,"value":1383},"...",{"type":367,"tag":386,"props":1385,"children":1386},{"style":445},[1387],{"type":373,"value":1183},{"type":367,"tag":386,"props":1389,"children":1390},{"style":463},[1391],{"type":373,"value":1240},{"type":367,"tag":386,"props":1393,"children":1394},{"style":475},[1395],{"type":373,"value":493},{"type":367,"tag":1397,"props":1398,"children":1399},"style",{},[1400],{"type":373,"value":1401},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":362,"searchDepth":426,"depth":426,"links":1403},[1404,1405],{"id":370,"depth":399,"text":370},{"id":884,"depth":399,"text":884},"markdown","content:2.code:2.source:1.native-api:7.iterator.md","content","2.code/2.source/1.native-api/7.iterator.md","md",[1412,1414],{"_path":294,"title":293,"description":1413},"JSON.stringify() 方法将一个 js 对象或值转换为 json 字符串，如果指定了一个 replacer 函数，则可以选择性地替换值，或者指定的 replacer 是数组，则可选择性地仅包含数组指定的属性。",{"_path":304,"title":303,"description":362},1712748642341]