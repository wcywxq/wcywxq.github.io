[{"data":1,"prerenderedAt":1593},["Reactive",2],{"navigation":3,"/code-assessment/scene/prototype-chain-output":559,"/code-assessment/scene/prototype-chain-output-surround":1589},[4,272,318,536,544],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":317},"八股文","/endorsement",[276,286,293,304],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"JavaScript","/endorsement/javascript",[290],{"title":291,"_path":292},"语法和数据类型","/endorsement/javascript/grammar-data-types",{"title":294,"_path":295,"children":296},"构建工具","/endorsement/build-tools",[297],{"title":298,"_path":299,"children":300},"Webpack","/endorsement/build-tools/webpack",[301],{"title":302,"_path":303},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":305,"_path":306,"children":307},"Html","/endorsement/html",[308,311,314],{"title":309,"_path":310},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":312,"_path":313},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":315,"_path":316},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":319,"_path":320,"children":321,"icon":535},"代码考核","/code-assessment",[322,427,528],{"title":323,"_path":324,"children":325},"源码实现","/code-assessment/source",[326,360,376,404,411,418,421,424],{"title":327,"_path":328,"children":329},"原生 api","/code-assessment/source/native-api",[330,333,336,339,342,345,348,351,354,357],{"title":331,"_path":332},"polyfill","/code-assessment/source/native-api/polyfill",{"title":334,"_path":335},"ajax","/code-assessment/source/native-api/ajax",{"title":337,"_path":338},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":340,"_path":341},"new 操作符","/code-assessment/source/native-api/new",{"title":343,"_path":344},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":346,"_path":347},"定时器","/code-assessment/source/native-api/timer",{"title":349,"_path":350},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":352,"_path":353},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":355,"_path":356},"extends","/code-assessment/source/native-api/extends",{"title":358,"_path":359},"Promise","/code-assessment/source/native-api/promise",{"title":361,"_path":362,"children":363},"函数 Function","/code-assessment/source/function",[364,367,370,373],{"title":365,"_path":366},"函数防抖","/code-assessment/source/function/debounce",{"title":368,"_path":369},"函数节流","/code-assessment/source/function/throttle",{"title":371,"_path":372},"函数柯理化","/code-assessment/source/function/curry",{"title":374,"_path":375},"函数睡眠","/code-assessment/source/function/sleep",{"title":377,"_path":378,"children":379},"数组 Array","/code-assessment/source/array",[380,383,386,389,392,395,398,401],{"title":381,"_path":382},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":384,"_path":385},"数组扁平化","/code-assessment/source/array/flat",{"title":387,"_path":388},"原型方法","/code-assessment/source/array/prototype-method",{"title":390,"_path":391},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":393,"_path":394},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":396,"_path":397},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":399,"_path":400},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":402,"_path":403},"二维数组","/code-assessment/source/array/2d-array",{"title":405,"_path":406,"children":407},"字符串 String","/code-assessment/source/string",[408],{"title":409,"_path":410},"repeat()","/code-assessment/source/string/repeat",{"title":412,"_path":413,"children":414},"集合 Set","/code-assessment/source/set",[415],{"title":416,"_path":417},"遍历集合","/code-assessment/source/set/traverse",{"title":419,"_path":420},"获取通用类型","/code-assessment/source/get-generic-type",{"title":422,"_path":423},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":425,"_path":426},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":428,"_path":429,"children":430},"业务场景","/code-assessment/scene",[431,461,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525],{"title":358,"_path":432,"children":433},"/code-assessment/scene/promise",[434,437,440,443,446,449,452,455,458],{"title":435,"_path":436},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":438,"_path":439},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":441,"_path":442},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":444,"_path":445},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":447,"_path":448},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":450,"_path":451},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":453,"_path":454},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":456,"_path":457},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":459,"_path":460},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":462,"_path":463,"children":464},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[465,468],{"title":466,"_path":467},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":469,"_path":470},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":472,"_path":473},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":475,"_path":476},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":478,"_path":479},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":481,"_path":482},"倒计时","/code-assessment/scene/countdown",{"title":484,"_path":485},"日期格式化","/code-assessment/scene/date-format",{"title":487,"_path":488},"实现前端路由","/code-assessment/scene/frontend-route",{"title":490,"_path":491},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":493,"_path":494},"lodash.get","/code-assessment/scene/lodash-get",{"title":496,"_path":497},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":499,"_path":500},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":502,"_path":503},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":505,"_path":506},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":508,"_path":509},"随机数","/code-assessment/scene/random-number",{"title":511,"_path":512},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":514,"_path":515},"sku 算法实现","/code-assessment/scene/sku",{"title":517,"_path":518},"整数分割","/code-assessment/scene/split-number",{"title":520,"_path":521},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":523,"_path":524},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":526,"_path":527},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":529,"_path":530,"children":531},"Ts 类型挑战","/code-assessment/type-challeges",[532],{"title":533,"_path":534},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":537,"_path":538,"children":539,"icon":543},"项目","/project",[540],{"title":541,"_path":542},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":545,"_path":546,"children":547,"icon":558},"后端语言","/backend-languages",[548],{"title":549,"_path":550,"children":551},"Python","/backend-languages/python",[552,555],{"title":553,"_path":554},"基础","/backend-languages/python/base",{"title":556,"_path":557},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":473,"_dir":560,"_draft":561,"_partial":561,"_locale":562,"title":472,"description":562,"body":563,"_type":1584,"_id":1585,"_source":1586,"_file":1587,"_extension":1588},"scene",false,"",{"type":564,"children":565,"toc":1580},"root",[566,1216,1222,1418,1423,1574],{"type":567,"tag":568,"props":569,"children":573},"element","pre",{"className":570,"code":571,"language":572,"meta":562,"style":562},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","function Foo() {\n  console.log(this);\n  this.getName = function () {\n    console.log(\"1\");\n  };\n  return this;\n}\n\nFoo.getName = function () {\n  console.log(2);\n};\n\nFoo.prototype.getName = function () {\n  console.log(\"3\");\n};\n\nvar getName = function () {\n  console.log(\"4\");\n};\n\nfunction getName() {\n  console.log(\"5\");\n}\n\nFoo.getName();\ngetName();\nFoo().getName();\ngetName();\nnew Foo.getName();\nnew Foo().getName();\n","js",[574],{"type":567,"tag":575,"props":576,"children":577},"code",{"__ignoreMap":562},[578,608,644,681,722,731,751,760,770,803,833,842,850,892,929,937,945,975,1012,1020,1028,1048,1085,1093,1101,1122,1134,1155,1167,1192],{"type":567,"tag":579,"props":580,"children":583},"span",{"class":581,"line":582},"line",1,[584,591,597,603],{"type":567,"tag":579,"props":585,"children":587},{"style":586},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[588],{"type":589,"value":590},"text","function",{"type":567,"tag":579,"props":592,"children":594},{"style":593},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[595],{"type":589,"value":596}," Foo",{"type":567,"tag":579,"props":598,"children":600},{"style":599},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[601],{"type":589,"value":602},"()",{"type":567,"tag":579,"props":604,"children":605},{"style":599},[606],{"type":589,"value":607}," {\n",{"type":567,"tag":579,"props":609,"children":611},{"class":581,"line":610},2,[612,618,623,628,633,639],{"type":567,"tag":579,"props":613,"children":615},{"style":614},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[616],{"type":589,"value":617},"  console",{"type":567,"tag":579,"props":619,"children":620},{"style":599},[621],{"type":589,"value":622},".",{"type":567,"tag":579,"props":624,"children":625},{"style":593},[626],{"type":589,"value":627},"log",{"type":567,"tag":579,"props":629,"children":630},{"style":599},[631],{"type":589,"value":632},"(",{"type":567,"tag":579,"props":634,"children":636},{"style":635},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[637],{"type":589,"value":638},"this",{"type":567,"tag":579,"props":640,"children":641},{"style":599},[642],{"type":589,"value":643},");\n",{"type":567,"tag":579,"props":645,"children":647},{"class":581,"line":646},3,[648,653,657,662,667,672,677],{"type":567,"tag":579,"props":649,"children":650},{"style":635},[651],{"type":589,"value":652},"  this",{"type":567,"tag":579,"props":654,"children":655},{"style":599},[656],{"type":589,"value":622},{"type":567,"tag":579,"props":658,"children":659},{"style":593},[660],{"type":589,"value":661},"getName",{"type":567,"tag":579,"props":663,"children":664},{"style":599},[665],{"type":589,"value":666}," =",{"type":567,"tag":579,"props":668,"children":669},{"style":586},[670],{"type":589,"value":671}," function",{"type":567,"tag":579,"props":673,"children":674},{"style":599},[675],{"type":589,"value":676}," ()",{"type":567,"tag":579,"props":678,"children":679},{"style":599},[680],{"type":589,"value":607},{"type":567,"tag":579,"props":682,"children":684},{"class":581,"line":683},4,[685,690,694,698,702,708,714,718],{"type":567,"tag":579,"props":686,"children":687},{"style":614},[688],{"type":589,"value":689},"    console",{"type":567,"tag":579,"props":691,"children":692},{"style":599},[693],{"type":589,"value":622},{"type":567,"tag":579,"props":695,"children":696},{"style":593},[697],{"type":589,"value":627},{"type":567,"tag":579,"props":699,"children":700},{"style":599},[701],{"type":589,"value":632},{"type":567,"tag":579,"props":703,"children":705},{"style":704},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[706],{"type":589,"value":707},"\"",{"type":567,"tag":579,"props":709,"children":711},{"style":710},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[712],{"type":589,"value":713},"1",{"type":567,"tag":579,"props":715,"children":716},{"style":704},[717],{"type":589,"value":707},{"type":567,"tag":579,"props":719,"children":720},{"style":599},[721],{"type":589,"value":643},{"type":567,"tag":579,"props":723,"children":725},{"class":581,"line":724},5,[726],{"type":567,"tag":579,"props":727,"children":728},{"style":599},[729],{"type":589,"value":730},"  };\n",{"type":567,"tag":579,"props":732,"children":734},{"class":581,"line":733},6,[735,741,746],{"type":567,"tag":579,"props":736,"children":738},{"style":737},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[739],{"type":589,"value":740},"  return",{"type":567,"tag":579,"props":742,"children":743},{"style":635},[744],{"type":589,"value":745}," this",{"type":567,"tag":579,"props":747,"children":748},{"style":599},[749],{"type":589,"value":750},";\n",{"type":567,"tag":579,"props":752,"children":754},{"class":581,"line":753},7,[755],{"type":567,"tag":579,"props":756,"children":757},{"style":599},[758],{"type":589,"value":759},"}\n",{"type":567,"tag":579,"props":761,"children":763},{"class":581,"line":762},8,[764],{"type":567,"tag":579,"props":765,"children":767},{"emptyLinePlaceholder":766},true,[768],{"type":589,"value":769},"\n",{"type":567,"tag":579,"props":771,"children":773},{"class":581,"line":772},9,[774,779,783,787,791,795,799],{"type":567,"tag":579,"props":775,"children":776},{"style":614},[777],{"type":589,"value":778},"Foo",{"type":567,"tag":579,"props":780,"children":781},{"style":599},[782],{"type":589,"value":622},{"type":567,"tag":579,"props":784,"children":785},{"style":593},[786],{"type":589,"value":661},{"type":567,"tag":579,"props":788,"children":789},{"style":599},[790],{"type":589,"value":666},{"type":567,"tag":579,"props":792,"children":793},{"style":586},[794],{"type":589,"value":671},{"type":567,"tag":579,"props":796,"children":797},{"style":599},[798],{"type":589,"value":676},{"type":567,"tag":579,"props":800,"children":801},{"style":599},[802],{"type":589,"value":607},{"type":567,"tag":579,"props":804,"children":806},{"class":581,"line":805},10,[807,811,815,819,823,829],{"type":567,"tag":579,"props":808,"children":809},{"style":614},[810],{"type":589,"value":617},{"type":567,"tag":579,"props":812,"children":813},{"style":599},[814],{"type":589,"value":622},{"type":567,"tag":579,"props":816,"children":817},{"style":593},[818],{"type":589,"value":627},{"type":567,"tag":579,"props":820,"children":821},{"style":599},[822],{"type":589,"value":632},{"type":567,"tag":579,"props":824,"children":826},{"style":825},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[827],{"type":589,"value":828},"2",{"type":567,"tag":579,"props":830,"children":831},{"style":599},[832],{"type":589,"value":643},{"type":567,"tag":579,"props":834,"children":836},{"class":581,"line":835},11,[837],{"type":567,"tag":579,"props":838,"children":839},{"style":599},[840],{"type":589,"value":841},"};\n",{"type":567,"tag":579,"props":843,"children":845},{"class":581,"line":844},12,[846],{"type":567,"tag":579,"props":847,"children":848},{"emptyLinePlaceholder":766},[849],{"type":589,"value":769},{"type":567,"tag":579,"props":851,"children":853},{"class":581,"line":852},13,[854,859,863,868,872,876,880,884,888],{"type":567,"tag":579,"props":855,"children":857},{"style":856},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[858],{"type":589,"value":778},{"type":567,"tag":579,"props":860,"children":861},{"style":599},[862],{"type":589,"value":622},{"type":567,"tag":579,"props":864,"children":865},{"style":856},[866],{"type":589,"value":867},"prototype",{"type":567,"tag":579,"props":869,"children":870},{"style":599},[871],{"type":589,"value":622},{"type":567,"tag":579,"props":873,"children":874},{"style":593},[875],{"type":589,"value":661},{"type":567,"tag":579,"props":877,"children":878},{"style":599},[879],{"type":589,"value":666},{"type":567,"tag":579,"props":881,"children":882},{"style":586},[883],{"type":589,"value":671},{"type":567,"tag":579,"props":885,"children":886},{"style":599},[887],{"type":589,"value":676},{"type":567,"tag":579,"props":889,"children":890},{"style":599},[891],{"type":589,"value":607},{"type":567,"tag":579,"props":893,"children":895},{"class":581,"line":894},14,[896,900,904,908,912,916,921,925],{"type":567,"tag":579,"props":897,"children":898},{"style":614},[899],{"type":589,"value":617},{"type":567,"tag":579,"props":901,"children":902},{"style":599},[903],{"type":589,"value":622},{"type":567,"tag":579,"props":905,"children":906},{"style":593},[907],{"type":589,"value":627},{"type":567,"tag":579,"props":909,"children":910},{"style":599},[911],{"type":589,"value":632},{"type":567,"tag":579,"props":913,"children":914},{"style":704},[915],{"type":589,"value":707},{"type":567,"tag":579,"props":917,"children":918},{"style":710},[919],{"type":589,"value":920},"3",{"type":567,"tag":579,"props":922,"children":923},{"style":704},[924],{"type":589,"value":707},{"type":567,"tag":579,"props":926,"children":927},{"style":599},[928],{"type":589,"value":643},{"type":567,"tag":579,"props":930,"children":932},{"class":581,"line":931},15,[933],{"type":567,"tag":579,"props":934,"children":935},{"style":599},[936],{"type":589,"value":841},{"type":567,"tag":579,"props":938,"children":940},{"class":581,"line":939},16,[941],{"type":567,"tag":579,"props":942,"children":943},{"emptyLinePlaceholder":766},[944],{"type":589,"value":769},{"type":567,"tag":579,"props":946,"children":948},{"class":581,"line":947},17,[949,954,959,963,967,971],{"type":567,"tag":579,"props":950,"children":951},{"style":586},[952],{"type":589,"value":953},"var",{"type":567,"tag":579,"props":955,"children":956},{"style":593},[957],{"type":589,"value":958}," getName",{"type":567,"tag":579,"props":960,"children":961},{"style":599},[962],{"type":589,"value":666},{"type":567,"tag":579,"props":964,"children":965},{"style":586},[966],{"type":589,"value":671},{"type":567,"tag":579,"props":968,"children":969},{"style":599},[970],{"type":589,"value":676},{"type":567,"tag":579,"props":972,"children":973},{"style":599},[974],{"type":589,"value":607},{"type":567,"tag":579,"props":976,"children":978},{"class":581,"line":977},18,[979,983,987,991,995,999,1004,1008],{"type":567,"tag":579,"props":980,"children":981},{"style":614},[982],{"type":589,"value":617},{"type":567,"tag":579,"props":984,"children":985},{"style":599},[986],{"type":589,"value":622},{"type":567,"tag":579,"props":988,"children":989},{"style":593},[990],{"type":589,"value":627},{"type":567,"tag":579,"props":992,"children":993},{"style":599},[994],{"type":589,"value":632},{"type":567,"tag":579,"props":996,"children":997},{"style":704},[998],{"type":589,"value":707},{"type":567,"tag":579,"props":1000,"children":1001},{"style":710},[1002],{"type":589,"value":1003},"4",{"type":567,"tag":579,"props":1005,"children":1006},{"style":704},[1007],{"type":589,"value":707},{"type":567,"tag":579,"props":1009,"children":1010},{"style":599},[1011],{"type":589,"value":643},{"type":567,"tag":579,"props":1013,"children":1015},{"class":581,"line":1014},19,[1016],{"type":567,"tag":579,"props":1017,"children":1018},{"style":599},[1019],{"type":589,"value":841},{"type":567,"tag":579,"props":1021,"children":1023},{"class":581,"line":1022},20,[1024],{"type":567,"tag":579,"props":1025,"children":1026},{"emptyLinePlaceholder":766},[1027],{"type":589,"value":769},{"type":567,"tag":579,"props":1029,"children":1031},{"class":581,"line":1030},21,[1032,1036,1040,1044],{"type":567,"tag":579,"props":1033,"children":1034},{"style":586},[1035],{"type":589,"value":590},{"type":567,"tag":579,"props":1037,"children":1038},{"style":593},[1039],{"type":589,"value":958},{"type":567,"tag":579,"props":1041,"children":1042},{"style":599},[1043],{"type":589,"value":602},{"type":567,"tag":579,"props":1045,"children":1046},{"style":599},[1047],{"type":589,"value":607},{"type":567,"tag":579,"props":1049,"children":1051},{"class":581,"line":1050},22,[1052,1056,1060,1064,1068,1072,1077,1081],{"type":567,"tag":579,"props":1053,"children":1054},{"style":614},[1055],{"type":589,"value":617},{"type":567,"tag":579,"props":1057,"children":1058},{"style":599},[1059],{"type":589,"value":622},{"type":567,"tag":579,"props":1061,"children":1062},{"style":593},[1063],{"type":589,"value":627},{"type":567,"tag":579,"props":1065,"children":1066},{"style":599},[1067],{"type":589,"value":632},{"type":567,"tag":579,"props":1069,"children":1070},{"style":704},[1071],{"type":589,"value":707},{"type":567,"tag":579,"props":1073,"children":1074},{"style":710},[1075],{"type":589,"value":1076},"5",{"type":567,"tag":579,"props":1078,"children":1079},{"style":704},[1080],{"type":589,"value":707},{"type":567,"tag":579,"props":1082,"children":1083},{"style":599},[1084],{"type":589,"value":643},{"type":567,"tag":579,"props":1086,"children":1088},{"class":581,"line":1087},23,[1089],{"type":567,"tag":579,"props":1090,"children":1091},{"style":599},[1092],{"type":589,"value":759},{"type":567,"tag":579,"props":1094,"children":1096},{"class":581,"line":1095},24,[1097],{"type":567,"tag":579,"props":1098,"children":1099},{"emptyLinePlaceholder":766},[1100],{"type":589,"value":769},{"type":567,"tag":579,"props":1102,"children":1104},{"class":581,"line":1103},25,[1105,1109,1113,1117],{"type":567,"tag":579,"props":1106,"children":1107},{"style":614},[1108],{"type":589,"value":778},{"type":567,"tag":579,"props":1110,"children":1111},{"style":599},[1112],{"type":589,"value":622},{"type":567,"tag":579,"props":1114,"children":1115},{"style":593},[1116],{"type":589,"value":661},{"type":567,"tag":579,"props":1118,"children":1119},{"style":599},[1120],{"type":589,"value":1121},"();\n",{"type":567,"tag":579,"props":1123,"children":1125},{"class":581,"line":1124},26,[1126,1130],{"type":567,"tag":579,"props":1127,"children":1128},{"style":593},[1129],{"type":589,"value":661},{"type":567,"tag":579,"props":1131,"children":1132},{"style":599},[1133],{"type":589,"value":1121},{"type":567,"tag":579,"props":1135,"children":1137},{"class":581,"line":1136},27,[1138,1142,1147,1151],{"type":567,"tag":579,"props":1139,"children":1140},{"style":593},[1141],{"type":589,"value":778},{"type":567,"tag":579,"props":1143,"children":1144},{"style":599},[1145],{"type":589,"value":1146},"().",{"type":567,"tag":579,"props":1148,"children":1149},{"style":593},[1150],{"type":589,"value":661},{"type":567,"tag":579,"props":1152,"children":1153},{"style":599},[1154],{"type":589,"value":1121},{"type":567,"tag":579,"props":1156,"children":1158},{"class":581,"line":1157},28,[1159,1163],{"type":567,"tag":579,"props":1160,"children":1161},{"style":593},[1162],{"type":589,"value":661},{"type":567,"tag":579,"props":1164,"children":1165},{"style":599},[1166],{"type":589,"value":1121},{"type":567,"tag":579,"props":1168,"children":1170},{"class":581,"line":1169},29,[1171,1176,1180,1184,1188],{"type":567,"tag":579,"props":1172,"children":1173},{"style":586},[1174],{"type":589,"value":1175},"new",{"type":567,"tag":579,"props":1177,"children":1178},{"style":614},[1179],{"type":589,"value":596},{"type":567,"tag":579,"props":1181,"children":1182},{"style":599},[1183],{"type":589,"value":622},{"type":567,"tag":579,"props":1185,"children":1186},{"style":593},[1187],{"type":589,"value":661},{"type":567,"tag":579,"props":1189,"children":1190},{"style":599},[1191],{"type":589,"value":1121},{"type":567,"tag":579,"props":1193,"children":1195},{"class":581,"line":1194},30,[1196,1200,1204,1208,1212],{"type":567,"tag":579,"props":1197,"children":1198},{"style":586},[1199],{"type":589,"value":1175},{"type":567,"tag":579,"props":1201,"children":1202},{"style":593},[1203],{"type":589,"value":596},{"type":567,"tag":579,"props":1205,"children":1206},{"style":599},[1207],{"type":589,"value":1146},{"type":567,"tag":579,"props":1209,"children":1210},{"style":593},[1211],{"type":589,"value":661},{"type":567,"tag":579,"props":1213,"children":1214},{"style":599},[1215],{"type":589,"value":1121},{"type":567,"tag":1217,"props":1218,"children":1220},"h2",{"id":1219},"输出",[1221],{"type":589,"value":1219},{"type":567,"tag":568,"props":1223,"children":1225},{"className":570,"code":1224,"language":572,"meta":562,"style":562},"2\n4\nWindow {0: global, window: Window, self: Window, document: document, name: '', location: Location, …}\n1\n1\n2\nFoo {}\n1\n",[1226],{"type":567,"tag":575,"props":1227,"children":1228},{"__ignoreMap":562},[1229,1237,1245,1377,1385,1392,1399,1411],{"type":567,"tag":579,"props":1230,"children":1231},{"class":581,"line":582},[1232],{"type":567,"tag":579,"props":1233,"children":1234},{"style":825},[1235],{"type":589,"value":1236},"2\n",{"type":567,"tag":579,"props":1238,"children":1239},{"class":581,"line":610},[1240],{"type":567,"tag":579,"props":1241,"children":1242},{"style":825},[1243],{"type":589,"value":1244},"4\n",{"type":567,"tag":579,"props":1246,"children":1247},{"class":581,"line":646},[1248,1253,1258,1263,1269,1274,1279,1284,1289,1294,1298,1303,1307,1311,1315,1320,1324,1328,1332,1337,1341,1346,1350,1355,1359,1364,1368,1373],{"type":567,"tag":579,"props":1249,"children":1250},{"style":614},[1251],{"type":589,"value":1252},"Window",{"type":567,"tag":579,"props":1254,"children":1255},{"style":599},[1256],{"type":589,"value":1257}," {",{"type":567,"tag":579,"props":1259,"children":1260},{"style":825},[1261],{"type":589,"value":1262},"0",{"type":567,"tag":579,"props":1264,"children":1266},{"style":1265},"--shiki-light:#393A34;--shiki-default:#393A34;--shiki-dark:#DBD7CAEE",[1267],{"type":589,"value":1268},": ",{"type":567,"tag":579,"props":1270,"children":1271},{"style":614},[1272],{"type":589,"value":1273},"global",{"type":567,"tag":579,"props":1275,"children":1276},{"style":599},[1277],{"type":589,"value":1278},",",{"type":567,"tag":579,"props":1280,"children":1281},{"style":593},[1282],{"type":589,"value":1283}," window",{"type":567,"tag":579,"props":1285,"children":1286},{"style":599},[1287],{"type":589,"value":1288},":",{"type":567,"tag":579,"props":1290,"children":1291},{"style":614},[1292],{"type":589,"value":1293}," Window",{"type":567,"tag":579,"props":1295,"children":1296},{"style":599},[1297],{"type":589,"value":1278},{"type":567,"tag":579,"props":1299,"children":1300},{"style":593},[1301],{"type":589,"value":1302}," self",{"type":567,"tag":579,"props":1304,"children":1305},{"style":599},[1306],{"type":589,"value":1288},{"type":567,"tag":579,"props":1308,"children":1309},{"style":614},[1310],{"type":589,"value":1293},{"type":567,"tag":579,"props":1312,"children":1313},{"style":599},[1314],{"type":589,"value":1278},{"type":567,"tag":579,"props":1316,"children":1317},{"style":593},[1318],{"type":589,"value":1319}," document",{"type":567,"tag":579,"props":1321,"children":1322},{"style":599},[1323],{"type":589,"value":1288},{"type":567,"tag":579,"props":1325,"children":1326},{"style":614},[1327],{"type":589,"value":1319},{"type":567,"tag":579,"props":1329,"children":1330},{"style":599},[1331],{"type":589,"value":1278},{"type":567,"tag":579,"props":1333,"children":1334},{"style":593},[1335],{"type":589,"value":1336}," name",{"type":567,"tag":579,"props":1338,"children":1339},{"style":599},[1340],{"type":589,"value":1288},{"type":567,"tag":579,"props":1342,"children":1343},{"style":704},[1344],{"type":589,"value":1345}," ''",{"type":567,"tag":579,"props":1347,"children":1348},{"style":599},[1349],{"type":589,"value":1278},{"type":567,"tag":579,"props":1351,"children":1352},{"style":593},[1353],{"type":589,"value":1354}," location",{"type":567,"tag":579,"props":1356,"children":1357},{"style":599},[1358],{"type":589,"value":1288},{"type":567,"tag":579,"props":1360,"children":1361},{"style":614},[1362],{"type":589,"value":1363}," Location",{"type":567,"tag":579,"props":1365,"children":1366},{"style":599},[1367],{"type":589,"value":1278},{"type":567,"tag":579,"props":1369,"children":1370},{"style":1265},[1371],{"type":589,"value":1372}," …",{"type":567,"tag":579,"props":1374,"children":1375},{"style":599},[1376],{"type":589,"value":759},{"type":567,"tag":579,"props":1378,"children":1379},{"class":581,"line":683},[1380],{"type":567,"tag":579,"props":1381,"children":1382},{"style":825},[1383],{"type":589,"value":1384},"1\n",{"type":567,"tag":579,"props":1386,"children":1387},{"class":581,"line":724},[1388],{"type":567,"tag":579,"props":1389,"children":1390},{"style":825},[1391],{"type":589,"value":1384},{"type":567,"tag":579,"props":1393,"children":1394},{"class":581,"line":733},[1395],{"type":567,"tag":579,"props":1396,"children":1397},{"style":825},[1398],{"type":589,"value":1236},{"type":567,"tag":579,"props":1400,"children":1401},{"class":581,"line":753},[1402,1406],{"type":567,"tag":579,"props":1403,"children":1404},{"style":614},[1405],{"type":589,"value":778},{"type":567,"tag":579,"props":1407,"children":1408},{"style":599},[1409],{"type":589,"value":1410}," {}\n",{"type":567,"tag":579,"props":1412,"children":1413},{"class":581,"line":762},[1414],{"type":567,"tag":579,"props":1415,"children":1416},{"style":825},[1417],{"type":589,"value":1384},{"type":567,"tag":1217,"props":1419,"children":1421},{"id":1420},"解析",[1422],{"type":589,"value":1420},{"type":567,"tag":1424,"props":1425,"children":1426},"ul",{},[1427,1445,1462,1506,1528,1545],{"type":567,"tag":1428,"props":1429,"children":1430},"li",{},[1431,1437],{"type":567,"tag":575,"props":1432,"children":1434},{"className":1433},[],[1435],{"type":589,"value":1436},"Foo.getName()",{"type":567,"tag":1424,"props":1438,"children":1439},{},[1440],{"type":567,"tag":1428,"props":1441,"children":1442},{},[1443],{"type":589,"value":1444},"输出 2。因为调用的是 Foo 的静态方法 getName",{"type":567,"tag":1428,"props":1446,"children":1447},{},[1448,1454],{"type":567,"tag":575,"props":1449,"children":1451},{"className":1450},[],[1452],{"type":589,"value":1453},"getName()",{"type":567,"tag":1424,"props":1455,"children":1456},{},[1457],{"type":567,"tag":1428,"props":1458,"children":1459},{},[1460],{"type":589,"value":1461},"输出 4。因为 js 解释器会将整个 \"函数声明\" 提升到当前作用域的顶部，而 \"函数表达式\" 不会进行提升。所以此时，\"函数表达式\" 将 \"函数声明\" 覆盖掉了",{"type":567,"tag":1428,"props":1463,"children":1464},{},[1465,1471],{"type":567,"tag":575,"props":1466,"children":1468},{"className":1467},[],[1469],{"type":589,"value":1470},"Foo().getName()",{"type":567,"tag":1424,"props":1472,"children":1473},{},[1474,1494],{"type":567,"tag":1428,"props":1475,"children":1476},{},[1477,1479,1484,1486,1492],{"type":589,"value":1478},"输出 ",{"type":567,"tag":575,"props":1480,"children":1482},{"className":1481},[],[1483],{"type":589,"value":1252},{"type":589,"value":1485}," 对象或 ",{"type":567,"tag":575,"props":1487,"children":1489},{"className":1488},[],[1490],{"type":589,"value":1491},"Global",{"type":589,"value":1493}," 对象。具体根据执行环境进行区分",{"type":567,"tag":1428,"props":1495,"children":1496},{},[1497,1499,1504],{"type":589,"value":1498},"输出 '1'。因为 ",{"type":567,"tag":575,"props":1500,"children":1502},{"className":1501},[],[1503],{"type":589,"value":778},{"type":589,"value":1505}," 返回了 this，this 指向 window / global，因此 getName 方法被挂载到全局",{"type":567,"tag":1428,"props":1507,"children":1508},{},[1509,1514],{"type":567,"tag":575,"props":1510,"children":1512},{"className":1511},[],[1513],{"type":589,"value":1453},{"type":567,"tag":1424,"props":1515,"children":1516},{},[1517],{"type":567,"tag":1428,"props":1518,"children":1519},{},[1520,1522],{"type":589,"value":1521},"输出 '1'。直接调用 ",{"type":567,"tag":575,"props":1523,"children":1525},{"className":1524},[],[1526],{"type":589,"value":1527},"window.getName()",{"type":567,"tag":1428,"props":1529,"children":1530},{},[1531,1537],{"type":567,"tag":575,"props":1532,"children":1534},{"className":1533},[],[1535],{"type":589,"value":1536},"new Foo.getName()",{"type":567,"tag":1424,"props":1538,"children":1539},{},[1540],{"type":567,"tag":1428,"props":1541,"children":1542},{},[1543],{"type":589,"value":1544},"输出 2。通过 new 操作符实例化 Foo.getName 函数，执行构造函数中的代码",{"type":567,"tag":1428,"props":1546,"children":1547},{},[1548,1554],{"type":567,"tag":575,"props":1549,"children":1551},{"className":1550},[],[1552],{"type":589,"value":1553},"(new Foo()).getName()",{"type":567,"tag":1424,"props":1555,"children":1556},{},[1557,1569],{"type":567,"tag":1428,"props":1558,"children":1559},{},[1560,1561,1567],{"type":589,"value":1478},{"type":567,"tag":575,"props":1562,"children":1564},{"className":1563},[],[1565],{"type":589,"value":1566},"Foo{}",{"type":589,"value":1568},"对象。通过 new 操作符实例化 Foo 函数，执行构造函数中的代码",{"type":567,"tag":1428,"props":1570,"children":1571},{},[1572],{"type":589,"value":1573},"输出 '1'。直接调用 Foo 实例的 getName 方法",{"type":567,"tag":1575,"props":1576,"children":1577},"style",{},[1578],{"type":589,"value":1579},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":562,"searchDepth":724,"depth":724,"links":1581},[1582,1583],{"id":1219,"depth":610,"text":1219},{"id":1420,"depth":610,"text":1420},"markdown","content:3.code-assessment:2.scene:3.prototype-chain-output.md","content","3.code-assessment/2.scene/3.prototype-chain-output.md","md",[1590,1591],{"_path":470,"title":469,"description":562},{"_path":476,"title":475,"description":1592},"举例：",1717731146350]