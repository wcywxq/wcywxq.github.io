[{"data":1,"prerenderedAt":995},["Reactive",2],{"navigation":3,"/code-assessment/source/native-api/new":549,"/code-assessment/source/native-api/new-surround":992},[4,272,301,517,525,534],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":516},"代码考核","/code-assessment",[305,407,509],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,340,356,384,391,398,401,404],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342,"children":343},"函数 Function","/code-assessment/source/function",[344,347,350,353],{"title":345,"_path":346},"函数防抖","/code-assessment/source/function/debounce",{"title":348,"_path":349},"函数节流","/code-assessment/source/function/throttle",{"title":351,"_path":352},"函数柯理化","/code-assessment/source/function/curry",{"title":354,"_path":355},"函数睡眠","/code-assessment/source/function/sleep",{"title":357,"_path":358,"children":359},"数组 Array","/code-assessment/source/array",[360,363,366,369,372,375,378,381],{"title":361,"_path":362},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":364,"_path":365},"数组扁平化","/code-assessment/source/array/flat",{"title":367,"_path":368},"原型方法","/code-assessment/source/array/prototype-method",{"title":370,"_path":371},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":373,"_path":374},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":376,"_path":377},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":379,"_path":380},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":382,"_path":383},"二维数组","/code-assessment/source/array/2d-array",{"title":385,"_path":386,"children":387},"字符串 String","/code-assessment/source/string",[388],{"title":389,"_path":390},"repeat()","/code-assessment/source/string/repeat",{"title":392,"_path":393,"children":394},"集合 Set","/code-assessment/source/set",[395],{"title":396,"_path":397},"遍历集合","/code-assessment/source/set/traverse",{"title":399,"_path":400},"获取通用类型","/code-assessment/source/get-generic-type",{"title":402,"_path":403},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":405,"_path":406},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":408,"_path":409,"children":410},"业务场景","/code-assessment/scene",[411,442,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506],{"title":412,"_path":413,"children":414},"Promise","/code-assessment/scene/promise",[415,418,421,424,427,430,433,436,439],{"title":416,"_path":417},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":419,"_path":420},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":422,"_path":423},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":425,"_path":426},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":428,"_path":429},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":431,"_path":432},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":434,"_path":435},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":437,"_path":438},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":440,"_path":441},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":443,"_path":444,"children":445},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[446,449],{"title":447,"_path":448},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":450,"_path":451},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":453,"_path":454},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":456,"_path":457},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":459,"_path":460},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":462,"_path":463},"倒计时","/code-assessment/scene/countdown",{"title":465,"_path":466},"日期格式化","/code-assessment/scene/date-format",{"title":468,"_path":469},"实现前端路由","/code-assessment/scene/frontend-route",{"title":471,"_path":472},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":474,"_path":475},"lodash.get","/code-assessment/scene/lodash-get",{"title":477,"_path":478},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":480,"_path":481},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":483,"_path":484},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":486,"_path":487},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":489,"_path":490},"随机数","/code-assessment/scene/random-number",{"title":492,"_path":493},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":495,"_path":496},"sku 算法实现","/code-assessment/scene/sku",{"title":498,"_path":499},"整数分割","/code-assessment/scene/split-number",{"title":501,"_path":502},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":504,"_path":505},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":507,"_path":508},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":510,"_path":511,"children":512},"Ts 类型挑战","/code-assessment/type-challeges",[513],{"title":514,"_path":515},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":518,"_path":519,"children":520,"icon":524},"项目","/project",[521],{"title":522,"_path":523},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":526,"_path":527,"children":528,"icon":533},"设计模式","/design-mode",[529,530],{"title":526,"_path":527},{"title":531,"_path":532},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":535,"_path":536,"children":537,"icon":548},"后端语言","/backend-languages",[538],{"title":539,"_path":540,"children":541},"Python","/backend-languages/python",[542,545],{"title":543,"_path":544},"基础","/backend-languages/python/base",{"title":546,"_path":547},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":324,"_dir":550,"_draft":551,"_partial":551,"_locale":552,"title":323,"description":553,"body":554,"_type":987,"_id":988,"_source":989,"_file":990,"_extension":991},"native-api",false,"","在调用 new 的过程中会发生以上 4 件事情：",{"type":555,"children":556,"toc":985},"root",[557,564,597,602,822,827,979],{"type":558,"tag":559,"props":560,"children":561},"element","p",{},[562],{"type":563,"value":553},"text",{"type":558,"tag":565,"props":566,"children":567},"ol",{},[568,574,587,592],{"type":558,"tag":569,"props":570,"children":571},"li",{},[572],{"type":563,"value":573},"创建一个新的空对象",{"type":558,"tag":569,"props":575,"children":576},{},[577,579,585],{"type":563,"value":578},"设置原型，将构造函数的作用域赋给新对象（也就是将对象的 ",{"type":558,"tag":580,"props":581,"children":582},"strong",{},[583],{"type":563,"value":584},"proto",{"type":563,"value":586},"属性指向构造函数的 prototype 属性）",{"type":558,"tag":569,"props":588,"children":589},{},[590],{"type":563,"value":591},"指向构造函数中的代码，构造函数中的 this 指向该对象（也就是为这个对象添加属性或方法）",{"type":558,"tag":569,"props":593,"children":594},{},[595],{"type":563,"value":596},"返回新的对象",{"type":558,"tag":559,"props":598,"children":599},{},[600],{"type":563,"value":601},"方式一：",{"type":558,"tag":603,"props":604,"children":608},"pre",{"className":605,"code":606,"language":607,"meta":552,"style":552},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","function newFactory(fn, ...args) {\n  // method1\n  const obj = new Object();\n  obj.__proto__ = newFactory.prototype;\n  newFactory.apply(obj, args);\n  return obj;\n}\n","js",[609],{"type":558,"tag":610,"props":611,"children":612},"code",{"__ignoreMap":552},[613,668,678,712,754,795,813],{"type":558,"tag":614,"props":615,"children":618},"span",{"class":616,"line":617},"line",1,[619,625,631,637,643,648,653,658,663],{"type":558,"tag":614,"props":620,"children":622},{"style":621},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[623],{"type":563,"value":624},"function",{"type":558,"tag":614,"props":626,"children":628},{"style":627},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[629],{"type":563,"value":630}," newFactory",{"type":558,"tag":614,"props":632,"children":634},{"style":633},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[635],{"type":563,"value":636},"(",{"type":558,"tag":614,"props":638,"children":640},{"style":639},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[641],{"type":563,"value":642},"fn",{"type":558,"tag":614,"props":644,"children":645},{"style":633},[646],{"type":563,"value":647},",",{"type":558,"tag":614,"props":649,"children":650},{"style":633},[651],{"type":563,"value":652}," ...",{"type":558,"tag":614,"props":654,"children":655},{"style":639},[656],{"type":563,"value":657},"args",{"type":558,"tag":614,"props":659,"children":660},{"style":633},[661],{"type":563,"value":662},")",{"type":558,"tag":614,"props":664,"children":665},{"style":633},[666],{"type":563,"value":667}," {\n",{"type":558,"tag":614,"props":669,"children":671},{"class":616,"line":670},2,[672],{"type":558,"tag":614,"props":673,"children":675},{"style":674},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[676],{"type":563,"value":677},"  // method1\n",{"type":558,"tag":614,"props":679,"children":681},{"class":616,"line":680},3,[682,687,692,697,702,707],{"type":558,"tag":614,"props":683,"children":684},{"style":621},[685],{"type":563,"value":686},"  const",{"type":558,"tag":614,"props":688,"children":689},{"style":639},[690],{"type":563,"value":691}," obj",{"type":558,"tag":614,"props":693,"children":694},{"style":633},[695],{"type":563,"value":696}," =",{"type":558,"tag":614,"props":698,"children":699},{"style":621},[700],{"type":563,"value":701}," new",{"type":558,"tag":614,"props":703,"children":704},{"style":627},[705],{"type":563,"value":706}," Object",{"type":558,"tag":614,"props":708,"children":709},{"style":633},[710],{"type":563,"value":711},"();\n",{"type":558,"tag":614,"props":713,"children":715},{"class":616,"line":714},4,[716,721,726,732,736,740,744,749],{"type":558,"tag":614,"props":717,"children":718},{"style":639},[719],{"type":563,"value":720},"  obj",{"type":558,"tag":614,"props":722,"children":723},{"style":633},[724],{"type":563,"value":725},".",{"type":558,"tag":614,"props":727,"children":729},{"style":728},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[730],{"type":563,"value":731},"__proto__",{"type":558,"tag":614,"props":733,"children":734},{"style":633},[735],{"type":563,"value":696},{"type":558,"tag":614,"props":737,"children":738},{"style":728},[739],{"type":563,"value":630},{"type":558,"tag":614,"props":741,"children":742},{"style":633},[743],{"type":563,"value":725},{"type":558,"tag":614,"props":745,"children":746},{"style":728},[747],{"type":563,"value":748},"prototype",{"type":558,"tag":614,"props":750,"children":751},{"style":633},[752],{"type":563,"value":753},";\n",{"type":558,"tag":614,"props":755,"children":757},{"class":616,"line":756},5,[758,763,767,772,776,781,785,790],{"type":558,"tag":614,"props":759,"children":760},{"style":639},[761],{"type":563,"value":762},"  newFactory",{"type":558,"tag":614,"props":764,"children":765},{"style":633},[766],{"type":563,"value":725},{"type":558,"tag":614,"props":768,"children":769},{"style":627},[770],{"type":563,"value":771},"apply",{"type":558,"tag":614,"props":773,"children":774},{"style":633},[775],{"type":563,"value":636},{"type":558,"tag":614,"props":777,"children":778},{"style":639},[779],{"type":563,"value":780},"obj",{"type":558,"tag":614,"props":782,"children":783},{"style":633},[784],{"type":563,"value":647},{"type":558,"tag":614,"props":786,"children":787},{"style":639},[788],{"type":563,"value":789}," args",{"type":558,"tag":614,"props":791,"children":792},{"style":633},[793],{"type":563,"value":794},");\n",{"type":558,"tag":614,"props":796,"children":798},{"class":616,"line":797},6,[799,805,809],{"type":558,"tag":614,"props":800,"children":802},{"style":801},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[803],{"type":563,"value":804},"  return",{"type":558,"tag":614,"props":806,"children":807},{"style":639},[808],{"type":563,"value":691},{"type":558,"tag":614,"props":810,"children":811},{"style":633},[812],{"type":563,"value":753},{"type":558,"tag":614,"props":814,"children":816},{"class":616,"line":815},7,[817],{"type":558,"tag":614,"props":818,"children":819},{"style":633},[820],{"type":563,"value":821},"}\n",{"type":558,"tag":559,"props":823,"children":824},{},[825],{"type":563,"value":826},"方式二：",{"type":558,"tag":603,"props":828,"children":830},{"className":605,"code":829,"language":607,"meta":552,"style":552},"function newFactory(fn, ...args) {\n  const obj = Object.create(fn.prototype);\n  fn.apply(obj, args);\n  return obj;\n}\n",[831],{"type":558,"tag":610,"props":832,"children":833},{"__ignoreMap":552},[834,873,921,957,972],{"type":558,"tag":614,"props":835,"children":836},{"class":616,"line":617},[837,841,845,849,853,857,861,865,869],{"type":558,"tag":614,"props":838,"children":839},{"style":621},[840],{"type":563,"value":624},{"type":558,"tag":614,"props":842,"children":843},{"style":627},[844],{"type":563,"value":630},{"type":558,"tag":614,"props":846,"children":847},{"style":633},[848],{"type":563,"value":636},{"type":558,"tag":614,"props":850,"children":851},{"style":639},[852],{"type":563,"value":642},{"type":558,"tag":614,"props":854,"children":855},{"style":633},[856],{"type":563,"value":647},{"type":558,"tag":614,"props":858,"children":859},{"style":633},[860],{"type":563,"value":652},{"type":558,"tag":614,"props":862,"children":863},{"style":639},[864],{"type":563,"value":657},{"type":558,"tag":614,"props":866,"children":867},{"style":633},[868],{"type":563,"value":662},{"type":558,"tag":614,"props":870,"children":871},{"style":633},[872],{"type":563,"value":667},{"type":558,"tag":614,"props":874,"children":875},{"class":616,"line":670},[876,880,884,888,892,896,901,905,909,913,917],{"type":558,"tag":614,"props":877,"children":878},{"style":621},[879],{"type":563,"value":686},{"type":558,"tag":614,"props":881,"children":882},{"style":639},[883],{"type":563,"value":691},{"type":558,"tag":614,"props":885,"children":886},{"style":633},[887],{"type":563,"value":696},{"type":558,"tag":614,"props":889,"children":890},{"style":639},[891],{"type":563,"value":706},{"type":558,"tag":614,"props":893,"children":894},{"style":633},[895],{"type":563,"value":725},{"type":558,"tag":614,"props":897,"children":898},{"style":627},[899],{"type":563,"value":900},"create",{"type":558,"tag":614,"props":902,"children":903},{"style":633},[904],{"type":563,"value":636},{"type":558,"tag":614,"props":906,"children":907},{"style":728},[908],{"type":563,"value":642},{"type":558,"tag":614,"props":910,"children":911},{"style":633},[912],{"type":563,"value":725},{"type":558,"tag":614,"props":914,"children":915},{"style":728},[916],{"type":563,"value":748},{"type":558,"tag":614,"props":918,"children":919},{"style":633},[920],{"type":563,"value":794},{"type":558,"tag":614,"props":922,"children":923},{"class":616,"line":680},[924,929,933,937,941,945,949,953],{"type":558,"tag":614,"props":925,"children":926},{"style":639},[927],{"type":563,"value":928},"  fn",{"type":558,"tag":614,"props":930,"children":931},{"style":633},[932],{"type":563,"value":725},{"type":558,"tag":614,"props":934,"children":935},{"style":627},[936],{"type":563,"value":771},{"type":558,"tag":614,"props":938,"children":939},{"style":633},[940],{"type":563,"value":636},{"type":558,"tag":614,"props":942,"children":943},{"style":639},[944],{"type":563,"value":780},{"type":558,"tag":614,"props":946,"children":947},{"style":633},[948],{"type":563,"value":647},{"type":558,"tag":614,"props":950,"children":951},{"style":639},[952],{"type":563,"value":789},{"type":558,"tag":614,"props":954,"children":955},{"style":633},[956],{"type":563,"value":794},{"type":558,"tag":614,"props":958,"children":959},{"class":616,"line":714},[960,964,968],{"type":558,"tag":614,"props":961,"children":962},{"style":801},[963],{"type":563,"value":804},{"type":558,"tag":614,"props":965,"children":966},{"style":639},[967],{"type":563,"value":691},{"type":558,"tag":614,"props":969,"children":970},{"style":633},[971],{"type":563,"value":753},{"type":558,"tag":614,"props":973,"children":974},{"class":616,"line":756},[975],{"type":558,"tag":614,"props":976,"children":977},{"style":633},[978],{"type":563,"value":821},{"type":558,"tag":980,"props":981,"children":982},"style",{},[983],{"type":563,"value":984},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":552,"searchDepth":756,"depth":756,"links":986},[],"markdown","content:3.code-assessment:1.source:1.native-api:4.new.md","content","3.code-assessment/1.source/1.native-api/4.new.md","md",[993,994],{"_path":321,"title":320,"description":552},{"_path":327,"title":326,"description":552},1715007500245]