[{"data":1,"prerenderedAt":1585},["Reactive",2],{"navigation":3,"/code-assessment/source/native-api/iterator":540,"/code-assessment/source/native-api/iterator-surround":1581},[4,269,298,508,516,525],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":507},"代码考核","/code-assessment",[302,401,500],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,334,350,378,385,392,395,398],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333},"extends","/code-assessment/source/native-api/extends",{"title":335,"_path":336,"children":337},"函数 Function","/code-assessment/source/function",[338,341,344,347],{"title":339,"_path":340},"函数防抖","/code-assessment/source/function/debounce",{"title":342,"_path":343},"函数节流","/code-assessment/source/function/throttle",{"title":345,"_path":346},"函数柯理化","/code-assessment/source/function/curry",{"title":348,"_path":349},"函数睡眠","/code-assessment/source/function/sleep",{"title":351,"_path":352,"children":353},"数组 Array","/code-assessment/source/array",[354,357,360,363,366,369,372,375],{"title":355,"_path":356},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":358,"_path":359},"数组扁平化","/code-assessment/source/array/flat",{"title":361,"_path":362},"原型方法","/code-assessment/source/array/prototype-method",{"title":364,"_path":365},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":367,"_path":368},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":370,"_path":371},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":373,"_path":374},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":376,"_path":377},"二维数组","/code-assessment/source/array/2d-array",{"title":379,"_path":380,"children":381},"字符串 String","/code-assessment/source/string",[382],{"title":383,"_path":384},"repeat()","/code-assessment/source/string/repeat",{"title":386,"_path":387,"children":388},"集合 Set","/code-assessment/source/set",[389],{"title":390,"_path":391},"遍历集合","/code-assessment/source/set/traverse",{"title":393,"_path":394},"获取通用类型","/code-assessment/source/get-generic-type",{"title":396,"_path":397},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":399,"_path":400},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":402,"_path":403,"children":404},"业务场景","/code-assessment/scene",[405,436,446,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497],{"title":406,"_path":407,"children":408},"Promise","/code-assessment/scene/promise",[409,412,415,418,421,424,427,430,433],{"title":410,"_path":411},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":413,"_path":414},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":416,"_path":417},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":419,"_path":420},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":422,"_path":423},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":425,"_path":426},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":428,"_path":429},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":431,"_path":432},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":434,"_path":435},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":437,"_path":438,"children":439},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[440,443],{"title":441,"_path":442},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":444,"_path":445},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":447,"_path":448},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":450,"_path":451},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":453,"_path":454},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":456,"_path":457},"倒计时","/code-assessment/scene/countdown",{"title":459,"_path":460},"日期格式化","/code-assessment/scene/date-format",{"title":462,"_path":463},"实现前端路由","/code-assessment/scene/frontend-route",{"title":465,"_path":466},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":468,"_path":469},"lodash.get","/code-assessment/scene/lodash-get",{"title":471,"_path":472},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":474,"_path":475},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":477,"_path":478},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":480,"_path":481},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":483,"_path":484},"随机数","/code-assessment/scene/random-number",{"title":486,"_path":487},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":489,"_path":490},"sku 算法实现","/code-assessment/scene/sku",{"title":492,"_path":493},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":495,"_path":496},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":498,"_path":499},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":501,"_path":502,"children":503},"Ts 类型挑战","/code-assessment/type-challeges",[504],{"title":505,"_path":506},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":509,"_path":510,"children":511,"icon":515},"项目","/project",[512],{"title":513,"_path":514},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":517,"_path":518,"children":519,"icon":524},"设计模式","/design-mode",[520,521],{"title":517,"_path":518},{"title":522,"_path":523},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":526,"_path":527,"children":528,"icon":539},"后端语言","/backend-languages",[529],{"title":530,"_path":531,"children":532},"Python","/backend-languages/python",[533,536],{"title":534,"_path":535},"基础","/backend-languages/python/base",{"title":537,"_path":538},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":330,"_dir":541,"_draft":542,"_partial":542,"_locale":543,"title":329,"description":543,"body":544,"_type":1576,"_id":1577,"_source":1578,"_file":1579,"_extension":1580},"native-api",false,"",{"type":545,"children":546,"toc":1572},"root",[547,555,1062,1067,1566],{"type":548,"tag":549,"props":550,"children":552},"element","h2",{"id":551},"实现迭代器函数",[553],{"type":554,"value":551},"text",{"type":548,"tag":556,"props":557,"children":561},"pre",{"className":558,"code":559,"language":560,"meta":543,"style":543},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/*\n * 这是一个手写的迭代器(Iterator)\n * 满足迭代器协议的对象。\n * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n */\nvar it = makeIterator([\"a\", \"b\"]);\n\nit.next(); // { value: \"a\", done: false }\nit.next(); // { value: \"b\", done: false }\nit.next(); // { value: undefined, done: true }\n\nfunction makeIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n  };\n}\n","js",[562],{"type":548,"tag":563,"props":564,"children":565},"code",{"__ignoreMap":543},[566,578,587,596,605,614,687,697,726,751,776,784,817,846,860,888,921,987,1035,1044,1053],{"type":548,"tag":567,"props":568,"children":571},"span",{"class":569,"line":570},"line",1,[572],{"type":548,"tag":567,"props":573,"children":575},{"style":574},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[576],{"type":554,"value":577},"/*\n",{"type":548,"tag":567,"props":579,"children":581},{"class":569,"line":580},2,[582],{"type":548,"tag":567,"props":583,"children":584},{"style":574},[585],{"type":554,"value":586}," * 这是一个手写的迭代器(Iterator)\n",{"type":548,"tag":567,"props":588,"children":590},{"class":569,"line":589},3,[591],{"type":548,"tag":567,"props":592,"children":593},{"style":574},[594],{"type":554,"value":595}," * 满足迭代器协议的对象。\n",{"type":548,"tag":567,"props":597,"children":599},{"class":569,"line":598},4,[600],{"type":548,"tag":567,"props":601,"children":602},{"style":574},[603],{"type":554,"value":604}," * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n",{"type":548,"tag":567,"props":606,"children":608},{"class":569,"line":607},5,[609],{"type":548,"tag":567,"props":610,"children":611},{"style":574},[612],{"type":554,"value":613}," */\n",{"type":548,"tag":567,"props":615,"children":617},{"class":569,"line":616},6,[618,624,630,636,642,647,653,659,663,668,673,678,682],{"type":548,"tag":567,"props":619,"children":621},{"style":620},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[622],{"type":554,"value":623},"var",{"type":548,"tag":567,"props":625,"children":627},{"style":626},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[628],{"type":554,"value":629}," it",{"type":548,"tag":567,"props":631,"children":633},{"style":632},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[634],{"type":554,"value":635}," =",{"type":548,"tag":567,"props":637,"children":639},{"style":638},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[640],{"type":554,"value":641}," makeIterator",{"type":548,"tag":567,"props":643,"children":644},{"style":632},[645],{"type":554,"value":646},"([",{"type":548,"tag":567,"props":648,"children":650},{"style":649},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[651],{"type":554,"value":652},"\"",{"type":548,"tag":567,"props":654,"children":656},{"style":655},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[657],{"type":554,"value":658},"a",{"type":548,"tag":567,"props":660,"children":661},{"style":649},[662],{"type":554,"value":652},{"type":548,"tag":567,"props":664,"children":665},{"style":632},[666],{"type":554,"value":667},",",{"type":548,"tag":567,"props":669,"children":670},{"style":649},[671],{"type":554,"value":672}," \"",{"type":548,"tag":567,"props":674,"children":675},{"style":655},[676],{"type":554,"value":677},"b",{"type":548,"tag":567,"props":679,"children":680},{"style":649},[681],{"type":554,"value":652},{"type":548,"tag":567,"props":683,"children":684},{"style":632},[685],{"type":554,"value":686},"]);\n",{"type":548,"tag":567,"props":688,"children":690},{"class":569,"line":689},7,[691],{"type":548,"tag":567,"props":692,"children":694},{"emptyLinePlaceholder":693},true,[695],{"type":554,"value":696},"\n",{"type":548,"tag":567,"props":698,"children":700},{"class":569,"line":699},8,[701,706,711,716,721],{"type":548,"tag":567,"props":702,"children":703},{"style":626},[704],{"type":554,"value":705},"it",{"type":548,"tag":567,"props":707,"children":708},{"style":632},[709],{"type":554,"value":710},".",{"type":548,"tag":567,"props":712,"children":713},{"style":638},[714],{"type":554,"value":715},"next",{"type":548,"tag":567,"props":717,"children":718},{"style":632},[719],{"type":554,"value":720},"();",{"type":548,"tag":567,"props":722,"children":723},{"style":574},[724],{"type":554,"value":725}," // { value: \"a\", done: false }\n",{"type":548,"tag":567,"props":727,"children":729},{"class":569,"line":728},9,[730,734,738,742,746],{"type":548,"tag":567,"props":731,"children":732},{"style":626},[733],{"type":554,"value":705},{"type":548,"tag":567,"props":735,"children":736},{"style":632},[737],{"type":554,"value":710},{"type":548,"tag":567,"props":739,"children":740},{"style":638},[741],{"type":554,"value":715},{"type":548,"tag":567,"props":743,"children":744},{"style":632},[745],{"type":554,"value":720},{"type":548,"tag":567,"props":747,"children":748},{"style":574},[749],{"type":554,"value":750}," // { value: \"b\", done: false }\n",{"type":548,"tag":567,"props":752,"children":754},{"class":569,"line":753},10,[755,759,763,767,771],{"type":548,"tag":567,"props":756,"children":757},{"style":626},[758],{"type":554,"value":705},{"type":548,"tag":567,"props":760,"children":761},{"style":632},[762],{"type":554,"value":710},{"type":548,"tag":567,"props":764,"children":765},{"style":638},[766],{"type":554,"value":715},{"type":548,"tag":567,"props":768,"children":769},{"style":632},[770],{"type":554,"value":720},{"type":548,"tag":567,"props":772,"children":773},{"style":574},[774],{"type":554,"value":775}," // { value: undefined, done: true }\n",{"type":548,"tag":567,"props":777,"children":779},{"class":569,"line":778},11,[780],{"type":548,"tag":567,"props":781,"children":782},{"emptyLinePlaceholder":693},[783],{"type":554,"value":696},{"type":548,"tag":567,"props":785,"children":787},{"class":569,"line":786},12,[788,793,797,802,807,812],{"type":548,"tag":567,"props":789,"children":790},{"style":620},[791],{"type":554,"value":792},"function",{"type":548,"tag":567,"props":794,"children":795},{"style":638},[796],{"type":554,"value":641},{"type":548,"tag":567,"props":798,"children":799},{"style":632},[800],{"type":554,"value":801},"(",{"type":548,"tag":567,"props":803,"children":804},{"style":626},[805],{"type":554,"value":806},"array",{"type":548,"tag":567,"props":808,"children":809},{"style":632},[810],{"type":554,"value":811},")",{"type":548,"tag":567,"props":813,"children":814},{"style":632},[815],{"type":554,"value":816}," {\n",{"type":548,"tag":567,"props":818,"children":820},{"class":569,"line":819},13,[821,826,831,835,841],{"type":548,"tag":567,"props":822,"children":823},{"style":620},[824],{"type":554,"value":825},"  var",{"type":548,"tag":567,"props":827,"children":828},{"style":626},[829],{"type":554,"value":830}," nextIndex",{"type":548,"tag":567,"props":832,"children":833},{"style":632},[834],{"type":554,"value":635},{"type":548,"tag":567,"props":836,"children":838},{"style":837},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[839],{"type":554,"value":840}," 0",{"type":548,"tag":567,"props":842,"children":843},{"style":632},[844],{"type":554,"value":845},";\n",{"type":548,"tag":567,"props":847,"children":849},{"class":569,"line":848},14,[850,856],{"type":548,"tag":567,"props":851,"children":853},{"style":852},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[854],{"type":554,"value":855},"  return",{"type":548,"tag":567,"props":857,"children":858},{"style":632},[859],{"type":554,"value":816},{"type":548,"tag":567,"props":861,"children":863},{"class":569,"line":862},15,[864,869,874,879,884],{"type":548,"tag":567,"props":865,"children":866},{"style":638},[867],{"type":554,"value":868},"    next",{"type":548,"tag":567,"props":870,"children":871},{"style":632},[872],{"type":554,"value":873},":",{"type":548,"tag":567,"props":875,"children":876},{"style":620},[877],{"type":554,"value":878}," function",{"type":548,"tag":567,"props":880,"children":881},{"style":632},[882],{"type":554,"value":883}," ()",{"type":548,"tag":567,"props":885,"children":886},{"style":632},[887],{"type":554,"value":816},{"type":548,"tag":567,"props":889,"children":891},{"class":569,"line":890},16,[892,897,901,906,911,915],{"type":548,"tag":567,"props":893,"children":894},{"style":852},[895],{"type":554,"value":896},"      return",{"type":548,"tag":567,"props":898,"children":899},{"style":626},[900],{"type":554,"value":830},{"type":548,"tag":567,"props":902,"children":903},{"style":632},[904],{"type":554,"value":905}," \u003C",{"type":548,"tag":567,"props":907,"children":908},{"style":626},[909],{"type":554,"value":910}," array",{"type":548,"tag":567,"props":912,"children":913},{"style":632},[914],{"type":554,"value":710},{"type":548,"tag":567,"props":916,"children":918},{"style":917},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[919],{"type":554,"value":920},"length\n",{"type":548,"tag":567,"props":922,"children":924},{"class":569,"line":923},17,[925,930,935,940,944,948,953,958,963,968,973,977,982],{"type":548,"tag":567,"props":926,"children":927},{"style":620},[928],{"type":554,"value":929},"        ?",{"type":548,"tag":567,"props":931,"children":932},{"style":632},[933],{"type":554,"value":934}," {",{"type":548,"tag":567,"props":936,"children":937},{"style":917},[938],{"type":554,"value":939}," value",{"type":548,"tag":567,"props":941,"children":942},{"style":632},[943],{"type":554,"value":873},{"type":548,"tag":567,"props":945,"children":946},{"style":626},[947],{"type":554,"value":910},{"type":548,"tag":567,"props":949,"children":950},{"style":632},[951],{"type":554,"value":952},"[",{"type":548,"tag":567,"props":954,"children":955},{"style":626},[956],{"type":554,"value":957},"nextIndex",{"type":548,"tag":567,"props":959,"children":960},{"style":620},[961],{"type":554,"value":962},"++",{"type":548,"tag":567,"props":964,"children":965},{"style":632},[966],{"type":554,"value":967},"],",{"type":548,"tag":567,"props":969,"children":970},{"style":917},[971],{"type":554,"value":972}," done",{"type":548,"tag":567,"props":974,"children":975},{"style":632},[976],{"type":554,"value":873},{"type":548,"tag":567,"props":978,"children":979},{"style":852},[980],{"type":554,"value":981}," false",{"type":548,"tag":567,"props":983,"children":984},{"style":632},[985],{"type":554,"value":986}," }\n",{"type":548,"tag":567,"props":988,"children":990},{"class":569,"line":989},18,[991,996,1000,1004,1008,1013,1017,1021,1025,1030],{"type":548,"tag":567,"props":992,"children":993},{"style":620},[994],{"type":554,"value":995},"        :",{"type":548,"tag":567,"props":997,"children":998},{"style":632},[999],{"type":554,"value":934},{"type":548,"tag":567,"props":1001,"children":1002},{"style":917},[1003],{"type":554,"value":939},{"type":548,"tag":567,"props":1005,"children":1006},{"style":632},[1007],{"type":554,"value":873},{"type":548,"tag":567,"props":1009,"children":1010},{"style":620},[1011],{"type":554,"value":1012}," undefined",{"type":548,"tag":567,"props":1014,"children":1015},{"style":632},[1016],{"type":554,"value":667},{"type":548,"tag":567,"props":1018,"children":1019},{"style":917},[1020],{"type":554,"value":972},{"type":548,"tag":567,"props":1022,"children":1023},{"style":632},[1024],{"type":554,"value":873},{"type":548,"tag":567,"props":1026,"children":1027},{"style":852},[1028],{"type":554,"value":1029}," true",{"type":548,"tag":567,"props":1031,"children":1032},{"style":632},[1033],{"type":554,"value":1034}," };\n",{"type":548,"tag":567,"props":1036,"children":1038},{"class":569,"line":1037},19,[1039],{"type":548,"tag":567,"props":1040,"children":1041},{"style":632},[1042],{"type":554,"value":1043},"    },\n",{"type":548,"tag":567,"props":1045,"children":1047},{"class":569,"line":1046},20,[1048],{"type":548,"tag":567,"props":1049,"children":1050},{"style":632},[1051],{"type":554,"value":1052},"  };\n",{"type":548,"tag":567,"props":1054,"children":1056},{"class":569,"line":1055},21,[1057],{"type":548,"tag":567,"props":1058,"children":1059},{"style":632},[1060],{"type":554,"value":1061},"}\n",{"type":548,"tag":549,"props":1063,"children":1065},{"id":1064},"可迭代的迭代器",[1066],{"type":554,"value":1064},{"type":548,"tag":556,"props":1068,"children":1070},{"className":558,"code":1069,"language":560,"meta":543,"style":543},"/**\n * 使迭代器可迭代\n * makeIterator 函数生成的迭代器并没有实现可迭代协议\n * 所以不能在 for...of 等语法中使用。\n * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n * 从新名了下函数名称 createIterator\n */\nfunction createIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n    [Symbol.iterator]: function () {\n      console.log(\"返回的迭代器:\", this);\n      return this; // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n    },\n  };\n}\n\nvar iterator = createIterator([1, 2, 3]);\nconsole.log(...iterator);\n",[1071],{"type":548,"tag":563,"props":1072,"children":1073},{"__ignoreMap":543},[1074,1082,1090,1098,1106,1114,1122,1129,1157,1180,1191,1214,1241,1296,1339,1346,1385,1434,1455,1462,1469,1476,1484,1536],{"type":548,"tag":567,"props":1075,"children":1076},{"class":569,"line":570},[1077],{"type":548,"tag":567,"props":1078,"children":1079},{"style":574},[1080],{"type":554,"value":1081},"/**\n",{"type":548,"tag":567,"props":1083,"children":1084},{"class":569,"line":580},[1085],{"type":548,"tag":567,"props":1086,"children":1087},{"style":574},[1088],{"type":554,"value":1089}," * 使迭代器可迭代\n",{"type":548,"tag":567,"props":1091,"children":1092},{"class":569,"line":589},[1093],{"type":548,"tag":567,"props":1094,"children":1095},{"style":574},[1096],{"type":554,"value":1097}," * makeIterator 函数生成的迭代器并没有实现可迭代协议\n",{"type":548,"tag":567,"props":1099,"children":1100},{"class":569,"line":598},[1101],{"type":548,"tag":567,"props":1102,"children":1103},{"style":574},[1104],{"type":554,"value":1105}," * 所以不能在 for...of 等语法中使用。\n",{"type":548,"tag":567,"props":1107,"children":1108},{"class":569,"line":607},[1109],{"type":548,"tag":567,"props":1110,"children":1111},{"style":574},[1112],{"type":554,"value":1113}," * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n",{"type":548,"tag":567,"props":1115,"children":1116},{"class":569,"line":616},[1117],{"type":548,"tag":567,"props":1118,"children":1119},{"style":574},[1120],{"type":554,"value":1121}," * 从新名了下函数名称 createIterator\n",{"type":548,"tag":567,"props":1123,"children":1124},{"class":569,"line":689},[1125],{"type":548,"tag":567,"props":1126,"children":1127},{"style":574},[1128],{"type":554,"value":613},{"type":548,"tag":567,"props":1130,"children":1131},{"class":569,"line":699},[1132,1136,1141,1145,1149,1153],{"type":548,"tag":567,"props":1133,"children":1134},{"style":620},[1135],{"type":554,"value":792},{"type":548,"tag":567,"props":1137,"children":1138},{"style":638},[1139],{"type":554,"value":1140}," createIterator",{"type":548,"tag":567,"props":1142,"children":1143},{"style":632},[1144],{"type":554,"value":801},{"type":548,"tag":567,"props":1146,"children":1147},{"style":626},[1148],{"type":554,"value":806},{"type":548,"tag":567,"props":1150,"children":1151},{"style":632},[1152],{"type":554,"value":811},{"type":548,"tag":567,"props":1154,"children":1155},{"style":632},[1156],{"type":554,"value":816},{"type":548,"tag":567,"props":1158,"children":1159},{"class":569,"line":728},[1160,1164,1168,1172,1176],{"type":548,"tag":567,"props":1161,"children":1162},{"style":620},[1163],{"type":554,"value":825},{"type":548,"tag":567,"props":1165,"children":1166},{"style":626},[1167],{"type":554,"value":830},{"type":548,"tag":567,"props":1169,"children":1170},{"style":632},[1171],{"type":554,"value":635},{"type":548,"tag":567,"props":1173,"children":1174},{"style":837},[1175],{"type":554,"value":840},{"type":548,"tag":567,"props":1177,"children":1178},{"style":632},[1179],{"type":554,"value":845},{"type":548,"tag":567,"props":1181,"children":1182},{"class":569,"line":753},[1183,1187],{"type":548,"tag":567,"props":1184,"children":1185},{"style":852},[1186],{"type":554,"value":855},{"type":548,"tag":567,"props":1188,"children":1189},{"style":632},[1190],{"type":554,"value":816},{"type":548,"tag":567,"props":1192,"children":1193},{"class":569,"line":778},[1194,1198,1202,1206,1210],{"type":548,"tag":567,"props":1195,"children":1196},{"style":638},[1197],{"type":554,"value":868},{"type":548,"tag":567,"props":1199,"children":1200},{"style":632},[1201],{"type":554,"value":873},{"type":548,"tag":567,"props":1203,"children":1204},{"style":620},[1205],{"type":554,"value":878},{"type":548,"tag":567,"props":1207,"children":1208},{"style":632},[1209],{"type":554,"value":883},{"type":548,"tag":567,"props":1211,"children":1212},{"style":632},[1213],{"type":554,"value":816},{"type":548,"tag":567,"props":1215,"children":1216},{"class":569,"line":786},[1217,1221,1225,1229,1233,1237],{"type":548,"tag":567,"props":1218,"children":1219},{"style":852},[1220],{"type":554,"value":896},{"type":548,"tag":567,"props":1222,"children":1223},{"style":626},[1224],{"type":554,"value":830},{"type":548,"tag":567,"props":1226,"children":1227},{"style":632},[1228],{"type":554,"value":905},{"type":548,"tag":567,"props":1230,"children":1231},{"style":626},[1232],{"type":554,"value":910},{"type":548,"tag":567,"props":1234,"children":1235},{"style":632},[1236],{"type":554,"value":710},{"type":548,"tag":567,"props":1238,"children":1239},{"style":917},[1240],{"type":554,"value":920},{"type":548,"tag":567,"props":1242,"children":1243},{"class":569,"line":819},[1244,1248,1252,1256,1260,1264,1268,1272,1276,1280,1284,1288,1292],{"type":548,"tag":567,"props":1245,"children":1246},{"style":620},[1247],{"type":554,"value":929},{"type":548,"tag":567,"props":1249,"children":1250},{"style":632},[1251],{"type":554,"value":934},{"type":548,"tag":567,"props":1253,"children":1254},{"style":917},[1255],{"type":554,"value":939},{"type":548,"tag":567,"props":1257,"children":1258},{"style":632},[1259],{"type":554,"value":873},{"type":548,"tag":567,"props":1261,"children":1262},{"style":626},[1263],{"type":554,"value":910},{"type":548,"tag":567,"props":1265,"children":1266},{"style":632},[1267],{"type":554,"value":952},{"type":548,"tag":567,"props":1269,"children":1270},{"style":626},[1271],{"type":554,"value":957},{"type":548,"tag":567,"props":1273,"children":1274},{"style":620},[1275],{"type":554,"value":962},{"type":548,"tag":567,"props":1277,"children":1278},{"style":632},[1279],{"type":554,"value":967},{"type":548,"tag":567,"props":1281,"children":1282},{"style":917},[1283],{"type":554,"value":972},{"type":548,"tag":567,"props":1285,"children":1286},{"style":632},[1287],{"type":554,"value":873},{"type":548,"tag":567,"props":1289,"children":1290},{"style":852},[1291],{"type":554,"value":981},{"type":548,"tag":567,"props":1293,"children":1294},{"style":632},[1295],{"type":554,"value":986},{"type":548,"tag":567,"props":1297,"children":1298},{"class":569,"line":848},[1299,1303,1307,1311,1315,1319,1323,1327,1331,1335],{"type":548,"tag":567,"props":1300,"children":1301},{"style":620},[1302],{"type":554,"value":995},{"type":548,"tag":567,"props":1304,"children":1305},{"style":632},[1306],{"type":554,"value":934},{"type":548,"tag":567,"props":1308,"children":1309},{"style":917},[1310],{"type":554,"value":939},{"type":548,"tag":567,"props":1312,"children":1313},{"style":632},[1314],{"type":554,"value":873},{"type":548,"tag":567,"props":1316,"children":1317},{"style":620},[1318],{"type":554,"value":1012},{"type":548,"tag":567,"props":1320,"children":1321},{"style":632},[1322],{"type":554,"value":667},{"type":548,"tag":567,"props":1324,"children":1325},{"style":917},[1326],{"type":554,"value":972},{"type":548,"tag":567,"props":1328,"children":1329},{"style":632},[1330],{"type":554,"value":873},{"type":548,"tag":567,"props":1332,"children":1333},{"style":852},[1334],{"type":554,"value":1029},{"type":548,"tag":567,"props":1336,"children":1337},{"style":632},[1338],{"type":554,"value":1034},{"type":548,"tag":567,"props":1340,"children":1341},{"class":569,"line":862},[1342],{"type":548,"tag":567,"props":1343,"children":1344},{"style":632},[1345],{"type":554,"value":1043},{"type":548,"tag":567,"props":1347,"children":1348},{"class":569,"line":890},[1349,1354,1359,1363,1368,1373,1377,1381],{"type":548,"tag":567,"props":1350,"children":1351},{"style":632},[1352],{"type":554,"value":1353},"    [",{"type":548,"tag":567,"props":1355,"children":1356},{"style":626},[1357],{"type":554,"value":1358},"Symbol",{"type":548,"tag":567,"props":1360,"children":1361},{"style":632},[1362],{"type":554,"value":710},{"type":548,"tag":567,"props":1364,"children":1365},{"style":626},[1366],{"type":554,"value":1367},"iterator",{"type":548,"tag":567,"props":1369,"children":1370},{"style":632},[1371],{"type":554,"value":1372},"]:",{"type":548,"tag":567,"props":1374,"children":1375},{"style":620},[1376],{"type":554,"value":878},{"type":548,"tag":567,"props":1378,"children":1379},{"style":632},[1380],{"type":554,"value":883},{"type":548,"tag":567,"props":1382,"children":1383},{"style":632},[1384],{"type":554,"value":816},{"type":548,"tag":567,"props":1386,"children":1387},{"class":569,"line":923},[1388,1393,1397,1402,1406,1410,1415,1419,1423,1429],{"type":548,"tag":567,"props":1389,"children":1390},{"style":626},[1391],{"type":554,"value":1392},"      console",{"type":548,"tag":567,"props":1394,"children":1395},{"style":632},[1396],{"type":554,"value":710},{"type":548,"tag":567,"props":1398,"children":1399},{"style":638},[1400],{"type":554,"value":1401},"log",{"type":548,"tag":567,"props":1403,"children":1404},{"style":632},[1405],{"type":554,"value":801},{"type":548,"tag":567,"props":1407,"children":1408},{"style":649},[1409],{"type":554,"value":652},{"type":548,"tag":567,"props":1411,"children":1412},{"style":655},[1413],{"type":554,"value":1414},"返回的迭代器:",{"type":548,"tag":567,"props":1416,"children":1417},{"style":649},[1418],{"type":554,"value":652},{"type":548,"tag":567,"props":1420,"children":1421},{"style":632},[1422],{"type":554,"value":667},{"type":548,"tag":567,"props":1424,"children":1426},{"style":1425},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[1427],{"type":554,"value":1428}," this",{"type":548,"tag":567,"props":1430,"children":1431},{"style":632},[1432],{"type":554,"value":1433},");\n",{"type":548,"tag":567,"props":1435,"children":1436},{"class":569,"line":989},[1437,1441,1445,1450],{"type":548,"tag":567,"props":1438,"children":1439},{"style":852},[1440],{"type":554,"value":896},{"type":548,"tag":567,"props":1442,"children":1443},{"style":1425},[1444],{"type":554,"value":1428},{"type":548,"tag":567,"props":1446,"children":1447},{"style":632},[1448],{"type":554,"value":1449},";",{"type":548,"tag":567,"props":1451,"children":1452},{"style":574},[1453],{"type":554,"value":1454}," // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n",{"type":548,"tag":567,"props":1456,"children":1457},{"class":569,"line":1037},[1458],{"type":548,"tag":567,"props":1459,"children":1460},{"style":632},[1461],{"type":554,"value":1043},{"type":548,"tag":567,"props":1463,"children":1464},{"class":569,"line":1046},[1465],{"type":548,"tag":567,"props":1466,"children":1467},{"style":632},[1468],{"type":554,"value":1052},{"type":548,"tag":567,"props":1470,"children":1471},{"class":569,"line":1055},[1472],{"type":548,"tag":567,"props":1473,"children":1474},{"style":632},[1475],{"type":554,"value":1061},{"type":548,"tag":567,"props":1477,"children":1479},{"class":569,"line":1478},22,[1480],{"type":548,"tag":567,"props":1481,"children":1482},{"emptyLinePlaceholder":693},[1483],{"type":554,"value":696},{"type":548,"tag":567,"props":1485,"children":1487},{"class":569,"line":1486},23,[1488,1492,1497,1501,1505,1509,1514,1518,1523,1527,1532],{"type":548,"tag":567,"props":1489,"children":1490},{"style":620},[1491],{"type":554,"value":623},{"type":548,"tag":567,"props":1493,"children":1494},{"style":626},[1495],{"type":554,"value":1496}," iterator",{"type":548,"tag":567,"props":1498,"children":1499},{"style":632},[1500],{"type":554,"value":635},{"type":548,"tag":567,"props":1502,"children":1503},{"style":638},[1504],{"type":554,"value":1140},{"type":548,"tag":567,"props":1506,"children":1507},{"style":632},[1508],{"type":554,"value":646},{"type":548,"tag":567,"props":1510,"children":1511},{"style":837},[1512],{"type":554,"value":1513},"1",{"type":548,"tag":567,"props":1515,"children":1516},{"style":632},[1517],{"type":554,"value":667},{"type":548,"tag":567,"props":1519,"children":1520},{"style":837},[1521],{"type":554,"value":1522}," 2",{"type":548,"tag":567,"props":1524,"children":1525},{"style":632},[1526],{"type":554,"value":667},{"type":548,"tag":567,"props":1528,"children":1529},{"style":837},[1530],{"type":554,"value":1531}," 3",{"type":548,"tag":567,"props":1533,"children":1534},{"style":632},[1535],{"type":554,"value":686},{"type":548,"tag":567,"props":1537,"children":1539},{"class":569,"line":1538},24,[1540,1545,1549,1553,1558,1562],{"type":548,"tag":567,"props":1541,"children":1542},{"style":626},[1543],{"type":554,"value":1544},"console",{"type":548,"tag":567,"props":1546,"children":1547},{"style":632},[1548],{"type":554,"value":710},{"type":548,"tag":567,"props":1550,"children":1551},{"style":638},[1552],{"type":554,"value":1401},{"type":548,"tag":567,"props":1554,"children":1555},{"style":632},[1556],{"type":554,"value":1557},"(...",{"type":548,"tag":567,"props":1559,"children":1560},{"style":626},[1561],{"type":554,"value":1367},{"type":548,"tag":567,"props":1563,"children":1564},{"style":632},[1565],{"type":554,"value":1433},{"type":548,"tag":1567,"props":1568,"children":1569},"style",{},[1570],{"type":554,"value":1571},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":543,"searchDepth":607,"depth":607,"links":1573},[1574,1575],{"id":551,"depth":580,"text":551},{"id":1064,"depth":580,"text":1064},"markdown","content:3.code-assessment:1.source:1.native-api:7.iterator.md","content","3.code-assessment/1.source/1.native-api/7.iterator.md","md",[1582,1584],{"_path":327,"title":326,"description":1583},"JSON.stringify() 方法将一个 js 对象或值转换为 json 字符串，如果指定了一个 replacer 函数，则可以选择性地替换值，或者指定的 replacer 是数组，则可选择性地仅包含数组指定的属性。",{"_path":333,"title":332,"description":543},1714099279129]