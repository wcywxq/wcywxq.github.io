[{"data":1,"prerenderedAt":1551},["Reactive",2],{"navigation":3,"/code-assessment/source/native-api/iterator":506,"/code-assessment/source/native-api/iterator-surround":1547},[4,269,298,474,482,491],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":473},"代码考核","/code-assessment",[302,373,466],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":374,"_path":375,"children":376},"业务场景","/code-assessment/scene",[377,402,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463],{"title":378,"_path":379,"children":380},"Promise","/code-assessment/scene/promise",[381,384,387,390,393,396,399],{"title":382,"_path":383},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":385,"_path":386},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":388,"_path":389},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":391,"_path":392},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":394,"_path":395},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":397,"_path":398},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":400,"_path":401},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":403,"_path":404,"children":405},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[406,409],{"title":407,"_path":408},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":410,"_path":411},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":413,"_path":414},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":416,"_path":417},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":419,"_path":420},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":422,"_path":423},"倒计时","/code-assessment/scene/countdown",{"title":425,"_path":426},"日期格式化","/code-assessment/scene/date-format",{"title":428,"_path":429},"实现前端路由","/code-assessment/scene/frontend-route",{"title":431,"_path":432},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":434,"_path":435},"lodash.get","/code-assessment/scene/lodash-get",{"title":437,"_path":438},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":440,"_path":441},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":443,"_path":444},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":446,"_path":447},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":449,"_path":450},"随机数","/code-assessment/scene/random-number",{"title":452,"_path":453},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":455,"_path":456},"sku 算法实现","/code-assessment/scene/sku",{"title":458,"_path":459},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":461,"_path":462},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":464,"_path":465},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":467,"_path":468,"children":469},"Ts 类型挑战","/code-assessment/type-challeges",[470],{"title":471,"_path":472},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":475,"_path":476,"children":477,"icon":481},"项目","/project",[478],{"title":479,"_path":480},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":483,"_path":484,"children":485,"icon":490},"设计模式","/design-mode",[486,487],{"title":483,"_path":484},{"title":488,"_path":489},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":492,"_path":493,"children":494,"icon":505},"后端语言","/backend-languages",[495],{"title":496,"_path":497,"children":498},"Python","/backend-languages/python",[499,502],{"title":500,"_path":501},"基础","/backend-languages/python/base",{"title":503,"_path":504},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":330,"_dir":507,"_draft":508,"_partial":508,"_locale":509,"title":329,"description":509,"body":510,"_type":1542,"_id":1543,"_source":1544,"_file":1545,"_extension":1546},"native-api",false,"",{"type":511,"children":512,"toc":1538},"root",[513,521,1028,1033,1532],{"type":514,"tag":515,"props":516,"children":518},"element","h2",{"id":517},"实现迭代器函数",[519],{"type":520,"value":517},"text",{"type":514,"tag":522,"props":523,"children":527},"pre",{"className":524,"code":525,"language":526,"meta":509,"style":509},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/*\n * 这是一个手写的迭代器(Iterator)\n * 满足迭代器协议的对象。\n * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n */\nvar it = makeIterator([\"a\", \"b\"]);\n\nit.next(); // { value: \"a\", done: false }\nit.next(); // { value: \"b\", done: false }\nit.next(); // { value: undefined, done: true }\n\nfunction makeIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n  };\n}\n","js",[528],{"type":514,"tag":529,"props":530,"children":531},"code",{"__ignoreMap":509},[532,544,553,562,571,580,653,663,692,717,742,750,783,812,826,854,887,953,1001,1010,1019],{"type":514,"tag":533,"props":534,"children":537},"span",{"class":535,"line":536},"line",1,[538],{"type":514,"tag":533,"props":539,"children":541},{"style":540},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[542],{"type":520,"value":543},"/*\n",{"type":514,"tag":533,"props":545,"children":547},{"class":535,"line":546},2,[548],{"type":514,"tag":533,"props":549,"children":550},{"style":540},[551],{"type":520,"value":552}," * 这是一个手写的迭代器(Iterator)\n",{"type":514,"tag":533,"props":554,"children":556},{"class":535,"line":555},3,[557],{"type":514,"tag":533,"props":558,"children":559},{"style":540},[560],{"type":520,"value":561}," * 满足迭代器协议的对象。\n",{"type":514,"tag":533,"props":563,"children":565},{"class":535,"line":564},4,[566],{"type":514,"tag":533,"props":567,"children":568},{"style":540},[569],{"type":520,"value":570}," * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n",{"type":514,"tag":533,"props":572,"children":574},{"class":535,"line":573},5,[575],{"type":514,"tag":533,"props":576,"children":577},{"style":540},[578],{"type":520,"value":579}," */\n",{"type":514,"tag":533,"props":581,"children":583},{"class":535,"line":582},6,[584,590,596,602,608,613,619,625,629,634,639,644,648],{"type":514,"tag":533,"props":585,"children":587},{"style":586},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[588],{"type":520,"value":589},"var",{"type":514,"tag":533,"props":591,"children":593},{"style":592},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[594],{"type":520,"value":595}," it",{"type":514,"tag":533,"props":597,"children":599},{"style":598},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[600],{"type":520,"value":601}," =",{"type":514,"tag":533,"props":603,"children":605},{"style":604},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[606],{"type":520,"value":607}," makeIterator",{"type":514,"tag":533,"props":609,"children":610},{"style":598},[611],{"type":520,"value":612},"([",{"type":514,"tag":533,"props":614,"children":616},{"style":615},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[617],{"type":520,"value":618},"\"",{"type":514,"tag":533,"props":620,"children":622},{"style":621},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[623],{"type":520,"value":624},"a",{"type":514,"tag":533,"props":626,"children":627},{"style":615},[628],{"type":520,"value":618},{"type":514,"tag":533,"props":630,"children":631},{"style":598},[632],{"type":520,"value":633},",",{"type":514,"tag":533,"props":635,"children":636},{"style":615},[637],{"type":520,"value":638}," \"",{"type":514,"tag":533,"props":640,"children":641},{"style":621},[642],{"type":520,"value":643},"b",{"type":514,"tag":533,"props":645,"children":646},{"style":615},[647],{"type":520,"value":618},{"type":514,"tag":533,"props":649,"children":650},{"style":598},[651],{"type":520,"value":652},"]);\n",{"type":514,"tag":533,"props":654,"children":656},{"class":535,"line":655},7,[657],{"type":514,"tag":533,"props":658,"children":660},{"emptyLinePlaceholder":659},true,[661],{"type":520,"value":662},"\n",{"type":514,"tag":533,"props":664,"children":666},{"class":535,"line":665},8,[667,672,677,682,687],{"type":514,"tag":533,"props":668,"children":669},{"style":592},[670],{"type":520,"value":671},"it",{"type":514,"tag":533,"props":673,"children":674},{"style":598},[675],{"type":520,"value":676},".",{"type":514,"tag":533,"props":678,"children":679},{"style":604},[680],{"type":520,"value":681},"next",{"type":514,"tag":533,"props":683,"children":684},{"style":598},[685],{"type":520,"value":686},"();",{"type":514,"tag":533,"props":688,"children":689},{"style":540},[690],{"type":520,"value":691}," // { value: \"a\", done: false }\n",{"type":514,"tag":533,"props":693,"children":695},{"class":535,"line":694},9,[696,700,704,708,712],{"type":514,"tag":533,"props":697,"children":698},{"style":592},[699],{"type":520,"value":671},{"type":514,"tag":533,"props":701,"children":702},{"style":598},[703],{"type":520,"value":676},{"type":514,"tag":533,"props":705,"children":706},{"style":604},[707],{"type":520,"value":681},{"type":514,"tag":533,"props":709,"children":710},{"style":598},[711],{"type":520,"value":686},{"type":514,"tag":533,"props":713,"children":714},{"style":540},[715],{"type":520,"value":716}," // { value: \"b\", done: false }\n",{"type":514,"tag":533,"props":718,"children":720},{"class":535,"line":719},10,[721,725,729,733,737],{"type":514,"tag":533,"props":722,"children":723},{"style":592},[724],{"type":520,"value":671},{"type":514,"tag":533,"props":726,"children":727},{"style":598},[728],{"type":520,"value":676},{"type":514,"tag":533,"props":730,"children":731},{"style":604},[732],{"type":520,"value":681},{"type":514,"tag":533,"props":734,"children":735},{"style":598},[736],{"type":520,"value":686},{"type":514,"tag":533,"props":738,"children":739},{"style":540},[740],{"type":520,"value":741}," // { value: undefined, done: true }\n",{"type":514,"tag":533,"props":743,"children":745},{"class":535,"line":744},11,[746],{"type":514,"tag":533,"props":747,"children":748},{"emptyLinePlaceholder":659},[749],{"type":520,"value":662},{"type":514,"tag":533,"props":751,"children":753},{"class":535,"line":752},12,[754,759,763,768,773,778],{"type":514,"tag":533,"props":755,"children":756},{"style":586},[757],{"type":520,"value":758},"function",{"type":514,"tag":533,"props":760,"children":761},{"style":604},[762],{"type":520,"value":607},{"type":514,"tag":533,"props":764,"children":765},{"style":598},[766],{"type":520,"value":767},"(",{"type":514,"tag":533,"props":769,"children":770},{"style":592},[771],{"type":520,"value":772},"array",{"type":514,"tag":533,"props":774,"children":775},{"style":598},[776],{"type":520,"value":777},")",{"type":514,"tag":533,"props":779,"children":780},{"style":598},[781],{"type":520,"value":782}," {\n",{"type":514,"tag":533,"props":784,"children":786},{"class":535,"line":785},13,[787,792,797,801,807],{"type":514,"tag":533,"props":788,"children":789},{"style":586},[790],{"type":520,"value":791},"  var",{"type":514,"tag":533,"props":793,"children":794},{"style":592},[795],{"type":520,"value":796}," nextIndex",{"type":514,"tag":533,"props":798,"children":799},{"style":598},[800],{"type":520,"value":601},{"type":514,"tag":533,"props":802,"children":804},{"style":803},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[805],{"type":520,"value":806}," 0",{"type":514,"tag":533,"props":808,"children":809},{"style":598},[810],{"type":520,"value":811},";\n",{"type":514,"tag":533,"props":813,"children":815},{"class":535,"line":814},14,[816,822],{"type":514,"tag":533,"props":817,"children":819},{"style":818},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[820],{"type":520,"value":821},"  return",{"type":514,"tag":533,"props":823,"children":824},{"style":598},[825],{"type":520,"value":782},{"type":514,"tag":533,"props":827,"children":829},{"class":535,"line":828},15,[830,835,840,845,850],{"type":514,"tag":533,"props":831,"children":832},{"style":604},[833],{"type":520,"value":834},"    next",{"type":514,"tag":533,"props":836,"children":837},{"style":598},[838],{"type":520,"value":839},":",{"type":514,"tag":533,"props":841,"children":842},{"style":586},[843],{"type":520,"value":844}," function",{"type":514,"tag":533,"props":846,"children":847},{"style":598},[848],{"type":520,"value":849}," ()",{"type":514,"tag":533,"props":851,"children":852},{"style":598},[853],{"type":520,"value":782},{"type":514,"tag":533,"props":855,"children":857},{"class":535,"line":856},16,[858,863,867,872,877,881],{"type":514,"tag":533,"props":859,"children":860},{"style":818},[861],{"type":520,"value":862},"      return",{"type":514,"tag":533,"props":864,"children":865},{"style":592},[866],{"type":520,"value":796},{"type":514,"tag":533,"props":868,"children":869},{"style":598},[870],{"type":520,"value":871}," \u003C",{"type":514,"tag":533,"props":873,"children":874},{"style":592},[875],{"type":520,"value":876}," array",{"type":514,"tag":533,"props":878,"children":879},{"style":598},[880],{"type":520,"value":676},{"type":514,"tag":533,"props":882,"children":884},{"style":883},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[885],{"type":520,"value":886},"length\n",{"type":514,"tag":533,"props":888,"children":890},{"class":535,"line":889},17,[891,896,901,906,910,914,919,924,929,934,939,943,948],{"type":514,"tag":533,"props":892,"children":893},{"style":586},[894],{"type":520,"value":895},"        ?",{"type":514,"tag":533,"props":897,"children":898},{"style":598},[899],{"type":520,"value":900}," {",{"type":514,"tag":533,"props":902,"children":903},{"style":883},[904],{"type":520,"value":905}," value",{"type":514,"tag":533,"props":907,"children":908},{"style":598},[909],{"type":520,"value":839},{"type":514,"tag":533,"props":911,"children":912},{"style":592},[913],{"type":520,"value":876},{"type":514,"tag":533,"props":915,"children":916},{"style":598},[917],{"type":520,"value":918},"[",{"type":514,"tag":533,"props":920,"children":921},{"style":592},[922],{"type":520,"value":923},"nextIndex",{"type":514,"tag":533,"props":925,"children":926},{"style":586},[927],{"type":520,"value":928},"++",{"type":514,"tag":533,"props":930,"children":931},{"style":598},[932],{"type":520,"value":933},"],",{"type":514,"tag":533,"props":935,"children":936},{"style":883},[937],{"type":520,"value":938}," done",{"type":514,"tag":533,"props":940,"children":941},{"style":598},[942],{"type":520,"value":839},{"type":514,"tag":533,"props":944,"children":945},{"style":818},[946],{"type":520,"value":947}," false",{"type":514,"tag":533,"props":949,"children":950},{"style":598},[951],{"type":520,"value":952}," }\n",{"type":514,"tag":533,"props":954,"children":956},{"class":535,"line":955},18,[957,962,966,970,974,979,983,987,991,996],{"type":514,"tag":533,"props":958,"children":959},{"style":586},[960],{"type":520,"value":961},"        :",{"type":514,"tag":533,"props":963,"children":964},{"style":598},[965],{"type":520,"value":900},{"type":514,"tag":533,"props":967,"children":968},{"style":883},[969],{"type":520,"value":905},{"type":514,"tag":533,"props":971,"children":972},{"style":598},[973],{"type":520,"value":839},{"type":514,"tag":533,"props":975,"children":976},{"style":586},[977],{"type":520,"value":978}," undefined",{"type":514,"tag":533,"props":980,"children":981},{"style":598},[982],{"type":520,"value":633},{"type":514,"tag":533,"props":984,"children":985},{"style":883},[986],{"type":520,"value":938},{"type":514,"tag":533,"props":988,"children":989},{"style":598},[990],{"type":520,"value":839},{"type":514,"tag":533,"props":992,"children":993},{"style":818},[994],{"type":520,"value":995}," true",{"type":514,"tag":533,"props":997,"children":998},{"style":598},[999],{"type":520,"value":1000}," };\n",{"type":514,"tag":533,"props":1002,"children":1004},{"class":535,"line":1003},19,[1005],{"type":514,"tag":533,"props":1006,"children":1007},{"style":598},[1008],{"type":520,"value":1009},"    },\n",{"type":514,"tag":533,"props":1011,"children":1013},{"class":535,"line":1012},20,[1014],{"type":514,"tag":533,"props":1015,"children":1016},{"style":598},[1017],{"type":520,"value":1018},"  };\n",{"type":514,"tag":533,"props":1020,"children":1022},{"class":535,"line":1021},21,[1023],{"type":514,"tag":533,"props":1024,"children":1025},{"style":598},[1026],{"type":520,"value":1027},"}\n",{"type":514,"tag":515,"props":1029,"children":1031},{"id":1030},"可迭代的迭代器",[1032],{"type":520,"value":1030},{"type":514,"tag":522,"props":1034,"children":1036},{"className":524,"code":1035,"language":526,"meta":509,"style":509},"/**\n * 使迭代器可迭代\n * makeIterator 函数生成的迭代器并没有实现可迭代协议\n * 所以不能在 for...of 等语法中使用。\n * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n * 从新名了下函数名称 createIterator\n */\nfunction createIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n    [Symbol.iterator]: function () {\n      console.log(\"返回的迭代器:\", this);\n      return this; // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n    },\n  };\n}\n\nvar iterator = createIterator([1, 2, 3]);\nconsole.log(...iterator);\n",[1037],{"type":514,"tag":529,"props":1038,"children":1039},{"__ignoreMap":509},[1040,1048,1056,1064,1072,1080,1088,1095,1123,1146,1157,1180,1207,1262,1305,1312,1351,1400,1421,1428,1435,1442,1450,1502],{"type":514,"tag":533,"props":1041,"children":1042},{"class":535,"line":536},[1043],{"type":514,"tag":533,"props":1044,"children":1045},{"style":540},[1046],{"type":520,"value":1047},"/**\n",{"type":514,"tag":533,"props":1049,"children":1050},{"class":535,"line":546},[1051],{"type":514,"tag":533,"props":1052,"children":1053},{"style":540},[1054],{"type":520,"value":1055}," * 使迭代器可迭代\n",{"type":514,"tag":533,"props":1057,"children":1058},{"class":535,"line":555},[1059],{"type":514,"tag":533,"props":1060,"children":1061},{"style":540},[1062],{"type":520,"value":1063}," * makeIterator 函数生成的迭代器并没有实现可迭代协议\n",{"type":514,"tag":533,"props":1065,"children":1066},{"class":535,"line":564},[1067],{"type":514,"tag":533,"props":1068,"children":1069},{"style":540},[1070],{"type":520,"value":1071}," * 所以不能在 for...of 等语法中使用。\n",{"type":514,"tag":533,"props":1073,"children":1074},{"class":535,"line":573},[1075],{"type":514,"tag":533,"props":1076,"children":1077},{"style":540},[1078],{"type":520,"value":1079}," * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n",{"type":514,"tag":533,"props":1081,"children":1082},{"class":535,"line":582},[1083],{"type":514,"tag":533,"props":1084,"children":1085},{"style":540},[1086],{"type":520,"value":1087}," * 从新名了下函数名称 createIterator\n",{"type":514,"tag":533,"props":1089,"children":1090},{"class":535,"line":655},[1091],{"type":514,"tag":533,"props":1092,"children":1093},{"style":540},[1094],{"type":520,"value":579},{"type":514,"tag":533,"props":1096,"children":1097},{"class":535,"line":665},[1098,1102,1107,1111,1115,1119],{"type":514,"tag":533,"props":1099,"children":1100},{"style":586},[1101],{"type":520,"value":758},{"type":514,"tag":533,"props":1103,"children":1104},{"style":604},[1105],{"type":520,"value":1106}," createIterator",{"type":514,"tag":533,"props":1108,"children":1109},{"style":598},[1110],{"type":520,"value":767},{"type":514,"tag":533,"props":1112,"children":1113},{"style":592},[1114],{"type":520,"value":772},{"type":514,"tag":533,"props":1116,"children":1117},{"style":598},[1118],{"type":520,"value":777},{"type":514,"tag":533,"props":1120,"children":1121},{"style":598},[1122],{"type":520,"value":782},{"type":514,"tag":533,"props":1124,"children":1125},{"class":535,"line":694},[1126,1130,1134,1138,1142],{"type":514,"tag":533,"props":1127,"children":1128},{"style":586},[1129],{"type":520,"value":791},{"type":514,"tag":533,"props":1131,"children":1132},{"style":592},[1133],{"type":520,"value":796},{"type":514,"tag":533,"props":1135,"children":1136},{"style":598},[1137],{"type":520,"value":601},{"type":514,"tag":533,"props":1139,"children":1140},{"style":803},[1141],{"type":520,"value":806},{"type":514,"tag":533,"props":1143,"children":1144},{"style":598},[1145],{"type":520,"value":811},{"type":514,"tag":533,"props":1147,"children":1148},{"class":535,"line":719},[1149,1153],{"type":514,"tag":533,"props":1150,"children":1151},{"style":818},[1152],{"type":520,"value":821},{"type":514,"tag":533,"props":1154,"children":1155},{"style":598},[1156],{"type":520,"value":782},{"type":514,"tag":533,"props":1158,"children":1159},{"class":535,"line":744},[1160,1164,1168,1172,1176],{"type":514,"tag":533,"props":1161,"children":1162},{"style":604},[1163],{"type":520,"value":834},{"type":514,"tag":533,"props":1165,"children":1166},{"style":598},[1167],{"type":520,"value":839},{"type":514,"tag":533,"props":1169,"children":1170},{"style":586},[1171],{"type":520,"value":844},{"type":514,"tag":533,"props":1173,"children":1174},{"style":598},[1175],{"type":520,"value":849},{"type":514,"tag":533,"props":1177,"children":1178},{"style":598},[1179],{"type":520,"value":782},{"type":514,"tag":533,"props":1181,"children":1182},{"class":535,"line":752},[1183,1187,1191,1195,1199,1203],{"type":514,"tag":533,"props":1184,"children":1185},{"style":818},[1186],{"type":520,"value":862},{"type":514,"tag":533,"props":1188,"children":1189},{"style":592},[1190],{"type":520,"value":796},{"type":514,"tag":533,"props":1192,"children":1193},{"style":598},[1194],{"type":520,"value":871},{"type":514,"tag":533,"props":1196,"children":1197},{"style":592},[1198],{"type":520,"value":876},{"type":514,"tag":533,"props":1200,"children":1201},{"style":598},[1202],{"type":520,"value":676},{"type":514,"tag":533,"props":1204,"children":1205},{"style":883},[1206],{"type":520,"value":886},{"type":514,"tag":533,"props":1208,"children":1209},{"class":535,"line":785},[1210,1214,1218,1222,1226,1230,1234,1238,1242,1246,1250,1254,1258],{"type":514,"tag":533,"props":1211,"children":1212},{"style":586},[1213],{"type":520,"value":895},{"type":514,"tag":533,"props":1215,"children":1216},{"style":598},[1217],{"type":520,"value":900},{"type":514,"tag":533,"props":1219,"children":1220},{"style":883},[1221],{"type":520,"value":905},{"type":514,"tag":533,"props":1223,"children":1224},{"style":598},[1225],{"type":520,"value":839},{"type":514,"tag":533,"props":1227,"children":1228},{"style":592},[1229],{"type":520,"value":876},{"type":514,"tag":533,"props":1231,"children":1232},{"style":598},[1233],{"type":520,"value":918},{"type":514,"tag":533,"props":1235,"children":1236},{"style":592},[1237],{"type":520,"value":923},{"type":514,"tag":533,"props":1239,"children":1240},{"style":586},[1241],{"type":520,"value":928},{"type":514,"tag":533,"props":1243,"children":1244},{"style":598},[1245],{"type":520,"value":933},{"type":514,"tag":533,"props":1247,"children":1248},{"style":883},[1249],{"type":520,"value":938},{"type":514,"tag":533,"props":1251,"children":1252},{"style":598},[1253],{"type":520,"value":839},{"type":514,"tag":533,"props":1255,"children":1256},{"style":818},[1257],{"type":520,"value":947},{"type":514,"tag":533,"props":1259,"children":1260},{"style":598},[1261],{"type":520,"value":952},{"type":514,"tag":533,"props":1263,"children":1264},{"class":535,"line":814},[1265,1269,1273,1277,1281,1285,1289,1293,1297,1301],{"type":514,"tag":533,"props":1266,"children":1267},{"style":586},[1268],{"type":520,"value":961},{"type":514,"tag":533,"props":1270,"children":1271},{"style":598},[1272],{"type":520,"value":900},{"type":514,"tag":533,"props":1274,"children":1275},{"style":883},[1276],{"type":520,"value":905},{"type":514,"tag":533,"props":1278,"children":1279},{"style":598},[1280],{"type":520,"value":839},{"type":514,"tag":533,"props":1282,"children":1283},{"style":586},[1284],{"type":520,"value":978},{"type":514,"tag":533,"props":1286,"children":1287},{"style":598},[1288],{"type":520,"value":633},{"type":514,"tag":533,"props":1290,"children":1291},{"style":883},[1292],{"type":520,"value":938},{"type":514,"tag":533,"props":1294,"children":1295},{"style":598},[1296],{"type":520,"value":839},{"type":514,"tag":533,"props":1298,"children":1299},{"style":818},[1300],{"type":520,"value":995},{"type":514,"tag":533,"props":1302,"children":1303},{"style":598},[1304],{"type":520,"value":1000},{"type":514,"tag":533,"props":1306,"children":1307},{"class":535,"line":828},[1308],{"type":514,"tag":533,"props":1309,"children":1310},{"style":598},[1311],{"type":520,"value":1009},{"type":514,"tag":533,"props":1313,"children":1314},{"class":535,"line":856},[1315,1320,1325,1329,1334,1339,1343,1347],{"type":514,"tag":533,"props":1316,"children":1317},{"style":598},[1318],{"type":520,"value":1319},"    [",{"type":514,"tag":533,"props":1321,"children":1322},{"style":592},[1323],{"type":520,"value":1324},"Symbol",{"type":514,"tag":533,"props":1326,"children":1327},{"style":598},[1328],{"type":520,"value":676},{"type":514,"tag":533,"props":1330,"children":1331},{"style":592},[1332],{"type":520,"value":1333},"iterator",{"type":514,"tag":533,"props":1335,"children":1336},{"style":598},[1337],{"type":520,"value":1338},"]:",{"type":514,"tag":533,"props":1340,"children":1341},{"style":586},[1342],{"type":520,"value":844},{"type":514,"tag":533,"props":1344,"children":1345},{"style":598},[1346],{"type":520,"value":849},{"type":514,"tag":533,"props":1348,"children":1349},{"style":598},[1350],{"type":520,"value":782},{"type":514,"tag":533,"props":1352,"children":1353},{"class":535,"line":889},[1354,1359,1363,1368,1372,1376,1381,1385,1389,1395],{"type":514,"tag":533,"props":1355,"children":1356},{"style":592},[1357],{"type":520,"value":1358},"      console",{"type":514,"tag":533,"props":1360,"children":1361},{"style":598},[1362],{"type":520,"value":676},{"type":514,"tag":533,"props":1364,"children":1365},{"style":604},[1366],{"type":520,"value":1367},"log",{"type":514,"tag":533,"props":1369,"children":1370},{"style":598},[1371],{"type":520,"value":767},{"type":514,"tag":533,"props":1373,"children":1374},{"style":615},[1375],{"type":520,"value":618},{"type":514,"tag":533,"props":1377,"children":1378},{"style":621},[1379],{"type":520,"value":1380},"返回的迭代器:",{"type":514,"tag":533,"props":1382,"children":1383},{"style":615},[1384],{"type":520,"value":618},{"type":514,"tag":533,"props":1386,"children":1387},{"style":598},[1388],{"type":520,"value":633},{"type":514,"tag":533,"props":1390,"children":1392},{"style":1391},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[1393],{"type":520,"value":1394}," this",{"type":514,"tag":533,"props":1396,"children":1397},{"style":598},[1398],{"type":520,"value":1399},");\n",{"type":514,"tag":533,"props":1401,"children":1402},{"class":535,"line":955},[1403,1407,1411,1416],{"type":514,"tag":533,"props":1404,"children":1405},{"style":818},[1406],{"type":520,"value":862},{"type":514,"tag":533,"props":1408,"children":1409},{"style":1391},[1410],{"type":520,"value":1394},{"type":514,"tag":533,"props":1412,"children":1413},{"style":598},[1414],{"type":520,"value":1415},";",{"type":514,"tag":533,"props":1417,"children":1418},{"style":540},[1419],{"type":520,"value":1420}," // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n",{"type":514,"tag":533,"props":1422,"children":1423},{"class":535,"line":1003},[1424],{"type":514,"tag":533,"props":1425,"children":1426},{"style":598},[1427],{"type":520,"value":1009},{"type":514,"tag":533,"props":1429,"children":1430},{"class":535,"line":1012},[1431],{"type":514,"tag":533,"props":1432,"children":1433},{"style":598},[1434],{"type":520,"value":1018},{"type":514,"tag":533,"props":1436,"children":1437},{"class":535,"line":1021},[1438],{"type":514,"tag":533,"props":1439,"children":1440},{"style":598},[1441],{"type":520,"value":1027},{"type":514,"tag":533,"props":1443,"children":1445},{"class":535,"line":1444},22,[1446],{"type":514,"tag":533,"props":1447,"children":1448},{"emptyLinePlaceholder":659},[1449],{"type":520,"value":662},{"type":514,"tag":533,"props":1451,"children":1453},{"class":535,"line":1452},23,[1454,1458,1463,1467,1471,1475,1480,1484,1489,1493,1498],{"type":514,"tag":533,"props":1455,"children":1456},{"style":586},[1457],{"type":520,"value":589},{"type":514,"tag":533,"props":1459,"children":1460},{"style":592},[1461],{"type":520,"value":1462}," iterator",{"type":514,"tag":533,"props":1464,"children":1465},{"style":598},[1466],{"type":520,"value":601},{"type":514,"tag":533,"props":1468,"children":1469},{"style":604},[1470],{"type":520,"value":1106},{"type":514,"tag":533,"props":1472,"children":1473},{"style":598},[1474],{"type":520,"value":612},{"type":514,"tag":533,"props":1476,"children":1477},{"style":803},[1478],{"type":520,"value":1479},"1",{"type":514,"tag":533,"props":1481,"children":1482},{"style":598},[1483],{"type":520,"value":633},{"type":514,"tag":533,"props":1485,"children":1486},{"style":803},[1487],{"type":520,"value":1488}," 2",{"type":514,"tag":533,"props":1490,"children":1491},{"style":598},[1492],{"type":520,"value":633},{"type":514,"tag":533,"props":1494,"children":1495},{"style":803},[1496],{"type":520,"value":1497}," 3",{"type":514,"tag":533,"props":1499,"children":1500},{"style":598},[1501],{"type":520,"value":652},{"type":514,"tag":533,"props":1503,"children":1505},{"class":535,"line":1504},24,[1506,1511,1515,1519,1524,1528],{"type":514,"tag":533,"props":1507,"children":1508},{"style":592},[1509],{"type":520,"value":1510},"console",{"type":514,"tag":533,"props":1512,"children":1513},{"style":598},[1514],{"type":520,"value":676},{"type":514,"tag":533,"props":1516,"children":1517},{"style":604},[1518],{"type":520,"value":1367},{"type":514,"tag":533,"props":1520,"children":1521},{"style":598},[1522],{"type":520,"value":1523},"(...",{"type":514,"tag":533,"props":1525,"children":1526},{"style":592},[1527],{"type":520,"value":1333},{"type":514,"tag":533,"props":1529,"children":1530},{"style":598},[1531],{"type":520,"value":1399},{"type":514,"tag":1533,"props":1534,"children":1535},"style",{},[1536],{"type":520,"value":1537},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":509,"searchDepth":573,"depth":573,"links":1539},[1540,1541],{"id":517,"depth":546,"text":517},{"id":1030,"depth":546,"text":1030},"markdown","content:3.code-assessment:1.source:1.native-api:7.iterator.md","content","3.code-assessment/1.source/1.native-api/7.iterator.md","md",[1548,1550],{"_path":327,"title":326,"description":1549},"JSON.stringify() 方法将一个 js 对象或值转换为 json 字符串，如果指定了一个 replacer 函数，则可以选择性地替换值，或者指定的 replacer 是数组，则可选择性地仅包含数组指定的属性。",{"_path":337,"title":336,"description":509},1714058130575]