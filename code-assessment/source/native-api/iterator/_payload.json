[{"data":1,"prerenderedAt":1554},["Reactive",2],{"navigation":3,"/code-assessment/source/native-api/iterator":509,"/code-assessment/source/native-api/iterator-surround":1550},[4,269,298,477,485,494],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":476},"代码考核","/code-assessment",[302,376,469],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370,373],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":374,"_path":375},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":377,"_path":378,"children":379},"业务场景","/code-assessment/scene",[380,405,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463,466],{"title":381,"_path":382,"children":383},"Promise","/code-assessment/scene/promise",[384,387,390,393,396,399,402],{"title":385,"_path":386},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":388,"_path":389},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":391,"_path":392},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":394,"_path":395},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":397,"_path":398},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":400,"_path":401},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":403,"_path":404},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":406,"_path":407,"children":408},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[409,412],{"title":410,"_path":411},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":413,"_path":414},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":416,"_path":417},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":419,"_path":420},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":422,"_path":423},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":425,"_path":426},"倒计时","/code-assessment/scene/countdown",{"title":428,"_path":429},"日期格式化","/code-assessment/scene/date-format",{"title":431,"_path":432},"实现前端路由","/code-assessment/scene/frontend-route",{"title":434,"_path":435},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":437,"_path":438},"lodash.get","/code-assessment/scene/lodash-get",{"title":440,"_path":441},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":443,"_path":444},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":446,"_path":447},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":449,"_path":450},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":452,"_path":453},"随机数","/code-assessment/scene/random-number",{"title":455,"_path":456},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":458,"_path":459},"sku 算法实现","/code-assessment/scene/sku",{"title":461,"_path":462},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":464,"_path":465},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":467,"_path":468},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":470,"_path":471,"children":472},"Ts 类型挑战","/code-assessment/type-challeges",[473],{"title":474,"_path":475},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":478,"_path":479,"children":480,"icon":484},"项目","/project",[481],{"title":482,"_path":483},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":486,"_path":487,"children":488,"icon":493},"设计模式","/design-mode",[489,490],{"title":486,"_path":487},{"title":491,"_path":492},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":495,"_path":496,"children":497,"icon":508},"后端语言","/backend-languages",[498],{"title":499,"_path":500,"children":501},"Python","/backend-languages/python",[502,505],{"title":503,"_path":504},"基础","/backend-languages/python/base",{"title":506,"_path":507},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":330,"_dir":510,"_draft":511,"_partial":511,"_locale":512,"title":329,"description":512,"body":513,"_type":1545,"_id":1546,"_source":1547,"_file":1548,"_extension":1549},"native-api",false,"",{"type":514,"children":515,"toc":1541},"root",[516,524,1031,1036,1535],{"type":517,"tag":518,"props":519,"children":521},"element","h2",{"id":520},"实现迭代器函数",[522],{"type":523,"value":520},"text",{"type":517,"tag":525,"props":526,"children":530},"pre",{"className":527,"code":528,"language":529,"meta":512,"style":512},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/*\n * 这是一个手写的迭代器(Iterator)\n * 满足迭代器协议的对象。\n * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n */\nvar it = makeIterator([\"a\", \"b\"]);\n\nit.next(); // { value: \"a\", done: false }\nit.next(); // { value: \"b\", done: false }\nit.next(); // { value: undefined, done: true }\n\nfunction makeIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n  };\n}\n","js",[531],{"type":517,"tag":532,"props":533,"children":534},"code",{"__ignoreMap":512},[535,547,556,565,574,583,656,666,695,720,745,753,786,815,829,857,890,956,1004,1013,1022],{"type":517,"tag":536,"props":537,"children":540},"span",{"class":538,"line":539},"line",1,[541],{"type":517,"tag":536,"props":542,"children":544},{"style":543},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[545],{"type":523,"value":546},"/*\n",{"type":517,"tag":536,"props":548,"children":550},{"class":538,"line":549},2,[551],{"type":517,"tag":536,"props":552,"children":553},{"style":543},[554],{"type":523,"value":555}," * 这是一个手写的迭代器(Iterator)\n",{"type":517,"tag":536,"props":557,"children":559},{"class":538,"line":558},3,[560],{"type":517,"tag":536,"props":561,"children":562},{"style":543},[563],{"type":523,"value":564}," * 满足迭代器协议的对象。\n",{"type":517,"tag":536,"props":566,"children":568},{"class":538,"line":567},4,[569],{"type":517,"tag":536,"props":570,"children":571},{"style":543},[572],{"type":523,"value":573}," * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n",{"type":517,"tag":536,"props":575,"children":577},{"class":538,"line":576},5,[578],{"type":517,"tag":536,"props":579,"children":580},{"style":543},[581],{"type":523,"value":582}," */\n",{"type":517,"tag":536,"props":584,"children":586},{"class":538,"line":585},6,[587,593,599,605,611,616,622,628,632,637,642,647,651],{"type":517,"tag":536,"props":588,"children":590},{"style":589},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[591],{"type":523,"value":592},"var",{"type":517,"tag":536,"props":594,"children":596},{"style":595},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[597],{"type":523,"value":598}," it",{"type":517,"tag":536,"props":600,"children":602},{"style":601},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[603],{"type":523,"value":604}," =",{"type":517,"tag":536,"props":606,"children":608},{"style":607},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[609],{"type":523,"value":610}," makeIterator",{"type":517,"tag":536,"props":612,"children":613},{"style":601},[614],{"type":523,"value":615},"([",{"type":517,"tag":536,"props":617,"children":619},{"style":618},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[620],{"type":523,"value":621},"\"",{"type":517,"tag":536,"props":623,"children":625},{"style":624},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[626],{"type":523,"value":627},"a",{"type":517,"tag":536,"props":629,"children":630},{"style":618},[631],{"type":523,"value":621},{"type":517,"tag":536,"props":633,"children":634},{"style":601},[635],{"type":523,"value":636},",",{"type":517,"tag":536,"props":638,"children":639},{"style":618},[640],{"type":523,"value":641}," \"",{"type":517,"tag":536,"props":643,"children":644},{"style":624},[645],{"type":523,"value":646},"b",{"type":517,"tag":536,"props":648,"children":649},{"style":618},[650],{"type":523,"value":621},{"type":517,"tag":536,"props":652,"children":653},{"style":601},[654],{"type":523,"value":655},"]);\n",{"type":517,"tag":536,"props":657,"children":659},{"class":538,"line":658},7,[660],{"type":517,"tag":536,"props":661,"children":663},{"emptyLinePlaceholder":662},true,[664],{"type":523,"value":665},"\n",{"type":517,"tag":536,"props":667,"children":669},{"class":538,"line":668},8,[670,675,680,685,690],{"type":517,"tag":536,"props":671,"children":672},{"style":595},[673],{"type":523,"value":674},"it",{"type":517,"tag":536,"props":676,"children":677},{"style":601},[678],{"type":523,"value":679},".",{"type":517,"tag":536,"props":681,"children":682},{"style":607},[683],{"type":523,"value":684},"next",{"type":517,"tag":536,"props":686,"children":687},{"style":601},[688],{"type":523,"value":689},"();",{"type":517,"tag":536,"props":691,"children":692},{"style":543},[693],{"type":523,"value":694}," // { value: \"a\", done: false }\n",{"type":517,"tag":536,"props":696,"children":698},{"class":538,"line":697},9,[699,703,707,711,715],{"type":517,"tag":536,"props":700,"children":701},{"style":595},[702],{"type":523,"value":674},{"type":517,"tag":536,"props":704,"children":705},{"style":601},[706],{"type":523,"value":679},{"type":517,"tag":536,"props":708,"children":709},{"style":607},[710],{"type":523,"value":684},{"type":517,"tag":536,"props":712,"children":713},{"style":601},[714],{"type":523,"value":689},{"type":517,"tag":536,"props":716,"children":717},{"style":543},[718],{"type":523,"value":719}," // { value: \"b\", done: false }\n",{"type":517,"tag":536,"props":721,"children":723},{"class":538,"line":722},10,[724,728,732,736,740],{"type":517,"tag":536,"props":725,"children":726},{"style":595},[727],{"type":523,"value":674},{"type":517,"tag":536,"props":729,"children":730},{"style":601},[731],{"type":523,"value":679},{"type":517,"tag":536,"props":733,"children":734},{"style":607},[735],{"type":523,"value":684},{"type":517,"tag":536,"props":737,"children":738},{"style":601},[739],{"type":523,"value":689},{"type":517,"tag":536,"props":741,"children":742},{"style":543},[743],{"type":523,"value":744}," // { value: undefined, done: true }\n",{"type":517,"tag":536,"props":746,"children":748},{"class":538,"line":747},11,[749],{"type":517,"tag":536,"props":750,"children":751},{"emptyLinePlaceholder":662},[752],{"type":523,"value":665},{"type":517,"tag":536,"props":754,"children":756},{"class":538,"line":755},12,[757,762,766,771,776,781],{"type":517,"tag":536,"props":758,"children":759},{"style":589},[760],{"type":523,"value":761},"function",{"type":517,"tag":536,"props":763,"children":764},{"style":607},[765],{"type":523,"value":610},{"type":517,"tag":536,"props":767,"children":768},{"style":601},[769],{"type":523,"value":770},"(",{"type":517,"tag":536,"props":772,"children":773},{"style":595},[774],{"type":523,"value":775},"array",{"type":517,"tag":536,"props":777,"children":778},{"style":601},[779],{"type":523,"value":780},")",{"type":517,"tag":536,"props":782,"children":783},{"style":601},[784],{"type":523,"value":785}," {\n",{"type":517,"tag":536,"props":787,"children":789},{"class":538,"line":788},13,[790,795,800,804,810],{"type":517,"tag":536,"props":791,"children":792},{"style":589},[793],{"type":523,"value":794},"  var",{"type":517,"tag":536,"props":796,"children":797},{"style":595},[798],{"type":523,"value":799}," nextIndex",{"type":517,"tag":536,"props":801,"children":802},{"style":601},[803],{"type":523,"value":604},{"type":517,"tag":536,"props":805,"children":807},{"style":806},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[808],{"type":523,"value":809}," 0",{"type":517,"tag":536,"props":811,"children":812},{"style":601},[813],{"type":523,"value":814},";\n",{"type":517,"tag":536,"props":816,"children":818},{"class":538,"line":817},14,[819,825],{"type":517,"tag":536,"props":820,"children":822},{"style":821},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[823],{"type":523,"value":824},"  return",{"type":517,"tag":536,"props":826,"children":827},{"style":601},[828],{"type":523,"value":785},{"type":517,"tag":536,"props":830,"children":832},{"class":538,"line":831},15,[833,838,843,848,853],{"type":517,"tag":536,"props":834,"children":835},{"style":607},[836],{"type":523,"value":837},"    next",{"type":517,"tag":536,"props":839,"children":840},{"style":601},[841],{"type":523,"value":842},":",{"type":517,"tag":536,"props":844,"children":845},{"style":589},[846],{"type":523,"value":847}," function",{"type":517,"tag":536,"props":849,"children":850},{"style":601},[851],{"type":523,"value":852}," ()",{"type":517,"tag":536,"props":854,"children":855},{"style":601},[856],{"type":523,"value":785},{"type":517,"tag":536,"props":858,"children":860},{"class":538,"line":859},16,[861,866,870,875,880,884],{"type":517,"tag":536,"props":862,"children":863},{"style":821},[864],{"type":523,"value":865},"      return",{"type":517,"tag":536,"props":867,"children":868},{"style":595},[869],{"type":523,"value":799},{"type":517,"tag":536,"props":871,"children":872},{"style":601},[873],{"type":523,"value":874}," \u003C",{"type":517,"tag":536,"props":876,"children":877},{"style":595},[878],{"type":523,"value":879}," array",{"type":517,"tag":536,"props":881,"children":882},{"style":601},[883],{"type":523,"value":679},{"type":517,"tag":536,"props":885,"children":887},{"style":886},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[888],{"type":523,"value":889},"length\n",{"type":517,"tag":536,"props":891,"children":893},{"class":538,"line":892},17,[894,899,904,909,913,917,922,927,932,937,942,946,951],{"type":517,"tag":536,"props":895,"children":896},{"style":589},[897],{"type":523,"value":898},"        ?",{"type":517,"tag":536,"props":900,"children":901},{"style":601},[902],{"type":523,"value":903}," {",{"type":517,"tag":536,"props":905,"children":906},{"style":886},[907],{"type":523,"value":908}," value",{"type":517,"tag":536,"props":910,"children":911},{"style":601},[912],{"type":523,"value":842},{"type":517,"tag":536,"props":914,"children":915},{"style":595},[916],{"type":523,"value":879},{"type":517,"tag":536,"props":918,"children":919},{"style":601},[920],{"type":523,"value":921},"[",{"type":517,"tag":536,"props":923,"children":924},{"style":595},[925],{"type":523,"value":926},"nextIndex",{"type":517,"tag":536,"props":928,"children":929},{"style":589},[930],{"type":523,"value":931},"++",{"type":517,"tag":536,"props":933,"children":934},{"style":601},[935],{"type":523,"value":936},"],",{"type":517,"tag":536,"props":938,"children":939},{"style":886},[940],{"type":523,"value":941}," done",{"type":517,"tag":536,"props":943,"children":944},{"style":601},[945],{"type":523,"value":842},{"type":517,"tag":536,"props":947,"children":948},{"style":821},[949],{"type":523,"value":950}," false",{"type":517,"tag":536,"props":952,"children":953},{"style":601},[954],{"type":523,"value":955}," }\n",{"type":517,"tag":536,"props":957,"children":959},{"class":538,"line":958},18,[960,965,969,973,977,982,986,990,994,999],{"type":517,"tag":536,"props":961,"children":962},{"style":589},[963],{"type":523,"value":964},"        :",{"type":517,"tag":536,"props":966,"children":967},{"style":601},[968],{"type":523,"value":903},{"type":517,"tag":536,"props":970,"children":971},{"style":886},[972],{"type":523,"value":908},{"type":517,"tag":536,"props":974,"children":975},{"style":601},[976],{"type":523,"value":842},{"type":517,"tag":536,"props":978,"children":979},{"style":589},[980],{"type":523,"value":981}," undefined",{"type":517,"tag":536,"props":983,"children":984},{"style":601},[985],{"type":523,"value":636},{"type":517,"tag":536,"props":987,"children":988},{"style":886},[989],{"type":523,"value":941},{"type":517,"tag":536,"props":991,"children":992},{"style":601},[993],{"type":523,"value":842},{"type":517,"tag":536,"props":995,"children":996},{"style":821},[997],{"type":523,"value":998}," true",{"type":517,"tag":536,"props":1000,"children":1001},{"style":601},[1002],{"type":523,"value":1003}," };\n",{"type":517,"tag":536,"props":1005,"children":1007},{"class":538,"line":1006},19,[1008],{"type":517,"tag":536,"props":1009,"children":1010},{"style":601},[1011],{"type":523,"value":1012},"    },\n",{"type":517,"tag":536,"props":1014,"children":1016},{"class":538,"line":1015},20,[1017],{"type":517,"tag":536,"props":1018,"children":1019},{"style":601},[1020],{"type":523,"value":1021},"  };\n",{"type":517,"tag":536,"props":1023,"children":1025},{"class":538,"line":1024},21,[1026],{"type":517,"tag":536,"props":1027,"children":1028},{"style":601},[1029],{"type":523,"value":1030},"}\n",{"type":517,"tag":518,"props":1032,"children":1034},{"id":1033},"可迭代的迭代器",[1035],{"type":523,"value":1033},{"type":517,"tag":525,"props":1037,"children":1039},{"className":527,"code":1038,"language":529,"meta":512,"style":512},"/**\n * 使迭代器可迭代\n * makeIterator 函数生成的迭代器并没有实现可迭代协议\n * 所以不能在 for...of 等语法中使用。\n * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n * 从新名了下函数名称 createIterator\n */\nfunction createIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n    [Symbol.iterator]: function () {\n      console.log(\"返回的迭代器:\", this);\n      return this; // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n    },\n  };\n}\n\nvar iterator = createIterator([1, 2, 3]);\nconsole.log(...iterator);\n",[1040],{"type":517,"tag":532,"props":1041,"children":1042},{"__ignoreMap":512},[1043,1051,1059,1067,1075,1083,1091,1098,1126,1149,1160,1183,1210,1265,1308,1315,1354,1403,1424,1431,1438,1445,1453,1505],{"type":517,"tag":536,"props":1044,"children":1045},{"class":538,"line":539},[1046],{"type":517,"tag":536,"props":1047,"children":1048},{"style":543},[1049],{"type":523,"value":1050},"/**\n",{"type":517,"tag":536,"props":1052,"children":1053},{"class":538,"line":549},[1054],{"type":517,"tag":536,"props":1055,"children":1056},{"style":543},[1057],{"type":523,"value":1058}," * 使迭代器可迭代\n",{"type":517,"tag":536,"props":1060,"children":1061},{"class":538,"line":558},[1062],{"type":517,"tag":536,"props":1063,"children":1064},{"style":543},[1065],{"type":523,"value":1066}," * makeIterator 函数生成的迭代器并没有实现可迭代协议\n",{"type":517,"tag":536,"props":1068,"children":1069},{"class":538,"line":567},[1070],{"type":517,"tag":536,"props":1071,"children":1072},{"style":543},[1073],{"type":523,"value":1074}," * 所以不能在 for...of 等语法中使用。\n",{"type":517,"tag":536,"props":1076,"children":1077},{"class":538,"line":576},[1078],{"type":517,"tag":536,"props":1079,"children":1080},{"style":543},[1081],{"type":523,"value":1082}," * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n",{"type":517,"tag":536,"props":1084,"children":1085},{"class":538,"line":585},[1086],{"type":517,"tag":536,"props":1087,"children":1088},{"style":543},[1089],{"type":523,"value":1090}," * 从新名了下函数名称 createIterator\n",{"type":517,"tag":536,"props":1092,"children":1093},{"class":538,"line":658},[1094],{"type":517,"tag":536,"props":1095,"children":1096},{"style":543},[1097],{"type":523,"value":582},{"type":517,"tag":536,"props":1099,"children":1100},{"class":538,"line":668},[1101,1105,1110,1114,1118,1122],{"type":517,"tag":536,"props":1102,"children":1103},{"style":589},[1104],{"type":523,"value":761},{"type":517,"tag":536,"props":1106,"children":1107},{"style":607},[1108],{"type":523,"value":1109}," createIterator",{"type":517,"tag":536,"props":1111,"children":1112},{"style":601},[1113],{"type":523,"value":770},{"type":517,"tag":536,"props":1115,"children":1116},{"style":595},[1117],{"type":523,"value":775},{"type":517,"tag":536,"props":1119,"children":1120},{"style":601},[1121],{"type":523,"value":780},{"type":517,"tag":536,"props":1123,"children":1124},{"style":601},[1125],{"type":523,"value":785},{"type":517,"tag":536,"props":1127,"children":1128},{"class":538,"line":697},[1129,1133,1137,1141,1145],{"type":517,"tag":536,"props":1130,"children":1131},{"style":589},[1132],{"type":523,"value":794},{"type":517,"tag":536,"props":1134,"children":1135},{"style":595},[1136],{"type":523,"value":799},{"type":517,"tag":536,"props":1138,"children":1139},{"style":601},[1140],{"type":523,"value":604},{"type":517,"tag":536,"props":1142,"children":1143},{"style":806},[1144],{"type":523,"value":809},{"type":517,"tag":536,"props":1146,"children":1147},{"style":601},[1148],{"type":523,"value":814},{"type":517,"tag":536,"props":1150,"children":1151},{"class":538,"line":722},[1152,1156],{"type":517,"tag":536,"props":1153,"children":1154},{"style":821},[1155],{"type":523,"value":824},{"type":517,"tag":536,"props":1157,"children":1158},{"style":601},[1159],{"type":523,"value":785},{"type":517,"tag":536,"props":1161,"children":1162},{"class":538,"line":747},[1163,1167,1171,1175,1179],{"type":517,"tag":536,"props":1164,"children":1165},{"style":607},[1166],{"type":523,"value":837},{"type":517,"tag":536,"props":1168,"children":1169},{"style":601},[1170],{"type":523,"value":842},{"type":517,"tag":536,"props":1172,"children":1173},{"style":589},[1174],{"type":523,"value":847},{"type":517,"tag":536,"props":1176,"children":1177},{"style":601},[1178],{"type":523,"value":852},{"type":517,"tag":536,"props":1180,"children":1181},{"style":601},[1182],{"type":523,"value":785},{"type":517,"tag":536,"props":1184,"children":1185},{"class":538,"line":755},[1186,1190,1194,1198,1202,1206],{"type":517,"tag":536,"props":1187,"children":1188},{"style":821},[1189],{"type":523,"value":865},{"type":517,"tag":536,"props":1191,"children":1192},{"style":595},[1193],{"type":523,"value":799},{"type":517,"tag":536,"props":1195,"children":1196},{"style":601},[1197],{"type":523,"value":874},{"type":517,"tag":536,"props":1199,"children":1200},{"style":595},[1201],{"type":523,"value":879},{"type":517,"tag":536,"props":1203,"children":1204},{"style":601},[1205],{"type":523,"value":679},{"type":517,"tag":536,"props":1207,"children":1208},{"style":886},[1209],{"type":523,"value":889},{"type":517,"tag":536,"props":1211,"children":1212},{"class":538,"line":788},[1213,1217,1221,1225,1229,1233,1237,1241,1245,1249,1253,1257,1261],{"type":517,"tag":536,"props":1214,"children":1215},{"style":589},[1216],{"type":523,"value":898},{"type":517,"tag":536,"props":1218,"children":1219},{"style":601},[1220],{"type":523,"value":903},{"type":517,"tag":536,"props":1222,"children":1223},{"style":886},[1224],{"type":523,"value":908},{"type":517,"tag":536,"props":1226,"children":1227},{"style":601},[1228],{"type":523,"value":842},{"type":517,"tag":536,"props":1230,"children":1231},{"style":595},[1232],{"type":523,"value":879},{"type":517,"tag":536,"props":1234,"children":1235},{"style":601},[1236],{"type":523,"value":921},{"type":517,"tag":536,"props":1238,"children":1239},{"style":595},[1240],{"type":523,"value":926},{"type":517,"tag":536,"props":1242,"children":1243},{"style":589},[1244],{"type":523,"value":931},{"type":517,"tag":536,"props":1246,"children":1247},{"style":601},[1248],{"type":523,"value":936},{"type":517,"tag":536,"props":1250,"children":1251},{"style":886},[1252],{"type":523,"value":941},{"type":517,"tag":536,"props":1254,"children":1255},{"style":601},[1256],{"type":523,"value":842},{"type":517,"tag":536,"props":1258,"children":1259},{"style":821},[1260],{"type":523,"value":950},{"type":517,"tag":536,"props":1262,"children":1263},{"style":601},[1264],{"type":523,"value":955},{"type":517,"tag":536,"props":1266,"children":1267},{"class":538,"line":817},[1268,1272,1276,1280,1284,1288,1292,1296,1300,1304],{"type":517,"tag":536,"props":1269,"children":1270},{"style":589},[1271],{"type":523,"value":964},{"type":517,"tag":536,"props":1273,"children":1274},{"style":601},[1275],{"type":523,"value":903},{"type":517,"tag":536,"props":1277,"children":1278},{"style":886},[1279],{"type":523,"value":908},{"type":517,"tag":536,"props":1281,"children":1282},{"style":601},[1283],{"type":523,"value":842},{"type":517,"tag":536,"props":1285,"children":1286},{"style":589},[1287],{"type":523,"value":981},{"type":517,"tag":536,"props":1289,"children":1290},{"style":601},[1291],{"type":523,"value":636},{"type":517,"tag":536,"props":1293,"children":1294},{"style":886},[1295],{"type":523,"value":941},{"type":517,"tag":536,"props":1297,"children":1298},{"style":601},[1299],{"type":523,"value":842},{"type":517,"tag":536,"props":1301,"children":1302},{"style":821},[1303],{"type":523,"value":998},{"type":517,"tag":536,"props":1305,"children":1306},{"style":601},[1307],{"type":523,"value":1003},{"type":517,"tag":536,"props":1309,"children":1310},{"class":538,"line":831},[1311],{"type":517,"tag":536,"props":1312,"children":1313},{"style":601},[1314],{"type":523,"value":1012},{"type":517,"tag":536,"props":1316,"children":1317},{"class":538,"line":859},[1318,1323,1328,1332,1337,1342,1346,1350],{"type":517,"tag":536,"props":1319,"children":1320},{"style":601},[1321],{"type":523,"value":1322},"    [",{"type":517,"tag":536,"props":1324,"children":1325},{"style":595},[1326],{"type":523,"value":1327},"Symbol",{"type":517,"tag":536,"props":1329,"children":1330},{"style":601},[1331],{"type":523,"value":679},{"type":517,"tag":536,"props":1333,"children":1334},{"style":595},[1335],{"type":523,"value":1336},"iterator",{"type":517,"tag":536,"props":1338,"children":1339},{"style":601},[1340],{"type":523,"value":1341},"]:",{"type":517,"tag":536,"props":1343,"children":1344},{"style":589},[1345],{"type":523,"value":847},{"type":517,"tag":536,"props":1347,"children":1348},{"style":601},[1349],{"type":523,"value":852},{"type":517,"tag":536,"props":1351,"children":1352},{"style":601},[1353],{"type":523,"value":785},{"type":517,"tag":536,"props":1355,"children":1356},{"class":538,"line":892},[1357,1362,1366,1371,1375,1379,1384,1388,1392,1398],{"type":517,"tag":536,"props":1358,"children":1359},{"style":595},[1360],{"type":523,"value":1361},"      console",{"type":517,"tag":536,"props":1363,"children":1364},{"style":601},[1365],{"type":523,"value":679},{"type":517,"tag":536,"props":1367,"children":1368},{"style":607},[1369],{"type":523,"value":1370},"log",{"type":517,"tag":536,"props":1372,"children":1373},{"style":601},[1374],{"type":523,"value":770},{"type":517,"tag":536,"props":1376,"children":1377},{"style":618},[1378],{"type":523,"value":621},{"type":517,"tag":536,"props":1380,"children":1381},{"style":624},[1382],{"type":523,"value":1383},"返回的迭代器:",{"type":517,"tag":536,"props":1385,"children":1386},{"style":618},[1387],{"type":523,"value":621},{"type":517,"tag":536,"props":1389,"children":1390},{"style":601},[1391],{"type":523,"value":636},{"type":517,"tag":536,"props":1393,"children":1395},{"style":1394},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[1396],{"type":523,"value":1397}," this",{"type":517,"tag":536,"props":1399,"children":1400},{"style":601},[1401],{"type":523,"value":1402},");\n",{"type":517,"tag":536,"props":1404,"children":1405},{"class":538,"line":958},[1406,1410,1414,1419],{"type":517,"tag":536,"props":1407,"children":1408},{"style":821},[1409],{"type":523,"value":865},{"type":517,"tag":536,"props":1411,"children":1412},{"style":1394},[1413],{"type":523,"value":1397},{"type":517,"tag":536,"props":1415,"children":1416},{"style":601},[1417],{"type":523,"value":1418},";",{"type":517,"tag":536,"props":1420,"children":1421},{"style":543},[1422],{"type":523,"value":1423}," // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n",{"type":517,"tag":536,"props":1425,"children":1426},{"class":538,"line":1006},[1427],{"type":517,"tag":536,"props":1428,"children":1429},{"style":601},[1430],{"type":523,"value":1012},{"type":517,"tag":536,"props":1432,"children":1433},{"class":538,"line":1015},[1434],{"type":517,"tag":536,"props":1435,"children":1436},{"style":601},[1437],{"type":523,"value":1021},{"type":517,"tag":536,"props":1439,"children":1440},{"class":538,"line":1024},[1441],{"type":517,"tag":536,"props":1442,"children":1443},{"style":601},[1444],{"type":523,"value":1030},{"type":517,"tag":536,"props":1446,"children":1448},{"class":538,"line":1447},22,[1449],{"type":517,"tag":536,"props":1450,"children":1451},{"emptyLinePlaceholder":662},[1452],{"type":523,"value":665},{"type":517,"tag":536,"props":1454,"children":1456},{"class":538,"line":1455},23,[1457,1461,1466,1470,1474,1478,1483,1487,1492,1496,1501],{"type":517,"tag":536,"props":1458,"children":1459},{"style":589},[1460],{"type":523,"value":592},{"type":517,"tag":536,"props":1462,"children":1463},{"style":595},[1464],{"type":523,"value":1465}," iterator",{"type":517,"tag":536,"props":1467,"children":1468},{"style":601},[1469],{"type":523,"value":604},{"type":517,"tag":536,"props":1471,"children":1472},{"style":607},[1473],{"type":523,"value":1109},{"type":517,"tag":536,"props":1475,"children":1476},{"style":601},[1477],{"type":523,"value":615},{"type":517,"tag":536,"props":1479,"children":1480},{"style":806},[1481],{"type":523,"value":1482},"1",{"type":517,"tag":536,"props":1484,"children":1485},{"style":601},[1486],{"type":523,"value":636},{"type":517,"tag":536,"props":1488,"children":1489},{"style":806},[1490],{"type":523,"value":1491}," 2",{"type":517,"tag":536,"props":1493,"children":1494},{"style":601},[1495],{"type":523,"value":636},{"type":517,"tag":536,"props":1497,"children":1498},{"style":806},[1499],{"type":523,"value":1500}," 3",{"type":517,"tag":536,"props":1502,"children":1503},{"style":601},[1504],{"type":523,"value":655},{"type":517,"tag":536,"props":1506,"children":1508},{"class":538,"line":1507},24,[1509,1514,1518,1522,1527,1531],{"type":517,"tag":536,"props":1510,"children":1511},{"style":595},[1512],{"type":523,"value":1513},"console",{"type":517,"tag":536,"props":1515,"children":1516},{"style":601},[1517],{"type":523,"value":679},{"type":517,"tag":536,"props":1519,"children":1520},{"style":607},[1521],{"type":523,"value":1370},{"type":517,"tag":536,"props":1523,"children":1524},{"style":601},[1525],{"type":523,"value":1526},"(...",{"type":517,"tag":536,"props":1528,"children":1529},{"style":595},[1530],{"type":523,"value":1336},{"type":517,"tag":536,"props":1532,"children":1533},{"style":601},[1534],{"type":523,"value":1402},{"type":517,"tag":1536,"props":1537,"children":1538},"style",{},[1539],{"type":523,"value":1540},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":512,"searchDepth":576,"depth":576,"links":1542},[1543,1544],{"id":520,"depth":549,"text":520},{"id":1033,"depth":549,"text":1033},"markdown","content:3.code-assessment:1.source:1.native-api:7.iterator.md","content","3.code-assessment/1.source/1.native-api/7.iterator.md","md",[1551,1553],{"_path":327,"title":326,"description":1552},"JSON.stringify() 方法将一个 js 对象或值转换为 json 字符串，如果指定了一个 replacer 函数，则可以选择性地替换值，或者指定的 replacer 是数组，则可选择性地仅包含数组指定的属性。",{"_path":337,"title":336,"description":512},1714059008515]