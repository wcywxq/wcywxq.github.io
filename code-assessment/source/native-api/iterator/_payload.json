[{"data":1,"prerenderedAt":1523},["Reactive",2],{"navigation":3,"/code-assessment/source/native-api/iterator":478,"/code-assessment/source/native-api/iterator-surround":1519},[4,269,298,446,454,463],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":445},"代码考核","/code-assessment",[302,351,438],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/code-assessment/scene",[355,377,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432,435],{"title":356,"_path":357,"children":358},"Promise","/code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[381,384],{"title":382,"_path":383},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":385,"_path":386},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":388,"_path":389},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":391,"_path":392},"倒计时","/code-assessment/scene/countdown",{"title":394,"_path":395},"日期格式化","/code-assessment/scene/date-format",{"title":397,"_path":398},"实现前端路由","/code-assessment/scene/frontend-route",{"title":400,"_path":401},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":403,"_path":404},"lodash.get","/code-assessment/scene/lodash-get",{"title":406,"_path":407},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":409,"_path":410},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":412,"_path":413},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":415,"_path":416},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":418,"_path":419},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":421,"_path":422},"随机数","/code-assessment/scene/random-number",{"title":424,"_path":425},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":427,"_path":428},"sku 算法实现","/code-assessment/scene/sku",{"title":430,"_path":431},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":433,"_path":434},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":436,"_path":437},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":439,"_path":440,"children":441},"Ts 类型挑战","/code-assessment/type-challeges",[442],{"title":443,"_path":444},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":447,"_path":448,"children":449,"icon":453},"项目","/project",[450],{"title":451,"_path":452},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":455,"_path":456,"children":457,"icon":462},"设计模式","/design-mode",[458,459],{"title":455,"_path":456},{"title":460,"_path":461},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":464,"_path":465,"children":466,"icon":477},"后端语言","/backend-languages",[467],{"title":468,"_path":469,"children":470},"Python","/backend-languages/python",[471,474],{"title":472,"_path":473},"基础","/backend-languages/python/base",{"title":475,"_path":476},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":330,"_dir":479,"_draft":480,"_partial":480,"_locale":481,"title":329,"description":481,"body":482,"_type":1514,"_id":1515,"_source":1516,"_file":1517,"_extension":1518},"native-api",false,"",{"type":483,"children":484,"toc":1510},"root",[485,493,1000,1005,1504],{"type":486,"tag":487,"props":488,"children":490},"element","h2",{"id":489},"实现迭代器函数",[491],{"type":492,"value":489},"text",{"type":486,"tag":494,"props":495,"children":499},"pre",{"className":496,"code":497,"language":498,"meta":481,"style":481},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/*\n * 这是一个手写的迭代器(Iterator)\n * 满足迭代器协议的对象。\n * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n */\nvar it = makeIterator([\"a\", \"b\"]);\n\nit.next(); // { value: \"a\", done: false }\nit.next(); // { value: \"b\", done: false }\nit.next(); // { value: undefined, done: true }\n\nfunction makeIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n  };\n}\n","js",[500],{"type":486,"tag":501,"props":502,"children":503},"code",{"__ignoreMap":481},[504,516,525,534,543,552,625,635,664,689,714,722,755,784,798,826,859,925,973,982,991],{"type":486,"tag":505,"props":506,"children":509},"span",{"class":507,"line":508},"line",1,[510],{"type":486,"tag":505,"props":511,"children":513},{"style":512},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[514],{"type":492,"value":515},"/*\n",{"type":486,"tag":505,"props":517,"children":519},{"class":507,"line":518},2,[520],{"type":486,"tag":505,"props":521,"children":522},{"style":512},[523],{"type":492,"value":524}," * 这是一个手写的迭代器(Iterator)\n",{"type":486,"tag":505,"props":526,"children":528},{"class":507,"line":527},3,[529],{"type":486,"tag":505,"props":530,"children":531},{"style":512},[532],{"type":492,"value":533}," * 满足迭代器协议的对象。\n",{"type":486,"tag":505,"props":535,"children":537},{"class":507,"line":536},4,[538],{"type":486,"tag":505,"props":539,"children":540},{"style":512},[541],{"type":492,"value":542}," * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n",{"type":486,"tag":505,"props":544,"children":546},{"class":507,"line":545},5,[547],{"type":486,"tag":505,"props":548,"children":549},{"style":512},[550],{"type":492,"value":551}," */\n",{"type":486,"tag":505,"props":553,"children":555},{"class":507,"line":554},6,[556,562,568,574,580,585,591,597,601,606,611,616,620],{"type":486,"tag":505,"props":557,"children":559},{"style":558},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[560],{"type":492,"value":561},"var",{"type":486,"tag":505,"props":563,"children":565},{"style":564},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[566],{"type":492,"value":567}," it",{"type":486,"tag":505,"props":569,"children":571},{"style":570},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[572],{"type":492,"value":573}," =",{"type":486,"tag":505,"props":575,"children":577},{"style":576},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[578],{"type":492,"value":579}," makeIterator",{"type":486,"tag":505,"props":581,"children":582},{"style":570},[583],{"type":492,"value":584},"([",{"type":486,"tag":505,"props":586,"children":588},{"style":587},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[589],{"type":492,"value":590},"\"",{"type":486,"tag":505,"props":592,"children":594},{"style":593},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[595],{"type":492,"value":596},"a",{"type":486,"tag":505,"props":598,"children":599},{"style":587},[600],{"type":492,"value":590},{"type":486,"tag":505,"props":602,"children":603},{"style":570},[604],{"type":492,"value":605},",",{"type":486,"tag":505,"props":607,"children":608},{"style":587},[609],{"type":492,"value":610}," \"",{"type":486,"tag":505,"props":612,"children":613},{"style":593},[614],{"type":492,"value":615},"b",{"type":486,"tag":505,"props":617,"children":618},{"style":587},[619],{"type":492,"value":590},{"type":486,"tag":505,"props":621,"children":622},{"style":570},[623],{"type":492,"value":624},"]);\n",{"type":486,"tag":505,"props":626,"children":628},{"class":507,"line":627},7,[629],{"type":486,"tag":505,"props":630,"children":632},{"emptyLinePlaceholder":631},true,[633],{"type":492,"value":634},"\n",{"type":486,"tag":505,"props":636,"children":638},{"class":507,"line":637},8,[639,644,649,654,659],{"type":486,"tag":505,"props":640,"children":641},{"style":564},[642],{"type":492,"value":643},"it",{"type":486,"tag":505,"props":645,"children":646},{"style":570},[647],{"type":492,"value":648},".",{"type":486,"tag":505,"props":650,"children":651},{"style":576},[652],{"type":492,"value":653},"next",{"type":486,"tag":505,"props":655,"children":656},{"style":570},[657],{"type":492,"value":658},"();",{"type":486,"tag":505,"props":660,"children":661},{"style":512},[662],{"type":492,"value":663}," // { value: \"a\", done: false }\n",{"type":486,"tag":505,"props":665,"children":667},{"class":507,"line":666},9,[668,672,676,680,684],{"type":486,"tag":505,"props":669,"children":670},{"style":564},[671],{"type":492,"value":643},{"type":486,"tag":505,"props":673,"children":674},{"style":570},[675],{"type":492,"value":648},{"type":486,"tag":505,"props":677,"children":678},{"style":576},[679],{"type":492,"value":653},{"type":486,"tag":505,"props":681,"children":682},{"style":570},[683],{"type":492,"value":658},{"type":486,"tag":505,"props":685,"children":686},{"style":512},[687],{"type":492,"value":688}," // { value: \"b\", done: false }\n",{"type":486,"tag":505,"props":690,"children":692},{"class":507,"line":691},10,[693,697,701,705,709],{"type":486,"tag":505,"props":694,"children":695},{"style":564},[696],{"type":492,"value":643},{"type":486,"tag":505,"props":698,"children":699},{"style":570},[700],{"type":492,"value":648},{"type":486,"tag":505,"props":702,"children":703},{"style":576},[704],{"type":492,"value":653},{"type":486,"tag":505,"props":706,"children":707},{"style":570},[708],{"type":492,"value":658},{"type":486,"tag":505,"props":710,"children":711},{"style":512},[712],{"type":492,"value":713}," // { value: undefined, done: true }\n",{"type":486,"tag":505,"props":715,"children":717},{"class":507,"line":716},11,[718],{"type":486,"tag":505,"props":719,"children":720},{"emptyLinePlaceholder":631},[721],{"type":492,"value":634},{"type":486,"tag":505,"props":723,"children":725},{"class":507,"line":724},12,[726,731,735,740,745,750],{"type":486,"tag":505,"props":727,"children":728},{"style":558},[729],{"type":492,"value":730},"function",{"type":486,"tag":505,"props":732,"children":733},{"style":576},[734],{"type":492,"value":579},{"type":486,"tag":505,"props":736,"children":737},{"style":570},[738],{"type":492,"value":739},"(",{"type":486,"tag":505,"props":741,"children":742},{"style":564},[743],{"type":492,"value":744},"array",{"type":486,"tag":505,"props":746,"children":747},{"style":570},[748],{"type":492,"value":749},")",{"type":486,"tag":505,"props":751,"children":752},{"style":570},[753],{"type":492,"value":754}," {\n",{"type":486,"tag":505,"props":756,"children":758},{"class":507,"line":757},13,[759,764,769,773,779],{"type":486,"tag":505,"props":760,"children":761},{"style":558},[762],{"type":492,"value":763},"  var",{"type":486,"tag":505,"props":765,"children":766},{"style":564},[767],{"type":492,"value":768}," nextIndex",{"type":486,"tag":505,"props":770,"children":771},{"style":570},[772],{"type":492,"value":573},{"type":486,"tag":505,"props":774,"children":776},{"style":775},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[777],{"type":492,"value":778}," 0",{"type":486,"tag":505,"props":780,"children":781},{"style":570},[782],{"type":492,"value":783},";\n",{"type":486,"tag":505,"props":785,"children":787},{"class":507,"line":786},14,[788,794],{"type":486,"tag":505,"props":789,"children":791},{"style":790},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[792],{"type":492,"value":793},"  return",{"type":486,"tag":505,"props":795,"children":796},{"style":570},[797],{"type":492,"value":754},{"type":486,"tag":505,"props":799,"children":801},{"class":507,"line":800},15,[802,807,812,817,822],{"type":486,"tag":505,"props":803,"children":804},{"style":576},[805],{"type":492,"value":806},"    next",{"type":486,"tag":505,"props":808,"children":809},{"style":570},[810],{"type":492,"value":811},":",{"type":486,"tag":505,"props":813,"children":814},{"style":558},[815],{"type":492,"value":816}," function",{"type":486,"tag":505,"props":818,"children":819},{"style":570},[820],{"type":492,"value":821}," ()",{"type":486,"tag":505,"props":823,"children":824},{"style":570},[825],{"type":492,"value":754},{"type":486,"tag":505,"props":827,"children":829},{"class":507,"line":828},16,[830,835,839,844,849,853],{"type":486,"tag":505,"props":831,"children":832},{"style":790},[833],{"type":492,"value":834},"      return",{"type":486,"tag":505,"props":836,"children":837},{"style":564},[838],{"type":492,"value":768},{"type":486,"tag":505,"props":840,"children":841},{"style":570},[842],{"type":492,"value":843}," \u003C",{"type":486,"tag":505,"props":845,"children":846},{"style":564},[847],{"type":492,"value":848}," array",{"type":486,"tag":505,"props":850,"children":851},{"style":570},[852],{"type":492,"value":648},{"type":486,"tag":505,"props":854,"children":856},{"style":855},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[857],{"type":492,"value":858},"length\n",{"type":486,"tag":505,"props":860,"children":862},{"class":507,"line":861},17,[863,868,873,878,882,886,891,896,901,906,911,915,920],{"type":486,"tag":505,"props":864,"children":865},{"style":558},[866],{"type":492,"value":867},"        ?",{"type":486,"tag":505,"props":869,"children":870},{"style":570},[871],{"type":492,"value":872}," {",{"type":486,"tag":505,"props":874,"children":875},{"style":855},[876],{"type":492,"value":877}," value",{"type":486,"tag":505,"props":879,"children":880},{"style":570},[881],{"type":492,"value":811},{"type":486,"tag":505,"props":883,"children":884},{"style":564},[885],{"type":492,"value":848},{"type":486,"tag":505,"props":887,"children":888},{"style":570},[889],{"type":492,"value":890},"[",{"type":486,"tag":505,"props":892,"children":893},{"style":564},[894],{"type":492,"value":895},"nextIndex",{"type":486,"tag":505,"props":897,"children":898},{"style":558},[899],{"type":492,"value":900},"++",{"type":486,"tag":505,"props":902,"children":903},{"style":570},[904],{"type":492,"value":905},"],",{"type":486,"tag":505,"props":907,"children":908},{"style":855},[909],{"type":492,"value":910}," done",{"type":486,"tag":505,"props":912,"children":913},{"style":570},[914],{"type":492,"value":811},{"type":486,"tag":505,"props":916,"children":917},{"style":790},[918],{"type":492,"value":919}," false",{"type":486,"tag":505,"props":921,"children":922},{"style":570},[923],{"type":492,"value":924}," }\n",{"type":486,"tag":505,"props":926,"children":928},{"class":507,"line":927},18,[929,934,938,942,946,951,955,959,963,968],{"type":486,"tag":505,"props":930,"children":931},{"style":558},[932],{"type":492,"value":933},"        :",{"type":486,"tag":505,"props":935,"children":936},{"style":570},[937],{"type":492,"value":872},{"type":486,"tag":505,"props":939,"children":940},{"style":855},[941],{"type":492,"value":877},{"type":486,"tag":505,"props":943,"children":944},{"style":570},[945],{"type":492,"value":811},{"type":486,"tag":505,"props":947,"children":948},{"style":558},[949],{"type":492,"value":950}," undefined",{"type":486,"tag":505,"props":952,"children":953},{"style":570},[954],{"type":492,"value":605},{"type":486,"tag":505,"props":956,"children":957},{"style":855},[958],{"type":492,"value":910},{"type":486,"tag":505,"props":960,"children":961},{"style":570},[962],{"type":492,"value":811},{"type":486,"tag":505,"props":964,"children":965},{"style":790},[966],{"type":492,"value":967}," true",{"type":486,"tag":505,"props":969,"children":970},{"style":570},[971],{"type":492,"value":972}," };\n",{"type":486,"tag":505,"props":974,"children":976},{"class":507,"line":975},19,[977],{"type":486,"tag":505,"props":978,"children":979},{"style":570},[980],{"type":492,"value":981},"    },\n",{"type":486,"tag":505,"props":983,"children":985},{"class":507,"line":984},20,[986],{"type":486,"tag":505,"props":987,"children":988},{"style":570},[989],{"type":492,"value":990},"  };\n",{"type":486,"tag":505,"props":992,"children":994},{"class":507,"line":993},21,[995],{"type":486,"tag":505,"props":996,"children":997},{"style":570},[998],{"type":492,"value":999},"}\n",{"type":486,"tag":487,"props":1001,"children":1003},{"id":1002},"可迭代的迭代器",[1004],{"type":492,"value":1002},{"type":486,"tag":494,"props":1006,"children":1008},{"className":496,"code":1007,"language":498,"meta":481,"style":481},"/**\n * 使迭代器可迭代\n * makeIterator 函数生成的迭代器并没有实现可迭代协议\n * 所以不能在 for...of 等语法中使用。\n * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n * 从新名了下函数名称 createIterator\n */\nfunction createIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n    [Symbol.iterator]: function () {\n      console.log(\"返回的迭代器:\", this);\n      return this; // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n    },\n  };\n}\n\nvar iterator = createIterator([1, 2, 3]);\nconsole.log(...iterator);\n",[1009],{"type":486,"tag":501,"props":1010,"children":1011},{"__ignoreMap":481},[1012,1020,1028,1036,1044,1052,1060,1067,1095,1118,1129,1152,1179,1234,1277,1284,1323,1372,1393,1400,1407,1414,1422,1474],{"type":486,"tag":505,"props":1013,"children":1014},{"class":507,"line":508},[1015],{"type":486,"tag":505,"props":1016,"children":1017},{"style":512},[1018],{"type":492,"value":1019},"/**\n",{"type":486,"tag":505,"props":1021,"children":1022},{"class":507,"line":518},[1023],{"type":486,"tag":505,"props":1024,"children":1025},{"style":512},[1026],{"type":492,"value":1027}," * 使迭代器可迭代\n",{"type":486,"tag":505,"props":1029,"children":1030},{"class":507,"line":527},[1031],{"type":486,"tag":505,"props":1032,"children":1033},{"style":512},[1034],{"type":492,"value":1035}," * makeIterator 函数生成的迭代器并没有实现可迭代协议\n",{"type":486,"tag":505,"props":1037,"children":1038},{"class":507,"line":536},[1039],{"type":486,"tag":505,"props":1040,"children":1041},{"style":512},[1042],{"type":492,"value":1043}," * 所以不能在 for...of 等语法中使用。\n",{"type":486,"tag":505,"props":1045,"children":1046},{"class":507,"line":545},[1047],{"type":486,"tag":505,"props":1048,"children":1049},{"style":512},[1050],{"type":492,"value":1051}," * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n",{"type":486,"tag":505,"props":1053,"children":1054},{"class":507,"line":554},[1055],{"type":486,"tag":505,"props":1056,"children":1057},{"style":512},[1058],{"type":492,"value":1059}," * 从新名了下函数名称 createIterator\n",{"type":486,"tag":505,"props":1061,"children":1062},{"class":507,"line":627},[1063],{"type":486,"tag":505,"props":1064,"children":1065},{"style":512},[1066],{"type":492,"value":551},{"type":486,"tag":505,"props":1068,"children":1069},{"class":507,"line":637},[1070,1074,1079,1083,1087,1091],{"type":486,"tag":505,"props":1071,"children":1072},{"style":558},[1073],{"type":492,"value":730},{"type":486,"tag":505,"props":1075,"children":1076},{"style":576},[1077],{"type":492,"value":1078}," createIterator",{"type":486,"tag":505,"props":1080,"children":1081},{"style":570},[1082],{"type":492,"value":739},{"type":486,"tag":505,"props":1084,"children":1085},{"style":564},[1086],{"type":492,"value":744},{"type":486,"tag":505,"props":1088,"children":1089},{"style":570},[1090],{"type":492,"value":749},{"type":486,"tag":505,"props":1092,"children":1093},{"style":570},[1094],{"type":492,"value":754},{"type":486,"tag":505,"props":1096,"children":1097},{"class":507,"line":666},[1098,1102,1106,1110,1114],{"type":486,"tag":505,"props":1099,"children":1100},{"style":558},[1101],{"type":492,"value":763},{"type":486,"tag":505,"props":1103,"children":1104},{"style":564},[1105],{"type":492,"value":768},{"type":486,"tag":505,"props":1107,"children":1108},{"style":570},[1109],{"type":492,"value":573},{"type":486,"tag":505,"props":1111,"children":1112},{"style":775},[1113],{"type":492,"value":778},{"type":486,"tag":505,"props":1115,"children":1116},{"style":570},[1117],{"type":492,"value":783},{"type":486,"tag":505,"props":1119,"children":1120},{"class":507,"line":691},[1121,1125],{"type":486,"tag":505,"props":1122,"children":1123},{"style":790},[1124],{"type":492,"value":793},{"type":486,"tag":505,"props":1126,"children":1127},{"style":570},[1128],{"type":492,"value":754},{"type":486,"tag":505,"props":1130,"children":1131},{"class":507,"line":716},[1132,1136,1140,1144,1148],{"type":486,"tag":505,"props":1133,"children":1134},{"style":576},[1135],{"type":492,"value":806},{"type":486,"tag":505,"props":1137,"children":1138},{"style":570},[1139],{"type":492,"value":811},{"type":486,"tag":505,"props":1141,"children":1142},{"style":558},[1143],{"type":492,"value":816},{"type":486,"tag":505,"props":1145,"children":1146},{"style":570},[1147],{"type":492,"value":821},{"type":486,"tag":505,"props":1149,"children":1150},{"style":570},[1151],{"type":492,"value":754},{"type":486,"tag":505,"props":1153,"children":1154},{"class":507,"line":724},[1155,1159,1163,1167,1171,1175],{"type":486,"tag":505,"props":1156,"children":1157},{"style":790},[1158],{"type":492,"value":834},{"type":486,"tag":505,"props":1160,"children":1161},{"style":564},[1162],{"type":492,"value":768},{"type":486,"tag":505,"props":1164,"children":1165},{"style":570},[1166],{"type":492,"value":843},{"type":486,"tag":505,"props":1168,"children":1169},{"style":564},[1170],{"type":492,"value":848},{"type":486,"tag":505,"props":1172,"children":1173},{"style":570},[1174],{"type":492,"value":648},{"type":486,"tag":505,"props":1176,"children":1177},{"style":855},[1178],{"type":492,"value":858},{"type":486,"tag":505,"props":1180,"children":1181},{"class":507,"line":757},[1182,1186,1190,1194,1198,1202,1206,1210,1214,1218,1222,1226,1230],{"type":486,"tag":505,"props":1183,"children":1184},{"style":558},[1185],{"type":492,"value":867},{"type":486,"tag":505,"props":1187,"children":1188},{"style":570},[1189],{"type":492,"value":872},{"type":486,"tag":505,"props":1191,"children":1192},{"style":855},[1193],{"type":492,"value":877},{"type":486,"tag":505,"props":1195,"children":1196},{"style":570},[1197],{"type":492,"value":811},{"type":486,"tag":505,"props":1199,"children":1200},{"style":564},[1201],{"type":492,"value":848},{"type":486,"tag":505,"props":1203,"children":1204},{"style":570},[1205],{"type":492,"value":890},{"type":486,"tag":505,"props":1207,"children":1208},{"style":564},[1209],{"type":492,"value":895},{"type":486,"tag":505,"props":1211,"children":1212},{"style":558},[1213],{"type":492,"value":900},{"type":486,"tag":505,"props":1215,"children":1216},{"style":570},[1217],{"type":492,"value":905},{"type":486,"tag":505,"props":1219,"children":1220},{"style":855},[1221],{"type":492,"value":910},{"type":486,"tag":505,"props":1223,"children":1224},{"style":570},[1225],{"type":492,"value":811},{"type":486,"tag":505,"props":1227,"children":1228},{"style":790},[1229],{"type":492,"value":919},{"type":486,"tag":505,"props":1231,"children":1232},{"style":570},[1233],{"type":492,"value":924},{"type":486,"tag":505,"props":1235,"children":1236},{"class":507,"line":786},[1237,1241,1245,1249,1253,1257,1261,1265,1269,1273],{"type":486,"tag":505,"props":1238,"children":1239},{"style":558},[1240],{"type":492,"value":933},{"type":486,"tag":505,"props":1242,"children":1243},{"style":570},[1244],{"type":492,"value":872},{"type":486,"tag":505,"props":1246,"children":1247},{"style":855},[1248],{"type":492,"value":877},{"type":486,"tag":505,"props":1250,"children":1251},{"style":570},[1252],{"type":492,"value":811},{"type":486,"tag":505,"props":1254,"children":1255},{"style":558},[1256],{"type":492,"value":950},{"type":486,"tag":505,"props":1258,"children":1259},{"style":570},[1260],{"type":492,"value":605},{"type":486,"tag":505,"props":1262,"children":1263},{"style":855},[1264],{"type":492,"value":910},{"type":486,"tag":505,"props":1266,"children":1267},{"style":570},[1268],{"type":492,"value":811},{"type":486,"tag":505,"props":1270,"children":1271},{"style":790},[1272],{"type":492,"value":967},{"type":486,"tag":505,"props":1274,"children":1275},{"style":570},[1276],{"type":492,"value":972},{"type":486,"tag":505,"props":1278,"children":1279},{"class":507,"line":800},[1280],{"type":486,"tag":505,"props":1281,"children":1282},{"style":570},[1283],{"type":492,"value":981},{"type":486,"tag":505,"props":1285,"children":1286},{"class":507,"line":828},[1287,1292,1297,1301,1306,1311,1315,1319],{"type":486,"tag":505,"props":1288,"children":1289},{"style":570},[1290],{"type":492,"value":1291},"    [",{"type":486,"tag":505,"props":1293,"children":1294},{"style":564},[1295],{"type":492,"value":1296},"Symbol",{"type":486,"tag":505,"props":1298,"children":1299},{"style":570},[1300],{"type":492,"value":648},{"type":486,"tag":505,"props":1302,"children":1303},{"style":564},[1304],{"type":492,"value":1305},"iterator",{"type":486,"tag":505,"props":1307,"children":1308},{"style":570},[1309],{"type":492,"value":1310},"]:",{"type":486,"tag":505,"props":1312,"children":1313},{"style":558},[1314],{"type":492,"value":816},{"type":486,"tag":505,"props":1316,"children":1317},{"style":570},[1318],{"type":492,"value":821},{"type":486,"tag":505,"props":1320,"children":1321},{"style":570},[1322],{"type":492,"value":754},{"type":486,"tag":505,"props":1324,"children":1325},{"class":507,"line":861},[1326,1331,1335,1340,1344,1348,1353,1357,1361,1367],{"type":486,"tag":505,"props":1327,"children":1328},{"style":564},[1329],{"type":492,"value":1330},"      console",{"type":486,"tag":505,"props":1332,"children":1333},{"style":570},[1334],{"type":492,"value":648},{"type":486,"tag":505,"props":1336,"children":1337},{"style":576},[1338],{"type":492,"value":1339},"log",{"type":486,"tag":505,"props":1341,"children":1342},{"style":570},[1343],{"type":492,"value":739},{"type":486,"tag":505,"props":1345,"children":1346},{"style":587},[1347],{"type":492,"value":590},{"type":486,"tag":505,"props":1349,"children":1350},{"style":593},[1351],{"type":492,"value":1352},"返回的迭代器:",{"type":486,"tag":505,"props":1354,"children":1355},{"style":587},[1356],{"type":492,"value":590},{"type":486,"tag":505,"props":1358,"children":1359},{"style":570},[1360],{"type":492,"value":605},{"type":486,"tag":505,"props":1362,"children":1364},{"style":1363},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[1365],{"type":492,"value":1366}," this",{"type":486,"tag":505,"props":1368,"children":1369},{"style":570},[1370],{"type":492,"value":1371},");\n",{"type":486,"tag":505,"props":1373,"children":1374},{"class":507,"line":927},[1375,1379,1383,1388],{"type":486,"tag":505,"props":1376,"children":1377},{"style":790},[1378],{"type":492,"value":834},{"type":486,"tag":505,"props":1380,"children":1381},{"style":1363},[1382],{"type":492,"value":1366},{"type":486,"tag":505,"props":1384,"children":1385},{"style":570},[1386],{"type":492,"value":1387},";",{"type":486,"tag":505,"props":1389,"children":1390},{"style":512},[1391],{"type":492,"value":1392}," // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n",{"type":486,"tag":505,"props":1394,"children":1395},{"class":507,"line":975},[1396],{"type":486,"tag":505,"props":1397,"children":1398},{"style":570},[1399],{"type":492,"value":981},{"type":486,"tag":505,"props":1401,"children":1402},{"class":507,"line":984},[1403],{"type":486,"tag":505,"props":1404,"children":1405},{"style":570},[1406],{"type":492,"value":990},{"type":486,"tag":505,"props":1408,"children":1409},{"class":507,"line":993},[1410],{"type":486,"tag":505,"props":1411,"children":1412},{"style":570},[1413],{"type":492,"value":999},{"type":486,"tag":505,"props":1415,"children":1417},{"class":507,"line":1416},22,[1418],{"type":486,"tag":505,"props":1419,"children":1420},{"emptyLinePlaceholder":631},[1421],{"type":492,"value":634},{"type":486,"tag":505,"props":1423,"children":1425},{"class":507,"line":1424},23,[1426,1430,1435,1439,1443,1447,1452,1456,1461,1465,1470],{"type":486,"tag":505,"props":1427,"children":1428},{"style":558},[1429],{"type":492,"value":561},{"type":486,"tag":505,"props":1431,"children":1432},{"style":564},[1433],{"type":492,"value":1434}," iterator",{"type":486,"tag":505,"props":1436,"children":1437},{"style":570},[1438],{"type":492,"value":573},{"type":486,"tag":505,"props":1440,"children":1441},{"style":576},[1442],{"type":492,"value":1078},{"type":486,"tag":505,"props":1444,"children":1445},{"style":570},[1446],{"type":492,"value":584},{"type":486,"tag":505,"props":1448,"children":1449},{"style":775},[1450],{"type":492,"value":1451},"1",{"type":486,"tag":505,"props":1453,"children":1454},{"style":570},[1455],{"type":492,"value":605},{"type":486,"tag":505,"props":1457,"children":1458},{"style":775},[1459],{"type":492,"value":1460}," 2",{"type":486,"tag":505,"props":1462,"children":1463},{"style":570},[1464],{"type":492,"value":605},{"type":486,"tag":505,"props":1466,"children":1467},{"style":775},[1468],{"type":492,"value":1469}," 3",{"type":486,"tag":505,"props":1471,"children":1472},{"style":570},[1473],{"type":492,"value":624},{"type":486,"tag":505,"props":1475,"children":1477},{"class":507,"line":1476},24,[1478,1483,1487,1491,1496,1500],{"type":486,"tag":505,"props":1479,"children":1480},{"style":564},[1481],{"type":492,"value":1482},"console",{"type":486,"tag":505,"props":1484,"children":1485},{"style":570},[1486],{"type":492,"value":648},{"type":486,"tag":505,"props":1488,"children":1489},{"style":576},[1490],{"type":492,"value":1339},{"type":486,"tag":505,"props":1492,"children":1493},{"style":570},[1494],{"type":492,"value":1495},"(...",{"type":486,"tag":505,"props":1497,"children":1498},{"style":564},[1499],{"type":492,"value":1305},{"type":486,"tag":505,"props":1501,"children":1502},{"style":570},[1503],{"type":492,"value":1371},{"type":486,"tag":1505,"props":1506,"children":1507},"style",{},[1508],{"type":492,"value":1509},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":481,"searchDepth":545,"depth":545,"links":1511},[1512,1513],{"id":489,"depth":518,"text":489},{"id":1002,"depth":518,"text":1002},"markdown","content:3.code-assessment:1.source:1.native-api:7.iterator.md","content","3.code-assessment/1.source/1.native-api/7.iterator.md","md",[1520,1522],{"_path":327,"title":326,"description":1521},"JSON.stringify() 方法将一个 js 对象或值转换为 json 字符串，如果指定了一个 replacer 函数，则可以选择性地替换值，或者指定的 replacer 是数组，则可选择性地仅包含数组指定的属性。",{"_path":337,"title":336,"description":481},1714046229203]