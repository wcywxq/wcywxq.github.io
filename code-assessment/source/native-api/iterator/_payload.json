[{"data":1,"prerenderedAt":1545},["Reactive",2],{"navigation":3,"/code-assessment/source/native-api/iterator":500,"/code-assessment/source/native-api/iterator-surround":1541},[4,269,298,468,476,485],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":467},"代码考核","/code-assessment",[302,367,460],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369,"children":370},"业务场景","/code-assessment/scene",[371,396,406,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457],{"title":372,"_path":373,"children":374},"Promise","/code-assessment/scene/promise",[375,378,381,384,387,390,393],{"title":376,"_path":377},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":379,"_path":380},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":382,"_path":383},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":385,"_path":386},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":388,"_path":389},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":391,"_path":392},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":394,"_path":395},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":397,"_path":398,"children":399},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[400,403],{"title":401,"_path":402},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":404,"_path":405},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":407,"_path":408},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":410,"_path":411},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":413,"_path":414},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":416,"_path":417},"倒计时","/code-assessment/scene/countdown",{"title":419,"_path":420},"日期格式化","/code-assessment/scene/date-format",{"title":422,"_path":423},"实现前端路由","/code-assessment/scene/frontend-route",{"title":425,"_path":426},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":428,"_path":429},"lodash.get","/code-assessment/scene/lodash-get",{"title":431,"_path":432},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":434,"_path":435},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":437,"_path":438},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":440,"_path":441},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":443,"_path":444},"随机数","/code-assessment/scene/random-number",{"title":446,"_path":447},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":449,"_path":450},"sku 算法实现","/code-assessment/scene/sku",{"title":452,"_path":453},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":455,"_path":456},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":458,"_path":459},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":461,"_path":462,"children":463},"Ts 类型挑战","/code-assessment/type-challeges",[464],{"title":465,"_path":466},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":469,"_path":470,"children":471,"icon":475},"项目","/project",[472],{"title":473,"_path":474},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":477,"_path":478,"children":479,"icon":484},"设计模式","/design-mode",[480,481],{"title":477,"_path":478},{"title":482,"_path":483},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":486,"_path":487,"children":488,"icon":499},"后端语言","/backend-languages",[489],{"title":490,"_path":491,"children":492},"Python","/backend-languages/python",[493,496],{"title":494,"_path":495},"基础","/backend-languages/python/base",{"title":497,"_path":498},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":330,"_dir":501,"_draft":502,"_partial":502,"_locale":503,"title":329,"description":503,"body":504,"_type":1536,"_id":1537,"_source":1538,"_file":1539,"_extension":1540},"native-api",false,"",{"type":505,"children":506,"toc":1532},"root",[507,515,1022,1027,1526],{"type":508,"tag":509,"props":510,"children":512},"element","h2",{"id":511},"实现迭代器函数",[513],{"type":514,"value":511},"text",{"type":508,"tag":516,"props":517,"children":521},"pre",{"className":518,"code":519,"language":520,"meta":503,"style":503},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/*\n * 这是一个手写的迭代器(Iterator)\n * 满足迭代器协议的对象。\n * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n */\nvar it = makeIterator([\"a\", \"b\"]);\n\nit.next(); // { value: \"a\", done: false }\nit.next(); // { value: \"b\", done: false }\nit.next(); // { value: undefined, done: true }\n\nfunction makeIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n  };\n}\n","js",[522],{"type":508,"tag":523,"props":524,"children":525},"code",{"__ignoreMap":503},[526,538,547,556,565,574,647,657,686,711,736,744,777,806,820,848,881,947,995,1004,1013],{"type":508,"tag":527,"props":528,"children":531},"span",{"class":529,"line":530},"line",1,[532],{"type":508,"tag":527,"props":533,"children":535},{"style":534},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[536],{"type":514,"value":537},"/*\n",{"type":508,"tag":527,"props":539,"children":541},{"class":529,"line":540},2,[542],{"type":508,"tag":527,"props":543,"children":544},{"style":534},[545],{"type":514,"value":546}," * 这是一个手写的迭代器(Iterator)\n",{"type":508,"tag":527,"props":548,"children":550},{"class":529,"line":549},3,[551],{"type":508,"tag":527,"props":552,"children":553},{"style":534},[554],{"type":514,"value":555}," * 满足迭代器协议的对象。\n",{"type":508,"tag":527,"props":557,"children":559},{"class":529,"line":558},4,[560],{"type":508,"tag":527,"props":561,"children":562},{"style":534},[563],{"type":514,"value":564}," * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n",{"type":508,"tag":527,"props":566,"children":568},{"class":529,"line":567},5,[569],{"type":508,"tag":527,"props":570,"children":571},{"style":534},[572],{"type":514,"value":573}," */\n",{"type":508,"tag":527,"props":575,"children":577},{"class":529,"line":576},6,[578,584,590,596,602,607,613,619,623,628,633,638,642],{"type":508,"tag":527,"props":579,"children":581},{"style":580},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[582],{"type":514,"value":583},"var",{"type":508,"tag":527,"props":585,"children":587},{"style":586},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[588],{"type":514,"value":589}," it",{"type":508,"tag":527,"props":591,"children":593},{"style":592},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[594],{"type":514,"value":595}," =",{"type":508,"tag":527,"props":597,"children":599},{"style":598},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[600],{"type":514,"value":601}," makeIterator",{"type":508,"tag":527,"props":603,"children":604},{"style":592},[605],{"type":514,"value":606},"([",{"type":508,"tag":527,"props":608,"children":610},{"style":609},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[611],{"type":514,"value":612},"\"",{"type":508,"tag":527,"props":614,"children":616},{"style":615},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[617],{"type":514,"value":618},"a",{"type":508,"tag":527,"props":620,"children":621},{"style":609},[622],{"type":514,"value":612},{"type":508,"tag":527,"props":624,"children":625},{"style":592},[626],{"type":514,"value":627},",",{"type":508,"tag":527,"props":629,"children":630},{"style":609},[631],{"type":514,"value":632}," \"",{"type":508,"tag":527,"props":634,"children":635},{"style":615},[636],{"type":514,"value":637},"b",{"type":508,"tag":527,"props":639,"children":640},{"style":609},[641],{"type":514,"value":612},{"type":508,"tag":527,"props":643,"children":644},{"style":592},[645],{"type":514,"value":646},"]);\n",{"type":508,"tag":527,"props":648,"children":650},{"class":529,"line":649},7,[651],{"type":508,"tag":527,"props":652,"children":654},{"emptyLinePlaceholder":653},true,[655],{"type":514,"value":656},"\n",{"type":508,"tag":527,"props":658,"children":660},{"class":529,"line":659},8,[661,666,671,676,681],{"type":508,"tag":527,"props":662,"children":663},{"style":586},[664],{"type":514,"value":665},"it",{"type":508,"tag":527,"props":667,"children":668},{"style":592},[669],{"type":514,"value":670},".",{"type":508,"tag":527,"props":672,"children":673},{"style":598},[674],{"type":514,"value":675},"next",{"type":508,"tag":527,"props":677,"children":678},{"style":592},[679],{"type":514,"value":680},"();",{"type":508,"tag":527,"props":682,"children":683},{"style":534},[684],{"type":514,"value":685}," // { value: \"a\", done: false }\n",{"type":508,"tag":527,"props":687,"children":689},{"class":529,"line":688},9,[690,694,698,702,706],{"type":508,"tag":527,"props":691,"children":692},{"style":586},[693],{"type":514,"value":665},{"type":508,"tag":527,"props":695,"children":696},{"style":592},[697],{"type":514,"value":670},{"type":508,"tag":527,"props":699,"children":700},{"style":598},[701],{"type":514,"value":675},{"type":508,"tag":527,"props":703,"children":704},{"style":592},[705],{"type":514,"value":680},{"type":508,"tag":527,"props":707,"children":708},{"style":534},[709],{"type":514,"value":710}," // { value: \"b\", done: false }\n",{"type":508,"tag":527,"props":712,"children":714},{"class":529,"line":713},10,[715,719,723,727,731],{"type":508,"tag":527,"props":716,"children":717},{"style":586},[718],{"type":514,"value":665},{"type":508,"tag":527,"props":720,"children":721},{"style":592},[722],{"type":514,"value":670},{"type":508,"tag":527,"props":724,"children":725},{"style":598},[726],{"type":514,"value":675},{"type":508,"tag":527,"props":728,"children":729},{"style":592},[730],{"type":514,"value":680},{"type":508,"tag":527,"props":732,"children":733},{"style":534},[734],{"type":514,"value":735}," // { value: undefined, done: true }\n",{"type":508,"tag":527,"props":737,"children":739},{"class":529,"line":738},11,[740],{"type":508,"tag":527,"props":741,"children":742},{"emptyLinePlaceholder":653},[743],{"type":514,"value":656},{"type":508,"tag":527,"props":745,"children":747},{"class":529,"line":746},12,[748,753,757,762,767,772],{"type":508,"tag":527,"props":749,"children":750},{"style":580},[751],{"type":514,"value":752},"function",{"type":508,"tag":527,"props":754,"children":755},{"style":598},[756],{"type":514,"value":601},{"type":508,"tag":527,"props":758,"children":759},{"style":592},[760],{"type":514,"value":761},"(",{"type":508,"tag":527,"props":763,"children":764},{"style":586},[765],{"type":514,"value":766},"array",{"type":508,"tag":527,"props":768,"children":769},{"style":592},[770],{"type":514,"value":771},")",{"type":508,"tag":527,"props":773,"children":774},{"style":592},[775],{"type":514,"value":776}," {\n",{"type":508,"tag":527,"props":778,"children":780},{"class":529,"line":779},13,[781,786,791,795,801],{"type":508,"tag":527,"props":782,"children":783},{"style":580},[784],{"type":514,"value":785},"  var",{"type":508,"tag":527,"props":787,"children":788},{"style":586},[789],{"type":514,"value":790}," nextIndex",{"type":508,"tag":527,"props":792,"children":793},{"style":592},[794],{"type":514,"value":595},{"type":508,"tag":527,"props":796,"children":798},{"style":797},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[799],{"type":514,"value":800}," 0",{"type":508,"tag":527,"props":802,"children":803},{"style":592},[804],{"type":514,"value":805},";\n",{"type":508,"tag":527,"props":807,"children":809},{"class":529,"line":808},14,[810,816],{"type":508,"tag":527,"props":811,"children":813},{"style":812},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[814],{"type":514,"value":815},"  return",{"type":508,"tag":527,"props":817,"children":818},{"style":592},[819],{"type":514,"value":776},{"type":508,"tag":527,"props":821,"children":823},{"class":529,"line":822},15,[824,829,834,839,844],{"type":508,"tag":527,"props":825,"children":826},{"style":598},[827],{"type":514,"value":828},"    next",{"type":508,"tag":527,"props":830,"children":831},{"style":592},[832],{"type":514,"value":833},":",{"type":508,"tag":527,"props":835,"children":836},{"style":580},[837],{"type":514,"value":838}," function",{"type":508,"tag":527,"props":840,"children":841},{"style":592},[842],{"type":514,"value":843}," ()",{"type":508,"tag":527,"props":845,"children":846},{"style":592},[847],{"type":514,"value":776},{"type":508,"tag":527,"props":849,"children":851},{"class":529,"line":850},16,[852,857,861,866,871,875],{"type":508,"tag":527,"props":853,"children":854},{"style":812},[855],{"type":514,"value":856},"      return",{"type":508,"tag":527,"props":858,"children":859},{"style":586},[860],{"type":514,"value":790},{"type":508,"tag":527,"props":862,"children":863},{"style":592},[864],{"type":514,"value":865}," \u003C",{"type":508,"tag":527,"props":867,"children":868},{"style":586},[869],{"type":514,"value":870}," array",{"type":508,"tag":527,"props":872,"children":873},{"style":592},[874],{"type":514,"value":670},{"type":508,"tag":527,"props":876,"children":878},{"style":877},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[879],{"type":514,"value":880},"length\n",{"type":508,"tag":527,"props":882,"children":884},{"class":529,"line":883},17,[885,890,895,900,904,908,913,918,923,928,933,937,942],{"type":508,"tag":527,"props":886,"children":887},{"style":580},[888],{"type":514,"value":889},"        ?",{"type":508,"tag":527,"props":891,"children":892},{"style":592},[893],{"type":514,"value":894}," {",{"type":508,"tag":527,"props":896,"children":897},{"style":877},[898],{"type":514,"value":899}," value",{"type":508,"tag":527,"props":901,"children":902},{"style":592},[903],{"type":514,"value":833},{"type":508,"tag":527,"props":905,"children":906},{"style":586},[907],{"type":514,"value":870},{"type":508,"tag":527,"props":909,"children":910},{"style":592},[911],{"type":514,"value":912},"[",{"type":508,"tag":527,"props":914,"children":915},{"style":586},[916],{"type":514,"value":917},"nextIndex",{"type":508,"tag":527,"props":919,"children":920},{"style":580},[921],{"type":514,"value":922},"++",{"type":508,"tag":527,"props":924,"children":925},{"style":592},[926],{"type":514,"value":927},"],",{"type":508,"tag":527,"props":929,"children":930},{"style":877},[931],{"type":514,"value":932}," done",{"type":508,"tag":527,"props":934,"children":935},{"style":592},[936],{"type":514,"value":833},{"type":508,"tag":527,"props":938,"children":939},{"style":812},[940],{"type":514,"value":941}," false",{"type":508,"tag":527,"props":943,"children":944},{"style":592},[945],{"type":514,"value":946}," }\n",{"type":508,"tag":527,"props":948,"children":950},{"class":529,"line":949},18,[951,956,960,964,968,973,977,981,985,990],{"type":508,"tag":527,"props":952,"children":953},{"style":580},[954],{"type":514,"value":955},"        :",{"type":508,"tag":527,"props":957,"children":958},{"style":592},[959],{"type":514,"value":894},{"type":508,"tag":527,"props":961,"children":962},{"style":877},[963],{"type":514,"value":899},{"type":508,"tag":527,"props":965,"children":966},{"style":592},[967],{"type":514,"value":833},{"type":508,"tag":527,"props":969,"children":970},{"style":580},[971],{"type":514,"value":972}," undefined",{"type":508,"tag":527,"props":974,"children":975},{"style":592},[976],{"type":514,"value":627},{"type":508,"tag":527,"props":978,"children":979},{"style":877},[980],{"type":514,"value":932},{"type":508,"tag":527,"props":982,"children":983},{"style":592},[984],{"type":514,"value":833},{"type":508,"tag":527,"props":986,"children":987},{"style":812},[988],{"type":514,"value":989}," true",{"type":508,"tag":527,"props":991,"children":992},{"style":592},[993],{"type":514,"value":994}," };\n",{"type":508,"tag":527,"props":996,"children":998},{"class":529,"line":997},19,[999],{"type":508,"tag":527,"props":1000,"children":1001},{"style":592},[1002],{"type":514,"value":1003},"    },\n",{"type":508,"tag":527,"props":1005,"children":1007},{"class":529,"line":1006},20,[1008],{"type":508,"tag":527,"props":1009,"children":1010},{"style":592},[1011],{"type":514,"value":1012},"  };\n",{"type":508,"tag":527,"props":1014,"children":1016},{"class":529,"line":1015},21,[1017],{"type":508,"tag":527,"props":1018,"children":1019},{"style":592},[1020],{"type":514,"value":1021},"}\n",{"type":508,"tag":509,"props":1023,"children":1025},{"id":1024},"可迭代的迭代器",[1026],{"type":514,"value":1024},{"type":508,"tag":516,"props":1028,"children":1030},{"className":518,"code":1029,"language":520,"meta":503,"style":503},"/**\n * 使迭代器可迭代\n * makeIterator 函数生成的迭代器并没有实现可迭代协议\n * 所以不能在 for...of 等语法中使用。\n * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n * 从新名了下函数名称 createIterator\n */\nfunction createIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n    [Symbol.iterator]: function () {\n      console.log(\"返回的迭代器:\", this);\n      return this; // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n    },\n  };\n}\n\nvar iterator = createIterator([1, 2, 3]);\nconsole.log(...iterator);\n",[1031],{"type":508,"tag":523,"props":1032,"children":1033},{"__ignoreMap":503},[1034,1042,1050,1058,1066,1074,1082,1089,1117,1140,1151,1174,1201,1256,1299,1306,1345,1394,1415,1422,1429,1436,1444,1496],{"type":508,"tag":527,"props":1035,"children":1036},{"class":529,"line":530},[1037],{"type":508,"tag":527,"props":1038,"children":1039},{"style":534},[1040],{"type":514,"value":1041},"/**\n",{"type":508,"tag":527,"props":1043,"children":1044},{"class":529,"line":540},[1045],{"type":508,"tag":527,"props":1046,"children":1047},{"style":534},[1048],{"type":514,"value":1049}," * 使迭代器可迭代\n",{"type":508,"tag":527,"props":1051,"children":1052},{"class":529,"line":549},[1053],{"type":508,"tag":527,"props":1054,"children":1055},{"style":534},[1056],{"type":514,"value":1057}," * makeIterator 函数生成的迭代器并没有实现可迭代协议\n",{"type":508,"tag":527,"props":1059,"children":1060},{"class":529,"line":558},[1061],{"type":508,"tag":527,"props":1062,"children":1063},{"style":534},[1064],{"type":514,"value":1065}," * 所以不能在 for...of 等语法中使用。\n",{"type":508,"tag":527,"props":1067,"children":1068},{"class":529,"line":567},[1069],{"type":508,"tag":527,"props":1070,"children":1071},{"style":534},[1072],{"type":514,"value":1073}," * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n",{"type":508,"tag":527,"props":1075,"children":1076},{"class":529,"line":576},[1077],{"type":508,"tag":527,"props":1078,"children":1079},{"style":534},[1080],{"type":514,"value":1081}," * 从新名了下函数名称 createIterator\n",{"type":508,"tag":527,"props":1083,"children":1084},{"class":529,"line":649},[1085],{"type":508,"tag":527,"props":1086,"children":1087},{"style":534},[1088],{"type":514,"value":573},{"type":508,"tag":527,"props":1090,"children":1091},{"class":529,"line":659},[1092,1096,1101,1105,1109,1113],{"type":508,"tag":527,"props":1093,"children":1094},{"style":580},[1095],{"type":514,"value":752},{"type":508,"tag":527,"props":1097,"children":1098},{"style":598},[1099],{"type":514,"value":1100}," createIterator",{"type":508,"tag":527,"props":1102,"children":1103},{"style":592},[1104],{"type":514,"value":761},{"type":508,"tag":527,"props":1106,"children":1107},{"style":586},[1108],{"type":514,"value":766},{"type":508,"tag":527,"props":1110,"children":1111},{"style":592},[1112],{"type":514,"value":771},{"type":508,"tag":527,"props":1114,"children":1115},{"style":592},[1116],{"type":514,"value":776},{"type":508,"tag":527,"props":1118,"children":1119},{"class":529,"line":688},[1120,1124,1128,1132,1136],{"type":508,"tag":527,"props":1121,"children":1122},{"style":580},[1123],{"type":514,"value":785},{"type":508,"tag":527,"props":1125,"children":1126},{"style":586},[1127],{"type":514,"value":790},{"type":508,"tag":527,"props":1129,"children":1130},{"style":592},[1131],{"type":514,"value":595},{"type":508,"tag":527,"props":1133,"children":1134},{"style":797},[1135],{"type":514,"value":800},{"type":508,"tag":527,"props":1137,"children":1138},{"style":592},[1139],{"type":514,"value":805},{"type":508,"tag":527,"props":1141,"children":1142},{"class":529,"line":713},[1143,1147],{"type":508,"tag":527,"props":1144,"children":1145},{"style":812},[1146],{"type":514,"value":815},{"type":508,"tag":527,"props":1148,"children":1149},{"style":592},[1150],{"type":514,"value":776},{"type":508,"tag":527,"props":1152,"children":1153},{"class":529,"line":738},[1154,1158,1162,1166,1170],{"type":508,"tag":527,"props":1155,"children":1156},{"style":598},[1157],{"type":514,"value":828},{"type":508,"tag":527,"props":1159,"children":1160},{"style":592},[1161],{"type":514,"value":833},{"type":508,"tag":527,"props":1163,"children":1164},{"style":580},[1165],{"type":514,"value":838},{"type":508,"tag":527,"props":1167,"children":1168},{"style":592},[1169],{"type":514,"value":843},{"type":508,"tag":527,"props":1171,"children":1172},{"style":592},[1173],{"type":514,"value":776},{"type":508,"tag":527,"props":1175,"children":1176},{"class":529,"line":746},[1177,1181,1185,1189,1193,1197],{"type":508,"tag":527,"props":1178,"children":1179},{"style":812},[1180],{"type":514,"value":856},{"type":508,"tag":527,"props":1182,"children":1183},{"style":586},[1184],{"type":514,"value":790},{"type":508,"tag":527,"props":1186,"children":1187},{"style":592},[1188],{"type":514,"value":865},{"type":508,"tag":527,"props":1190,"children":1191},{"style":586},[1192],{"type":514,"value":870},{"type":508,"tag":527,"props":1194,"children":1195},{"style":592},[1196],{"type":514,"value":670},{"type":508,"tag":527,"props":1198,"children":1199},{"style":877},[1200],{"type":514,"value":880},{"type":508,"tag":527,"props":1202,"children":1203},{"class":529,"line":779},[1204,1208,1212,1216,1220,1224,1228,1232,1236,1240,1244,1248,1252],{"type":508,"tag":527,"props":1205,"children":1206},{"style":580},[1207],{"type":514,"value":889},{"type":508,"tag":527,"props":1209,"children":1210},{"style":592},[1211],{"type":514,"value":894},{"type":508,"tag":527,"props":1213,"children":1214},{"style":877},[1215],{"type":514,"value":899},{"type":508,"tag":527,"props":1217,"children":1218},{"style":592},[1219],{"type":514,"value":833},{"type":508,"tag":527,"props":1221,"children":1222},{"style":586},[1223],{"type":514,"value":870},{"type":508,"tag":527,"props":1225,"children":1226},{"style":592},[1227],{"type":514,"value":912},{"type":508,"tag":527,"props":1229,"children":1230},{"style":586},[1231],{"type":514,"value":917},{"type":508,"tag":527,"props":1233,"children":1234},{"style":580},[1235],{"type":514,"value":922},{"type":508,"tag":527,"props":1237,"children":1238},{"style":592},[1239],{"type":514,"value":927},{"type":508,"tag":527,"props":1241,"children":1242},{"style":877},[1243],{"type":514,"value":932},{"type":508,"tag":527,"props":1245,"children":1246},{"style":592},[1247],{"type":514,"value":833},{"type":508,"tag":527,"props":1249,"children":1250},{"style":812},[1251],{"type":514,"value":941},{"type":508,"tag":527,"props":1253,"children":1254},{"style":592},[1255],{"type":514,"value":946},{"type":508,"tag":527,"props":1257,"children":1258},{"class":529,"line":808},[1259,1263,1267,1271,1275,1279,1283,1287,1291,1295],{"type":508,"tag":527,"props":1260,"children":1261},{"style":580},[1262],{"type":514,"value":955},{"type":508,"tag":527,"props":1264,"children":1265},{"style":592},[1266],{"type":514,"value":894},{"type":508,"tag":527,"props":1268,"children":1269},{"style":877},[1270],{"type":514,"value":899},{"type":508,"tag":527,"props":1272,"children":1273},{"style":592},[1274],{"type":514,"value":833},{"type":508,"tag":527,"props":1276,"children":1277},{"style":580},[1278],{"type":514,"value":972},{"type":508,"tag":527,"props":1280,"children":1281},{"style":592},[1282],{"type":514,"value":627},{"type":508,"tag":527,"props":1284,"children":1285},{"style":877},[1286],{"type":514,"value":932},{"type":508,"tag":527,"props":1288,"children":1289},{"style":592},[1290],{"type":514,"value":833},{"type":508,"tag":527,"props":1292,"children":1293},{"style":812},[1294],{"type":514,"value":989},{"type":508,"tag":527,"props":1296,"children":1297},{"style":592},[1298],{"type":514,"value":994},{"type":508,"tag":527,"props":1300,"children":1301},{"class":529,"line":822},[1302],{"type":508,"tag":527,"props":1303,"children":1304},{"style":592},[1305],{"type":514,"value":1003},{"type":508,"tag":527,"props":1307,"children":1308},{"class":529,"line":850},[1309,1314,1319,1323,1328,1333,1337,1341],{"type":508,"tag":527,"props":1310,"children":1311},{"style":592},[1312],{"type":514,"value":1313},"    [",{"type":508,"tag":527,"props":1315,"children":1316},{"style":586},[1317],{"type":514,"value":1318},"Symbol",{"type":508,"tag":527,"props":1320,"children":1321},{"style":592},[1322],{"type":514,"value":670},{"type":508,"tag":527,"props":1324,"children":1325},{"style":586},[1326],{"type":514,"value":1327},"iterator",{"type":508,"tag":527,"props":1329,"children":1330},{"style":592},[1331],{"type":514,"value":1332},"]:",{"type":508,"tag":527,"props":1334,"children":1335},{"style":580},[1336],{"type":514,"value":838},{"type":508,"tag":527,"props":1338,"children":1339},{"style":592},[1340],{"type":514,"value":843},{"type":508,"tag":527,"props":1342,"children":1343},{"style":592},[1344],{"type":514,"value":776},{"type":508,"tag":527,"props":1346,"children":1347},{"class":529,"line":883},[1348,1353,1357,1362,1366,1370,1375,1379,1383,1389],{"type":508,"tag":527,"props":1349,"children":1350},{"style":586},[1351],{"type":514,"value":1352},"      console",{"type":508,"tag":527,"props":1354,"children":1355},{"style":592},[1356],{"type":514,"value":670},{"type":508,"tag":527,"props":1358,"children":1359},{"style":598},[1360],{"type":514,"value":1361},"log",{"type":508,"tag":527,"props":1363,"children":1364},{"style":592},[1365],{"type":514,"value":761},{"type":508,"tag":527,"props":1367,"children":1368},{"style":609},[1369],{"type":514,"value":612},{"type":508,"tag":527,"props":1371,"children":1372},{"style":615},[1373],{"type":514,"value":1374},"返回的迭代器:",{"type":508,"tag":527,"props":1376,"children":1377},{"style":609},[1378],{"type":514,"value":612},{"type":508,"tag":527,"props":1380,"children":1381},{"style":592},[1382],{"type":514,"value":627},{"type":508,"tag":527,"props":1384,"children":1386},{"style":1385},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[1387],{"type":514,"value":1388}," this",{"type":508,"tag":527,"props":1390,"children":1391},{"style":592},[1392],{"type":514,"value":1393},");\n",{"type":508,"tag":527,"props":1395,"children":1396},{"class":529,"line":949},[1397,1401,1405,1410],{"type":508,"tag":527,"props":1398,"children":1399},{"style":812},[1400],{"type":514,"value":856},{"type":508,"tag":527,"props":1402,"children":1403},{"style":1385},[1404],{"type":514,"value":1388},{"type":508,"tag":527,"props":1406,"children":1407},{"style":592},[1408],{"type":514,"value":1409},";",{"type":508,"tag":527,"props":1411,"children":1412},{"style":534},[1413],{"type":514,"value":1414}," // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n",{"type":508,"tag":527,"props":1416,"children":1417},{"class":529,"line":997},[1418],{"type":508,"tag":527,"props":1419,"children":1420},{"style":592},[1421],{"type":514,"value":1003},{"type":508,"tag":527,"props":1423,"children":1424},{"class":529,"line":1006},[1425],{"type":508,"tag":527,"props":1426,"children":1427},{"style":592},[1428],{"type":514,"value":1012},{"type":508,"tag":527,"props":1430,"children":1431},{"class":529,"line":1015},[1432],{"type":508,"tag":527,"props":1433,"children":1434},{"style":592},[1435],{"type":514,"value":1021},{"type":508,"tag":527,"props":1437,"children":1439},{"class":529,"line":1438},22,[1440],{"type":508,"tag":527,"props":1441,"children":1442},{"emptyLinePlaceholder":653},[1443],{"type":514,"value":656},{"type":508,"tag":527,"props":1445,"children":1447},{"class":529,"line":1446},23,[1448,1452,1457,1461,1465,1469,1474,1478,1483,1487,1492],{"type":508,"tag":527,"props":1449,"children":1450},{"style":580},[1451],{"type":514,"value":583},{"type":508,"tag":527,"props":1453,"children":1454},{"style":586},[1455],{"type":514,"value":1456}," iterator",{"type":508,"tag":527,"props":1458,"children":1459},{"style":592},[1460],{"type":514,"value":595},{"type":508,"tag":527,"props":1462,"children":1463},{"style":598},[1464],{"type":514,"value":1100},{"type":508,"tag":527,"props":1466,"children":1467},{"style":592},[1468],{"type":514,"value":606},{"type":508,"tag":527,"props":1470,"children":1471},{"style":797},[1472],{"type":514,"value":1473},"1",{"type":508,"tag":527,"props":1475,"children":1476},{"style":592},[1477],{"type":514,"value":627},{"type":508,"tag":527,"props":1479,"children":1480},{"style":797},[1481],{"type":514,"value":1482}," 2",{"type":508,"tag":527,"props":1484,"children":1485},{"style":592},[1486],{"type":514,"value":627},{"type":508,"tag":527,"props":1488,"children":1489},{"style":797},[1490],{"type":514,"value":1491}," 3",{"type":508,"tag":527,"props":1493,"children":1494},{"style":592},[1495],{"type":514,"value":646},{"type":508,"tag":527,"props":1497,"children":1499},{"class":529,"line":1498},24,[1500,1505,1509,1513,1518,1522],{"type":508,"tag":527,"props":1501,"children":1502},{"style":586},[1503],{"type":514,"value":1504},"console",{"type":508,"tag":527,"props":1506,"children":1507},{"style":592},[1508],{"type":514,"value":670},{"type":508,"tag":527,"props":1510,"children":1511},{"style":598},[1512],{"type":514,"value":1361},{"type":508,"tag":527,"props":1514,"children":1515},{"style":592},[1516],{"type":514,"value":1517},"(...",{"type":508,"tag":527,"props":1519,"children":1520},{"style":586},[1521],{"type":514,"value":1327},{"type":508,"tag":527,"props":1523,"children":1524},{"style":592},[1525],{"type":514,"value":1393},{"type":508,"tag":1527,"props":1528,"children":1529},"style",{},[1530],{"type":514,"value":1531},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":503,"searchDepth":567,"depth":567,"links":1533},[1534,1535],{"id":511,"depth":540,"text":511},{"id":1024,"depth":540,"text":1024},"markdown","content:3.code-assessment:1.source:1.native-api:7.iterator.md","content","3.code-assessment/1.source/1.native-api/7.iterator.md","md",[1542,1544],{"_path":327,"title":326,"description":1543},"JSON.stringify() 方法将一个 js 对象或值转换为 json 字符串，如果指定了一个 replacer 函数，则可以选择性地替换值，或者指定的 replacer 是数组，则可选择性地仅包含数组指定的属性。",{"_path":337,"title":336,"description":503},1714054341319]