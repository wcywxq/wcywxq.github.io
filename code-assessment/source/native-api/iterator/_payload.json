[{"data":1,"prerenderedAt":1594},["Reactive",2],{"navigation":3,"/code-assessment/source/native-api/iterator":549,"/code-assessment/source/native-api/iterator-surround":1590},[4,272,301,517,525,534],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":516},"代码考核","/code-assessment",[305,407,509],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,340,356,384,391,398,401,404],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342,"children":343},"函数 Function","/code-assessment/source/function",[344,347,350,353],{"title":345,"_path":346},"函数防抖","/code-assessment/source/function/debounce",{"title":348,"_path":349},"函数节流","/code-assessment/source/function/throttle",{"title":351,"_path":352},"函数柯理化","/code-assessment/source/function/curry",{"title":354,"_path":355},"函数睡眠","/code-assessment/source/function/sleep",{"title":357,"_path":358,"children":359},"数组 Array","/code-assessment/source/array",[360,363,366,369,372,375,378,381],{"title":361,"_path":362},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":364,"_path":365},"数组扁平化","/code-assessment/source/array/flat",{"title":367,"_path":368},"原型方法","/code-assessment/source/array/prototype-method",{"title":370,"_path":371},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":373,"_path":374},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":376,"_path":377},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":379,"_path":380},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":382,"_path":383},"二维数组","/code-assessment/source/array/2d-array",{"title":385,"_path":386,"children":387},"字符串 String","/code-assessment/source/string",[388],{"title":389,"_path":390},"repeat()","/code-assessment/source/string/repeat",{"title":392,"_path":393,"children":394},"集合 Set","/code-assessment/source/set",[395],{"title":396,"_path":397},"遍历集合","/code-assessment/source/set/traverse",{"title":399,"_path":400},"获取通用类型","/code-assessment/source/get-generic-type",{"title":402,"_path":403},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":405,"_path":406},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":408,"_path":409,"children":410},"业务场景","/code-assessment/scene",[411,442,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506],{"title":412,"_path":413,"children":414},"Promise","/code-assessment/scene/promise",[415,418,421,424,427,430,433,436,439],{"title":416,"_path":417},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":419,"_path":420},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":422,"_path":423},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":425,"_path":426},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":428,"_path":429},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":431,"_path":432},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":434,"_path":435},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":437,"_path":438},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":440,"_path":441},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":443,"_path":444,"children":445},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[446,449],{"title":447,"_path":448},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":450,"_path":451},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":453,"_path":454},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":456,"_path":457},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":459,"_path":460},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":462,"_path":463},"倒计时","/code-assessment/scene/countdown",{"title":465,"_path":466},"日期格式化","/code-assessment/scene/date-format",{"title":468,"_path":469},"实现前端路由","/code-assessment/scene/frontend-route",{"title":471,"_path":472},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":474,"_path":475},"lodash.get","/code-assessment/scene/lodash-get",{"title":477,"_path":478},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":480,"_path":481},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":483,"_path":484},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":486,"_path":487},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":489,"_path":490},"随机数","/code-assessment/scene/random-number",{"title":492,"_path":493},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":495,"_path":496},"sku 算法实现","/code-assessment/scene/sku",{"title":498,"_path":499},"整数分割","/code-assessment/scene/split-number",{"title":501,"_path":502},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":504,"_path":505},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":507,"_path":508},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":510,"_path":511,"children":512},"Ts 类型挑战","/code-assessment/type-challeges",[513],{"title":514,"_path":515},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":518,"_path":519,"children":520,"icon":524},"项目","/project",[521],{"title":522,"_path":523},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":526,"_path":527,"children":528,"icon":533},"设计模式","/design-mode",[529,530],{"title":526,"_path":527},{"title":531,"_path":532},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":535,"_path":536,"children":537,"icon":548},"后端语言","/backend-languages",[538],{"title":539,"_path":540,"children":541},"Python","/backend-languages/python",[542,545],{"title":543,"_path":544},"基础","/backend-languages/python/base",{"title":546,"_path":547},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":336,"_dir":550,"_draft":551,"_partial":551,"_locale":552,"title":335,"description":552,"body":553,"_type":1585,"_id":1586,"_source":1587,"_file":1588,"_extension":1589},"native-api",false,"",{"type":554,"children":555,"toc":1581},"root",[556,564,1071,1076,1575],{"type":557,"tag":558,"props":559,"children":561},"element","h2",{"id":560},"实现迭代器函数",[562],{"type":563,"value":560},"text",{"type":557,"tag":565,"props":566,"children":570},"pre",{"className":567,"code":568,"language":569,"meta":552,"style":552},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/*\n * 这是一个手写的迭代器(Iterator)\n * 满足迭代器协议的对象。\n * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n */\nvar it = makeIterator([\"a\", \"b\"]);\n\nit.next(); // { value: \"a\", done: false }\nit.next(); // { value: \"b\", done: false }\nit.next(); // { value: undefined, done: true }\n\nfunction makeIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n  };\n}\n","js",[571],{"type":557,"tag":572,"props":573,"children":574},"code",{"__ignoreMap":552},[575,587,596,605,614,623,696,706,735,760,785,793,826,855,869,897,930,996,1044,1053,1062],{"type":557,"tag":576,"props":577,"children":580},"span",{"class":578,"line":579},"line",1,[581],{"type":557,"tag":576,"props":582,"children":584},{"style":583},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[585],{"type":563,"value":586},"/*\n",{"type":557,"tag":576,"props":588,"children":590},{"class":578,"line":589},2,[591],{"type":557,"tag":576,"props":592,"children":593},{"style":583},[594],{"type":563,"value":595}," * 这是一个手写的迭代器(Iterator)\n",{"type":557,"tag":576,"props":597,"children":599},{"class":578,"line":598},3,[600],{"type":557,"tag":576,"props":601,"children":602},{"style":583},[603],{"type":563,"value":604}," * 满足迭代器协议的对象。\n",{"type":557,"tag":576,"props":606,"children":608},{"class":578,"line":607},4,[609],{"type":557,"tag":576,"props":610,"children":611},{"style":583},[612],{"type":563,"value":613}," * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n",{"type":557,"tag":576,"props":615,"children":617},{"class":578,"line":616},5,[618],{"type":557,"tag":576,"props":619,"children":620},{"style":583},[621],{"type":563,"value":622}," */\n",{"type":557,"tag":576,"props":624,"children":626},{"class":578,"line":625},6,[627,633,639,645,651,656,662,668,672,677,682,687,691],{"type":557,"tag":576,"props":628,"children":630},{"style":629},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[631],{"type":563,"value":632},"var",{"type":557,"tag":576,"props":634,"children":636},{"style":635},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[637],{"type":563,"value":638}," it",{"type":557,"tag":576,"props":640,"children":642},{"style":641},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[643],{"type":563,"value":644}," =",{"type":557,"tag":576,"props":646,"children":648},{"style":647},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[649],{"type":563,"value":650}," makeIterator",{"type":557,"tag":576,"props":652,"children":653},{"style":641},[654],{"type":563,"value":655},"([",{"type":557,"tag":576,"props":657,"children":659},{"style":658},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[660],{"type":563,"value":661},"\"",{"type":557,"tag":576,"props":663,"children":665},{"style":664},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[666],{"type":563,"value":667},"a",{"type":557,"tag":576,"props":669,"children":670},{"style":658},[671],{"type":563,"value":661},{"type":557,"tag":576,"props":673,"children":674},{"style":641},[675],{"type":563,"value":676},",",{"type":557,"tag":576,"props":678,"children":679},{"style":658},[680],{"type":563,"value":681}," \"",{"type":557,"tag":576,"props":683,"children":684},{"style":664},[685],{"type":563,"value":686},"b",{"type":557,"tag":576,"props":688,"children":689},{"style":658},[690],{"type":563,"value":661},{"type":557,"tag":576,"props":692,"children":693},{"style":641},[694],{"type":563,"value":695},"]);\n",{"type":557,"tag":576,"props":697,"children":699},{"class":578,"line":698},7,[700],{"type":557,"tag":576,"props":701,"children":703},{"emptyLinePlaceholder":702},true,[704],{"type":563,"value":705},"\n",{"type":557,"tag":576,"props":707,"children":709},{"class":578,"line":708},8,[710,715,720,725,730],{"type":557,"tag":576,"props":711,"children":712},{"style":635},[713],{"type":563,"value":714},"it",{"type":557,"tag":576,"props":716,"children":717},{"style":641},[718],{"type":563,"value":719},".",{"type":557,"tag":576,"props":721,"children":722},{"style":647},[723],{"type":563,"value":724},"next",{"type":557,"tag":576,"props":726,"children":727},{"style":641},[728],{"type":563,"value":729},"();",{"type":557,"tag":576,"props":731,"children":732},{"style":583},[733],{"type":563,"value":734}," // { value: \"a\", done: false }\n",{"type":557,"tag":576,"props":736,"children":738},{"class":578,"line":737},9,[739,743,747,751,755],{"type":557,"tag":576,"props":740,"children":741},{"style":635},[742],{"type":563,"value":714},{"type":557,"tag":576,"props":744,"children":745},{"style":641},[746],{"type":563,"value":719},{"type":557,"tag":576,"props":748,"children":749},{"style":647},[750],{"type":563,"value":724},{"type":557,"tag":576,"props":752,"children":753},{"style":641},[754],{"type":563,"value":729},{"type":557,"tag":576,"props":756,"children":757},{"style":583},[758],{"type":563,"value":759}," // { value: \"b\", done: false }\n",{"type":557,"tag":576,"props":761,"children":763},{"class":578,"line":762},10,[764,768,772,776,780],{"type":557,"tag":576,"props":765,"children":766},{"style":635},[767],{"type":563,"value":714},{"type":557,"tag":576,"props":769,"children":770},{"style":641},[771],{"type":563,"value":719},{"type":557,"tag":576,"props":773,"children":774},{"style":647},[775],{"type":563,"value":724},{"type":557,"tag":576,"props":777,"children":778},{"style":641},[779],{"type":563,"value":729},{"type":557,"tag":576,"props":781,"children":782},{"style":583},[783],{"type":563,"value":784}," // { value: undefined, done: true }\n",{"type":557,"tag":576,"props":786,"children":788},{"class":578,"line":787},11,[789],{"type":557,"tag":576,"props":790,"children":791},{"emptyLinePlaceholder":702},[792],{"type":563,"value":705},{"type":557,"tag":576,"props":794,"children":796},{"class":578,"line":795},12,[797,802,806,811,816,821],{"type":557,"tag":576,"props":798,"children":799},{"style":629},[800],{"type":563,"value":801},"function",{"type":557,"tag":576,"props":803,"children":804},{"style":647},[805],{"type":563,"value":650},{"type":557,"tag":576,"props":807,"children":808},{"style":641},[809],{"type":563,"value":810},"(",{"type":557,"tag":576,"props":812,"children":813},{"style":635},[814],{"type":563,"value":815},"array",{"type":557,"tag":576,"props":817,"children":818},{"style":641},[819],{"type":563,"value":820},")",{"type":557,"tag":576,"props":822,"children":823},{"style":641},[824],{"type":563,"value":825}," {\n",{"type":557,"tag":576,"props":827,"children":829},{"class":578,"line":828},13,[830,835,840,844,850],{"type":557,"tag":576,"props":831,"children":832},{"style":629},[833],{"type":563,"value":834},"  var",{"type":557,"tag":576,"props":836,"children":837},{"style":635},[838],{"type":563,"value":839}," nextIndex",{"type":557,"tag":576,"props":841,"children":842},{"style":641},[843],{"type":563,"value":644},{"type":557,"tag":576,"props":845,"children":847},{"style":846},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[848],{"type":563,"value":849}," 0",{"type":557,"tag":576,"props":851,"children":852},{"style":641},[853],{"type":563,"value":854},";\n",{"type":557,"tag":576,"props":856,"children":858},{"class":578,"line":857},14,[859,865],{"type":557,"tag":576,"props":860,"children":862},{"style":861},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[863],{"type":563,"value":864},"  return",{"type":557,"tag":576,"props":866,"children":867},{"style":641},[868],{"type":563,"value":825},{"type":557,"tag":576,"props":870,"children":872},{"class":578,"line":871},15,[873,878,883,888,893],{"type":557,"tag":576,"props":874,"children":875},{"style":647},[876],{"type":563,"value":877},"    next",{"type":557,"tag":576,"props":879,"children":880},{"style":641},[881],{"type":563,"value":882},":",{"type":557,"tag":576,"props":884,"children":885},{"style":629},[886],{"type":563,"value":887}," function",{"type":557,"tag":576,"props":889,"children":890},{"style":641},[891],{"type":563,"value":892}," ()",{"type":557,"tag":576,"props":894,"children":895},{"style":641},[896],{"type":563,"value":825},{"type":557,"tag":576,"props":898,"children":900},{"class":578,"line":899},16,[901,906,910,915,920,924],{"type":557,"tag":576,"props":902,"children":903},{"style":861},[904],{"type":563,"value":905},"      return",{"type":557,"tag":576,"props":907,"children":908},{"style":635},[909],{"type":563,"value":839},{"type":557,"tag":576,"props":911,"children":912},{"style":641},[913],{"type":563,"value":914}," \u003C",{"type":557,"tag":576,"props":916,"children":917},{"style":635},[918],{"type":563,"value":919}," array",{"type":557,"tag":576,"props":921,"children":922},{"style":641},[923],{"type":563,"value":719},{"type":557,"tag":576,"props":925,"children":927},{"style":926},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[928],{"type":563,"value":929},"length\n",{"type":557,"tag":576,"props":931,"children":933},{"class":578,"line":932},17,[934,939,944,949,953,957,962,967,972,977,982,986,991],{"type":557,"tag":576,"props":935,"children":936},{"style":629},[937],{"type":563,"value":938},"        ?",{"type":557,"tag":576,"props":940,"children":941},{"style":641},[942],{"type":563,"value":943}," {",{"type":557,"tag":576,"props":945,"children":946},{"style":926},[947],{"type":563,"value":948}," value",{"type":557,"tag":576,"props":950,"children":951},{"style":641},[952],{"type":563,"value":882},{"type":557,"tag":576,"props":954,"children":955},{"style":635},[956],{"type":563,"value":919},{"type":557,"tag":576,"props":958,"children":959},{"style":641},[960],{"type":563,"value":961},"[",{"type":557,"tag":576,"props":963,"children":964},{"style":635},[965],{"type":563,"value":966},"nextIndex",{"type":557,"tag":576,"props":968,"children":969},{"style":629},[970],{"type":563,"value":971},"++",{"type":557,"tag":576,"props":973,"children":974},{"style":641},[975],{"type":563,"value":976},"],",{"type":557,"tag":576,"props":978,"children":979},{"style":926},[980],{"type":563,"value":981}," done",{"type":557,"tag":576,"props":983,"children":984},{"style":641},[985],{"type":563,"value":882},{"type":557,"tag":576,"props":987,"children":988},{"style":861},[989],{"type":563,"value":990}," false",{"type":557,"tag":576,"props":992,"children":993},{"style":641},[994],{"type":563,"value":995}," }\n",{"type":557,"tag":576,"props":997,"children":999},{"class":578,"line":998},18,[1000,1005,1009,1013,1017,1022,1026,1030,1034,1039],{"type":557,"tag":576,"props":1001,"children":1002},{"style":629},[1003],{"type":563,"value":1004},"        :",{"type":557,"tag":576,"props":1006,"children":1007},{"style":641},[1008],{"type":563,"value":943},{"type":557,"tag":576,"props":1010,"children":1011},{"style":926},[1012],{"type":563,"value":948},{"type":557,"tag":576,"props":1014,"children":1015},{"style":641},[1016],{"type":563,"value":882},{"type":557,"tag":576,"props":1018,"children":1019},{"style":629},[1020],{"type":563,"value":1021}," undefined",{"type":557,"tag":576,"props":1023,"children":1024},{"style":641},[1025],{"type":563,"value":676},{"type":557,"tag":576,"props":1027,"children":1028},{"style":926},[1029],{"type":563,"value":981},{"type":557,"tag":576,"props":1031,"children":1032},{"style":641},[1033],{"type":563,"value":882},{"type":557,"tag":576,"props":1035,"children":1036},{"style":861},[1037],{"type":563,"value":1038}," true",{"type":557,"tag":576,"props":1040,"children":1041},{"style":641},[1042],{"type":563,"value":1043}," };\n",{"type":557,"tag":576,"props":1045,"children":1047},{"class":578,"line":1046},19,[1048],{"type":557,"tag":576,"props":1049,"children":1050},{"style":641},[1051],{"type":563,"value":1052},"    },\n",{"type":557,"tag":576,"props":1054,"children":1056},{"class":578,"line":1055},20,[1057],{"type":557,"tag":576,"props":1058,"children":1059},{"style":641},[1060],{"type":563,"value":1061},"  };\n",{"type":557,"tag":576,"props":1063,"children":1065},{"class":578,"line":1064},21,[1066],{"type":557,"tag":576,"props":1067,"children":1068},{"style":641},[1069],{"type":563,"value":1070},"}\n",{"type":557,"tag":558,"props":1072,"children":1074},{"id":1073},"可迭代的迭代器",[1075],{"type":563,"value":1073},{"type":557,"tag":565,"props":1077,"children":1079},{"className":567,"code":1078,"language":569,"meta":552,"style":552},"/**\n * 使迭代器可迭代\n * makeIterator 函数生成的迭代器并没有实现可迭代协议\n * 所以不能在 for...of 等语法中使用。\n * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n * 从新名了下函数名称 createIterator\n */\nfunction createIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n    [Symbol.iterator]: function () {\n      console.log(\"返回的迭代器:\", this);\n      return this; // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n    },\n  };\n}\n\nvar iterator = createIterator([1, 2, 3]);\nconsole.log(...iterator);\n",[1080],{"type":557,"tag":572,"props":1081,"children":1082},{"__ignoreMap":552},[1083,1091,1099,1107,1115,1123,1131,1138,1166,1189,1200,1223,1250,1305,1348,1355,1394,1443,1464,1471,1478,1485,1493,1545],{"type":557,"tag":576,"props":1084,"children":1085},{"class":578,"line":579},[1086],{"type":557,"tag":576,"props":1087,"children":1088},{"style":583},[1089],{"type":563,"value":1090},"/**\n",{"type":557,"tag":576,"props":1092,"children":1093},{"class":578,"line":589},[1094],{"type":557,"tag":576,"props":1095,"children":1096},{"style":583},[1097],{"type":563,"value":1098}," * 使迭代器可迭代\n",{"type":557,"tag":576,"props":1100,"children":1101},{"class":578,"line":598},[1102],{"type":557,"tag":576,"props":1103,"children":1104},{"style":583},[1105],{"type":563,"value":1106}," * makeIterator 函数生成的迭代器并没有实现可迭代协议\n",{"type":557,"tag":576,"props":1108,"children":1109},{"class":578,"line":607},[1110],{"type":557,"tag":576,"props":1111,"children":1112},{"style":583},[1113],{"type":563,"value":1114}," * 所以不能在 for...of 等语法中使用。\n",{"type":557,"tag":576,"props":1116,"children":1117},{"class":578,"line":616},[1118],{"type":557,"tag":576,"props":1119,"children":1120},{"style":583},[1121],{"type":563,"value":1122}," * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n",{"type":557,"tag":576,"props":1124,"children":1125},{"class":578,"line":625},[1126],{"type":557,"tag":576,"props":1127,"children":1128},{"style":583},[1129],{"type":563,"value":1130}," * 从新名了下函数名称 createIterator\n",{"type":557,"tag":576,"props":1132,"children":1133},{"class":578,"line":698},[1134],{"type":557,"tag":576,"props":1135,"children":1136},{"style":583},[1137],{"type":563,"value":622},{"type":557,"tag":576,"props":1139,"children":1140},{"class":578,"line":708},[1141,1145,1150,1154,1158,1162],{"type":557,"tag":576,"props":1142,"children":1143},{"style":629},[1144],{"type":563,"value":801},{"type":557,"tag":576,"props":1146,"children":1147},{"style":647},[1148],{"type":563,"value":1149}," createIterator",{"type":557,"tag":576,"props":1151,"children":1152},{"style":641},[1153],{"type":563,"value":810},{"type":557,"tag":576,"props":1155,"children":1156},{"style":635},[1157],{"type":563,"value":815},{"type":557,"tag":576,"props":1159,"children":1160},{"style":641},[1161],{"type":563,"value":820},{"type":557,"tag":576,"props":1163,"children":1164},{"style":641},[1165],{"type":563,"value":825},{"type":557,"tag":576,"props":1167,"children":1168},{"class":578,"line":737},[1169,1173,1177,1181,1185],{"type":557,"tag":576,"props":1170,"children":1171},{"style":629},[1172],{"type":563,"value":834},{"type":557,"tag":576,"props":1174,"children":1175},{"style":635},[1176],{"type":563,"value":839},{"type":557,"tag":576,"props":1178,"children":1179},{"style":641},[1180],{"type":563,"value":644},{"type":557,"tag":576,"props":1182,"children":1183},{"style":846},[1184],{"type":563,"value":849},{"type":557,"tag":576,"props":1186,"children":1187},{"style":641},[1188],{"type":563,"value":854},{"type":557,"tag":576,"props":1190,"children":1191},{"class":578,"line":762},[1192,1196],{"type":557,"tag":576,"props":1193,"children":1194},{"style":861},[1195],{"type":563,"value":864},{"type":557,"tag":576,"props":1197,"children":1198},{"style":641},[1199],{"type":563,"value":825},{"type":557,"tag":576,"props":1201,"children":1202},{"class":578,"line":787},[1203,1207,1211,1215,1219],{"type":557,"tag":576,"props":1204,"children":1205},{"style":647},[1206],{"type":563,"value":877},{"type":557,"tag":576,"props":1208,"children":1209},{"style":641},[1210],{"type":563,"value":882},{"type":557,"tag":576,"props":1212,"children":1213},{"style":629},[1214],{"type":563,"value":887},{"type":557,"tag":576,"props":1216,"children":1217},{"style":641},[1218],{"type":563,"value":892},{"type":557,"tag":576,"props":1220,"children":1221},{"style":641},[1222],{"type":563,"value":825},{"type":557,"tag":576,"props":1224,"children":1225},{"class":578,"line":795},[1226,1230,1234,1238,1242,1246],{"type":557,"tag":576,"props":1227,"children":1228},{"style":861},[1229],{"type":563,"value":905},{"type":557,"tag":576,"props":1231,"children":1232},{"style":635},[1233],{"type":563,"value":839},{"type":557,"tag":576,"props":1235,"children":1236},{"style":641},[1237],{"type":563,"value":914},{"type":557,"tag":576,"props":1239,"children":1240},{"style":635},[1241],{"type":563,"value":919},{"type":557,"tag":576,"props":1243,"children":1244},{"style":641},[1245],{"type":563,"value":719},{"type":557,"tag":576,"props":1247,"children":1248},{"style":926},[1249],{"type":563,"value":929},{"type":557,"tag":576,"props":1251,"children":1252},{"class":578,"line":828},[1253,1257,1261,1265,1269,1273,1277,1281,1285,1289,1293,1297,1301],{"type":557,"tag":576,"props":1254,"children":1255},{"style":629},[1256],{"type":563,"value":938},{"type":557,"tag":576,"props":1258,"children":1259},{"style":641},[1260],{"type":563,"value":943},{"type":557,"tag":576,"props":1262,"children":1263},{"style":926},[1264],{"type":563,"value":948},{"type":557,"tag":576,"props":1266,"children":1267},{"style":641},[1268],{"type":563,"value":882},{"type":557,"tag":576,"props":1270,"children":1271},{"style":635},[1272],{"type":563,"value":919},{"type":557,"tag":576,"props":1274,"children":1275},{"style":641},[1276],{"type":563,"value":961},{"type":557,"tag":576,"props":1278,"children":1279},{"style":635},[1280],{"type":563,"value":966},{"type":557,"tag":576,"props":1282,"children":1283},{"style":629},[1284],{"type":563,"value":971},{"type":557,"tag":576,"props":1286,"children":1287},{"style":641},[1288],{"type":563,"value":976},{"type":557,"tag":576,"props":1290,"children":1291},{"style":926},[1292],{"type":563,"value":981},{"type":557,"tag":576,"props":1294,"children":1295},{"style":641},[1296],{"type":563,"value":882},{"type":557,"tag":576,"props":1298,"children":1299},{"style":861},[1300],{"type":563,"value":990},{"type":557,"tag":576,"props":1302,"children":1303},{"style":641},[1304],{"type":563,"value":995},{"type":557,"tag":576,"props":1306,"children":1307},{"class":578,"line":857},[1308,1312,1316,1320,1324,1328,1332,1336,1340,1344],{"type":557,"tag":576,"props":1309,"children":1310},{"style":629},[1311],{"type":563,"value":1004},{"type":557,"tag":576,"props":1313,"children":1314},{"style":641},[1315],{"type":563,"value":943},{"type":557,"tag":576,"props":1317,"children":1318},{"style":926},[1319],{"type":563,"value":948},{"type":557,"tag":576,"props":1321,"children":1322},{"style":641},[1323],{"type":563,"value":882},{"type":557,"tag":576,"props":1325,"children":1326},{"style":629},[1327],{"type":563,"value":1021},{"type":557,"tag":576,"props":1329,"children":1330},{"style":641},[1331],{"type":563,"value":676},{"type":557,"tag":576,"props":1333,"children":1334},{"style":926},[1335],{"type":563,"value":981},{"type":557,"tag":576,"props":1337,"children":1338},{"style":641},[1339],{"type":563,"value":882},{"type":557,"tag":576,"props":1341,"children":1342},{"style":861},[1343],{"type":563,"value":1038},{"type":557,"tag":576,"props":1345,"children":1346},{"style":641},[1347],{"type":563,"value":1043},{"type":557,"tag":576,"props":1349,"children":1350},{"class":578,"line":871},[1351],{"type":557,"tag":576,"props":1352,"children":1353},{"style":641},[1354],{"type":563,"value":1052},{"type":557,"tag":576,"props":1356,"children":1357},{"class":578,"line":899},[1358,1363,1368,1372,1377,1382,1386,1390],{"type":557,"tag":576,"props":1359,"children":1360},{"style":641},[1361],{"type":563,"value":1362},"    [",{"type":557,"tag":576,"props":1364,"children":1365},{"style":635},[1366],{"type":563,"value":1367},"Symbol",{"type":557,"tag":576,"props":1369,"children":1370},{"style":641},[1371],{"type":563,"value":719},{"type":557,"tag":576,"props":1373,"children":1374},{"style":635},[1375],{"type":563,"value":1376},"iterator",{"type":557,"tag":576,"props":1378,"children":1379},{"style":641},[1380],{"type":563,"value":1381},"]:",{"type":557,"tag":576,"props":1383,"children":1384},{"style":629},[1385],{"type":563,"value":887},{"type":557,"tag":576,"props":1387,"children":1388},{"style":641},[1389],{"type":563,"value":892},{"type":557,"tag":576,"props":1391,"children":1392},{"style":641},[1393],{"type":563,"value":825},{"type":557,"tag":576,"props":1395,"children":1396},{"class":578,"line":932},[1397,1402,1406,1411,1415,1419,1424,1428,1432,1438],{"type":557,"tag":576,"props":1398,"children":1399},{"style":635},[1400],{"type":563,"value":1401},"      console",{"type":557,"tag":576,"props":1403,"children":1404},{"style":641},[1405],{"type":563,"value":719},{"type":557,"tag":576,"props":1407,"children":1408},{"style":647},[1409],{"type":563,"value":1410},"log",{"type":557,"tag":576,"props":1412,"children":1413},{"style":641},[1414],{"type":563,"value":810},{"type":557,"tag":576,"props":1416,"children":1417},{"style":658},[1418],{"type":563,"value":661},{"type":557,"tag":576,"props":1420,"children":1421},{"style":664},[1422],{"type":563,"value":1423},"返回的迭代器:",{"type":557,"tag":576,"props":1425,"children":1426},{"style":658},[1427],{"type":563,"value":661},{"type":557,"tag":576,"props":1429,"children":1430},{"style":641},[1431],{"type":563,"value":676},{"type":557,"tag":576,"props":1433,"children":1435},{"style":1434},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[1436],{"type":563,"value":1437}," this",{"type":557,"tag":576,"props":1439,"children":1440},{"style":641},[1441],{"type":563,"value":1442},");\n",{"type":557,"tag":576,"props":1444,"children":1445},{"class":578,"line":998},[1446,1450,1454,1459],{"type":557,"tag":576,"props":1447,"children":1448},{"style":861},[1449],{"type":563,"value":905},{"type":557,"tag":576,"props":1451,"children":1452},{"style":1434},[1453],{"type":563,"value":1437},{"type":557,"tag":576,"props":1455,"children":1456},{"style":641},[1457],{"type":563,"value":1458},";",{"type":557,"tag":576,"props":1460,"children":1461},{"style":583},[1462],{"type":563,"value":1463}," // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n",{"type":557,"tag":576,"props":1465,"children":1466},{"class":578,"line":1046},[1467],{"type":557,"tag":576,"props":1468,"children":1469},{"style":641},[1470],{"type":563,"value":1052},{"type":557,"tag":576,"props":1472,"children":1473},{"class":578,"line":1055},[1474],{"type":557,"tag":576,"props":1475,"children":1476},{"style":641},[1477],{"type":563,"value":1061},{"type":557,"tag":576,"props":1479,"children":1480},{"class":578,"line":1064},[1481],{"type":557,"tag":576,"props":1482,"children":1483},{"style":641},[1484],{"type":563,"value":1070},{"type":557,"tag":576,"props":1486,"children":1488},{"class":578,"line":1487},22,[1489],{"type":557,"tag":576,"props":1490,"children":1491},{"emptyLinePlaceholder":702},[1492],{"type":563,"value":705},{"type":557,"tag":576,"props":1494,"children":1496},{"class":578,"line":1495},23,[1497,1501,1506,1510,1514,1518,1523,1527,1532,1536,1541],{"type":557,"tag":576,"props":1498,"children":1499},{"style":629},[1500],{"type":563,"value":632},{"type":557,"tag":576,"props":1502,"children":1503},{"style":635},[1504],{"type":563,"value":1505}," iterator",{"type":557,"tag":576,"props":1507,"children":1508},{"style":641},[1509],{"type":563,"value":644},{"type":557,"tag":576,"props":1511,"children":1512},{"style":647},[1513],{"type":563,"value":1149},{"type":557,"tag":576,"props":1515,"children":1516},{"style":641},[1517],{"type":563,"value":655},{"type":557,"tag":576,"props":1519,"children":1520},{"style":846},[1521],{"type":563,"value":1522},"1",{"type":557,"tag":576,"props":1524,"children":1525},{"style":641},[1526],{"type":563,"value":676},{"type":557,"tag":576,"props":1528,"children":1529},{"style":846},[1530],{"type":563,"value":1531}," 2",{"type":557,"tag":576,"props":1533,"children":1534},{"style":641},[1535],{"type":563,"value":676},{"type":557,"tag":576,"props":1537,"children":1538},{"style":846},[1539],{"type":563,"value":1540}," 3",{"type":557,"tag":576,"props":1542,"children":1543},{"style":641},[1544],{"type":563,"value":695},{"type":557,"tag":576,"props":1546,"children":1548},{"class":578,"line":1547},24,[1549,1554,1558,1562,1567,1571],{"type":557,"tag":576,"props":1550,"children":1551},{"style":635},[1552],{"type":563,"value":1553},"console",{"type":557,"tag":576,"props":1555,"children":1556},{"style":641},[1557],{"type":563,"value":719},{"type":557,"tag":576,"props":1559,"children":1560},{"style":647},[1561],{"type":563,"value":1410},{"type":557,"tag":576,"props":1563,"children":1564},{"style":641},[1565],{"type":563,"value":1566},"(...",{"type":557,"tag":576,"props":1568,"children":1569},{"style":635},[1570],{"type":563,"value":1376},{"type":557,"tag":576,"props":1572,"children":1573},{"style":641},[1574],{"type":563,"value":1442},{"type":557,"tag":1576,"props":1577,"children":1578},"style",{},[1579],{"type":563,"value":1580},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":552,"searchDepth":616,"depth":616,"links":1582},[1583,1584],{"id":560,"depth":589,"text":560},{"id":1073,"depth":589,"text":1073},"markdown","content:3.code-assessment:1.source:1.native-api:8.iterator.md","content","3.code-assessment/1.source/1.native-api/8.iterator.md","md",[1591,1593],{"_path":333,"title":332,"description":1592},"JSON.stringify() 方法将一个 js 对象或值转换为 json 字符串，如果指定了一个 replacer 函数，则可以选择性地替换值，或者指定的 replacer 是数组，则可选择性地仅包含数组指定的属性。",{"_path":339,"title":338,"description":552},1715007657355]