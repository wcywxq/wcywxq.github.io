[{"data":1,"prerenderedAt":1548},["Reactive",2],{"navigation":3,"/code-assessment/source/native-api/iterator":503,"/code-assessment/source/native-api/iterator-surround":1544},[4,269,298,471,479,488],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":470},"代码考核","/code-assessment",[302,370,463],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":371,"_path":372,"children":373},"业务场景","/code-assessment/scene",[374,399,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460],{"title":375,"_path":376,"children":377},"Promise","/code-assessment/scene/promise",[378,381,384,387,390,393,396],{"title":379,"_path":380},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":382,"_path":383},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":385,"_path":386},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":388,"_path":389},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":391,"_path":392},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":394,"_path":395},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":397,"_path":398},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":400,"_path":401,"children":402},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[403,406],{"title":404,"_path":405},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":407,"_path":408},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":410,"_path":411},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":413,"_path":414},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":416,"_path":417},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":419,"_path":420},"倒计时","/code-assessment/scene/countdown",{"title":422,"_path":423},"日期格式化","/code-assessment/scene/date-format",{"title":425,"_path":426},"实现前端路由","/code-assessment/scene/frontend-route",{"title":428,"_path":429},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":431,"_path":432},"lodash.get","/code-assessment/scene/lodash-get",{"title":434,"_path":435},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":437,"_path":438},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":440,"_path":441},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":443,"_path":444},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":446,"_path":447},"随机数","/code-assessment/scene/random-number",{"title":449,"_path":450},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":452,"_path":453},"sku 算法实现","/code-assessment/scene/sku",{"title":455,"_path":456},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":458,"_path":459},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":461,"_path":462},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":464,"_path":465,"children":466},"Ts 类型挑战","/code-assessment/type-challeges",[467],{"title":468,"_path":469},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":472,"_path":473,"children":474,"icon":478},"项目","/project",[475],{"title":476,"_path":477},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":480,"_path":481,"children":482,"icon":487},"设计模式","/design-mode",[483,484],{"title":480,"_path":481},{"title":485,"_path":486},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":489,"_path":490,"children":491,"icon":502},"后端语言","/backend-languages",[492],{"title":493,"_path":494,"children":495},"Python","/backend-languages/python",[496,499],{"title":497,"_path":498},"基础","/backend-languages/python/base",{"title":500,"_path":501},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":330,"_dir":504,"_draft":505,"_partial":505,"_locale":506,"title":329,"description":506,"body":507,"_type":1539,"_id":1540,"_source":1541,"_file":1542,"_extension":1543},"native-api",false,"",{"type":508,"children":509,"toc":1535},"root",[510,518,1025,1030,1529],{"type":511,"tag":512,"props":513,"children":515},"element","h2",{"id":514},"实现迭代器函数",[516],{"type":517,"value":514},"text",{"type":511,"tag":519,"props":520,"children":524},"pre",{"className":521,"code":522,"language":523,"meta":506,"style":506},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/*\n * 这是一个手写的迭代器(Iterator)\n * 满足迭代器协议的对象。\n * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n */\nvar it = makeIterator([\"a\", \"b\"]);\n\nit.next(); // { value: \"a\", done: false }\nit.next(); // { value: \"b\", done: false }\nit.next(); // { value: undefined, done: true }\n\nfunction makeIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n  };\n}\n","js",[525],{"type":511,"tag":526,"props":527,"children":528},"code",{"__ignoreMap":506},[529,541,550,559,568,577,650,660,689,714,739,747,780,809,823,851,884,950,998,1007,1016],{"type":511,"tag":530,"props":531,"children":534},"span",{"class":532,"line":533},"line",1,[535],{"type":511,"tag":530,"props":536,"children":538},{"style":537},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[539],{"type":517,"value":540},"/*\n",{"type":511,"tag":530,"props":542,"children":544},{"class":532,"line":543},2,[545],{"type":511,"tag":530,"props":546,"children":547},{"style":537},[548],{"type":517,"value":549}," * 这是一个手写的迭代器(Iterator)\n",{"type":511,"tag":530,"props":551,"children":553},{"class":532,"line":552},3,[554],{"type":511,"tag":530,"props":555,"children":556},{"style":537},[557],{"type":517,"value":558}," * 满足迭代器协议的对象。\n",{"type":511,"tag":530,"props":560,"children":562},{"class":532,"line":561},4,[563],{"type":511,"tag":530,"props":564,"children":565},{"style":537},[566],{"type":517,"value":567}," * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n",{"type":511,"tag":530,"props":569,"children":571},{"class":532,"line":570},5,[572],{"type":511,"tag":530,"props":573,"children":574},{"style":537},[575],{"type":517,"value":576}," */\n",{"type":511,"tag":530,"props":578,"children":580},{"class":532,"line":579},6,[581,587,593,599,605,610,616,622,626,631,636,641,645],{"type":511,"tag":530,"props":582,"children":584},{"style":583},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[585],{"type":517,"value":586},"var",{"type":511,"tag":530,"props":588,"children":590},{"style":589},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[591],{"type":517,"value":592}," it",{"type":511,"tag":530,"props":594,"children":596},{"style":595},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[597],{"type":517,"value":598}," =",{"type":511,"tag":530,"props":600,"children":602},{"style":601},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[603],{"type":517,"value":604}," makeIterator",{"type":511,"tag":530,"props":606,"children":607},{"style":595},[608],{"type":517,"value":609},"([",{"type":511,"tag":530,"props":611,"children":613},{"style":612},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[614],{"type":517,"value":615},"\"",{"type":511,"tag":530,"props":617,"children":619},{"style":618},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[620],{"type":517,"value":621},"a",{"type":511,"tag":530,"props":623,"children":624},{"style":612},[625],{"type":517,"value":615},{"type":511,"tag":530,"props":627,"children":628},{"style":595},[629],{"type":517,"value":630},",",{"type":511,"tag":530,"props":632,"children":633},{"style":612},[634],{"type":517,"value":635}," \"",{"type":511,"tag":530,"props":637,"children":638},{"style":618},[639],{"type":517,"value":640},"b",{"type":511,"tag":530,"props":642,"children":643},{"style":612},[644],{"type":517,"value":615},{"type":511,"tag":530,"props":646,"children":647},{"style":595},[648],{"type":517,"value":649},"]);\n",{"type":511,"tag":530,"props":651,"children":653},{"class":532,"line":652},7,[654],{"type":511,"tag":530,"props":655,"children":657},{"emptyLinePlaceholder":656},true,[658],{"type":517,"value":659},"\n",{"type":511,"tag":530,"props":661,"children":663},{"class":532,"line":662},8,[664,669,674,679,684],{"type":511,"tag":530,"props":665,"children":666},{"style":589},[667],{"type":517,"value":668},"it",{"type":511,"tag":530,"props":670,"children":671},{"style":595},[672],{"type":517,"value":673},".",{"type":511,"tag":530,"props":675,"children":676},{"style":601},[677],{"type":517,"value":678},"next",{"type":511,"tag":530,"props":680,"children":681},{"style":595},[682],{"type":517,"value":683},"();",{"type":511,"tag":530,"props":685,"children":686},{"style":537},[687],{"type":517,"value":688}," // { value: \"a\", done: false }\n",{"type":511,"tag":530,"props":690,"children":692},{"class":532,"line":691},9,[693,697,701,705,709],{"type":511,"tag":530,"props":694,"children":695},{"style":589},[696],{"type":517,"value":668},{"type":511,"tag":530,"props":698,"children":699},{"style":595},[700],{"type":517,"value":673},{"type":511,"tag":530,"props":702,"children":703},{"style":601},[704],{"type":517,"value":678},{"type":511,"tag":530,"props":706,"children":707},{"style":595},[708],{"type":517,"value":683},{"type":511,"tag":530,"props":710,"children":711},{"style":537},[712],{"type":517,"value":713}," // { value: \"b\", done: false }\n",{"type":511,"tag":530,"props":715,"children":717},{"class":532,"line":716},10,[718,722,726,730,734],{"type":511,"tag":530,"props":719,"children":720},{"style":589},[721],{"type":517,"value":668},{"type":511,"tag":530,"props":723,"children":724},{"style":595},[725],{"type":517,"value":673},{"type":511,"tag":530,"props":727,"children":728},{"style":601},[729],{"type":517,"value":678},{"type":511,"tag":530,"props":731,"children":732},{"style":595},[733],{"type":517,"value":683},{"type":511,"tag":530,"props":735,"children":736},{"style":537},[737],{"type":517,"value":738}," // { value: undefined, done: true }\n",{"type":511,"tag":530,"props":740,"children":742},{"class":532,"line":741},11,[743],{"type":511,"tag":530,"props":744,"children":745},{"emptyLinePlaceholder":656},[746],{"type":517,"value":659},{"type":511,"tag":530,"props":748,"children":750},{"class":532,"line":749},12,[751,756,760,765,770,775],{"type":511,"tag":530,"props":752,"children":753},{"style":583},[754],{"type":517,"value":755},"function",{"type":511,"tag":530,"props":757,"children":758},{"style":601},[759],{"type":517,"value":604},{"type":511,"tag":530,"props":761,"children":762},{"style":595},[763],{"type":517,"value":764},"(",{"type":511,"tag":530,"props":766,"children":767},{"style":589},[768],{"type":517,"value":769},"array",{"type":511,"tag":530,"props":771,"children":772},{"style":595},[773],{"type":517,"value":774},")",{"type":511,"tag":530,"props":776,"children":777},{"style":595},[778],{"type":517,"value":779}," {\n",{"type":511,"tag":530,"props":781,"children":783},{"class":532,"line":782},13,[784,789,794,798,804],{"type":511,"tag":530,"props":785,"children":786},{"style":583},[787],{"type":517,"value":788},"  var",{"type":511,"tag":530,"props":790,"children":791},{"style":589},[792],{"type":517,"value":793}," nextIndex",{"type":511,"tag":530,"props":795,"children":796},{"style":595},[797],{"type":517,"value":598},{"type":511,"tag":530,"props":799,"children":801},{"style":800},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[802],{"type":517,"value":803}," 0",{"type":511,"tag":530,"props":805,"children":806},{"style":595},[807],{"type":517,"value":808},";\n",{"type":511,"tag":530,"props":810,"children":812},{"class":532,"line":811},14,[813,819],{"type":511,"tag":530,"props":814,"children":816},{"style":815},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[817],{"type":517,"value":818},"  return",{"type":511,"tag":530,"props":820,"children":821},{"style":595},[822],{"type":517,"value":779},{"type":511,"tag":530,"props":824,"children":826},{"class":532,"line":825},15,[827,832,837,842,847],{"type":511,"tag":530,"props":828,"children":829},{"style":601},[830],{"type":517,"value":831},"    next",{"type":511,"tag":530,"props":833,"children":834},{"style":595},[835],{"type":517,"value":836},":",{"type":511,"tag":530,"props":838,"children":839},{"style":583},[840],{"type":517,"value":841}," function",{"type":511,"tag":530,"props":843,"children":844},{"style":595},[845],{"type":517,"value":846}," ()",{"type":511,"tag":530,"props":848,"children":849},{"style":595},[850],{"type":517,"value":779},{"type":511,"tag":530,"props":852,"children":854},{"class":532,"line":853},16,[855,860,864,869,874,878],{"type":511,"tag":530,"props":856,"children":857},{"style":815},[858],{"type":517,"value":859},"      return",{"type":511,"tag":530,"props":861,"children":862},{"style":589},[863],{"type":517,"value":793},{"type":511,"tag":530,"props":865,"children":866},{"style":595},[867],{"type":517,"value":868}," \u003C",{"type":511,"tag":530,"props":870,"children":871},{"style":589},[872],{"type":517,"value":873}," array",{"type":511,"tag":530,"props":875,"children":876},{"style":595},[877],{"type":517,"value":673},{"type":511,"tag":530,"props":879,"children":881},{"style":880},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[882],{"type":517,"value":883},"length\n",{"type":511,"tag":530,"props":885,"children":887},{"class":532,"line":886},17,[888,893,898,903,907,911,916,921,926,931,936,940,945],{"type":511,"tag":530,"props":889,"children":890},{"style":583},[891],{"type":517,"value":892},"        ?",{"type":511,"tag":530,"props":894,"children":895},{"style":595},[896],{"type":517,"value":897}," {",{"type":511,"tag":530,"props":899,"children":900},{"style":880},[901],{"type":517,"value":902}," value",{"type":511,"tag":530,"props":904,"children":905},{"style":595},[906],{"type":517,"value":836},{"type":511,"tag":530,"props":908,"children":909},{"style":589},[910],{"type":517,"value":873},{"type":511,"tag":530,"props":912,"children":913},{"style":595},[914],{"type":517,"value":915},"[",{"type":511,"tag":530,"props":917,"children":918},{"style":589},[919],{"type":517,"value":920},"nextIndex",{"type":511,"tag":530,"props":922,"children":923},{"style":583},[924],{"type":517,"value":925},"++",{"type":511,"tag":530,"props":927,"children":928},{"style":595},[929],{"type":517,"value":930},"],",{"type":511,"tag":530,"props":932,"children":933},{"style":880},[934],{"type":517,"value":935}," done",{"type":511,"tag":530,"props":937,"children":938},{"style":595},[939],{"type":517,"value":836},{"type":511,"tag":530,"props":941,"children":942},{"style":815},[943],{"type":517,"value":944}," false",{"type":511,"tag":530,"props":946,"children":947},{"style":595},[948],{"type":517,"value":949}," }\n",{"type":511,"tag":530,"props":951,"children":953},{"class":532,"line":952},18,[954,959,963,967,971,976,980,984,988,993],{"type":511,"tag":530,"props":955,"children":956},{"style":583},[957],{"type":517,"value":958},"        :",{"type":511,"tag":530,"props":960,"children":961},{"style":595},[962],{"type":517,"value":897},{"type":511,"tag":530,"props":964,"children":965},{"style":880},[966],{"type":517,"value":902},{"type":511,"tag":530,"props":968,"children":969},{"style":595},[970],{"type":517,"value":836},{"type":511,"tag":530,"props":972,"children":973},{"style":583},[974],{"type":517,"value":975}," undefined",{"type":511,"tag":530,"props":977,"children":978},{"style":595},[979],{"type":517,"value":630},{"type":511,"tag":530,"props":981,"children":982},{"style":880},[983],{"type":517,"value":935},{"type":511,"tag":530,"props":985,"children":986},{"style":595},[987],{"type":517,"value":836},{"type":511,"tag":530,"props":989,"children":990},{"style":815},[991],{"type":517,"value":992}," true",{"type":511,"tag":530,"props":994,"children":995},{"style":595},[996],{"type":517,"value":997}," };\n",{"type":511,"tag":530,"props":999,"children":1001},{"class":532,"line":1000},19,[1002],{"type":511,"tag":530,"props":1003,"children":1004},{"style":595},[1005],{"type":517,"value":1006},"    },\n",{"type":511,"tag":530,"props":1008,"children":1010},{"class":532,"line":1009},20,[1011],{"type":511,"tag":530,"props":1012,"children":1013},{"style":595},[1014],{"type":517,"value":1015},"  };\n",{"type":511,"tag":530,"props":1017,"children":1019},{"class":532,"line":1018},21,[1020],{"type":511,"tag":530,"props":1021,"children":1022},{"style":595},[1023],{"type":517,"value":1024},"}\n",{"type":511,"tag":512,"props":1026,"children":1028},{"id":1027},"可迭代的迭代器",[1029],{"type":517,"value":1027},{"type":511,"tag":519,"props":1031,"children":1033},{"className":521,"code":1032,"language":523,"meta":506,"style":506},"/**\n * 使迭代器可迭代\n * makeIterator 函数生成的迭代器并没有实现可迭代协议\n * 所以不能在 for...of 等语法中使用。\n * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n * 从新名了下函数名称 createIterator\n */\nfunction createIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n    [Symbol.iterator]: function () {\n      console.log(\"返回的迭代器:\", this);\n      return this; // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n    },\n  };\n}\n\nvar iterator = createIterator([1, 2, 3]);\nconsole.log(...iterator);\n",[1034],{"type":511,"tag":526,"props":1035,"children":1036},{"__ignoreMap":506},[1037,1045,1053,1061,1069,1077,1085,1092,1120,1143,1154,1177,1204,1259,1302,1309,1348,1397,1418,1425,1432,1439,1447,1499],{"type":511,"tag":530,"props":1038,"children":1039},{"class":532,"line":533},[1040],{"type":511,"tag":530,"props":1041,"children":1042},{"style":537},[1043],{"type":517,"value":1044},"/**\n",{"type":511,"tag":530,"props":1046,"children":1047},{"class":532,"line":543},[1048],{"type":511,"tag":530,"props":1049,"children":1050},{"style":537},[1051],{"type":517,"value":1052}," * 使迭代器可迭代\n",{"type":511,"tag":530,"props":1054,"children":1055},{"class":532,"line":552},[1056],{"type":511,"tag":530,"props":1057,"children":1058},{"style":537},[1059],{"type":517,"value":1060}," * makeIterator 函数生成的迭代器并没有实现可迭代协议\n",{"type":511,"tag":530,"props":1062,"children":1063},{"class":532,"line":561},[1064],{"type":511,"tag":530,"props":1065,"children":1066},{"style":537},[1067],{"type":517,"value":1068}," * 所以不能在 for...of 等语法中使用。\n",{"type":511,"tag":530,"props":1070,"children":1071},{"class":532,"line":570},[1072],{"type":511,"tag":530,"props":1073,"children":1074},{"style":537},[1075],{"type":517,"value":1076}," * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n",{"type":511,"tag":530,"props":1078,"children":1079},{"class":532,"line":579},[1080],{"type":511,"tag":530,"props":1081,"children":1082},{"style":537},[1083],{"type":517,"value":1084}," * 从新名了下函数名称 createIterator\n",{"type":511,"tag":530,"props":1086,"children":1087},{"class":532,"line":652},[1088],{"type":511,"tag":530,"props":1089,"children":1090},{"style":537},[1091],{"type":517,"value":576},{"type":511,"tag":530,"props":1093,"children":1094},{"class":532,"line":662},[1095,1099,1104,1108,1112,1116],{"type":511,"tag":530,"props":1096,"children":1097},{"style":583},[1098],{"type":517,"value":755},{"type":511,"tag":530,"props":1100,"children":1101},{"style":601},[1102],{"type":517,"value":1103}," createIterator",{"type":511,"tag":530,"props":1105,"children":1106},{"style":595},[1107],{"type":517,"value":764},{"type":511,"tag":530,"props":1109,"children":1110},{"style":589},[1111],{"type":517,"value":769},{"type":511,"tag":530,"props":1113,"children":1114},{"style":595},[1115],{"type":517,"value":774},{"type":511,"tag":530,"props":1117,"children":1118},{"style":595},[1119],{"type":517,"value":779},{"type":511,"tag":530,"props":1121,"children":1122},{"class":532,"line":691},[1123,1127,1131,1135,1139],{"type":511,"tag":530,"props":1124,"children":1125},{"style":583},[1126],{"type":517,"value":788},{"type":511,"tag":530,"props":1128,"children":1129},{"style":589},[1130],{"type":517,"value":793},{"type":511,"tag":530,"props":1132,"children":1133},{"style":595},[1134],{"type":517,"value":598},{"type":511,"tag":530,"props":1136,"children":1137},{"style":800},[1138],{"type":517,"value":803},{"type":511,"tag":530,"props":1140,"children":1141},{"style":595},[1142],{"type":517,"value":808},{"type":511,"tag":530,"props":1144,"children":1145},{"class":532,"line":716},[1146,1150],{"type":511,"tag":530,"props":1147,"children":1148},{"style":815},[1149],{"type":517,"value":818},{"type":511,"tag":530,"props":1151,"children":1152},{"style":595},[1153],{"type":517,"value":779},{"type":511,"tag":530,"props":1155,"children":1156},{"class":532,"line":741},[1157,1161,1165,1169,1173],{"type":511,"tag":530,"props":1158,"children":1159},{"style":601},[1160],{"type":517,"value":831},{"type":511,"tag":530,"props":1162,"children":1163},{"style":595},[1164],{"type":517,"value":836},{"type":511,"tag":530,"props":1166,"children":1167},{"style":583},[1168],{"type":517,"value":841},{"type":511,"tag":530,"props":1170,"children":1171},{"style":595},[1172],{"type":517,"value":846},{"type":511,"tag":530,"props":1174,"children":1175},{"style":595},[1176],{"type":517,"value":779},{"type":511,"tag":530,"props":1178,"children":1179},{"class":532,"line":749},[1180,1184,1188,1192,1196,1200],{"type":511,"tag":530,"props":1181,"children":1182},{"style":815},[1183],{"type":517,"value":859},{"type":511,"tag":530,"props":1185,"children":1186},{"style":589},[1187],{"type":517,"value":793},{"type":511,"tag":530,"props":1189,"children":1190},{"style":595},[1191],{"type":517,"value":868},{"type":511,"tag":530,"props":1193,"children":1194},{"style":589},[1195],{"type":517,"value":873},{"type":511,"tag":530,"props":1197,"children":1198},{"style":595},[1199],{"type":517,"value":673},{"type":511,"tag":530,"props":1201,"children":1202},{"style":880},[1203],{"type":517,"value":883},{"type":511,"tag":530,"props":1205,"children":1206},{"class":532,"line":782},[1207,1211,1215,1219,1223,1227,1231,1235,1239,1243,1247,1251,1255],{"type":511,"tag":530,"props":1208,"children":1209},{"style":583},[1210],{"type":517,"value":892},{"type":511,"tag":530,"props":1212,"children":1213},{"style":595},[1214],{"type":517,"value":897},{"type":511,"tag":530,"props":1216,"children":1217},{"style":880},[1218],{"type":517,"value":902},{"type":511,"tag":530,"props":1220,"children":1221},{"style":595},[1222],{"type":517,"value":836},{"type":511,"tag":530,"props":1224,"children":1225},{"style":589},[1226],{"type":517,"value":873},{"type":511,"tag":530,"props":1228,"children":1229},{"style":595},[1230],{"type":517,"value":915},{"type":511,"tag":530,"props":1232,"children":1233},{"style":589},[1234],{"type":517,"value":920},{"type":511,"tag":530,"props":1236,"children":1237},{"style":583},[1238],{"type":517,"value":925},{"type":511,"tag":530,"props":1240,"children":1241},{"style":595},[1242],{"type":517,"value":930},{"type":511,"tag":530,"props":1244,"children":1245},{"style":880},[1246],{"type":517,"value":935},{"type":511,"tag":530,"props":1248,"children":1249},{"style":595},[1250],{"type":517,"value":836},{"type":511,"tag":530,"props":1252,"children":1253},{"style":815},[1254],{"type":517,"value":944},{"type":511,"tag":530,"props":1256,"children":1257},{"style":595},[1258],{"type":517,"value":949},{"type":511,"tag":530,"props":1260,"children":1261},{"class":532,"line":811},[1262,1266,1270,1274,1278,1282,1286,1290,1294,1298],{"type":511,"tag":530,"props":1263,"children":1264},{"style":583},[1265],{"type":517,"value":958},{"type":511,"tag":530,"props":1267,"children":1268},{"style":595},[1269],{"type":517,"value":897},{"type":511,"tag":530,"props":1271,"children":1272},{"style":880},[1273],{"type":517,"value":902},{"type":511,"tag":530,"props":1275,"children":1276},{"style":595},[1277],{"type":517,"value":836},{"type":511,"tag":530,"props":1279,"children":1280},{"style":583},[1281],{"type":517,"value":975},{"type":511,"tag":530,"props":1283,"children":1284},{"style":595},[1285],{"type":517,"value":630},{"type":511,"tag":530,"props":1287,"children":1288},{"style":880},[1289],{"type":517,"value":935},{"type":511,"tag":530,"props":1291,"children":1292},{"style":595},[1293],{"type":517,"value":836},{"type":511,"tag":530,"props":1295,"children":1296},{"style":815},[1297],{"type":517,"value":992},{"type":511,"tag":530,"props":1299,"children":1300},{"style":595},[1301],{"type":517,"value":997},{"type":511,"tag":530,"props":1303,"children":1304},{"class":532,"line":825},[1305],{"type":511,"tag":530,"props":1306,"children":1307},{"style":595},[1308],{"type":517,"value":1006},{"type":511,"tag":530,"props":1310,"children":1311},{"class":532,"line":853},[1312,1317,1322,1326,1331,1336,1340,1344],{"type":511,"tag":530,"props":1313,"children":1314},{"style":595},[1315],{"type":517,"value":1316},"    [",{"type":511,"tag":530,"props":1318,"children":1319},{"style":589},[1320],{"type":517,"value":1321},"Symbol",{"type":511,"tag":530,"props":1323,"children":1324},{"style":595},[1325],{"type":517,"value":673},{"type":511,"tag":530,"props":1327,"children":1328},{"style":589},[1329],{"type":517,"value":1330},"iterator",{"type":511,"tag":530,"props":1332,"children":1333},{"style":595},[1334],{"type":517,"value":1335},"]:",{"type":511,"tag":530,"props":1337,"children":1338},{"style":583},[1339],{"type":517,"value":841},{"type":511,"tag":530,"props":1341,"children":1342},{"style":595},[1343],{"type":517,"value":846},{"type":511,"tag":530,"props":1345,"children":1346},{"style":595},[1347],{"type":517,"value":779},{"type":511,"tag":530,"props":1349,"children":1350},{"class":532,"line":886},[1351,1356,1360,1365,1369,1373,1378,1382,1386,1392],{"type":511,"tag":530,"props":1352,"children":1353},{"style":589},[1354],{"type":517,"value":1355},"      console",{"type":511,"tag":530,"props":1357,"children":1358},{"style":595},[1359],{"type":517,"value":673},{"type":511,"tag":530,"props":1361,"children":1362},{"style":601},[1363],{"type":517,"value":1364},"log",{"type":511,"tag":530,"props":1366,"children":1367},{"style":595},[1368],{"type":517,"value":764},{"type":511,"tag":530,"props":1370,"children":1371},{"style":612},[1372],{"type":517,"value":615},{"type":511,"tag":530,"props":1374,"children":1375},{"style":618},[1376],{"type":517,"value":1377},"返回的迭代器:",{"type":511,"tag":530,"props":1379,"children":1380},{"style":612},[1381],{"type":517,"value":615},{"type":511,"tag":530,"props":1383,"children":1384},{"style":595},[1385],{"type":517,"value":630},{"type":511,"tag":530,"props":1387,"children":1389},{"style":1388},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[1390],{"type":517,"value":1391}," this",{"type":511,"tag":530,"props":1393,"children":1394},{"style":595},[1395],{"type":517,"value":1396},");\n",{"type":511,"tag":530,"props":1398,"children":1399},{"class":532,"line":952},[1400,1404,1408,1413],{"type":511,"tag":530,"props":1401,"children":1402},{"style":815},[1403],{"type":517,"value":859},{"type":511,"tag":530,"props":1405,"children":1406},{"style":1388},[1407],{"type":517,"value":1391},{"type":511,"tag":530,"props":1409,"children":1410},{"style":595},[1411],{"type":517,"value":1412},";",{"type":511,"tag":530,"props":1414,"children":1415},{"style":537},[1416],{"type":517,"value":1417}," // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n",{"type":511,"tag":530,"props":1419,"children":1420},{"class":532,"line":1000},[1421],{"type":511,"tag":530,"props":1422,"children":1423},{"style":595},[1424],{"type":517,"value":1006},{"type":511,"tag":530,"props":1426,"children":1427},{"class":532,"line":1009},[1428],{"type":511,"tag":530,"props":1429,"children":1430},{"style":595},[1431],{"type":517,"value":1015},{"type":511,"tag":530,"props":1433,"children":1434},{"class":532,"line":1018},[1435],{"type":511,"tag":530,"props":1436,"children":1437},{"style":595},[1438],{"type":517,"value":1024},{"type":511,"tag":530,"props":1440,"children":1442},{"class":532,"line":1441},22,[1443],{"type":511,"tag":530,"props":1444,"children":1445},{"emptyLinePlaceholder":656},[1446],{"type":517,"value":659},{"type":511,"tag":530,"props":1448,"children":1450},{"class":532,"line":1449},23,[1451,1455,1460,1464,1468,1472,1477,1481,1486,1490,1495],{"type":511,"tag":530,"props":1452,"children":1453},{"style":583},[1454],{"type":517,"value":586},{"type":511,"tag":530,"props":1456,"children":1457},{"style":589},[1458],{"type":517,"value":1459}," iterator",{"type":511,"tag":530,"props":1461,"children":1462},{"style":595},[1463],{"type":517,"value":598},{"type":511,"tag":530,"props":1465,"children":1466},{"style":601},[1467],{"type":517,"value":1103},{"type":511,"tag":530,"props":1469,"children":1470},{"style":595},[1471],{"type":517,"value":609},{"type":511,"tag":530,"props":1473,"children":1474},{"style":800},[1475],{"type":517,"value":1476},"1",{"type":511,"tag":530,"props":1478,"children":1479},{"style":595},[1480],{"type":517,"value":630},{"type":511,"tag":530,"props":1482,"children":1483},{"style":800},[1484],{"type":517,"value":1485}," 2",{"type":511,"tag":530,"props":1487,"children":1488},{"style":595},[1489],{"type":517,"value":630},{"type":511,"tag":530,"props":1491,"children":1492},{"style":800},[1493],{"type":517,"value":1494}," 3",{"type":511,"tag":530,"props":1496,"children":1497},{"style":595},[1498],{"type":517,"value":649},{"type":511,"tag":530,"props":1500,"children":1502},{"class":532,"line":1501},24,[1503,1508,1512,1516,1521,1525],{"type":511,"tag":530,"props":1504,"children":1505},{"style":589},[1506],{"type":517,"value":1507},"console",{"type":511,"tag":530,"props":1509,"children":1510},{"style":595},[1511],{"type":517,"value":673},{"type":511,"tag":530,"props":1513,"children":1514},{"style":601},[1515],{"type":517,"value":1364},{"type":511,"tag":530,"props":1517,"children":1518},{"style":595},[1519],{"type":517,"value":1520},"(...",{"type":511,"tag":530,"props":1522,"children":1523},{"style":589},[1524],{"type":517,"value":1330},{"type":511,"tag":530,"props":1526,"children":1527},{"style":595},[1528],{"type":517,"value":1396},{"type":511,"tag":1530,"props":1531,"children":1532},"style",{},[1533],{"type":517,"value":1534},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":506,"searchDepth":570,"depth":570,"links":1536},[1537,1538],{"id":514,"depth":543,"text":514},{"id":1027,"depth":543,"text":1027},"markdown","content:3.code-assessment:1.source:1.native-api:7.iterator.md","content","3.code-assessment/1.source/1.native-api/7.iterator.md","md",[1545,1547],{"_path":327,"title":326,"description":1546},"JSON.stringify() 方法将一个 js 对象或值转换为 json 字符串，如果指定了一个 replacer 函数，则可以选择性地替换值，或者指定的 replacer 是数组，则可选择性地仅包含数组指定的属性。",{"_path":337,"title":336,"description":506},1714056098305]