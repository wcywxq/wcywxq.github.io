[{"data":1,"prerenderedAt":1591},["Reactive",2],{"navigation":3,"/code-assessment/source/native-api/iterator":546,"/code-assessment/source/native-api/iterator-surround":1587},[4,269,298,514,522,531],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":513},"代码考核","/code-assessment",[302,404,506],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"整数分割","/code-assessment/scene/split-number",{"title":498,"_path":499},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":501,"_path":502},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":504,"_path":505},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":507,"_path":508,"children":509},"Ts 类型挑战","/code-assessment/type-challeges",[510],{"title":511,"_path":512},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":515,"_path":516,"children":517,"icon":521},"项目","/project",[518],{"title":519,"_path":520},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":523,"_path":524,"children":525,"icon":530},"设计模式","/design-mode",[526,527],{"title":523,"_path":524},{"title":528,"_path":529},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":532,"_path":533,"children":534,"icon":545},"后端语言","/backend-languages",[535],{"title":536,"_path":537,"children":538},"Python","/backend-languages/python",[539,542],{"title":540,"_path":541},"基础","/backend-languages/python/base",{"title":543,"_path":544},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":333,"_dir":547,"_draft":548,"_partial":548,"_locale":549,"title":332,"description":549,"body":550,"_type":1582,"_id":1583,"_source":1584,"_file":1585,"_extension":1586},"native-api",false,"",{"type":551,"children":552,"toc":1578},"root",[553,561,1068,1073,1572],{"type":554,"tag":555,"props":556,"children":558},"element","h2",{"id":557},"实现迭代器函数",[559],{"type":560,"value":557},"text",{"type":554,"tag":562,"props":563,"children":567},"pre",{"className":564,"code":565,"language":566,"meta":549,"style":549},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/*\n * 这是一个手写的迭代器(Iterator)\n * 满足迭代器协议的对象。\n * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n */\nvar it = makeIterator([\"a\", \"b\"]);\n\nit.next(); // { value: \"a\", done: false }\nit.next(); // { value: \"b\", done: false }\nit.next(); // { value: undefined, done: true }\n\nfunction makeIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n  };\n}\n","js",[568],{"type":554,"tag":569,"props":570,"children":571},"code",{"__ignoreMap":549},[572,584,593,602,611,620,693,703,732,757,782,790,823,852,866,894,927,993,1041,1050,1059],{"type":554,"tag":573,"props":574,"children":577},"span",{"class":575,"line":576},"line",1,[578],{"type":554,"tag":573,"props":579,"children":581},{"style":580},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[582],{"type":560,"value":583},"/*\n",{"type":554,"tag":573,"props":585,"children":587},{"class":575,"line":586},2,[588],{"type":554,"tag":573,"props":589,"children":590},{"style":580},[591],{"type":560,"value":592}," * 这是一个手写的迭代器(Iterator)\n",{"type":554,"tag":573,"props":594,"children":596},{"class":575,"line":595},3,[597],{"type":554,"tag":573,"props":598,"children":599},{"style":580},[600],{"type":560,"value":601}," * 满足迭代器协议的对象。\n",{"type":554,"tag":573,"props":603,"children":605},{"class":575,"line":604},4,[606],{"type":554,"tag":573,"props":607,"children":608},{"style":580},[609],{"type":560,"value":610}," * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n",{"type":554,"tag":573,"props":612,"children":614},{"class":575,"line":613},5,[615],{"type":554,"tag":573,"props":616,"children":617},{"style":580},[618],{"type":560,"value":619}," */\n",{"type":554,"tag":573,"props":621,"children":623},{"class":575,"line":622},6,[624,630,636,642,648,653,659,665,669,674,679,684,688],{"type":554,"tag":573,"props":625,"children":627},{"style":626},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[628],{"type":560,"value":629},"var",{"type":554,"tag":573,"props":631,"children":633},{"style":632},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[634],{"type":560,"value":635}," it",{"type":554,"tag":573,"props":637,"children":639},{"style":638},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[640],{"type":560,"value":641}," =",{"type":554,"tag":573,"props":643,"children":645},{"style":644},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[646],{"type":560,"value":647}," makeIterator",{"type":554,"tag":573,"props":649,"children":650},{"style":638},[651],{"type":560,"value":652},"([",{"type":554,"tag":573,"props":654,"children":656},{"style":655},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[657],{"type":560,"value":658},"\"",{"type":554,"tag":573,"props":660,"children":662},{"style":661},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[663],{"type":560,"value":664},"a",{"type":554,"tag":573,"props":666,"children":667},{"style":655},[668],{"type":560,"value":658},{"type":554,"tag":573,"props":670,"children":671},{"style":638},[672],{"type":560,"value":673},",",{"type":554,"tag":573,"props":675,"children":676},{"style":655},[677],{"type":560,"value":678}," \"",{"type":554,"tag":573,"props":680,"children":681},{"style":661},[682],{"type":560,"value":683},"b",{"type":554,"tag":573,"props":685,"children":686},{"style":655},[687],{"type":560,"value":658},{"type":554,"tag":573,"props":689,"children":690},{"style":638},[691],{"type":560,"value":692},"]);\n",{"type":554,"tag":573,"props":694,"children":696},{"class":575,"line":695},7,[697],{"type":554,"tag":573,"props":698,"children":700},{"emptyLinePlaceholder":699},true,[701],{"type":560,"value":702},"\n",{"type":554,"tag":573,"props":704,"children":706},{"class":575,"line":705},8,[707,712,717,722,727],{"type":554,"tag":573,"props":708,"children":709},{"style":632},[710],{"type":560,"value":711},"it",{"type":554,"tag":573,"props":713,"children":714},{"style":638},[715],{"type":560,"value":716},".",{"type":554,"tag":573,"props":718,"children":719},{"style":644},[720],{"type":560,"value":721},"next",{"type":554,"tag":573,"props":723,"children":724},{"style":638},[725],{"type":560,"value":726},"();",{"type":554,"tag":573,"props":728,"children":729},{"style":580},[730],{"type":560,"value":731}," // { value: \"a\", done: false }\n",{"type":554,"tag":573,"props":733,"children":735},{"class":575,"line":734},9,[736,740,744,748,752],{"type":554,"tag":573,"props":737,"children":738},{"style":632},[739],{"type":560,"value":711},{"type":554,"tag":573,"props":741,"children":742},{"style":638},[743],{"type":560,"value":716},{"type":554,"tag":573,"props":745,"children":746},{"style":644},[747],{"type":560,"value":721},{"type":554,"tag":573,"props":749,"children":750},{"style":638},[751],{"type":560,"value":726},{"type":554,"tag":573,"props":753,"children":754},{"style":580},[755],{"type":560,"value":756}," // { value: \"b\", done: false }\n",{"type":554,"tag":573,"props":758,"children":760},{"class":575,"line":759},10,[761,765,769,773,777],{"type":554,"tag":573,"props":762,"children":763},{"style":632},[764],{"type":560,"value":711},{"type":554,"tag":573,"props":766,"children":767},{"style":638},[768],{"type":560,"value":716},{"type":554,"tag":573,"props":770,"children":771},{"style":644},[772],{"type":560,"value":721},{"type":554,"tag":573,"props":774,"children":775},{"style":638},[776],{"type":560,"value":726},{"type":554,"tag":573,"props":778,"children":779},{"style":580},[780],{"type":560,"value":781}," // { value: undefined, done: true }\n",{"type":554,"tag":573,"props":783,"children":785},{"class":575,"line":784},11,[786],{"type":554,"tag":573,"props":787,"children":788},{"emptyLinePlaceholder":699},[789],{"type":560,"value":702},{"type":554,"tag":573,"props":791,"children":793},{"class":575,"line":792},12,[794,799,803,808,813,818],{"type":554,"tag":573,"props":795,"children":796},{"style":626},[797],{"type":560,"value":798},"function",{"type":554,"tag":573,"props":800,"children":801},{"style":644},[802],{"type":560,"value":647},{"type":554,"tag":573,"props":804,"children":805},{"style":638},[806],{"type":560,"value":807},"(",{"type":554,"tag":573,"props":809,"children":810},{"style":632},[811],{"type":560,"value":812},"array",{"type":554,"tag":573,"props":814,"children":815},{"style":638},[816],{"type":560,"value":817},")",{"type":554,"tag":573,"props":819,"children":820},{"style":638},[821],{"type":560,"value":822}," {\n",{"type":554,"tag":573,"props":824,"children":826},{"class":575,"line":825},13,[827,832,837,841,847],{"type":554,"tag":573,"props":828,"children":829},{"style":626},[830],{"type":560,"value":831},"  var",{"type":554,"tag":573,"props":833,"children":834},{"style":632},[835],{"type":560,"value":836}," nextIndex",{"type":554,"tag":573,"props":838,"children":839},{"style":638},[840],{"type":560,"value":641},{"type":554,"tag":573,"props":842,"children":844},{"style":843},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[845],{"type":560,"value":846}," 0",{"type":554,"tag":573,"props":848,"children":849},{"style":638},[850],{"type":560,"value":851},";\n",{"type":554,"tag":573,"props":853,"children":855},{"class":575,"line":854},14,[856,862],{"type":554,"tag":573,"props":857,"children":859},{"style":858},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[860],{"type":560,"value":861},"  return",{"type":554,"tag":573,"props":863,"children":864},{"style":638},[865],{"type":560,"value":822},{"type":554,"tag":573,"props":867,"children":869},{"class":575,"line":868},15,[870,875,880,885,890],{"type":554,"tag":573,"props":871,"children":872},{"style":644},[873],{"type":560,"value":874},"    next",{"type":554,"tag":573,"props":876,"children":877},{"style":638},[878],{"type":560,"value":879},":",{"type":554,"tag":573,"props":881,"children":882},{"style":626},[883],{"type":560,"value":884}," function",{"type":554,"tag":573,"props":886,"children":887},{"style":638},[888],{"type":560,"value":889}," ()",{"type":554,"tag":573,"props":891,"children":892},{"style":638},[893],{"type":560,"value":822},{"type":554,"tag":573,"props":895,"children":897},{"class":575,"line":896},16,[898,903,907,912,917,921],{"type":554,"tag":573,"props":899,"children":900},{"style":858},[901],{"type":560,"value":902},"      return",{"type":554,"tag":573,"props":904,"children":905},{"style":632},[906],{"type":560,"value":836},{"type":554,"tag":573,"props":908,"children":909},{"style":638},[910],{"type":560,"value":911}," \u003C",{"type":554,"tag":573,"props":913,"children":914},{"style":632},[915],{"type":560,"value":916}," array",{"type":554,"tag":573,"props":918,"children":919},{"style":638},[920],{"type":560,"value":716},{"type":554,"tag":573,"props":922,"children":924},{"style":923},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[925],{"type":560,"value":926},"length\n",{"type":554,"tag":573,"props":928,"children":930},{"class":575,"line":929},17,[931,936,941,946,950,954,959,964,969,974,979,983,988],{"type":554,"tag":573,"props":932,"children":933},{"style":626},[934],{"type":560,"value":935},"        ?",{"type":554,"tag":573,"props":937,"children":938},{"style":638},[939],{"type":560,"value":940}," {",{"type":554,"tag":573,"props":942,"children":943},{"style":923},[944],{"type":560,"value":945}," value",{"type":554,"tag":573,"props":947,"children":948},{"style":638},[949],{"type":560,"value":879},{"type":554,"tag":573,"props":951,"children":952},{"style":632},[953],{"type":560,"value":916},{"type":554,"tag":573,"props":955,"children":956},{"style":638},[957],{"type":560,"value":958},"[",{"type":554,"tag":573,"props":960,"children":961},{"style":632},[962],{"type":560,"value":963},"nextIndex",{"type":554,"tag":573,"props":965,"children":966},{"style":626},[967],{"type":560,"value":968},"++",{"type":554,"tag":573,"props":970,"children":971},{"style":638},[972],{"type":560,"value":973},"],",{"type":554,"tag":573,"props":975,"children":976},{"style":923},[977],{"type":560,"value":978}," done",{"type":554,"tag":573,"props":980,"children":981},{"style":638},[982],{"type":560,"value":879},{"type":554,"tag":573,"props":984,"children":985},{"style":858},[986],{"type":560,"value":987}," false",{"type":554,"tag":573,"props":989,"children":990},{"style":638},[991],{"type":560,"value":992}," }\n",{"type":554,"tag":573,"props":994,"children":996},{"class":575,"line":995},18,[997,1002,1006,1010,1014,1019,1023,1027,1031,1036],{"type":554,"tag":573,"props":998,"children":999},{"style":626},[1000],{"type":560,"value":1001},"        :",{"type":554,"tag":573,"props":1003,"children":1004},{"style":638},[1005],{"type":560,"value":940},{"type":554,"tag":573,"props":1007,"children":1008},{"style":923},[1009],{"type":560,"value":945},{"type":554,"tag":573,"props":1011,"children":1012},{"style":638},[1013],{"type":560,"value":879},{"type":554,"tag":573,"props":1015,"children":1016},{"style":626},[1017],{"type":560,"value":1018}," undefined",{"type":554,"tag":573,"props":1020,"children":1021},{"style":638},[1022],{"type":560,"value":673},{"type":554,"tag":573,"props":1024,"children":1025},{"style":923},[1026],{"type":560,"value":978},{"type":554,"tag":573,"props":1028,"children":1029},{"style":638},[1030],{"type":560,"value":879},{"type":554,"tag":573,"props":1032,"children":1033},{"style":858},[1034],{"type":560,"value":1035}," true",{"type":554,"tag":573,"props":1037,"children":1038},{"style":638},[1039],{"type":560,"value":1040}," };\n",{"type":554,"tag":573,"props":1042,"children":1044},{"class":575,"line":1043},19,[1045],{"type":554,"tag":573,"props":1046,"children":1047},{"style":638},[1048],{"type":560,"value":1049},"    },\n",{"type":554,"tag":573,"props":1051,"children":1053},{"class":575,"line":1052},20,[1054],{"type":554,"tag":573,"props":1055,"children":1056},{"style":638},[1057],{"type":560,"value":1058},"  };\n",{"type":554,"tag":573,"props":1060,"children":1062},{"class":575,"line":1061},21,[1063],{"type":554,"tag":573,"props":1064,"children":1065},{"style":638},[1066],{"type":560,"value":1067},"}\n",{"type":554,"tag":555,"props":1069,"children":1071},{"id":1070},"可迭代的迭代器",[1072],{"type":560,"value":1070},{"type":554,"tag":562,"props":1074,"children":1076},{"className":564,"code":1075,"language":566,"meta":549,"style":549},"/**\n * 使迭代器可迭代\n * makeIterator 函数生成的迭代器并没有实现可迭代协议\n * 所以不能在 for...of 等语法中使用。\n * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n * 从新名了下函数名称 createIterator\n */\nfunction createIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n    [Symbol.iterator]: function () {\n      console.log(\"返回的迭代器:\", this);\n      return this; // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n    },\n  };\n}\n\nvar iterator = createIterator([1, 2, 3]);\nconsole.log(...iterator);\n",[1077],{"type":554,"tag":569,"props":1078,"children":1079},{"__ignoreMap":549},[1080,1088,1096,1104,1112,1120,1128,1135,1163,1186,1197,1220,1247,1302,1345,1352,1391,1440,1461,1468,1475,1482,1490,1542],{"type":554,"tag":573,"props":1081,"children":1082},{"class":575,"line":576},[1083],{"type":554,"tag":573,"props":1084,"children":1085},{"style":580},[1086],{"type":560,"value":1087},"/**\n",{"type":554,"tag":573,"props":1089,"children":1090},{"class":575,"line":586},[1091],{"type":554,"tag":573,"props":1092,"children":1093},{"style":580},[1094],{"type":560,"value":1095}," * 使迭代器可迭代\n",{"type":554,"tag":573,"props":1097,"children":1098},{"class":575,"line":595},[1099],{"type":554,"tag":573,"props":1100,"children":1101},{"style":580},[1102],{"type":560,"value":1103}," * makeIterator 函数生成的迭代器并没有实现可迭代协议\n",{"type":554,"tag":573,"props":1105,"children":1106},{"class":575,"line":604},[1107],{"type":554,"tag":573,"props":1108,"children":1109},{"style":580},[1110],{"type":560,"value":1111}," * 所以不能在 for...of 等语法中使用。\n",{"type":554,"tag":573,"props":1113,"children":1114},{"class":575,"line":613},[1115],{"type":554,"tag":573,"props":1116,"children":1117},{"style":580},[1118],{"type":560,"value":1119}," * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n",{"type":554,"tag":573,"props":1121,"children":1122},{"class":575,"line":622},[1123],{"type":554,"tag":573,"props":1124,"children":1125},{"style":580},[1126],{"type":560,"value":1127}," * 从新名了下函数名称 createIterator\n",{"type":554,"tag":573,"props":1129,"children":1130},{"class":575,"line":695},[1131],{"type":554,"tag":573,"props":1132,"children":1133},{"style":580},[1134],{"type":560,"value":619},{"type":554,"tag":573,"props":1136,"children":1137},{"class":575,"line":705},[1138,1142,1147,1151,1155,1159],{"type":554,"tag":573,"props":1139,"children":1140},{"style":626},[1141],{"type":560,"value":798},{"type":554,"tag":573,"props":1143,"children":1144},{"style":644},[1145],{"type":560,"value":1146}," createIterator",{"type":554,"tag":573,"props":1148,"children":1149},{"style":638},[1150],{"type":560,"value":807},{"type":554,"tag":573,"props":1152,"children":1153},{"style":632},[1154],{"type":560,"value":812},{"type":554,"tag":573,"props":1156,"children":1157},{"style":638},[1158],{"type":560,"value":817},{"type":554,"tag":573,"props":1160,"children":1161},{"style":638},[1162],{"type":560,"value":822},{"type":554,"tag":573,"props":1164,"children":1165},{"class":575,"line":734},[1166,1170,1174,1178,1182],{"type":554,"tag":573,"props":1167,"children":1168},{"style":626},[1169],{"type":560,"value":831},{"type":554,"tag":573,"props":1171,"children":1172},{"style":632},[1173],{"type":560,"value":836},{"type":554,"tag":573,"props":1175,"children":1176},{"style":638},[1177],{"type":560,"value":641},{"type":554,"tag":573,"props":1179,"children":1180},{"style":843},[1181],{"type":560,"value":846},{"type":554,"tag":573,"props":1183,"children":1184},{"style":638},[1185],{"type":560,"value":851},{"type":554,"tag":573,"props":1187,"children":1188},{"class":575,"line":759},[1189,1193],{"type":554,"tag":573,"props":1190,"children":1191},{"style":858},[1192],{"type":560,"value":861},{"type":554,"tag":573,"props":1194,"children":1195},{"style":638},[1196],{"type":560,"value":822},{"type":554,"tag":573,"props":1198,"children":1199},{"class":575,"line":784},[1200,1204,1208,1212,1216],{"type":554,"tag":573,"props":1201,"children":1202},{"style":644},[1203],{"type":560,"value":874},{"type":554,"tag":573,"props":1205,"children":1206},{"style":638},[1207],{"type":560,"value":879},{"type":554,"tag":573,"props":1209,"children":1210},{"style":626},[1211],{"type":560,"value":884},{"type":554,"tag":573,"props":1213,"children":1214},{"style":638},[1215],{"type":560,"value":889},{"type":554,"tag":573,"props":1217,"children":1218},{"style":638},[1219],{"type":560,"value":822},{"type":554,"tag":573,"props":1221,"children":1222},{"class":575,"line":792},[1223,1227,1231,1235,1239,1243],{"type":554,"tag":573,"props":1224,"children":1225},{"style":858},[1226],{"type":560,"value":902},{"type":554,"tag":573,"props":1228,"children":1229},{"style":632},[1230],{"type":560,"value":836},{"type":554,"tag":573,"props":1232,"children":1233},{"style":638},[1234],{"type":560,"value":911},{"type":554,"tag":573,"props":1236,"children":1237},{"style":632},[1238],{"type":560,"value":916},{"type":554,"tag":573,"props":1240,"children":1241},{"style":638},[1242],{"type":560,"value":716},{"type":554,"tag":573,"props":1244,"children":1245},{"style":923},[1246],{"type":560,"value":926},{"type":554,"tag":573,"props":1248,"children":1249},{"class":575,"line":825},[1250,1254,1258,1262,1266,1270,1274,1278,1282,1286,1290,1294,1298],{"type":554,"tag":573,"props":1251,"children":1252},{"style":626},[1253],{"type":560,"value":935},{"type":554,"tag":573,"props":1255,"children":1256},{"style":638},[1257],{"type":560,"value":940},{"type":554,"tag":573,"props":1259,"children":1260},{"style":923},[1261],{"type":560,"value":945},{"type":554,"tag":573,"props":1263,"children":1264},{"style":638},[1265],{"type":560,"value":879},{"type":554,"tag":573,"props":1267,"children":1268},{"style":632},[1269],{"type":560,"value":916},{"type":554,"tag":573,"props":1271,"children":1272},{"style":638},[1273],{"type":560,"value":958},{"type":554,"tag":573,"props":1275,"children":1276},{"style":632},[1277],{"type":560,"value":963},{"type":554,"tag":573,"props":1279,"children":1280},{"style":626},[1281],{"type":560,"value":968},{"type":554,"tag":573,"props":1283,"children":1284},{"style":638},[1285],{"type":560,"value":973},{"type":554,"tag":573,"props":1287,"children":1288},{"style":923},[1289],{"type":560,"value":978},{"type":554,"tag":573,"props":1291,"children":1292},{"style":638},[1293],{"type":560,"value":879},{"type":554,"tag":573,"props":1295,"children":1296},{"style":858},[1297],{"type":560,"value":987},{"type":554,"tag":573,"props":1299,"children":1300},{"style":638},[1301],{"type":560,"value":992},{"type":554,"tag":573,"props":1303,"children":1304},{"class":575,"line":854},[1305,1309,1313,1317,1321,1325,1329,1333,1337,1341],{"type":554,"tag":573,"props":1306,"children":1307},{"style":626},[1308],{"type":560,"value":1001},{"type":554,"tag":573,"props":1310,"children":1311},{"style":638},[1312],{"type":560,"value":940},{"type":554,"tag":573,"props":1314,"children":1315},{"style":923},[1316],{"type":560,"value":945},{"type":554,"tag":573,"props":1318,"children":1319},{"style":638},[1320],{"type":560,"value":879},{"type":554,"tag":573,"props":1322,"children":1323},{"style":626},[1324],{"type":560,"value":1018},{"type":554,"tag":573,"props":1326,"children":1327},{"style":638},[1328],{"type":560,"value":673},{"type":554,"tag":573,"props":1330,"children":1331},{"style":923},[1332],{"type":560,"value":978},{"type":554,"tag":573,"props":1334,"children":1335},{"style":638},[1336],{"type":560,"value":879},{"type":554,"tag":573,"props":1338,"children":1339},{"style":858},[1340],{"type":560,"value":1035},{"type":554,"tag":573,"props":1342,"children":1343},{"style":638},[1344],{"type":560,"value":1040},{"type":554,"tag":573,"props":1346,"children":1347},{"class":575,"line":868},[1348],{"type":554,"tag":573,"props":1349,"children":1350},{"style":638},[1351],{"type":560,"value":1049},{"type":554,"tag":573,"props":1353,"children":1354},{"class":575,"line":896},[1355,1360,1365,1369,1374,1379,1383,1387],{"type":554,"tag":573,"props":1356,"children":1357},{"style":638},[1358],{"type":560,"value":1359},"    [",{"type":554,"tag":573,"props":1361,"children":1362},{"style":632},[1363],{"type":560,"value":1364},"Symbol",{"type":554,"tag":573,"props":1366,"children":1367},{"style":638},[1368],{"type":560,"value":716},{"type":554,"tag":573,"props":1370,"children":1371},{"style":632},[1372],{"type":560,"value":1373},"iterator",{"type":554,"tag":573,"props":1375,"children":1376},{"style":638},[1377],{"type":560,"value":1378},"]:",{"type":554,"tag":573,"props":1380,"children":1381},{"style":626},[1382],{"type":560,"value":884},{"type":554,"tag":573,"props":1384,"children":1385},{"style":638},[1386],{"type":560,"value":889},{"type":554,"tag":573,"props":1388,"children":1389},{"style":638},[1390],{"type":560,"value":822},{"type":554,"tag":573,"props":1392,"children":1393},{"class":575,"line":929},[1394,1399,1403,1408,1412,1416,1421,1425,1429,1435],{"type":554,"tag":573,"props":1395,"children":1396},{"style":632},[1397],{"type":560,"value":1398},"      console",{"type":554,"tag":573,"props":1400,"children":1401},{"style":638},[1402],{"type":560,"value":716},{"type":554,"tag":573,"props":1404,"children":1405},{"style":644},[1406],{"type":560,"value":1407},"log",{"type":554,"tag":573,"props":1409,"children":1410},{"style":638},[1411],{"type":560,"value":807},{"type":554,"tag":573,"props":1413,"children":1414},{"style":655},[1415],{"type":560,"value":658},{"type":554,"tag":573,"props":1417,"children":1418},{"style":661},[1419],{"type":560,"value":1420},"返回的迭代器:",{"type":554,"tag":573,"props":1422,"children":1423},{"style":655},[1424],{"type":560,"value":658},{"type":554,"tag":573,"props":1426,"children":1427},{"style":638},[1428],{"type":560,"value":673},{"type":554,"tag":573,"props":1430,"children":1432},{"style":1431},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[1433],{"type":560,"value":1434}," this",{"type":554,"tag":573,"props":1436,"children":1437},{"style":638},[1438],{"type":560,"value":1439},");\n",{"type":554,"tag":573,"props":1441,"children":1442},{"class":575,"line":995},[1443,1447,1451,1456],{"type":554,"tag":573,"props":1444,"children":1445},{"style":858},[1446],{"type":560,"value":902},{"type":554,"tag":573,"props":1448,"children":1449},{"style":1431},[1450],{"type":560,"value":1434},{"type":554,"tag":573,"props":1452,"children":1453},{"style":638},[1454],{"type":560,"value":1455},";",{"type":554,"tag":573,"props":1457,"children":1458},{"style":580},[1459],{"type":560,"value":1460}," // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n",{"type":554,"tag":573,"props":1462,"children":1463},{"class":575,"line":1043},[1464],{"type":554,"tag":573,"props":1465,"children":1466},{"style":638},[1467],{"type":560,"value":1049},{"type":554,"tag":573,"props":1469,"children":1470},{"class":575,"line":1052},[1471],{"type":554,"tag":573,"props":1472,"children":1473},{"style":638},[1474],{"type":560,"value":1058},{"type":554,"tag":573,"props":1476,"children":1477},{"class":575,"line":1061},[1478],{"type":554,"tag":573,"props":1479,"children":1480},{"style":638},[1481],{"type":560,"value":1067},{"type":554,"tag":573,"props":1483,"children":1485},{"class":575,"line":1484},22,[1486],{"type":554,"tag":573,"props":1487,"children":1488},{"emptyLinePlaceholder":699},[1489],{"type":560,"value":702},{"type":554,"tag":573,"props":1491,"children":1493},{"class":575,"line":1492},23,[1494,1498,1503,1507,1511,1515,1520,1524,1529,1533,1538],{"type":554,"tag":573,"props":1495,"children":1496},{"style":626},[1497],{"type":560,"value":629},{"type":554,"tag":573,"props":1499,"children":1500},{"style":632},[1501],{"type":560,"value":1502}," iterator",{"type":554,"tag":573,"props":1504,"children":1505},{"style":638},[1506],{"type":560,"value":641},{"type":554,"tag":573,"props":1508,"children":1509},{"style":644},[1510],{"type":560,"value":1146},{"type":554,"tag":573,"props":1512,"children":1513},{"style":638},[1514],{"type":560,"value":652},{"type":554,"tag":573,"props":1516,"children":1517},{"style":843},[1518],{"type":560,"value":1519},"1",{"type":554,"tag":573,"props":1521,"children":1522},{"style":638},[1523],{"type":560,"value":673},{"type":554,"tag":573,"props":1525,"children":1526},{"style":843},[1527],{"type":560,"value":1528}," 2",{"type":554,"tag":573,"props":1530,"children":1531},{"style":638},[1532],{"type":560,"value":673},{"type":554,"tag":573,"props":1534,"children":1535},{"style":843},[1536],{"type":560,"value":1537}," 3",{"type":554,"tag":573,"props":1539,"children":1540},{"style":638},[1541],{"type":560,"value":692},{"type":554,"tag":573,"props":1543,"children":1545},{"class":575,"line":1544},24,[1546,1551,1555,1559,1564,1568],{"type":554,"tag":573,"props":1547,"children":1548},{"style":632},[1549],{"type":560,"value":1550},"console",{"type":554,"tag":573,"props":1552,"children":1553},{"style":638},[1554],{"type":560,"value":716},{"type":554,"tag":573,"props":1556,"children":1557},{"style":644},[1558],{"type":560,"value":1407},{"type":554,"tag":573,"props":1560,"children":1561},{"style":638},[1562],{"type":560,"value":1563},"(...",{"type":554,"tag":573,"props":1565,"children":1566},{"style":632},[1567],{"type":560,"value":1373},{"type":554,"tag":573,"props":1569,"children":1570},{"style":638},[1571],{"type":560,"value":1439},{"type":554,"tag":1573,"props":1574,"children":1575},"style",{},[1576],{"type":560,"value":1577},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":549,"searchDepth":613,"depth":613,"links":1579},[1580,1581],{"id":557,"depth":586,"text":557},{"id":1070,"depth":586,"text":1070},"markdown","content:3.code-assessment:1.source:1.native-api:8.iterator.md","content","3.code-assessment/1.source/1.native-api/8.iterator.md","md",[1588,1590],{"_path":330,"title":329,"description":1589},"JSON.stringify() 方法将一个 js 对象或值转换为 json 字符串，如果指定了一个 replacer 函数，则可以选择性地替换值，或者指定的 replacer 是数组，则可选择性地仅包含数组指定的属性。",{"_path":336,"title":335,"description":549},1715002848536]