[{"data":1,"prerenderedAt":1588},["Reactive",2],{"navigation":3,"/code-assessment/source/native-api/iterator":543,"/code-assessment/source/native-api/iterator-surround":1584},[4,269,298,511,519,528],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":510},"代码考核","/code-assessment",[302,404,503],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":498,"_path":499},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":501,"_path":502},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":504,"_path":505,"children":506},"Ts 类型挑战","/code-assessment/type-challeges",[507],{"title":508,"_path":509},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":512,"_path":513,"children":514,"icon":518},"项目","/project",[515],{"title":516,"_path":517},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":520,"_path":521,"children":522,"icon":527},"设计模式","/design-mode",[523,524],{"title":520,"_path":521},{"title":525,"_path":526},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":529,"_path":530,"children":531,"icon":542},"后端语言","/backend-languages",[532],{"title":533,"_path":534,"children":535},"Python","/backend-languages/python",[536,539],{"title":537,"_path":538},"基础","/backend-languages/python/base",{"title":540,"_path":541},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":333,"_dir":544,"_draft":545,"_partial":545,"_locale":546,"title":332,"description":546,"body":547,"_type":1579,"_id":1580,"_source":1581,"_file":1582,"_extension":1583},"native-api",false,"",{"type":548,"children":549,"toc":1575},"root",[550,558,1065,1070,1569],{"type":551,"tag":552,"props":553,"children":555},"element","h2",{"id":554},"实现迭代器函数",[556],{"type":557,"value":554},"text",{"type":551,"tag":559,"props":560,"children":564},"pre",{"className":561,"code":562,"language":563,"meta":546,"style":546},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/*\n * 这是一个手写的迭代器(Iterator)\n * 满足迭代器协议的对象。\n * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n */\nvar it = makeIterator([\"a\", \"b\"]);\n\nit.next(); // { value: \"a\", done: false }\nit.next(); // { value: \"b\", done: false }\nit.next(); // { value: undefined, done: true }\n\nfunction makeIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n  };\n}\n","js",[565],{"type":551,"tag":566,"props":567,"children":568},"code",{"__ignoreMap":546},[569,581,590,599,608,617,690,700,729,754,779,787,820,849,863,891,924,990,1038,1047,1056],{"type":551,"tag":570,"props":571,"children":574},"span",{"class":572,"line":573},"line",1,[575],{"type":551,"tag":570,"props":576,"children":578},{"style":577},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[579],{"type":557,"value":580},"/*\n",{"type":551,"tag":570,"props":582,"children":584},{"class":572,"line":583},2,[585],{"type":551,"tag":570,"props":586,"children":587},{"style":577},[588],{"type":557,"value":589}," * 这是一个手写的迭代器(Iterator)\n",{"type":551,"tag":570,"props":591,"children":593},{"class":572,"line":592},3,[594],{"type":551,"tag":570,"props":595,"children":596},{"style":577},[597],{"type":557,"value":598}," * 满足迭代器协议的对象。\n",{"type":551,"tag":570,"props":600,"children":602},{"class":572,"line":601},4,[603],{"type":551,"tag":570,"props":604,"children":605},{"style":577},[606],{"type":557,"value":607}," * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n",{"type":551,"tag":570,"props":609,"children":611},{"class":572,"line":610},5,[612],{"type":551,"tag":570,"props":613,"children":614},{"style":577},[615],{"type":557,"value":616}," */\n",{"type":551,"tag":570,"props":618,"children":620},{"class":572,"line":619},6,[621,627,633,639,645,650,656,662,666,671,676,681,685],{"type":551,"tag":570,"props":622,"children":624},{"style":623},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[625],{"type":557,"value":626},"var",{"type":551,"tag":570,"props":628,"children":630},{"style":629},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[631],{"type":557,"value":632}," it",{"type":551,"tag":570,"props":634,"children":636},{"style":635},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[637],{"type":557,"value":638}," =",{"type":551,"tag":570,"props":640,"children":642},{"style":641},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[643],{"type":557,"value":644}," makeIterator",{"type":551,"tag":570,"props":646,"children":647},{"style":635},[648],{"type":557,"value":649},"([",{"type":551,"tag":570,"props":651,"children":653},{"style":652},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[654],{"type":557,"value":655},"\"",{"type":551,"tag":570,"props":657,"children":659},{"style":658},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[660],{"type":557,"value":661},"a",{"type":551,"tag":570,"props":663,"children":664},{"style":652},[665],{"type":557,"value":655},{"type":551,"tag":570,"props":667,"children":668},{"style":635},[669],{"type":557,"value":670},",",{"type":551,"tag":570,"props":672,"children":673},{"style":652},[674],{"type":557,"value":675}," \"",{"type":551,"tag":570,"props":677,"children":678},{"style":658},[679],{"type":557,"value":680},"b",{"type":551,"tag":570,"props":682,"children":683},{"style":652},[684],{"type":557,"value":655},{"type":551,"tag":570,"props":686,"children":687},{"style":635},[688],{"type":557,"value":689},"]);\n",{"type":551,"tag":570,"props":691,"children":693},{"class":572,"line":692},7,[694],{"type":551,"tag":570,"props":695,"children":697},{"emptyLinePlaceholder":696},true,[698],{"type":557,"value":699},"\n",{"type":551,"tag":570,"props":701,"children":703},{"class":572,"line":702},8,[704,709,714,719,724],{"type":551,"tag":570,"props":705,"children":706},{"style":629},[707],{"type":557,"value":708},"it",{"type":551,"tag":570,"props":710,"children":711},{"style":635},[712],{"type":557,"value":713},".",{"type":551,"tag":570,"props":715,"children":716},{"style":641},[717],{"type":557,"value":718},"next",{"type":551,"tag":570,"props":720,"children":721},{"style":635},[722],{"type":557,"value":723},"();",{"type":551,"tag":570,"props":725,"children":726},{"style":577},[727],{"type":557,"value":728}," // { value: \"a\", done: false }\n",{"type":551,"tag":570,"props":730,"children":732},{"class":572,"line":731},9,[733,737,741,745,749],{"type":551,"tag":570,"props":734,"children":735},{"style":629},[736],{"type":557,"value":708},{"type":551,"tag":570,"props":738,"children":739},{"style":635},[740],{"type":557,"value":713},{"type":551,"tag":570,"props":742,"children":743},{"style":641},[744],{"type":557,"value":718},{"type":551,"tag":570,"props":746,"children":747},{"style":635},[748],{"type":557,"value":723},{"type":551,"tag":570,"props":750,"children":751},{"style":577},[752],{"type":557,"value":753}," // { value: \"b\", done: false }\n",{"type":551,"tag":570,"props":755,"children":757},{"class":572,"line":756},10,[758,762,766,770,774],{"type":551,"tag":570,"props":759,"children":760},{"style":629},[761],{"type":557,"value":708},{"type":551,"tag":570,"props":763,"children":764},{"style":635},[765],{"type":557,"value":713},{"type":551,"tag":570,"props":767,"children":768},{"style":641},[769],{"type":557,"value":718},{"type":551,"tag":570,"props":771,"children":772},{"style":635},[773],{"type":557,"value":723},{"type":551,"tag":570,"props":775,"children":776},{"style":577},[777],{"type":557,"value":778}," // { value: undefined, done: true }\n",{"type":551,"tag":570,"props":780,"children":782},{"class":572,"line":781},11,[783],{"type":551,"tag":570,"props":784,"children":785},{"emptyLinePlaceholder":696},[786],{"type":557,"value":699},{"type":551,"tag":570,"props":788,"children":790},{"class":572,"line":789},12,[791,796,800,805,810,815],{"type":551,"tag":570,"props":792,"children":793},{"style":623},[794],{"type":557,"value":795},"function",{"type":551,"tag":570,"props":797,"children":798},{"style":641},[799],{"type":557,"value":644},{"type":551,"tag":570,"props":801,"children":802},{"style":635},[803],{"type":557,"value":804},"(",{"type":551,"tag":570,"props":806,"children":807},{"style":629},[808],{"type":557,"value":809},"array",{"type":551,"tag":570,"props":811,"children":812},{"style":635},[813],{"type":557,"value":814},")",{"type":551,"tag":570,"props":816,"children":817},{"style":635},[818],{"type":557,"value":819}," {\n",{"type":551,"tag":570,"props":821,"children":823},{"class":572,"line":822},13,[824,829,834,838,844],{"type":551,"tag":570,"props":825,"children":826},{"style":623},[827],{"type":557,"value":828},"  var",{"type":551,"tag":570,"props":830,"children":831},{"style":629},[832],{"type":557,"value":833}," nextIndex",{"type":551,"tag":570,"props":835,"children":836},{"style":635},[837],{"type":557,"value":638},{"type":551,"tag":570,"props":839,"children":841},{"style":840},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[842],{"type":557,"value":843}," 0",{"type":551,"tag":570,"props":845,"children":846},{"style":635},[847],{"type":557,"value":848},";\n",{"type":551,"tag":570,"props":850,"children":852},{"class":572,"line":851},14,[853,859],{"type":551,"tag":570,"props":854,"children":856},{"style":855},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[857],{"type":557,"value":858},"  return",{"type":551,"tag":570,"props":860,"children":861},{"style":635},[862],{"type":557,"value":819},{"type":551,"tag":570,"props":864,"children":866},{"class":572,"line":865},15,[867,872,877,882,887],{"type":551,"tag":570,"props":868,"children":869},{"style":641},[870],{"type":557,"value":871},"    next",{"type":551,"tag":570,"props":873,"children":874},{"style":635},[875],{"type":557,"value":876},":",{"type":551,"tag":570,"props":878,"children":879},{"style":623},[880],{"type":557,"value":881}," function",{"type":551,"tag":570,"props":883,"children":884},{"style":635},[885],{"type":557,"value":886}," ()",{"type":551,"tag":570,"props":888,"children":889},{"style":635},[890],{"type":557,"value":819},{"type":551,"tag":570,"props":892,"children":894},{"class":572,"line":893},16,[895,900,904,909,914,918],{"type":551,"tag":570,"props":896,"children":897},{"style":855},[898],{"type":557,"value":899},"      return",{"type":551,"tag":570,"props":901,"children":902},{"style":629},[903],{"type":557,"value":833},{"type":551,"tag":570,"props":905,"children":906},{"style":635},[907],{"type":557,"value":908}," \u003C",{"type":551,"tag":570,"props":910,"children":911},{"style":629},[912],{"type":557,"value":913}," array",{"type":551,"tag":570,"props":915,"children":916},{"style":635},[917],{"type":557,"value":713},{"type":551,"tag":570,"props":919,"children":921},{"style":920},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[922],{"type":557,"value":923},"length\n",{"type":551,"tag":570,"props":925,"children":927},{"class":572,"line":926},17,[928,933,938,943,947,951,956,961,966,971,976,980,985],{"type":551,"tag":570,"props":929,"children":930},{"style":623},[931],{"type":557,"value":932},"        ?",{"type":551,"tag":570,"props":934,"children":935},{"style":635},[936],{"type":557,"value":937}," {",{"type":551,"tag":570,"props":939,"children":940},{"style":920},[941],{"type":557,"value":942}," value",{"type":551,"tag":570,"props":944,"children":945},{"style":635},[946],{"type":557,"value":876},{"type":551,"tag":570,"props":948,"children":949},{"style":629},[950],{"type":557,"value":913},{"type":551,"tag":570,"props":952,"children":953},{"style":635},[954],{"type":557,"value":955},"[",{"type":551,"tag":570,"props":957,"children":958},{"style":629},[959],{"type":557,"value":960},"nextIndex",{"type":551,"tag":570,"props":962,"children":963},{"style":623},[964],{"type":557,"value":965},"++",{"type":551,"tag":570,"props":967,"children":968},{"style":635},[969],{"type":557,"value":970},"],",{"type":551,"tag":570,"props":972,"children":973},{"style":920},[974],{"type":557,"value":975}," done",{"type":551,"tag":570,"props":977,"children":978},{"style":635},[979],{"type":557,"value":876},{"type":551,"tag":570,"props":981,"children":982},{"style":855},[983],{"type":557,"value":984}," false",{"type":551,"tag":570,"props":986,"children":987},{"style":635},[988],{"type":557,"value":989}," }\n",{"type":551,"tag":570,"props":991,"children":993},{"class":572,"line":992},18,[994,999,1003,1007,1011,1016,1020,1024,1028,1033],{"type":551,"tag":570,"props":995,"children":996},{"style":623},[997],{"type":557,"value":998},"        :",{"type":551,"tag":570,"props":1000,"children":1001},{"style":635},[1002],{"type":557,"value":937},{"type":551,"tag":570,"props":1004,"children":1005},{"style":920},[1006],{"type":557,"value":942},{"type":551,"tag":570,"props":1008,"children":1009},{"style":635},[1010],{"type":557,"value":876},{"type":551,"tag":570,"props":1012,"children":1013},{"style":623},[1014],{"type":557,"value":1015}," undefined",{"type":551,"tag":570,"props":1017,"children":1018},{"style":635},[1019],{"type":557,"value":670},{"type":551,"tag":570,"props":1021,"children":1022},{"style":920},[1023],{"type":557,"value":975},{"type":551,"tag":570,"props":1025,"children":1026},{"style":635},[1027],{"type":557,"value":876},{"type":551,"tag":570,"props":1029,"children":1030},{"style":855},[1031],{"type":557,"value":1032}," true",{"type":551,"tag":570,"props":1034,"children":1035},{"style":635},[1036],{"type":557,"value":1037}," };\n",{"type":551,"tag":570,"props":1039,"children":1041},{"class":572,"line":1040},19,[1042],{"type":551,"tag":570,"props":1043,"children":1044},{"style":635},[1045],{"type":557,"value":1046},"    },\n",{"type":551,"tag":570,"props":1048,"children":1050},{"class":572,"line":1049},20,[1051],{"type":551,"tag":570,"props":1052,"children":1053},{"style":635},[1054],{"type":557,"value":1055},"  };\n",{"type":551,"tag":570,"props":1057,"children":1059},{"class":572,"line":1058},21,[1060],{"type":551,"tag":570,"props":1061,"children":1062},{"style":635},[1063],{"type":557,"value":1064},"}\n",{"type":551,"tag":552,"props":1066,"children":1068},{"id":1067},"可迭代的迭代器",[1069],{"type":557,"value":1067},{"type":551,"tag":559,"props":1071,"children":1073},{"className":561,"code":1072,"language":563,"meta":546,"style":546},"/**\n * 使迭代器可迭代\n * makeIterator 函数生成的迭代器并没有实现可迭代协议\n * 所以不能在 for...of 等语法中使用。\n * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n * 从新名了下函数名称 createIterator\n */\nfunction createIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n    [Symbol.iterator]: function () {\n      console.log(\"返回的迭代器:\", this);\n      return this; // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n    },\n  };\n}\n\nvar iterator = createIterator([1, 2, 3]);\nconsole.log(...iterator);\n",[1074],{"type":551,"tag":566,"props":1075,"children":1076},{"__ignoreMap":546},[1077,1085,1093,1101,1109,1117,1125,1132,1160,1183,1194,1217,1244,1299,1342,1349,1388,1437,1458,1465,1472,1479,1487,1539],{"type":551,"tag":570,"props":1078,"children":1079},{"class":572,"line":573},[1080],{"type":551,"tag":570,"props":1081,"children":1082},{"style":577},[1083],{"type":557,"value":1084},"/**\n",{"type":551,"tag":570,"props":1086,"children":1087},{"class":572,"line":583},[1088],{"type":551,"tag":570,"props":1089,"children":1090},{"style":577},[1091],{"type":557,"value":1092}," * 使迭代器可迭代\n",{"type":551,"tag":570,"props":1094,"children":1095},{"class":572,"line":592},[1096],{"type":551,"tag":570,"props":1097,"children":1098},{"style":577},[1099],{"type":557,"value":1100}," * makeIterator 函数生成的迭代器并没有实现可迭代协议\n",{"type":551,"tag":570,"props":1102,"children":1103},{"class":572,"line":601},[1104],{"type":551,"tag":570,"props":1105,"children":1106},{"style":577},[1107],{"type":557,"value":1108}," * 所以不能在 for...of 等语法中使用。\n",{"type":551,"tag":570,"props":1110,"children":1111},{"class":572,"line":610},[1112],{"type":551,"tag":570,"props":1113,"children":1114},{"style":577},[1115],{"type":557,"value":1116}," * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n",{"type":551,"tag":570,"props":1118,"children":1119},{"class":572,"line":619},[1120],{"type":551,"tag":570,"props":1121,"children":1122},{"style":577},[1123],{"type":557,"value":1124}," * 从新名了下函数名称 createIterator\n",{"type":551,"tag":570,"props":1126,"children":1127},{"class":572,"line":692},[1128],{"type":551,"tag":570,"props":1129,"children":1130},{"style":577},[1131],{"type":557,"value":616},{"type":551,"tag":570,"props":1133,"children":1134},{"class":572,"line":702},[1135,1139,1144,1148,1152,1156],{"type":551,"tag":570,"props":1136,"children":1137},{"style":623},[1138],{"type":557,"value":795},{"type":551,"tag":570,"props":1140,"children":1141},{"style":641},[1142],{"type":557,"value":1143}," createIterator",{"type":551,"tag":570,"props":1145,"children":1146},{"style":635},[1147],{"type":557,"value":804},{"type":551,"tag":570,"props":1149,"children":1150},{"style":629},[1151],{"type":557,"value":809},{"type":551,"tag":570,"props":1153,"children":1154},{"style":635},[1155],{"type":557,"value":814},{"type":551,"tag":570,"props":1157,"children":1158},{"style":635},[1159],{"type":557,"value":819},{"type":551,"tag":570,"props":1161,"children":1162},{"class":572,"line":731},[1163,1167,1171,1175,1179],{"type":551,"tag":570,"props":1164,"children":1165},{"style":623},[1166],{"type":557,"value":828},{"type":551,"tag":570,"props":1168,"children":1169},{"style":629},[1170],{"type":557,"value":833},{"type":551,"tag":570,"props":1172,"children":1173},{"style":635},[1174],{"type":557,"value":638},{"type":551,"tag":570,"props":1176,"children":1177},{"style":840},[1178],{"type":557,"value":843},{"type":551,"tag":570,"props":1180,"children":1181},{"style":635},[1182],{"type":557,"value":848},{"type":551,"tag":570,"props":1184,"children":1185},{"class":572,"line":756},[1186,1190],{"type":551,"tag":570,"props":1187,"children":1188},{"style":855},[1189],{"type":557,"value":858},{"type":551,"tag":570,"props":1191,"children":1192},{"style":635},[1193],{"type":557,"value":819},{"type":551,"tag":570,"props":1195,"children":1196},{"class":572,"line":781},[1197,1201,1205,1209,1213],{"type":551,"tag":570,"props":1198,"children":1199},{"style":641},[1200],{"type":557,"value":871},{"type":551,"tag":570,"props":1202,"children":1203},{"style":635},[1204],{"type":557,"value":876},{"type":551,"tag":570,"props":1206,"children":1207},{"style":623},[1208],{"type":557,"value":881},{"type":551,"tag":570,"props":1210,"children":1211},{"style":635},[1212],{"type":557,"value":886},{"type":551,"tag":570,"props":1214,"children":1215},{"style":635},[1216],{"type":557,"value":819},{"type":551,"tag":570,"props":1218,"children":1219},{"class":572,"line":789},[1220,1224,1228,1232,1236,1240],{"type":551,"tag":570,"props":1221,"children":1222},{"style":855},[1223],{"type":557,"value":899},{"type":551,"tag":570,"props":1225,"children":1226},{"style":629},[1227],{"type":557,"value":833},{"type":551,"tag":570,"props":1229,"children":1230},{"style":635},[1231],{"type":557,"value":908},{"type":551,"tag":570,"props":1233,"children":1234},{"style":629},[1235],{"type":557,"value":913},{"type":551,"tag":570,"props":1237,"children":1238},{"style":635},[1239],{"type":557,"value":713},{"type":551,"tag":570,"props":1241,"children":1242},{"style":920},[1243],{"type":557,"value":923},{"type":551,"tag":570,"props":1245,"children":1246},{"class":572,"line":822},[1247,1251,1255,1259,1263,1267,1271,1275,1279,1283,1287,1291,1295],{"type":551,"tag":570,"props":1248,"children":1249},{"style":623},[1250],{"type":557,"value":932},{"type":551,"tag":570,"props":1252,"children":1253},{"style":635},[1254],{"type":557,"value":937},{"type":551,"tag":570,"props":1256,"children":1257},{"style":920},[1258],{"type":557,"value":942},{"type":551,"tag":570,"props":1260,"children":1261},{"style":635},[1262],{"type":557,"value":876},{"type":551,"tag":570,"props":1264,"children":1265},{"style":629},[1266],{"type":557,"value":913},{"type":551,"tag":570,"props":1268,"children":1269},{"style":635},[1270],{"type":557,"value":955},{"type":551,"tag":570,"props":1272,"children":1273},{"style":629},[1274],{"type":557,"value":960},{"type":551,"tag":570,"props":1276,"children":1277},{"style":623},[1278],{"type":557,"value":965},{"type":551,"tag":570,"props":1280,"children":1281},{"style":635},[1282],{"type":557,"value":970},{"type":551,"tag":570,"props":1284,"children":1285},{"style":920},[1286],{"type":557,"value":975},{"type":551,"tag":570,"props":1288,"children":1289},{"style":635},[1290],{"type":557,"value":876},{"type":551,"tag":570,"props":1292,"children":1293},{"style":855},[1294],{"type":557,"value":984},{"type":551,"tag":570,"props":1296,"children":1297},{"style":635},[1298],{"type":557,"value":989},{"type":551,"tag":570,"props":1300,"children":1301},{"class":572,"line":851},[1302,1306,1310,1314,1318,1322,1326,1330,1334,1338],{"type":551,"tag":570,"props":1303,"children":1304},{"style":623},[1305],{"type":557,"value":998},{"type":551,"tag":570,"props":1307,"children":1308},{"style":635},[1309],{"type":557,"value":937},{"type":551,"tag":570,"props":1311,"children":1312},{"style":920},[1313],{"type":557,"value":942},{"type":551,"tag":570,"props":1315,"children":1316},{"style":635},[1317],{"type":557,"value":876},{"type":551,"tag":570,"props":1319,"children":1320},{"style":623},[1321],{"type":557,"value":1015},{"type":551,"tag":570,"props":1323,"children":1324},{"style":635},[1325],{"type":557,"value":670},{"type":551,"tag":570,"props":1327,"children":1328},{"style":920},[1329],{"type":557,"value":975},{"type":551,"tag":570,"props":1331,"children":1332},{"style":635},[1333],{"type":557,"value":876},{"type":551,"tag":570,"props":1335,"children":1336},{"style":855},[1337],{"type":557,"value":1032},{"type":551,"tag":570,"props":1339,"children":1340},{"style":635},[1341],{"type":557,"value":1037},{"type":551,"tag":570,"props":1343,"children":1344},{"class":572,"line":865},[1345],{"type":551,"tag":570,"props":1346,"children":1347},{"style":635},[1348],{"type":557,"value":1046},{"type":551,"tag":570,"props":1350,"children":1351},{"class":572,"line":893},[1352,1357,1362,1366,1371,1376,1380,1384],{"type":551,"tag":570,"props":1353,"children":1354},{"style":635},[1355],{"type":557,"value":1356},"    [",{"type":551,"tag":570,"props":1358,"children":1359},{"style":629},[1360],{"type":557,"value":1361},"Symbol",{"type":551,"tag":570,"props":1363,"children":1364},{"style":635},[1365],{"type":557,"value":713},{"type":551,"tag":570,"props":1367,"children":1368},{"style":629},[1369],{"type":557,"value":1370},"iterator",{"type":551,"tag":570,"props":1372,"children":1373},{"style":635},[1374],{"type":557,"value":1375},"]:",{"type":551,"tag":570,"props":1377,"children":1378},{"style":623},[1379],{"type":557,"value":881},{"type":551,"tag":570,"props":1381,"children":1382},{"style":635},[1383],{"type":557,"value":886},{"type":551,"tag":570,"props":1385,"children":1386},{"style":635},[1387],{"type":557,"value":819},{"type":551,"tag":570,"props":1389,"children":1390},{"class":572,"line":926},[1391,1396,1400,1405,1409,1413,1418,1422,1426,1432],{"type":551,"tag":570,"props":1392,"children":1393},{"style":629},[1394],{"type":557,"value":1395},"      console",{"type":551,"tag":570,"props":1397,"children":1398},{"style":635},[1399],{"type":557,"value":713},{"type":551,"tag":570,"props":1401,"children":1402},{"style":641},[1403],{"type":557,"value":1404},"log",{"type":551,"tag":570,"props":1406,"children":1407},{"style":635},[1408],{"type":557,"value":804},{"type":551,"tag":570,"props":1410,"children":1411},{"style":652},[1412],{"type":557,"value":655},{"type":551,"tag":570,"props":1414,"children":1415},{"style":658},[1416],{"type":557,"value":1417},"返回的迭代器:",{"type":551,"tag":570,"props":1419,"children":1420},{"style":652},[1421],{"type":557,"value":655},{"type":551,"tag":570,"props":1423,"children":1424},{"style":635},[1425],{"type":557,"value":670},{"type":551,"tag":570,"props":1427,"children":1429},{"style":1428},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[1430],{"type":557,"value":1431}," this",{"type":551,"tag":570,"props":1433,"children":1434},{"style":635},[1435],{"type":557,"value":1436},");\n",{"type":551,"tag":570,"props":1438,"children":1439},{"class":572,"line":992},[1440,1444,1448,1453],{"type":551,"tag":570,"props":1441,"children":1442},{"style":855},[1443],{"type":557,"value":899},{"type":551,"tag":570,"props":1445,"children":1446},{"style":1428},[1447],{"type":557,"value":1431},{"type":551,"tag":570,"props":1449,"children":1450},{"style":635},[1451],{"type":557,"value":1452},";",{"type":551,"tag":570,"props":1454,"children":1455},{"style":577},[1456],{"type":557,"value":1457}," // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n",{"type":551,"tag":570,"props":1459,"children":1460},{"class":572,"line":1040},[1461],{"type":551,"tag":570,"props":1462,"children":1463},{"style":635},[1464],{"type":557,"value":1046},{"type":551,"tag":570,"props":1466,"children":1467},{"class":572,"line":1049},[1468],{"type":551,"tag":570,"props":1469,"children":1470},{"style":635},[1471],{"type":557,"value":1055},{"type":551,"tag":570,"props":1473,"children":1474},{"class":572,"line":1058},[1475],{"type":551,"tag":570,"props":1476,"children":1477},{"style":635},[1478],{"type":557,"value":1064},{"type":551,"tag":570,"props":1480,"children":1482},{"class":572,"line":1481},22,[1483],{"type":551,"tag":570,"props":1484,"children":1485},{"emptyLinePlaceholder":696},[1486],{"type":557,"value":699},{"type":551,"tag":570,"props":1488,"children":1490},{"class":572,"line":1489},23,[1491,1495,1500,1504,1508,1512,1517,1521,1526,1530,1535],{"type":551,"tag":570,"props":1492,"children":1493},{"style":623},[1494],{"type":557,"value":626},{"type":551,"tag":570,"props":1496,"children":1497},{"style":629},[1498],{"type":557,"value":1499}," iterator",{"type":551,"tag":570,"props":1501,"children":1502},{"style":635},[1503],{"type":557,"value":638},{"type":551,"tag":570,"props":1505,"children":1506},{"style":641},[1507],{"type":557,"value":1143},{"type":551,"tag":570,"props":1509,"children":1510},{"style":635},[1511],{"type":557,"value":649},{"type":551,"tag":570,"props":1513,"children":1514},{"style":840},[1515],{"type":557,"value":1516},"1",{"type":551,"tag":570,"props":1518,"children":1519},{"style":635},[1520],{"type":557,"value":670},{"type":551,"tag":570,"props":1522,"children":1523},{"style":840},[1524],{"type":557,"value":1525}," 2",{"type":551,"tag":570,"props":1527,"children":1528},{"style":635},[1529],{"type":557,"value":670},{"type":551,"tag":570,"props":1531,"children":1532},{"style":840},[1533],{"type":557,"value":1534}," 3",{"type":551,"tag":570,"props":1536,"children":1537},{"style":635},[1538],{"type":557,"value":689},{"type":551,"tag":570,"props":1540,"children":1542},{"class":572,"line":1541},24,[1543,1548,1552,1556,1561,1565],{"type":551,"tag":570,"props":1544,"children":1545},{"style":629},[1546],{"type":557,"value":1547},"console",{"type":551,"tag":570,"props":1549,"children":1550},{"style":635},[1551],{"type":557,"value":713},{"type":551,"tag":570,"props":1553,"children":1554},{"style":641},[1555],{"type":557,"value":1404},{"type":551,"tag":570,"props":1557,"children":1558},{"style":635},[1559],{"type":557,"value":1560},"(...",{"type":551,"tag":570,"props":1562,"children":1563},{"style":629},[1564],{"type":557,"value":1370},{"type":551,"tag":570,"props":1566,"children":1567},{"style":635},[1568],{"type":557,"value":1436},{"type":551,"tag":1570,"props":1571,"children":1572},"style",{},[1573],{"type":557,"value":1574},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":546,"searchDepth":610,"depth":610,"links":1576},[1577,1578],{"id":554,"depth":583,"text":554},{"id":1067,"depth":583,"text":1067},"markdown","content:3.code-assessment:1.source:1.native-api:8.iterator.md","content","3.code-assessment/1.source/1.native-api/8.iterator.md","md",[1585,1587],{"_path":330,"title":329,"description":1586},"JSON.stringify() 方法将一个 js 对象或值转换为 json 字符串，如果指定了一个 replacer 函数，则可以选择性地替换值，或者指定的 replacer 是数组，则可选择性地仅包含数组指定的属性。",{"_path":336,"title":335,"description":546},1714099682858]