[{"data":1,"prerenderedAt":1597},["Reactive",2],{"navigation":3,"/code-assessment/source/native-api/iterator":552,"/code-assessment/source/native-api/iterator-surround":1593},[4,272,311,529,537],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":310},"八股文","/endorsement",[276,286,297],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"构建工具","/endorsement/build-tools",[290],{"title":291,"_path":292,"children":293},"Webpack","/endorsement/build-tools/webpack",[294],{"title":295,"_path":296},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":298,"_path":299,"children":300},"Html","/endorsement/html",[301,304,307],{"title":302,"_path":303},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":305,"_path":306},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":308,"_path":309},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":312,"_path":313,"children":314,"icon":528},"代码考核","/code-assessment",[315,420,521],{"title":316,"_path":317,"children":318},"源码实现","/code-assessment/source",[319,353,369,397,404,411,414,417],{"title":320,"_path":321,"children":322},"原生 api","/code-assessment/source/native-api",[323,326,329,332,335,338,341,344,347,350],{"title":324,"_path":325},"polyfill","/code-assessment/source/native-api/polyfill",{"title":327,"_path":328},"ajax","/code-assessment/source/native-api/ajax",{"title":330,"_path":331},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":333,"_path":334},"new 操作符","/code-assessment/source/native-api/new",{"title":336,"_path":337},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":339,"_path":340},"定时器","/code-assessment/source/native-api/timer",{"title":342,"_path":343},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":345,"_path":346},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":348,"_path":349},"extends","/code-assessment/source/native-api/extends",{"title":351,"_path":352},"Promise","/code-assessment/source/native-api/promise",{"title":354,"_path":355,"children":356},"函数 Function","/code-assessment/source/function",[357,360,363,366],{"title":358,"_path":359},"函数防抖","/code-assessment/source/function/debounce",{"title":361,"_path":362},"函数节流","/code-assessment/source/function/throttle",{"title":364,"_path":365},"函数柯理化","/code-assessment/source/function/curry",{"title":367,"_path":368},"函数睡眠","/code-assessment/source/function/sleep",{"title":370,"_path":371,"children":372},"数组 Array","/code-assessment/source/array",[373,376,379,382,385,388,391,394],{"title":374,"_path":375},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":377,"_path":378},"数组扁平化","/code-assessment/source/array/flat",{"title":380,"_path":381},"原型方法","/code-assessment/source/array/prototype-method",{"title":383,"_path":384},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":386,"_path":387},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":389,"_path":390},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":392,"_path":393},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":395,"_path":396},"二维数组","/code-assessment/source/array/2d-array",{"title":398,"_path":399,"children":400},"字符串 String","/code-assessment/source/string",[401],{"title":402,"_path":403},"repeat()","/code-assessment/source/string/repeat",{"title":405,"_path":406,"children":407},"集合 Set","/code-assessment/source/set",[408],{"title":409,"_path":410},"遍历集合","/code-assessment/source/set/traverse",{"title":412,"_path":413},"获取通用类型","/code-assessment/source/get-generic-type",{"title":415,"_path":416},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":418,"_path":419},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":421,"_path":422,"children":423},"业务场景","/code-assessment/scene",[424,454,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518],{"title":351,"_path":425,"children":426},"/code-assessment/scene/promise",[427,430,433,436,439,442,445,448,451],{"title":428,"_path":429},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":431,"_path":432},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":434,"_path":435},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":437,"_path":438},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":440,"_path":441},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":443,"_path":444},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":446,"_path":447},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":449,"_path":450},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":452,"_path":453},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":455,"_path":456,"children":457},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[458,461],{"title":459,"_path":460},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":462,"_path":463},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":465,"_path":466},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":468,"_path":469},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":471,"_path":472},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":474,"_path":475},"倒计时","/code-assessment/scene/countdown",{"title":477,"_path":478},"日期格式化","/code-assessment/scene/date-format",{"title":480,"_path":481},"实现前端路由","/code-assessment/scene/frontend-route",{"title":483,"_path":484},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":486,"_path":487},"lodash.get","/code-assessment/scene/lodash-get",{"title":489,"_path":490},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":492,"_path":493},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":495,"_path":496},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":498,"_path":499},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":501,"_path":502},"随机数","/code-assessment/scene/random-number",{"title":504,"_path":505},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":507,"_path":508},"sku 算法实现","/code-assessment/scene/sku",{"title":510,"_path":511},"整数分割","/code-assessment/scene/split-number",{"title":513,"_path":514},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":516,"_path":517},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":519,"_path":520},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":522,"_path":523,"children":524},"Ts 类型挑战","/code-assessment/type-challeges",[525],{"title":526,"_path":527},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":530,"_path":531,"children":532,"icon":536},"项目","/project",[533],{"title":534,"_path":535},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":538,"_path":539,"children":540,"icon":551},"后端语言","/backend-languages",[541],{"title":542,"_path":543,"children":544},"Python","/backend-languages/python",[545,548],{"title":546,"_path":547},"基础","/backend-languages/python/base",{"title":549,"_path":550},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":346,"_dir":553,"_draft":554,"_partial":554,"_locale":555,"title":345,"description":555,"body":556,"_type":1588,"_id":1589,"_source":1590,"_file":1591,"_extension":1592},"native-api",false,"",{"type":557,"children":558,"toc":1584},"root",[559,567,1074,1079,1578],{"type":560,"tag":561,"props":562,"children":564},"element","h2",{"id":563},"实现迭代器函数",[565],{"type":566,"value":563},"text",{"type":560,"tag":568,"props":569,"children":573},"pre",{"className":570,"code":571,"language":572,"meta":555,"style":555},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/*\n * 这是一个手写的迭代器(Iterator)\n * 满足迭代器协议的对象。\n * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n */\nvar it = makeIterator([\"a\", \"b\"]);\n\nit.next(); // { value: \"a\", done: false }\nit.next(); // { value: \"b\", done: false }\nit.next(); // { value: undefined, done: true }\n\nfunction makeIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n  };\n}\n","js",[574],{"type":560,"tag":575,"props":576,"children":577},"code",{"__ignoreMap":555},[578,590,599,608,617,626,699,709,738,763,788,796,829,858,872,900,933,999,1047,1056,1065],{"type":560,"tag":579,"props":580,"children":583},"span",{"class":581,"line":582},"line",1,[584],{"type":560,"tag":579,"props":585,"children":587},{"style":586},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[588],{"type":566,"value":589},"/*\n",{"type":560,"tag":579,"props":591,"children":593},{"class":581,"line":592},2,[594],{"type":560,"tag":579,"props":595,"children":596},{"style":586},[597],{"type":566,"value":598}," * 这是一个手写的迭代器(Iterator)\n",{"type":560,"tag":579,"props":600,"children":602},{"class":581,"line":601},3,[603],{"type":560,"tag":579,"props":604,"children":605},{"style":586},[606],{"type":566,"value":607}," * 满足迭代器协议的对象。\n",{"type":560,"tag":579,"props":609,"children":611},{"class":581,"line":610},4,[612],{"type":560,"tag":579,"props":613,"children":614},{"style":586},[615],{"type":566,"value":616}," * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n",{"type":560,"tag":579,"props":618,"children":620},{"class":581,"line":619},5,[621],{"type":560,"tag":579,"props":622,"children":623},{"style":586},[624],{"type":566,"value":625}," */\n",{"type":560,"tag":579,"props":627,"children":629},{"class":581,"line":628},6,[630,636,642,648,654,659,665,671,675,680,685,690,694],{"type":560,"tag":579,"props":631,"children":633},{"style":632},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[634],{"type":566,"value":635},"var",{"type":560,"tag":579,"props":637,"children":639},{"style":638},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[640],{"type":566,"value":641}," it",{"type":560,"tag":579,"props":643,"children":645},{"style":644},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[646],{"type":566,"value":647}," =",{"type":560,"tag":579,"props":649,"children":651},{"style":650},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[652],{"type":566,"value":653}," makeIterator",{"type":560,"tag":579,"props":655,"children":656},{"style":644},[657],{"type":566,"value":658},"([",{"type":560,"tag":579,"props":660,"children":662},{"style":661},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[663],{"type":566,"value":664},"\"",{"type":560,"tag":579,"props":666,"children":668},{"style":667},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[669],{"type":566,"value":670},"a",{"type":560,"tag":579,"props":672,"children":673},{"style":661},[674],{"type":566,"value":664},{"type":560,"tag":579,"props":676,"children":677},{"style":644},[678],{"type":566,"value":679},",",{"type":560,"tag":579,"props":681,"children":682},{"style":661},[683],{"type":566,"value":684}," \"",{"type":560,"tag":579,"props":686,"children":687},{"style":667},[688],{"type":566,"value":689},"b",{"type":560,"tag":579,"props":691,"children":692},{"style":661},[693],{"type":566,"value":664},{"type":560,"tag":579,"props":695,"children":696},{"style":644},[697],{"type":566,"value":698},"]);\n",{"type":560,"tag":579,"props":700,"children":702},{"class":581,"line":701},7,[703],{"type":560,"tag":579,"props":704,"children":706},{"emptyLinePlaceholder":705},true,[707],{"type":566,"value":708},"\n",{"type":560,"tag":579,"props":710,"children":712},{"class":581,"line":711},8,[713,718,723,728,733],{"type":560,"tag":579,"props":714,"children":715},{"style":638},[716],{"type":566,"value":717},"it",{"type":560,"tag":579,"props":719,"children":720},{"style":644},[721],{"type":566,"value":722},".",{"type":560,"tag":579,"props":724,"children":725},{"style":650},[726],{"type":566,"value":727},"next",{"type":560,"tag":579,"props":729,"children":730},{"style":644},[731],{"type":566,"value":732},"();",{"type":560,"tag":579,"props":734,"children":735},{"style":586},[736],{"type":566,"value":737}," // { value: \"a\", done: false }\n",{"type":560,"tag":579,"props":739,"children":741},{"class":581,"line":740},9,[742,746,750,754,758],{"type":560,"tag":579,"props":743,"children":744},{"style":638},[745],{"type":566,"value":717},{"type":560,"tag":579,"props":747,"children":748},{"style":644},[749],{"type":566,"value":722},{"type":560,"tag":579,"props":751,"children":752},{"style":650},[753],{"type":566,"value":727},{"type":560,"tag":579,"props":755,"children":756},{"style":644},[757],{"type":566,"value":732},{"type":560,"tag":579,"props":759,"children":760},{"style":586},[761],{"type":566,"value":762}," // { value: \"b\", done: false }\n",{"type":560,"tag":579,"props":764,"children":766},{"class":581,"line":765},10,[767,771,775,779,783],{"type":560,"tag":579,"props":768,"children":769},{"style":638},[770],{"type":566,"value":717},{"type":560,"tag":579,"props":772,"children":773},{"style":644},[774],{"type":566,"value":722},{"type":560,"tag":579,"props":776,"children":777},{"style":650},[778],{"type":566,"value":727},{"type":560,"tag":579,"props":780,"children":781},{"style":644},[782],{"type":566,"value":732},{"type":560,"tag":579,"props":784,"children":785},{"style":586},[786],{"type":566,"value":787}," // { value: undefined, done: true }\n",{"type":560,"tag":579,"props":789,"children":791},{"class":581,"line":790},11,[792],{"type":560,"tag":579,"props":793,"children":794},{"emptyLinePlaceholder":705},[795],{"type":566,"value":708},{"type":560,"tag":579,"props":797,"children":799},{"class":581,"line":798},12,[800,805,809,814,819,824],{"type":560,"tag":579,"props":801,"children":802},{"style":632},[803],{"type":566,"value":804},"function",{"type":560,"tag":579,"props":806,"children":807},{"style":650},[808],{"type":566,"value":653},{"type":560,"tag":579,"props":810,"children":811},{"style":644},[812],{"type":566,"value":813},"(",{"type":560,"tag":579,"props":815,"children":816},{"style":638},[817],{"type":566,"value":818},"array",{"type":560,"tag":579,"props":820,"children":821},{"style":644},[822],{"type":566,"value":823},")",{"type":560,"tag":579,"props":825,"children":826},{"style":644},[827],{"type":566,"value":828}," {\n",{"type":560,"tag":579,"props":830,"children":832},{"class":581,"line":831},13,[833,838,843,847,853],{"type":560,"tag":579,"props":834,"children":835},{"style":632},[836],{"type":566,"value":837},"  var",{"type":560,"tag":579,"props":839,"children":840},{"style":638},[841],{"type":566,"value":842}," nextIndex",{"type":560,"tag":579,"props":844,"children":845},{"style":644},[846],{"type":566,"value":647},{"type":560,"tag":579,"props":848,"children":850},{"style":849},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[851],{"type":566,"value":852}," 0",{"type":560,"tag":579,"props":854,"children":855},{"style":644},[856],{"type":566,"value":857},";\n",{"type":560,"tag":579,"props":859,"children":861},{"class":581,"line":860},14,[862,868],{"type":560,"tag":579,"props":863,"children":865},{"style":864},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[866],{"type":566,"value":867},"  return",{"type":560,"tag":579,"props":869,"children":870},{"style":644},[871],{"type":566,"value":828},{"type":560,"tag":579,"props":873,"children":875},{"class":581,"line":874},15,[876,881,886,891,896],{"type":560,"tag":579,"props":877,"children":878},{"style":650},[879],{"type":566,"value":880},"    next",{"type":560,"tag":579,"props":882,"children":883},{"style":644},[884],{"type":566,"value":885},":",{"type":560,"tag":579,"props":887,"children":888},{"style":632},[889],{"type":566,"value":890}," function",{"type":560,"tag":579,"props":892,"children":893},{"style":644},[894],{"type":566,"value":895}," ()",{"type":560,"tag":579,"props":897,"children":898},{"style":644},[899],{"type":566,"value":828},{"type":560,"tag":579,"props":901,"children":903},{"class":581,"line":902},16,[904,909,913,918,923,927],{"type":560,"tag":579,"props":905,"children":906},{"style":864},[907],{"type":566,"value":908},"      return",{"type":560,"tag":579,"props":910,"children":911},{"style":638},[912],{"type":566,"value":842},{"type":560,"tag":579,"props":914,"children":915},{"style":644},[916],{"type":566,"value":917}," \u003C",{"type":560,"tag":579,"props":919,"children":920},{"style":638},[921],{"type":566,"value":922}," array",{"type":560,"tag":579,"props":924,"children":925},{"style":644},[926],{"type":566,"value":722},{"type":560,"tag":579,"props":928,"children":930},{"style":929},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[931],{"type":566,"value":932},"length\n",{"type":560,"tag":579,"props":934,"children":936},{"class":581,"line":935},17,[937,942,947,952,956,960,965,970,975,980,985,989,994],{"type":560,"tag":579,"props":938,"children":939},{"style":632},[940],{"type":566,"value":941},"        ?",{"type":560,"tag":579,"props":943,"children":944},{"style":644},[945],{"type":566,"value":946}," {",{"type":560,"tag":579,"props":948,"children":949},{"style":929},[950],{"type":566,"value":951}," value",{"type":560,"tag":579,"props":953,"children":954},{"style":644},[955],{"type":566,"value":885},{"type":560,"tag":579,"props":957,"children":958},{"style":638},[959],{"type":566,"value":922},{"type":560,"tag":579,"props":961,"children":962},{"style":644},[963],{"type":566,"value":964},"[",{"type":560,"tag":579,"props":966,"children":967},{"style":638},[968],{"type":566,"value":969},"nextIndex",{"type":560,"tag":579,"props":971,"children":972},{"style":632},[973],{"type":566,"value":974},"++",{"type":560,"tag":579,"props":976,"children":977},{"style":644},[978],{"type":566,"value":979},"],",{"type":560,"tag":579,"props":981,"children":982},{"style":929},[983],{"type":566,"value":984}," done",{"type":560,"tag":579,"props":986,"children":987},{"style":644},[988],{"type":566,"value":885},{"type":560,"tag":579,"props":990,"children":991},{"style":864},[992],{"type":566,"value":993}," false",{"type":560,"tag":579,"props":995,"children":996},{"style":644},[997],{"type":566,"value":998}," }\n",{"type":560,"tag":579,"props":1000,"children":1002},{"class":581,"line":1001},18,[1003,1008,1012,1016,1020,1025,1029,1033,1037,1042],{"type":560,"tag":579,"props":1004,"children":1005},{"style":632},[1006],{"type":566,"value":1007},"        :",{"type":560,"tag":579,"props":1009,"children":1010},{"style":644},[1011],{"type":566,"value":946},{"type":560,"tag":579,"props":1013,"children":1014},{"style":929},[1015],{"type":566,"value":951},{"type":560,"tag":579,"props":1017,"children":1018},{"style":644},[1019],{"type":566,"value":885},{"type":560,"tag":579,"props":1021,"children":1022},{"style":632},[1023],{"type":566,"value":1024}," undefined",{"type":560,"tag":579,"props":1026,"children":1027},{"style":644},[1028],{"type":566,"value":679},{"type":560,"tag":579,"props":1030,"children":1031},{"style":929},[1032],{"type":566,"value":984},{"type":560,"tag":579,"props":1034,"children":1035},{"style":644},[1036],{"type":566,"value":885},{"type":560,"tag":579,"props":1038,"children":1039},{"style":864},[1040],{"type":566,"value":1041}," true",{"type":560,"tag":579,"props":1043,"children":1044},{"style":644},[1045],{"type":566,"value":1046}," };\n",{"type":560,"tag":579,"props":1048,"children":1050},{"class":581,"line":1049},19,[1051],{"type":560,"tag":579,"props":1052,"children":1053},{"style":644},[1054],{"type":566,"value":1055},"    },\n",{"type":560,"tag":579,"props":1057,"children":1059},{"class":581,"line":1058},20,[1060],{"type":560,"tag":579,"props":1061,"children":1062},{"style":644},[1063],{"type":566,"value":1064},"  };\n",{"type":560,"tag":579,"props":1066,"children":1068},{"class":581,"line":1067},21,[1069],{"type":560,"tag":579,"props":1070,"children":1071},{"style":644},[1072],{"type":566,"value":1073},"}\n",{"type":560,"tag":561,"props":1075,"children":1077},{"id":1076},"可迭代的迭代器",[1078],{"type":566,"value":1076},{"type":560,"tag":568,"props":1080,"children":1082},{"className":570,"code":1081,"language":572,"meta":555,"style":555},"/**\n * 使迭代器可迭代\n * makeIterator 函数生成的迭代器并没有实现可迭代协议\n * 所以不能在 for...of 等语法中使用。\n * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n * 从新名了下函数名称 createIterator\n */\nfunction createIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n    [Symbol.iterator]: function () {\n      console.log(\"返回的迭代器:\", this);\n      return this; // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n    },\n  };\n}\n\nvar iterator = createIterator([1, 2, 3]);\nconsole.log(...iterator);\n",[1083],{"type":560,"tag":575,"props":1084,"children":1085},{"__ignoreMap":555},[1086,1094,1102,1110,1118,1126,1134,1141,1169,1192,1203,1226,1253,1308,1351,1358,1397,1446,1467,1474,1481,1488,1496,1548],{"type":560,"tag":579,"props":1087,"children":1088},{"class":581,"line":582},[1089],{"type":560,"tag":579,"props":1090,"children":1091},{"style":586},[1092],{"type":566,"value":1093},"/**\n",{"type":560,"tag":579,"props":1095,"children":1096},{"class":581,"line":592},[1097],{"type":560,"tag":579,"props":1098,"children":1099},{"style":586},[1100],{"type":566,"value":1101}," * 使迭代器可迭代\n",{"type":560,"tag":579,"props":1103,"children":1104},{"class":581,"line":601},[1105],{"type":560,"tag":579,"props":1106,"children":1107},{"style":586},[1108],{"type":566,"value":1109}," * makeIterator 函数生成的迭代器并没有实现可迭代协议\n",{"type":560,"tag":579,"props":1111,"children":1112},{"class":581,"line":610},[1113],{"type":560,"tag":579,"props":1114,"children":1115},{"style":586},[1116],{"type":566,"value":1117}," * 所以不能在 for...of 等语法中使用。\n",{"type":560,"tag":579,"props":1119,"children":1120},{"class":581,"line":619},[1121],{"type":560,"tag":579,"props":1122,"children":1123},{"style":586},[1124],{"type":566,"value":1125}," * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n",{"type":560,"tag":579,"props":1127,"children":1128},{"class":581,"line":628},[1129],{"type":560,"tag":579,"props":1130,"children":1131},{"style":586},[1132],{"type":566,"value":1133}," * 从新名了下函数名称 createIterator\n",{"type":560,"tag":579,"props":1135,"children":1136},{"class":581,"line":701},[1137],{"type":560,"tag":579,"props":1138,"children":1139},{"style":586},[1140],{"type":566,"value":625},{"type":560,"tag":579,"props":1142,"children":1143},{"class":581,"line":711},[1144,1148,1153,1157,1161,1165],{"type":560,"tag":579,"props":1145,"children":1146},{"style":632},[1147],{"type":566,"value":804},{"type":560,"tag":579,"props":1149,"children":1150},{"style":650},[1151],{"type":566,"value":1152}," createIterator",{"type":560,"tag":579,"props":1154,"children":1155},{"style":644},[1156],{"type":566,"value":813},{"type":560,"tag":579,"props":1158,"children":1159},{"style":638},[1160],{"type":566,"value":818},{"type":560,"tag":579,"props":1162,"children":1163},{"style":644},[1164],{"type":566,"value":823},{"type":560,"tag":579,"props":1166,"children":1167},{"style":644},[1168],{"type":566,"value":828},{"type":560,"tag":579,"props":1170,"children":1171},{"class":581,"line":740},[1172,1176,1180,1184,1188],{"type":560,"tag":579,"props":1173,"children":1174},{"style":632},[1175],{"type":566,"value":837},{"type":560,"tag":579,"props":1177,"children":1178},{"style":638},[1179],{"type":566,"value":842},{"type":560,"tag":579,"props":1181,"children":1182},{"style":644},[1183],{"type":566,"value":647},{"type":560,"tag":579,"props":1185,"children":1186},{"style":849},[1187],{"type":566,"value":852},{"type":560,"tag":579,"props":1189,"children":1190},{"style":644},[1191],{"type":566,"value":857},{"type":560,"tag":579,"props":1193,"children":1194},{"class":581,"line":765},[1195,1199],{"type":560,"tag":579,"props":1196,"children":1197},{"style":864},[1198],{"type":566,"value":867},{"type":560,"tag":579,"props":1200,"children":1201},{"style":644},[1202],{"type":566,"value":828},{"type":560,"tag":579,"props":1204,"children":1205},{"class":581,"line":790},[1206,1210,1214,1218,1222],{"type":560,"tag":579,"props":1207,"children":1208},{"style":650},[1209],{"type":566,"value":880},{"type":560,"tag":579,"props":1211,"children":1212},{"style":644},[1213],{"type":566,"value":885},{"type":560,"tag":579,"props":1215,"children":1216},{"style":632},[1217],{"type":566,"value":890},{"type":560,"tag":579,"props":1219,"children":1220},{"style":644},[1221],{"type":566,"value":895},{"type":560,"tag":579,"props":1223,"children":1224},{"style":644},[1225],{"type":566,"value":828},{"type":560,"tag":579,"props":1227,"children":1228},{"class":581,"line":798},[1229,1233,1237,1241,1245,1249],{"type":560,"tag":579,"props":1230,"children":1231},{"style":864},[1232],{"type":566,"value":908},{"type":560,"tag":579,"props":1234,"children":1235},{"style":638},[1236],{"type":566,"value":842},{"type":560,"tag":579,"props":1238,"children":1239},{"style":644},[1240],{"type":566,"value":917},{"type":560,"tag":579,"props":1242,"children":1243},{"style":638},[1244],{"type":566,"value":922},{"type":560,"tag":579,"props":1246,"children":1247},{"style":644},[1248],{"type":566,"value":722},{"type":560,"tag":579,"props":1250,"children":1251},{"style":929},[1252],{"type":566,"value":932},{"type":560,"tag":579,"props":1254,"children":1255},{"class":581,"line":831},[1256,1260,1264,1268,1272,1276,1280,1284,1288,1292,1296,1300,1304],{"type":560,"tag":579,"props":1257,"children":1258},{"style":632},[1259],{"type":566,"value":941},{"type":560,"tag":579,"props":1261,"children":1262},{"style":644},[1263],{"type":566,"value":946},{"type":560,"tag":579,"props":1265,"children":1266},{"style":929},[1267],{"type":566,"value":951},{"type":560,"tag":579,"props":1269,"children":1270},{"style":644},[1271],{"type":566,"value":885},{"type":560,"tag":579,"props":1273,"children":1274},{"style":638},[1275],{"type":566,"value":922},{"type":560,"tag":579,"props":1277,"children":1278},{"style":644},[1279],{"type":566,"value":964},{"type":560,"tag":579,"props":1281,"children":1282},{"style":638},[1283],{"type":566,"value":969},{"type":560,"tag":579,"props":1285,"children":1286},{"style":632},[1287],{"type":566,"value":974},{"type":560,"tag":579,"props":1289,"children":1290},{"style":644},[1291],{"type":566,"value":979},{"type":560,"tag":579,"props":1293,"children":1294},{"style":929},[1295],{"type":566,"value":984},{"type":560,"tag":579,"props":1297,"children":1298},{"style":644},[1299],{"type":566,"value":885},{"type":560,"tag":579,"props":1301,"children":1302},{"style":864},[1303],{"type":566,"value":993},{"type":560,"tag":579,"props":1305,"children":1306},{"style":644},[1307],{"type":566,"value":998},{"type":560,"tag":579,"props":1309,"children":1310},{"class":581,"line":860},[1311,1315,1319,1323,1327,1331,1335,1339,1343,1347],{"type":560,"tag":579,"props":1312,"children":1313},{"style":632},[1314],{"type":566,"value":1007},{"type":560,"tag":579,"props":1316,"children":1317},{"style":644},[1318],{"type":566,"value":946},{"type":560,"tag":579,"props":1320,"children":1321},{"style":929},[1322],{"type":566,"value":951},{"type":560,"tag":579,"props":1324,"children":1325},{"style":644},[1326],{"type":566,"value":885},{"type":560,"tag":579,"props":1328,"children":1329},{"style":632},[1330],{"type":566,"value":1024},{"type":560,"tag":579,"props":1332,"children":1333},{"style":644},[1334],{"type":566,"value":679},{"type":560,"tag":579,"props":1336,"children":1337},{"style":929},[1338],{"type":566,"value":984},{"type":560,"tag":579,"props":1340,"children":1341},{"style":644},[1342],{"type":566,"value":885},{"type":560,"tag":579,"props":1344,"children":1345},{"style":864},[1346],{"type":566,"value":1041},{"type":560,"tag":579,"props":1348,"children":1349},{"style":644},[1350],{"type":566,"value":1046},{"type":560,"tag":579,"props":1352,"children":1353},{"class":581,"line":874},[1354],{"type":560,"tag":579,"props":1355,"children":1356},{"style":644},[1357],{"type":566,"value":1055},{"type":560,"tag":579,"props":1359,"children":1360},{"class":581,"line":902},[1361,1366,1371,1375,1380,1385,1389,1393],{"type":560,"tag":579,"props":1362,"children":1363},{"style":644},[1364],{"type":566,"value":1365},"    [",{"type":560,"tag":579,"props":1367,"children":1368},{"style":638},[1369],{"type":566,"value":1370},"Symbol",{"type":560,"tag":579,"props":1372,"children":1373},{"style":644},[1374],{"type":566,"value":722},{"type":560,"tag":579,"props":1376,"children":1377},{"style":638},[1378],{"type":566,"value":1379},"iterator",{"type":560,"tag":579,"props":1381,"children":1382},{"style":644},[1383],{"type":566,"value":1384},"]:",{"type":560,"tag":579,"props":1386,"children":1387},{"style":632},[1388],{"type":566,"value":890},{"type":560,"tag":579,"props":1390,"children":1391},{"style":644},[1392],{"type":566,"value":895},{"type":560,"tag":579,"props":1394,"children":1395},{"style":644},[1396],{"type":566,"value":828},{"type":560,"tag":579,"props":1398,"children":1399},{"class":581,"line":935},[1400,1405,1409,1414,1418,1422,1427,1431,1435,1441],{"type":560,"tag":579,"props":1401,"children":1402},{"style":638},[1403],{"type":566,"value":1404},"      console",{"type":560,"tag":579,"props":1406,"children":1407},{"style":644},[1408],{"type":566,"value":722},{"type":560,"tag":579,"props":1410,"children":1411},{"style":650},[1412],{"type":566,"value":1413},"log",{"type":560,"tag":579,"props":1415,"children":1416},{"style":644},[1417],{"type":566,"value":813},{"type":560,"tag":579,"props":1419,"children":1420},{"style":661},[1421],{"type":566,"value":664},{"type":560,"tag":579,"props":1423,"children":1424},{"style":667},[1425],{"type":566,"value":1426},"返回的迭代器:",{"type":560,"tag":579,"props":1428,"children":1429},{"style":661},[1430],{"type":566,"value":664},{"type":560,"tag":579,"props":1432,"children":1433},{"style":644},[1434],{"type":566,"value":679},{"type":560,"tag":579,"props":1436,"children":1438},{"style":1437},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[1439],{"type":566,"value":1440}," this",{"type":560,"tag":579,"props":1442,"children":1443},{"style":644},[1444],{"type":566,"value":1445},");\n",{"type":560,"tag":579,"props":1447,"children":1448},{"class":581,"line":1001},[1449,1453,1457,1462],{"type":560,"tag":579,"props":1450,"children":1451},{"style":864},[1452],{"type":566,"value":908},{"type":560,"tag":579,"props":1454,"children":1455},{"style":1437},[1456],{"type":566,"value":1440},{"type":560,"tag":579,"props":1458,"children":1459},{"style":644},[1460],{"type":566,"value":1461},";",{"type":560,"tag":579,"props":1463,"children":1464},{"style":586},[1465],{"type":566,"value":1466}," // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n",{"type":560,"tag":579,"props":1468,"children":1469},{"class":581,"line":1049},[1470],{"type":560,"tag":579,"props":1471,"children":1472},{"style":644},[1473],{"type":566,"value":1055},{"type":560,"tag":579,"props":1475,"children":1476},{"class":581,"line":1058},[1477],{"type":560,"tag":579,"props":1478,"children":1479},{"style":644},[1480],{"type":566,"value":1064},{"type":560,"tag":579,"props":1482,"children":1483},{"class":581,"line":1067},[1484],{"type":560,"tag":579,"props":1485,"children":1486},{"style":644},[1487],{"type":566,"value":1073},{"type":560,"tag":579,"props":1489,"children":1491},{"class":581,"line":1490},22,[1492],{"type":560,"tag":579,"props":1493,"children":1494},{"emptyLinePlaceholder":705},[1495],{"type":566,"value":708},{"type":560,"tag":579,"props":1497,"children":1499},{"class":581,"line":1498},23,[1500,1504,1509,1513,1517,1521,1526,1530,1535,1539,1544],{"type":560,"tag":579,"props":1501,"children":1502},{"style":632},[1503],{"type":566,"value":635},{"type":560,"tag":579,"props":1505,"children":1506},{"style":638},[1507],{"type":566,"value":1508}," iterator",{"type":560,"tag":579,"props":1510,"children":1511},{"style":644},[1512],{"type":566,"value":647},{"type":560,"tag":579,"props":1514,"children":1515},{"style":650},[1516],{"type":566,"value":1152},{"type":560,"tag":579,"props":1518,"children":1519},{"style":644},[1520],{"type":566,"value":658},{"type":560,"tag":579,"props":1522,"children":1523},{"style":849},[1524],{"type":566,"value":1525},"1",{"type":560,"tag":579,"props":1527,"children":1528},{"style":644},[1529],{"type":566,"value":679},{"type":560,"tag":579,"props":1531,"children":1532},{"style":849},[1533],{"type":566,"value":1534}," 2",{"type":560,"tag":579,"props":1536,"children":1537},{"style":644},[1538],{"type":566,"value":679},{"type":560,"tag":579,"props":1540,"children":1541},{"style":849},[1542],{"type":566,"value":1543}," 3",{"type":560,"tag":579,"props":1545,"children":1546},{"style":644},[1547],{"type":566,"value":698},{"type":560,"tag":579,"props":1549,"children":1551},{"class":581,"line":1550},24,[1552,1557,1561,1565,1570,1574],{"type":560,"tag":579,"props":1553,"children":1554},{"style":638},[1555],{"type":566,"value":1556},"console",{"type":560,"tag":579,"props":1558,"children":1559},{"style":644},[1560],{"type":566,"value":722},{"type":560,"tag":579,"props":1562,"children":1563},{"style":650},[1564],{"type":566,"value":1413},{"type":560,"tag":579,"props":1566,"children":1567},{"style":644},[1568],{"type":566,"value":1569},"(...",{"type":560,"tag":579,"props":1571,"children":1572},{"style":638},[1573],{"type":566,"value":1379},{"type":560,"tag":579,"props":1575,"children":1576},{"style":644},[1577],{"type":566,"value":1445},{"type":560,"tag":1579,"props":1580,"children":1581},"style",{},[1582],{"type":566,"value":1583},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":555,"searchDepth":619,"depth":619,"links":1585},[1586,1587],{"id":563,"depth":592,"text":563},{"id":1076,"depth":592,"text":1076},"markdown","content:3.code-assessment:1.source:1.native-api:8.iterator.md","content","3.code-assessment/1.source/1.native-api/8.iterator.md","md",[1594,1596],{"_path":343,"title":342,"description":1595},"JSON.stringify() 方法将一个 js 对象或值转换为 json 字符串，如果指定了一个 replacer 函数，则可以选择性地替换值，或者指定的 replacer 是数组，则可选择性地仅包含数组指定的属性。",{"_path":349,"title":348,"description":555},1716810729976]