[{"data":1,"prerenderedAt":1596},["Reactive",2],{"navigation":3,"/code-assessment/source/native-api/iterator":551,"/code-assessment/source/native-api/iterator-surround":1592},[4,272,301,519,527,536],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":518},"代码考核","/code-assessment",[305,410,511],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,343,359,387,394,401,404,407],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337,340],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342},"Promise","/code-assessment/source/native-api/promise",{"title":344,"_path":345,"children":346},"函数 Function","/code-assessment/source/function",[347,350,353,356],{"title":348,"_path":349},"函数防抖","/code-assessment/source/function/debounce",{"title":351,"_path":352},"函数节流","/code-assessment/source/function/throttle",{"title":354,"_path":355},"函数柯理化","/code-assessment/source/function/curry",{"title":357,"_path":358},"函数睡眠","/code-assessment/source/function/sleep",{"title":360,"_path":361,"children":362},"数组 Array","/code-assessment/source/array",[363,366,369,372,375,378,381,384],{"title":364,"_path":365},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":367,"_path":368},"数组扁平化","/code-assessment/source/array/flat",{"title":370,"_path":371},"原型方法","/code-assessment/source/array/prototype-method",{"title":373,"_path":374},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":376,"_path":377},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":379,"_path":380},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":382,"_path":383},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":385,"_path":386},"二维数组","/code-assessment/source/array/2d-array",{"title":388,"_path":389,"children":390},"字符串 String","/code-assessment/source/string",[391],{"title":392,"_path":393},"repeat()","/code-assessment/source/string/repeat",{"title":395,"_path":396,"children":397},"集合 Set","/code-assessment/source/set",[398],{"title":399,"_path":400},"遍历集合","/code-assessment/source/set/traverse",{"title":402,"_path":403},"获取通用类型","/code-assessment/source/get-generic-type",{"title":405,"_path":406},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":408,"_path":409},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":411,"_path":412,"children":413},"业务场景","/code-assessment/scene",[414,444,454,457,460,463,466,469,472,475,478,481,484,487,490,493,496,499,502,505,508],{"title":341,"_path":415,"children":416},"/code-assessment/scene/promise",[417,420,423,426,429,432,435,438,441],{"title":418,"_path":419},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":421,"_path":422},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":424,"_path":425},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":427,"_path":428},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":430,"_path":431},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":433,"_path":434},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":436,"_path":437},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":439,"_path":440},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":442,"_path":443},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":445,"_path":446,"children":447},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[448,451],{"title":449,"_path":450},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":452,"_path":453},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":455,"_path":456},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":458,"_path":459},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":461,"_path":462},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":464,"_path":465},"倒计时","/code-assessment/scene/countdown",{"title":467,"_path":468},"日期格式化","/code-assessment/scene/date-format",{"title":470,"_path":471},"实现前端路由","/code-assessment/scene/frontend-route",{"title":473,"_path":474},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":476,"_path":477},"lodash.get","/code-assessment/scene/lodash-get",{"title":479,"_path":480},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":482,"_path":483},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":485,"_path":486},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":488,"_path":489},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":491,"_path":492},"随机数","/code-assessment/scene/random-number",{"title":494,"_path":495},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":497,"_path":498},"sku 算法实现","/code-assessment/scene/sku",{"title":500,"_path":501},"整数分割","/code-assessment/scene/split-number",{"title":503,"_path":504},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":506,"_path":507},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":509,"_path":510},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":512,"_path":513,"children":514},"Ts 类型挑战","/code-assessment/type-challeges",[515],{"title":516,"_path":517},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":520,"_path":521,"children":522,"icon":526},"项目","/project",[523],{"title":524,"_path":525},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":528,"_path":529,"children":530,"icon":535},"设计模式","/design-mode",[531,532],{"title":528,"_path":529},{"title":533,"_path":534},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":537,"_path":538,"children":539,"icon":550},"后端语言","/backend-languages",[540],{"title":541,"_path":542,"children":543},"Python","/backend-languages/python",[544,547],{"title":545,"_path":546},"基础","/backend-languages/python/base",{"title":548,"_path":549},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":336,"_dir":552,"_draft":553,"_partial":553,"_locale":554,"title":335,"description":554,"body":555,"_type":1587,"_id":1588,"_source":1589,"_file":1590,"_extension":1591},"native-api",false,"",{"type":556,"children":557,"toc":1583},"root",[558,566,1073,1078,1577],{"type":559,"tag":560,"props":561,"children":563},"element","h2",{"id":562},"实现迭代器函数",[564],{"type":565,"value":562},"text",{"type":559,"tag":567,"props":568,"children":572},"pre",{"className":569,"code":570,"language":571,"meta":554,"style":554},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/*\n * 这是一个手写的迭代器(Iterator)\n * 满足迭代器协议的对象。\n * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n */\nvar it = makeIterator([\"a\", \"b\"]);\n\nit.next(); // { value: \"a\", done: false }\nit.next(); // { value: \"b\", done: false }\nit.next(); // { value: undefined, done: true }\n\nfunction makeIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n  };\n}\n","js",[573],{"type":559,"tag":574,"props":575,"children":576},"code",{"__ignoreMap":554},[577,589,598,607,616,625,698,708,737,762,787,795,828,857,871,899,932,998,1046,1055,1064],{"type":559,"tag":578,"props":579,"children":582},"span",{"class":580,"line":581},"line",1,[583],{"type":559,"tag":578,"props":584,"children":586},{"style":585},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[587],{"type":565,"value":588},"/*\n",{"type":559,"tag":578,"props":590,"children":592},{"class":580,"line":591},2,[593],{"type":559,"tag":578,"props":594,"children":595},{"style":585},[596],{"type":565,"value":597}," * 这是一个手写的迭代器(Iterator)\n",{"type":559,"tag":578,"props":599,"children":601},{"class":580,"line":600},3,[602],{"type":559,"tag":578,"props":603,"children":604},{"style":585},[605],{"type":565,"value":606}," * 满足迭代器协议的对象。\n",{"type":559,"tag":578,"props":608,"children":610},{"class":580,"line":609},4,[611],{"type":559,"tag":578,"props":612,"children":613},{"style":585},[614],{"type":565,"value":615}," * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n",{"type":559,"tag":578,"props":617,"children":619},{"class":580,"line":618},5,[620],{"type":559,"tag":578,"props":621,"children":622},{"style":585},[623],{"type":565,"value":624}," */\n",{"type":559,"tag":578,"props":626,"children":628},{"class":580,"line":627},6,[629,635,641,647,653,658,664,670,674,679,684,689,693],{"type":559,"tag":578,"props":630,"children":632},{"style":631},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[633],{"type":565,"value":634},"var",{"type":559,"tag":578,"props":636,"children":638},{"style":637},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[639],{"type":565,"value":640}," it",{"type":559,"tag":578,"props":642,"children":644},{"style":643},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[645],{"type":565,"value":646}," =",{"type":559,"tag":578,"props":648,"children":650},{"style":649},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[651],{"type":565,"value":652}," makeIterator",{"type":559,"tag":578,"props":654,"children":655},{"style":643},[656],{"type":565,"value":657},"([",{"type":559,"tag":578,"props":659,"children":661},{"style":660},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[662],{"type":565,"value":663},"\"",{"type":559,"tag":578,"props":665,"children":667},{"style":666},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[668],{"type":565,"value":669},"a",{"type":559,"tag":578,"props":671,"children":672},{"style":660},[673],{"type":565,"value":663},{"type":559,"tag":578,"props":675,"children":676},{"style":643},[677],{"type":565,"value":678},",",{"type":559,"tag":578,"props":680,"children":681},{"style":660},[682],{"type":565,"value":683}," \"",{"type":559,"tag":578,"props":685,"children":686},{"style":666},[687],{"type":565,"value":688},"b",{"type":559,"tag":578,"props":690,"children":691},{"style":660},[692],{"type":565,"value":663},{"type":559,"tag":578,"props":694,"children":695},{"style":643},[696],{"type":565,"value":697},"]);\n",{"type":559,"tag":578,"props":699,"children":701},{"class":580,"line":700},7,[702],{"type":559,"tag":578,"props":703,"children":705},{"emptyLinePlaceholder":704},true,[706],{"type":565,"value":707},"\n",{"type":559,"tag":578,"props":709,"children":711},{"class":580,"line":710},8,[712,717,722,727,732],{"type":559,"tag":578,"props":713,"children":714},{"style":637},[715],{"type":565,"value":716},"it",{"type":559,"tag":578,"props":718,"children":719},{"style":643},[720],{"type":565,"value":721},".",{"type":559,"tag":578,"props":723,"children":724},{"style":649},[725],{"type":565,"value":726},"next",{"type":559,"tag":578,"props":728,"children":729},{"style":643},[730],{"type":565,"value":731},"();",{"type":559,"tag":578,"props":733,"children":734},{"style":585},[735],{"type":565,"value":736}," // { value: \"a\", done: false }\n",{"type":559,"tag":578,"props":738,"children":740},{"class":580,"line":739},9,[741,745,749,753,757],{"type":559,"tag":578,"props":742,"children":743},{"style":637},[744],{"type":565,"value":716},{"type":559,"tag":578,"props":746,"children":747},{"style":643},[748],{"type":565,"value":721},{"type":559,"tag":578,"props":750,"children":751},{"style":649},[752],{"type":565,"value":726},{"type":559,"tag":578,"props":754,"children":755},{"style":643},[756],{"type":565,"value":731},{"type":559,"tag":578,"props":758,"children":759},{"style":585},[760],{"type":565,"value":761}," // { value: \"b\", done: false }\n",{"type":559,"tag":578,"props":763,"children":765},{"class":580,"line":764},10,[766,770,774,778,782],{"type":559,"tag":578,"props":767,"children":768},{"style":637},[769],{"type":565,"value":716},{"type":559,"tag":578,"props":771,"children":772},{"style":643},[773],{"type":565,"value":721},{"type":559,"tag":578,"props":775,"children":776},{"style":649},[777],{"type":565,"value":726},{"type":559,"tag":578,"props":779,"children":780},{"style":643},[781],{"type":565,"value":731},{"type":559,"tag":578,"props":783,"children":784},{"style":585},[785],{"type":565,"value":786}," // { value: undefined, done: true }\n",{"type":559,"tag":578,"props":788,"children":790},{"class":580,"line":789},11,[791],{"type":559,"tag":578,"props":792,"children":793},{"emptyLinePlaceholder":704},[794],{"type":565,"value":707},{"type":559,"tag":578,"props":796,"children":798},{"class":580,"line":797},12,[799,804,808,813,818,823],{"type":559,"tag":578,"props":800,"children":801},{"style":631},[802],{"type":565,"value":803},"function",{"type":559,"tag":578,"props":805,"children":806},{"style":649},[807],{"type":565,"value":652},{"type":559,"tag":578,"props":809,"children":810},{"style":643},[811],{"type":565,"value":812},"(",{"type":559,"tag":578,"props":814,"children":815},{"style":637},[816],{"type":565,"value":817},"array",{"type":559,"tag":578,"props":819,"children":820},{"style":643},[821],{"type":565,"value":822},")",{"type":559,"tag":578,"props":824,"children":825},{"style":643},[826],{"type":565,"value":827}," {\n",{"type":559,"tag":578,"props":829,"children":831},{"class":580,"line":830},13,[832,837,842,846,852],{"type":559,"tag":578,"props":833,"children":834},{"style":631},[835],{"type":565,"value":836},"  var",{"type":559,"tag":578,"props":838,"children":839},{"style":637},[840],{"type":565,"value":841}," nextIndex",{"type":559,"tag":578,"props":843,"children":844},{"style":643},[845],{"type":565,"value":646},{"type":559,"tag":578,"props":847,"children":849},{"style":848},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[850],{"type":565,"value":851}," 0",{"type":559,"tag":578,"props":853,"children":854},{"style":643},[855],{"type":565,"value":856},";\n",{"type":559,"tag":578,"props":858,"children":860},{"class":580,"line":859},14,[861,867],{"type":559,"tag":578,"props":862,"children":864},{"style":863},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[865],{"type":565,"value":866},"  return",{"type":559,"tag":578,"props":868,"children":869},{"style":643},[870],{"type":565,"value":827},{"type":559,"tag":578,"props":872,"children":874},{"class":580,"line":873},15,[875,880,885,890,895],{"type":559,"tag":578,"props":876,"children":877},{"style":649},[878],{"type":565,"value":879},"    next",{"type":559,"tag":578,"props":881,"children":882},{"style":643},[883],{"type":565,"value":884},":",{"type":559,"tag":578,"props":886,"children":887},{"style":631},[888],{"type":565,"value":889}," function",{"type":559,"tag":578,"props":891,"children":892},{"style":643},[893],{"type":565,"value":894}," ()",{"type":559,"tag":578,"props":896,"children":897},{"style":643},[898],{"type":565,"value":827},{"type":559,"tag":578,"props":900,"children":902},{"class":580,"line":901},16,[903,908,912,917,922,926],{"type":559,"tag":578,"props":904,"children":905},{"style":863},[906],{"type":565,"value":907},"      return",{"type":559,"tag":578,"props":909,"children":910},{"style":637},[911],{"type":565,"value":841},{"type":559,"tag":578,"props":913,"children":914},{"style":643},[915],{"type":565,"value":916}," \u003C",{"type":559,"tag":578,"props":918,"children":919},{"style":637},[920],{"type":565,"value":921}," array",{"type":559,"tag":578,"props":923,"children":924},{"style":643},[925],{"type":565,"value":721},{"type":559,"tag":578,"props":927,"children":929},{"style":928},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[930],{"type":565,"value":931},"length\n",{"type":559,"tag":578,"props":933,"children":935},{"class":580,"line":934},17,[936,941,946,951,955,959,964,969,974,979,984,988,993],{"type":559,"tag":578,"props":937,"children":938},{"style":631},[939],{"type":565,"value":940},"        ?",{"type":559,"tag":578,"props":942,"children":943},{"style":643},[944],{"type":565,"value":945}," {",{"type":559,"tag":578,"props":947,"children":948},{"style":928},[949],{"type":565,"value":950}," value",{"type":559,"tag":578,"props":952,"children":953},{"style":643},[954],{"type":565,"value":884},{"type":559,"tag":578,"props":956,"children":957},{"style":637},[958],{"type":565,"value":921},{"type":559,"tag":578,"props":960,"children":961},{"style":643},[962],{"type":565,"value":963},"[",{"type":559,"tag":578,"props":965,"children":966},{"style":637},[967],{"type":565,"value":968},"nextIndex",{"type":559,"tag":578,"props":970,"children":971},{"style":631},[972],{"type":565,"value":973},"++",{"type":559,"tag":578,"props":975,"children":976},{"style":643},[977],{"type":565,"value":978},"],",{"type":559,"tag":578,"props":980,"children":981},{"style":928},[982],{"type":565,"value":983}," done",{"type":559,"tag":578,"props":985,"children":986},{"style":643},[987],{"type":565,"value":884},{"type":559,"tag":578,"props":989,"children":990},{"style":863},[991],{"type":565,"value":992}," false",{"type":559,"tag":578,"props":994,"children":995},{"style":643},[996],{"type":565,"value":997}," }\n",{"type":559,"tag":578,"props":999,"children":1001},{"class":580,"line":1000},18,[1002,1007,1011,1015,1019,1024,1028,1032,1036,1041],{"type":559,"tag":578,"props":1003,"children":1004},{"style":631},[1005],{"type":565,"value":1006},"        :",{"type":559,"tag":578,"props":1008,"children":1009},{"style":643},[1010],{"type":565,"value":945},{"type":559,"tag":578,"props":1012,"children":1013},{"style":928},[1014],{"type":565,"value":950},{"type":559,"tag":578,"props":1016,"children":1017},{"style":643},[1018],{"type":565,"value":884},{"type":559,"tag":578,"props":1020,"children":1021},{"style":631},[1022],{"type":565,"value":1023}," undefined",{"type":559,"tag":578,"props":1025,"children":1026},{"style":643},[1027],{"type":565,"value":678},{"type":559,"tag":578,"props":1029,"children":1030},{"style":928},[1031],{"type":565,"value":983},{"type":559,"tag":578,"props":1033,"children":1034},{"style":643},[1035],{"type":565,"value":884},{"type":559,"tag":578,"props":1037,"children":1038},{"style":863},[1039],{"type":565,"value":1040}," true",{"type":559,"tag":578,"props":1042,"children":1043},{"style":643},[1044],{"type":565,"value":1045}," };\n",{"type":559,"tag":578,"props":1047,"children":1049},{"class":580,"line":1048},19,[1050],{"type":559,"tag":578,"props":1051,"children":1052},{"style":643},[1053],{"type":565,"value":1054},"    },\n",{"type":559,"tag":578,"props":1056,"children":1058},{"class":580,"line":1057},20,[1059],{"type":559,"tag":578,"props":1060,"children":1061},{"style":643},[1062],{"type":565,"value":1063},"  };\n",{"type":559,"tag":578,"props":1065,"children":1067},{"class":580,"line":1066},21,[1068],{"type":559,"tag":578,"props":1069,"children":1070},{"style":643},[1071],{"type":565,"value":1072},"}\n",{"type":559,"tag":560,"props":1074,"children":1076},{"id":1075},"可迭代的迭代器",[1077],{"type":565,"value":1075},{"type":559,"tag":567,"props":1079,"children":1081},{"className":569,"code":1080,"language":571,"meta":554,"style":554},"/**\n * 使迭代器可迭代\n * makeIterator 函数生成的迭代器并没有实现可迭代协议\n * 所以不能在 for...of 等语法中使用。\n * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n * 从新名了下函数名称 createIterator\n */\nfunction createIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n    [Symbol.iterator]: function () {\n      console.log(\"返回的迭代器:\", this);\n      return this; // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n    },\n  };\n}\n\nvar iterator = createIterator([1, 2, 3]);\nconsole.log(...iterator);\n",[1082],{"type":559,"tag":574,"props":1083,"children":1084},{"__ignoreMap":554},[1085,1093,1101,1109,1117,1125,1133,1140,1168,1191,1202,1225,1252,1307,1350,1357,1396,1445,1466,1473,1480,1487,1495,1547],{"type":559,"tag":578,"props":1086,"children":1087},{"class":580,"line":581},[1088],{"type":559,"tag":578,"props":1089,"children":1090},{"style":585},[1091],{"type":565,"value":1092},"/**\n",{"type":559,"tag":578,"props":1094,"children":1095},{"class":580,"line":591},[1096],{"type":559,"tag":578,"props":1097,"children":1098},{"style":585},[1099],{"type":565,"value":1100}," * 使迭代器可迭代\n",{"type":559,"tag":578,"props":1102,"children":1103},{"class":580,"line":600},[1104],{"type":559,"tag":578,"props":1105,"children":1106},{"style":585},[1107],{"type":565,"value":1108}," * makeIterator 函数生成的迭代器并没有实现可迭代协议\n",{"type":559,"tag":578,"props":1110,"children":1111},{"class":580,"line":609},[1112],{"type":559,"tag":578,"props":1113,"children":1114},{"style":585},[1115],{"type":565,"value":1116}," * 所以不能在 for...of 等语法中使用。\n",{"type":559,"tag":578,"props":1118,"children":1119},{"class":580,"line":618},[1120],{"type":559,"tag":578,"props":1121,"children":1122},{"style":585},[1123],{"type":565,"value":1124}," * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n",{"type":559,"tag":578,"props":1126,"children":1127},{"class":580,"line":627},[1128],{"type":559,"tag":578,"props":1129,"children":1130},{"style":585},[1131],{"type":565,"value":1132}," * 从新名了下函数名称 createIterator\n",{"type":559,"tag":578,"props":1134,"children":1135},{"class":580,"line":700},[1136],{"type":559,"tag":578,"props":1137,"children":1138},{"style":585},[1139],{"type":565,"value":624},{"type":559,"tag":578,"props":1141,"children":1142},{"class":580,"line":710},[1143,1147,1152,1156,1160,1164],{"type":559,"tag":578,"props":1144,"children":1145},{"style":631},[1146],{"type":565,"value":803},{"type":559,"tag":578,"props":1148,"children":1149},{"style":649},[1150],{"type":565,"value":1151}," createIterator",{"type":559,"tag":578,"props":1153,"children":1154},{"style":643},[1155],{"type":565,"value":812},{"type":559,"tag":578,"props":1157,"children":1158},{"style":637},[1159],{"type":565,"value":817},{"type":559,"tag":578,"props":1161,"children":1162},{"style":643},[1163],{"type":565,"value":822},{"type":559,"tag":578,"props":1165,"children":1166},{"style":643},[1167],{"type":565,"value":827},{"type":559,"tag":578,"props":1169,"children":1170},{"class":580,"line":739},[1171,1175,1179,1183,1187],{"type":559,"tag":578,"props":1172,"children":1173},{"style":631},[1174],{"type":565,"value":836},{"type":559,"tag":578,"props":1176,"children":1177},{"style":637},[1178],{"type":565,"value":841},{"type":559,"tag":578,"props":1180,"children":1181},{"style":643},[1182],{"type":565,"value":646},{"type":559,"tag":578,"props":1184,"children":1185},{"style":848},[1186],{"type":565,"value":851},{"type":559,"tag":578,"props":1188,"children":1189},{"style":643},[1190],{"type":565,"value":856},{"type":559,"tag":578,"props":1192,"children":1193},{"class":580,"line":764},[1194,1198],{"type":559,"tag":578,"props":1195,"children":1196},{"style":863},[1197],{"type":565,"value":866},{"type":559,"tag":578,"props":1199,"children":1200},{"style":643},[1201],{"type":565,"value":827},{"type":559,"tag":578,"props":1203,"children":1204},{"class":580,"line":789},[1205,1209,1213,1217,1221],{"type":559,"tag":578,"props":1206,"children":1207},{"style":649},[1208],{"type":565,"value":879},{"type":559,"tag":578,"props":1210,"children":1211},{"style":643},[1212],{"type":565,"value":884},{"type":559,"tag":578,"props":1214,"children":1215},{"style":631},[1216],{"type":565,"value":889},{"type":559,"tag":578,"props":1218,"children":1219},{"style":643},[1220],{"type":565,"value":894},{"type":559,"tag":578,"props":1222,"children":1223},{"style":643},[1224],{"type":565,"value":827},{"type":559,"tag":578,"props":1226,"children":1227},{"class":580,"line":797},[1228,1232,1236,1240,1244,1248],{"type":559,"tag":578,"props":1229,"children":1230},{"style":863},[1231],{"type":565,"value":907},{"type":559,"tag":578,"props":1233,"children":1234},{"style":637},[1235],{"type":565,"value":841},{"type":559,"tag":578,"props":1237,"children":1238},{"style":643},[1239],{"type":565,"value":916},{"type":559,"tag":578,"props":1241,"children":1242},{"style":637},[1243],{"type":565,"value":921},{"type":559,"tag":578,"props":1245,"children":1246},{"style":643},[1247],{"type":565,"value":721},{"type":559,"tag":578,"props":1249,"children":1250},{"style":928},[1251],{"type":565,"value":931},{"type":559,"tag":578,"props":1253,"children":1254},{"class":580,"line":830},[1255,1259,1263,1267,1271,1275,1279,1283,1287,1291,1295,1299,1303],{"type":559,"tag":578,"props":1256,"children":1257},{"style":631},[1258],{"type":565,"value":940},{"type":559,"tag":578,"props":1260,"children":1261},{"style":643},[1262],{"type":565,"value":945},{"type":559,"tag":578,"props":1264,"children":1265},{"style":928},[1266],{"type":565,"value":950},{"type":559,"tag":578,"props":1268,"children":1269},{"style":643},[1270],{"type":565,"value":884},{"type":559,"tag":578,"props":1272,"children":1273},{"style":637},[1274],{"type":565,"value":921},{"type":559,"tag":578,"props":1276,"children":1277},{"style":643},[1278],{"type":565,"value":963},{"type":559,"tag":578,"props":1280,"children":1281},{"style":637},[1282],{"type":565,"value":968},{"type":559,"tag":578,"props":1284,"children":1285},{"style":631},[1286],{"type":565,"value":973},{"type":559,"tag":578,"props":1288,"children":1289},{"style":643},[1290],{"type":565,"value":978},{"type":559,"tag":578,"props":1292,"children":1293},{"style":928},[1294],{"type":565,"value":983},{"type":559,"tag":578,"props":1296,"children":1297},{"style":643},[1298],{"type":565,"value":884},{"type":559,"tag":578,"props":1300,"children":1301},{"style":863},[1302],{"type":565,"value":992},{"type":559,"tag":578,"props":1304,"children":1305},{"style":643},[1306],{"type":565,"value":997},{"type":559,"tag":578,"props":1308,"children":1309},{"class":580,"line":859},[1310,1314,1318,1322,1326,1330,1334,1338,1342,1346],{"type":559,"tag":578,"props":1311,"children":1312},{"style":631},[1313],{"type":565,"value":1006},{"type":559,"tag":578,"props":1315,"children":1316},{"style":643},[1317],{"type":565,"value":945},{"type":559,"tag":578,"props":1319,"children":1320},{"style":928},[1321],{"type":565,"value":950},{"type":559,"tag":578,"props":1323,"children":1324},{"style":643},[1325],{"type":565,"value":884},{"type":559,"tag":578,"props":1327,"children":1328},{"style":631},[1329],{"type":565,"value":1023},{"type":559,"tag":578,"props":1331,"children":1332},{"style":643},[1333],{"type":565,"value":678},{"type":559,"tag":578,"props":1335,"children":1336},{"style":928},[1337],{"type":565,"value":983},{"type":559,"tag":578,"props":1339,"children":1340},{"style":643},[1341],{"type":565,"value":884},{"type":559,"tag":578,"props":1343,"children":1344},{"style":863},[1345],{"type":565,"value":1040},{"type":559,"tag":578,"props":1347,"children":1348},{"style":643},[1349],{"type":565,"value":1045},{"type":559,"tag":578,"props":1351,"children":1352},{"class":580,"line":873},[1353],{"type":559,"tag":578,"props":1354,"children":1355},{"style":643},[1356],{"type":565,"value":1054},{"type":559,"tag":578,"props":1358,"children":1359},{"class":580,"line":901},[1360,1365,1370,1374,1379,1384,1388,1392],{"type":559,"tag":578,"props":1361,"children":1362},{"style":643},[1363],{"type":565,"value":1364},"    [",{"type":559,"tag":578,"props":1366,"children":1367},{"style":637},[1368],{"type":565,"value":1369},"Symbol",{"type":559,"tag":578,"props":1371,"children":1372},{"style":643},[1373],{"type":565,"value":721},{"type":559,"tag":578,"props":1375,"children":1376},{"style":637},[1377],{"type":565,"value":1378},"iterator",{"type":559,"tag":578,"props":1380,"children":1381},{"style":643},[1382],{"type":565,"value":1383},"]:",{"type":559,"tag":578,"props":1385,"children":1386},{"style":631},[1387],{"type":565,"value":889},{"type":559,"tag":578,"props":1389,"children":1390},{"style":643},[1391],{"type":565,"value":894},{"type":559,"tag":578,"props":1393,"children":1394},{"style":643},[1395],{"type":565,"value":827},{"type":559,"tag":578,"props":1397,"children":1398},{"class":580,"line":934},[1399,1404,1408,1413,1417,1421,1426,1430,1434,1440],{"type":559,"tag":578,"props":1400,"children":1401},{"style":637},[1402],{"type":565,"value":1403},"      console",{"type":559,"tag":578,"props":1405,"children":1406},{"style":643},[1407],{"type":565,"value":721},{"type":559,"tag":578,"props":1409,"children":1410},{"style":649},[1411],{"type":565,"value":1412},"log",{"type":559,"tag":578,"props":1414,"children":1415},{"style":643},[1416],{"type":565,"value":812},{"type":559,"tag":578,"props":1418,"children":1419},{"style":660},[1420],{"type":565,"value":663},{"type":559,"tag":578,"props":1422,"children":1423},{"style":666},[1424],{"type":565,"value":1425},"返回的迭代器:",{"type":559,"tag":578,"props":1427,"children":1428},{"style":660},[1429],{"type":565,"value":663},{"type":559,"tag":578,"props":1431,"children":1432},{"style":643},[1433],{"type":565,"value":678},{"type":559,"tag":578,"props":1435,"children":1437},{"style":1436},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[1438],{"type":565,"value":1439}," this",{"type":559,"tag":578,"props":1441,"children":1442},{"style":643},[1443],{"type":565,"value":1444},");\n",{"type":559,"tag":578,"props":1446,"children":1447},{"class":580,"line":1000},[1448,1452,1456,1461],{"type":559,"tag":578,"props":1449,"children":1450},{"style":863},[1451],{"type":565,"value":907},{"type":559,"tag":578,"props":1453,"children":1454},{"style":1436},[1455],{"type":565,"value":1439},{"type":559,"tag":578,"props":1457,"children":1458},{"style":643},[1459],{"type":565,"value":1460},";",{"type":559,"tag":578,"props":1462,"children":1463},{"style":585},[1464],{"type":565,"value":1465}," // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n",{"type":559,"tag":578,"props":1467,"children":1468},{"class":580,"line":1048},[1469],{"type":559,"tag":578,"props":1470,"children":1471},{"style":643},[1472],{"type":565,"value":1054},{"type":559,"tag":578,"props":1474,"children":1475},{"class":580,"line":1057},[1476],{"type":559,"tag":578,"props":1477,"children":1478},{"style":643},[1479],{"type":565,"value":1063},{"type":559,"tag":578,"props":1481,"children":1482},{"class":580,"line":1066},[1483],{"type":559,"tag":578,"props":1484,"children":1485},{"style":643},[1486],{"type":565,"value":1072},{"type":559,"tag":578,"props":1488,"children":1490},{"class":580,"line":1489},22,[1491],{"type":559,"tag":578,"props":1492,"children":1493},{"emptyLinePlaceholder":704},[1494],{"type":565,"value":707},{"type":559,"tag":578,"props":1496,"children":1498},{"class":580,"line":1497},23,[1499,1503,1508,1512,1516,1520,1525,1529,1534,1538,1543],{"type":559,"tag":578,"props":1500,"children":1501},{"style":631},[1502],{"type":565,"value":634},{"type":559,"tag":578,"props":1504,"children":1505},{"style":637},[1506],{"type":565,"value":1507}," iterator",{"type":559,"tag":578,"props":1509,"children":1510},{"style":643},[1511],{"type":565,"value":646},{"type":559,"tag":578,"props":1513,"children":1514},{"style":649},[1515],{"type":565,"value":1151},{"type":559,"tag":578,"props":1517,"children":1518},{"style":643},[1519],{"type":565,"value":657},{"type":559,"tag":578,"props":1521,"children":1522},{"style":848},[1523],{"type":565,"value":1524},"1",{"type":559,"tag":578,"props":1526,"children":1527},{"style":643},[1528],{"type":565,"value":678},{"type":559,"tag":578,"props":1530,"children":1531},{"style":848},[1532],{"type":565,"value":1533}," 2",{"type":559,"tag":578,"props":1535,"children":1536},{"style":643},[1537],{"type":565,"value":678},{"type":559,"tag":578,"props":1539,"children":1540},{"style":848},[1541],{"type":565,"value":1542}," 3",{"type":559,"tag":578,"props":1544,"children":1545},{"style":643},[1546],{"type":565,"value":697},{"type":559,"tag":578,"props":1548,"children":1550},{"class":580,"line":1549},24,[1551,1556,1560,1564,1569,1573],{"type":559,"tag":578,"props":1552,"children":1553},{"style":637},[1554],{"type":565,"value":1555},"console",{"type":559,"tag":578,"props":1557,"children":1558},{"style":643},[1559],{"type":565,"value":721},{"type":559,"tag":578,"props":1561,"children":1562},{"style":649},[1563],{"type":565,"value":1412},{"type":559,"tag":578,"props":1565,"children":1566},{"style":643},[1567],{"type":565,"value":1568},"(...",{"type":559,"tag":578,"props":1570,"children":1571},{"style":637},[1572],{"type":565,"value":1378},{"type":559,"tag":578,"props":1574,"children":1575},{"style":643},[1576],{"type":565,"value":1444},{"type":559,"tag":1578,"props":1579,"children":1580},"style",{},[1581],{"type":565,"value":1582},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":554,"searchDepth":618,"depth":618,"links":1584},[1585,1586],{"id":562,"depth":591,"text":562},{"id":1075,"depth":591,"text":1075},"markdown","content:3.code-assessment:1.source:1.native-api:8.iterator.md","content","3.code-assessment/1.source/1.native-api/8.iterator.md","md",[1593,1595],{"_path":333,"title":332,"description":1594},"JSON.stringify() 方法将一个 js 对象或值转换为 json 字符串，如果指定了一个 replacer 函数，则可以选择性地替换值，或者指定的 replacer 是数组，则可选择性地仅包含数组指定的属性。",{"_path":339,"title":338,"description":554},1715092161154]