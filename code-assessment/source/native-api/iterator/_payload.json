[{"data":1,"prerenderedAt":1569},["Reactive",2],{"navigation":3,"/code-assessment/source/native-api/iterator":524,"/code-assessment/source/native-api/iterator-surround":1565},[4,269,298,492,500,509],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":491},"代码考核","/code-assessment",[302,391,484],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,375,382,385,388],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357,360,363,366,369,372],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"原型方法","/code-assessment/source/array/prototype-method",{"title":361,"_path":362},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":364,"_path":365},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":367,"_path":368},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":370,"_path":371},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":373,"_path":374},"二维数组","/code-assessment/source/array/2d-array",{"title":376,"_path":377,"children":378},"字符串 String","/code-assessment/source/string",[379],{"title":380,"_path":381},"repeat()","/code-assessment/source/string/repeat",{"title":383,"_path":384},"获取通用类型","/code-assessment/source/get-generic-type",{"title":386,"_path":387},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":389,"_path":390},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":392,"_path":393,"children":394},"业务场景","/code-assessment/scene",[395,420,430,433,436,439,442,445,448,451,454,457,460,463,466,469,472,475,478,481],{"title":396,"_path":397,"children":398},"Promise","/code-assessment/scene/promise",[399,402,405,408,411,414,417],{"title":400,"_path":401},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":403,"_path":404},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":406,"_path":407},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":409,"_path":410},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":412,"_path":413},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":415,"_path":416},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":418,"_path":419},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":421,"_path":422,"children":423},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[424,427],{"title":425,"_path":426},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":428,"_path":429},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":431,"_path":432},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":434,"_path":435},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":437,"_path":438},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":440,"_path":441},"倒计时","/code-assessment/scene/countdown",{"title":443,"_path":444},"日期格式化","/code-assessment/scene/date-format",{"title":446,"_path":447},"实现前端路由","/code-assessment/scene/frontend-route",{"title":449,"_path":450},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":452,"_path":453},"lodash.get","/code-assessment/scene/lodash-get",{"title":455,"_path":456},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":458,"_path":459},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":461,"_path":462},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":464,"_path":465},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":467,"_path":468},"随机数","/code-assessment/scene/random-number",{"title":470,"_path":471},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":473,"_path":474},"sku 算法实现","/code-assessment/scene/sku",{"title":476,"_path":477},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":479,"_path":480},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":482,"_path":483},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":485,"_path":486,"children":487},"Ts 类型挑战","/code-assessment/type-challeges",[488],{"title":489,"_path":490},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":493,"_path":494,"children":495,"icon":499},"项目","/project",[496],{"title":497,"_path":498},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":501,"_path":502,"children":503,"icon":508},"设计模式","/design-mode",[504,505],{"title":501,"_path":502},{"title":506,"_path":507},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":510,"_path":511,"children":512,"icon":523},"后端语言","/backend-languages",[513],{"title":514,"_path":515,"children":516},"Python","/backend-languages/python",[517,520],{"title":518,"_path":519},"基础","/backend-languages/python/base",{"title":521,"_path":522},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":330,"_dir":525,"_draft":526,"_partial":526,"_locale":527,"title":329,"description":527,"body":528,"_type":1560,"_id":1561,"_source":1562,"_file":1563,"_extension":1564},"native-api",false,"",{"type":529,"children":530,"toc":1556},"root",[531,539,1046,1051,1550],{"type":532,"tag":533,"props":534,"children":536},"element","h2",{"id":535},"实现迭代器函数",[537],{"type":538,"value":535},"text",{"type":532,"tag":540,"props":541,"children":545},"pre",{"className":542,"code":543,"language":544,"meta":527,"style":527},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/*\n * 这是一个手写的迭代器(Iterator)\n * 满足迭代器协议的对象。\n * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n */\nvar it = makeIterator([\"a\", \"b\"]);\n\nit.next(); // { value: \"a\", done: false }\nit.next(); // { value: \"b\", done: false }\nit.next(); // { value: undefined, done: true }\n\nfunction makeIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n  };\n}\n","js",[546],{"type":532,"tag":547,"props":548,"children":549},"code",{"__ignoreMap":527},[550,562,571,580,589,598,671,681,710,735,760,768,801,830,844,872,905,971,1019,1028,1037],{"type":532,"tag":551,"props":552,"children":555},"span",{"class":553,"line":554},"line",1,[556],{"type":532,"tag":551,"props":557,"children":559},{"style":558},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[560],{"type":538,"value":561},"/*\n",{"type":532,"tag":551,"props":563,"children":565},{"class":553,"line":564},2,[566],{"type":532,"tag":551,"props":567,"children":568},{"style":558},[569],{"type":538,"value":570}," * 这是一个手写的迭代器(Iterator)\n",{"type":532,"tag":551,"props":572,"children":574},{"class":553,"line":573},3,[575],{"type":532,"tag":551,"props":576,"children":577},{"style":558},[578],{"type":538,"value":579}," * 满足迭代器协议的对象。\n",{"type":532,"tag":551,"props":581,"children":583},{"class":553,"line":582},4,[584],{"type":532,"tag":551,"props":585,"children":586},{"style":558},[587],{"type":538,"value":588}," * 迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：\n",{"type":532,"tag":551,"props":590,"children":592},{"class":553,"line":591},5,[593],{"type":532,"tag":551,"props":594,"children":595},{"style":558},[596],{"type":538,"value":597}," */\n",{"type":532,"tag":551,"props":599,"children":601},{"class":553,"line":600},6,[602,608,614,620,626,631,637,643,647,652,657,662,666],{"type":532,"tag":551,"props":603,"children":605},{"style":604},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[606],{"type":538,"value":607},"var",{"type":532,"tag":551,"props":609,"children":611},{"style":610},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[612],{"type":538,"value":613}," it",{"type":532,"tag":551,"props":615,"children":617},{"style":616},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[618],{"type":538,"value":619}," =",{"type":532,"tag":551,"props":621,"children":623},{"style":622},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[624],{"type":538,"value":625}," makeIterator",{"type":532,"tag":551,"props":627,"children":628},{"style":616},[629],{"type":538,"value":630},"([",{"type":532,"tag":551,"props":632,"children":634},{"style":633},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[635],{"type":538,"value":636},"\"",{"type":532,"tag":551,"props":638,"children":640},{"style":639},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[641],{"type":538,"value":642},"a",{"type":532,"tag":551,"props":644,"children":645},{"style":633},[646],{"type":538,"value":636},{"type":532,"tag":551,"props":648,"children":649},{"style":616},[650],{"type":538,"value":651},",",{"type":532,"tag":551,"props":653,"children":654},{"style":633},[655],{"type":538,"value":656}," \"",{"type":532,"tag":551,"props":658,"children":659},{"style":639},[660],{"type":538,"value":661},"b",{"type":532,"tag":551,"props":663,"children":664},{"style":633},[665],{"type":538,"value":636},{"type":532,"tag":551,"props":667,"children":668},{"style":616},[669],{"type":538,"value":670},"]);\n",{"type":532,"tag":551,"props":672,"children":674},{"class":553,"line":673},7,[675],{"type":532,"tag":551,"props":676,"children":678},{"emptyLinePlaceholder":677},true,[679],{"type":538,"value":680},"\n",{"type":532,"tag":551,"props":682,"children":684},{"class":553,"line":683},8,[685,690,695,700,705],{"type":532,"tag":551,"props":686,"children":687},{"style":610},[688],{"type":538,"value":689},"it",{"type":532,"tag":551,"props":691,"children":692},{"style":616},[693],{"type":538,"value":694},".",{"type":532,"tag":551,"props":696,"children":697},{"style":622},[698],{"type":538,"value":699},"next",{"type":532,"tag":551,"props":701,"children":702},{"style":616},[703],{"type":538,"value":704},"();",{"type":532,"tag":551,"props":706,"children":707},{"style":558},[708],{"type":538,"value":709}," // { value: \"a\", done: false }\n",{"type":532,"tag":551,"props":711,"children":713},{"class":553,"line":712},9,[714,718,722,726,730],{"type":532,"tag":551,"props":715,"children":716},{"style":610},[717],{"type":538,"value":689},{"type":532,"tag":551,"props":719,"children":720},{"style":616},[721],{"type":538,"value":694},{"type":532,"tag":551,"props":723,"children":724},{"style":622},[725],{"type":538,"value":699},{"type":532,"tag":551,"props":727,"children":728},{"style":616},[729],{"type":538,"value":704},{"type":532,"tag":551,"props":731,"children":732},{"style":558},[733],{"type":538,"value":734}," // { value: \"b\", done: false }\n",{"type":532,"tag":551,"props":736,"children":738},{"class":553,"line":737},10,[739,743,747,751,755],{"type":532,"tag":551,"props":740,"children":741},{"style":610},[742],{"type":538,"value":689},{"type":532,"tag":551,"props":744,"children":745},{"style":616},[746],{"type":538,"value":694},{"type":532,"tag":551,"props":748,"children":749},{"style":622},[750],{"type":538,"value":699},{"type":532,"tag":551,"props":752,"children":753},{"style":616},[754],{"type":538,"value":704},{"type":532,"tag":551,"props":756,"children":757},{"style":558},[758],{"type":538,"value":759}," // { value: undefined, done: true }\n",{"type":532,"tag":551,"props":761,"children":763},{"class":553,"line":762},11,[764],{"type":532,"tag":551,"props":765,"children":766},{"emptyLinePlaceholder":677},[767],{"type":538,"value":680},{"type":532,"tag":551,"props":769,"children":771},{"class":553,"line":770},12,[772,777,781,786,791,796],{"type":532,"tag":551,"props":773,"children":774},{"style":604},[775],{"type":538,"value":776},"function",{"type":532,"tag":551,"props":778,"children":779},{"style":622},[780],{"type":538,"value":625},{"type":532,"tag":551,"props":782,"children":783},{"style":616},[784],{"type":538,"value":785},"(",{"type":532,"tag":551,"props":787,"children":788},{"style":610},[789],{"type":538,"value":790},"array",{"type":532,"tag":551,"props":792,"children":793},{"style":616},[794],{"type":538,"value":795},")",{"type":532,"tag":551,"props":797,"children":798},{"style":616},[799],{"type":538,"value":800}," {\n",{"type":532,"tag":551,"props":802,"children":804},{"class":553,"line":803},13,[805,810,815,819,825],{"type":532,"tag":551,"props":806,"children":807},{"style":604},[808],{"type":538,"value":809},"  var",{"type":532,"tag":551,"props":811,"children":812},{"style":610},[813],{"type":538,"value":814}," nextIndex",{"type":532,"tag":551,"props":816,"children":817},{"style":616},[818],{"type":538,"value":619},{"type":532,"tag":551,"props":820,"children":822},{"style":821},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[823],{"type":538,"value":824}," 0",{"type":532,"tag":551,"props":826,"children":827},{"style":616},[828],{"type":538,"value":829},";\n",{"type":532,"tag":551,"props":831,"children":833},{"class":553,"line":832},14,[834,840],{"type":532,"tag":551,"props":835,"children":837},{"style":836},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[838],{"type":538,"value":839},"  return",{"type":532,"tag":551,"props":841,"children":842},{"style":616},[843],{"type":538,"value":800},{"type":532,"tag":551,"props":845,"children":847},{"class":553,"line":846},15,[848,853,858,863,868],{"type":532,"tag":551,"props":849,"children":850},{"style":622},[851],{"type":538,"value":852},"    next",{"type":532,"tag":551,"props":854,"children":855},{"style":616},[856],{"type":538,"value":857},":",{"type":532,"tag":551,"props":859,"children":860},{"style":604},[861],{"type":538,"value":862}," function",{"type":532,"tag":551,"props":864,"children":865},{"style":616},[866],{"type":538,"value":867}," ()",{"type":532,"tag":551,"props":869,"children":870},{"style":616},[871],{"type":538,"value":800},{"type":532,"tag":551,"props":873,"children":875},{"class":553,"line":874},16,[876,881,885,890,895,899],{"type":532,"tag":551,"props":877,"children":878},{"style":836},[879],{"type":538,"value":880},"      return",{"type":532,"tag":551,"props":882,"children":883},{"style":610},[884],{"type":538,"value":814},{"type":532,"tag":551,"props":886,"children":887},{"style":616},[888],{"type":538,"value":889}," \u003C",{"type":532,"tag":551,"props":891,"children":892},{"style":610},[893],{"type":538,"value":894}," array",{"type":532,"tag":551,"props":896,"children":897},{"style":616},[898],{"type":538,"value":694},{"type":532,"tag":551,"props":900,"children":902},{"style":901},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[903],{"type":538,"value":904},"length\n",{"type":532,"tag":551,"props":906,"children":908},{"class":553,"line":907},17,[909,914,919,924,928,932,937,942,947,952,957,961,966],{"type":532,"tag":551,"props":910,"children":911},{"style":604},[912],{"type":538,"value":913},"        ?",{"type":532,"tag":551,"props":915,"children":916},{"style":616},[917],{"type":538,"value":918}," {",{"type":532,"tag":551,"props":920,"children":921},{"style":901},[922],{"type":538,"value":923}," value",{"type":532,"tag":551,"props":925,"children":926},{"style":616},[927],{"type":538,"value":857},{"type":532,"tag":551,"props":929,"children":930},{"style":610},[931],{"type":538,"value":894},{"type":532,"tag":551,"props":933,"children":934},{"style":616},[935],{"type":538,"value":936},"[",{"type":532,"tag":551,"props":938,"children":939},{"style":610},[940],{"type":538,"value":941},"nextIndex",{"type":532,"tag":551,"props":943,"children":944},{"style":604},[945],{"type":538,"value":946},"++",{"type":532,"tag":551,"props":948,"children":949},{"style":616},[950],{"type":538,"value":951},"],",{"type":532,"tag":551,"props":953,"children":954},{"style":901},[955],{"type":538,"value":956}," done",{"type":532,"tag":551,"props":958,"children":959},{"style":616},[960],{"type":538,"value":857},{"type":532,"tag":551,"props":962,"children":963},{"style":836},[964],{"type":538,"value":965}," false",{"type":532,"tag":551,"props":967,"children":968},{"style":616},[969],{"type":538,"value":970}," }\n",{"type":532,"tag":551,"props":972,"children":974},{"class":553,"line":973},18,[975,980,984,988,992,997,1001,1005,1009,1014],{"type":532,"tag":551,"props":976,"children":977},{"style":604},[978],{"type":538,"value":979},"        :",{"type":532,"tag":551,"props":981,"children":982},{"style":616},[983],{"type":538,"value":918},{"type":532,"tag":551,"props":985,"children":986},{"style":901},[987],{"type":538,"value":923},{"type":532,"tag":551,"props":989,"children":990},{"style":616},[991],{"type":538,"value":857},{"type":532,"tag":551,"props":993,"children":994},{"style":604},[995],{"type":538,"value":996}," undefined",{"type":532,"tag":551,"props":998,"children":999},{"style":616},[1000],{"type":538,"value":651},{"type":532,"tag":551,"props":1002,"children":1003},{"style":901},[1004],{"type":538,"value":956},{"type":532,"tag":551,"props":1006,"children":1007},{"style":616},[1008],{"type":538,"value":857},{"type":532,"tag":551,"props":1010,"children":1011},{"style":836},[1012],{"type":538,"value":1013}," true",{"type":532,"tag":551,"props":1015,"children":1016},{"style":616},[1017],{"type":538,"value":1018}," };\n",{"type":532,"tag":551,"props":1020,"children":1022},{"class":553,"line":1021},19,[1023],{"type":532,"tag":551,"props":1024,"children":1025},{"style":616},[1026],{"type":538,"value":1027},"    },\n",{"type":532,"tag":551,"props":1029,"children":1031},{"class":553,"line":1030},20,[1032],{"type":532,"tag":551,"props":1033,"children":1034},{"style":616},[1035],{"type":538,"value":1036},"  };\n",{"type":532,"tag":551,"props":1038,"children":1040},{"class":553,"line":1039},21,[1041],{"type":532,"tag":551,"props":1042,"children":1043},{"style":616},[1044],{"type":538,"value":1045},"}\n",{"type":532,"tag":533,"props":1047,"children":1049},{"id":1048},"可迭代的迭代器",[1050],{"type":538,"value":1048},{"type":532,"tag":540,"props":1052,"children":1054},{"className":542,"code":1053,"language":544,"meta":527,"style":527},"/**\n * 使迭代器可迭代\n * makeIterator 函数生成的迭代器并没有实现可迭代协议\n * 所以不能在 for...of 等语法中使用。\n * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n * 从新名了下函数名称 createIterator\n */\nfunction createIterator(array) {\n  var nextIndex = 0;\n  return {\n    next: function () {\n      return nextIndex \u003C array.length\n        ? { value: array[nextIndex++], done: false }\n        : { value: undefined, done: true };\n    },\n    [Symbol.iterator]: function () {\n      console.log(\"返回的迭代器:\", this);\n      return this; // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n    },\n  };\n}\n\nvar iterator = createIterator([1, 2, 3]);\nconsole.log(...iterator);\n",[1055],{"type":532,"tag":547,"props":1056,"children":1057},{"__ignoreMap":527},[1058,1066,1074,1082,1090,1098,1106,1113,1141,1164,1175,1198,1225,1280,1323,1330,1369,1418,1439,1446,1453,1460,1468,1520],{"type":532,"tag":551,"props":1059,"children":1060},{"class":553,"line":554},[1061],{"type":532,"tag":551,"props":1062,"children":1063},{"style":558},[1064],{"type":538,"value":1065},"/**\n",{"type":532,"tag":551,"props":1067,"children":1068},{"class":553,"line":564},[1069],{"type":532,"tag":551,"props":1070,"children":1071},{"style":558},[1072],{"type":538,"value":1073}," * 使迭代器可迭代\n",{"type":532,"tag":551,"props":1075,"children":1076},{"class":553,"line":573},[1077],{"type":532,"tag":551,"props":1078,"children":1079},{"style":558},[1080],{"type":538,"value":1081}," * makeIterator 函数生成的迭代器并没有实现可迭代协议\n",{"type":532,"tag":551,"props":1083,"children":1084},{"class":553,"line":582},[1085],{"type":532,"tag":551,"props":1086,"children":1087},{"style":558},[1088],{"type":538,"value":1089}," * 所以不能在 for...of 等语法中使用。\n",{"type":532,"tag":551,"props":1091,"children":1092},{"class":553,"line":591},[1093],{"type":532,"tag":551,"props":1094,"children":1095},{"style":558},[1096],{"type":538,"value":1097}," * 可以为该对象实现可迭代协议，在 [Symbol.iterator] 函数中返回该迭代器自身\n",{"type":532,"tag":551,"props":1099,"children":1100},{"class":553,"line":600},[1101],{"type":532,"tag":551,"props":1102,"children":1103},{"style":558},[1104],{"type":538,"value":1105}," * 从新名了下函数名称 createIterator\n",{"type":532,"tag":551,"props":1107,"children":1108},{"class":553,"line":673},[1109],{"type":532,"tag":551,"props":1110,"children":1111},{"style":558},[1112],{"type":538,"value":597},{"type":532,"tag":551,"props":1114,"children":1115},{"class":553,"line":683},[1116,1120,1125,1129,1133,1137],{"type":532,"tag":551,"props":1117,"children":1118},{"style":604},[1119],{"type":538,"value":776},{"type":532,"tag":551,"props":1121,"children":1122},{"style":622},[1123],{"type":538,"value":1124}," createIterator",{"type":532,"tag":551,"props":1126,"children":1127},{"style":616},[1128],{"type":538,"value":785},{"type":532,"tag":551,"props":1130,"children":1131},{"style":610},[1132],{"type":538,"value":790},{"type":532,"tag":551,"props":1134,"children":1135},{"style":616},[1136],{"type":538,"value":795},{"type":532,"tag":551,"props":1138,"children":1139},{"style":616},[1140],{"type":538,"value":800},{"type":532,"tag":551,"props":1142,"children":1143},{"class":553,"line":712},[1144,1148,1152,1156,1160],{"type":532,"tag":551,"props":1145,"children":1146},{"style":604},[1147],{"type":538,"value":809},{"type":532,"tag":551,"props":1149,"children":1150},{"style":610},[1151],{"type":538,"value":814},{"type":532,"tag":551,"props":1153,"children":1154},{"style":616},[1155],{"type":538,"value":619},{"type":532,"tag":551,"props":1157,"children":1158},{"style":821},[1159],{"type":538,"value":824},{"type":532,"tag":551,"props":1161,"children":1162},{"style":616},[1163],{"type":538,"value":829},{"type":532,"tag":551,"props":1165,"children":1166},{"class":553,"line":737},[1167,1171],{"type":532,"tag":551,"props":1168,"children":1169},{"style":836},[1170],{"type":538,"value":839},{"type":532,"tag":551,"props":1172,"children":1173},{"style":616},[1174],{"type":538,"value":800},{"type":532,"tag":551,"props":1176,"children":1177},{"class":553,"line":762},[1178,1182,1186,1190,1194],{"type":532,"tag":551,"props":1179,"children":1180},{"style":622},[1181],{"type":538,"value":852},{"type":532,"tag":551,"props":1183,"children":1184},{"style":616},[1185],{"type":538,"value":857},{"type":532,"tag":551,"props":1187,"children":1188},{"style":604},[1189],{"type":538,"value":862},{"type":532,"tag":551,"props":1191,"children":1192},{"style":616},[1193],{"type":538,"value":867},{"type":532,"tag":551,"props":1195,"children":1196},{"style":616},[1197],{"type":538,"value":800},{"type":532,"tag":551,"props":1199,"children":1200},{"class":553,"line":770},[1201,1205,1209,1213,1217,1221],{"type":532,"tag":551,"props":1202,"children":1203},{"style":836},[1204],{"type":538,"value":880},{"type":532,"tag":551,"props":1206,"children":1207},{"style":610},[1208],{"type":538,"value":814},{"type":532,"tag":551,"props":1210,"children":1211},{"style":616},[1212],{"type":538,"value":889},{"type":532,"tag":551,"props":1214,"children":1215},{"style":610},[1216],{"type":538,"value":894},{"type":532,"tag":551,"props":1218,"children":1219},{"style":616},[1220],{"type":538,"value":694},{"type":532,"tag":551,"props":1222,"children":1223},{"style":901},[1224],{"type":538,"value":904},{"type":532,"tag":551,"props":1226,"children":1227},{"class":553,"line":803},[1228,1232,1236,1240,1244,1248,1252,1256,1260,1264,1268,1272,1276],{"type":532,"tag":551,"props":1229,"children":1230},{"style":604},[1231],{"type":538,"value":913},{"type":532,"tag":551,"props":1233,"children":1234},{"style":616},[1235],{"type":538,"value":918},{"type":532,"tag":551,"props":1237,"children":1238},{"style":901},[1239],{"type":538,"value":923},{"type":532,"tag":551,"props":1241,"children":1242},{"style":616},[1243],{"type":538,"value":857},{"type":532,"tag":551,"props":1245,"children":1246},{"style":610},[1247],{"type":538,"value":894},{"type":532,"tag":551,"props":1249,"children":1250},{"style":616},[1251],{"type":538,"value":936},{"type":532,"tag":551,"props":1253,"children":1254},{"style":610},[1255],{"type":538,"value":941},{"type":532,"tag":551,"props":1257,"children":1258},{"style":604},[1259],{"type":538,"value":946},{"type":532,"tag":551,"props":1261,"children":1262},{"style":616},[1263],{"type":538,"value":951},{"type":532,"tag":551,"props":1265,"children":1266},{"style":901},[1267],{"type":538,"value":956},{"type":532,"tag":551,"props":1269,"children":1270},{"style":616},[1271],{"type":538,"value":857},{"type":532,"tag":551,"props":1273,"children":1274},{"style":836},[1275],{"type":538,"value":965},{"type":532,"tag":551,"props":1277,"children":1278},{"style":616},[1279],{"type":538,"value":970},{"type":532,"tag":551,"props":1281,"children":1282},{"class":553,"line":832},[1283,1287,1291,1295,1299,1303,1307,1311,1315,1319],{"type":532,"tag":551,"props":1284,"children":1285},{"style":604},[1286],{"type":538,"value":979},{"type":532,"tag":551,"props":1288,"children":1289},{"style":616},[1290],{"type":538,"value":918},{"type":532,"tag":551,"props":1292,"children":1293},{"style":901},[1294],{"type":538,"value":923},{"type":532,"tag":551,"props":1296,"children":1297},{"style":616},[1298],{"type":538,"value":857},{"type":532,"tag":551,"props":1300,"children":1301},{"style":604},[1302],{"type":538,"value":996},{"type":532,"tag":551,"props":1304,"children":1305},{"style":616},[1306],{"type":538,"value":651},{"type":532,"tag":551,"props":1308,"children":1309},{"style":901},[1310],{"type":538,"value":956},{"type":532,"tag":551,"props":1312,"children":1313},{"style":616},[1314],{"type":538,"value":857},{"type":532,"tag":551,"props":1316,"children":1317},{"style":836},[1318],{"type":538,"value":1013},{"type":532,"tag":551,"props":1320,"children":1321},{"style":616},[1322],{"type":538,"value":1018},{"type":532,"tag":551,"props":1324,"children":1325},{"class":553,"line":846},[1326],{"type":532,"tag":551,"props":1327,"children":1328},{"style":616},[1329],{"type":538,"value":1027},{"type":532,"tag":551,"props":1331,"children":1332},{"class":553,"line":874},[1333,1338,1343,1347,1352,1357,1361,1365],{"type":532,"tag":551,"props":1334,"children":1335},{"style":616},[1336],{"type":538,"value":1337},"    [",{"type":532,"tag":551,"props":1339,"children":1340},{"style":610},[1341],{"type":538,"value":1342},"Symbol",{"type":532,"tag":551,"props":1344,"children":1345},{"style":616},[1346],{"type":538,"value":694},{"type":532,"tag":551,"props":1348,"children":1349},{"style":610},[1350],{"type":538,"value":1351},"iterator",{"type":532,"tag":551,"props":1353,"children":1354},{"style":616},[1355],{"type":538,"value":1356},"]:",{"type":532,"tag":551,"props":1358,"children":1359},{"style":604},[1360],{"type":538,"value":862},{"type":532,"tag":551,"props":1362,"children":1363},{"style":616},[1364],{"type":538,"value":867},{"type":532,"tag":551,"props":1366,"children":1367},{"style":616},[1368],{"type":538,"value":800},{"type":532,"tag":551,"props":1370,"children":1371},{"class":553,"line":907},[1372,1377,1381,1386,1390,1394,1399,1403,1407,1413],{"type":532,"tag":551,"props":1373,"children":1374},{"style":610},[1375],{"type":538,"value":1376},"      console",{"type":532,"tag":551,"props":1378,"children":1379},{"style":616},[1380],{"type":538,"value":694},{"type":532,"tag":551,"props":1382,"children":1383},{"style":622},[1384],{"type":538,"value":1385},"log",{"type":532,"tag":551,"props":1387,"children":1388},{"style":616},[1389],{"type":538,"value":785},{"type":532,"tag":551,"props":1391,"children":1392},{"style":633},[1393],{"type":538,"value":636},{"type":532,"tag":551,"props":1395,"children":1396},{"style":639},[1397],{"type":538,"value":1398},"返回的迭代器:",{"type":532,"tag":551,"props":1400,"children":1401},{"style":633},[1402],{"type":538,"value":636},{"type":532,"tag":551,"props":1404,"children":1405},{"style":616},[1406],{"type":538,"value":651},{"type":532,"tag":551,"props":1408,"children":1410},{"style":1409},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[1411],{"type":538,"value":1412}," this",{"type":532,"tag":551,"props":1414,"children":1415},{"style":616},[1416],{"type":538,"value":1417},");\n",{"type":532,"tag":551,"props":1419,"children":1420},{"class":553,"line":973},[1421,1425,1429,1434],{"type":532,"tag":551,"props":1422,"children":1423},{"style":836},[1424],{"type":538,"value":880},{"type":532,"tag":551,"props":1426,"children":1427},{"style":1409},[1428],{"type":538,"value":1412},{"type":532,"tag":551,"props":1430,"children":1431},{"style":616},[1432],{"type":538,"value":1433},";",{"type":532,"tag":551,"props":1435,"children":1436},{"style":558},[1437],{"type":538,"value":1438}," // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n",{"type":532,"tag":551,"props":1440,"children":1441},{"class":553,"line":1021},[1442],{"type":532,"tag":551,"props":1443,"children":1444},{"style":616},[1445],{"type":538,"value":1027},{"type":532,"tag":551,"props":1447,"children":1448},{"class":553,"line":1030},[1449],{"type":532,"tag":551,"props":1450,"children":1451},{"style":616},[1452],{"type":538,"value":1036},{"type":532,"tag":551,"props":1454,"children":1455},{"class":553,"line":1039},[1456],{"type":532,"tag":551,"props":1457,"children":1458},{"style":616},[1459],{"type":538,"value":1045},{"type":532,"tag":551,"props":1461,"children":1463},{"class":553,"line":1462},22,[1464],{"type":532,"tag":551,"props":1465,"children":1466},{"emptyLinePlaceholder":677},[1467],{"type":538,"value":680},{"type":532,"tag":551,"props":1469,"children":1471},{"class":553,"line":1470},23,[1472,1476,1481,1485,1489,1493,1498,1502,1507,1511,1516],{"type":532,"tag":551,"props":1473,"children":1474},{"style":604},[1475],{"type":538,"value":607},{"type":532,"tag":551,"props":1477,"children":1478},{"style":610},[1479],{"type":538,"value":1480}," iterator",{"type":532,"tag":551,"props":1482,"children":1483},{"style":616},[1484],{"type":538,"value":619},{"type":532,"tag":551,"props":1486,"children":1487},{"style":622},[1488],{"type":538,"value":1124},{"type":532,"tag":551,"props":1490,"children":1491},{"style":616},[1492],{"type":538,"value":630},{"type":532,"tag":551,"props":1494,"children":1495},{"style":821},[1496],{"type":538,"value":1497},"1",{"type":532,"tag":551,"props":1499,"children":1500},{"style":616},[1501],{"type":538,"value":651},{"type":532,"tag":551,"props":1503,"children":1504},{"style":821},[1505],{"type":538,"value":1506}," 2",{"type":532,"tag":551,"props":1508,"children":1509},{"style":616},[1510],{"type":538,"value":651},{"type":532,"tag":551,"props":1512,"children":1513},{"style":821},[1514],{"type":538,"value":1515}," 3",{"type":532,"tag":551,"props":1517,"children":1518},{"style":616},[1519],{"type":538,"value":670},{"type":532,"tag":551,"props":1521,"children":1523},{"class":553,"line":1522},24,[1524,1529,1533,1537,1542,1546],{"type":532,"tag":551,"props":1525,"children":1526},{"style":610},[1527],{"type":538,"value":1528},"console",{"type":532,"tag":551,"props":1530,"children":1531},{"style":616},[1532],{"type":538,"value":694},{"type":532,"tag":551,"props":1534,"children":1535},{"style":622},[1536],{"type":538,"value":1385},{"type":532,"tag":551,"props":1538,"children":1539},{"style":616},[1540],{"type":538,"value":1541},"(...",{"type":532,"tag":551,"props":1543,"children":1544},{"style":610},[1545],{"type":538,"value":1351},{"type":532,"tag":551,"props":1547,"children":1548},{"style":616},[1549],{"type":538,"value":1417},{"type":532,"tag":1551,"props":1552,"children":1553},"style",{},[1554],{"type":538,"value":1555},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":527,"searchDepth":591,"depth":591,"links":1557},[1558,1559],{"id":535,"depth":564,"text":535},{"id":1048,"depth":564,"text":1048},"markdown","content:3.code-assessment:1.source:1.native-api:7.iterator.md","content","3.code-assessment/1.source/1.native-api/7.iterator.md","md",[1566,1568],{"_path":327,"title":326,"description":1567},"JSON.stringify() 方法将一个 js 对象或值转换为 json 字符串，如果指定了一个 replacer 函数，则可以选择性地替换值，或者指定的 replacer 是数组，则可选择性地仅包含数组指定的属性。",{"_path":337,"title":336,"description":527},1714096147242]