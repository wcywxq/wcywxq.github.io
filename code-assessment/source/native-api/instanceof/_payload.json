[{"data":1,"prerenderedAt":1031},["Reactive",2],{"navigation":3,"/code-assessment/source/native-api/instanceof":543,"/code-assessment/source/native-api/instanceof-surround":1027},[4,269,298,511,519,528],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":510},"代码考核","/code-assessment",[302,404,503],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":498,"_path":499},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":501,"_path":502},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":504,"_path":505,"children":506},"Ts 类型挑战","/code-assessment/type-challeges",[507],{"title":508,"_path":509},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":512,"_path":513,"children":514,"icon":518},"项目","/project",[515],{"title":516,"_path":517},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":520,"_path":521,"children":522,"icon":527},"设计模式","/design-mode",[523,524],{"title":520,"_path":521},{"title":525,"_path":526},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":529,"_path":530,"children":531,"icon":542},"后端语言","/backend-languages",[532],{"title":533,"_path":534,"children":535},"Python","/backend-languages/python",[536,539],{"title":537,"_path":538},"基础","/backend-languages/python/base",{"title":540,"_path":541},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":324,"_dir":544,"_draft":545,"_partial":545,"_locale":546,"title":323,"description":546,"body":547,"_type":1022,"_id":1023,"_source":1024,"_file":1025,"_extension":1026},"native-api",false,"",{"type":548,"children":549,"toc":1020},"root",[550,572,1014],{"type":551,"tag":552,"props":553,"children":554},"element","ol",{},[555,562,567],{"type":551,"tag":556,"props":557,"children":558},"li",{},[559],{"type":560,"value":561},"text","首先获取原型的类型",{"type":551,"tag":556,"props":563,"children":564},{},[565],{"type":560,"value":566},"然后获取对象的类型",{"type":551,"tag":556,"props":568,"children":569},{},[570],{"type":560,"value":571},"然后一直循环判断对象的原型是否等于类型的原型，直到对象原型为 null，因为原型链最终为 null",{"type":551,"tag":573,"props":574,"children":578},"pre",{"className":575,"code":576,"language":577,"meta":546,"style":546},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","function _instanceof(target, origin) {\n  if (typeof target !== \"object\" || target === null) return false;\n  if (typeof origin !== \"function\") {\n    throw new TypeError(\"origin must be function\");\n  }\n  let proto = Object.getPrototypeOf(target); // 相当于: proto = target.__proto__\n  while (proto) {\n    if (proto === origin.prototype) return true;\n    proto = Object.getPrototypeOf(proto);\n  }\n  return false;\n}\n","js",[579],{"type":551,"tag":580,"props":581,"children":582},"code",{"__ignoreMap":546},[583,633,718,762,803,812,865,891,943,980,988,1005],{"type":551,"tag":584,"props":585,"children":588},"span",{"class":586,"line":587},"line",1,[589,595,601,607,613,618,623,628],{"type":551,"tag":584,"props":590,"children":592},{"style":591},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[593],{"type":560,"value":594},"function",{"type":551,"tag":584,"props":596,"children":598},{"style":597},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[599],{"type":560,"value":600}," _instanceof",{"type":551,"tag":584,"props":602,"children":604},{"style":603},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[605],{"type":560,"value":606},"(",{"type":551,"tag":584,"props":608,"children":610},{"style":609},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[611],{"type":560,"value":612},"target",{"type":551,"tag":584,"props":614,"children":615},{"style":603},[616],{"type":560,"value":617},",",{"type":551,"tag":584,"props":619,"children":620},{"style":609},[621],{"type":560,"value":622}," origin",{"type":551,"tag":584,"props":624,"children":625},{"style":603},[626],{"type":560,"value":627},")",{"type":551,"tag":584,"props":629,"children":630},{"style":603},[631],{"type":560,"value":632}," {\n",{"type":551,"tag":584,"props":634,"children":636},{"class":586,"line":635},2,[637,643,648,653,658,663,669,675,680,685,689,694,699,703,708,713],{"type":551,"tag":584,"props":638,"children":640},{"style":639},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[641],{"type":560,"value":642},"  if",{"type":551,"tag":584,"props":644,"children":645},{"style":603},[646],{"type":560,"value":647}," (",{"type":551,"tag":584,"props":649,"children":650},{"style":591},[651],{"type":560,"value":652},"typeof",{"type":551,"tag":584,"props":654,"children":655},{"style":609},[656],{"type":560,"value":657}," target",{"type":551,"tag":584,"props":659,"children":660},{"style":591},[661],{"type":560,"value":662}," !==",{"type":551,"tag":584,"props":664,"children":666},{"style":665},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[667],{"type":560,"value":668}," \"",{"type":551,"tag":584,"props":670,"children":672},{"style":671},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[673],{"type":560,"value":674},"object",{"type":551,"tag":584,"props":676,"children":677},{"style":665},[678],{"type":560,"value":679},"\"",{"type":551,"tag":584,"props":681,"children":682},{"style":591},[683],{"type":560,"value":684}," ||",{"type":551,"tag":584,"props":686,"children":687},{"style":609},[688],{"type":560,"value":657},{"type":551,"tag":584,"props":690,"children":691},{"style":591},[692],{"type":560,"value":693}," ===",{"type":551,"tag":584,"props":695,"children":696},{"style":591},[697],{"type":560,"value":698}," null",{"type":551,"tag":584,"props":700,"children":701},{"style":603},[702],{"type":560,"value":627},{"type":551,"tag":584,"props":704,"children":705},{"style":639},[706],{"type":560,"value":707}," return",{"type":551,"tag":584,"props":709,"children":710},{"style":639},[711],{"type":560,"value":712}," false",{"type":551,"tag":584,"props":714,"children":715},{"style":603},[716],{"type":560,"value":717},";\n",{"type":551,"tag":584,"props":719,"children":721},{"class":586,"line":720},3,[722,726,730,734,738,742,746,750,754,758],{"type":551,"tag":584,"props":723,"children":724},{"style":639},[725],{"type":560,"value":642},{"type":551,"tag":584,"props":727,"children":728},{"style":603},[729],{"type":560,"value":647},{"type":551,"tag":584,"props":731,"children":732},{"style":591},[733],{"type":560,"value":652},{"type":551,"tag":584,"props":735,"children":736},{"style":609},[737],{"type":560,"value":622},{"type":551,"tag":584,"props":739,"children":740},{"style":591},[741],{"type":560,"value":662},{"type":551,"tag":584,"props":743,"children":744},{"style":665},[745],{"type":560,"value":668},{"type":551,"tag":584,"props":747,"children":748},{"style":671},[749],{"type":560,"value":594},{"type":551,"tag":584,"props":751,"children":752},{"style":665},[753],{"type":560,"value":679},{"type":551,"tag":584,"props":755,"children":756},{"style":603},[757],{"type":560,"value":627},{"type":551,"tag":584,"props":759,"children":760},{"style":603},[761],{"type":560,"value":632},{"type":551,"tag":584,"props":763,"children":765},{"class":586,"line":764},4,[766,771,776,781,785,789,794,798],{"type":551,"tag":584,"props":767,"children":768},{"style":639},[769],{"type":560,"value":770},"    throw",{"type":551,"tag":584,"props":772,"children":773},{"style":591},[774],{"type":560,"value":775}," new",{"type":551,"tag":584,"props":777,"children":778},{"style":597},[779],{"type":560,"value":780}," TypeError",{"type":551,"tag":584,"props":782,"children":783},{"style":603},[784],{"type":560,"value":606},{"type":551,"tag":584,"props":786,"children":787},{"style":665},[788],{"type":560,"value":679},{"type":551,"tag":584,"props":790,"children":791},{"style":671},[792],{"type":560,"value":793},"origin must be function",{"type":551,"tag":584,"props":795,"children":796},{"style":665},[797],{"type":560,"value":679},{"type":551,"tag":584,"props":799,"children":800},{"style":603},[801],{"type":560,"value":802},");\n",{"type":551,"tag":584,"props":804,"children":806},{"class":586,"line":805},5,[807],{"type":551,"tag":584,"props":808,"children":809},{"style":603},[810],{"type":560,"value":811},"  }\n",{"type":551,"tag":584,"props":813,"children":815},{"class":586,"line":814},6,[816,821,826,831,836,841,846,850,854,859],{"type":551,"tag":584,"props":817,"children":818},{"style":591},[819],{"type":560,"value":820},"  let",{"type":551,"tag":584,"props":822,"children":823},{"style":609},[824],{"type":560,"value":825}," proto",{"type":551,"tag":584,"props":827,"children":828},{"style":603},[829],{"type":560,"value":830}," =",{"type":551,"tag":584,"props":832,"children":833},{"style":609},[834],{"type":560,"value":835}," Object",{"type":551,"tag":584,"props":837,"children":838},{"style":603},[839],{"type":560,"value":840},".",{"type":551,"tag":584,"props":842,"children":843},{"style":597},[844],{"type":560,"value":845},"getPrototypeOf",{"type":551,"tag":584,"props":847,"children":848},{"style":603},[849],{"type":560,"value":606},{"type":551,"tag":584,"props":851,"children":852},{"style":609},[853],{"type":560,"value":612},{"type":551,"tag":584,"props":855,"children":856},{"style":603},[857],{"type":560,"value":858},");",{"type":551,"tag":584,"props":860,"children":862},{"style":861},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[863],{"type":560,"value":864}," // 相当于: proto = target.__proto__\n",{"type":551,"tag":584,"props":866,"children":868},{"class":586,"line":867},7,[869,874,878,883,887],{"type":551,"tag":584,"props":870,"children":871},{"style":639},[872],{"type":560,"value":873},"  while",{"type":551,"tag":584,"props":875,"children":876},{"style":603},[877],{"type":560,"value":647},{"type":551,"tag":584,"props":879,"children":880},{"style":609},[881],{"type":560,"value":882},"proto",{"type":551,"tag":584,"props":884,"children":885},{"style":603},[886],{"type":560,"value":627},{"type":551,"tag":584,"props":888,"children":889},{"style":603},[890],{"type":560,"value":632},{"type":551,"tag":584,"props":892,"children":894},{"class":586,"line":893},8,[895,900,904,908,912,917,921,926,930,934,939],{"type":551,"tag":584,"props":896,"children":897},{"style":639},[898],{"type":560,"value":899},"    if",{"type":551,"tag":584,"props":901,"children":902},{"style":603},[903],{"type":560,"value":647},{"type":551,"tag":584,"props":905,"children":906},{"style":609},[907],{"type":560,"value":882},{"type":551,"tag":584,"props":909,"children":910},{"style":591},[911],{"type":560,"value":693},{"type":551,"tag":584,"props":913,"children":915},{"style":914},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[916],{"type":560,"value":622},{"type":551,"tag":584,"props":918,"children":919},{"style":603},[920],{"type":560,"value":840},{"type":551,"tag":584,"props":922,"children":923},{"style":914},[924],{"type":560,"value":925},"prototype",{"type":551,"tag":584,"props":927,"children":928},{"style":603},[929],{"type":560,"value":627},{"type":551,"tag":584,"props":931,"children":932},{"style":639},[933],{"type":560,"value":707},{"type":551,"tag":584,"props":935,"children":936},{"style":639},[937],{"type":560,"value":938}," true",{"type":551,"tag":584,"props":940,"children":941},{"style":603},[942],{"type":560,"value":717},{"type":551,"tag":584,"props":944,"children":946},{"class":586,"line":945},9,[947,952,956,960,964,968,972,976],{"type":551,"tag":584,"props":948,"children":949},{"style":609},[950],{"type":560,"value":951},"    proto",{"type":551,"tag":584,"props":953,"children":954},{"style":603},[955],{"type":560,"value":830},{"type":551,"tag":584,"props":957,"children":958},{"style":609},[959],{"type":560,"value":835},{"type":551,"tag":584,"props":961,"children":962},{"style":603},[963],{"type":560,"value":840},{"type":551,"tag":584,"props":965,"children":966},{"style":597},[967],{"type":560,"value":845},{"type":551,"tag":584,"props":969,"children":970},{"style":603},[971],{"type":560,"value":606},{"type":551,"tag":584,"props":973,"children":974},{"style":609},[975],{"type":560,"value":882},{"type":551,"tag":584,"props":977,"children":978},{"style":603},[979],{"type":560,"value":802},{"type":551,"tag":584,"props":981,"children":983},{"class":586,"line":982},10,[984],{"type":551,"tag":584,"props":985,"children":986},{"style":603},[987],{"type":560,"value":811},{"type":551,"tag":584,"props":989,"children":991},{"class":586,"line":990},11,[992,997,1001],{"type":551,"tag":584,"props":993,"children":994},{"style":639},[995],{"type":560,"value":996},"  return",{"type":551,"tag":584,"props":998,"children":999},{"style":639},[1000],{"type":560,"value":712},{"type":551,"tag":584,"props":1002,"children":1003},{"style":603},[1004],{"type":560,"value":717},{"type":551,"tag":584,"props":1006,"children":1008},{"class":586,"line":1007},12,[1009],{"type":551,"tag":584,"props":1010,"children":1011},{"style":603},[1012],{"type":560,"value":1013},"}\n",{"type":551,"tag":1015,"props":1016,"children":1017},"style",{},[1018],{"type":560,"value":1019},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":546,"searchDepth":805,"depth":805,"links":1021},[],"markdown","content:3.code-assessment:1.source:1.native-api:5.instanceof.md","content","3.code-assessment/1.source/1.native-api/5.instanceof.md","md",[1028,1030],{"_path":321,"title":320,"description":1029},"在调用 new 的过程中会发生以上 4 件事情：",{"_path":327,"title":326,"description":546},1714099682429]