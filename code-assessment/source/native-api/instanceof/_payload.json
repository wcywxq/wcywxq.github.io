[{"data":1,"prerenderedAt":1040},["Reactive",2],{"navigation":3,"/code-assessment/source/native-api/instanceof":552,"/code-assessment/source/native-api/instanceof-surround":1036},[4,272,311,529,537],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":310},"八股文","/endorsement",[276,286,297],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"构建工具","/endorsement/build-tools",[290],{"title":291,"_path":292,"children":293},"Webpack","/endorsement/build-tools/webpack",[294],{"title":295,"_path":296},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":298,"_path":299,"children":300},"Html","/endorsement/html",[301,304,307],{"title":302,"_path":303},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":305,"_path":306},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":308,"_path":309},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":312,"_path":313,"children":314,"icon":528},"代码考核","/code-assessment",[315,420,521],{"title":316,"_path":317,"children":318},"源码实现","/code-assessment/source",[319,353,369,397,404,411,414,417],{"title":320,"_path":321,"children":322},"原生 api","/code-assessment/source/native-api",[323,326,329,332,335,338,341,344,347,350],{"title":324,"_path":325},"polyfill","/code-assessment/source/native-api/polyfill",{"title":327,"_path":328},"ajax","/code-assessment/source/native-api/ajax",{"title":330,"_path":331},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":333,"_path":334},"new 操作符","/code-assessment/source/native-api/new",{"title":336,"_path":337},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":339,"_path":340},"定时器","/code-assessment/source/native-api/timer",{"title":342,"_path":343},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":345,"_path":346},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":348,"_path":349},"extends","/code-assessment/source/native-api/extends",{"title":351,"_path":352},"Promise","/code-assessment/source/native-api/promise",{"title":354,"_path":355,"children":356},"函数 Function","/code-assessment/source/function",[357,360,363,366],{"title":358,"_path":359},"函数防抖","/code-assessment/source/function/debounce",{"title":361,"_path":362},"函数节流","/code-assessment/source/function/throttle",{"title":364,"_path":365},"函数柯理化","/code-assessment/source/function/curry",{"title":367,"_path":368},"函数睡眠","/code-assessment/source/function/sleep",{"title":370,"_path":371,"children":372},"数组 Array","/code-assessment/source/array",[373,376,379,382,385,388,391,394],{"title":374,"_path":375},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":377,"_path":378},"数组扁平化","/code-assessment/source/array/flat",{"title":380,"_path":381},"原型方法","/code-assessment/source/array/prototype-method",{"title":383,"_path":384},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":386,"_path":387},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":389,"_path":390},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":392,"_path":393},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":395,"_path":396},"二维数组","/code-assessment/source/array/2d-array",{"title":398,"_path":399,"children":400},"字符串 String","/code-assessment/source/string",[401],{"title":402,"_path":403},"repeat()","/code-assessment/source/string/repeat",{"title":405,"_path":406,"children":407},"集合 Set","/code-assessment/source/set",[408],{"title":409,"_path":410},"遍历集合","/code-assessment/source/set/traverse",{"title":412,"_path":413},"获取通用类型","/code-assessment/source/get-generic-type",{"title":415,"_path":416},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":418,"_path":419},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":421,"_path":422,"children":423},"业务场景","/code-assessment/scene",[424,454,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518],{"title":351,"_path":425,"children":426},"/code-assessment/scene/promise",[427,430,433,436,439,442,445,448,451],{"title":428,"_path":429},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":431,"_path":432},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":434,"_path":435},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":437,"_path":438},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":440,"_path":441},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":443,"_path":444},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":446,"_path":447},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":449,"_path":450},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":452,"_path":453},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":455,"_path":456,"children":457},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[458,461],{"title":459,"_path":460},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":462,"_path":463},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":465,"_path":466},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":468,"_path":469},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":471,"_path":472},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":474,"_path":475},"倒计时","/code-assessment/scene/countdown",{"title":477,"_path":478},"日期格式化","/code-assessment/scene/date-format",{"title":480,"_path":481},"实现前端路由","/code-assessment/scene/frontend-route",{"title":483,"_path":484},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":486,"_path":487},"lodash.get","/code-assessment/scene/lodash-get",{"title":489,"_path":490},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":492,"_path":493},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":495,"_path":496},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":498,"_path":499},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":501,"_path":502},"随机数","/code-assessment/scene/random-number",{"title":504,"_path":505},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":507,"_path":508},"sku 算法实现","/code-assessment/scene/sku",{"title":510,"_path":511},"整数分割","/code-assessment/scene/split-number",{"title":513,"_path":514},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":516,"_path":517},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":519,"_path":520},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":522,"_path":523,"children":524},"Ts 类型挑战","/code-assessment/type-challeges",[525],{"title":526,"_path":527},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":530,"_path":531,"children":532,"icon":536},"项目","/project",[533],{"title":534,"_path":535},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":538,"_path":539,"children":540,"icon":551},"后端语言","/backend-languages",[541],{"title":542,"_path":543,"children":544},"Python","/backend-languages/python",[545,548],{"title":546,"_path":547},"基础","/backend-languages/python/base",{"title":549,"_path":550},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":337,"_dir":553,"_draft":554,"_partial":554,"_locale":555,"title":336,"description":555,"body":556,"_type":1031,"_id":1032,"_source":1033,"_file":1034,"_extension":1035},"native-api",false,"",{"type":557,"children":558,"toc":1029},"root",[559,581,1023],{"type":560,"tag":561,"props":562,"children":563},"element","ol",{},[564,571,576],{"type":560,"tag":565,"props":566,"children":567},"li",{},[568],{"type":569,"value":570},"text","首先获取原型的类型",{"type":560,"tag":565,"props":572,"children":573},{},[574],{"type":569,"value":575},"然后获取对象的类型",{"type":560,"tag":565,"props":577,"children":578},{},[579],{"type":569,"value":580},"然后一直循环判断对象的原型是否等于类型的原型，直到对象原型为 null，因为原型链最终为 null",{"type":560,"tag":582,"props":583,"children":587},"pre",{"className":584,"code":585,"language":586,"meta":555,"style":555},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","function _instanceof(target, origin) {\n  if (typeof target !== \"object\" || target === null) return false;\n  if (typeof origin !== \"function\") {\n    throw new TypeError(\"origin must be function\");\n  }\n  let proto = Object.getPrototypeOf(target); // 相当于: proto = target.__proto__\n  while (proto) {\n    if (proto === origin.prototype) return true;\n    proto = Object.getPrototypeOf(proto);\n  }\n  return false;\n}\n","js",[588],{"type":560,"tag":589,"props":590,"children":591},"code",{"__ignoreMap":555},[592,642,727,771,812,821,874,900,952,989,997,1014],{"type":560,"tag":593,"props":594,"children":597},"span",{"class":595,"line":596},"line",1,[598,604,610,616,622,627,632,637],{"type":560,"tag":593,"props":599,"children":601},{"style":600},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[602],{"type":569,"value":603},"function",{"type":560,"tag":593,"props":605,"children":607},{"style":606},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[608],{"type":569,"value":609}," _instanceof",{"type":560,"tag":593,"props":611,"children":613},{"style":612},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[614],{"type":569,"value":615},"(",{"type":560,"tag":593,"props":617,"children":619},{"style":618},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[620],{"type":569,"value":621},"target",{"type":560,"tag":593,"props":623,"children":624},{"style":612},[625],{"type":569,"value":626},",",{"type":560,"tag":593,"props":628,"children":629},{"style":618},[630],{"type":569,"value":631}," origin",{"type":560,"tag":593,"props":633,"children":634},{"style":612},[635],{"type":569,"value":636},")",{"type":560,"tag":593,"props":638,"children":639},{"style":612},[640],{"type":569,"value":641}," {\n",{"type":560,"tag":593,"props":643,"children":645},{"class":595,"line":644},2,[646,652,657,662,667,672,678,684,689,694,698,703,708,712,717,722],{"type":560,"tag":593,"props":647,"children":649},{"style":648},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[650],{"type":569,"value":651},"  if",{"type":560,"tag":593,"props":653,"children":654},{"style":612},[655],{"type":569,"value":656}," (",{"type":560,"tag":593,"props":658,"children":659},{"style":600},[660],{"type":569,"value":661},"typeof",{"type":560,"tag":593,"props":663,"children":664},{"style":618},[665],{"type":569,"value":666}," target",{"type":560,"tag":593,"props":668,"children":669},{"style":600},[670],{"type":569,"value":671}," !==",{"type":560,"tag":593,"props":673,"children":675},{"style":674},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[676],{"type":569,"value":677}," \"",{"type":560,"tag":593,"props":679,"children":681},{"style":680},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[682],{"type":569,"value":683},"object",{"type":560,"tag":593,"props":685,"children":686},{"style":674},[687],{"type":569,"value":688},"\"",{"type":560,"tag":593,"props":690,"children":691},{"style":600},[692],{"type":569,"value":693}," ||",{"type":560,"tag":593,"props":695,"children":696},{"style":618},[697],{"type":569,"value":666},{"type":560,"tag":593,"props":699,"children":700},{"style":600},[701],{"type":569,"value":702}," ===",{"type":560,"tag":593,"props":704,"children":705},{"style":600},[706],{"type":569,"value":707}," null",{"type":560,"tag":593,"props":709,"children":710},{"style":612},[711],{"type":569,"value":636},{"type":560,"tag":593,"props":713,"children":714},{"style":648},[715],{"type":569,"value":716}," return",{"type":560,"tag":593,"props":718,"children":719},{"style":648},[720],{"type":569,"value":721}," false",{"type":560,"tag":593,"props":723,"children":724},{"style":612},[725],{"type":569,"value":726},";\n",{"type":560,"tag":593,"props":728,"children":730},{"class":595,"line":729},3,[731,735,739,743,747,751,755,759,763,767],{"type":560,"tag":593,"props":732,"children":733},{"style":648},[734],{"type":569,"value":651},{"type":560,"tag":593,"props":736,"children":737},{"style":612},[738],{"type":569,"value":656},{"type":560,"tag":593,"props":740,"children":741},{"style":600},[742],{"type":569,"value":661},{"type":560,"tag":593,"props":744,"children":745},{"style":618},[746],{"type":569,"value":631},{"type":560,"tag":593,"props":748,"children":749},{"style":600},[750],{"type":569,"value":671},{"type":560,"tag":593,"props":752,"children":753},{"style":674},[754],{"type":569,"value":677},{"type":560,"tag":593,"props":756,"children":757},{"style":680},[758],{"type":569,"value":603},{"type":560,"tag":593,"props":760,"children":761},{"style":674},[762],{"type":569,"value":688},{"type":560,"tag":593,"props":764,"children":765},{"style":612},[766],{"type":569,"value":636},{"type":560,"tag":593,"props":768,"children":769},{"style":612},[770],{"type":569,"value":641},{"type":560,"tag":593,"props":772,"children":774},{"class":595,"line":773},4,[775,780,785,790,794,798,803,807],{"type":560,"tag":593,"props":776,"children":777},{"style":648},[778],{"type":569,"value":779},"    throw",{"type":560,"tag":593,"props":781,"children":782},{"style":600},[783],{"type":569,"value":784}," new",{"type":560,"tag":593,"props":786,"children":787},{"style":606},[788],{"type":569,"value":789}," TypeError",{"type":560,"tag":593,"props":791,"children":792},{"style":612},[793],{"type":569,"value":615},{"type":560,"tag":593,"props":795,"children":796},{"style":674},[797],{"type":569,"value":688},{"type":560,"tag":593,"props":799,"children":800},{"style":680},[801],{"type":569,"value":802},"origin must be function",{"type":560,"tag":593,"props":804,"children":805},{"style":674},[806],{"type":569,"value":688},{"type":560,"tag":593,"props":808,"children":809},{"style":612},[810],{"type":569,"value":811},");\n",{"type":560,"tag":593,"props":813,"children":815},{"class":595,"line":814},5,[816],{"type":560,"tag":593,"props":817,"children":818},{"style":612},[819],{"type":569,"value":820},"  }\n",{"type":560,"tag":593,"props":822,"children":824},{"class":595,"line":823},6,[825,830,835,840,845,850,855,859,863,868],{"type":560,"tag":593,"props":826,"children":827},{"style":600},[828],{"type":569,"value":829},"  let",{"type":560,"tag":593,"props":831,"children":832},{"style":618},[833],{"type":569,"value":834}," proto",{"type":560,"tag":593,"props":836,"children":837},{"style":612},[838],{"type":569,"value":839}," =",{"type":560,"tag":593,"props":841,"children":842},{"style":618},[843],{"type":569,"value":844}," Object",{"type":560,"tag":593,"props":846,"children":847},{"style":612},[848],{"type":569,"value":849},".",{"type":560,"tag":593,"props":851,"children":852},{"style":606},[853],{"type":569,"value":854},"getPrototypeOf",{"type":560,"tag":593,"props":856,"children":857},{"style":612},[858],{"type":569,"value":615},{"type":560,"tag":593,"props":860,"children":861},{"style":618},[862],{"type":569,"value":621},{"type":560,"tag":593,"props":864,"children":865},{"style":612},[866],{"type":569,"value":867},");",{"type":560,"tag":593,"props":869,"children":871},{"style":870},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[872],{"type":569,"value":873}," // 相当于: proto = target.__proto__\n",{"type":560,"tag":593,"props":875,"children":877},{"class":595,"line":876},7,[878,883,887,892,896],{"type":560,"tag":593,"props":879,"children":880},{"style":648},[881],{"type":569,"value":882},"  while",{"type":560,"tag":593,"props":884,"children":885},{"style":612},[886],{"type":569,"value":656},{"type":560,"tag":593,"props":888,"children":889},{"style":618},[890],{"type":569,"value":891},"proto",{"type":560,"tag":593,"props":893,"children":894},{"style":612},[895],{"type":569,"value":636},{"type":560,"tag":593,"props":897,"children":898},{"style":612},[899],{"type":569,"value":641},{"type":560,"tag":593,"props":901,"children":903},{"class":595,"line":902},8,[904,909,913,917,921,926,930,935,939,943,948],{"type":560,"tag":593,"props":905,"children":906},{"style":648},[907],{"type":569,"value":908},"    if",{"type":560,"tag":593,"props":910,"children":911},{"style":612},[912],{"type":569,"value":656},{"type":560,"tag":593,"props":914,"children":915},{"style":618},[916],{"type":569,"value":891},{"type":560,"tag":593,"props":918,"children":919},{"style":600},[920],{"type":569,"value":702},{"type":560,"tag":593,"props":922,"children":924},{"style":923},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[925],{"type":569,"value":631},{"type":560,"tag":593,"props":927,"children":928},{"style":612},[929],{"type":569,"value":849},{"type":560,"tag":593,"props":931,"children":932},{"style":923},[933],{"type":569,"value":934},"prototype",{"type":560,"tag":593,"props":936,"children":937},{"style":612},[938],{"type":569,"value":636},{"type":560,"tag":593,"props":940,"children":941},{"style":648},[942],{"type":569,"value":716},{"type":560,"tag":593,"props":944,"children":945},{"style":648},[946],{"type":569,"value":947}," true",{"type":560,"tag":593,"props":949,"children":950},{"style":612},[951],{"type":569,"value":726},{"type":560,"tag":593,"props":953,"children":955},{"class":595,"line":954},9,[956,961,965,969,973,977,981,985],{"type":560,"tag":593,"props":957,"children":958},{"style":618},[959],{"type":569,"value":960},"    proto",{"type":560,"tag":593,"props":962,"children":963},{"style":612},[964],{"type":569,"value":839},{"type":560,"tag":593,"props":966,"children":967},{"style":618},[968],{"type":569,"value":844},{"type":560,"tag":593,"props":970,"children":971},{"style":612},[972],{"type":569,"value":849},{"type":560,"tag":593,"props":974,"children":975},{"style":606},[976],{"type":569,"value":854},{"type":560,"tag":593,"props":978,"children":979},{"style":612},[980],{"type":569,"value":615},{"type":560,"tag":593,"props":982,"children":983},{"style":618},[984],{"type":569,"value":891},{"type":560,"tag":593,"props":986,"children":987},{"style":612},[988],{"type":569,"value":811},{"type":560,"tag":593,"props":990,"children":992},{"class":595,"line":991},10,[993],{"type":560,"tag":593,"props":994,"children":995},{"style":612},[996],{"type":569,"value":820},{"type":560,"tag":593,"props":998,"children":1000},{"class":595,"line":999},11,[1001,1006,1010],{"type":560,"tag":593,"props":1002,"children":1003},{"style":648},[1004],{"type":569,"value":1005},"  return",{"type":560,"tag":593,"props":1007,"children":1008},{"style":648},[1009],{"type":569,"value":721},{"type":560,"tag":593,"props":1011,"children":1012},{"style":612},[1013],{"type":569,"value":726},{"type":560,"tag":593,"props":1015,"children":1017},{"class":595,"line":1016},12,[1018],{"type":560,"tag":593,"props":1019,"children":1020},{"style":612},[1021],{"type":569,"value":1022},"}\n",{"type":560,"tag":1024,"props":1025,"children":1026},"style",{},[1027],{"type":569,"value":1028},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":555,"searchDepth":814,"depth":814,"links":1030},[],"markdown","content:3.code-assessment:1.source:1.native-api:5.instanceof.md","content","3.code-assessment/1.source/1.native-api/5.instanceof.md","md",[1037,1039],{"_path":334,"title":333,"description":1038},"在调用 new 的过程中会发生以上 4 件事情：",{"_path":340,"title":339,"description":555},1716810729948]