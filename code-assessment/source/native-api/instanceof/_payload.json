[{"data":1,"prerenderedAt":988},["Reactive",2],{"navigation":3,"/code-assessment/source/native-api/instanceof":500,"/code-assessment/source/native-api/instanceof-surround":984},[4,269,298,468,476,485],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":467},"代码考核","/code-assessment",[302,367,460],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369,"children":370},"业务场景","/code-assessment/scene",[371,396,406,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457],{"title":372,"_path":373,"children":374},"Promise","/code-assessment/scene/promise",[375,378,381,384,387,390,393],{"title":376,"_path":377},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":379,"_path":380},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":382,"_path":383},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":385,"_path":386},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":388,"_path":389},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":391,"_path":392},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":394,"_path":395},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":397,"_path":398,"children":399},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[400,403],{"title":401,"_path":402},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":404,"_path":405},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":407,"_path":408},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":410,"_path":411},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":413,"_path":414},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":416,"_path":417},"倒计时","/code-assessment/scene/countdown",{"title":419,"_path":420},"日期格式化","/code-assessment/scene/date-format",{"title":422,"_path":423},"实现前端路由","/code-assessment/scene/frontend-route",{"title":425,"_path":426},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":428,"_path":429},"lodash.get","/code-assessment/scene/lodash-get",{"title":431,"_path":432},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":434,"_path":435},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":437,"_path":438},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":440,"_path":441},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":443,"_path":444},"随机数","/code-assessment/scene/random-number",{"title":446,"_path":447},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":449,"_path":450},"sku 算法实现","/code-assessment/scene/sku",{"title":452,"_path":453},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":455,"_path":456},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":458,"_path":459},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":461,"_path":462,"children":463},"Ts 类型挑战","/code-assessment/type-challeges",[464],{"title":465,"_path":466},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":469,"_path":470,"children":471,"icon":475},"项目","/project",[472],{"title":473,"_path":474},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":477,"_path":478,"children":479,"icon":484},"设计模式","/design-mode",[480,481],{"title":477,"_path":478},{"title":482,"_path":483},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":486,"_path":487,"children":488,"icon":499},"后端语言","/backend-languages",[489],{"title":490,"_path":491,"children":492},"Python","/backend-languages/python",[493,496],{"title":494,"_path":495},"基础","/backend-languages/python/base",{"title":497,"_path":498},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":321,"_dir":501,"_draft":502,"_partial":502,"_locale":503,"title":320,"description":503,"body":504,"_type":979,"_id":980,"_source":981,"_file":982,"_extension":983},"native-api",false,"",{"type":505,"children":506,"toc":977},"root",[507,529,971],{"type":508,"tag":509,"props":510,"children":511},"element","ol",{},[512,519,524],{"type":508,"tag":513,"props":514,"children":515},"li",{},[516],{"type":517,"value":518},"text","首先获取原型的类型",{"type":508,"tag":513,"props":520,"children":521},{},[522],{"type":517,"value":523},"然后获取对象的类型",{"type":508,"tag":513,"props":525,"children":526},{},[527],{"type":517,"value":528},"然后一直循环判断对象的原型是否等于类型的原型，直到对象原型为 null，因为原型链最终为 null",{"type":508,"tag":530,"props":531,"children":535},"pre",{"className":532,"code":533,"language":534,"meta":503,"style":503},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","function _instanceof(target, origin) {\n  if (typeof target !== \"object\" || target === null) return false;\n  if (typeof origin !== \"function\") {\n    throw new TypeError(\"origin must be function\");\n  }\n  let proto = Object.getPrototypeOf(target); // 相当于: proto = target.__proto__\n  while (proto) {\n    if (proto === origin.prototype) return true;\n    proto = Object.getPrototypeOf(proto);\n  }\n  return false;\n}\n","js",[536],{"type":508,"tag":537,"props":538,"children":539},"code",{"__ignoreMap":503},[540,590,675,719,760,769,822,848,900,937,945,962],{"type":508,"tag":541,"props":542,"children":545},"span",{"class":543,"line":544},"line",1,[546,552,558,564,570,575,580,585],{"type":508,"tag":541,"props":547,"children":549},{"style":548},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[550],{"type":517,"value":551},"function",{"type":508,"tag":541,"props":553,"children":555},{"style":554},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[556],{"type":517,"value":557}," _instanceof",{"type":508,"tag":541,"props":559,"children":561},{"style":560},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[562],{"type":517,"value":563},"(",{"type":508,"tag":541,"props":565,"children":567},{"style":566},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[568],{"type":517,"value":569},"target",{"type":508,"tag":541,"props":571,"children":572},{"style":560},[573],{"type":517,"value":574},",",{"type":508,"tag":541,"props":576,"children":577},{"style":566},[578],{"type":517,"value":579}," origin",{"type":508,"tag":541,"props":581,"children":582},{"style":560},[583],{"type":517,"value":584},")",{"type":508,"tag":541,"props":586,"children":587},{"style":560},[588],{"type":517,"value":589}," {\n",{"type":508,"tag":541,"props":591,"children":593},{"class":543,"line":592},2,[594,600,605,610,615,620,626,632,637,642,646,651,656,660,665,670],{"type":508,"tag":541,"props":595,"children":597},{"style":596},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[598],{"type":517,"value":599},"  if",{"type":508,"tag":541,"props":601,"children":602},{"style":560},[603],{"type":517,"value":604}," (",{"type":508,"tag":541,"props":606,"children":607},{"style":548},[608],{"type":517,"value":609},"typeof",{"type":508,"tag":541,"props":611,"children":612},{"style":566},[613],{"type":517,"value":614}," target",{"type":508,"tag":541,"props":616,"children":617},{"style":548},[618],{"type":517,"value":619}," !==",{"type":508,"tag":541,"props":621,"children":623},{"style":622},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[624],{"type":517,"value":625}," \"",{"type":508,"tag":541,"props":627,"children":629},{"style":628},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[630],{"type":517,"value":631},"object",{"type":508,"tag":541,"props":633,"children":634},{"style":622},[635],{"type":517,"value":636},"\"",{"type":508,"tag":541,"props":638,"children":639},{"style":548},[640],{"type":517,"value":641}," ||",{"type":508,"tag":541,"props":643,"children":644},{"style":566},[645],{"type":517,"value":614},{"type":508,"tag":541,"props":647,"children":648},{"style":548},[649],{"type":517,"value":650}," ===",{"type":508,"tag":541,"props":652,"children":653},{"style":548},[654],{"type":517,"value":655}," null",{"type":508,"tag":541,"props":657,"children":658},{"style":560},[659],{"type":517,"value":584},{"type":508,"tag":541,"props":661,"children":662},{"style":596},[663],{"type":517,"value":664}," return",{"type":508,"tag":541,"props":666,"children":667},{"style":596},[668],{"type":517,"value":669}," false",{"type":508,"tag":541,"props":671,"children":672},{"style":560},[673],{"type":517,"value":674},";\n",{"type":508,"tag":541,"props":676,"children":678},{"class":543,"line":677},3,[679,683,687,691,695,699,703,707,711,715],{"type":508,"tag":541,"props":680,"children":681},{"style":596},[682],{"type":517,"value":599},{"type":508,"tag":541,"props":684,"children":685},{"style":560},[686],{"type":517,"value":604},{"type":508,"tag":541,"props":688,"children":689},{"style":548},[690],{"type":517,"value":609},{"type":508,"tag":541,"props":692,"children":693},{"style":566},[694],{"type":517,"value":579},{"type":508,"tag":541,"props":696,"children":697},{"style":548},[698],{"type":517,"value":619},{"type":508,"tag":541,"props":700,"children":701},{"style":622},[702],{"type":517,"value":625},{"type":508,"tag":541,"props":704,"children":705},{"style":628},[706],{"type":517,"value":551},{"type":508,"tag":541,"props":708,"children":709},{"style":622},[710],{"type":517,"value":636},{"type":508,"tag":541,"props":712,"children":713},{"style":560},[714],{"type":517,"value":584},{"type":508,"tag":541,"props":716,"children":717},{"style":560},[718],{"type":517,"value":589},{"type":508,"tag":541,"props":720,"children":722},{"class":543,"line":721},4,[723,728,733,738,742,746,751,755],{"type":508,"tag":541,"props":724,"children":725},{"style":596},[726],{"type":517,"value":727},"    throw",{"type":508,"tag":541,"props":729,"children":730},{"style":548},[731],{"type":517,"value":732}," new",{"type":508,"tag":541,"props":734,"children":735},{"style":554},[736],{"type":517,"value":737}," TypeError",{"type":508,"tag":541,"props":739,"children":740},{"style":560},[741],{"type":517,"value":563},{"type":508,"tag":541,"props":743,"children":744},{"style":622},[745],{"type":517,"value":636},{"type":508,"tag":541,"props":747,"children":748},{"style":628},[749],{"type":517,"value":750},"origin must be function",{"type":508,"tag":541,"props":752,"children":753},{"style":622},[754],{"type":517,"value":636},{"type":508,"tag":541,"props":756,"children":757},{"style":560},[758],{"type":517,"value":759},");\n",{"type":508,"tag":541,"props":761,"children":763},{"class":543,"line":762},5,[764],{"type":508,"tag":541,"props":765,"children":766},{"style":560},[767],{"type":517,"value":768},"  }\n",{"type":508,"tag":541,"props":770,"children":772},{"class":543,"line":771},6,[773,778,783,788,793,798,803,807,811,816],{"type":508,"tag":541,"props":774,"children":775},{"style":548},[776],{"type":517,"value":777},"  let",{"type":508,"tag":541,"props":779,"children":780},{"style":566},[781],{"type":517,"value":782}," proto",{"type":508,"tag":541,"props":784,"children":785},{"style":560},[786],{"type":517,"value":787}," =",{"type":508,"tag":541,"props":789,"children":790},{"style":566},[791],{"type":517,"value":792}," Object",{"type":508,"tag":541,"props":794,"children":795},{"style":560},[796],{"type":517,"value":797},".",{"type":508,"tag":541,"props":799,"children":800},{"style":554},[801],{"type":517,"value":802},"getPrototypeOf",{"type":508,"tag":541,"props":804,"children":805},{"style":560},[806],{"type":517,"value":563},{"type":508,"tag":541,"props":808,"children":809},{"style":566},[810],{"type":517,"value":569},{"type":508,"tag":541,"props":812,"children":813},{"style":560},[814],{"type":517,"value":815},");",{"type":508,"tag":541,"props":817,"children":819},{"style":818},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[820],{"type":517,"value":821}," // 相当于: proto = target.__proto__\n",{"type":508,"tag":541,"props":823,"children":825},{"class":543,"line":824},7,[826,831,835,840,844],{"type":508,"tag":541,"props":827,"children":828},{"style":596},[829],{"type":517,"value":830},"  while",{"type":508,"tag":541,"props":832,"children":833},{"style":560},[834],{"type":517,"value":604},{"type":508,"tag":541,"props":836,"children":837},{"style":566},[838],{"type":517,"value":839},"proto",{"type":508,"tag":541,"props":841,"children":842},{"style":560},[843],{"type":517,"value":584},{"type":508,"tag":541,"props":845,"children":846},{"style":560},[847],{"type":517,"value":589},{"type":508,"tag":541,"props":849,"children":851},{"class":543,"line":850},8,[852,857,861,865,869,874,878,883,887,891,896],{"type":508,"tag":541,"props":853,"children":854},{"style":596},[855],{"type":517,"value":856},"    if",{"type":508,"tag":541,"props":858,"children":859},{"style":560},[860],{"type":517,"value":604},{"type":508,"tag":541,"props":862,"children":863},{"style":566},[864],{"type":517,"value":839},{"type":508,"tag":541,"props":866,"children":867},{"style":548},[868],{"type":517,"value":650},{"type":508,"tag":541,"props":870,"children":872},{"style":871},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[873],{"type":517,"value":579},{"type":508,"tag":541,"props":875,"children":876},{"style":560},[877],{"type":517,"value":797},{"type":508,"tag":541,"props":879,"children":880},{"style":871},[881],{"type":517,"value":882},"prototype",{"type":508,"tag":541,"props":884,"children":885},{"style":560},[886],{"type":517,"value":584},{"type":508,"tag":541,"props":888,"children":889},{"style":596},[890],{"type":517,"value":664},{"type":508,"tag":541,"props":892,"children":893},{"style":596},[894],{"type":517,"value":895}," true",{"type":508,"tag":541,"props":897,"children":898},{"style":560},[899],{"type":517,"value":674},{"type":508,"tag":541,"props":901,"children":903},{"class":543,"line":902},9,[904,909,913,917,921,925,929,933],{"type":508,"tag":541,"props":905,"children":906},{"style":566},[907],{"type":517,"value":908},"    proto",{"type":508,"tag":541,"props":910,"children":911},{"style":560},[912],{"type":517,"value":787},{"type":508,"tag":541,"props":914,"children":915},{"style":566},[916],{"type":517,"value":792},{"type":508,"tag":541,"props":918,"children":919},{"style":560},[920],{"type":517,"value":797},{"type":508,"tag":541,"props":922,"children":923},{"style":554},[924],{"type":517,"value":802},{"type":508,"tag":541,"props":926,"children":927},{"style":560},[928],{"type":517,"value":563},{"type":508,"tag":541,"props":930,"children":931},{"style":566},[932],{"type":517,"value":839},{"type":508,"tag":541,"props":934,"children":935},{"style":560},[936],{"type":517,"value":759},{"type":508,"tag":541,"props":938,"children":940},{"class":543,"line":939},10,[941],{"type":508,"tag":541,"props":942,"children":943},{"style":560},[944],{"type":517,"value":768},{"type":508,"tag":541,"props":946,"children":948},{"class":543,"line":947},11,[949,954,958],{"type":508,"tag":541,"props":950,"children":951},{"style":596},[952],{"type":517,"value":953},"  return",{"type":508,"tag":541,"props":955,"children":956},{"style":596},[957],{"type":517,"value":669},{"type":508,"tag":541,"props":959,"children":960},{"style":560},[961],{"type":517,"value":674},{"type":508,"tag":541,"props":963,"children":965},{"class":543,"line":964},12,[966],{"type":508,"tag":541,"props":967,"children":968},{"style":560},[969],{"type":517,"value":970},"}\n",{"type":508,"tag":972,"props":973,"children":974},"style",{},[975],{"type":517,"value":976},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":503,"searchDepth":762,"depth":762,"links":978},[],"markdown","content:3.code-assessment:1.source:1.native-api:4.instanceof.md","content","3.code-assessment/1.source/1.native-api/4.instanceof.md","md",[985,987],{"_path":318,"title":317,"description":986},"在调用 new 的过程中会发生以上 4 件事情：",{"_path":324,"title":323,"description":503},1714054341233]