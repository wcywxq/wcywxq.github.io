[{"data":1,"prerenderedAt":1034},["Reactive",2],{"navigation":3,"/code-assessment/source/native-api/instanceof":546,"/code-assessment/source/native-api/instanceof-surround":1030},[4,269,298,514,522,531],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":513},"代码考核","/code-assessment",[302,404,506],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"整数分割","/code-assessment/scene/split-number",{"title":498,"_path":499},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":501,"_path":502},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":504,"_path":505},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":507,"_path":508,"children":509},"Ts 类型挑战","/code-assessment/type-challeges",[510],{"title":511,"_path":512},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":515,"_path":516,"children":517,"icon":521},"项目","/project",[518],{"title":519,"_path":520},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":523,"_path":524,"children":525,"icon":530},"设计模式","/design-mode",[526,527],{"title":523,"_path":524},{"title":528,"_path":529},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":532,"_path":533,"children":534,"icon":545},"后端语言","/backend-languages",[535],{"title":536,"_path":537,"children":538},"Python","/backend-languages/python",[539,542],{"title":540,"_path":541},"基础","/backend-languages/python/base",{"title":543,"_path":544},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":324,"_dir":547,"_draft":548,"_partial":548,"_locale":549,"title":323,"description":549,"body":550,"_type":1025,"_id":1026,"_source":1027,"_file":1028,"_extension":1029},"native-api",false,"",{"type":551,"children":552,"toc":1023},"root",[553,575,1017],{"type":554,"tag":555,"props":556,"children":557},"element","ol",{},[558,565,570],{"type":554,"tag":559,"props":560,"children":561},"li",{},[562],{"type":563,"value":564},"text","首先获取原型的类型",{"type":554,"tag":559,"props":566,"children":567},{},[568],{"type":563,"value":569},"然后获取对象的类型",{"type":554,"tag":559,"props":571,"children":572},{},[573],{"type":563,"value":574},"然后一直循环判断对象的原型是否等于类型的原型，直到对象原型为 null，因为原型链最终为 null",{"type":554,"tag":576,"props":577,"children":581},"pre",{"className":578,"code":579,"language":580,"meta":549,"style":549},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","function _instanceof(target, origin) {\n  if (typeof target !== \"object\" || target === null) return false;\n  if (typeof origin !== \"function\") {\n    throw new TypeError(\"origin must be function\");\n  }\n  let proto = Object.getPrototypeOf(target); // 相当于: proto = target.__proto__\n  while (proto) {\n    if (proto === origin.prototype) return true;\n    proto = Object.getPrototypeOf(proto);\n  }\n  return false;\n}\n","js",[582],{"type":554,"tag":583,"props":584,"children":585},"code",{"__ignoreMap":549},[586,636,721,765,806,815,868,894,946,983,991,1008],{"type":554,"tag":587,"props":588,"children":591},"span",{"class":589,"line":590},"line",1,[592,598,604,610,616,621,626,631],{"type":554,"tag":587,"props":593,"children":595},{"style":594},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[596],{"type":563,"value":597},"function",{"type":554,"tag":587,"props":599,"children":601},{"style":600},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[602],{"type":563,"value":603}," _instanceof",{"type":554,"tag":587,"props":605,"children":607},{"style":606},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[608],{"type":563,"value":609},"(",{"type":554,"tag":587,"props":611,"children":613},{"style":612},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[614],{"type":563,"value":615},"target",{"type":554,"tag":587,"props":617,"children":618},{"style":606},[619],{"type":563,"value":620},",",{"type":554,"tag":587,"props":622,"children":623},{"style":612},[624],{"type":563,"value":625}," origin",{"type":554,"tag":587,"props":627,"children":628},{"style":606},[629],{"type":563,"value":630},")",{"type":554,"tag":587,"props":632,"children":633},{"style":606},[634],{"type":563,"value":635}," {\n",{"type":554,"tag":587,"props":637,"children":639},{"class":589,"line":638},2,[640,646,651,656,661,666,672,678,683,688,692,697,702,706,711,716],{"type":554,"tag":587,"props":641,"children":643},{"style":642},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[644],{"type":563,"value":645},"  if",{"type":554,"tag":587,"props":647,"children":648},{"style":606},[649],{"type":563,"value":650}," (",{"type":554,"tag":587,"props":652,"children":653},{"style":594},[654],{"type":563,"value":655},"typeof",{"type":554,"tag":587,"props":657,"children":658},{"style":612},[659],{"type":563,"value":660}," target",{"type":554,"tag":587,"props":662,"children":663},{"style":594},[664],{"type":563,"value":665}," !==",{"type":554,"tag":587,"props":667,"children":669},{"style":668},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[670],{"type":563,"value":671}," \"",{"type":554,"tag":587,"props":673,"children":675},{"style":674},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[676],{"type":563,"value":677},"object",{"type":554,"tag":587,"props":679,"children":680},{"style":668},[681],{"type":563,"value":682},"\"",{"type":554,"tag":587,"props":684,"children":685},{"style":594},[686],{"type":563,"value":687}," ||",{"type":554,"tag":587,"props":689,"children":690},{"style":612},[691],{"type":563,"value":660},{"type":554,"tag":587,"props":693,"children":694},{"style":594},[695],{"type":563,"value":696}," ===",{"type":554,"tag":587,"props":698,"children":699},{"style":594},[700],{"type":563,"value":701}," null",{"type":554,"tag":587,"props":703,"children":704},{"style":606},[705],{"type":563,"value":630},{"type":554,"tag":587,"props":707,"children":708},{"style":642},[709],{"type":563,"value":710}," return",{"type":554,"tag":587,"props":712,"children":713},{"style":642},[714],{"type":563,"value":715}," false",{"type":554,"tag":587,"props":717,"children":718},{"style":606},[719],{"type":563,"value":720},";\n",{"type":554,"tag":587,"props":722,"children":724},{"class":589,"line":723},3,[725,729,733,737,741,745,749,753,757,761],{"type":554,"tag":587,"props":726,"children":727},{"style":642},[728],{"type":563,"value":645},{"type":554,"tag":587,"props":730,"children":731},{"style":606},[732],{"type":563,"value":650},{"type":554,"tag":587,"props":734,"children":735},{"style":594},[736],{"type":563,"value":655},{"type":554,"tag":587,"props":738,"children":739},{"style":612},[740],{"type":563,"value":625},{"type":554,"tag":587,"props":742,"children":743},{"style":594},[744],{"type":563,"value":665},{"type":554,"tag":587,"props":746,"children":747},{"style":668},[748],{"type":563,"value":671},{"type":554,"tag":587,"props":750,"children":751},{"style":674},[752],{"type":563,"value":597},{"type":554,"tag":587,"props":754,"children":755},{"style":668},[756],{"type":563,"value":682},{"type":554,"tag":587,"props":758,"children":759},{"style":606},[760],{"type":563,"value":630},{"type":554,"tag":587,"props":762,"children":763},{"style":606},[764],{"type":563,"value":635},{"type":554,"tag":587,"props":766,"children":768},{"class":589,"line":767},4,[769,774,779,784,788,792,797,801],{"type":554,"tag":587,"props":770,"children":771},{"style":642},[772],{"type":563,"value":773},"    throw",{"type":554,"tag":587,"props":775,"children":776},{"style":594},[777],{"type":563,"value":778}," new",{"type":554,"tag":587,"props":780,"children":781},{"style":600},[782],{"type":563,"value":783}," TypeError",{"type":554,"tag":587,"props":785,"children":786},{"style":606},[787],{"type":563,"value":609},{"type":554,"tag":587,"props":789,"children":790},{"style":668},[791],{"type":563,"value":682},{"type":554,"tag":587,"props":793,"children":794},{"style":674},[795],{"type":563,"value":796},"origin must be function",{"type":554,"tag":587,"props":798,"children":799},{"style":668},[800],{"type":563,"value":682},{"type":554,"tag":587,"props":802,"children":803},{"style":606},[804],{"type":563,"value":805},");\n",{"type":554,"tag":587,"props":807,"children":809},{"class":589,"line":808},5,[810],{"type":554,"tag":587,"props":811,"children":812},{"style":606},[813],{"type":563,"value":814},"  }\n",{"type":554,"tag":587,"props":816,"children":818},{"class":589,"line":817},6,[819,824,829,834,839,844,849,853,857,862],{"type":554,"tag":587,"props":820,"children":821},{"style":594},[822],{"type":563,"value":823},"  let",{"type":554,"tag":587,"props":825,"children":826},{"style":612},[827],{"type":563,"value":828}," proto",{"type":554,"tag":587,"props":830,"children":831},{"style":606},[832],{"type":563,"value":833}," =",{"type":554,"tag":587,"props":835,"children":836},{"style":612},[837],{"type":563,"value":838}," Object",{"type":554,"tag":587,"props":840,"children":841},{"style":606},[842],{"type":563,"value":843},".",{"type":554,"tag":587,"props":845,"children":846},{"style":600},[847],{"type":563,"value":848},"getPrototypeOf",{"type":554,"tag":587,"props":850,"children":851},{"style":606},[852],{"type":563,"value":609},{"type":554,"tag":587,"props":854,"children":855},{"style":612},[856],{"type":563,"value":615},{"type":554,"tag":587,"props":858,"children":859},{"style":606},[860],{"type":563,"value":861},");",{"type":554,"tag":587,"props":863,"children":865},{"style":864},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[866],{"type":563,"value":867}," // 相当于: proto = target.__proto__\n",{"type":554,"tag":587,"props":869,"children":871},{"class":589,"line":870},7,[872,877,881,886,890],{"type":554,"tag":587,"props":873,"children":874},{"style":642},[875],{"type":563,"value":876},"  while",{"type":554,"tag":587,"props":878,"children":879},{"style":606},[880],{"type":563,"value":650},{"type":554,"tag":587,"props":882,"children":883},{"style":612},[884],{"type":563,"value":885},"proto",{"type":554,"tag":587,"props":887,"children":888},{"style":606},[889],{"type":563,"value":630},{"type":554,"tag":587,"props":891,"children":892},{"style":606},[893],{"type":563,"value":635},{"type":554,"tag":587,"props":895,"children":897},{"class":589,"line":896},8,[898,903,907,911,915,920,924,929,933,937,942],{"type":554,"tag":587,"props":899,"children":900},{"style":642},[901],{"type":563,"value":902},"    if",{"type":554,"tag":587,"props":904,"children":905},{"style":606},[906],{"type":563,"value":650},{"type":554,"tag":587,"props":908,"children":909},{"style":612},[910],{"type":563,"value":885},{"type":554,"tag":587,"props":912,"children":913},{"style":594},[914],{"type":563,"value":696},{"type":554,"tag":587,"props":916,"children":918},{"style":917},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[919],{"type":563,"value":625},{"type":554,"tag":587,"props":921,"children":922},{"style":606},[923],{"type":563,"value":843},{"type":554,"tag":587,"props":925,"children":926},{"style":917},[927],{"type":563,"value":928},"prototype",{"type":554,"tag":587,"props":930,"children":931},{"style":606},[932],{"type":563,"value":630},{"type":554,"tag":587,"props":934,"children":935},{"style":642},[936],{"type":563,"value":710},{"type":554,"tag":587,"props":938,"children":939},{"style":642},[940],{"type":563,"value":941}," true",{"type":554,"tag":587,"props":943,"children":944},{"style":606},[945],{"type":563,"value":720},{"type":554,"tag":587,"props":947,"children":949},{"class":589,"line":948},9,[950,955,959,963,967,971,975,979],{"type":554,"tag":587,"props":951,"children":952},{"style":612},[953],{"type":563,"value":954},"    proto",{"type":554,"tag":587,"props":956,"children":957},{"style":606},[958],{"type":563,"value":833},{"type":554,"tag":587,"props":960,"children":961},{"style":612},[962],{"type":563,"value":838},{"type":554,"tag":587,"props":964,"children":965},{"style":606},[966],{"type":563,"value":843},{"type":554,"tag":587,"props":968,"children":969},{"style":600},[970],{"type":563,"value":848},{"type":554,"tag":587,"props":972,"children":973},{"style":606},[974],{"type":563,"value":609},{"type":554,"tag":587,"props":976,"children":977},{"style":612},[978],{"type":563,"value":885},{"type":554,"tag":587,"props":980,"children":981},{"style":606},[982],{"type":563,"value":805},{"type":554,"tag":587,"props":984,"children":986},{"class":589,"line":985},10,[987],{"type":554,"tag":587,"props":988,"children":989},{"style":606},[990],{"type":563,"value":814},{"type":554,"tag":587,"props":992,"children":994},{"class":589,"line":993},11,[995,1000,1004],{"type":554,"tag":587,"props":996,"children":997},{"style":642},[998],{"type":563,"value":999},"  return",{"type":554,"tag":587,"props":1001,"children":1002},{"style":642},[1003],{"type":563,"value":715},{"type":554,"tag":587,"props":1005,"children":1006},{"style":606},[1007],{"type":563,"value":720},{"type":554,"tag":587,"props":1009,"children":1011},{"class":589,"line":1010},12,[1012],{"type":554,"tag":587,"props":1013,"children":1014},{"style":606},[1015],{"type":563,"value":1016},"}\n",{"type":554,"tag":1018,"props":1019,"children":1020},"style",{},[1021],{"type":563,"value":1022},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":549,"searchDepth":808,"depth":808,"links":1024},[],"markdown","content:3.code-assessment:1.source:1.native-api:5.instanceof.md","content","3.code-assessment/1.source/1.native-api/5.instanceof.md","md",[1031,1033],{"_path":321,"title":320,"description":1032},"在调用 new 的过程中会发生以上 4 件事情：",{"_path":327,"title":326,"description":549},1715002848057]