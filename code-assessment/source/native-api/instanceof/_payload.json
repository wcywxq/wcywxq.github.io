[{"data":1,"prerenderedAt":997},["Reactive",2],{"navigation":3,"/code-assessment/source/native-api/instanceof":509,"/code-assessment/source/native-api/instanceof-surround":993},[4,269,298,477,485,494],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":476},"代码考核","/code-assessment",[302,376,469],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370,373],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":374,"_path":375},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":377,"_path":378,"children":379},"业务场景","/code-assessment/scene",[380,405,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463,466],{"title":381,"_path":382,"children":383},"Promise","/code-assessment/scene/promise",[384,387,390,393,396,399,402],{"title":385,"_path":386},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":388,"_path":389},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":391,"_path":392},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":394,"_path":395},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":397,"_path":398},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":400,"_path":401},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":403,"_path":404},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":406,"_path":407,"children":408},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[409,412],{"title":410,"_path":411},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":413,"_path":414},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":416,"_path":417},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":419,"_path":420},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":422,"_path":423},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":425,"_path":426},"倒计时","/code-assessment/scene/countdown",{"title":428,"_path":429},"日期格式化","/code-assessment/scene/date-format",{"title":431,"_path":432},"实现前端路由","/code-assessment/scene/frontend-route",{"title":434,"_path":435},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":437,"_path":438},"lodash.get","/code-assessment/scene/lodash-get",{"title":440,"_path":441},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":443,"_path":444},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":446,"_path":447},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":449,"_path":450},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":452,"_path":453},"随机数","/code-assessment/scene/random-number",{"title":455,"_path":456},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":458,"_path":459},"sku 算法实现","/code-assessment/scene/sku",{"title":461,"_path":462},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":464,"_path":465},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":467,"_path":468},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":470,"_path":471,"children":472},"Ts 类型挑战","/code-assessment/type-challeges",[473],{"title":474,"_path":475},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":478,"_path":479,"children":480,"icon":484},"项目","/project",[481],{"title":482,"_path":483},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":486,"_path":487,"children":488,"icon":493},"设计模式","/design-mode",[489,490],{"title":486,"_path":487},{"title":491,"_path":492},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":495,"_path":496,"children":497,"icon":508},"后端语言","/backend-languages",[498],{"title":499,"_path":500,"children":501},"Python","/backend-languages/python",[502,505],{"title":503,"_path":504},"基础","/backend-languages/python/base",{"title":506,"_path":507},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":321,"_dir":510,"_draft":511,"_partial":511,"_locale":512,"title":320,"description":512,"body":513,"_type":988,"_id":989,"_source":990,"_file":991,"_extension":992},"native-api",false,"",{"type":514,"children":515,"toc":986},"root",[516,538,980],{"type":517,"tag":518,"props":519,"children":520},"element","ol",{},[521,528,533],{"type":517,"tag":522,"props":523,"children":524},"li",{},[525],{"type":526,"value":527},"text","首先获取原型的类型",{"type":517,"tag":522,"props":529,"children":530},{},[531],{"type":526,"value":532},"然后获取对象的类型",{"type":517,"tag":522,"props":534,"children":535},{},[536],{"type":526,"value":537},"然后一直循环判断对象的原型是否等于类型的原型，直到对象原型为 null，因为原型链最终为 null",{"type":517,"tag":539,"props":540,"children":544},"pre",{"className":541,"code":542,"language":543,"meta":512,"style":512},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","function _instanceof(target, origin) {\n  if (typeof target !== \"object\" || target === null) return false;\n  if (typeof origin !== \"function\") {\n    throw new TypeError(\"origin must be function\");\n  }\n  let proto = Object.getPrototypeOf(target); // 相当于: proto = target.__proto__\n  while (proto) {\n    if (proto === origin.prototype) return true;\n    proto = Object.getPrototypeOf(proto);\n  }\n  return false;\n}\n","js",[545],{"type":517,"tag":546,"props":547,"children":548},"code",{"__ignoreMap":512},[549,599,684,728,769,778,831,857,909,946,954,971],{"type":517,"tag":550,"props":551,"children":554},"span",{"class":552,"line":553},"line",1,[555,561,567,573,579,584,589,594],{"type":517,"tag":550,"props":556,"children":558},{"style":557},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[559],{"type":526,"value":560},"function",{"type":517,"tag":550,"props":562,"children":564},{"style":563},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[565],{"type":526,"value":566}," _instanceof",{"type":517,"tag":550,"props":568,"children":570},{"style":569},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[571],{"type":526,"value":572},"(",{"type":517,"tag":550,"props":574,"children":576},{"style":575},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[577],{"type":526,"value":578},"target",{"type":517,"tag":550,"props":580,"children":581},{"style":569},[582],{"type":526,"value":583},",",{"type":517,"tag":550,"props":585,"children":586},{"style":575},[587],{"type":526,"value":588}," origin",{"type":517,"tag":550,"props":590,"children":591},{"style":569},[592],{"type":526,"value":593},")",{"type":517,"tag":550,"props":595,"children":596},{"style":569},[597],{"type":526,"value":598}," {\n",{"type":517,"tag":550,"props":600,"children":602},{"class":552,"line":601},2,[603,609,614,619,624,629,635,641,646,651,655,660,665,669,674,679],{"type":517,"tag":550,"props":604,"children":606},{"style":605},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[607],{"type":526,"value":608},"  if",{"type":517,"tag":550,"props":610,"children":611},{"style":569},[612],{"type":526,"value":613}," (",{"type":517,"tag":550,"props":615,"children":616},{"style":557},[617],{"type":526,"value":618},"typeof",{"type":517,"tag":550,"props":620,"children":621},{"style":575},[622],{"type":526,"value":623}," target",{"type":517,"tag":550,"props":625,"children":626},{"style":557},[627],{"type":526,"value":628}," !==",{"type":517,"tag":550,"props":630,"children":632},{"style":631},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[633],{"type":526,"value":634}," \"",{"type":517,"tag":550,"props":636,"children":638},{"style":637},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[639],{"type":526,"value":640},"object",{"type":517,"tag":550,"props":642,"children":643},{"style":631},[644],{"type":526,"value":645},"\"",{"type":517,"tag":550,"props":647,"children":648},{"style":557},[649],{"type":526,"value":650}," ||",{"type":517,"tag":550,"props":652,"children":653},{"style":575},[654],{"type":526,"value":623},{"type":517,"tag":550,"props":656,"children":657},{"style":557},[658],{"type":526,"value":659}," ===",{"type":517,"tag":550,"props":661,"children":662},{"style":557},[663],{"type":526,"value":664}," null",{"type":517,"tag":550,"props":666,"children":667},{"style":569},[668],{"type":526,"value":593},{"type":517,"tag":550,"props":670,"children":671},{"style":605},[672],{"type":526,"value":673}," return",{"type":517,"tag":550,"props":675,"children":676},{"style":605},[677],{"type":526,"value":678}," false",{"type":517,"tag":550,"props":680,"children":681},{"style":569},[682],{"type":526,"value":683},";\n",{"type":517,"tag":550,"props":685,"children":687},{"class":552,"line":686},3,[688,692,696,700,704,708,712,716,720,724],{"type":517,"tag":550,"props":689,"children":690},{"style":605},[691],{"type":526,"value":608},{"type":517,"tag":550,"props":693,"children":694},{"style":569},[695],{"type":526,"value":613},{"type":517,"tag":550,"props":697,"children":698},{"style":557},[699],{"type":526,"value":618},{"type":517,"tag":550,"props":701,"children":702},{"style":575},[703],{"type":526,"value":588},{"type":517,"tag":550,"props":705,"children":706},{"style":557},[707],{"type":526,"value":628},{"type":517,"tag":550,"props":709,"children":710},{"style":631},[711],{"type":526,"value":634},{"type":517,"tag":550,"props":713,"children":714},{"style":637},[715],{"type":526,"value":560},{"type":517,"tag":550,"props":717,"children":718},{"style":631},[719],{"type":526,"value":645},{"type":517,"tag":550,"props":721,"children":722},{"style":569},[723],{"type":526,"value":593},{"type":517,"tag":550,"props":725,"children":726},{"style":569},[727],{"type":526,"value":598},{"type":517,"tag":550,"props":729,"children":731},{"class":552,"line":730},4,[732,737,742,747,751,755,760,764],{"type":517,"tag":550,"props":733,"children":734},{"style":605},[735],{"type":526,"value":736},"    throw",{"type":517,"tag":550,"props":738,"children":739},{"style":557},[740],{"type":526,"value":741}," new",{"type":517,"tag":550,"props":743,"children":744},{"style":563},[745],{"type":526,"value":746}," TypeError",{"type":517,"tag":550,"props":748,"children":749},{"style":569},[750],{"type":526,"value":572},{"type":517,"tag":550,"props":752,"children":753},{"style":631},[754],{"type":526,"value":645},{"type":517,"tag":550,"props":756,"children":757},{"style":637},[758],{"type":526,"value":759},"origin must be function",{"type":517,"tag":550,"props":761,"children":762},{"style":631},[763],{"type":526,"value":645},{"type":517,"tag":550,"props":765,"children":766},{"style":569},[767],{"type":526,"value":768},");\n",{"type":517,"tag":550,"props":770,"children":772},{"class":552,"line":771},5,[773],{"type":517,"tag":550,"props":774,"children":775},{"style":569},[776],{"type":526,"value":777},"  }\n",{"type":517,"tag":550,"props":779,"children":781},{"class":552,"line":780},6,[782,787,792,797,802,807,812,816,820,825],{"type":517,"tag":550,"props":783,"children":784},{"style":557},[785],{"type":526,"value":786},"  let",{"type":517,"tag":550,"props":788,"children":789},{"style":575},[790],{"type":526,"value":791}," proto",{"type":517,"tag":550,"props":793,"children":794},{"style":569},[795],{"type":526,"value":796}," =",{"type":517,"tag":550,"props":798,"children":799},{"style":575},[800],{"type":526,"value":801}," Object",{"type":517,"tag":550,"props":803,"children":804},{"style":569},[805],{"type":526,"value":806},".",{"type":517,"tag":550,"props":808,"children":809},{"style":563},[810],{"type":526,"value":811},"getPrototypeOf",{"type":517,"tag":550,"props":813,"children":814},{"style":569},[815],{"type":526,"value":572},{"type":517,"tag":550,"props":817,"children":818},{"style":575},[819],{"type":526,"value":578},{"type":517,"tag":550,"props":821,"children":822},{"style":569},[823],{"type":526,"value":824},");",{"type":517,"tag":550,"props":826,"children":828},{"style":827},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[829],{"type":526,"value":830}," // 相当于: proto = target.__proto__\n",{"type":517,"tag":550,"props":832,"children":834},{"class":552,"line":833},7,[835,840,844,849,853],{"type":517,"tag":550,"props":836,"children":837},{"style":605},[838],{"type":526,"value":839},"  while",{"type":517,"tag":550,"props":841,"children":842},{"style":569},[843],{"type":526,"value":613},{"type":517,"tag":550,"props":845,"children":846},{"style":575},[847],{"type":526,"value":848},"proto",{"type":517,"tag":550,"props":850,"children":851},{"style":569},[852],{"type":526,"value":593},{"type":517,"tag":550,"props":854,"children":855},{"style":569},[856],{"type":526,"value":598},{"type":517,"tag":550,"props":858,"children":860},{"class":552,"line":859},8,[861,866,870,874,878,883,887,892,896,900,905],{"type":517,"tag":550,"props":862,"children":863},{"style":605},[864],{"type":526,"value":865},"    if",{"type":517,"tag":550,"props":867,"children":868},{"style":569},[869],{"type":526,"value":613},{"type":517,"tag":550,"props":871,"children":872},{"style":575},[873],{"type":526,"value":848},{"type":517,"tag":550,"props":875,"children":876},{"style":557},[877],{"type":526,"value":659},{"type":517,"tag":550,"props":879,"children":881},{"style":880},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[882],{"type":526,"value":588},{"type":517,"tag":550,"props":884,"children":885},{"style":569},[886],{"type":526,"value":806},{"type":517,"tag":550,"props":888,"children":889},{"style":880},[890],{"type":526,"value":891},"prototype",{"type":517,"tag":550,"props":893,"children":894},{"style":569},[895],{"type":526,"value":593},{"type":517,"tag":550,"props":897,"children":898},{"style":605},[899],{"type":526,"value":673},{"type":517,"tag":550,"props":901,"children":902},{"style":605},[903],{"type":526,"value":904}," true",{"type":517,"tag":550,"props":906,"children":907},{"style":569},[908],{"type":526,"value":683},{"type":517,"tag":550,"props":910,"children":912},{"class":552,"line":911},9,[913,918,922,926,930,934,938,942],{"type":517,"tag":550,"props":914,"children":915},{"style":575},[916],{"type":526,"value":917},"    proto",{"type":517,"tag":550,"props":919,"children":920},{"style":569},[921],{"type":526,"value":796},{"type":517,"tag":550,"props":923,"children":924},{"style":575},[925],{"type":526,"value":801},{"type":517,"tag":550,"props":927,"children":928},{"style":569},[929],{"type":526,"value":806},{"type":517,"tag":550,"props":931,"children":932},{"style":563},[933],{"type":526,"value":811},{"type":517,"tag":550,"props":935,"children":936},{"style":569},[937],{"type":526,"value":572},{"type":517,"tag":550,"props":939,"children":940},{"style":575},[941],{"type":526,"value":848},{"type":517,"tag":550,"props":943,"children":944},{"style":569},[945],{"type":526,"value":768},{"type":517,"tag":550,"props":947,"children":949},{"class":552,"line":948},10,[950],{"type":517,"tag":550,"props":951,"children":952},{"style":569},[953],{"type":526,"value":777},{"type":517,"tag":550,"props":955,"children":957},{"class":552,"line":956},11,[958,963,967],{"type":517,"tag":550,"props":959,"children":960},{"style":605},[961],{"type":526,"value":962},"  return",{"type":517,"tag":550,"props":964,"children":965},{"style":605},[966],{"type":526,"value":678},{"type":517,"tag":550,"props":968,"children":969},{"style":569},[970],{"type":526,"value":683},{"type":517,"tag":550,"props":972,"children":974},{"class":552,"line":973},12,[975],{"type":517,"tag":550,"props":976,"children":977},{"style":569},[978],{"type":526,"value":979},"}\n",{"type":517,"tag":981,"props":982,"children":983},"style",{},[984],{"type":526,"value":985},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":512,"searchDepth":771,"depth":771,"links":987},[],"markdown","content:3.code-assessment:1.source:1.native-api:4.instanceof.md","content","3.code-assessment/1.source/1.native-api/4.instanceof.md","md",[994,996],{"_path":318,"title":317,"description":995},"在调用 new 的过程中会发生以上 4 件事情：",{"_path":324,"title":323,"description":512},1714059008441]