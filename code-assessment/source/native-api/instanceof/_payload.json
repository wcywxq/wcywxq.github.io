[{"data":1,"prerenderedAt":994},["Reactive",2],{"navigation":3,"/code-assessment/source/native-api/instanceof":506,"/code-assessment/source/native-api/instanceof-surround":990},[4,269,298,474,482,491],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":473},"代码考核","/code-assessment",[302,373,466],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":374,"_path":375,"children":376},"业务场景","/code-assessment/scene",[377,402,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463],{"title":378,"_path":379,"children":380},"Promise","/code-assessment/scene/promise",[381,384,387,390,393,396,399],{"title":382,"_path":383},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":385,"_path":386},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":388,"_path":389},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":391,"_path":392},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":394,"_path":395},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":397,"_path":398},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":400,"_path":401},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":403,"_path":404,"children":405},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[406,409],{"title":407,"_path":408},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":410,"_path":411},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":413,"_path":414},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":416,"_path":417},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":419,"_path":420},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":422,"_path":423},"倒计时","/code-assessment/scene/countdown",{"title":425,"_path":426},"日期格式化","/code-assessment/scene/date-format",{"title":428,"_path":429},"实现前端路由","/code-assessment/scene/frontend-route",{"title":431,"_path":432},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":434,"_path":435},"lodash.get","/code-assessment/scene/lodash-get",{"title":437,"_path":438},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":440,"_path":441},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":443,"_path":444},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":446,"_path":447},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":449,"_path":450},"随机数","/code-assessment/scene/random-number",{"title":452,"_path":453},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":455,"_path":456},"sku 算法实现","/code-assessment/scene/sku",{"title":458,"_path":459},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":461,"_path":462},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":464,"_path":465},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":467,"_path":468,"children":469},"Ts 类型挑战","/code-assessment/type-challeges",[470],{"title":471,"_path":472},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":475,"_path":476,"children":477,"icon":481},"项目","/project",[478],{"title":479,"_path":480},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":483,"_path":484,"children":485,"icon":490},"设计模式","/design-mode",[486,487],{"title":483,"_path":484},{"title":488,"_path":489},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":492,"_path":493,"children":494,"icon":505},"后端语言","/backend-languages",[495],{"title":496,"_path":497,"children":498},"Python","/backend-languages/python",[499,502],{"title":500,"_path":501},"基础","/backend-languages/python/base",{"title":503,"_path":504},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":321,"_dir":507,"_draft":508,"_partial":508,"_locale":509,"title":320,"description":509,"body":510,"_type":985,"_id":986,"_source":987,"_file":988,"_extension":989},"native-api",false,"",{"type":511,"children":512,"toc":983},"root",[513,535,977],{"type":514,"tag":515,"props":516,"children":517},"element","ol",{},[518,525,530],{"type":514,"tag":519,"props":520,"children":521},"li",{},[522],{"type":523,"value":524},"text","首先获取原型的类型",{"type":514,"tag":519,"props":526,"children":527},{},[528],{"type":523,"value":529},"然后获取对象的类型",{"type":514,"tag":519,"props":531,"children":532},{},[533],{"type":523,"value":534},"然后一直循环判断对象的原型是否等于类型的原型，直到对象原型为 null，因为原型链最终为 null",{"type":514,"tag":536,"props":537,"children":541},"pre",{"className":538,"code":539,"language":540,"meta":509,"style":509},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","function _instanceof(target, origin) {\n  if (typeof target !== \"object\" || target === null) return false;\n  if (typeof origin !== \"function\") {\n    throw new TypeError(\"origin must be function\");\n  }\n  let proto = Object.getPrototypeOf(target); // 相当于: proto = target.__proto__\n  while (proto) {\n    if (proto === origin.prototype) return true;\n    proto = Object.getPrototypeOf(proto);\n  }\n  return false;\n}\n","js",[542],{"type":514,"tag":543,"props":544,"children":545},"code",{"__ignoreMap":509},[546,596,681,725,766,775,828,854,906,943,951,968],{"type":514,"tag":547,"props":548,"children":551},"span",{"class":549,"line":550},"line",1,[552,558,564,570,576,581,586,591],{"type":514,"tag":547,"props":553,"children":555},{"style":554},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[556],{"type":523,"value":557},"function",{"type":514,"tag":547,"props":559,"children":561},{"style":560},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[562],{"type":523,"value":563}," _instanceof",{"type":514,"tag":547,"props":565,"children":567},{"style":566},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[568],{"type":523,"value":569},"(",{"type":514,"tag":547,"props":571,"children":573},{"style":572},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[574],{"type":523,"value":575},"target",{"type":514,"tag":547,"props":577,"children":578},{"style":566},[579],{"type":523,"value":580},",",{"type":514,"tag":547,"props":582,"children":583},{"style":572},[584],{"type":523,"value":585}," origin",{"type":514,"tag":547,"props":587,"children":588},{"style":566},[589],{"type":523,"value":590},")",{"type":514,"tag":547,"props":592,"children":593},{"style":566},[594],{"type":523,"value":595}," {\n",{"type":514,"tag":547,"props":597,"children":599},{"class":549,"line":598},2,[600,606,611,616,621,626,632,638,643,648,652,657,662,666,671,676],{"type":514,"tag":547,"props":601,"children":603},{"style":602},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[604],{"type":523,"value":605},"  if",{"type":514,"tag":547,"props":607,"children":608},{"style":566},[609],{"type":523,"value":610}," (",{"type":514,"tag":547,"props":612,"children":613},{"style":554},[614],{"type":523,"value":615},"typeof",{"type":514,"tag":547,"props":617,"children":618},{"style":572},[619],{"type":523,"value":620}," target",{"type":514,"tag":547,"props":622,"children":623},{"style":554},[624],{"type":523,"value":625}," !==",{"type":514,"tag":547,"props":627,"children":629},{"style":628},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[630],{"type":523,"value":631}," \"",{"type":514,"tag":547,"props":633,"children":635},{"style":634},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[636],{"type":523,"value":637},"object",{"type":514,"tag":547,"props":639,"children":640},{"style":628},[641],{"type":523,"value":642},"\"",{"type":514,"tag":547,"props":644,"children":645},{"style":554},[646],{"type":523,"value":647}," ||",{"type":514,"tag":547,"props":649,"children":650},{"style":572},[651],{"type":523,"value":620},{"type":514,"tag":547,"props":653,"children":654},{"style":554},[655],{"type":523,"value":656}," ===",{"type":514,"tag":547,"props":658,"children":659},{"style":554},[660],{"type":523,"value":661}," null",{"type":514,"tag":547,"props":663,"children":664},{"style":566},[665],{"type":523,"value":590},{"type":514,"tag":547,"props":667,"children":668},{"style":602},[669],{"type":523,"value":670}," return",{"type":514,"tag":547,"props":672,"children":673},{"style":602},[674],{"type":523,"value":675}," false",{"type":514,"tag":547,"props":677,"children":678},{"style":566},[679],{"type":523,"value":680},";\n",{"type":514,"tag":547,"props":682,"children":684},{"class":549,"line":683},3,[685,689,693,697,701,705,709,713,717,721],{"type":514,"tag":547,"props":686,"children":687},{"style":602},[688],{"type":523,"value":605},{"type":514,"tag":547,"props":690,"children":691},{"style":566},[692],{"type":523,"value":610},{"type":514,"tag":547,"props":694,"children":695},{"style":554},[696],{"type":523,"value":615},{"type":514,"tag":547,"props":698,"children":699},{"style":572},[700],{"type":523,"value":585},{"type":514,"tag":547,"props":702,"children":703},{"style":554},[704],{"type":523,"value":625},{"type":514,"tag":547,"props":706,"children":707},{"style":628},[708],{"type":523,"value":631},{"type":514,"tag":547,"props":710,"children":711},{"style":634},[712],{"type":523,"value":557},{"type":514,"tag":547,"props":714,"children":715},{"style":628},[716],{"type":523,"value":642},{"type":514,"tag":547,"props":718,"children":719},{"style":566},[720],{"type":523,"value":590},{"type":514,"tag":547,"props":722,"children":723},{"style":566},[724],{"type":523,"value":595},{"type":514,"tag":547,"props":726,"children":728},{"class":549,"line":727},4,[729,734,739,744,748,752,757,761],{"type":514,"tag":547,"props":730,"children":731},{"style":602},[732],{"type":523,"value":733},"    throw",{"type":514,"tag":547,"props":735,"children":736},{"style":554},[737],{"type":523,"value":738}," new",{"type":514,"tag":547,"props":740,"children":741},{"style":560},[742],{"type":523,"value":743}," TypeError",{"type":514,"tag":547,"props":745,"children":746},{"style":566},[747],{"type":523,"value":569},{"type":514,"tag":547,"props":749,"children":750},{"style":628},[751],{"type":523,"value":642},{"type":514,"tag":547,"props":753,"children":754},{"style":634},[755],{"type":523,"value":756},"origin must be function",{"type":514,"tag":547,"props":758,"children":759},{"style":628},[760],{"type":523,"value":642},{"type":514,"tag":547,"props":762,"children":763},{"style":566},[764],{"type":523,"value":765},");\n",{"type":514,"tag":547,"props":767,"children":769},{"class":549,"line":768},5,[770],{"type":514,"tag":547,"props":771,"children":772},{"style":566},[773],{"type":523,"value":774},"  }\n",{"type":514,"tag":547,"props":776,"children":778},{"class":549,"line":777},6,[779,784,789,794,799,804,809,813,817,822],{"type":514,"tag":547,"props":780,"children":781},{"style":554},[782],{"type":523,"value":783},"  let",{"type":514,"tag":547,"props":785,"children":786},{"style":572},[787],{"type":523,"value":788}," proto",{"type":514,"tag":547,"props":790,"children":791},{"style":566},[792],{"type":523,"value":793}," =",{"type":514,"tag":547,"props":795,"children":796},{"style":572},[797],{"type":523,"value":798}," Object",{"type":514,"tag":547,"props":800,"children":801},{"style":566},[802],{"type":523,"value":803},".",{"type":514,"tag":547,"props":805,"children":806},{"style":560},[807],{"type":523,"value":808},"getPrototypeOf",{"type":514,"tag":547,"props":810,"children":811},{"style":566},[812],{"type":523,"value":569},{"type":514,"tag":547,"props":814,"children":815},{"style":572},[816],{"type":523,"value":575},{"type":514,"tag":547,"props":818,"children":819},{"style":566},[820],{"type":523,"value":821},");",{"type":514,"tag":547,"props":823,"children":825},{"style":824},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[826],{"type":523,"value":827}," // 相当于: proto = target.__proto__\n",{"type":514,"tag":547,"props":829,"children":831},{"class":549,"line":830},7,[832,837,841,846,850],{"type":514,"tag":547,"props":833,"children":834},{"style":602},[835],{"type":523,"value":836},"  while",{"type":514,"tag":547,"props":838,"children":839},{"style":566},[840],{"type":523,"value":610},{"type":514,"tag":547,"props":842,"children":843},{"style":572},[844],{"type":523,"value":845},"proto",{"type":514,"tag":547,"props":847,"children":848},{"style":566},[849],{"type":523,"value":590},{"type":514,"tag":547,"props":851,"children":852},{"style":566},[853],{"type":523,"value":595},{"type":514,"tag":547,"props":855,"children":857},{"class":549,"line":856},8,[858,863,867,871,875,880,884,889,893,897,902],{"type":514,"tag":547,"props":859,"children":860},{"style":602},[861],{"type":523,"value":862},"    if",{"type":514,"tag":547,"props":864,"children":865},{"style":566},[866],{"type":523,"value":610},{"type":514,"tag":547,"props":868,"children":869},{"style":572},[870],{"type":523,"value":845},{"type":514,"tag":547,"props":872,"children":873},{"style":554},[874],{"type":523,"value":656},{"type":514,"tag":547,"props":876,"children":878},{"style":877},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[879],{"type":523,"value":585},{"type":514,"tag":547,"props":881,"children":882},{"style":566},[883],{"type":523,"value":803},{"type":514,"tag":547,"props":885,"children":886},{"style":877},[887],{"type":523,"value":888},"prototype",{"type":514,"tag":547,"props":890,"children":891},{"style":566},[892],{"type":523,"value":590},{"type":514,"tag":547,"props":894,"children":895},{"style":602},[896],{"type":523,"value":670},{"type":514,"tag":547,"props":898,"children":899},{"style":602},[900],{"type":523,"value":901}," true",{"type":514,"tag":547,"props":903,"children":904},{"style":566},[905],{"type":523,"value":680},{"type":514,"tag":547,"props":907,"children":909},{"class":549,"line":908},9,[910,915,919,923,927,931,935,939],{"type":514,"tag":547,"props":911,"children":912},{"style":572},[913],{"type":523,"value":914},"    proto",{"type":514,"tag":547,"props":916,"children":917},{"style":566},[918],{"type":523,"value":793},{"type":514,"tag":547,"props":920,"children":921},{"style":572},[922],{"type":523,"value":798},{"type":514,"tag":547,"props":924,"children":925},{"style":566},[926],{"type":523,"value":803},{"type":514,"tag":547,"props":928,"children":929},{"style":560},[930],{"type":523,"value":808},{"type":514,"tag":547,"props":932,"children":933},{"style":566},[934],{"type":523,"value":569},{"type":514,"tag":547,"props":936,"children":937},{"style":572},[938],{"type":523,"value":845},{"type":514,"tag":547,"props":940,"children":941},{"style":566},[942],{"type":523,"value":765},{"type":514,"tag":547,"props":944,"children":946},{"class":549,"line":945},10,[947],{"type":514,"tag":547,"props":948,"children":949},{"style":566},[950],{"type":523,"value":774},{"type":514,"tag":547,"props":952,"children":954},{"class":549,"line":953},11,[955,960,964],{"type":514,"tag":547,"props":956,"children":957},{"style":602},[958],{"type":523,"value":959},"  return",{"type":514,"tag":547,"props":961,"children":962},{"style":602},[963],{"type":523,"value":675},{"type":514,"tag":547,"props":965,"children":966},{"style":566},[967],{"type":523,"value":680},{"type":514,"tag":547,"props":969,"children":971},{"class":549,"line":970},12,[972],{"type":514,"tag":547,"props":973,"children":974},{"style":566},[975],{"type":523,"value":976},"}\n",{"type":514,"tag":978,"props":979,"children":980},"style",{},[981],{"type":523,"value":982},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":509,"searchDepth":768,"depth":768,"links":984},[],"markdown","content:3.code-assessment:1.source:1.native-api:4.instanceof.md","content","3.code-assessment/1.source/1.native-api/4.instanceof.md","md",[991,993],{"_path":318,"title":317,"description":992},"在调用 new 的过程中会发生以上 4 件事情：",{"_path":324,"title":323,"description":509},1714058130525]