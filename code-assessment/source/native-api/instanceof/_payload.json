[{"data":1,"prerenderedAt":1028},["Reactive",2],{"navigation":3,"/code-assessment/source/native-api/instanceof":540,"/code-assessment/source/native-api/instanceof-surround":1024},[4,269,298,508,516,525],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":507},"代码考核","/code-assessment",[302,401,500],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,334,350,378,385,392,395,398],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333},"extends","/code-assessment/source/native-api/extends",{"title":335,"_path":336,"children":337},"函数 Function","/code-assessment/source/function",[338,341,344,347],{"title":339,"_path":340},"函数防抖","/code-assessment/source/function/debounce",{"title":342,"_path":343},"函数节流","/code-assessment/source/function/throttle",{"title":345,"_path":346},"函数柯理化","/code-assessment/source/function/curry",{"title":348,"_path":349},"函数睡眠","/code-assessment/source/function/sleep",{"title":351,"_path":352,"children":353},"数组 Array","/code-assessment/source/array",[354,357,360,363,366,369,372,375],{"title":355,"_path":356},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":358,"_path":359},"数组扁平化","/code-assessment/source/array/flat",{"title":361,"_path":362},"原型方法","/code-assessment/source/array/prototype-method",{"title":364,"_path":365},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":367,"_path":368},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":370,"_path":371},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":373,"_path":374},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":376,"_path":377},"二维数组","/code-assessment/source/array/2d-array",{"title":379,"_path":380,"children":381},"字符串 String","/code-assessment/source/string",[382],{"title":383,"_path":384},"repeat()","/code-assessment/source/string/repeat",{"title":386,"_path":387,"children":388},"集合 Set","/code-assessment/source/set",[389],{"title":390,"_path":391},"遍历集合","/code-assessment/source/set/traverse",{"title":393,"_path":394},"获取通用类型","/code-assessment/source/get-generic-type",{"title":396,"_path":397},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":399,"_path":400},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":402,"_path":403,"children":404},"业务场景","/code-assessment/scene",[405,436,446,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497],{"title":406,"_path":407,"children":408},"Promise","/code-assessment/scene/promise",[409,412,415,418,421,424,427,430,433],{"title":410,"_path":411},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":413,"_path":414},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":416,"_path":417},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":419,"_path":420},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":422,"_path":423},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":425,"_path":426},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":428,"_path":429},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":431,"_path":432},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":434,"_path":435},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":437,"_path":438,"children":439},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[440,443],{"title":441,"_path":442},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":444,"_path":445},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":447,"_path":448},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":450,"_path":451},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":453,"_path":454},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":456,"_path":457},"倒计时","/code-assessment/scene/countdown",{"title":459,"_path":460},"日期格式化","/code-assessment/scene/date-format",{"title":462,"_path":463},"实现前端路由","/code-assessment/scene/frontend-route",{"title":465,"_path":466},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":468,"_path":469},"lodash.get","/code-assessment/scene/lodash-get",{"title":471,"_path":472},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":474,"_path":475},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":477,"_path":478},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":480,"_path":481},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":483,"_path":484},"随机数","/code-assessment/scene/random-number",{"title":486,"_path":487},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":489,"_path":490},"sku 算法实现","/code-assessment/scene/sku",{"title":492,"_path":493},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":495,"_path":496},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":498,"_path":499},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":501,"_path":502,"children":503},"Ts 类型挑战","/code-assessment/type-challeges",[504],{"title":505,"_path":506},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":509,"_path":510,"children":511,"icon":515},"项目","/project",[512],{"title":513,"_path":514},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":517,"_path":518,"children":519,"icon":524},"设计模式","/design-mode",[520,521],{"title":517,"_path":518},{"title":522,"_path":523},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":526,"_path":527,"children":528,"icon":539},"后端语言","/backend-languages",[529],{"title":530,"_path":531,"children":532},"Python","/backend-languages/python",[533,536],{"title":534,"_path":535},"基础","/backend-languages/python/base",{"title":537,"_path":538},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":321,"_dir":541,"_draft":542,"_partial":542,"_locale":543,"title":320,"description":543,"body":544,"_type":1019,"_id":1020,"_source":1021,"_file":1022,"_extension":1023},"native-api",false,"",{"type":545,"children":546,"toc":1017},"root",[547,569,1011],{"type":548,"tag":549,"props":550,"children":551},"element","ol",{},[552,559,564],{"type":548,"tag":553,"props":554,"children":555},"li",{},[556],{"type":557,"value":558},"text","首先获取原型的类型",{"type":548,"tag":553,"props":560,"children":561},{},[562],{"type":557,"value":563},"然后获取对象的类型",{"type":548,"tag":553,"props":565,"children":566},{},[567],{"type":557,"value":568},"然后一直循环判断对象的原型是否等于类型的原型，直到对象原型为 null，因为原型链最终为 null",{"type":548,"tag":570,"props":571,"children":575},"pre",{"className":572,"code":573,"language":574,"meta":543,"style":543},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","function _instanceof(target, origin) {\n  if (typeof target !== \"object\" || target === null) return false;\n  if (typeof origin !== \"function\") {\n    throw new TypeError(\"origin must be function\");\n  }\n  let proto = Object.getPrototypeOf(target); // 相当于: proto = target.__proto__\n  while (proto) {\n    if (proto === origin.prototype) return true;\n    proto = Object.getPrototypeOf(proto);\n  }\n  return false;\n}\n","js",[576],{"type":548,"tag":577,"props":578,"children":579},"code",{"__ignoreMap":543},[580,630,715,759,800,809,862,888,940,977,985,1002],{"type":548,"tag":581,"props":582,"children":585},"span",{"class":583,"line":584},"line",1,[586,592,598,604,610,615,620,625],{"type":548,"tag":581,"props":587,"children":589},{"style":588},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[590],{"type":557,"value":591},"function",{"type":548,"tag":581,"props":593,"children":595},{"style":594},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[596],{"type":557,"value":597}," _instanceof",{"type":548,"tag":581,"props":599,"children":601},{"style":600},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[602],{"type":557,"value":603},"(",{"type":548,"tag":581,"props":605,"children":607},{"style":606},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[608],{"type":557,"value":609},"target",{"type":548,"tag":581,"props":611,"children":612},{"style":600},[613],{"type":557,"value":614},",",{"type":548,"tag":581,"props":616,"children":617},{"style":606},[618],{"type":557,"value":619}," origin",{"type":548,"tag":581,"props":621,"children":622},{"style":600},[623],{"type":557,"value":624},")",{"type":548,"tag":581,"props":626,"children":627},{"style":600},[628],{"type":557,"value":629}," {\n",{"type":548,"tag":581,"props":631,"children":633},{"class":583,"line":632},2,[634,640,645,650,655,660,666,672,677,682,686,691,696,700,705,710],{"type":548,"tag":581,"props":635,"children":637},{"style":636},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[638],{"type":557,"value":639},"  if",{"type":548,"tag":581,"props":641,"children":642},{"style":600},[643],{"type":557,"value":644}," (",{"type":548,"tag":581,"props":646,"children":647},{"style":588},[648],{"type":557,"value":649},"typeof",{"type":548,"tag":581,"props":651,"children":652},{"style":606},[653],{"type":557,"value":654}," target",{"type":548,"tag":581,"props":656,"children":657},{"style":588},[658],{"type":557,"value":659}," !==",{"type":548,"tag":581,"props":661,"children":663},{"style":662},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[664],{"type":557,"value":665}," \"",{"type":548,"tag":581,"props":667,"children":669},{"style":668},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[670],{"type":557,"value":671},"object",{"type":548,"tag":581,"props":673,"children":674},{"style":662},[675],{"type":557,"value":676},"\"",{"type":548,"tag":581,"props":678,"children":679},{"style":588},[680],{"type":557,"value":681}," ||",{"type":548,"tag":581,"props":683,"children":684},{"style":606},[685],{"type":557,"value":654},{"type":548,"tag":581,"props":687,"children":688},{"style":588},[689],{"type":557,"value":690}," ===",{"type":548,"tag":581,"props":692,"children":693},{"style":588},[694],{"type":557,"value":695}," null",{"type":548,"tag":581,"props":697,"children":698},{"style":600},[699],{"type":557,"value":624},{"type":548,"tag":581,"props":701,"children":702},{"style":636},[703],{"type":557,"value":704}," return",{"type":548,"tag":581,"props":706,"children":707},{"style":636},[708],{"type":557,"value":709}," false",{"type":548,"tag":581,"props":711,"children":712},{"style":600},[713],{"type":557,"value":714},";\n",{"type":548,"tag":581,"props":716,"children":718},{"class":583,"line":717},3,[719,723,727,731,735,739,743,747,751,755],{"type":548,"tag":581,"props":720,"children":721},{"style":636},[722],{"type":557,"value":639},{"type":548,"tag":581,"props":724,"children":725},{"style":600},[726],{"type":557,"value":644},{"type":548,"tag":581,"props":728,"children":729},{"style":588},[730],{"type":557,"value":649},{"type":548,"tag":581,"props":732,"children":733},{"style":606},[734],{"type":557,"value":619},{"type":548,"tag":581,"props":736,"children":737},{"style":588},[738],{"type":557,"value":659},{"type":548,"tag":581,"props":740,"children":741},{"style":662},[742],{"type":557,"value":665},{"type":548,"tag":581,"props":744,"children":745},{"style":668},[746],{"type":557,"value":591},{"type":548,"tag":581,"props":748,"children":749},{"style":662},[750],{"type":557,"value":676},{"type":548,"tag":581,"props":752,"children":753},{"style":600},[754],{"type":557,"value":624},{"type":548,"tag":581,"props":756,"children":757},{"style":600},[758],{"type":557,"value":629},{"type":548,"tag":581,"props":760,"children":762},{"class":583,"line":761},4,[763,768,773,778,782,786,791,795],{"type":548,"tag":581,"props":764,"children":765},{"style":636},[766],{"type":557,"value":767},"    throw",{"type":548,"tag":581,"props":769,"children":770},{"style":588},[771],{"type":557,"value":772}," new",{"type":548,"tag":581,"props":774,"children":775},{"style":594},[776],{"type":557,"value":777}," TypeError",{"type":548,"tag":581,"props":779,"children":780},{"style":600},[781],{"type":557,"value":603},{"type":548,"tag":581,"props":783,"children":784},{"style":662},[785],{"type":557,"value":676},{"type":548,"tag":581,"props":787,"children":788},{"style":668},[789],{"type":557,"value":790},"origin must be function",{"type":548,"tag":581,"props":792,"children":793},{"style":662},[794],{"type":557,"value":676},{"type":548,"tag":581,"props":796,"children":797},{"style":600},[798],{"type":557,"value":799},");\n",{"type":548,"tag":581,"props":801,"children":803},{"class":583,"line":802},5,[804],{"type":548,"tag":581,"props":805,"children":806},{"style":600},[807],{"type":557,"value":808},"  }\n",{"type":548,"tag":581,"props":810,"children":812},{"class":583,"line":811},6,[813,818,823,828,833,838,843,847,851,856],{"type":548,"tag":581,"props":814,"children":815},{"style":588},[816],{"type":557,"value":817},"  let",{"type":548,"tag":581,"props":819,"children":820},{"style":606},[821],{"type":557,"value":822}," proto",{"type":548,"tag":581,"props":824,"children":825},{"style":600},[826],{"type":557,"value":827}," =",{"type":548,"tag":581,"props":829,"children":830},{"style":606},[831],{"type":557,"value":832}," Object",{"type":548,"tag":581,"props":834,"children":835},{"style":600},[836],{"type":557,"value":837},".",{"type":548,"tag":581,"props":839,"children":840},{"style":594},[841],{"type":557,"value":842},"getPrototypeOf",{"type":548,"tag":581,"props":844,"children":845},{"style":600},[846],{"type":557,"value":603},{"type":548,"tag":581,"props":848,"children":849},{"style":606},[850],{"type":557,"value":609},{"type":548,"tag":581,"props":852,"children":853},{"style":600},[854],{"type":557,"value":855},");",{"type":548,"tag":581,"props":857,"children":859},{"style":858},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[860],{"type":557,"value":861}," // 相当于: proto = target.__proto__\n",{"type":548,"tag":581,"props":863,"children":865},{"class":583,"line":864},7,[866,871,875,880,884],{"type":548,"tag":581,"props":867,"children":868},{"style":636},[869],{"type":557,"value":870},"  while",{"type":548,"tag":581,"props":872,"children":873},{"style":600},[874],{"type":557,"value":644},{"type":548,"tag":581,"props":876,"children":877},{"style":606},[878],{"type":557,"value":879},"proto",{"type":548,"tag":581,"props":881,"children":882},{"style":600},[883],{"type":557,"value":624},{"type":548,"tag":581,"props":885,"children":886},{"style":600},[887],{"type":557,"value":629},{"type":548,"tag":581,"props":889,"children":891},{"class":583,"line":890},8,[892,897,901,905,909,914,918,923,927,931,936],{"type":548,"tag":581,"props":893,"children":894},{"style":636},[895],{"type":557,"value":896},"    if",{"type":548,"tag":581,"props":898,"children":899},{"style":600},[900],{"type":557,"value":644},{"type":548,"tag":581,"props":902,"children":903},{"style":606},[904],{"type":557,"value":879},{"type":548,"tag":581,"props":906,"children":907},{"style":588},[908],{"type":557,"value":690},{"type":548,"tag":581,"props":910,"children":912},{"style":911},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[913],{"type":557,"value":619},{"type":548,"tag":581,"props":915,"children":916},{"style":600},[917],{"type":557,"value":837},{"type":548,"tag":581,"props":919,"children":920},{"style":911},[921],{"type":557,"value":922},"prototype",{"type":548,"tag":581,"props":924,"children":925},{"style":600},[926],{"type":557,"value":624},{"type":548,"tag":581,"props":928,"children":929},{"style":636},[930],{"type":557,"value":704},{"type":548,"tag":581,"props":932,"children":933},{"style":636},[934],{"type":557,"value":935}," true",{"type":548,"tag":581,"props":937,"children":938},{"style":600},[939],{"type":557,"value":714},{"type":548,"tag":581,"props":941,"children":943},{"class":583,"line":942},9,[944,949,953,957,961,965,969,973],{"type":548,"tag":581,"props":945,"children":946},{"style":606},[947],{"type":557,"value":948},"    proto",{"type":548,"tag":581,"props":950,"children":951},{"style":600},[952],{"type":557,"value":827},{"type":548,"tag":581,"props":954,"children":955},{"style":606},[956],{"type":557,"value":832},{"type":548,"tag":581,"props":958,"children":959},{"style":600},[960],{"type":557,"value":837},{"type":548,"tag":581,"props":962,"children":963},{"style":594},[964],{"type":557,"value":842},{"type":548,"tag":581,"props":966,"children":967},{"style":600},[968],{"type":557,"value":603},{"type":548,"tag":581,"props":970,"children":971},{"style":606},[972],{"type":557,"value":879},{"type":548,"tag":581,"props":974,"children":975},{"style":600},[976],{"type":557,"value":799},{"type":548,"tag":581,"props":978,"children":980},{"class":583,"line":979},10,[981],{"type":548,"tag":581,"props":982,"children":983},{"style":600},[984],{"type":557,"value":808},{"type":548,"tag":581,"props":986,"children":988},{"class":583,"line":987},11,[989,994,998],{"type":548,"tag":581,"props":990,"children":991},{"style":636},[992],{"type":557,"value":993},"  return",{"type":548,"tag":581,"props":995,"children":996},{"style":636},[997],{"type":557,"value":709},{"type":548,"tag":581,"props":999,"children":1000},{"style":600},[1001],{"type":557,"value":714},{"type":548,"tag":581,"props":1003,"children":1005},{"class":583,"line":1004},12,[1006],{"type":548,"tag":581,"props":1007,"children":1008},{"style":600},[1009],{"type":557,"value":1010},"}\n",{"type":548,"tag":1012,"props":1013,"children":1014},"style",{},[1015],{"type":557,"value":1016},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":543,"searchDepth":802,"depth":802,"links":1018},[],"markdown","content:3.code-assessment:1.source:1.native-api:4.instanceof.md","content","3.code-assessment/1.source/1.native-api/4.instanceof.md","md",[1025,1027],{"_path":318,"title":317,"description":1026},"在调用 new 的过程中会发生以上 4 件事情：",{"_path":324,"title":323,"description":543},1714099218251]