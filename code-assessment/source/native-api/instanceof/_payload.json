[{"data":1,"prerenderedAt":1037},["Reactive",2],{"navigation":3,"/code-assessment/source/native-api/instanceof":549,"/code-assessment/source/native-api/instanceof-surround":1033},[4,272,301,517,525,534],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":516},"代码考核","/code-assessment",[305,407,509],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,340,356,384,391,398,401,404],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342,"children":343},"函数 Function","/code-assessment/source/function",[344,347,350,353],{"title":345,"_path":346},"函数防抖","/code-assessment/source/function/debounce",{"title":348,"_path":349},"函数节流","/code-assessment/source/function/throttle",{"title":351,"_path":352},"函数柯理化","/code-assessment/source/function/curry",{"title":354,"_path":355},"函数睡眠","/code-assessment/source/function/sleep",{"title":357,"_path":358,"children":359},"数组 Array","/code-assessment/source/array",[360,363,366,369,372,375,378,381],{"title":361,"_path":362},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":364,"_path":365},"数组扁平化","/code-assessment/source/array/flat",{"title":367,"_path":368},"原型方法","/code-assessment/source/array/prototype-method",{"title":370,"_path":371},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":373,"_path":374},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":376,"_path":377},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":379,"_path":380},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":382,"_path":383},"二维数组","/code-assessment/source/array/2d-array",{"title":385,"_path":386,"children":387},"字符串 String","/code-assessment/source/string",[388],{"title":389,"_path":390},"repeat()","/code-assessment/source/string/repeat",{"title":392,"_path":393,"children":394},"集合 Set","/code-assessment/source/set",[395],{"title":396,"_path":397},"遍历集合","/code-assessment/source/set/traverse",{"title":399,"_path":400},"获取通用类型","/code-assessment/source/get-generic-type",{"title":402,"_path":403},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":405,"_path":406},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":408,"_path":409,"children":410},"业务场景","/code-assessment/scene",[411,442,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506],{"title":412,"_path":413,"children":414},"Promise","/code-assessment/scene/promise",[415,418,421,424,427,430,433,436,439],{"title":416,"_path":417},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":419,"_path":420},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":422,"_path":423},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":425,"_path":426},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":428,"_path":429},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":431,"_path":432},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":434,"_path":435},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":437,"_path":438},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":440,"_path":441},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":443,"_path":444,"children":445},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[446,449],{"title":447,"_path":448},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":450,"_path":451},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":453,"_path":454},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":456,"_path":457},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":459,"_path":460},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":462,"_path":463},"倒计时","/code-assessment/scene/countdown",{"title":465,"_path":466},"日期格式化","/code-assessment/scene/date-format",{"title":468,"_path":469},"实现前端路由","/code-assessment/scene/frontend-route",{"title":471,"_path":472},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":474,"_path":475},"lodash.get","/code-assessment/scene/lodash-get",{"title":477,"_path":478},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":480,"_path":481},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":483,"_path":484},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":486,"_path":487},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":489,"_path":490},"随机数","/code-assessment/scene/random-number",{"title":492,"_path":493},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":495,"_path":496},"sku 算法实现","/code-assessment/scene/sku",{"title":498,"_path":499},"整数分割","/code-assessment/scene/split-number",{"title":501,"_path":502},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":504,"_path":505},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":507,"_path":508},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":510,"_path":511,"children":512},"Ts 类型挑战","/code-assessment/type-challeges",[513],{"title":514,"_path":515},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":518,"_path":519,"children":520,"icon":524},"项目","/project",[521],{"title":522,"_path":523},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":526,"_path":527,"children":528,"icon":533},"设计模式","/design-mode",[529,530],{"title":526,"_path":527},{"title":531,"_path":532},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":535,"_path":536,"children":537,"icon":548},"后端语言","/backend-languages",[538],{"title":539,"_path":540,"children":541},"Python","/backend-languages/python",[542,545],{"title":543,"_path":544},"基础","/backend-languages/python/base",{"title":546,"_path":547},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":327,"_dir":550,"_draft":551,"_partial":551,"_locale":552,"title":326,"description":552,"body":553,"_type":1028,"_id":1029,"_source":1030,"_file":1031,"_extension":1032},"native-api",false,"",{"type":554,"children":555,"toc":1026},"root",[556,578,1020],{"type":557,"tag":558,"props":559,"children":560},"element","ol",{},[561,568,573],{"type":557,"tag":562,"props":563,"children":564},"li",{},[565],{"type":566,"value":567},"text","首先获取原型的类型",{"type":557,"tag":562,"props":569,"children":570},{},[571],{"type":566,"value":572},"然后获取对象的类型",{"type":557,"tag":562,"props":574,"children":575},{},[576],{"type":566,"value":577},"然后一直循环判断对象的原型是否等于类型的原型，直到对象原型为 null，因为原型链最终为 null",{"type":557,"tag":579,"props":580,"children":584},"pre",{"className":581,"code":582,"language":583,"meta":552,"style":552},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","function _instanceof(target, origin) {\n  if (typeof target !== \"object\" || target === null) return false;\n  if (typeof origin !== \"function\") {\n    throw new TypeError(\"origin must be function\");\n  }\n  let proto = Object.getPrototypeOf(target); // 相当于: proto = target.__proto__\n  while (proto) {\n    if (proto === origin.prototype) return true;\n    proto = Object.getPrototypeOf(proto);\n  }\n  return false;\n}\n","js",[585],{"type":557,"tag":586,"props":587,"children":588},"code",{"__ignoreMap":552},[589,639,724,768,809,818,871,897,949,986,994,1011],{"type":557,"tag":590,"props":591,"children":594},"span",{"class":592,"line":593},"line",1,[595,601,607,613,619,624,629,634],{"type":557,"tag":590,"props":596,"children":598},{"style":597},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[599],{"type":566,"value":600},"function",{"type":557,"tag":590,"props":602,"children":604},{"style":603},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[605],{"type":566,"value":606}," _instanceof",{"type":557,"tag":590,"props":608,"children":610},{"style":609},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[611],{"type":566,"value":612},"(",{"type":557,"tag":590,"props":614,"children":616},{"style":615},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[617],{"type":566,"value":618},"target",{"type":557,"tag":590,"props":620,"children":621},{"style":609},[622],{"type":566,"value":623},",",{"type":557,"tag":590,"props":625,"children":626},{"style":615},[627],{"type":566,"value":628}," origin",{"type":557,"tag":590,"props":630,"children":631},{"style":609},[632],{"type":566,"value":633},")",{"type":557,"tag":590,"props":635,"children":636},{"style":609},[637],{"type":566,"value":638}," {\n",{"type":557,"tag":590,"props":640,"children":642},{"class":592,"line":641},2,[643,649,654,659,664,669,675,681,686,691,695,700,705,709,714,719],{"type":557,"tag":590,"props":644,"children":646},{"style":645},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[647],{"type":566,"value":648},"  if",{"type":557,"tag":590,"props":650,"children":651},{"style":609},[652],{"type":566,"value":653}," (",{"type":557,"tag":590,"props":655,"children":656},{"style":597},[657],{"type":566,"value":658},"typeof",{"type":557,"tag":590,"props":660,"children":661},{"style":615},[662],{"type":566,"value":663}," target",{"type":557,"tag":590,"props":665,"children":666},{"style":597},[667],{"type":566,"value":668}," !==",{"type":557,"tag":590,"props":670,"children":672},{"style":671},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[673],{"type":566,"value":674}," \"",{"type":557,"tag":590,"props":676,"children":678},{"style":677},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[679],{"type":566,"value":680},"object",{"type":557,"tag":590,"props":682,"children":683},{"style":671},[684],{"type":566,"value":685},"\"",{"type":557,"tag":590,"props":687,"children":688},{"style":597},[689],{"type":566,"value":690}," ||",{"type":557,"tag":590,"props":692,"children":693},{"style":615},[694],{"type":566,"value":663},{"type":557,"tag":590,"props":696,"children":697},{"style":597},[698],{"type":566,"value":699}," ===",{"type":557,"tag":590,"props":701,"children":702},{"style":597},[703],{"type":566,"value":704}," null",{"type":557,"tag":590,"props":706,"children":707},{"style":609},[708],{"type":566,"value":633},{"type":557,"tag":590,"props":710,"children":711},{"style":645},[712],{"type":566,"value":713}," return",{"type":557,"tag":590,"props":715,"children":716},{"style":645},[717],{"type":566,"value":718}," false",{"type":557,"tag":590,"props":720,"children":721},{"style":609},[722],{"type":566,"value":723},";\n",{"type":557,"tag":590,"props":725,"children":727},{"class":592,"line":726},3,[728,732,736,740,744,748,752,756,760,764],{"type":557,"tag":590,"props":729,"children":730},{"style":645},[731],{"type":566,"value":648},{"type":557,"tag":590,"props":733,"children":734},{"style":609},[735],{"type":566,"value":653},{"type":557,"tag":590,"props":737,"children":738},{"style":597},[739],{"type":566,"value":658},{"type":557,"tag":590,"props":741,"children":742},{"style":615},[743],{"type":566,"value":628},{"type":557,"tag":590,"props":745,"children":746},{"style":597},[747],{"type":566,"value":668},{"type":557,"tag":590,"props":749,"children":750},{"style":671},[751],{"type":566,"value":674},{"type":557,"tag":590,"props":753,"children":754},{"style":677},[755],{"type":566,"value":600},{"type":557,"tag":590,"props":757,"children":758},{"style":671},[759],{"type":566,"value":685},{"type":557,"tag":590,"props":761,"children":762},{"style":609},[763],{"type":566,"value":633},{"type":557,"tag":590,"props":765,"children":766},{"style":609},[767],{"type":566,"value":638},{"type":557,"tag":590,"props":769,"children":771},{"class":592,"line":770},4,[772,777,782,787,791,795,800,804],{"type":557,"tag":590,"props":773,"children":774},{"style":645},[775],{"type":566,"value":776},"    throw",{"type":557,"tag":590,"props":778,"children":779},{"style":597},[780],{"type":566,"value":781}," new",{"type":557,"tag":590,"props":783,"children":784},{"style":603},[785],{"type":566,"value":786}," TypeError",{"type":557,"tag":590,"props":788,"children":789},{"style":609},[790],{"type":566,"value":612},{"type":557,"tag":590,"props":792,"children":793},{"style":671},[794],{"type":566,"value":685},{"type":557,"tag":590,"props":796,"children":797},{"style":677},[798],{"type":566,"value":799},"origin must be function",{"type":557,"tag":590,"props":801,"children":802},{"style":671},[803],{"type":566,"value":685},{"type":557,"tag":590,"props":805,"children":806},{"style":609},[807],{"type":566,"value":808},");\n",{"type":557,"tag":590,"props":810,"children":812},{"class":592,"line":811},5,[813],{"type":557,"tag":590,"props":814,"children":815},{"style":609},[816],{"type":566,"value":817},"  }\n",{"type":557,"tag":590,"props":819,"children":821},{"class":592,"line":820},6,[822,827,832,837,842,847,852,856,860,865],{"type":557,"tag":590,"props":823,"children":824},{"style":597},[825],{"type":566,"value":826},"  let",{"type":557,"tag":590,"props":828,"children":829},{"style":615},[830],{"type":566,"value":831}," proto",{"type":557,"tag":590,"props":833,"children":834},{"style":609},[835],{"type":566,"value":836}," =",{"type":557,"tag":590,"props":838,"children":839},{"style":615},[840],{"type":566,"value":841}," Object",{"type":557,"tag":590,"props":843,"children":844},{"style":609},[845],{"type":566,"value":846},".",{"type":557,"tag":590,"props":848,"children":849},{"style":603},[850],{"type":566,"value":851},"getPrototypeOf",{"type":557,"tag":590,"props":853,"children":854},{"style":609},[855],{"type":566,"value":612},{"type":557,"tag":590,"props":857,"children":858},{"style":615},[859],{"type":566,"value":618},{"type":557,"tag":590,"props":861,"children":862},{"style":609},[863],{"type":566,"value":864},");",{"type":557,"tag":590,"props":866,"children":868},{"style":867},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[869],{"type":566,"value":870}," // 相当于: proto = target.__proto__\n",{"type":557,"tag":590,"props":872,"children":874},{"class":592,"line":873},7,[875,880,884,889,893],{"type":557,"tag":590,"props":876,"children":877},{"style":645},[878],{"type":566,"value":879},"  while",{"type":557,"tag":590,"props":881,"children":882},{"style":609},[883],{"type":566,"value":653},{"type":557,"tag":590,"props":885,"children":886},{"style":615},[887],{"type":566,"value":888},"proto",{"type":557,"tag":590,"props":890,"children":891},{"style":609},[892],{"type":566,"value":633},{"type":557,"tag":590,"props":894,"children":895},{"style":609},[896],{"type":566,"value":638},{"type":557,"tag":590,"props":898,"children":900},{"class":592,"line":899},8,[901,906,910,914,918,923,927,932,936,940,945],{"type":557,"tag":590,"props":902,"children":903},{"style":645},[904],{"type":566,"value":905},"    if",{"type":557,"tag":590,"props":907,"children":908},{"style":609},[909],{"type":566,"value":653},{"type":557,"tag":590,"props":911,"children":912},{"style":615},[913],{"type":566,"value":888},{"type":557,"tag":590,"props":915,"children":916},{"style":597},[917],{"type":566,"value":699},{"type":557,"tag":590,"props":919,"children":921},{"style":920},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[922],{"type":566,"value":628},{"type":557,"tag":590,"props":924,"children":925},{"style":609},[926],{"type":566,"value":846},{"type":557,"tag":590,"props":928,"children":929},{"style":920},[930],{"type":566,"value":931},"prototype",{"type":557,"tag":590,"props":933,"children":934},{"style":609},[935],{"type":566,"value":633},{"type":557,"tag":590,"props":937,"children":938},{"style":645},[939],{"type":566,"value":713},{"type":557,"tag":590,"props":941,"children":942},{"style":645},[943],{"type":566,"value":944}," true",{"type":557,"tag":590,"props":946,"children":947},{"style":609},[948],{"type":566,"value":723},{"type":557,"tag":590,"props":950,"children":952},{"class":592,"line":951},9,[953,958,962,966,970,974,978,982],{"type":557,"tag":590,"props":954,"children":955},{"style":615},[956],{"type":566,"value":957},"    proto",{"type":557,"tag":590,"props":959,"children":960},{"style":609},[961],{"type":566,"value":836},{"type":557,"tag":590,"props":963,"children":964},{"style":615},[965],{"type":566,"value":841},{"type":557,"tag":590,"props":967,"children":968},{"style":609},[969],{"type":566,"value":846},{"type":557,"tag":590,"props":971,"children":972},{"style":603},[973],{"type":566,"value":851},{"type":557,"tag":590,"props":975,"children":976},{"style":609},[977],{"type":566,"value":612},{"type":557,"tag":590,"props":979,"children":980},{"style":615},[981],{"type":566,"value":888},{"type":557,"tag":590,"props":983,"children":984},{"style":609},[985],{"type":566,"value":808},{"type":557,"tag":590,"props":987,"children":989},{"class":592,"line":988},10,[990],{"type":557,"tag":590,"props":991,"children":992},{"style":609},[993],{"type":566,"value":817},{"type":557,"tag":590,"props":995,"children":997},{"class":592,"line":996},11,[998,1003,1007],{"type":557,"tag":590,"props":999,"children":1000},{"style":645},[1001],{"type":566,"value":1002},"  return",{"type":557,"tag":590,"props":1004,"children":1005},{"style":645},[1006],{"type":566,"value":718},{"type":557,"tag":590,"props":1008,"children":1009},{"style":609},[1010],{"type":566,"value":723},{"type":557,"tag":590,"props":1012,"children":1014},{"class":592,"line":1013},12,[1015],{"type":557,"tag":590,"props":1016,"children":1017},{"style":609},[1018],{"type":566,"value":1019},"}\n",{"type":557,"tag":1021,"props":1022,"children":1023},"style",{},[1024],{"type":566,"value":1025},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":552,"searchDepth":811,"depth":811,"links":1027},[],"markdown","content:3.code-assessment:1.source:1.native-api:5.instanceof.md","content","3.code-assessment/1.source/1.native-api/5.instanceof.md","md",[1034,1036],{"_path":324,"title":323,"description":1035},"在调用 new 的过程中会发生以上 4 件事情：",{"_path":330,"title":329,"description":552},1715008129750]