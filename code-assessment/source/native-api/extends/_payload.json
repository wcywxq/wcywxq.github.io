[{"data":1,"prerenderedAt":1004},["Reactive",2],{"navigation":3,"/code-assessment/source/native-api/extends":549,"/code-assessment/source/native-api/extends-surround":1001},[4,272,301,517,525,534],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":516},"代码考核","/code-assessment",[305,407,509],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,340,356,384,391,398,401,404],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342,"children":343},"函数 Function","/code-assessment/source/function",[344,347,350,353],{"title":345,"_path":346},"函数防抖","/code-assessment/source/function/debounce",{"title":348,"_path":349},"函数节流","/code-assessment/source/function/throttle",{"title":351,"_path":352},"函数柯理化","/code-assessment/source/function/curry",{"title":354,"_path":355},"函数睡眠","/code-assessment/source/function/sleep",{"title":357,"_path":358,"children":359},"数组 Array","/code-assessment/source/array",[360,363,366,369,372,375,378,381],{"title":361,"_path":362},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":364,"_path":365},"数组扁平化","/code-assessment/source/array/flat",{"title":367,"_path":368},"原型方法","/code-assessment/source/array/prototype-method",{"title":370,"_path":371},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":373,"_path":374},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":376,"_path":377},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":379,"_path":380},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":382,"_path":383},"二维数组","/code-assessment/source/array/2d-array",{"title":385,"_path":386,"children":387},"字符串 String","/code-assessment/source/string",[388],{"title":389,"_path":390},"repeat()","/code-assessment/source/string/repeat",{"title":392,"_path":393,"children":394},"集合 Set","/code-assessment/source/set",[395],{"title":396,"_path":397},"遍历集合","/code-assessment/source/set/traverse",{"title":399,"_path":400},"获取通用类型","/code-assessment/source/get-generic-type",{"title":402,"_path":403},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":405,"_path":406},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":408,"_path":409,"children":410},"业务场景","/code-assessment/scene",[411,442,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506],{"title":412,"_path":413,"children":414},"Promise","/code-assessment/scene/promise",[415,418,421,424,427,430,433,436,439],{"title":416,"_path":417},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":419,"_path":420},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":422,"_path":423},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":425,"_path":426},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":428,"_path":429},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":431,"_path":432},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":434,"_path":435},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":437,"_path":438},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":440,"_path":441},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":443,"_path":444,"children":445},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[446,449],{"title":447,"_path":448},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":450,"_path":451},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":453,"_path":454},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":456,"_path":457},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":459,"_path":460},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":462,"_path":463},"倒计时","/code-assessment/scene/countdown",{"title":465,"_path":466},"日期格式化","/code-assessment/scene/date-format",{"title":468,"_path":469},"实现前端路由","/code-assessment/scene/frontend-route",{"title":471,"_path":472},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":474,"_path":475},"lodash.get","/code-assessment/scene/lodash-get",{"title":477,"_path":478},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":480,"_path":481},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":483,"_path":484},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":486,"_path":487},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":489,"_path":490},"随机数","/code-assessment/scene/random-number",{"title":492,"_path":493},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":495,"_path":496},"sku 算法实现","/code-assessment/scene/sku",{"title":498,"_path":499},"整数分割","/code-assessment/scene/split-number",{"title":501,"_path":502},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":504,"_path":505},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":507,"_path":508},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":510,"_path":511,"children":512},"Ts 类型挑战","/code-assessment/type-challeges",[513],{"title":514,"_path":515},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":518,"_path":519,"children":520,"icon":524},"项目","/project",[521],{"title":522,"_path":523},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":526,"_path":527,"children":528,"icon":533},"设计模式","/design-mode",[529,530],{"title":526,"_path":527},{"title":531,"_path":532},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":535,"_path":536,"children":537,"icon":548},"后端语言","/backend-languages",[538],{"title":539,"_path":540,"children":541},"Python","/backend-languages/python",[542,545],{"title":543,"_path":544},"基础","/backend-languages/python/base",{"title":546,"_path":547},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":339,"_dir":550,"_draft":551,"_partial":551,"_locale":552,"title":338,"description":552,"body":553,"_type":996,"_id":997,"_source":998,"_file":999,"_extension":1000},"native-api",false,"",{"type":554,"children":555,"toc":994},"root",[556,988],{"type":557,"tag":558,"props":559,"children":563},"element","pre",{"className":560,"code":561,"language":562,"meta":552,"style":552},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","function B(name) {\n  this.name = name\n}\n\nfunction A(name, age) {\n  // 1. 将 A 的原型指向 B\n  Object.setPrototypeOf(A, B)\n  // 2. 用 A 的实例作为 this 调用 B，得到继承 B 之后的实例，这一步相当于调用 super\n  Object.getPrototypeOf(A).call(this, name)\n  // 3. 将 A 原有的属性添加到新实例上\n  this.age = age\n  // 4. 返回新实例对象\n  return this\n}\n\n// example\nconst a = new A('Bob', 22)\nconsole.log(a)\n","js",[564],{"type":557,"tag":565,"props":566,"children":567},"code",{"__ignoreMap":552},[568,609,638,647,657,696,706,746,755,812,821,847,856,871,879,887,896,957],{"type":557,"tag":569,"props":570,"children":573},"span",{"class":571,"line":572},"line",1,[574,581,587,593,599,604],{"type":557,"tag":569,"props":575,"children":577},{"style":576},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[578],{"type":579,"value":580},"text","function",{"type":557,"tag":569,"props":582,"children":584},{"style":583},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[585],{"type":579,"value":586}," B",{"type":557,"tag":569,"props":588,"children":590},{"style":589},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[591],{"type":579,"value":592},"(",{"type":557,"tag":569,"props":594,"children":596},{"style":595},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[597],{"type":579,"value":598},"name",{"type":557,"tag":569,"props":600,"children":601},{"style":589},[602],{"type":579,"value":603},")",{"type":557,"tag":569,"props":605,"children":606},{"style":589},[607],{"type":579,"value":608}," {\n",{"type":557,"tag":569,"props":610,"children":612},{"class":571,"line":611},2,[613,619,624,628,633],{"type":557,"tag":569,"props":614,"children":616},{"style":615},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[617],{"type":579,"value":618},"  this",{"type":557,"tag":569,"props":620,"children":621},{"style":589},[622],{"type":579,"value":623},".",{"type":557,"tag":569,"props":625,"children":626},{"style":595},[627],{"type":579,"value":598},{"type":557,"tag":569,"props":629,"children":630},{"style":589},[631],{"type":579,"value":632}," =",{"type":557,"tag":569,"props":634,"children":635},{"style":595},[636],{"type":579,"value":637}," name\n",{"type":557,"tag":569,"props":639,"children":641},{"class":571,"line":640},3,[642],{"type":557,"tag":569,"props":643,"children":644},{"style":589},[645],{"type":579,"value":646},"}\n",{"type":557,"tag":569,"props":648,"children":650},{"class":571,"line":649},4,[651],{"type":557,"tag":569,"props":652,"children":654},{"emptyLinePlaceholder":653},true,[655],{"type":579,"value":656},"\n",{"type":557,"tag":569,"props":658,"children":660},{"class":571,"line":659},5,[661,665,670,674,678,683,688,692],{"type":557,"tag":569,"props":662,"children":663},{"style":576},[664],{"type":579,"value":580},{"type":557,"tag":569,"props":666,"children":667},{"style":583},[668],{"type":579,"value":669}," A",{"type":557,"tag":569,"props":671,"children":672},{"style":589},[673],{"type":579,"value":592},{"type":557,"tag":569,"props":675,"children":676},{"style":595},[677],{"type":579,"value":598},{"type":557,"tag":569,"props":679,"children":680},{"style":589},[681],{"type":579,"value":682},",",{"type":557,"tag":569,"props":684,"children":685},{"style":595},[686],{"type":579,"value":687}," age",{"type":557,"tag":569,"props":689,"children":690},{"style":589},[691],{"type":579,"value":603},{"type":557,"tag":569,"props":693,"children":694},{"style":589},[695],{"type":579,"value":608},{"type":557,"tag":569,"props":697,"children":699},{"class":571,"line":698},6,[700],{"type":557,"tag":569,"props":701,"children":703},{"style":702},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[704],{"type":579,"value":705},"  // 1. 将 A 的原型指向 B\n",{"type":557,"tag":569,"props":707,"children":709},{"class":571,"line":708},7,[710,715,719,724,728,733,737,741],{"type":557,"tag":569,"props":711,"children":712},{"style":595},[713],{"type":579,"value":714},"  Object",{"type":557,"tag":569,"props":716,"children":717},{"style":589},[718],{"type":579,"value":623},{"type":557,"tag":569,"props":720,"children":721},{"style":583},[722],{"type":579,"value":723},"setPrototypeOf",{"type":557,"tag":569,"props":725,"children":726},{"style":589},[727],{"type":579,"value":592},{"type":557,"tag":569,"props":729,"children":730},{"style":595},[731],{"type":579,"value":732},"A",{"type":557,"tag":569,"props":734,"children":735},{"style":589},[736],{"type":579,"value":682},{"type":557,"tag":569,"props":738,"children":739},{"style":595},[740],{"type":579,"value":586},{"type":557,"tag":569,"props":742,"children":743},{"style":589},[744],{"type":579,"value":745},")\n",{"type":557,"tag":569,"props":747,"children":749},{"class":571,"line":748},8,[750],{"type":557,"tag":569,"props":751,"children":752},{"style":702},[753],{"type":579,"value":754},"  // 2. 用 A 的实例作为 this 调用 B，得到继承 B 之后的实例，这一步相当于调用 super\n",{"type":557,"tag":569,"props":756,"children":758},{"class":571,"line":757},9,[759,763,767,772,776,780,785,790,794,799,803,808],{"type":557,"tag":569,"props":760,"children":761},{"style":595},[762],{"type":579,"value":714},{"type":557,"tag":569,"props":764,"children":765},{"style":589},[766],{"type":579,"value":623},{"type":557,"tag":569,"props":768,"children":769},{"style":583},[770],{"type":579,"value":771},"getPrototypeOf",{"type":557,"tag":569,"props":773,"children":774},{"style":589},[775],{"type":579,"value":592},{"type":557,"tag":569,"props":777,"children":778},{"style":595},[779],{"type":579,"value":732},{"type":557,"tag":569,"props":781,"children":782},{"style":589},[783],{"type":579,"value":784},").",{"type":557,"tag":569,"props":786,"children":787},{"style":583},[788],{"type":579,"value":789},"call",{"type":557,"tag":569,"props":791,"children":792},{"style":589},[793],{"type":579,"value":592},{"type":557,"tag":569,"props":795,"children":796},{"style":615},[797],{"type":579,"value":798},"this",{"type":557,"tag":569,"props":800,"children":801},{"style":589},[802],{"type":579,"value":682},{"type":557,"tag":569,"props":804,"children":805},{"style":595},[806],{"type":579,"value":807}," name",{"type":557,"tag":569,"props":809,"children":810},{"style":589},[811],{"type":579,"value":745},{"type":557,"tag":569,"props":813,"children":815},{"class":571,"line":814},10,[816],{"type":557,"tag":569,"props":817,"children":818},{"style":702},[819],{"type":579,"value":820},"  // 3. 将 A 原有的属性添加到新实例上\n",{"type":557,"tag":569,"props":822,"children":824},{"class":571,"line":823},11,[825,829,833,838,842],{"type":557,"tag":569,"props":826,"children":827},{"style":615},[828],{"type":579,"value":618},{"type":557,"tag":569,"props":830,"children":831},{"style":589},[832],{"type":579,"value":623},{"type":557,"tag":569,"props":834,"children":835},{"style":595},[836],{"type":579,"value":837},"age",{"type":557,"tag":569,"props":839,"children":840},{"style":589},[841],{"type":579,"value":632},{"type":557,"tag":569,"props":843,"children":844},{"style":595},[845],{"type":579,"value":846}," age\n",{"type":557,"tag":569,"props":848,"children":850},{"class":571,"line":849},12,[851],{"type":557,"tag":569,"props":852,"children":853},{"style":702},[854],{"type":579,"value":855},"  // 4. 返回新实例对象\n",{"type":557,"tag":569,"props":857,"children":859},{"class":571,"line":858},13,[860,866],{"type":557,"tag":569,"props":861,"children":863},{"style":862},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[864],{"type":579,"value":865},"  return",{"type":557,"tag":569,"props":867,"children":868},{"style":615},[869],{"type":579,"value":870}," this\n",{"type":557,"tag":569,"props":872,"children":874},{"class":571,"line":873},14,[875],{"type":557,"tag":569,"props":876,"children":877},{"style":589},[878],{"type":579,"value":646},{"type":557,"tag":569,"props":880,"children":882},{"class":571,"line":881},15,[883],{"type":557,"tag":569,"props":884,"children":885},{"emptyLinePlaceholder":653},[886],{"type":579,"value":656},{"type":557,"tag":569,"props":888,"children":890},{"class":571,"line":889},16,[891],{"type":557,"tag":569,"props":892,"children":893},{"style":702},[894],{"type":579,"value":895},"// example\n",{"type":557,"tag":569,"props":897,"children":899},{"class":571,"line":898},17,[900,905,910,914,919,923,927,933,939,943,947,953],{"type":557,"tag":569,"props":901,"children":902},{"style":576},[903],{"type":579,"value":904},"const",{"type":557,"tag":569,"props":906,"children":907},{"style":595},[908],{"type":579,"value":909}," a",{"type":557,"tag":569,"props":911,"children":912},{"style":589},[913],{"type":579,"value":632},{"type":557,"tag":569,"props":915,"children":916},{"style":576},[917],{"type":579,"value":918}," new",{"type":557,"tag":569,"props":920,"children":921},{"style":583},[922],{"type":579,"value":669},{"type":557,"tag":569,"props":924,"children":925},{"style":589},[926],{"type":579,"value":592},{"type":557,"tag":569,"props":928,"children":930},{"style":929},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[931],{"type":579,"value":932},"'",{"type":557,"tag":569,"props":934,"children":936},{"style":935},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[937],{"type":579,"value":938},"Bob",{"type":557,"tag":569,"props":940,"children":941},{"style":929},[942],{"type":579,"value":932},{"type":557,"tag":569,"props":944,"children":945},{"style":589},[946],{"type":579,"value":682},{"type":557,"tag":569,"props":948,"children":950},{"style":949},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[951],{"type":579,"value":952}," 22",{"type":557,"tag":569,"props":954,"children":955},{"style":589},[956],{"type":579,"value":745},{"type":557,"tag":569,"props":958,"children":960},{"class":571,"line":959},18,[961,966,970,975,979,984],{"type":557,"tag":569,"props":962,"children":963},{"style":595},[964],{"type":579,"value":965},"console",{"type":557,"tag":569,"props":967,"children":968},{"style":589},[969],{"type":579,"value":623},{"type":557,"tag":569,"props":971,"children":972},{"style":583},[973],{"type":579,"value":974},"log",{"type":557,"tag":569,"props":976,"children":977},{"style":589},[978],{"type":579,"value":592},{"type":557,"tag":569,"props":980,"children":981},{"style":595},[982],{"type":579,"value":983},"a",{"type":557,"tag":569,"props":985,"children":986},{"style":589},[987],{"type":579,"value":745},{"type":557,"tag":989,"props":990,"children":991},"style",{},[992],{"type":579,"value":993},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":552,"searchDepth":659,"depth":659,"links":995},[],"markdown","content:3.code-assessment:1.source:1.native-api:9.extends.md","content","3.code-assessment/1.source/1.native-api/9.extends.md","md",[1002,1003],{"_path":336,"title":335,"description":552},{"_path":346,"title":345,"description":552},1715007657361]