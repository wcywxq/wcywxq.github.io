[{"data":1,"prerenderedAt":1555},["Reactive",2],{"navigation":3,"/code-assessment/source/native-api/call-apply-bind":552,"/code-assessment/source/native-api/call-apply-bind-surround":1551},[4,272,311,529,537],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":310},"八股文","/endorsement",[276,286,297],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"构建工具","/endorsement/build-tools",[290],{"title":291,"_path":292,"children":293},"Webpack","/endorsement/build-tools/webpack",[294],{"title":295,"_path":296},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":298,"_path":299,"children":300},"Html","/endorsement/html",[301,304,307],{"title":302,"_path":303},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":305,"_path":306},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":308,"_path":309},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":312,"_path":313,"children":314,"icon":528},"代码考核","/code-assessment",[315,420,521],{"title":316,"_path":317,"children":318},"源码实现","/code-assessment/source",[319,353,369,397,404,411,414,417],{"title":320,"_path":321,"children":322},"原生 api","/code-assessment/source/native-api",[323,326,329,332,335,338,341,344,347,350],{"title":324,"_path":325},"polyfill","/code-assessment/source/native-api/polyfill",{"title":327,"_path":328},"ajax","/code-assessment/source/native-api/ajax",{"title":330,"_path":331},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":333,"_path":334},"new 操作符","/code-assessment/source/native-api/new",{"title":336,"_path":337},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":339,"_path":340},"定时器","/code-assessment/source/native-api/timer",{"title":342,"_path":343},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":345,"_path":346},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":348,"_path":349},"extends","/code-assessment/source/native-api/extends",{"title":351,"_path":352},"Promise","/code-assessment/source/native-api/promise",{"title":354,"_path":355,"children":356},"函数 Function","/code-assessment/source/function",[357,360,363,366],{"title":358,"_path":359},"函数防抖","/code-assessment/source/function/debounce",{"title":361,"_path":362},"函数节流","/code-assessment/source/function/throttle",{"title":364,"_path":365},"函数柯理化","/code-assessment/source/function/curry",{"title":367,"_path":368},"函数睡眠","/code-assessment/source/function/sleep",{"title":370,"_path":371,"children":372},"数组 Array","/code-assessment/source/array",[373,376,379,382,385,388,391,394],{"title":374,"_path":375},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":377,"_path":378},"数组扁平化","/code-assessment/source/array/flat",{"title":380,"_path":381},"原型方法","/code-assessment/source/array/prototype-method",{"title":383,"_path":384},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":386,"_path":387},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":389,"_path":390},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":392,"_path":393},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":395,"_path":396},"二维数组","/code-assessment/source/array/2d-array",{"title":398,"_path":399,"children":400},"字符串 String","/code-assessment/source/string",[401],{"title":402,"_path":403},"repeat()","/code-assessment/source/string/repeat",{"title":405,"_path":406,"children":407},"集合 Set","/code-assessment/source/set",[408],{"title":409,"_path":410},"遍历集合","/code-assessment/source/set/traverse",{"title":412,"_path":413},"获取通用类型","/code-assessment/source/get-generic-type",{"title":415,"_path":416},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":418,"_path":419},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":421,"_path":422,"children":423},"业务场景","/code-assessment/scene",[424,454,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518],{"title":351,"_path":425,"children":426},"/code-assessment/scene/promise",[427,430,433,436,439,442,445,448,451],{"title":428,"_path":429},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":431,"_path":432},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":434,"_path":435},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":437,"_path":438},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":440,"_path":441},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":443,"_path":444},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":446,"_path":447},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":449,"_path":450},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":452,"_path":453},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":455,"_path":456,"children":457},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[458,461],{"title":459,"_path":460},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":462,"_path":463},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":465,"_path":466},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":468,"_path":469},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":471,"_path":472},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":474,"_path":475},"倒计时","/code-assessment/scene/countdown",{"title":477,"_path":478},"日期格式化","/code-assessment/scene/date-format",{"title":480,"_path":481},"实现前端路由","/code-assessment/scene/frontend-route",{"title":483,"_path":484},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":486,"_path":487},"lodash.get","/code-assessment/scene/lodash-get",{"title":489,"_path":490},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":492,"_path":493},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":495,"_path":496},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":498,"_path":499},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":501,"_path":502},"随机数","/code-assessment/scene/random-number",{"title":504,"_path":505},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":507,"_path":508},"sku 算法实现","/code-assessment/scene/sku",{"title":510,"_path":511},"整数分割","/code-assessment/scene/split-number",{"title":513,"_path":514},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":516,"_path":517},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":519,"_path":520},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":522,"_path":523,"children":524},"Ts 类型挑战","/code-assessment/type-challeges",[525],{"title":526,"_path":527},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":530,"_path":531,"children":532,"icon":536},"项目","/project",[533],{"title":534,"_path":535},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":538,"_path":539,"children":540,"icon":551},"后端语言","/backend-languages",[541],{"title":542,"_path":543,"children":544},"Python","/backend-languages/python",[545,548],{"title":546,"_path":547},"基础","/backend-languages/python/base",{"title":549,"_path":550},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":331,"_dir":553,"_draft":554,"_partial":554,"_locale":555,"title":330,"description":555,"body":556,"_type":1546,"_id":1547,"_source":1548,"_file":1549,"_extension":1550},"native-api",false,"",{"type":557,"children":558,"toc":1541},"root",[559,567,607,917,922,954,1239,1244,1266,1535],{"type":560,"tag":561,"props":562,"children":564},"element","h2",{"id":563},"call",[565],{"type":566,"value":563},"text",{"type":560,"tag":568,"props":569,"children":570},"ol",{},[571,577,582,587,592,597,602],{"type":560,"tag":572,"props":573,"children":574},"li",{},[575],{"type":566,"value":576},"判断调用对象是否为函数，即使我们是定义在函数的原型上的，但是可能出现使用 call 等方式调用的情况",{"type":560,"tag":572,"props":578,"children":579},{},[580],{"type":566,"value":581},"判断传入上下文对象是否存在，如果不存在，则设置为 window",{"type":560,"tag":572,"props":583,"children":584},{},[585],{"type":566,"value":586},"处理传入的参数，截取第一个参数后的所有参数",{"type":560,"tag":572,"props":588,"children":589},{},[590],{"type":566,"value":591},"将函数作为上下文对象的一个属性",{"type":560,"tag":572,"props":593,"children":594},{},[595],{"type":566,"value":596},"使用上下文对象来调用这个方法，并保存返回结果",{"type":560,"tag":572,"props":598,"children":599},{},[600],{"type":566,"value":601},"删除刚才新增的属性",{"type":560,"tag":572,"props":603,"children":604},{},[605],{"type":566,"value":606},"返回结果",{"type":560,"tag":608,"props":609,"children":613},"pre",{"className":610,"code":611,"language":612,"meta":555,"style":555},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","Function.prototype.call = function (ctx) {\n  const args = [...arguments].slice(1);\n  const res = null;\n  ctx = ctx || window;\n  ctx.fn = this;\n  res = ctx.fn(...args);\n  delete ctx.fn;\n  return res;\n};\n","js",[614],{"type":560,"tag":615,"props":616,"children":617},"code",{"__ignoreMap":555},[618,682,737,764,796,826,865,890,908],{"type":560,"tag":619,"props":620,"children":623},"span",{"class":621,"line":622},"line",1,[624,630,636,641,645,650,655,661,666,672,677],{"type":560,"tag":619,"props":625,"children":627},{"style":626},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[628],{"type":566,"value":629},"Function",{"type":560,"tag":619,"props":631,"children":633},{"style":632},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[634],{"type":566,"value":635},".",{"type":560,"tag":619,"props":637,"children":638},{"style":626},[639],{"type":566,"value":640},"prototype",{"type":560,"tag":619,"props":642,"children":643},{"style":632},[644],{"type":566,"value":635},{"type":560,"tag":619,"props":646,"children":648},{"style":647},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[649],{"type":566,"value":563},{"type":560,"tag":619,"props":651,"children":652},{"style":632},[653],{"type":566,"value":654}," =",{"type":560,"tag":619,"props":656,"children":658},{"style":657},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[659],{"type":566,"value":660}," function",{"type":560,"tag":619,"props":662,"children":663},{"style":632},[664],{"type":566,"value":665}," (",{"type":560,"tag":619,"props":667,"children":669},{"style":668},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[670],{"type":566,"value":671},"ctx",{"type":560,"tag":619,"props":673,"children":674},{"style":632},[675],{"type":566,"value":676},")",{"type":560,"tag":619,"props":678,"children":679},{"style":632},[680],{"type":566,"value":681}," {\n",{"type":560,"tag":619,"props":683,"children":685},{"class":621,"line":684},2,[686,691,696,700,705,711,716,721,726,732],{"type":560,"tag":619,"props":687,"children":688},{"style":657},[689],{"type":566,"value":690},"  const",{"type":560,"tag":619,"props":692,"children":693},{"style":668},[694],{"type":566,"value":695}," args",{"type":560,"tag":619,"props":697,"children":698},{"style":632},[699],{"type":566,"value":654},{"type":560,"tag":619,"props":701,"children":702},{"style":632},[703],{"type":566,"value":704}," [...",{"type":560,"tag":619,"props":706,"children":708},{"style":707},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[709],{"type":566,"value":710},"arguments",{"type":560,"tag":619,"props":712,"children":713},{"style":632},[714],{"type":566,"value":715},"].",{"type":560,"tag":619,"props":717,"children":718},{"style":647},[719],{"type":566,"value":720},"slice",{"type":560,"tag":619,"props":722,"children":723},{"style":632},[724],{"type":566,"value":725},"(",{"type":560,"tag":619,"props":727,"children":729},{"style":728},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[730],{"type":566,"value":731},"1",{"type":560,"tag":619,"props":733,"children":734},{"style":632},[735],{"type":566,"value":736},");\n",{"type":560,"tag":619,"props":738,"children":740},{"class":621,"line":739},3,[741,745,750,754,759],{"type":560,"tag":619,"props":742,"children":743},{"style":657},[744],{"type":566,"value":690},{"type":560,"tag":619,"props":746,"children":747},{"style":668},[748],{"type":566,"value":749}," res",{"type":560,"tag":619,"props":751,"children":752},{"style":632},[753],{"type":566,"value":654},{"type":560,"tag":619,"props":755,"children":756},{"style":657},[757],{"type":566,"value":758}," null",{"type":560,"tag":619,"props":760,"children":761},{"style":632},[762],{"type":566,"value":763},";\n",{"type":560,"tag":619,"props":765,"children":767},{"class":621,"line":766},4,[768,773,777,782,787,792],{"type":560,"tag":619,"props":769,"children":770},{"style":668},[771],{"type":566,"value":772},"  ctx",{"type":560,"tag":619,"props":774,"children":775},{"style":632},[776],{"type":566,"value":654},{"type":560,"tag":619,"props":778,"children":779},{"style":668},[780],{"type":566,"value":781}," ctx",{"type":560,"tag":619,"props":783,"children":784},{"style":657},[785],{"type":566,"value":786}," ||",{"type":560,"tag":619,"props":788,"children":789},{"style":668},[790],{"type":566,"value":791}," window",{"type":560,"tag":619,"props":793,"children":794},{"style":632},[795],{"type":566,"value":763},{"type":560,"tag":619,"props":797,"children":799},{"class":621,"line":798},5,[800,804,808,813,817,822],{"type":560,"tag":619,"props":801,"children":802},{"style":668},[803],{"type":566,"value":772},{"type":560,"tag":619,"props":805,"children":806},{"style":632},[807],{"type":566,"value":635},{"type":560,"tag":619,"props":809,"children":810},{"style":668},[811],{"type":566,"value":812},"fn",{"type":560,"tag":619,"props":814,"children":815},{"style":632},[816],{"type":566,"value":654},{"type":560,"tag":619,"props":818,"children":819},{"style":707},[820],{"type":566,"value":821}," this",{"type":560,"tag":619,"props":823,"children":824},{"style":632},[825],{"type":566,"value":763},{"type":560,"tag":619,"props":827,"children":829},{"class":621,"line":828},6,[830,835,839,843,847,851,856,861],{"type":560,"tag":619,"props":831,"children":832},{"style":668},[833],{"type":566,"value":834},"  res",{"type":560,"tag":619,"props":836,"children":837},{"style":632},[838],{"type":566,"value":654},{"type":560,"tag":619,"props":840,"children":841},{"style":668},[842],{"type":566,"value":781},{"type":560,"tag":619,"props":844,"children":845},{"style":632},[846],{"type":566,"value":635},{"type":560,"tag":619,"props":848,"children":849},{"style":647},[850],{"type":566,"value":812},{"type":560,"tag":619,"props":852,"children":853},{"style":632},[854],{"type":566,"value":855},"(...",{"type":560,"tag":619,"props":857,"children":858},{"style":668},[859],{"type":566,"value":860},"args",{"type":560,"tag":619,"props":862,"children":863},{"style":632},[864],{"type":566,"value":736},{"type":560,"tag":619,"props":866,"children":868},{"class":621,"line":867},7,[869,874,878,882,886],{"type":560,"tag":619,"props":870,"children":871},{"style":657},[872],{"type":566,"value":873},"  delete",{"type":560,"tag":619,"props":875,"children":876},{"style":668},[877],{"type":566,"value":781},{"type":560,"tag":619,"props":879,"children":880},{"style":632},[881],{"type":566,"value":635},{"type":560,"tag":619,"props":883,"children":884},{"style":668},[885],{"type":566,"value":812},{"type":560,"tag":619,"props":887,"children":888},{"style":632},[889],{"type":566,"value":763},{"type":560,"tag":619,"props":891,"children":893},{"class":621,"line":892},8,[894,900,904],{"type":560,"tag":619,"props":895,"children":897},{"style":896},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[898],{"type":566,"value":899},"  return",{"type":560,"tag":619,"props":901,"children":902},{"style":668},[903],{"type":566,"value":749},{"type":560,"tag":619,"props":905,"children":906},{"style":632},[907],{"type":566,"value":763},{"type":560,"tag":619,"props":909,"children":911},{"class":621,"line":910},9,[912],{"type":560,"tag":619,"props":913,"children":914},{"style":632},[915],{"type":566,"value":916},"};\n",{"type":560,"tag":561,"props":918,"children":920},{"id":919},"apply",[921],{"type":566,"value":919},{"type":560,"tag":568,"props":923,"children":924},{},[925,929,933,937,942,946,950],{"type":560,"tag":572,"props":926,"children":927},{},[928],{"type":566,"value":576},{"type":560,"tag":572,"props":930,"children":931},{},[932],{"type":566,"value":581},{"type":560,"tag":572,"props":934,"children":935},{},[936],{"type":566,"value":591},{"type":560,"tag":572,"props":938,"children":939},{},[940],{"type":566,"value":941},"判断参数值是否传入",{"type":560,"tag":572,"props":943,"children":944},{},[945],{"type":566,"value":596},{"type":560,"tag":572,"props":947,"children":948},{},[949],{"type":566,"value":601},{"type":560,"tag":572,"props":951,"children":952},{},[953],{"type":566,"value":606},{"type":560,"tag":608,"props":955,"children":957},{"className":610,"code":956,"language":612,"meta":555,"style":555},"Function.prototype.apply = function (ctx) {\n  let res = null;\n  // 判断 context 是否存在，如果未传入则为 window\n  ctx = ctx || window;\n  ctx.fn = this;\n  res = arguments[1] ? ctx.fn(...arguments[1]) : ctx.fn();\n  // 将属性删除\n  delete ctx.fn;\n  return res;\n};\n",[958],{"type":560,"tag":615,"props":959,"children":960},{"__ignoreMap":555},[961,1008,1032,1041,1068,1095,1185,1193,1216,1231],{"type":560,"tag":619,"props":962,"children":963},{"class":621,"line":622},[964,968,972,976,980,984,988,992,996,1000,1004],{"type":560,"tag":619,"props":965,"children":966},{"style":626},[967],{"type":566,"value":629},{"type":560,"tag":619,"props":969,"children":970},{"style":632},[971],{"type":566,"value":635},{"type":560,"tag":619,"props":973,"children":974},{"style":626},[975],{"type":566,"value":640},{"type":560,"tag":619,"props":977,"children":978},{"style":632},[979],{"type":566,"value":635},{"type":560,"tag":619,"props":981,"children":982},{"style":647},[983],{"type":566,"value":919},{"type":560,"tag":619,"props":985,"children":986},{"style":632},[987],{"type":566,"value":654},{"type":560,"tag":619,"props":989,"children":990},{"style":657},[991],{"type":566,"value":660},{"type":560,"tag":619,"props":993,"children":994},{"style":632},[995],{"type":566,"value":665},{"type":560,"tag":619,"props":997,"children":998},{"style":668},[999],{"type":566,"value":671},{"type":560,"tag":619,"props":1001,"children":1002},{"style":632},[1003],{"type":566,"value":676},{"type":560,"tag":619,"props":1005,"children":1006},{"style":632},[1007],{"type":566,"value":681},{"type":560,"tag":619,"props":1009,"children":1010},{"class":621,"line":684},[1011,1016,1020,1024,1028],{"type":560,"tag":619,"props":1012,"children":1013},{"style":657},[1014],{"type":566,"value":1015},"  let",{"type":560,"tag":619,"props":1017,"children":1018},{"style":668},[1019],{"type":566,"value":749},{"type":560,"tag":619,"props":1021,"children":1022},{"style":632},[1023],{"type":566,"value":654},{"type":560,"tag":619,"props":1025,"children":1026},{"style":657},[1027],{"type":566,"value":758},{"type":560,"tag":619,"props":1029,"children":1030},{"style":632},[1031],{"type":566,"value":763},{"type":560,"tag":619,"props":1033,"children":1034},{"class":621,"line":739},[1035],{"type":560,"tag":619,"props":1036,"children":1038},{"style":1037},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[1039],{"type":566,"value":1040},"  // 判断 context 是否存在，如果未传入则为 window\n",{"type":560,"tag":619,"props":1042,"children":1043},{"class":621,"line":766},[1044,1048,1052,1056,1060,1064],{"type":560,"tag":619,"props":1045,"children":1046},{"style":668},[1047],{"type":566,"value":772},{"type":560,"tag":619,"props":1049,"children":1050},{"style":632},[1051],{"type":566,"value":654},{"type":560,"tag":619,"props":1053,"children":1054},{"style":668},[1055],{"type":566,"value":781},{"type":560,"tag":619,"props":1057,"children":1058},{"style":657},[1059],{"type":566,"value":786},{"type":560,"tag":619,"props":1061,"children":1062},{"style":668},[1063],{"type":566,"value":791},{"type":560,"tag":619,"props":1065,"children":1066},{"style":632},[1067],{"type":566,"value":763},{"type":560,"tag":619,"props":1069,"children":1070},{"class":621,"line":798},[1071,1075,1079,1083,1087,1091],{"type":560,"tag":619,"props":1072,"children":1073},{"style":668},[1074],{"type":566,"value":772},{"type":560,"tag":619,"props":1076,"children":1077},{"style":632},[1078],{"type":566,"value":635},{"type":560,"tag":619,"props":1080,"children":1081},{"style":668},[1082],{"type":566,"value":812},{"type":560,"tag":619,"props":1084,"children":1085},{"style":632},[1086],{"type":566,"value":654},{"type":560,"tag":619,"props":1088,"children":1089},{"style":707},[1090],{"type":566,"value":821},{"type":560,"tag":619,"props":1092,"children":1093},{"style":632},[1094],{"type":566,"value":763},{"type":560,"tag":619,"props":1096,"children":1097},{"class":621,"line":828},[1098,1102,1106,1111,1116,1120,1125,1130,1134,1138,1142,1146,1150,1154,1158,1163,1168,1172,1176,1180],{"type":560,"tag":619,"props":1099,"children":1100},{"style":668},[1101],{"type":566,"value":834},{"type":560,"tag":619,"props":1103,"children":1104},{"style":632},[1105],{"type":566,"value":654},{"type":560,"tag":619,"props":1107,"children":1108},{"style":707},[1109],{"type":566,"value":1110}," arguments",{"type":560,"tag":619,"props":1112,"children":1113},{"style":632},[1114],{"type":566,"value":1115},"[",{"type":560,"tag":619,"props":1117,"children":1118},{"style":728},[1119],{"type":566,"value":731},{"type":560,"tag":619,"props":1121,"children":1122},{"style":632},[1123],{"type":566,"value":1124},"]",{"type":560,"tag":619,"props":1126,"children":1127},{"style":657},[1128],{"type":566,"value":1129}," ?",{"type":560,"tag":619,"props":1131,"children":1132},{"style":668},[1133],{"type":566,"value":781},{"type":560,"tag":619,"props":1135,"children":1136},{"style":632},[1137],{"type":566,"value":635},{"type":560,"tag":619,"props":1139,"children":1140},{"style":647},[1141],{"type":566,"value":812},{"type":560,"tag":619,"props":1143,"children":1144},{"style":632},[1145],{"type":566,"value":855},{"type":560,"tag":619,"props":1147,"children":1148},{"style":707},[1149],{"type":566,"value":710},{"type":560,"tag":619,"props":1151,"children":1152},{"style":632},[1153],{"type":566,"value":1115},{"type":560,"tag":619,"props":1155,"children":1156},{"style":728},[1157],{"type":566,"value":731},{"type":560,"tag":619,"props":1159,"children":1160},{"style":632},[1161],{"type":566,"value":1162},"])",{"type":560,"tag":619,"props":1164,"children":1165},{"style":657},[1166],{"type":566,"value":1167}," :",{"type":560,"tag":619,"props":1169,"children":1170},{"style":668},[1171],{"type":566,"value":781},{"type":560,"tag":619,"props":1173,"children":1174},{"style":632},[1175],{"type":566,"value":635},{"type":560,"tag":619,"props":1177,"children":1178},{"style":647},[1179],{"type":566,"value":812},{"type":560,"tag":619,"props":1181,"children":1182},{"style":632},[1183],{"type":566,"value":1184},"();\n",{"type":560,"tag":619,"props":1186,"children":1187},{"class":621,"line":867},[1188],{"type":560,"tag":619,"props":1189,"children":1190},{"style":1037},[1191],{"type":566,"value":1192},"  // 将属性删除\n",{"type":560,"tag":619,"props":1194,"children":1195},{"class":621,"line":892},[1196,1200,1204,1208,1212],{"type":560,"tag":619,"props":1197,"children":1198},{"style":657},[1199],{"type":566,"value":873},{"type":560,"tag":619,"props":1201,"children":1202},{"style":668},[1203],{"type":566,"value":781},{"type":560,"tag":619,"props":1205,"children":1206},{"style":632},[1207],{"type":566,"value":635},{"type":560,"tag":619,"props":1209,"children":1210},{"style":668},[1211],{"type":566,"value":812},{"type":560,"tag":619,"props":1213,"children":1214},{"style":632},[1215],{"type":566,"value":763},{"type":560,"tag":619,"props":1217,"children":1218},{"class":621,"line":910},[1219,1223,1227],{"type":560,"tag":619,"props":1220,"children":1221},{"style":896},[1222],{"type":566,"value":899},{"type":560,"tag":619,"props":1224,"children":1225},{"style":668},[1226],{"type":566,"value":749},{"type":560,"tag":619,"props":1228,"children":1229},{"style":632},[1230],{"type":566,"value":763},{"type":560,"tag":619,"props":1232,"children":1234},{"class":621,"line":1233},10,[1235],{"type":560,"tag":619,"props":1236,"children":1237},{"style":632},[1238],{"type":566,"value":916},{"type":560,"tag":561,"props":1240,"children":1242},{"id":1241},"bind",[1243],{"type":566,"value":1241},{"type":560,"tag":568,"props":1245,"children":1246},{},[1247,1251,1256,1261],{"type":560,"tag":572,"props":1248,"children":1249},{},[1250],{"type":566,"value":576},{"type":560,"tag":572,"props":1252,"children":1253},{},[1254],{"type":566,"value":1255},"保存当前函数的引用，获取其余传入参数值",{"type":560,"tag":572,"props":1257,"children":1258},{},[1259],{"type":566,"value":1260},"创建一个函数返回",{"type":560,"tag":572,"props":1262,"children":1263},{},[1264],{"type":566,"value":1265},"函数内部使用 apply 来绑定函数调用，需要判断函数作为构造函数的情况，这个时候需要传入当前函数的 this 给 apply 调用，其余情况都传入指定的上下文对象",{"type":560,"tag":608,"props":1267,"children":1269},{"className":610,"code":1268,"language":612,"meta":555,"style":555},"Function.prototype.bind = function (ctx, ...args) {\n  const args = [...arguments].slice(1);\n  const fn = this;\n\n  return function Fn() {\n    return fn.apply(this instanceof Fn ? this : ctx, args.concat(...arguments));\n  };\n};\n",[1270],{"type":560,"tag":615,"props":1271,"children":1272},{"__ignoreMap":555},[1273,1334,1377,1401,1410,1435,1520,1528],{"type":560,"tag":619,"props":1274,"children":1275},{"class":621,"line":622},[1276,1280,1284,1288,1292,1296,1300,1304,1308,1312,1317,1322,1326,1330],{"type":560,"tag":619,"props":1277,"children":1278},{"style":626},[1279],{"type":566,"value":629},{"type":560,"tag":619,"props":1281,"children":1282},{"style":632},[1283],{"type":566,"value":635},{"type":560,"tag":619,"props":1285,"children":1286},{"style":626},[1287],{"type":566,"value":640},{"type":560,"tag":619,"props":1289,"children":1290},{"style":632},[1291],{"type":566,"value":635},{"type":560,"tag":619,"props":1293,"children":1294},{"style":647},[1295],{"type":566,"value":1241},{"type":560,"tag":619,"props":1297,"children":1298},{"style":632},[1299],{"type":566,"value":654},{"type":560,"tag":619,"props":1301,"children":1302},{"style":657},[1303],{"type":566,"value":660},{"type":560,"tag":619,"props":1305,"children":1306},{"style":632},[1307],{"type":566,"value":665},{"type":560,"tag":619,"props":1309,"children":1310},{"style":668},[1311],{"type":566,"value":671},{"type":560,"tag":619,"props":1313,"children":1314},{"style":632},[1315],{"type":566,"value":1316},",",{"type":560,"tag":619,"props":1318,"children":1319},{"style":632},[1320],{"type":566,"value":1321}," ...",{"type":560,"tag":619,"props":1323,"children":1324},{"style":668},[1325],{"type":566,"value":860},{"type":560,"tag":619,"props":1327,"children":1328},{"style":632},[1329],{"type":566,"value":676},{"type":560,"tag":619,"props":1331,"children":1332},{"style":632},[1333],{"type":566,"value":681},{"type":560,"tag":619,"props":1335,"children":1336},{"class":621,"line":684},[1337,1341,1345,1349,1353,1357,1361,1365,1369,1373],{"type":560,"tag":619,"props":1338,"children":1339},{"style":657},[1340],{"type":566,"value":690},{"type":560,"tag":619,"props":1342,"children":1343},{"style":668},[1344],{"type":566,"value":695},{"type":560,"tag":619,"props":1346,"children":1347},{"style":632},[1348],{"type":566,"value":654},{"type":560,"tag":619,"props":1350,"children":1351},{"style":632},[1352],{"type":566,"value":704},{"type":560,"tag":619,"props":1354,"children":1355},{"style":707},[1356],{"type":566,"value":710},{"type":560,"tag":619,"props":1358,"children":1359},{"style":632},[1360],{"type":566,"value":715},{"type":560,"tag":619,"props":1362,"children":1363},{"style":647},[1364],{"type":566,"value":720},{"type":560,"tag":619,"props":1366,"children":1367},{"style":632},[1368],{"type":566,"value":725},{"type":560,"tag":619,"props":1370,"children":1371},{"style":728},[1372],{"type":566,"value":731},{"type":560,"tag":619,"props":1374,"children":1375},{"style":632},[1376],{"type":566,"value":736},{"type":560,"tag":619,"props":1378,"children":1379},{"class":621,"line":739},[1380,1384,1389,1393,1397],{"type":560,"tag":619,"props":1381,"children":1382},{"style":657},[1383],{"type":566,"value":690},{"type":560,"tag":619,"props":1385,"children":1386},{"style":668},[1387],{"type":566,"value":1388}," fn",{"type":560,"tag":619,"props":1390,"children":1391},{"style":632},[1392],{"type":566,"value":654},{"type":560,"tag":619,"props":1394,"children":1395},{"style":707},[1396],{"type":566,"value":821},{"type":560,"tag":619,"props":1398,"children":1399},{"style":632},[1400],{"type":566,"value":763},{"type":560,"tag":619,"props":1402,"children":1403},{"class":621,"line":766},[1404],{"type":560,"tag":619,"props":1405,"children":1407},{"emptyLinePlaceholder":1406},true,[1408],{"type":566,"value":1409},"\n",{"type":560,"tag":619,"props":1411,"children":1412},{"class":621,"line":798},[1413,1417,1421,1426,1431],{"type":560,"tag":619,"props":1414,"children":1415},{"style":896},[1416],{"type":566,"value":899},{"type":560,"tag":619,"props":1418,"children":1419},{"style":657},[1420],{"type":566,"value":660},{"type":560,"tag":619,"props":1422,"children":1423},{"style":647},[1424],{"type":566,"value":1425}," Fn",{"type":560,"tag":619,"props":1427,"children":1428},{"style":632},[1429],{"type":566,"value":1430},"()",{"type":560,"tag":619,"props":1432,"children":1433},{"style":632},[1434],{"type":566,"value":681},{"type":560,"tag":619,"props":1436,"children":1437},{"class":621,"line":828},[1438,1443,1447,1451,1455,1459,1464,1469,1474,1478,1482,1486,1490,1494,1498,1502,1507,1511,1515],{"type":560,"tag":619,"props":1439,"children":1440},{"style":896},[1441],{"type":566,"value":1442},"    return",{"type":560,"tag":619,"props":1444,"children":1445},{"style":668},[1446],{"type":566,"value":1388},{"type":560,"tag":619,"props":1448,"children":1449},{"style":632},[1450],{"type":566,"value":635},{"type":560,"tag":619,"props":1452,"children":1453},{"style":647},[1454],{"type":566,"value":919},{"type":560,"tag":619,"props":1456,"children":1457},{"style":632},[1458],{"type":566,"value":725},{"type":560,"tag":619,"props":1460,"children":1461},{"style":707},[1462],{"type":566,"value":1463},"this",{"type":560,"tag":619,"props":1465,"children":1466},{"style":657},[1467],{"type":566,"value":1468}," instanceof",{"type":560,"tag":619,"props":1470,"children":1472},{"style":1471},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[1473],{"type":566,"value":1425},{"type":560,"tag":619,"props":1475,"children":1476},{"style":657},[1477],{"type":566,"value":1129},{"type":560,"tag":619,"props":1479,"children":1480},{"style":707},[1481],{"type":566,"value":821},{"type":560,"tag":619,"props":1483,"children":1484},{"style":657},[1485],{"type":566,"value":1167},{"type":560,"tag":619,"props":1487,"children":1488},{"style":668},[1489],{"type":566,"value":781},{"type":560,"tag":619,"props":1491,"children":1492},{"style":632},[1493],{"type":566,"value":1316},{"type":560,"tag":619,"props":1495,"children":1496},{"style":668},[1497],{"type":566,"value":695},{"type":560,"tag":619,"props":1499,"children":1500},{"style":632},[1501],{"type":566,"value":635},{"type":560,"tag":619,"props":1503,"children":1504},{"style":647},[1505],{"type":566,"value":1506},"concat",{"type":560,"tag":619,"props":1508,"children":1509},{"style":632},[1510],{"type":566,"value":855},{"type":560,"tag":619,"props":1512,"children":1513},{"style":707},[1514],{"type":566,"value":710},{"type":560,"tag":619,"props":1516,"children":1517},{"style":632},[1518],{"type":566,"value":1519},"));\n",{"type":560,"tag":619,"props":1521,"children":1522},{"class":621,"line":867},[1523],{"type":560,"tag":619,"props":1524,"children":1525},{"style":632},[1526],{"type":566,"value":1527},"  };\n",{"type":560,"tag":619,"props":1529,"children":1530},{"class":621,"line":892},[1531],{"type":560,"tag":619,"props":1532,"children":1533},{"style":632},[1534],{"type":566,"value":916},{"type":560,"tag":1536,"props":1537,"children":1538},"style",{},[1539],{"type":566,"value":1540},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":555,"searchDepth":798,"depth":798,"links":1542},[1543,1544,1545],{"id":563,"depth":684,"text":563},{"id":919,"depth":684,"text":919},{"id":1241,"depth":684,"text":1241},"markdown","content:3.code-assessment:1.source:1.native-api:3.call-apply-bind.md","content","3.code-assessment/1.source/1.native-api/3.call-apply-bind.md","md",[1552,1553],{"_path":328,"title":327,"description":555},{"_path":334,"title":333,"description":1554},"在调用 new 的过程中会发生以上 4 件事情：",1715137603564]