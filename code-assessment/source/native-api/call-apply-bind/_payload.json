[{"data":1,"prerenderedAt":1554},["Reactive",2],{"navigation":3,"/code-assessment/source/native-api/call-apply-bind":551,"/code-assessment/source/native-api/call-apply-bind-surround":1550},[4,272,301,519,527,536],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":518},"代码考核","/code-assessment",[305,410,511],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,343,359,387,394,401,404,407],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337,340],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342},"Promise","/code-assessment/source/native-api/promise",{"title":344,"_path":345,"children":346},"函数 Function","/code-assessment/source/function",[347,350,353,356],{"title":348,"_path":349},"函数防抖","/code-assessment/source/function/debounce",{"title":351,"_path":352},"函数节流","/code-assessment/source/function/throttle",{"title":354,"_path":355},"函数柯理化","/code-assessment/source/function/curry",{"title":357,"_path":358},"函数睡眠","/code-assessment/source/function/sleep",{"title":360,"_path":361,"children":362},"数组 Array","/code-assessment/source/array",[363,366,369,372,375,378,381,384],{"title":364,"_path":365},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":367,"_path":368},"数组扁平化","/code-assessment/source/array/flat",{"title":370,"_path":371},"原型方法","/code-assessment/source/array/prototype-method",{"title":373,"_path":374},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":376,"_path":377},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":379,"_path":380},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":382,"_path":383},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":385,"_path":386},"二维数组","/code-assessment/source/array/2d-array",{"title":388,"_path":389,"children":390},"字符串 String","/code-assessment/source/string",[391],{"title":392,"_path":393},"repeat()","/code-assessment/source/string/repeat",{"title":395,"_path":396,"children":397},"集合 Set","/code-assessment/source/set",[398],{"title":399,"_path":400},"遍历集合","/code-assessment/source/set/traverse",{"title":402,"_path":403},"获取通用类型","/code-assessment/source/get-generic-type",{"title":405,"_path":406},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":408,"_path":409},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":411,"_path":412,"children":413},"业务场景","/code-assessment/scene",[414,444,454,457,460,463,466,469,472,475,478,481,484,487,490,493,496,499,502,505,508],{"title":341,"_path":415,"children":416},"/code-assessment/scene/promise",[417,420,423,426,429,432,435,438,441],{"title":418,"_path":419},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":421,"_path":422},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":424,"_path":425},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":427,"_path":428},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":430,"_path":431},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":433,"_path":434},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":436,"_path":437},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":439,"_path":440},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":442,"_path":443},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":445,"_path":446,"children":447},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[448,451],{"title":449,"_path":450},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":452,"_path":453},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":455,"_path":456},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":458,"_path":459},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":461,"_path":462},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":464,"_path":465},"倒计时","/code-assessment/scene/countdown",{"title":467,"_path":468},"日期格式化","/code-assessment/scene/date-format",{"title":470,"_path":471},"实现前端路由","/code-assessment/scene/frontend-route",{"title":473,"_path":474},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":476,"_path":477},"lodash.get","/code-assessment/scene/lodash-get",{"title":479,"_path":480},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":482,"_path":483},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":485,"_path":486},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":488,"_path":489},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":491,"_path":492},"随机数","/code-assessment/scene/random-number",{"title":494,"_path":495},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":497,"_path":498},"sku 算法实现","/code-assessment/scene/sku",{"title":500,"_path":501},"整数分割","/code-assessment/scene/split-number",{"title":503,"_path":504},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":506,"_path":507},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":509,"_path":510},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":512,"_path":513,"children":514},"Ts 类型挑战","/code-assessment/type-challeges",[515],{"title":516,"_path":517},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":520,"_path":521,"children":522,"icon":526},"项目","/project",[523],{"title":524,"_path":525},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":528,"_path":529,"children":530,"icon":535},"设计模式","/design-mode",[531,532],{"title":528,"_path":529},{"title":533,"_path":534},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":537,"_path":538,"children":539,"icon":550},"后端语言","/backend-languages",[540],{"title":541,"_path":542,"children":543},"Python","/backend-languages/python",[544,547],{"title":545,"_path":546},"基础","/backend-languages/python/base",{"title":548,"_path":549},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":321,"_dir":552,"_draft":553,"_partial":553,"_locale":554,"title":320,"description":554,"body":555,"_type":1545,"_id":1546,"_source":1547,"_file":1548,"_extension":1549},"native-api",false,"",{"type":556,"children":557,"toc":1540},"root",[558,566,606,916,921,953,1238,1243,1265,1534],{"type":559,"tag":560,"props":561,"children":563},"element","h2",{"id":562},"call",[564],{"type":565,"value":562},"text",{"type":559,"tag":567,"props":568,"children":569},"ol",{},[570,576,581,586,591,596,601],{"type":559,"tag":571,"props":572,"children":573},"li",{},[574],{"type":565,"value":575},"判断调用对象是否为函数，即使我们是定义在函数的原型上的，但是可能出现使用 call 等方式调用的情况",{"type":559,"tag":571,"props":577,"children":578},{},[579],{"type":565,"value":580},"判断传入上下文对象是否存在，如果不存在，则设置为 window",{"type":559,"tag":571,"props":582,"children":583},{},[584],{"type":565,"value":585},"处理传入的参数，截取第一个参数后的所有参数",{"type":559,"tag":571,"props":587,"children":588},{},[589],{"type":565,"value":590},"将函数作为上下文对象的一个属性",{"type":559,"tag":571,"props":592,"children":593},{},[594],{"type":565,"value":595},"使用上下文对象来调用这个方法，并保存返回结果",{"type":559,"tag":571,"props":597,"children":598},{},[599],{"type":565,"value":600},"删除刚才新增的属性",{"type":559,"tag":571,"props":602,"children":603},{},[604],{"type":565,"value":605},"返回结果",{"type":559,"tag":607,"props":608,"children":612},"pre",{"className":609,"code":610,"language":611,"meta":554,"style":554},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","Function.prototype.call = function (ctx) {\n  const args = [...arguments].slice(1);\n  const res = null;\n  ctx = ctx || window;\n  ctx.fn = this;\n  res = ctx.fn(...args);\n  delete ctx.fn;\n  return res;\n};\n","js",[613],{"type":559,"tag":614,"props":615,"children":616},"code",{"__ignoreMap":554},[617,681,736,763,795,825,864,889,907],{"type":559,"tag":618,"props":619,"children":622},"span",{"class":620,"line":621},"line",1,[623,629,635,640,644,649,654,660,665,671,676],{"type":559,"tag":618,"props":624,"children":626},{"style":625},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[627],{"type":565,"value":628},"Function",{"type":559,"tag":618,"props":630,"children":632},{"style":631},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[633],{"type":565,"value":634},".",{"type":559,"tag":618,"props":636,"children":637},{"style":625},[638],{"type":565,"value":639},"prototype",{"type":559,"tag":618,"props":641,"children":642},{"style":631},[643],{"type":565,"value":634},{"type":559,"tag":618,"props":645,"children":647},{"style":646},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[648],{"type":565,"value":562},{"type":559,"tag":618,"props":650,"children":651},{"style":631},[652],{"type":565,"value":653}," =",{"type":559,"tag":618,"props":655,"children":657},{"style":656},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[658],{"type":565,"value":659}," function",{"type":559,"tag":618,"props":661,"children":662},{"style":631},[663],{"type":565,"value":664}," (",{"type":559,"tag":618,"props":666,"children":668},{"style":667},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[669],{"type":565,"value":670},"ctx",{"type":559,"tag":618,"props":672,"children":673},{"style":631},[674],{"type":565,"value":675},")",{"type":559,"tag":618,"props":677,"children":678},{"style":631},[679],{"type":565,"value":680}," {\n",{"type":559,"tag":618,"props":682,"children":684},{"class":620,"line":683},2,[685,690,695,699,704,710,715,720,725,731],{"type":559,"tag":618,"props":686,"children":687},{"style":656},[688],{"type":565,"value":689},"  const",{"type":559,"tag":618,"props":691,"children":692},{"style":667},[693],{"type":565,"value":694}," args",{"type":559,"tag":618,"props":696,"children":697},{"style":631},[698],{"type":565,"value":653},{"type":559,"tag":618,"props":700,"children":701},{"style":631},[702],{"type":565,"value":703}," [...",{"type":559,"tag":618,"props":705,"children":707},{"style":706},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[708],{"type":565,"value":709},"arguments",{"type":559,"tag":618,"props":711,"children":712},{"style":631},[713],{"type":565,"value":714},"].",{"type":559,"tag":618,"props":716,"children":717},{"style":646},[718],{"type":565,"value":719},"slice",{"type":559,"tag":618,"props":721,"children":722},{"style":631},[723],{"type":565,"value":724},"(",{"type":559,"tag":618,"props":726,"children":728},{"style":727},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[729],{"type":565,"value":730},"1",{"type":559,"tag":618,"props":732,"children":733},{"style":631},[734],{"type":565,"value":735},");\n",{"type":559,"tag":618,"props":737,"children":739},{"class":620,"line":738},3,[740,744,749,753,758],{"type":559,"tag":618,"props":741,"children":742},{"style":656},[743],{"type":565,"value":689},{"type":559,"tag":618,"props":745,"children":746},{"style":667},[747],{"type":565,"value":748}," res",{"type":559,"tag":618,"props":750,"children":751},{"style":631},[752],{"type":565,"value":653},{"type":559,"tag":618,"props":754,"children":755},{"style":656},[756],{"type":565,"value":757}," null",{"type":559,"tag":618,"props":759,"children":760},{"style":631},[761],{"type":565,"value":762},";\n",{"type":559,"tag":618,"props":764,"children":766},{"class":620,"line":765},4,[767,772,776,781,786,791],{"type":559,"tag":618,"props":768,"children":769},{"style":667},[770],{"type":565,"value":771},"  ctx",{"type":559,"tag":618,"props":773,"children":774},{"style":631},[775],{"type":565,"value":653},{"type":559,"tag":618,"props":777,"children":778},{"style":667},[779],{"type":565,"value":780}," ctx",{"type":559,"tag":618,"props":782,"children":783},{"style":656},[784],{"type":565,"value":785}," ||",{"type":559,"tag":618,"props":787,"children":788},{"style":667},[789],{"type":565,"value":790}," window",{"type":559,"tag":618,"props":792,"children":793},{"style":631},[794],{"type":565,"value":762},{"type":559,"tag":618,"props":796,"children":798},{"class":620,"line":797},5,[799,803,807,812,816,821],{"type":559,"tag":618,"props":800,"children":801},{"style":667},[802],{"type":565,"value":771},{"type":559,"tag":618,"props":804,"children":805},{"style":631},[806],{"type":565,"value":634},{"type":559,"tag":618,"props":808,"children":809},{"style":667},[810],{"type":565,"value":811},"fn",{"type":559,"tag":618,"props":813,"children":814},{"style":631},[815],{"type":565,"value":653},{"type":559,"tag":618,"props":817,"children":818},{"style":706},[819],{"type":565,"value":820}," this",{"type":559,"tag":618,"props":822,"children":823},{"style":631},[824],{"type":565,"value":762},{"type":559,"tag":618,"props":826,"children":828},{"class":620,"line":827},6,[829,834,838,842,846,850,855,860],{"type":559,"tag":618,"props":830,"children":831},{"style":667},[832],{"type":565,"value":833},"  res",{"type":559,"tag":618,"props":835,"children":836},{"style":631},[837],{"type":565,"value":653},{"type":559,"tag":618,"props":839,"children":840},{"style":667},[841],{"type":565,"value":780},{"type":559,"tag":618,"props":843,"children":844},{"style":631},[845],{"type":565,"value":634},{"type":559,"tag":618,"props":847,"children":848},{"style":646},[849],{"type":565,"value":811},{"type":559,"tag":618,"props":851,"children":852},{"style":631},[853],{"type":565,"value":854},"(...",{"type":559,"tag":618,"props":856,"children":857},{"style":667},[858],{"type":565,"value":859},"args",{"type":559,"tag":618,"props":861,"children":862},{"style":631},[863],{"type":565,"value":735},{"type":559,"tag":618,"props":865,"children":867},{"class":620,"line":866},7,[868,873,877,881,885],{"type":559,"tag":618,"props":869,"children":870},{"style":656},[871],{"type":565,"value":872},"  delete",{"type":559,"tag":618,"props":874,"children":875},{"style":667},[876],{"type":565,"value":780},{"type":559,"tag":618,"props":878,"children":879},{"style":631},[880],{"type":565,"value":634},{"type":559,"tag":618,"props":882,"children":883},{"style":667},[884],{"type":565,"value":811},{"type":559,"tag":618,"props":886,"children":887},{"style":631},[888],{"type":565,"value":762},{"type":559,"tag":618,"props":890,"children":892},{"class":620,"line":891},8,[893,899,903],{"type":559,"tag":618,"props":894,"children":896},{"style":895},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[897],{"type":565,"value":898},"  return",{"type":559,"tag":618,"props":900,"children":901},{"style":667},[902],{"type":565,"value":748},{"type":559,"tag":618,"props":904,"children":905},{"style":631},[906],{"type":565,"value":762},{"type":559,"tag":618,"props":908,"children":910},{"class":620,"line":909},9,[911],{"type":559,"tag":618,"props":912,"children":913},{"style":631},[914],{"type":565,"value":915},"};\n",{"type":559,"tag":560,"props":917,"children":919},{"id":918},"apply",[920],{"type":565,"value":918},{"type":559,"tag":567,"props":922,"children":923},{},[924,928,932,936,941,945,949],{"type":559,"tag":571,"props":925,"children":926},{},[927],{"type":565,"value":575},{"type":559,"tag":571,"props":929,"children":930},{},[931],{"type":565,"value":580},{"type":559,"tag":571,"props":933,"children":934},{},[935],{"type":565,"value":590},{"type":559,"tag":571,"props":937,"children":938},{},[939],{"type":565,"value":940},"判断参数值是否传入",{"type":559,"tag":571,"props":942,"children":943},{},[944],{"type":565,"value":595},{"type":559,"tag":571,"props":946,"children":947},{},[948],{"type":565,"value":600},{"type":559,"tag":571,"props":950,"children":951},{},[952],{"type":565,"value":605},{"type":559,"tag":607,"props":954,"children":956},{"className":609,"code":955,"language":611,"meta":554,"style":554},"Function.prototype.apply = function (ctx) {\n  let res = null;\n  // 判断 context 是否存在，如果未传入则为 window\n  ctx = ctx || window;\n  ctx.fn = this;\n  res = arguments[1] ? ctx.fn(...arguments[1]) : ctx.fn();\n  // 将属性删除\n  delete ctx.fn;\n  return res;\n};\n",[957],{"type":559,"tag":614,"props":958,"children":959},{"__ignoreMap":554},[960,1007,1031,1040,1067,1094,1184,1192,1215,1230],{"type":559,"tag":618,"props":961,"children":962},{"class":620,"line":621},[963,967,971,975,979,983,987,991,995,999,1003],{"type":559,"tag":618,"props":964,"children":965},{"style":625},[966],{"type":565,"value":628},{"type":559,"tag":618,"props":968,"children":969},{"style":631},[970],{"type":565,"value":634},{"type":559,"tag":618,"props":972,"children":973},{"style":625},[974],{"type":565,"value":639},{"type":559,"tag":618,"props":976,"children":977},{"style":631},[978],{"type":565,"value":634},{"type":559,"tag":618,"props":980,"children":981},{"style":646},[982],{"type":565,"value":918},{"type":559,"tag":618,"props":984,"children":985},{"style":631},[986],{"type":565,"value":653},{"type":559,"tag":618,"props":988,"children":989},{"style":656},[990],{"type":565,"value":659},{"type":559,"tag":618,"props":992,"children":993},{"style":631},[994],{"type":565,"value":664},{"type":559,"tag":618,"props":996,"children":997},{"style":667},[998],{"type":565,"value":670},{"type":559,"tag":618,"props":1000,"children":1001},{"style":631},[1002],{"type":565,"value":675},{"type":559,"tag":618,"props":1004,"children":1005},{"style":631},[1006],{"type":565,"value":680},{"type":559,"tag":618,"props":1008,"children":1009},{"class":620,"line":683},[1010,1015,1019,1023,1027],{"type":559,"tag":618,"props":1011,"children":1012},{"style":656},[1013],{"type":565,"value":1014},"  let",{"type":559,"tag":618,"props":1016,"children":1017},{"style":667},[1018],{"type":565,"value":748},{"type":559,"tag":618,"props":1020,"children":1021},{"style":631},[1022],{"type":565,"value":653},{"type":559,"tag":618,"props":1024,"children":1025},{"style":656},[1026],{"type":565,"value":757},{"type":559,"tag":618,"props":1028,"children":1029},{"style":631},[1030],{"type":565,"value":762},{"type":559,"tag":618,"props":1032,"children":1033},{"class":620,"line":738},[1034],{"type":559,"tag":618,"props":1035,"children":1037},{"style":1036},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[1038],{"type":565,"value":1039},"  // 判断 context 是否存在，如果未传入则为 window\n",{"type":559,"tag":618,"props":1041,"children":1042},{"class":620,"line":765},[1043,1047,1051,1055,1059,1063],{"type":559,"tag":618,"props":1044,"children":1045},{"style":667},[1046],{"type":565,"value":771},{"type":559,"tag":618,"props":1048,"children":1049},{"style":631},[1050],{"type":565,"value":653},{"type":559,"tag":618,"props":1052,"children":1053},{"style":667},[1054],{"type":565,"value":780},{"type":559,"tag":618,"props":1056,"children":1057},{"style":656},[1058],{"type":565,"value":785},{"type":559,"tag":618,"props":1060,"children":1061},{"style":667},[1062],{"type":565,"value":790},{"type":559,"tag":618,"props":1064,"children":1065},{"style":631},[1066],{"type":565,"value":762},{"type":559,"tag":618,"props":1068,"children":1069},{"class":620,"line":797},[1070,1074,1078,1082,1086,1090],{"type":559,"tag":618,"props":1071,"children":1072},{"style":667},[1073],{"type":565,"value":771},{"type":559,"tag":618,"props":1075,"children":1076},{"style":631},[1077],{"type":565,"value":634},{"type":559,"tag":618,"props":1079,"children":1080},{"style":667},[1081],{"type":565,"value":811},{"type":559,"tag":618,"props":1083,"children":1084},{"style":631},[1085],{"type":565,"value":653},{"type":559,"tag":618,"props":1087,"children":1088},{"style":706},[1089],{"type":565,"value":820},{"type":559,"tag":618,"props":1091,"children":1092},{"style":631},[1093],{"type":565,"value":762},{"type":559,"tag":618,"props":1095,"children":1096},{"class":620,"line":827},[1097,1101,1105,1110,1115,1119,1124,1129,1133,1137,1141,1145,1149,1153,1157,1162,1167,1171,1175,1179],{"type":559,"tag":618,"props":1098,"children":1099},{"style":667},[1100],{"type":565,"value":833},{"type":559,"tag":618,"props":1102,"children":1103},{"style":631},[1104],{"type":565,"value":653},{"type":559,"tag":618,"props":1106,"children":1107},{"style":706},[1108],{"type":565,"value":1109}," arguments",{"type":559,"tag":618,"props":1111,"children":1112},{"style":631},[1113],{"type":565,"value":1114},"[",{"type":559,"tag":618,"props":1116,"children":1117},{"style":727},[1118],{"type":565,"value":730},{"type":559,"tag":618,"props":1120,"children":1121},{"style":631},[1122],{"type":565,"value":1123},"]",{"type":559,"tag":618,"props":1125,"children":1126},{"style":656},[1127],{"type":565,"value":1128}," ?",{"type":559,"tag":618,"props":1130,"children":1131},{"style":667},[1132],{"type":565,"value":780},{"type":559,"tag":618,"props":1134,"children":1135},{"style":631},[1136],{"type":565,"value":634},{"type":559,"tag":618,"props":1138,"children":1139},{"style":646},[1140],{"type":565,"value":811},{"type":559,"tag":618,"props":1142,"children":1143},{"style":631},[1144],{"type":565,"value":854},{"type":559,"tag":618,"props":1146,"children":1147},{"style":706},[1148],{"type":565,"value":709},{"type":559,"tag":618,"props":1150,"children":1151},{"style":631},[1152],{"type":565,"value":1114},{"type":559,"tag":618,"props":1154,"children":1155},{"style":727},[1156],{"type":565,"value":730},{"type":559,"tag":618,"props":1158,"children":1159},{"style":631},[1160],{"type":565,"value":1161},"])",{"type":559,"tag":618,"props":1163,"children":1164},{"style":656},[1165],{"type":565,"value":1166}," :",{"type":559,"tag":618,"props":1168,"children":1169},{"style":667},[1170],{"type":565,"value":780},{"type":559,"tag":618,"props":1172,"children":1173},{"style":631},[1174],{"type":565,"value":634},{"type":559,"tag":618,"props":1176,"children":1177},{"style":646},[1178],{"type":565,"value":811},{"type":559,"tag":618,"props":1180,"children":1181},{"style":631},[1182],{"type":565,"value":1183},"();\n",{"type":559,"tag":618,"props":1185,"children":1186},{"class":620,"line":866},[1187],{"type":559,"tag":618,"props":1188,"children":1189},{"style":1036},[1190],{"type":565,"value":1191},"  // 将属性删除\n",{"type":559,"tag":618,"props":1193,"children":1194},{"class":620,"line":891},[1195,1199,1203,1207,1211],{"type":559,"tag":618,"props":1196,"children":1197},{"style":656},[1198],{"type":565,"value":872},{"type":559,"tag":618,"props":1200,"children":1201},{"style":667},[1202],{"type":565,"value":780},{"type":559,"tag":618,"props":1204,"children":1205},{"style":631},[1206],{"type":565,"value":634},{"type":559,"tag":618,"props":1208,"children":1209},{"style":667},[1210],{"type":565,"value":811},{"type":559,"tag":618,"props":1212,"children":1213},{"style":631},[1214],{"type":565,"value":762},{"type":559,"tag":618,"props":1216,"children":1217},{"class":620,"line":909},[1218,1222,1226],{"type":559,"tag":618,"props":1219,"children":1220},{"style":895},[1221],{"type":565,"value":898},{"type":559,"tag":618,"props":1223,"children":1224},{"style":667},[1225],{"type":565,"value":748},{"type":559,"tag":618,"props":1227,"children":1228},{"style":631},[1229],{"type":565,"value":762},{"type":559,"tag":618,"props":1231,"children":1233},{"class":620,"line":1232},10,[1234],{"type":559,"tag":618,"props":1235,"children":1236},{"style":631},[1237],{"type":565,"value":915},{"type":559,"tag":560,"props":1239,"children":1241},{"id":1240},"bind",[1242],{"type":565,"value":1240},{"type":559,"tag":567,"props":1244,"children":1245},{},[1246,1250,1255,1260],{"type":559,"tag":571,"props":1247,"children":1248},{},[1249],{"type":565,"value":575},{"type":559,"tag":571,"props":1251,"children":1252},{},[1253],{"type":565,"value":1254},"保存当前函数的引用，获取其余传入参数值",{"type":559,"tag":571,"props":1256,"children":1257},{},[1258],{"type":565,"value":1259},"创建一个函数返回",{"type":559,"tag":571,"props":1261,"children":1262},{},[1263],{"type":565,"value":1264},"函数内部使用 apply 来绑定函数调用，需要判断函数作为构造函数的情况，这个时候需要传入当前函数的 this 给 apply 调用，其余情况都传入指定的上下文对象",{"type":559,"tag":607,"props":1266,"children":1268},{"className":609,"code":1267,"language":611,"meta":554,"style":554},"Function.prototype.bind = function (ctx, ...args) {\n  const args = [...arguments].slice(1);\n  const fn = this;\n\n  return function Fn() {\n    return fn.apply(this instanceof Fn ? this : ctx, args.concat(...arguments));\n  };\n};\n",[1269],{"type":559,"tag":614,"props":1270,"children":1271},{"__ignoreMap":554},[1272,1333,1376,1400,1409,1434,1519,1527],{"type":559,"tag":618,"props":1273,"children":1274},{"class":620,"line":621},[1275,1279,1283,1287,1291,1295,1299,1303,1307,1311,1316,1321,1325,1329],{"type":559,"tag":618,"props":1276,"children":1277},{"style":625},[1278],{"type":565,"value":628},{"type":559,"tag":618,"props":1280,"children":1281},{"style":631},[1282],{"type":565,"value":634},{"type":559,"tag":618,"props":1284,"children":1285},{"style":625},[1286],{"type":565,"value":639},{"type":559,"tag":618,"props":1288,"children":1289},{"style":631},[1290],{"type":565,"value":634},{"type":559,"tag":618,"props":1292,"children":1293},{"style":646},[1294],{"type":565,"value":1240},{"type":559,"tag":618,"props":1296,"children":1297},{"style":631},[1298],{"type":565,"value":653},{"type":559,"tag":618,"props":1300,"children":1301},{"style":656},[1302],{"type":565,"value":659},{"type":559,"tag":618,"props":1304,"children":1305},{"style":631},[1306],{"type":565,"value":664},{"type":559,"tag":618,"props":1308,"children":1309},{"style":667},[1310],{"type":565,"value":670},{"type":559,"tag":618,"props":1312,"children":1313},{"style":631},[1314],{"type":565,"value":1315},",",{"type":559,"tag":618,"props":1317,"children":1318},{"style":631},[1319],{"type":565,"value":1320}," ...",{"type":559,"tag":618,"props":1322,"children":1323},{"style":667},[1324],{"type":565,"value":859},{"type":559,"tag":618,"props":1326,"children":1327},{"style":631},[1328],{"type":565,"value":675},{"type":559,"tag":618,"props":1330,"children":1331},{"style":631},[1332],{"type":565,"value":680},{"type":559,"tag":618,"props":1334,"children":1335},{"class":620,"line":683},[1336,1340,1344,1348,1352,1356,1360,1364,1368,1372],{"type":559,"tag":618,"props":1337,"children":1338},{"style":656},[1339],{"type":565,"value":689},{"type":559,"tag":618,"props":1341,"children":1342},{"style":667},[1343],{"type":565,"value":694},{"type":559,"tag":618,"props":1345,"children":1346},{"style":631},[1347],{"type":565,"value":653},{"type":559,"tag":618,"props":1349,"children":1350},{"style":631},[1351],{"type":565,"value":703},{"type":559,"tag":618,"props":1353,"children":1354},{"style":706},[1355],{"type":565,"value":709},{"type":559,"tag":618,"props":1357,"children":1358},{"style":631},[1359],{"type":565,"value":714},{"type":559,"tag":618,"props":1361,"children":1362},{"style":646},[1363],{"type":565,"value":719},{"type":559,"tag":618,"props":1365,"children":1366},{"style":631},[1367],{"type":565,"value":724},{"type":559,"tag":618,"props":1369,"children":1370},{"style":727},[1371],{"type":565,"value":730},{"type":559,"tag":618,"props":1373,"children":1374},{"style":631},[1375],{"type":565,"value":735},{"type":559,"tag":618,"props":1377,"children":1378},{"class":620,"line":738},[1379,1383,1388,1392,1396],{"type":559,"tag":618,"props":1380,"children":1381},{"style":656},[1382],{"type":565,"value":689},{"type":559,"tag":618,"props":1384,"children":1385},{"style":667},[1386],{"type":565,"value":1387}," fn",{"type":559,"tag":618,"props":1389,"children":1390},{"style":631},[1391],{"type":565,"value":653},{"type":559,"tag":618,"props":1393,"children":1394},{"style":706},[1395],{"type":565,"value":820},{"type":559,"tag":618,"props":1397,"children":1398},{"style":631},[1399],{"type":565,"value":762},{"type":559,"tag":618,"props":1401,"children":1402},{"class":620,"line":765},[1403],{"type":559,"tag":618,"props":1404,"children":1406},{"emptyLinePlaceholder":1405},true,[1407],{"type":565,"value":1408},"\n",{"type":559,"tag":618,"props":1410,"children":1411},{"class":620,"line":797},[1412,1416,1420,1425,1430],{"type":559,"tag":618,"props":1413,"children":1414},{"style":895},[1415],{"type":565,"value":898},{"type":559,"tag":618,"props":1417,"children":1418},{"style":656},[1419],{"type":565,"value":659},{"type":559,"tag":618,"props":1421,"children":1422},{"style":646},[1423],{"type":565,"value":1424}," Fn",{"type":559,"tag":618,"props":1426,"children":1427},{"style":631},[1428],{"type":565,"value":1429},"()",{"type":559,"tag":618,"props":1431,"children":1432},{"style":631},[1433],{"type":565,"value":680},{"type":559,"tag":618,"props":1435,"children":1436},{"class":620,"line":827},[1437,1442,1446,1450,1454,1458,1463,1468,1473,1477,1481,1485,1489,1493,1497,1501,1506,1510,1514],{"type":559,"tag":618,"props":1438,"children":1439},{"style":895},[1440],{"type":565,"value":1441},"    return",{"type":559,"tag":618,"props":1443,"children":1444},{"style":667},[1445],{"type":565,"value":1387},{"type":559,"tag":618,"props":1447,"children":1448},{"style":631},[1449],{"type":565,"value":634},{"type":559,"tag":618,"props":1451,"children":1452},{"style":646},[1453],{"type":565,"value":918},{"type":559,"tag":618,"props":1455,"children":1456},{"style":631},[1457],{"type":565,"value":724},{"type":559,"tag":618,"props":1459,"children":1460},{"style":706},[1461],{"type":565,"value":1462},"this",{"type":559,"tag":618,"props":1464,"children":1465},{"style":656},[1466],{"type":565,"value":1467}," instanceof",{"type":559,"tag":618,"props":1469,"children":1471},{"style":1470},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[1472],{"type":565,"value":1424},{"type":559,"tag":618,"props":1474,"children":1475},{"style":656},[1476],{"type":565,"value":1128},{"type":559,"tag":618,"props":1478,"children":1479},{"style":706},[1480],{"type":565,"value":820},{"type":559,"tag":618,"props":1482,"children":1483},{"style":656},[1484],{"type":565,"value":1166},{"type":559,"tag":618,"props":1486,"children":1487},{"style":667},[1488],{"type":565,"value":780},{"type":559,"tag":618,"props":1490,"children":1491},{"style":631},[1492],{"type":565,"value":1315},{"type":559,"tag":618,"props":1494,"children":1495},{"style":667},[1496],{"type":565,"value":694},{"type":559,"tag":618,"props":1498,"children":1499},{"style":631},[1500],{"type":565,"value":634},{"type":559,"tag":618,"props":1502,"children":1503},{"style":646},[1504],{"type":565,"value":1505},"concat",{"type":559,"tag":618,"props":1507,"children":1508},{"style":631},[1509],{"type":565,"value":854},{"type":559,"tag":618,"props":1511,"children":1512},{"style":706},[1513],{"type":565,"value":709},{"type":559,"tag":618,"props":1515,"children":1516},{"style":631},[1517],{"type":565,"value":1518},"));\n",{"type":559,"tag":618,"props":1520,"children":1521},{"class":620,"line":866},[1522],{"type":559,"tag":618,"props":1523,"children":1524},{"style":631},[1525],{"type":565,"value":1526},"  };\n",{"type":559,"tag":618,"props":1528,"children":1529},{"class":620,"line":891},[1530],{"type":559,"tag":618,"props":1531,"children":1532},{"style":631},[1533],{"type":565,"value":915},{"type":559,"tag":1535,"props":1536,"children":1537},"style",{},[1538],{"type":565,"value":1539},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":554,"searchDepth":797,"depth":797,"links":1541},[1542,1543,1544],{"id":562,"depth":683,"text":562},{"id":918,"depth":683,"text":918},{"id":1240,"depth":683,"text":1240},"markdown","content:3.code-assessment:1.source:1.native-api:3.call-apply-bind.md","content","3.code-assessment/1.source/1.native-api/3.call-apply-bind.md","md",[1551,1552],{"_path":318,"title":317,"description":554},{"_path":324,"title":323,"description":1553},"在调用 new 的过程中会发生以上 4 件事情：",1715094974518]