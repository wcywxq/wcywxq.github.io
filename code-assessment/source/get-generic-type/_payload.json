[{"data":1,"prerenderedAt":1072},["Reactive",2],{"navigation":3,"/code-assessment/source/get-generic-type":551,"/code-assessment/source/get-generic-type-surround":1068},[4,272,301,519,527,536],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":518},"代码考核","/code-assessment",[305,410,511],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,343,359,387,394,401,404,407],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337,340],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342},"Promise","/code-assessment/source/native-api/promise",{"title":344,"_path":345,"children":346},"函数 Function","/code-assessment/source/function",[347,350,353,356],{"title":348,"_path":349},"函数防抖","/code-assessment/source/function/debounce",{"title":351,"_path":352},"函数节流","/code-assessment/source/function/throttle",{"title":354,"_path":355},"函数柯理化","/code-assessment/source/function/curry",{"title":357,"_path":358},"函数睡眠","/code-assessment/source/function/sleep",{"title":360,"_path":361,"children":362},"数组 Array","/code-assessment/source/array",[363,366,369,372,375,378,381,384],{"title":364,"_path":365},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":367,"_path":368},"数组扁平化","/code-assessment/source/array/flat",{"title":370,"_path":371},"原型方法","/code-assessment/source/array/prototype-method",{"title":373,"_path":374},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":376,"_path":377},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":379,"_path":380},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":382,"_path":383},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":385,"_path":386},"二维数组","/code-assessment/source/array/2d-array",{"title":388,"_path":389,"children":390},"字符串 String","/code-assessment/source/string",[391],{"title":392,"_path":393},"repeat()","/code-assessment/source/string/repeat",{"title":395,"_path":396,"children":397},"集合 Set","/code-assessment/source/set",[398],{"title":399,"_path":400},"遍历集合","/code-assessment/source/set/traverse",{"title":402,"_path":403},"获取通用类型","/code-assessment/source/get-generic-type",{"title":405,"_path":406},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":408,"_path":409},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":411,"_path":412,"children":413},"业务场景","/code-assessment/scene",[414,444,454,457,460,463,466,469,472,475,478,481,484,487,490,493,496,499,502,505,508],{"title":341,"_path":415,"children":416},"/code-assessment/scene/promise",[417,420,423,426,429,432,435,438,441],{"title":418,"_path":419},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":421,"_path":422},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":424,"_path":425},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":427,"_path":428},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":430,"_path":431},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":433,"_path":434},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":436,"_path":437},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":439,"_path":440},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":442,"_path":443},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":445,"_path":446,"children":447},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[448,451],{"title":449,"_path":450},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":452,"_path":453},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":455,"_path":456},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":458,"_path":459},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":461,"_path":462},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":464,"_path":465},"倒计时","/code-assessment/scene/countdown",{"title":467,"_path":468},"日期格式化","/code-assessment/scene/date-format",{"title":470,"_path":471},"实现前端路由","/code-assessment/scene/frontend-route",{"title":473,"_path":474},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":476,"_path":477},"lodash.get","/code-assessment/scene/lodash-get",{"title":479,"_path":480},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":482,"_path":483},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":485,"_path":486},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":488,"_path":489},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":491,"_path":492},"随机数","/code-assessment/scene/random-number",{"title":494,"_path":495},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":497,"_path":498},"sku 算法实现","/code-assessment/scene/sku",{"title":500,"_path":501},"整数分割","/code-assessment/scene/split-number",{"title":503,"_path":504},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":506,"_path":507},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":509,"_path":510},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":512,"_path":513,"children":514},"Ts 类型挑战","/code-assessment/type-challeges",[515],{"title":516,"_path":517},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":520,"_path":521,"children":522,"icon":526},"项目","/project",[523],{"title":524,"_path":525},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":528,"_path":529,"children":530,"icon":535},"设计模式","/design-mode",[531,532],{"title":528,"_path":529},{"title":533,"_path":534},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":537,"_path":538,"children":539,"icon":550},"后端语言","/backend-languages",[540],{"title":541,"_path":542,"children":543},"Python","/backend-languages/python",[544,547],{"title":545,"_path":546},"基础","/backend-languages/python/base",{"title":548,"_path":549},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":403,"_dir":552,"_draft":553,"_partial":553,"_locale":554,"title":402,"description":554,"body":555,"_type":1063,"_id":1064,"_source":1065,"_file":1066,"_extension":1067},"source",false,"",{"type":556,"children":557,"toc":1061},"root",[558,1055],{"type":559,"tag":560,"props":561,"children":565},"element","pre",{"className":562,"code":563,"language":564,"meta":554,"style":554},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","function getGenericType(s) {\n  const r = Object.prototype.toString.call(s)\n  return r.replace(/\\[object (.*?)\\]/, '$1').toLowerCase()\n}\n\nconsole.log(\n  getGenericType(),\n  getGenericType(null),\n  getGenericType(1),\n  getGenericType('1'),\n  getGenericType(true),\n  getGenericType(Symbol('zs')),\n  getGenericType({}),\n  getGenericType([]),\n  getGenericType(() => {}),\n  getGenericType(1n)\n)\n","js",[566],{"type":559,"tag":567,"props":568,"children":569},"code",{"__ignoreMap":554},[570,611,677,785,794,804,827,841,863,885,913,934,973,986,999,1022,1047],{"type":559,"tag":571,"props":572,"children":575},"span",{"class":573,"line":574},"line",1,[576,583,589,595,601,606],{"type":559,"tag":571,"props":577,"children":579},{"style":578},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[580],{"type":581,"value":582},"text","function",{"type":559,"tag":571,"props":584,"children":586},{"style":585},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[587],{"type":581,"value":588}," getGenericType",{"type":559,"tag":571,"props":590,"children":592},{"style":591},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[593],{"type":581,"value":594},"(",{"type":559,"tag":571,"props":596,"children":598},{"style":597},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[599],{"type":581,"value":600},"s",{"type":559,"tag":571,"props":602,"children":603},{"style":591},[604],{"type":581,"value":605},")",{"type":559,"tag":571,"props":607,"children":608},{"style":591},[609],{"type":581,"value":610}," {\n",{"type":559,"tag":571,"props":612,"children":614},{"class":573,"line":613},2,[615,620,625,630,636,641,646,650,655,659,664,668,672],{"type":559,"tag":571,"props":616,"children":617},{"style":578},[618],{"type":581,"value":619},"  const",{"type":559,"tag":571,"props":621,"children":622},{"style":597},[623],{"type":581,"value":624}," r",{"type":559,"tag":571,"props":626,"children":627},{"style":591},[628],{"type":581,"value":629}," =",{"type":559,"tag":571,"props":631,"children":633},{"style":632},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[634],{"type":581,"value":635}," Object",{"type":559,"tag":571,"props":637,"children":638},{"style":591},[639],{"type":581,"value":640},".",{"type":559,"tag":571,"props":642,"children":643},{"style":632},[644],{"type":581,"value":645},"prototype",{"type":559,"tag":571,"props":647,"children":648},{"style":591},[649],{"type":581,"value":640},{"type":559,"tag":571,"props":651,"children":652},{"style":597},[653],{"type":581,"value":654},"toString",{"type":559,"tag":571,"props":656,"children":657},{"style":591},[658],{"type":581,"value":640},{"type":559,"tag":571,"props":660,"children":661},{"style":585},[662],{"type":581,"value":663},"call",{"type":559,"tag":571,"props":665,"children":666},{"style":591},[667],{"type":581,"value":594},{"type":559,"tag":571,"props":669,"children":670},{"style":597},[671],{"type":581,"value":600},{"type":559,"tag":571,"props":673,"children":674},{"style":591},[675],{"type":581,"value":676},")\n",{"type":559,"tag":571,"props":678,"children":680},{"class":573,"line":679},3,[681,687,691,695,700,704,710,716,722,726,731,736,740,745,749,754,759,765,770,775,780],{"type":559,"tag":571,"props":682,"children":684},{"style":683},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[685],{"type":581,"value":686},"  return",{"type":559,"tag":571,"props":688,"children":689},{"style":597},[690],{"type":581,"value":624},{"type":559,"tag":571,"props":692,"children":693},{"style":591},[694],{"type":581,"value":640},{"type":559,"tag":571,"props":696,"children":697},{"style":585},[698],{"type":581,"value":699},"replace",{"type":559,"tag":571,"props":701,"children":702},{"style":591},[703],{"type":581,"value":594},{"type":559,"tag":571,"props":705,"children":707},{"style":706},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[708],{"type":581,"value":709},"/",{"type":559,"tag":571,"props":711,"children":713},{"style":712},"--shiki-light:#BDA437;--shiki-default:#BDA437;--shiki-dark:#E6CC77",[714],{"type":581,"value":715},"\\[",{"type":559,"tag":571,"props":717,"children":719},{"style":718},"--shiki-light:#AB5E3F;--shiki-default:#AB5E3F;--shiki-dark:#C4704F",[720],{"type":581,"value":721},"object ",{"type":559,"tag":571,"props":723,"children":724},{"style":591},[725],{"type":581,"value":594},{"type":559,"tag":571,"props":727,"children":729},{"style":728},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[730],{"type":581,"value":640},{"type":559,"tag":571,"props":732,"children":733},{"style":578},[734],{"type":581,"value":735},"*?",{"type":559,"tag":571,"props":737,"children":738},{"style":591},[739],{"type":581,"value":605},{"type":559,"tag":571,"props":741,"children":742},{"style":712},[743],{"type":581,"value":744},"\\]",{"type":559,"tag":571,"props":746,"children":747},{"style":706},[748],{"type":581,"value":709},{"type":559,"tag":571,"props":750,"children":751},{"style":591},[752],{"type":581,"value":753},",",{"type":559,"tag":571,"props":755,"children":756},{"style":706},[757],{"type":581,"value":758}," '",{"type":559,"tag":571,"props":760,"children":762},{"style":761},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[763],{"type":581,"value":764},"$1",{"type":559,"tag":571,"props":766,"children":767},{"style":706},[768],{"type":581,"value":769},"'",{"type":559,"tag":571,"props":771,"children":772},{"style":591},[773],{"type":581,"value":774},").",{"type":559,"tag":571,"props":776,"children":777},{"style":585},[778],{"type":581,"value":779},"toLowerCase",{"type":559,"tag":571,"props":781,"children":782},{"style":591},[783],{"type":581,"value":784},"()\n",{"type":559,"tag":571,"props":786,"children":788},{"class":573,"line":787},4,[789],{"type":559,"tag":571,"props":790,"children":791},{"style":591},[792],{"type":581,"value":793},"}\n",{"type":559,"tag":571,"props":795,"children":797},{"class":573,"line":796},5,[798],{"type":559,"tag":571,"props":799,"children":801},{"emptyLinePlaceholder":800},true,[802],{"type":581,"value":803},"\n",{"type":559,"tag":571,"props":805,"children":807},{"class":573,"line":806},6,[808,813,817,822],{"type":559,"tag":571,"props":809,"children":810},{"style":597},[811],{"type":581,"value":812},"console",{"type":559,"tag":571,"props":814,"children":815},{"style":591},[816],{"type":581,"value":640},{"type":559,"tag":571,"props":818,"children":819},{"style":585},[820],{"type":581,"value":821},"log",{"type":559,"tag":571,"props":823,"children":824},{"style":591},[825],{"type":581,"value":826},"(\n",{"type":559,"tag":571,"props":828,"children":830},{"class":573,"line":829},7,[831,836],{"type":559,"tag":571,"props":832,"children":833},{"style":585},[834],{"type":581,"value":835},"  getGenericType",{"type":559,"tag":571,"props":837,"children":838},{"style":591},[839],{"type":581,"value":840},"(),\n",{"type":559,"tag":571,"props":842,"children":844},{"class":573,"line":843},8,[845,849,853,858],{"type":559,"tag":571,"props":846,"children":847},{"style":585},[848],{"type":581,"value":835},{"type":559,"tag":571,"props":850,"children":851},{"style":591},[852],{"type":581,"value":594},{"type":559,"tag":571,"props":854,"children":855},{"style":578},[856],{"type":581,"value":857},"null",{"type":559,"tag":571,"props":859,"children":860},{"style":591},[861],{"type":581,"value":862},"),\n",{"type":559,"tag":571,"props":864,"children":866},{"class":573,"line":865},9,[867,871,875,881],{"type":559,"tag":571,"props":868,"children":869},{"style":585},[870],{"type":581,"value":835},{"type":559,"tag":571,"props":872,"children":873},{"style":591},[874],{"type":581,"value":594},{"type":559,"tag":571,"props":876,"children":878},{"style":877},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[879],{"type":581,"value":880},"1",{"type":559,"tag":571,"props":882,"children":883},{"style":591},[884],{"type":581,"value":862},{"type":559,"tag":571,"props":886,"children":888},{"class":573,"line":887},10,[889,893,897,901,905,909],{"type":559,"tag":571,"props":890,"children":891},{"style":585},[892],{"type":581,"value":835},{"type":559,"tag":571,"props":894,"children":895},{"style":591},[896],{"type":581,"value":594},{"type":559,"tag":571,"props":898,"children":899},{"style":706},[900],{"type":581,"value":769},{"type":559,"tag":571,"props":902,"children":903},{"style":761},[904],{"type":581,"value":880},{"type":559,"tag":571,"props":906,"children":907},{"style":706},[908],{"type":581,"value":769},{"type":559,"tag":571,"props":910,"children":911},{"style":591},[912],{"type":581,"value":862},{"type":559,"tag":571,"props":914,"children":916},{"class":573,"line":915},11,[917,921,925,930],{"type":559,"tag":571,"props":918,"children":919},{"style":585},[920],{"type":581,"value":835},{"type":559,"tag":571,"props":922,"children":923},{"style":591},[924],{"type":581,"value":594},{"type":559,"tag":571,"props":926,"children":927},{"style":683},[928],{"type":581,"value":929},"true",{"type":559,"tag":571,"props":931,"children":932},{"style":591},[933],{"type":581,"value":862},{"type":559,"tag":571,"props":935,"children":937},{"class":573,"line":936},12,[938,942,946,951,955,959,964,968],{"type":559,"tag":571,"props":939,"children":940},{"style":585},[941],{"type":581,"value":835},{"type":559,"tag":571,"props":943,"children":944},{"style":591},[945],{"type":581,"value":594},{"type":559,"tag":571,"props":947,"children":948},{"style":585},[949],{"type":581,"value":950},"Symbol",{"type":559,"tag":571,"props":952,"children":953},{"style":591},[954],{"type":581,"value":594},{"type":559,"tag":571,"props":956,"children":957},{"style":706},[958],{"type":581,"value":769},{"type":559,"tag":571,"props":960,"children":961},{"style":761},[962],{"type":581,"value":963},"zs",{"type":559,"tag":571,"props":965,"children":966},{"style":706},[967],{"type":581,"value":769},{"type":559,"tag":571,"props":969,"children":970},{"style":591},[971],{"type":581,"value":972},")),\n",{"type":559,"tag":571,"props":974,"children":976},{"class":573,"line":975},13,[977,981],{"type":559,"tag":571,"props":978,"children":979},{"style":585},[980],{"type":581,"value":835},{"type":559,"tag":571,"props":982,"children":983},{"style":591},[984],{"type":581,"value":985},"({}),\n",{"type":559,"tag":571,"props":987,"children":989},{"class":573,"line":988},14,[990,994],{"type":559,"tag":571,"props":991,"children":992},{"style":585},[993],{"type":581,"value":835},{"type":559,"tag":571,"props":995,"children":996},{"style":591},[997],{"type":581,"value":998},"([]),\n",{"type":559,"tag":571,"props":1000,"children":1002},{"class":573,"line":1001},15,[1003,1007,1012,1017],{"type":559,"tag":571,"props":1004,"children":1005},{"style":585},[1006],{"type":581,"value":835},{"type":559,"tag":571,"props":1008,"children":1009},{"style":591},[1010],{"type":581,"value":1011},"(()",{"type":559,"tag":571,"props":1013,"children":1014},{"style":591},[1015],{"type":581,"value":1016}," =>",{"type":559,"tag":571,"props":1018,"children":1019},{"style":591},[1020],{"type":581,"value":1021}," {}),\n",{"type":559,"tag":571,"props":1023,"children":1025},{"class":573,"line":1024},16,[1026,1030,1034,1038,1043],{"type":559,"tag":571,"props":1027,"children":1028},{"style":585},[1029],{"type":581,"value":835},{"type":559,"tag":571,"props":1031,"children":1032},{"style":591},[1033],{"type":581,"value":594},{"type":559,"tag":571,"props":1035,"children":1036},{"style":877},[1037],{"type":581,"value":880},{"type":559,"tag":571,"props":1039,"children":1040},{"style":578},[1041],{"type":581,"value":1042},"n",{"type":559,"tag":571,"props":1044,"children":1045},{"style":591},[1046],{"type":581,"value":676},{"type":559,"tag":571,"props":1048,"children":1050},{"class":573,"line":1049},17,[1051],{"type":559,"tag":571,"props":1052,"children":1053},{"style":591},[1054],{"type":581,"value":676},{"type":559,"tag":1056,"props":1057,"children":1058},"style",{},[1059],{"type":581,"value":1060},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":554,"searchDepth":796,"depth":796,"links":1062},[],"markdown","content:3.code-assessment:1.source:get-generic-type.md","content","3.code-assessment/1.source/get-generic-type.md","md",[1069,1070],{"_path":400,"title":399,"description":554},{"_path":406,"title":405,"description":1071},"朴素对象指的是那些没有附加任何额外行为或方法的普通对象，它们是最基础的对象形态。创建方式一般为对象字面量或 new Object()",1715135016715]