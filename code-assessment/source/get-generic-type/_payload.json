[{"data":1,"prerenderedAt":1067},["Reactive",2],{"navigation":3,"/code-assessment/source/get-generic-type":546,"/code-assessment/source/get-generic-type-surround":1063},[4,269,298,514,522,531],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":513},"代码考核","/code-assessment",[302,404,506],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"整数分割","/code-assessment/scene/split-number",{"title":498,"_path":499},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":501,"_path":502},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":504,"_path":505},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":507,"_path":508,"children":509},"Ts 类型挑战","/code-assessment/type-challeges",[510],{"title":511,"_path":512},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":515,"_path":516,"children":517,"icon":521},"项目","/project",[518],{"title":519,"_path":520},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":523,"_path":524,"children":525,"icon":530},"设计模式","/design-mode",[526,527],{"title":523,"_path":524},{"title":528,"_path":529},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":532,"_path":533,"children":534,"icon":545},"后端语言","/backend-languages",[535],{"title":536,"_path":537,"children":538},"Python","/backend-languages/python",[539,542],{"title":540,"_path":541},"基础","/backend-languages/python/base",{"title":543,"_path":544},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":397,"_dir":547,"_draft":548,"_partial":548,"_locale":549,"title":396,"description":549,"body":550,"_type":1058,"_id":1059,"_source":1060,"_file":1061,"_extension":1062},"source",false,"",{"type":551,"children":552,"toc":1056},"root",[553,1050],{"type":554,"tag":555,"props":556,"children":560},"element","pre",{"className":557,"code":558,"language":559,"meta":549,"style":549},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","function getGenericType(s) {\n  const r = Object.prototype.toString.call(s)\n  return r.replace(/\\[object (.*?)\\]/, '$1').toLowerCase()\n}\n\nconsole.log(\n  getGenericType(),\n  getGenericType(null),\n  getGenericType(1),\n  getGenericType('1'),\n  getGenericType(true),\n  getGenericType(Symbol('zs')),\n  getGenericType({}),\n  getGenericType([]),\n  getGenericType(() => {}),\n  getGenericType(1n)\n)\n","js",[561],{"type":554,"tag":562,"props":563,"children":564},"code",{"__ignoreMap":549},[565,606,672,780,789,799,822,836,858,880,908,929,968,981,994,1017,1042],{"type":554,"tag":566,"props":567,"children":570},"span",{"class":568,"line":569},"line",1,[571,578,584,590,596,601],{"type":554,"tag":566,"props":572,"children":574},{"style":573},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[575],{"type":576,"value":577},"text","function",{"type":554,"tag":566,"props":579,"children":581},{"style":580},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[582],{"type":576,"value":583}," getGenericType",{"type":554,"tag":566,"props":585,"children":587},{"style":586},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[588],{"type":576,"value":589},"(",{"type":554,"tag":566,"props":591,"children":593},{"style":592},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[594],{"type":576,"value":595},"s",{"type":554,"tag":566,"props":597,"children":598},{"style":586},[599],{"type":576,"value":600},")",{"type":554,"tag":566,"props":602,"children":603},{"style":586},[604],{"type":576,"value":605}," {\n",{"type":554,"tag":566,"props":607,"children":609},{"class":568,"line":608},2,[610,615,620,625,631,636,641,645,650,654,659,663,667],{"type":554,"tag":566,"props":611,"children":612},{"style":573},[613],{"type":576,"value":614},"  const",{"type":554,"tag":566,"props":616,"children":617},{"style":592},[618],{"type":576,"value":619}," r",{"type":554,"tag":566,"props":621,"children":622},{"style":586},[623],{"type":576,"value":624}," =",{"type":554,"tag":566,"props":626,"children":628},{"style":627},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[629],{"type":576,"value":630}," Object",{"type":554,"tag":566,"props":632,"children":633},{"style":586},[634],{"type":576,"value":635},".",{"type":554,"tag":566,"props":637,"children":638},{"style":627},[639],{"type":576,"value":640},"prototype",{"type":554,"tag":566,"props":642,"children":643},{"style":586},[644],{"type":576,"value":635},{"type":554,"tag":566,"props":646,"children":647},{"style":592},[648],{"type":576,"value":649},"toString",{"type":554,"tag":566,"props":651,"children":652},{"style":586},[653],{"type":576,"value":635},{"type":554,"tag":566,"props":655,"children":656},{"style":580},[657],{"type":576,"value":658},"call",{"type":554,"tag":566,"props":660,"children":661},{"style":586},[662],{"type":576,"value":589},{"type":554,"tag":566,"props":664,"children":665},{"style":592},[666],{"type":576,"value":595},{"type":554,"tag":566,"props":668,"children":669},{"style":586},[670],{"type":576,"value":671},")\n",{"type":554,"tag":566,"props":673,"children":675},{"class":568,"line":674},3,[676,682,686,690,695,699,705,711,717,721,726,731,735,740,744,749,754,760,765,770,775],{"type":554,"tag":566,"props":677,"children":679},{"style":678},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[680],{"type":576,"value":681},"  return",{"type":554,"tag":566,"props":683,"children":684},{"style":592},[685],{"type":576,"value":619},{"type":554,"tag":566,"props":687,"children":688},{"style":586},[689],{"type":576,"value":635},{"type":554,"tag":566,"props":691,"children":692},{"style":580},[693],{"type":576,"value":694},"replace",{"type":554,"tag":566,"props":696,"children":697},{"style":586},[698],{"type":576,"value":589},{"type":554,"tag":566,"props":700,"children":702},{"style":701},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[703],{"type":576,"value":704},"/",{"type":554,"tag":566,"props":706,"children":708},{"style":707},"--shiki-light:#BDA437;--shiki-default:#BDA437;--shiki-dark:#E6CC77",[709],{"type":576,"value":710},"\\[",{"type":554,"tag":566,"props":712,"children":714},{"style":713},"--shiki-light:#AB5E3F;--shiki-default:#AB5E3F;--shiki-dark:#C4704F",[715],{"type":576,"value":716},"object ",{"type":554,"tag":566,"props":718,"children":719},{"style":586},[720],{"type":576,"value":589},{"type":554,"tag":566,"props":722,"children":724},{"style":723},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[725],{"type":576,"value":635},{"type":554,"tag":566,"props":727,"children":728},{"style":573},[729],{"type":576,"value":730},"*?",{"type":554,"tag":566,"props":732,"children":733},{"style":586},[734],{"type":576,"value":600},{"type":554,"tag":566,"props":736,"children":737},{"style":707},[738],{"type":576,"value":739},"\\]",{"type":554,"tag":566,"props":741,"children":742},{"style":701},[743],{"type":576,"value":704},{"type":554,"tag":566,"props":745,"children":746},{"style":586},[747],{"type":576,"value":748},",",{"type":554,"tag":566,"props":750,"children":751},{"style":701},[752],{"type":576,"value":753}," '",{"type":554,"tag":566,"props":755,"children":757},{"style":756},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[758],{"type":576,"value":759},"$1",{"type":554,"tag":566,"props":761,"children":762},{"style":701},[763],{"type":576,"value":764},"'",{"type":554,"tag":566,"props":766,"children":767},{"style":586},[768],{"type":576,"value":769},").",{"type":554,"tag":566,"props":771,"children":772},{"style":580},[773],{"type":576,"value":774},"toLowerCase",{"type":554,"tag":566,"props":776,"children":777},{"style":586},[778],{"type":576,"value":779},"()\n",{"type":554,"tag":566,"props":781,"children":783},{"class":568,"line":782},4,[784],{"type":554,"tag":566,"props":785,"children":786},{"style":586},[787],{"type":576,"value":788},"}\n",{"type":554,"tag":566,"props":790,"children":792},{"class":568,"line":791},5,[793],{"type":554,"tag":566,"props":794,"children":796},{"emptyLinePlaceholder":795},true,[797],{"type":576,"value":798},"\n",{"type":554,"tag":566,"props":800,"children":802},{"class":568,"line":801},6,[803,808,812,817],{"type":554,"tag":566,"props":804,"children":805},{"style":592},[806],{"type":576,"value":807},"console",{"type":554,"tag":566,"props":809,"children":810},{"style":586},[811],{"type":576,"value":635},{"type":554,"tag":566,"props":813,"children":814},{"style":580},[815],{"type":576,"value":816},"log",{"type":554,"tag":566,"props":818,"children":819},{"style":586},[820],{"type":576,"value":821},"(\n",{"type":554,"tag":566,"props":823,"children":825},{"class":568,"line":824},7,[826,831],{"type":554,"tag":566,"props":827,"children":828},{"style":580},[829],{"type":576,"value":830},"  getGenericType",{"type":554,"tag":566,"props":832,"children":833},{"style":586},[834],{"type":576,"value":835},"(),\n",{"type":554,"tag":566,"props":837,"children":839},{"class":568,"line":838},8,[840,844,848,853],{"type":554,"tag":566,"props":841,"children":842},{"style":580},[843],{"type":576,"value":830},{"type":554,"tag":566,"props":845,"children":846},{"style":586},[847],{"type":576,"value":589},{"type":554,"tag":566,"props":849,"children":850},{"style":573},[851],{"type":576,"value":852},"null",{"type":554,"tag":566,"props":854,"children":855},{"style":586},[856],{"type":576,"value":857},"),\n",{"type":554,"tag":566,"props":859,"children":861},{"class":568,"line":860},9,[862,866,870,876],{"type":554,"tag":566,"props":863,"children":864},{"style":580},[865],{"type":576,"value":830},{"type":554,"tag":566,"props":867,"children":868},{"style":586},[869],{"type":576,"value":589},{"type":554,"tag":566,"props":871,"children":873},{"style":872},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[874],{"type":576,"value":875},"1",{"type":554,"tag":566,"props":877,"children":878},{"style":586},[879],{"type":576,"value":857},{"type":554,"tag":566,"props":881,"children":883},{"class":568,"line":882},10,[884,888,892,896,900,904],{"type":554,"tag":566,"props":885,"children":886},{"style":580},[887],{"type":576,"value":830},{"type":554,"tag":566,"props":889,"children":890},{"style":586},[891],{"type":576,"value":589},{"type":554,"tag":566,"props":893,"children":894},{"style":701},[895],{"type":576,"value":764},{"type":554,"tag":566,"props":897,"children":898},{"style":756},[899],{"type":576,"value":875},{"type":554,"tag":566,"props":901,"children":902},{"style":701},[903],{"type":576,"value":764},{"type":554,"tag":566,"props":905,"children":906},{"style":586},[907],{"type":576,"value":857},{"type":554,"tag":566,"props":909,"children":911},{"class":568,"line":910},11,[912,916,920,925],{"type":554,"tag":566,"props":913,"children":914},{"style":580},[915],{"type":576,"value":830},{"type":554,"tag":566,"props":917,"children":918},{"style":586},[919],{"type":576,"value":589},{"type":554,"tag":566,"props":921,"children":922},{"style":678},[923],{"type":576,"value":924},"true",{"type":554,"tag":566,"props":926,"children":927},{"style":586},[928],{"type":576,"value":857},{"type":554,"tag":566,"props":930,"children":932},{"class":568,"line":931},12,[933,937,941,946,950,954,959,963],{"type":554,"tag":566,"props":934,"children":935},{"style":580},[936],{"type":576,"value":830},{"type":554,"tag":566,"props":938,"children":939},{"style":586},[940],{"type":576,"value":589},{"type":554,"tag":566,"props":942,"children":943},{"style":580},[944],{"type":576,"value":945},"Symbol",{"type":554,"tag":566,"props":947,"children":948},{"style":586},[949],{"type":576,"value":589},{"type":554,"tag":566,"props":951,"children":952},{"style":701},[953],{"type":576,"value":764},{"type":554,"tag":566,"props":955,"children":956},{"style":756},[957],{"type":576,"value":958},"zs",{"type":554,"tag":566,"props":960,"children":961},{"style":701},[962],{"type":576,"value":764},{"type":554,"tag":566,"props":964,"children":965},{"style":586},[966],{"type":576,"value":967},")),\n",{"type":554,"tag":566,"props":969,"children":971},{"class":568,"line":970},13,[972,976],{"type":554,"tag":566,"props":973,"children":974},{"style":580},[975],{"type":576,"value":830},{"type":554,"tag":566,"props":977,"children":978},{"style":586},[979],{"type":576,"value":980},"({}),\n",{"type":554,"tag":566,"props":982,"children":984},{"class":568,"line":983},14,[985,989],{"type":554,"tag":566,"props":986,"children":987},{"style":580},[988],{"type":576,"value":830},{"type":554,"tag":566,"props":990,"children":991},{"style":586},[992],{"type":576,"value":993},"([]),\n",{"type":554,"tag":566,"props":995,"children":997},{"class":568,"line":996},15,[998,1002,1007,1012],{"type":554,"tag":566,"props":999,"children":1000},{"style":580},[1001],{"type":576,"value":830},{"type":554,"tag":566,"props":1003,"children":1004},{"style":586},[1005],{"type":576,"value":1006},"(()",{"type":554,"tag":566,"props":1008,"children":1009},{"style":586},[1010],{"type":576,"value":1011}," =>",{"type":554,"tag":566,"props":1013,"children":1014},{"style":586},[1015],{"type":576,"value":1016}," {}),\n",{"type":554,"tag":566,"props":1018,"children":1020},{"class":568,"line":1019},16,[1021,1025,1029,1033,1038],{"type":554,"tag":566,"props":1022,"children":1023},{"style":580},[1024],{"type":576,"value":830},{"type":554,"tag":566,"props":1026,"children":1027},{"style":586},[1028],{"type":576,"value":589},{"type":554,"tag":566,"props":1030,"children":1031},{"style":872},[1032],{"type":576,"value":875},{"type":554,"tag":566,"props":1034,"children":1035},{"style":573},[1036],{"type":576,"value":1037},"n",{"type":554,"tag":566,"props":1039,"children":1040},{"style":586},[1041],{"type":576,"value":671},{"type":554,"tag":566,"props":1043,"children":1045},{"class":568,"line":1044},17,[1046],{"type":554,"tag":566,"props":1047,"children":1048},{"style":586},[1049],{"type":576,"value":671},{"type":554,"tag":1051,"props":1052,"children":1053},"style",{},[1054],{"type":576,"value":1055},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":549,"searchDepth":791,"depth":791,"links":1057},[],"markdown","content:3.code-assessment:1.source:get-generic-type.md","content","3.code-assessment/1.source/get-generic-type.md","md",[1064,1065],{"_path":394,"title":393,"description":549},{"_path":400,"title":399,"description":1066},"朴素对象指的是那些没有附加任何额外行为或方法的普通对象，它们是最基础的对象形态。创建方式一般为对象字面量或 new Object()",1714279839646]