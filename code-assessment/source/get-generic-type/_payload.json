[{"data":1,"prerenderedAt":1061},["Reactive",2],{"navigation":3,"/code-assessment/source/get-generic-type":540,"/code-assessment/source/get-generic-type-surround":1057},[4,269,298,508,516,525],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":507},"代码考核","/code-assessment",[302,401,500],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,334,350,378,385,392,395,398],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333},"extends","/code-assessment/source/native-api/extends",{"title":335,"_path":336,"children":337},"函数 Function","/code-assessment/source/function",[338,341,344,347],{"title":339,"_path":340},"函数防抖","/code-assessment/source/function/debounce",{"title":342,"_path":343},"函数节流","/code-assessment/source/function/throttle",{"title":345,"_path":346},"函数柯理化","/code-assessment/source/function/curry",{"title":348,"_path":349},"函数睡眠","/code-assessment/source/function/sleep",{"title":351,"_path":352,"children":353},"数组 Array","/code-assessment/source/array",[354,357,360,363,366,369,372,375],{"title":355,"_path":356},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":358,"_path":359},"数组扁平化","/code-assessment/source/array/flat",{"title":361,"_path":362},"原型方法","/code-assessment/source/array/prototype-method",{"title":364,"_path":365},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":367,"_path":368},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":370,"_path":371},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":373,"_path":374},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":376,"_path":377},"二维数组","/code-assessment/source/array/2d-array",{"title":379,"_path":380,"children":381},"字符串 String","/code-assessment/source/string",[382],{"title":383,"_path":384},"repeat()","/code-assessment/source/string/repeat",{"title":386,"_path":387,"children":388},"集合 Set","/code-assessment/source/set",[389],{"title":390,"_path":391},"遍历集合","/code-assessment/source/set/traverse",{"title":393,"_path":394},"获取通用类型","/code-assessment/source/get-generic-type",{"title":396,"_path":397},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":399,"_path":400},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":402,"_path":403,"children":404},"业务场景","/code-assessment/scene",[405,436,446,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497],{"title":406,"_path":407,"children":408},"Promise","/code-assessment/scene/promise",[409,412,415,418,421,424,427,430,433],{"title":410,"_path":411},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":413,"_path":414},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":416,"_path":417},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":419,"_path":420},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":422,"_path":423},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":425,"_path":426},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":428,"_path":429},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":431,"_path":432},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":434,"_path":435},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":437,"_path":438,"children":439},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[440,443],{"title":441,"_path":442},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":444,"_path":445},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":447,"_path":448},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":450,"_path":451},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":453,"_path":454},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":456,"_path":457},"倒计时","/code-assessment/scene/countdown",{"title":459,"_path":460},"日期格式化","/code-assessment/scene/date-format",{"title":462,"_path":463},"实现前端路由","/code-assessment/scene/frontend-route",{"title":465,"_path":466},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":468,"_path":469},"lodash.get","/code-assessment/scene/lodash-get",{"title":471,"_path":472},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":474,"_path":475},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":477,"_path":478},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":480,"_path":481},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":483,"_path":484},"随机数","/code-assessment/scene/random-number",{"title":486,"_path":487},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":489,"_path":490},"sku 算法实现","/code-assessment/scene/sku",{"title":492,"_path":493},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":495,"_path":496},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":498,"_path":499},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":501,"_path":502,"children":503},"Ts 类型挑战","/code-assessment/type-challeges",[504],{"title":505,"_path":506},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":509,"_path":510,"children":511,"icon":515},"项目","/project",[512],{"title":513,"_path":514},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":517,"_path":518,"children":519,"icon":524},"设计模式","/design-mode",[520,521],{"title":517,"_path":518},{"title":522,"_path":523},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":526,"_path":527,"children":528,"icon":539},"后端语言","/backend-languages",[529],{"title":530,"_path":531,"children":532},"Python","/backend-languages/python",[533,536],{"title":534,"_path":535},"基础","/backend-languages/python/base",{"title":537,"_path":538},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":394,"_dir":541,"_draft":542,"_partial":542,"_locale":543,"title":393,"description":543,"body":544,"_type":1052,"_id":1053,"_source":1054,"_file":1055,"_extension":1056},"source",false,"",{"type":545,"children":546,"toc":1050},"root",[547,1044],{"type":548,"tag":549,"props":550,"children":554},"element","pre",{"className":551,"code":552,"language":553,"meta":543,"style":543},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","function getGenericType(s) {\n  const r = Object.prototype.toString.call(s)\n  return r.replace(/\\[object (.*?)\\]/, '$1').toLowerCase()\n}\n\nconsole.log(\n  getGenericType(),\n  getGenericType(null),\n  getGenericType(1),\n  getGenericType('1'),\n  getGenericType(true),\n  getGenericType(Symbol('zs')),\n  getGenericType({}),\n  getGenericType([]),\n  getGenericType(() => {}),\n  getGenericType(1n)\n)\n","js",[555],{"type":548,"tag":556,"props":557,"children":558},"code",{"__ignoreMap":543},[559,600,666,774,783,793,816,830,852,874,902,923,962,975,988,1011,1036],{"type":548,"tag":560,"props":561,"children":564},"span",{"class":562,"line":563},"line",1,[565,572,578,584,590,595],{"type":548,"tag":560,"props":566,"children":568},{"style":567},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[569],{"type":570,"value":571},"text","function",{"type":548,"tag":560,"props":573,"children":575},{"style":574},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[576],{"type":570,"value":577}," getGenericType",{"type":548,"tag":560,"props":579,"children":581},{"style":580},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[582],{"type":570,"value":583},"(",{"type":548,"tag":560,"props":585,"children":587},{"style":586},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[588],{"type":570,"value":589},"s",{"type":548,"tag":560,"props":591,"children":592},{"style":580},[593],{"type":570,"value":594},")",{"type":548,"tag":560,"props":596,"children":597},{"style":580},[598],{"type":570,"value":599}," {\n",{"type":548,"tag":560,"props":601,"children":603},{"class":562,"line":602},2,[604,609,614,619,625,630,635,639,644,648,653,657,661],{"type":548,"tag":560,"props":605,"children":606},{"style":567},[607],{"type":570,"value":608},"  const",{"type":548,"tag":560,"props":610,"children":611},{"style":586},[612],{"type":570,"value":613}," r",{"type":548,"tag":560,"props":615,"children":616},{"style":580},[617],{"type":570,"value":618}," =",{"type":548,"tag":560,"props":620,"children":622},{"style":621},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[623],{"type":570,"value":624}," Object",{"type":548,"tag":560,"props":626,"children":627},{"style":580},[628],{"type":570,"value":629},".",{"type":548,"tag":560,"props":631,"children":632},{"style":621},[633],{"type":570,"value":634},"prototype",{"type":548,"tag":560,"props":636,"children":637},{"style":580},[638],{"type":570,"value":629},{"type":548,"tag":560,"props":640,"children":641},{"style":586},[642],{"type":570,"value":643},"toString",{"type":548,"tag":560,"props":645,"children":646},{"style":580},[647],{"type":570,"value":629},{"type":548,"tag":560,"props":649,"children":650},{"style":574},[651],{"type":570,"value":652},"call",{"type":548,"tag":560,"props":654,"children":655},{"style":580},[656],{"type":570,"value":583},{"type":548,"tag":560,"props":658,"children":659},{"style":586},[660],{"type":570,"value":589},{"type":548,"tag":560,"props":662,"children":663},{"style":580},[664],{"type":570,"value":665},")\n",{"type":548,"tag":560,"props":667,"children":669},{"class":562,"line":668},3,[670,676,680,684,689,693,699,705,711,715,720,725,729,734,738,743,748,754,759,764,769],{"type":548,"tag":560,"props":671,"children":673},{"style":672},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[674],{"type":570,"value":675},"  return",{"type":548,"tag":560,"props":677,"children":678},{"style":586},[679],{"type":570,"value":613},{"type":548,"tag":560,"props":681,"children":682},{"style":580},[683],{"type":570,"value":629},{"type":548,"tag":560,"props":685,"children":686},{"style":574},[687],{"type":570,"value":688},"replace",{"type":548,"tag":560,"props":690,"children":691},{"style":580},[692],{"type":570,"value":583},{"type":548,"tag":560,"props":694,"children":696},{"style":695},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[697],{"type":570,"value":698},"/",{"type":548,"tag":560,"props":700,"children":702},{"style":701},"--shiki-light:#BDA437;--shiki-default:#BDA437;--shiki-dark:#E6CC77",[703],{"type":570,"value":704},"\\[",{"type":548,"tag":560,"props":706,"children":708},{"style":707},"--shiki-light:#AB5E3F;--shiki-default:#AB5E3F;--shiki-dark:#C4704F",[709],{"type":570,"value":710},"object ",{"type":548,"tag":560,"props":712,"children":713},{"style":580},[714],{"type":570,"value":583},{"type":548,"tag":560,"props":716,"children":718},{"style":717},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[719],{"type":570,"value":629},{"type":548,"tag":560,"props":721,"children":722},{"style":567},[723],{"type":570,"value":724},"*?",{"type":548,"tag":560,"props":726,"children":727},{"style":580},[728],{"type":570,"value":594},{"type":548,"tag":560,"props":730,"children":731},{"style":701},[732],{"type":570,"value":733},"\\]",{"type":548,"tag":560,"props":735,"children":736},{"style":695},[737],{"type":570,"value":698},{"type":548,"tag":560,"props":739,"children":740},{"style":580},[741],{"type":570,"value":742},",",{"type":548,"tag":560,"props":744,"children":745},{"style":695},[746],{"type":570,"value":747}," '",{"type":548,"tag":560,"props":749,"children":751},{"style":750},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[752],{"type":570,"value":753},"$1",{"type":548,"tag":560,"props":755,"children":756},{"style":695},[757],{"type":570,"value":758},"'",{"type":548,"tag":560,"props":760,"children":761},{"style":580},[762],{"type":570,"value":763},").",{"type":548,"tag":560,"props":765,"children":766},{"style":574},[767],{"type":570,"value":768},"toLowerCase",{"type":548,"tag":560,"props":770,"children":771},{"style":580},[772],{"type":570,"value":773},"()\n",{"type":548,"tag":560,"props":775,"children":777},{"class":562,"line":776},4,[778],{"type":548,"tag":560,"props":779,"children":780},{"style":580},[781],{"type":570,"value":782},"}\n",{"type":548,"tag":560,"props":784,"children":786},{"class":562,"line":785},5,[787],{"type":548,"tag":560,"props":788,"children":790},{"emptyLinePlaceholder":789},true,[791],{"type":570,"value":792},"\n",{"type":548,"tag":560,"props":794,"children":796},{"class":562,"line":795},6,[797,802,806,811],{"type":548,"tag":560,"props":798,"children":799},{"style":586},[800],{"type":570,"value":801},"console",{"type":548,"tag":560,"props":803,"children":804},{"style":580},[805],{"type":570,"value":629},{"type":548,"tag":560,"props":807,"children":808},{"style":574},[809],{"type":570,"value":810},"log",{"type":548,"tag":560,"props":812,"children":813},{"style":580},[814],{"type":570,"value":815},"(\n",{"type":548,"tag":560,"props":817,"children":819},{"class":562,"line":818},7,[820,825],{"type":548,"tag":560,"props":821,"children":822},{"style":574},[823],{"type":570,"value":824},"  getGenericType",{"type":548,"tag":560,"props":826,"children":827},{"style":580},[828],{"type":570,"value":829},"(),\n",{"type":548,"tag":560,"props":831,"children":833},{"class":562,"line":832},8,[834,838,842,847],{"type":548,"tag":560,"props":835,"children":836},{"style":574},[837],{"type":570,"value":824},{"type":548,"tag":560,"props":839,"children":840},{"style":580},[841],{"type":570,"value":583},{"type":548,"tag":560,"props":843,"children":844},{"style":567},[845],{"type":570,"value":846},"null",{"type":548,"tag":560,"props":848,"children":849},{"style":580},[850],{"type":570,"value":851},"),\n",{"type":548,"tag":560,"props":853,"children":855},{"class":562,"line":854},9,[856,860,864,870],{"type":548,"tag":560,"props":857,"children":858},{"style":574},[859],{"type":570,"value":824},{"type":548,"tag":560,"props":861,"children":862},{"style":580},[863],{"type":570,"value":583},{"type":548,"tag":560,"props":865,"children":867},{"style":866},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[868],{"type":570,"value":869},"1",{"type":548,"tag":560,"props":871,"children":872},{"style":580},[873],{"type":570,"value":851},{"type":548,"tag":560,"props":875,"children":877},{"class":562,"line":876},10,[878,882,886,890,894,898],{"type":548,"tag":560,"props":879,"children":880},{"style":574},[881],{"type":570,"value":824},{"type":548,"tag":560,"props":883,"children":884},{"style":580},[885],{"type":570,"value":583},{"type":548,"tag":560,"props":887,"children":888},{"style":695},[889],{"type":570,"value":758},{"type":548,"tag":560,"props":891,"children":892},{"style":750},[893],{"type":570,"value":869},{"type":548,"tag":560,"props":895,"children":896},{"style":695},[897],{"type":570,"value":758},{"type":548,"tag":560,"props":899,"children":900},{"style":580},[901],{"type":570,"value":851},{"type":548,"tag":560,"props":903,"children":905},{"class":562,"line":904},11,[906,910,914,919],{"type":548,"tag":560,"props":907,"children":908},{"style":574},[909],{"type":570,"value":824},{"type":548,"tag":560,"props":911,"children":912},{"style":580},[913],{"type":570,"value":583},{"type":548,"tag":560,"props":915,"children":916},{"style":672},[917],{"type":570,"value":918},"true",{"type":548,"tag":560,"props":920,"children":921},{"style":580},[922],{"type":570,"value":851},{"type":548,"tag":560,"props":924,"children":926},{"class":562,"line":925},12,[927,931,935,940,944,948,953,957],{"type":548,"tag":560,"props":928,"children":929},{"style":574},[930],{"type":570,"value":824},{"type":548,"tag":560,"props":932,"children":933},{"style":580},[934],{"type":570,"value":583},{"type":548,"tag":560,"props":936,"children":937},{"style":574},[938],{"type":570,"value":939},"Symbol",{"type":548,"tag":560,"props":941,"children":942},{"style":580},[943],{"type":570,"value":583},{"type":548,"tag":560,"props":945,"children":946},{"style":695},[947],{"type":570,"value":758},{"type":548,"tag":560,"props":949,"children":950},{"style":750},[951],{"type":570,"value":952},"zs",{"type":548,"tag":560,"props":954,"children":955},{"style":695},[956],{"type":570,"value":758},{"type":548,"tag":560,"props":958,"children":959},{"style":580},[960],{"type":570,"value":961},")),\n",{"type":548,"tag":560,"props":963,"children":965},{"class":562,"line":964},13,[966,970],{"type":548,"tag":560,"props":967,"children":968},{"style":574},[969],{"type":570,"value":824},{"type":548,"tag":560,"props":971,"children":972},{"style":580},[973],{"type":570,"value":974},"({}),\n",{"type":548,"tag":560,"props":976,"children":978},{"class":562,"line":977},14,[979,983],{"type":548,"tag":560,"props":980,"children":981},{"style":574},[982],{"type":570,"value":824},{"type":548,"tag":560,"props":984,"children":985},{"style":580},[986],{"type":570,"value":987},"([]),\n",{"type":548,"tag":560,"props":989,"children":991},{"class":562,"line":990},15,[992,996,1001,1006],{"type":548,"tag":560,"props":993,"children":994},{"style":574},[995],{"type":570,"value":824},{"type":548,"tag":560,"props":997,"children":998},{"style":580},[999],{"type":570,"value":1000},"(()",{"type":548,"tag":560,"props":1002,"children":1003},{"style":580},[1004],{"type":570,"value":1005}," =>",{"type":548,"tag":560,"props":1007,"children":1008},{"style":580},[1009],{"type":570,"value":1010}," {}),\n",{"type":548,"tag":560,"props":1012,"children":1014},{"class":562,"line":1013},16,[1015,1019,1023,1027,1032],{"type":548,"tag":560,"props":1016,"children":1017},{"style":574},[1018],{"type":570,"value":824},{"type":548,"tag":560,"props":1020,"children":1021},{"style":580},[1022],{"type":570,"value":583},{"type":548,"tag":560,"props":1024,"children":1025},{"style":866},[1026],{"type":570,"value":869},{"type":548,"tag":560,"props":1028,"children":1029},{"style":567},[1030],{"type":570,"value":1031},"n",{"type":548,"tag":560,"props":1033,"children":1034},{"style":580},[1035],{"type":570,"value":665},{"type":548,"tag":560,"props":1037,"children":1039},{"class":562,"line":1038},17,[1040],{"type":548,"tag":560,"props":1041,"children":1042},{"style":580},[1043],{"type":570,"value":665},{"type":548,"tag":1045,"props":1046,"children":1047},"style",{},[1048],{"type":570,"value":1049},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":543,"searchDepth":785,"depth":785,"links":1051},[],"markdown","content:3.code-assessment:1.source:get-generic-type.md","content","3.code-assessment/1.source/get-generic-type.md","md",[1058,1059],{"_path":391,"title":390,"description":543},{"_path":397,"title":396,"description":1060},"朴素对象指的是那些没有附加任何额外行为或方法的普通对象，它们是最基础的对象形态。创建方式一般为对象字面量或 new Object()",1714099280351]