[{"data":1,"prerenderedAt":1033},["Reactive",2],{"navigation":3,"/code-assessment/type-challeges/medium-tuple-to-union":524,"/code-assessment/type-challeges/medium-tuple-to-union-surround":1028},[4,269,298,492,500,509],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":491},"代码考核","/code-assessment",[302,391,484],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,375,382,385,388],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357,360,363,366,369,372],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"原型方法","/code-assessment/source/array/prototype-method",{"title":361,"_path":362},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":364,"_path":365},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":367,"_path":368},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":370,"_path":371},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":373,"_path":374},"二维数组","/code-assessment/source/array/2d-array",{"title":376,"_path":377,"children":378},"字符串 String","/code-assessment/source/string",[379],{"title":380,"_path":381},"repeat()","/code-assessment/source/string/repeat",{"title":383,"_path":384},"获取通用类型","/code-assessment/source/get-generic-type",{"title":386,"_path":387},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":389,"_path":390},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":392,"_path":393,"children":394},"业务场景","/code-assessment/scene",[395,420,430,433,436,439,442,445,448,451,454,457,460,463,466,469,472,475,478,481],{"title":396,"_path":397,"children":398},"Promise","/code-assessment/scene/promise",[399,402,405,408,411,414,417],{"title":400,"_path":401},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":403,"_path":404},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":406,"_path":407},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":409,"_path":410},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":412,"_path":413},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":415,"_path":416},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":418,"_path":419},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":421,"_path":422,"children":423},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[424,427],{"title":425,"_path":426},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":428,"_path":429},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":431,"_path":432},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":434,"_path":435},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":437,"_path":438},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":440,"_path":441},"倒计时","/code-assessment/scene/countdown",{"title":443,"_path":444},"日期格式化","/code-assessment/scene/date-format",{"title":446,"_path":447},"实现前端路由","/code-assessment/scene/frontend-route",{"title":449,"_path":450},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":452,"_path":453},"lodash.get","/code-assessment/scene/lodash-get",{"title":455,"_path":456},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":458,"_path":459},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":461,"_path":462},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":464,"_path":465},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":467,"_path":468},"随机数","/code-assessment/scene/random-number",{"title":470,"_path":471},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":473,"_path":474},"sku 算法实现","/code-assessment/scene/sku",{"title":476,"_path":477},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":479,"_path":480},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":482,"_path":483},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":485,"_path":486,"children":487},"Ts 类型挑战","/code-assessment/type-challeges",[488],{"title":489,"_path":490},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":493,"_path":494,"children":495,"icon":499},"项目","/project",[496],{"title":497,"_path":498},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":501,"_path":502,"children":503,"icon":508},"设计模式","/design-mode",[504,505],{"title":501,"_path":502},{"title":506,"_path":507},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":510,"_path":511,"children":512,"icon":523},"后端语言","/backend-languages",[513],{"title":514,"_path":515,"children":516},"Python","/backend-languages/python",[517,520],{"title":518,"_path":519},"基础","/backend-languages/python/base",{"title":521,"_path":522},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":490,"_dir":525,"_draft":526,"_partial":526,"_locale":527,"title":489,"description":528,"body":529,"_type":1023,"_id":1024,"_source":1025,"_file":1026,"_extension":1027},"type-challeges",false,"","实现泛型TupleToUnion\u003CT>，它返回元组所有值的合集。",{"type":530,"children":531,"toc":1017},"root",[532,549,554,703,710,775,781,922,928,1011],{"type":533,"tag":534,"props":535,"children":536},"element","p",{},[537,540,547],{"type":538,"value":539},"text","实现泛型",{"type":533,"tag":541,"props":542,"children":544},"code",{"className":543},[],[545],{"type":538,"value":546},"TupleToUnion\u003CT>",{"type":538,"value":548},"，它返回元组所有值的合集。",{"type":533,"tag":534,"props":550,"children":551},{},[552],{"type":538,"value":553},"例如",{"type":533,"tag":555,"props":556,"children":560},"pre",{"className":557,"code":558,"language":559,"meta":527,"style":527},"language-ts shiki shiki-themes vitesse-light vitesse-light vitesse-dark","type Arr = [\"1\", \"2\", \"3\"];\n\ntype Test = TupleToUnion\u003CArr>; // expected to be '1' | '2' | '3'\n","ts",[561],{"type":533,"tag":541,"props":562,"children":563},{"__ignoreMap":527},[564,650,660],{"type":533,"tag":565,"props":566,"children":569},"span",{"class":567,"line":568},"line",1,[570,576,582,588,593,599,605,609,614,619,624,628,632,636,641,645],{"type":533,"tag":565,"props":571,"children":573},{"style":572},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[574],{"type":538,"value":575},"type",{"type":533,"tag":565,"props":577,"children":579},{"style":578},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[580],{"type":538,"value":581}," Arr",{"type":533,"tag":565,"props":583,"children":585},{"style":584},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[586],{"type":538,"value":587}," =",{"type":533,"tag":565,"props":589,"children":590},{"style":584},[591],{"type":538,"value":592}," [",{"type":533,"tag":565,"props":594,"children":596},{"style":595},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[597],{"type":538,"value":598},"\"",{"type":533,"tag":565,"props":600,"children":602},{"style":601},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[603],{"type":538,"value":604},"1",{"type":533,"tag":565,"props":606,"children":607},{"style":595},[608],{"type":538,"value":598},{"type":533,"tag":565,"props":610,"children":611},{"style":584},[612],{"type":538,"value":613},",",{"type":533,"tag":565,"props":615,"children":616},{"style":595},[617],{"type":538,"value":618}," \"",{"type":533,"tag":565,"props":620,"children":621},{"style":601},[622],{"type":538,"value":623},"2",{"type":533,"tag":565,"props":625,"children":626},{"style":595},[627],{"type":538,"value":598},{"type":533,"tag":565,"props":629,"children":630},{"style":584},[631],{"type":538,"value":613},{"type":533,"tag":565,"props":633,"children":634},{"style":595},[635],{"type":538,"value":618},{"type":533,"tag":565,"props":637,"children":638},{"style":601},[639],{"type":538,"value":640},"3",{"type":533,"tag":565,"props":642,"children":643},{"style":595},[644],{"type":538,"value":598},{"type":533,"tag":565,"props":646,"children":647},{"style":584},[648],{"type":538,"value":649},"];\n",{"type":533,"tag":565,"props":651,"children":653},{"class":567,"line":652},2,[654],{"type":533,"tag":565,"props":655,"children":657},{"emptyLinePlaceholder":656},true,[658],{"type":538,"value":659},"\n",{"type":533,"tag":565,"props":661,"children":663},{"class":567,"line":662},3,[664,668,673,677,682,687,692,697],{"type":533,"tag":565,"props":665,"children":666},{"style":572},[667],{"type":538,"value":575},{"type":533,"tag":565,"props":669,"children":670},{"style":578},[671],{"type":538,"value":672}," Test",{"type":533,"tag":565,"props":674,"children":675},{"style":584},[676],{"type":538,"value":587},{"type":533,"tag":565,"props":678,"children":679},{"style":578},[680],{"type":538,"value":681}," TupleToUnion",{"type":533,"tag":565,"props":683,"children":684},{"style":584},[685],{"type":538,"value":686},"\u003C",{"type":533,"tag":565,"props":688,"children":689},{"style":578},[690],{"type":538,"value":691},"Arr",{"type":533,"tag":565,"props":693,"children":694},{"style":584},[695],{"type":538,"value":696},">;",{"type":533,"tag":565,"props":698,"children":700},{"style":699},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[701],{"type":538,"value":702}," // expected to be '1' | '2' | '3'\n",{"type":533,"tag":704,"props":705,"children":707},"h2",{"id":706},"method-1",[708],{"type":538,"value":709},"method 1",{"type":533,"tag":555,"props":711,"children":713},{"className":557,"code":712,"language":559,"meta":527,"style":527},"type TupleToUnion\u003CT extends any[]> = T[number];\n",[714],{"type":533,"tag":541,"props":715,"children":716},{"__ignoreMap":527},[717],{"type":533,"tag":565,"props":718,"children":719},{"class":567,"line":568},[720,724,728,732,737,742,747,752,756,761,766,771],{"type":533,"tag":565,"props":721,"children":722},{"style":572},[723],{"type":538,"value":575},{"type":533,"tag":565,"props":725,"children":726},{"style":578},[727],{"type":538,"value":681},{"type":533,"tag":565,"props":729,"children":730},{"style":584},[731],{"type":538,"value":686},{"type":533,"tag":565,"props":733,"children":734},{"style":578},[735],{"type":538,"value":736},"T",{"type":533,"tag":565,"props":738,"children":739},{"style":572},[740],{"type":538,"value":741}," extends",{"type":533,"tag":565,"props":743,"children":744},{"style":578},[745],{"type":538,"value":746}," any",{"type":533,"tag":565,"props":748,"children":749},{"style":584},[750],{"type":538,"value":751},"[]>",{"type":533,"tag":565,"props":753,"children":754},{"style":584},[755],{"type":538,"value":587},{"type":533,"tag":565,"props":757,"children":758},{"style":578},[759],{"type":538,"value":760}," T",{"type":533,"tag":565,"props":762,"children":763},{"style":584},[764],{"type":538,"value":765},"[",{"type":533,"tag":565,"props":767,"children":768},{"style":578},[769],{"type":538,"value":770},"number",{"type":533,"tag":565,"props":772,"children":773},{"style":584},[774],{"type":538,"value":649},{"type":533,"tag":704,"props":776,"children":778},{"id":777},"method-2",[779],{"type":538,"value":780},"method 2",{"type":533,"tag":555,"props":782,"children":784},{"className":557,"code":783,"language":559,"meta":527,"style":527},"type TupleToUnion\u003CT extends unknown[]> = T extends [infer P, ...infer R]\n  ? P | TupleToUnion\u003CR>\n  : never;\n",[785],{"type":533,"tag":541,"props":786,"children":787},{"__ignoreMap":527},[788,869,904],{"type":533,"tag":565,"props":789,"children":790},{"class":567,"line":568},[791,795,799,803,807,811,816,820,824,828,832,836,841,846,850,855,859,864],{"type":533,"tag":565,"props":792,"children":793},{"style":572},[794],{"type":538,"value":575},{"type":533,"tag":565,"props":796,"children":797},{"style":578},[798],{"type":538,"value":681},{"type":533,"tag":565,"props":800,"children":801},{"style":584},[802],{"type":538,"value":686},{"type":533,"tag":565,"props":804,"children":805},{"style":578},[806],{"type":538,"value":736},{"type":533,"tag":565,"props":808,"children":809},{"style":572},[810],{"type":538,"value":741},{"type":533,"tag":565,"props":812,"children":813},{"style":578},[814],{"type":538,"value":815}," unknown",{"type":533,"tag":565,"props":817,"children":818},{"style":584},[819],{"type":538,"value":751},{"type":533,"tag":565,"props":821,"children":822},{"style":584},[823],{"type":538,"value":587},{"type":533,"tag":565,"props":825,"children":826},{"style":578},[827],{"type":538,"value":760},{"type":533,"tag":565,"props":829,"children":830},{"style":572},[831],{"type":538,"value":741},{"type":533,"tag":565,"props":833,"children":834},{"style":584},[835],{"type":538,"value":592},{"type":533,"tag":565,"props":837,"children":838},{"style":572},[839],{"type":538,"value":840},"infer",{"type":533,"tag":565,"props":842,"children":843},{"style":578},[844],{"type":538,"value":845}," P",{"type":533,"tag":565,"props":847,"children":848},{"style":584},[849],{"type":538,"value":613},{"type":533,"tag":565,"props":851,"children":852},{"style":584},[853],{"type":538,"value":854}," ...",{"type":533,"tag":565,"props":856,"children":857},{"style":572},[858],{"type":538,"value":840},{"type":533,"tag":565,"props":860,"children":861},{"style":578},[862],{"type":538,"value":863}," R",{"type":533,"tag":565,"props":865,"children":866},{"style":584},[867],{"type":538,"value":868},"]\n",{"type":533,"tag":565,"props":870,"children":871},{"class":567,"line":652},[872,877,881,886,890,894,899],{"type":533,"tag":565,"props":873,"children":874},{"style":572},[875],{"type":538,"value":876},"  ?",{"type":533,"tag":565,"props":878,"children":879},{"style":578},[880],{"type":538,"value":845},{"type":533,"tag":565,"props":882,"children":883},{"style":584},[884],{"type":538,"value":885}," |",{"type":533,"tag":565,"props":887,"children":888},{"style":578},[889],{"type":538,"value":681},{"type":533,"tag":565,"props":891,"children":892},{"style":584},[893],{"type":538,"value":686},{"type":533,"tag":565,"props":895,"children":896},{"style":578},[897],{"type":538,"value":898},"R",{"type":533,"tag":565,"props":900,"children":901},{"style":584},[902],{"type":538,"value":903},">\n",{"type":533,"tag":565,"props":905,"children":906},{"class":567,"line":662},[907,912,917],{"type":533,"tag":565,"props":908,"children":909},{"style":572},[910],{"type":538,"value":911},"  :",{"type":533,"tag":565,"props":913,"children":914},{"style":578},[915],{"type":538,"value":916}," never",{"type":533,"tag":565,"props":918,"children":919},{"style":584},[920],{"type":538,"value":921},";\n",{"type":533,"tag":704,"props":923,"children":925},{"id":924},"method-3",[926],{"type":538,"value":927},"method 3",{"type":533,"tag":555,"props":929,"children":931},{"className":557,"code":930,"language":559,"meta":527,"style":527},"type TupleToUnion\u003CT> = T extends (infer P)[] ? P : never;\n",[932],{"type":533,"tag":541,"props":933,"children":934},{"__ignoreMap":527},[935],{"type":533,"tag":565,"props":936,"children":937},{"class":567,"line":568},[938,942,946,950,954,959,963,967,971,976,980,984,989,994,998,1003,1007],{"type":533,"tag":565,"props":939,"children":940},{"style":572},[941],{"type":538,"value":575},{"type":533,"tag":565,"props":943,"children":944},{"style":578},[945],{"type":538,"value":681},{"type":533,"tag":565,"props":947,"children":948},{"style":584},[949],{"type":538,"value":686},{"type":533,"tag":565,"props":951,"children":952},{"style":578},[953],{"type":538,"value":736},{"type":533,"tag":565,"props":955,"children":956},{"style":584},[957],{"type":538,"value":958},">",{"type":533,"tag":565,"props":960,"children":961},{"style":584},[962],{"type":538,"value":587},{"type":533,"tag":565,"props":964,"children":965},{"style":578},[966],{"type":538,"value":760},{"type":533,"tag":565,"props":968,"children":969},{"style":572},[970],{"type":538,"value":741},{"type":533,"tag":565,"props":972,"children":973},{"style":584},[974],{"type":538,"value":975}," (",{"type":533,"tag":565,"props":977,"children":978},{"style":572},[979],{"type":538,"value":840},{"type":533,"tag":565,"props":981,"children":982},{"style":578},[983],{"type":538,"value":845},{"type":533,"tag":565,"props":985,"children":986},{"style":584},[987],{"type":538,"value":988},")[]",{"type":533,"tag":565,"props":990,"children":991},{"style":572},[992],{"type":538,"value":993}," ?",{"type":533,"tag":565,"props":995,"children":996},{"style":578},[997],{"type":538,"value":845},{"type":533,"tag":565,"props":999,"children":1000},{"style":572},[1001],{"type":538,"value":1002}," :",{"type":533,"tag":565,"props":1004,"children":1005},{"style":578},[1006],{"type":538,"value":916},{"type":533,"tag":565,"props":1008,"children":1009},{"style":584},[1010],{"type":538,"value":921},{"type":533,"tag":1012,"props":1013,"children":1014},"style",{},[1015],{"type":538,"value":1016},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":527,"searchDepth":1018,"depth":1018,"links":1019},5,[1020,1021,1022],{"id":706,"depth":652,"text":709},{"id":777,"depth":652,"text":780},{"id":924,"depth":652,"text":927},"markdown","content:3.code-assessment:3.type-challeges:10.medium-tuple-to-union.md","content","3.code-assessment/3.type-challeges/10.medium-tuple-to-union.md","md",[1029,1031],{"_path":483,"title":482,"description":1030},"给 xhr 添加 hook，从而实现在各个阶段打印日志",{"_path":498,"title":497,"description":1032},"Pinia",1714096146800]