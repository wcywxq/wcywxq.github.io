[{"data":1,"prerenderedAt":1018},["Reactive",2],{"navigation":3,"/code-assessment/type-challeges/medium-tuple-to-union":509,"/code-assessment/type-challeges/medium-tuple-to-union-surround":1013},[4,269,298,477,485,494],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":476},"代码考核","/code-assessment",[302,376,469],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370,373],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":374,"_path":375},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":377,"_path":378,"children":379},"业务场景","/code-assessment/scene",[380,405,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463,466],{"title":381,"_path":382,"children":383},"Promise","/code-assessment/scene/promise",[384,387,390,393,396,399,402],{"title":385,"_path":386},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":388,"_path":389},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":391,"_path":392},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":394,"_path":395},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":397,"_path":398},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":400,"_path":401},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":403,"_path":404},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":406,"_path":407,"children":408},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[409,412],{"title":410,"_path":411},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":413,"_path":414},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":416,"_path":417},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":419,"_path":420},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":422,"_path":423},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":425,"_path":426},"倒计时","/code-assessment/scene/countdown",{"title":428,"_path":429},"日期格式化","/code-assessment/scene/date-format",{"title":431,"_path":432},"实现前端路由","/code-assessment/scene/frontend-route",{"title":434,"_path":435},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":437,"_path":438},"lodash.get","/code-assessment/scene/lodash-get",{"title":440,"_path":441},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":443,"_path":444},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":446,"_path":447},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":449,"_path":450},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":452,"_path":453},"随机数","/code-assessment/scene/random-number",{"title":455,"_path":456},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":458,"_path":459},"sku 算法实现","/code-assessment/scene/sku",{"title":461,"_path":462},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":464,"_path":465},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":467,"_path":468},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":470,"_path":471,"children":472},"Ts 类型挑战","/code-assessment/type-challeges",[473],{"title":474,"_path":475},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":478,"_path":479,"children":480,"icon":484},"项目","/project",[481],{"title":482,"_path":483},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":486,"_path":487,"children":488,"icon":493},"设计模式","/design-mode",[489,490],{"title":486,"_path":487},{"title":491,"_path":492},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":495,"_path":496,"children":497,"icon":508},"后端语言","/backend-languages",[498],{"title":499,"_path":500,"children":501},"Python","/backend-languages/python",[502,505],{"title":503,"_path":504},"基础","/backend-languages/python/base",{"title":506,"_path":507},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":475,"_dir":510,"_draft":511,"_partial":511,"_locale":512,"title":474,"description":513,"body":514,"_type":1008,"_id":1009,"_source":1010,"_file":1011,"_extension":1012},"type-challeges",false,"","实现泛型TupleToUnion\u003CT>，它返回元组所有值的合集。",{"type":515,"children":516,"toc":1002},"root",[517,534,539,688,695,760,766,907,913,996],{"type":518,"tag":519,"props":520,"children":521},"element","p",{},[522,525,532],{"type":523,"value":524},"text","实现泛型",{"type":518,"tag":526,"props":527,"children":529},"code",{"className":528},[],[530],{"type":523,"value":531},"TupleToUnion\u003CT>",{"type":523,"value":533},"，它返回元组所有值的合集。",{"type":518,"tag":519,"props":535,"children":536},{},[537],{"type":523,"value":538},"例如",{"type":518,"tag":540,"props":541,"children":545},"pre",{"className":542,"code":543,"language":544,"meta":512,"style":512},"language-ts shiki shiki-themes vitesse-light vitesse-light vitesse-dark","type Arr = [\"1\", \"2\", \"3\"];\n\ntype Test = TupleToUnion\u003CArr>; // expected to be '1' | '2' | '3'\n","ts",[546],{"type":518,"tag":526,"props":547,"children":548},{"__ignoreMap":512},[549,635,645],{"type":518,"tag":550,"props":551,"children":554},"span",{"class":552,"line":553},"line",1,[555,561,567,573,578,584,590,594,599,604,609,613,617,621,626,630],{"type":518,"tag":550,"props":556,"children":558},{"style":557},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[559],{"type":523,"value":560},"type",{"type":518,"tag":550,"props":562,"children":564},{"style":563},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[565],{"type":523,"value":566}," Arr",{"type":518,"tag":550,"props":568,"children":570},{"style":569},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[571],{"type":523,"value":572}," =",{"type":518,"tag":550,"props":574,"children":575},{"style":569},[576],{"type":523,"value":577}," [",{"type":518,"tag":550,"props":579,"children":581},{"style":580},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[582],{"type":523,"value":583},"\"",{"type":518,"tag":550,"props":585,"children":587},{"style":586},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[588],{"type":523,"value":589},"1",{"type":518,"tag":550,"props":591,"children":592},{"style":580},[593],{"type":523,"value":583},{"type":518,"tag":550,"props":595,"children":596},{"style":569},[597],{"type":523,"value":598},",",{"type":518,"tag":550,"props":600,"children":601},{"style":580},[602],{"type":523,"value":603}," \"",{"type":518,"tag":550,"props":605,"children":606},{"style":586},[607],{"type":523,"value":608},"2",{"type":518,"tag":550,"props":610,"children":611},{"style":580},[612],{"type":523,"value":583},{"type":518,"tag":550,"props":614,"children":615},{"style":569},[616],{"type":523,"value":598},{"type":518,"tag":550,"props":618,"children":619},{"style":580},[620],{"type":523,"value":603},{"type":518,"tag":550,"props":622,"children":623},{"style":586},[624],{"type":523,"value":625},"3",{"type":518,"tag":550,"props":627,"children":628},{"style":580},[629],{"type":523,"value":583},{"type":518,"tag":550,"props":631,"children":632},{"style":569},[633],{"type":523,"value":634},"];\n",{"type":518,"tag":550,"props":636,"children":638},{"class":552,"line":637},2,[639],{"type":518,"tag":550,"props":640,"children":642},{"emptyLinePlaceholder":641},true,[643],{"type":523,"value":644},"\n",{"type":518,"tag":550,"props":646,"children":648},{"class":552,"line":647},3,[649,653,658,662,667,672,677,682],{"type":518,"tag":550,"props":650,"children":651},{"style":557},[652],{"type":523,"value":560},{"type":518,"tag":550,"props":654,"children":655},{"style":563},[656],{"type":523,"value":657}," Test",{"type":518,"tag":550,"props":659,"children":660},{"style":569},[661],{"type":523,"value":572},{"type":518,"tag":550,"props":663,"children":664},{"style":563},[665],{"type":523,"value":666}," TupleToUnion",{"type":518,"tag":550,"props":668,"children":669},{"style":569},[670],{"type":523,"value":671},"\u003C",{"type":518,"tag":550,"props":673,"children":674},{"style":563},[675],{"type":523,"value":676},"Arr",{"type":518,"tag":550,"props":678,"children":679},{"style":569},[680],{"type":523,"value":681},">;",{"type":518,"tag":550,"props":683,"children":685},{"style":684},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[686],{"type":523,"value":687}," // expected to be '1' | '2' | '3'\n",{"type":518,"tag":689,"props":690,"children":692},"h2",{"id":691},"method-1",[693],{"type":523,"value":694},"method 1",{"type":518,"tag":540,"props":696,"children":698},{"className":542,"code":697,"language":544,"meta":512,"style":512},"type TupleToUnion\u003CT extends any[]> = T[number];\n",[699],{"type":518,"tag":526,"props":700,"children":701},{"__ignoreMap":512},[702],{"type":518,"tag":550,"props":703,"children":704},{"class":552,"line":553},[705,709,713,717,722,727,732,737,741,746,751,756],{"type":518,"tag":550,"props":706,"children":707},{"style":557},[708],{"type":523,"value":560},{"type":518,"tag":550,"props":710,"children":711},{"style":563},[712],{"type":523,"value":666},{"type":518,"tag":550,"props":714,"children":715},{"style":569},[716],{"type":523,"value":671},{"type":518,"tag":550,"props":718,"children":719},{"style":563},[720],{"type":523,"value":721},"T",{"type":518,"tag":550,"props":723,"children":724},{"style":557},[725],{"type":523,"value":726}," extends",{"type":518,"tag":550,"props":728,"children":729},{"style":563},[730],{"type":523,"value":731}," any",{"type":518,"tag":550,"props":733,"children":734},{"style":569},[735],{"type":523,"value":736},"[]>",{"type":518,"tag":550,"props":738,"children":739},{"style":569},[740],{"type":523,"value":572},{"type":518,"tag":550,"props":742,"children":743},{"style":563},[744],{"type":523,"value":745}," T",{"type":518,"tag":550,"props":747,"children":748},{"style":569},[749],{"type":523,"value":750},"[",{"type":518,"tag":550,"props":752,"children":753},{"style":563},[754],{"type":523,"value":755},"number",{"type":518,"tag":550,"props":757,"children":758},{"style":569},[759],{"type":523,"value":634},{"type":518,"tag":689,"props":761,"children":763},{"id":762},"method-2",[764],{"type":523,"value":765},"method 2",{"type":518,"tag":540,"props":767,"children":769},{"className":542,"code":768,"language":544,"meta":512,"style":512},"type TupleToUnion\u003CT extends unknown[]> = T extends [infer P, ...infer R]\n  ? P | TupleToUnion\u003CR>\n  : never;\n",[770],{"type":518,"tag":526,"props":771,"children":772},{"__ignoreMap":512},[773,854,889],{"type":518,"tag":550,"props":774,"children":775},{"class":552,"line":553},[776,780,784,788,792,796,801,805,809,813,817,821,826,831,835,840,844,849],{"type":518,"tag":550,"props":777,"children":778},{"style":557},[779],{"type":523,"value":560},{"type":518,"tag":550,"props":781,"children":782},{"style":563},[783],{"type":523,"value":666},{"type":518,"tag":550,"props":785,"children":786},{"style":569},[787],{"type":523,"value":671},{"type":518,"tag":550,"props":789,"children":790},{"style":563},[791],{"type":523,"value":721},{"type":518,"tag":550,"props":793,"children":794},{"style":557},[795],{"type":523,"value":726},{"type":518,"tag":550,"props":797,"children":798},{"style":563},[799],{"type":523,"value":800}," unknown",{"type":518,"tag":550,"props":802,"children":803},{"style":569},[804],{"type":523,"value":736},{"type":518,"tag":550,"props":806,"children":807},{"style":569},[808],{"type":523,"value":572},{"type":518,"tag":550,"props":810,"children":811},{"style":563},[812],{"type":523,"value":745},{"type":518,"tag":550,"props":814,"children":815},{"style":557},[816],{"type":523,"value":726},{"type":518,"tag":550,"props":818,"children":819},{"style":569},[820],{"type":523,"value":577},{"type":518,"tag":550,"props":822,"children":823},{"style":557},[824],{"type":523,"value":825},"infer",{"type":518,"tag":550,"props":827,"children":828},{"style":563},[829],{"type":523,"value":830}," P",{"type":518,"tag":550,"props":832,"children":833},{"style":569},[834],{"type":523,"value":598},{"type":518,"tag":550,"props":836,"children":837},{"style":569},[838],{"type":523,"value":839}," ...",{"type":518,"tag":550,"props":841,"children":842},{"style":557},[843],{"type":523,"value":825},{"type":518,"tag":550,"props":845,"children":846},{"style":563},[847],{"type":523,"value":848}," R",{"type":518,"tag":550,"props":850,"children":851},{"style":569},[852],{"type":523,"value":853},"]\n",{"type":518,"tag":550,"props":855,"children":856},{"class":552,"line":637},[857,862,866,871,875,879,884],{"type":518,"tag":550,"props":858,"children":859},{"style":557},[860],{"type":523,"value":861},"  ?",{"type":518,"tag":550,"props":863,"children":864},{"style":563},[865],{"type":523,"value":830},{"type":518,"tag":550,"props":867,"children":868},{"style":569},[869],{"type":523,"value":870}," |",{"type":518,"tag":550,"props":872,"children":873},{"style":563},[874],{"type":523,"value":666},{"type":518,"tag":550,"props":876,"children":877},{"style":569},[878],{"type":523,"value":671},{"type":518,"tag":550,"props":880,"children":881},{"style":563},[882],{"type":523,"value":883},"R",{"type":518,"tag":550,"props":885,"children":886},{"style":569},[887],{"type":523,"value":888},">\n",{"type":518,"tag":550,"props":890,"children":891},{"class":552,"line":647},[892,897,902],{"type":518,"tag":550,"props":893,"children":894},{"style":557},[895],{"type":523,"value":896},"  :",{"type":518,"tag":550,"props":898,"children":899},{"style":563},[900],{"type":523,"value":901}," never",{"type":518,"tag":550,"props":903,"children":904},{"style":569},[905],{"type":523,"value":906},";\n",{"type":518,"tag":689,"props":908,"children":910},{"id":909},"method-3",[911],{"type":523,"value":912},"method 3",{"type":518,"tag":540,"props":914,"children":916},{"className":542,"code":915,"language":544,"meta":512,"style":512},"type TupleToUnion\u003CT> = T extends (infer P)[] ? P : never;\n",[917],{"type":518,"tag":526,"props":918,"children":919},{"__ignoreMap":512},[920],{"type":518,"tag":550,"props":921,"children":922},{"class":552,"line":553},[923,927,931,935,939,944,948,952,956,961,965,969,974,979,983,988,992],{"type":518,"tag":550,"props":924,"children":925},{"style":557},[926],{"type":523,"value":560},{"type":518,"tag":550,"props":928,"children":929},{"style":563},[930],{"type":523,"value":666},{"type":518,"tag":550,"props":932,"children":933},{"style":569},[934],{"type":523,"value":671},{"type":518,"tag":550,"props":936,"children":937},{"style":563},[938],{"type":523,"value":721},{"type":518,"tag":550,"props":940,"children":941},{"style":569},[942],{"type":523,"value":943},">",{"type":518,"tag":550,"props":945,"children":946},{"style":569},[947],{"type":523,"value":572},{"type":518,"tag":550,"props":949,"children":950},{"style":563},[951],{"type":523,"value":745},{"type":518,"tag":550,"props":953,"children":954},{"style":557},[955],{"type":523,"value":726},{"type":518,"tag":550,"props":957,"children":958},{"style":569},[959],{"type":523,"value":960}," (",{"type":518,"tag":550,"props":962,"children":963},{"style":557},[964],{"type":523,"value":825},{"type":518,"tag":550,"props":966,"children":967},{"style":563},[968],{"type":523,"value":830},{"type":518,"tag":550,"props":970,"children":971},{"style":569},[972],{"type":523,"value":973},")[]",{"type":518,"tag":550,"props":975,"children":976},{"style":557},[977],{"type":523,"value":978}," ?",{"type":518,"tag":550,"props":980,"children":981},{"style":563},[982],{"type":523,"value":830},{"type":518,"tag":550,"props":984,"children":985},{"style":557},[986],{"type":523,"value":987}," :",{"type":518,"tag":550,"props":989,"children":990},{"style":563},[991],{"type":523,"value":901},{"type":518,"tag":550,"props":993,"children":994},{"style":569},[995],{"type":523,"value":906},{"type":518,"tag":997,"props":998,"children":999},"style",{},[1000],{"type":523,"value":1001},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":512,"searchDepth":1003,"depth":1003,"links":1004},5,[1005,1006,1007],{"id":691,"depth":637,"text":694},{"id":762,"depth":637,"text":765},{"id":909,"depth":637,"text":912},"markdown","content:3.code-assessment:3.type-challeges:10.medium-tuple-to-union.md","content","3.code-assessment/3.type-challeges/10.medium-tuple-to-union.md","md",[1014,1016],{"_path":468,"title":467,"description":1015},"给 xhr 添加 hook，从而实现在各个阶段打印日志",{"_path":483,"title":482,"description":1017},"Pinia",1714059007918]