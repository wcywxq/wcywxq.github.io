[{"data":1,"prerenderedAt":987},["Reactive",2],{"navigation":3,"/code-assessment/type-challeges/medium-tuple-to-union":478,"/code-assessment/type-challeges/medium-tuple-to-union-surround":982},[4,269,298,446,454,463],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":445},"代码考核","/code-assessment",[302,351,438],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/code-assessment/scene",[355,377,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432,435],{"title":356,"_path":357,"children":358},"Promise","/code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[381,384],{"title":382,"_path":383},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":385,"_path":386},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":388,"_path":389},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":391,"_path":392},"倒计时","/code-assessment/scene/countdown",{"title":394,"_path":395},"日期格式化","/code-assessment/scene/date-format",{"title":397,"_path":398},"实现前端路由","/code-assessment/scene/frontend-route",{"title":400,"_path":401},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":403,"_path":404},"lodash.get","/code-assessment/scene/lodash-get",{"title":406,"_path":407},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":409,"_path":410},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":412,"_path":413},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":415,"_path":416},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":418,"_path":419},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":421,"_path":422},"随机数","/code-assessment/scene/random-number",{"title":424,"_path":425},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":427,"_path":428},"sku 算法实现","/code-assessment/scene/sku",{"title":430,"_path":431},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":433,"_path":434},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":436,"_path":437},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":439,"_path":440,"children":441},"Ts 类型挑战","/code-assessment/type-challeges",[442],{"title":443,"_path":444},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":447,"_path":448,"children":449,"icon":453},"项目","/project",[450],{"title":451,"_path":452},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":455,"_path":456,"children":457,"icon":462},"设计模式","/design-mode",[458,459],{"title":455,"_path":456},{"title":460,"_path":461},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":464,"_path":465,"children":466,"icon":477},"后端语言","/backend-languages",[467],{"title":468,"_path":469,"children":470},"Python","/backend-languages/python",[471,474],{"title":472,"_path":473},"基础","/backend-languages/python/base",{"title":475,"_path":476},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":444,"_dir":479,"_draft":480,"_partial":480,"_locale":481,"title":443,"description":482,"body":483,"_type":977,"_id":978,"_source":979,"_file":980,"_extension":981},"type-challeges",false,"","实现泛型TupleToUnion\u003CT>，它返回元组所有值的合集。",{"type":484,"children":485,"toc":971},"root",[486,503,508,657,664,729,735,876,882,965],{"type":487,"tag":488,"props":489,"children":490},"element","p",{},[491,494,501],{"type":492,"value":493},"text","实现泛型",{"type":487,"tag":495,"props":496,"children":498},"code",{"className":497},[],[499],{"type":492,"value":500},"TupleToUnion\u003CT>",{"type":492,"value":502},"，它返回元组所有值的合集。",{"type":487,"tag":488,"props":504,"children":505},{},[506],{"type":492,"value":507},"例如",{"type":487,"tag":509,"props":510,"children":514},"pre",{"className":511,"code":512,"language":513,"meta":481,"style":481},"language-ts shiki shiki-themes vitesse-light vitesse-light vitesse-dark","type Arr = [\"1\", \"2\", \"3\"];\n\ntype Test = TupleToUnion\u003CArr>; // expected to be '1' | '2' | '3'\n","ts",[515],{"type":487,"tag":495,"props":516,"children":517},{"__ignoreMap":481},[518,604,614],{"type":487,"tag":519,"props":520,"children":523},"span",{"class":521,"line":522},"line",1,[524,530,536,542,547,553,559,563,568,573,578,582,586,590,595,599],{"type":487,"tag":519,"props":525,"children":527},{"style":526},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[528],{"type":492,"value":529},"type",{"type":487,"tag":519,"props":531,"children":533},{"style":532},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[534],{"type":492,"value":535}," Arr",{"type":487,"tag":519,"props":537,"children":539},{"style":538},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[540],{"type":492,"value":541}," =",{"type":487,"tag":519,"props":543,"children":544},{"style":538},[545],{"type":492,"value":546}," [",{"type":487,"tag":519,"props":548,"children":550},{"style":549},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[551],{"type":492,"value":552},"\"",{"type":487,"tag":519,"props":554,"children":556},{"style":555},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[557],{"type":492,"value":558},"1",{"type":487,"tag":519,"props":560,"children":561},{"style":549},[562],{"type":492,"value":552},{"type":487,"tag":519,"props":564,"children":565},{"style":538},[566],{"type":492,"value":567},",",{"type":487,"tag":519,"props":569,"children":570},{"style":549},[571],{"type":492,"value":572}," \"",{"type":487,"tag":519,"props":574,"children":575},{"style":555},[576],{"type":492,"value":577},"2",{"type":487,"tag":519,"props":579,"children":580},{"style":549},[581],{"type":492,"value":552},{"type":487,"tag":519,"props":583,"children":584},{"style":538},[585],{"type":492,"value":567},{"type":487,"tag":519,"props":587,"children":588},{"style":549},[589],{"type":492,"value":572},{"type":487,"tag":519,"props":591,"children":592},{"style":555},[593],{"type":492,"value":594},"3",{"type":487,"tag":519,"props":596,"children":597},{"style":549},[598],{"type":492,"value":552},{"type":487,"tag":519,"props":600,"children":601},{"style":538},[602],{"type":492,"value":603},"];\n",{"type":487,"tag":519,"props":605,"children":607},{"class":521,"line":606},2,[608],{"type":487,"tag":519,"props":609,"children":611},{"emptyLinePlaceholder":610},true,[612],{"type":492,"value":613},"\n",{"type":487,"tag":519,"props":615,"children":617},{"class":521,"line":616},3,[618,622,627,631,636,641,646,651],{"type":487,"tag":519,"props":619,"children":620},{"style":526},[621],{"type":492,"value":529},{"type":487,"tag":519,"props":623,"children":624},{"style":532},[625],{"type":492,"value":626}," Test",{"type":487,"tag":519,"props":628,"children":629},{"style":538},[630],{"type":492,"value":541},{"type":487,"tag":519,"props":632,"children":633},{"style":532},[634],{"type":492,"value":635}," TupleToUnion",{"type":487,"tag":519,"props":637,"children":638},{"style":538},[639],{"type":492,"value":640},"\u003C",{"type":487,"tag":519,"props":642,"children":643},{"style":532},[644],{"type":492,"value":645},"Arr",{"type":487,"tag":519,"props":647,"children":648},{"style":538},[649],{"type":492,"value":650},">;",{"type":487,"tag":519,"props":652,"children":654},{"style":653},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[655],{"type":492,"value":656}," // expected to be '1' | '2' | '3'\n",{"type":487,"tag":658,"props":659,"children":661},"h2",{"id":660},"method-1",[662],{"type":492,"value":663},"method 1",{"type":487,"tag":509,"props":665,"children":667},{"className":511,"code":666,"language":513,"meta":481,"style":481},"type TupleToUnion\u003CT extends any[]> = T[number];\n",[668],{"type":487,"tag":495,"props":669,"children":670},{"__ignoreMap":481},[671],{"type":487,"tag":519,"props":672,"children":673},{"class":521,"line":522},[674,678,682,686,691,696,701,706,710,715,720,725],{"type":487,"tag":519,"props":675,"children":676},{"style":526},[677],{"type":492,"value":529},{"type":487,"tag":519,"props":679,"children":680},{"style":532},[681],{"type":492,"value":635},{"type":487,"tag":519,"props":683,"children":684},{"style":538},[685],{"type":492,"value":640},{"type":487,"tag":519,"props":687,"children":688},{"style":532},[689],{"type":492,"value":690},"T",{"type":487,"tag":519,"props":692,"children":693},{"style":526},[694],{"type":492,"value":695}," extends",{"type":487,"tag":519,"props":697,"children":698},{"style":532},[699],{"type":492,"value":700}," any",{"type":487,"tag":519,"props":702,"children":703},{"style":538},[704],{"type":492,"value":705},"[]>",{"type":487,"tag":519,"props":707,"children":708},{"style":538},[709],{"type":492,"value":541},{"type":487,"tag":519,"props":711,"children":712},{"style":532},[713],{"type":492,"value":714}," T",{"type":487,"tag":519,"props":716,"children":717},{"style":538},[718],{"type":492,"value":719},"[",{"type":487,"tag":519,"props":721,"children":722},{"style":532},[723],{"type":492,"value":724},"number",{"type":487,"tag":519,"props":726,"children":727},{"style":538},[728],{"type":492,"value":603},{"type":487,"tag":658,"props":730,"children":732},{"id":731},"method-2",[733],{"type":492,"value":734},"method 2",{"type":487,"tag":509,"props":736,"children":738},{"className":511,"code":737,"language":513,"meta":481,"style":481},"type TupleToUnion\u003CT extends unknown[]> = T extends [infer P, ...infer R]\n  ? P | TupleToUnion\u003CR>\n  : never;\n",[739],{"type":487,"tag":495,"props":740,"children":741},{"__ignoreMap":481},[742,823,858],{"type":487,"tag":519,"props":743,"children":744},{"class":521,"line":522},[745,749,753,757,761,765,770,774,778,782,786,790,795,800,804,809,813,818],{"type":487,"tag":519,"props":746,"children":747},{"style":526},[748],{"type":492,"value":529},{"type":487,"tag":519,"props":750,"children":751},{"style":532},[752],{"type":492,"value":635},{"type":487,"tag":519,"props":754,"children":755},{"style":538},[756],{"type":492,"value":640},{"type":487,"tag":519,"props":758,"children":759},{"style":532},[760],{"type":492,"value":690},{"type":487,"tag":519,"props":762,"children":763},{"style":526},[764],{"type":492,"value":695},{"type":487,"tag":519,"props":766,"children":767},{"style":532},[768],{"type":492,"value":769}," unknown",{"type":487,"tag":519,"props":771,"children":772},{"style":538},[773],{"type":492,"value":705},{"type":487,"tag":519,"props":775,"children":776},{"style":538},[777],{"type":492,"value":541},{"type":487,"tag":519,"props":779,"children":780},{"style":532},[781],{"type":492,"value":714},{"type":487,"tag":519,"props":783,"children":784},{"style":526},[785],{"type":492,"value":695},{"type":487,"tag":519,"props":787,"children":788},{"style":538},[789],{"type":492,"value":546},{"type":487,"tag":519,"props":791,"children":792},{"style":526},[793],{"type":492,"value":794},"infer",{"type":487,"tag":519,"props":796,"children":797},{"style":532},[798],{"type":492,"value":799}," P",{"type":487,"tag":519,"props":801,"children":802},{"style":538},[803],{"type":492,"value":567},{"type":487,"tag":519,"props":805,"children":806},{"style":538},[807],{"type":492,"value":808}," ...",{"type":487,"tag":519,"props":810,"children":811},{"style":526},[812],{"type":492,"value":794},{"type":487,"tag":519,"props":814,"children":815},{"style":532},[816],{"type":492,"value":817}," R",{"type":487,"tag":519,"props":819,"children":820},{"style":538},[821],{"type":492,"value":822},"]\n",{"type":487,"tag":519,"props":824,"children":825},{"class":521,"line":606},[826,831,835,840,844,848,853],{"type":487,"tag":519,"props":827,"children":828},{"style":526},[829],{"type":492,"value":830},"  ?",{"type":487,"tag":519,"props":832,"children":833},{"style":532},[834],{"type":492,"value":799},{"type":487,"tag":519,"props":836,"children":837},{"style":538},[838],{"type":492,"value":839}," |",{"type":487,"tag":519,"props":841,"children":842},{"style":532},[843],{"type":492,"value":635},{"type":487,"tag":519,"props":845,"children":846},{"style":538},[847],{"type":492,"value":640},{"type":487,"tag":519,"props":849,"children":850},{"style":532},[851],{"type":492,"value":852},"R",{"type":487,"tag":519,"props":854,"children":855},{"style":538},[856],{"type":492,"value":857},">\n",{"type":487,"tag":519,"props":859,"children":860},{"class":521,"line":616},[861,866,871],{"type":487,"tag":519,"props":862,"children":863},{"style":526},[864],{"type":492,"value":865},"  :",{"type":487,"tag":519,"props":867,"children":868},{"style":532},[869],{"type":492,"value":870}," never",{"type":487,"tag":519,"props":872,"children":873},{"style":538},[874],{"type":492,"value":875},";\n",{"type":487,"tag":658,"props":877,"children":879},{"id":878},"method-3",[880],{"type":492,"value":881},"method 3",{"type":487,"tag":509,"props":883,"children":885},{"className":511,"code":884,"language":513,"meta":481,"style":481},"type TupleToUnion\u003CT> = T extends (infer P)[] ? P : never;\n",[886],{"type":487,"tag":495,"props":887,"children":888},{"__ignoreMap":481},[889],{"type":487,"tag":519,"props":890,"children":891},{"class":521,"line":522},[892,896,900,904,908,913,917,921,925,930,934,938,943,948,952,957,961],{"type":487,"tag":519,"props":893,"children":894},{"style":526},[895],{"type":492,"value":529},{"type":487,"tag":519,"props":897,"children":898},{"style":532},[899],{"type":492,"value":635},{"type":487,"tag":519,"props":901,"children":902},{"style":538},[903],{"type":492,"value":640},{"type":487,"tag":519,"props":905,"children":906},{"style":532},[907],{"type":492,"value":690},{"type":487,"tag":519,"props":909,"children":910},{"style":538},[911],{"type":492,"value":912},">",{"type":487,"tag":519,"props":914,"children":915},{"style":538},[916],{"type":492,"value":541},{"type":487,"tag":519,"props":918,"children":919},{"style":532},[920],{"type":492,"value":714},{"type":487,"tag":519,"props":922,"children":923},{"style":526},[924],{"type":492,"value":695},{"type":487,"tag":519,"props":926,"children":927},{"style":538},[928],{"type":492,"value":929}," (",{"type":487,"tag":519,"props":931,"children":932},{"style":526},[933],{"type":492,"value":794},{"type":487,"tag":519,"props":935,"children":936},{"style":532},[937],{"type":492,"value":799},{"type":487,"tag":519,"props":939,"children":940},{"style":538},[941],{"type":492,"value":942},")[]",{"type":487,"tag":519,"props":944,"children":945},{"style":526},[946],{"type":492,"value":947}," ?",{"type":487,"tag":519,"props":949,"children":950},{"style":532},[951],{"type":492,"value":799},{"type":487,"tag":519,"props":953,"children":954},{"style":526},[955],{"type":492,"value":956}," :",{"type":487,"tag":519,"props":958,"children":959},{"style":532},[960],{"type":492,"value":870},{"type":487,"tag":519,"props":962,"children":963},{"style":538},[964],{"type":492,"value":875},{"type":487,"tag":966,"props":967,"children":968},"style",{},[969],{"type":492,"value":970},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":481,"searchDepth":972,"depth":972,"links":973},5,[974,975,976],{"id":660,"depth":606,"text":663},{"id":731,"depth":606,"text":734},{"id":878,"depth":606,"text":881},"markdown","content:3.code-assessment:3.type-challeges:10.medium-tuple-to-union.md","content","3.code-assessment/3.type-challeges/10.medium-tuple-to-union.md","md",[983,985],{"_path":437,"title":436,"description":984},"给 xhr 添加 hook，从而实现在各个阶段打印日志",{"_path":452,"title":451,"description":986},"Pinia",1714046228576]