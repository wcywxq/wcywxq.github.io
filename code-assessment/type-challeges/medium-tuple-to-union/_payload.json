[{"data":1,"prerenderedAt":1009},["Reactive",2],{"navigation":3,"/code-assessment/type-challeges/medium-tuple-to-union":500,"/code-assessment/type-challeges/medium-tuple-to-union-surround":1004},[4,269,298,468,476,485],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":467},"代码考核","/code-assessment",[302,367,460],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369,"children":370},"业务场景","/code-assessment/scene",[371,396,406,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457],{"title":372,"_path":373,"children":374},"Promise","/code-assessment/scene/promise",[375,378,381,384,387,390,393],{"title":376,"_path":377},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":379,"_path":380},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":382,"_path":383},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":385,"_path":386},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":388,"_path":389},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":391,"_path":392},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":394,"_path":395},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":397,"_path":398,"children":399},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[400,403],{"title":401,"_path":402},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":404,"_path":405},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":407,"_path":408},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":410,"_path":411},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":413,"_path":414},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":416,"_path":417},"倒计时","/code-assessment/scene/countdown",{"title":419,"_path":420},"日期格式化","/code-assessment/scene/date-format",{"title":422,"_path":423},"实现前端路由","/code-assessment/scene/frontend-route",{"title":425,"_path":426},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":428,"_path":429},"lodash.get","/code-assessment/scene/lodash-get",{"title":431,"_path":432},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":434,"_path":435},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":437,"_path":438},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":440,"_path":441},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":443,"_path":444},"随机数","/code-assessment/scene/random-number",{"title":446,"_path":447},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":449,"_path":450},"sku 算法实现","/code-assessment/scene/sku",{"title":452,"_path":453},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":455,"_path":456},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":458,"_path":459},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":461,"_path":462,"children":463},"Ts 类型挑战","/code-assessment/type-challeges",[464],{"title":465,"_path":466},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":469,"_path":470,"children":471,"icon":475},"项目","/project",[472],{"title":473,"_path":474},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":477,"_path":478,"children":479,"icon":484},"设计模式","/design-mode",[480,481],{"title":477,"_path":478},{"title":482,"_path":483},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":486,"_path":487,"children":488,"icon":499},"后端语言","/backend-languages",[489],{"title":490,"_path":491,"children":492},"Python","/backend-languages/python",[493,496],{"title":494,"_path":495},"基础","/backend-languages/python/base",{"title":497,"_path":498},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":466,"_dir":501,"_draft":502,"_partial":502,"_locale":503,"title":465,"description":504,"body":505,"_type":999,"_id":1000,"_source":1001,"_file":1002,"_extension":1003},"type-challeges",false,"","实现泛型TupleToUnion\u003CT>，它返回元组所有值的合集。",{"type":506,"children":507,"toc":993},"root",[508,525,530,679,686,751,757,898,904,987],{"type":509,"tag":510,"props":511,"children":512},"element","p",{},[513,516,523],{"type":514,"value":515},"text","实现泛型",{"type":509,"tag":517,"props":518,"children":520},"code",{"className":519},[],[521],{"type":514,"value":522},"TupleToUnion\u003CT>",{"type":514,"value":524},"，它返回元组所有值的合集。",{"type":509,"tag":510,"props":526,"children":527},{},[528],{"type":514,"value":529},"例如",{"type":509,"tag":531,"props":532,"children":536},"pre",{"className":533,"code":534,"language":535,"meta":503,"style":503},"language-ts shiki shiki-themes vitesse-light vitesse-light vitesse-dark","type Arr = [\"1\", \"2\", \"3\"];\n\ntype Test = TupleToUnion\u003CArr>; // expected to be '1' | '2' | '3'\n","ts",[537],{"type":509,"tag":517,"props":538,"children":539},{"__ignoreMap":503},[540,626,636],{"type":509,"tag":541,"props":542,"children":545},"span",{"class":543,"line":544},"line",1,[546,552,558,564,569,575,581,585,590,595,600,604,608,612,617,621],{"type":509,"tag":541,"props":547,"children":549},{"style":548},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[550],{"type":514,"value":551},"type",{"type":509,"tag":541,"props":553,"children":555},{"style":554},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[556],{"type":514,"value":557}," Arr",{"type":509,"tag":541,"props":559,"children":561},{"style":560},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[562],{"type":514,"value":563}," =",{"type":509,"tag":541,"props":565,"children":566},{"style":560},[567],{"type":514,"value":568}," [",{"type":509,"tag":541,"props":570,"children":572},{"style":571},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[573],{"type":514,"value":574},"\"",{"type":509,"tag":541,"props":576,"children":578},{"style":577},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[579],{"type":514,"value":580},"1",{"type":509,"tag":541,"props":582,"children":583},{"style":571},[584],{"type":514,"value":574},{"type":509,"tag":541,"props":586,"children":587},{"style":560},[588],{"type":514,"value":589},",",{"type":509,"tag":541,"props":591,"children":592},{"style":571},[593],{"type":514,"value":594}," \"",{"type":509,"tag":541,"props":596,"children":597},{"style":577},[598],{"type":514,"value":599},"2",{"type":509,"tag":541,"props":601,"children":602},{"style":571},[603],{"type":514,"value":574},{"type":509,"tag":541,"props":605,"children":606},{"style":560},[607],{"type":514,"value":589},{"type":509,"tag":541,"props":609,"children":610},{"style":571},[611],{"type":514,"value":594},{"type":509,"tag":541,"props":613,"children":614},{"style":577},[615],{"type":514,"value":616},"3",{"type":509,"tag":541,"props":618,"children":619},{"style":571},[620],{"type":514,"value":574},{"type":509,"tag":541,"props":622,"children":623},{"style":560},[624],{"type":514,"value":625},"];\n",{"type":509,"tag":541,"props":627,"children":629},{"class":543,"line":628},2,[630],{"type":509,"tag":541,"props":631,"children":633},{"emptyLinePlaceholder":632},true,[634],{"type":514,"value":635},"\n",{"type":509,"tag":541,"props":637,"children":639},{"class":543,"line":638},3,[640,644,649,653,658,663,668,673],{"type":509,"tag":541,"props":641,"children":642},{"style":548},[643],{"type":514,"value":551},{"type":509,"tag":541,"props":645,"children":646},{"style":554},[647],{"type":514,"value":648}," Test",{"type":509,"tag":541,"props":650,"children":651},{"style":560},[652],{"type":514,"value":563},{"type":509,"tag":541,"props":654,"children":655},{"style":554},[656],{"type":514,"value":657}," TupleToUnion",{"type":509,"tag":541,"props":659,"children":660},{"style":560},[661],{"type":514,"value":662},"\u003C",{"type":509,"tag":541,"props":664,"children":665},{"style":554},[666],{"type":514,"value":667},"Arr",{"type":509,"tag":541,"props":669,"children":670},{"style":560},[671],{"type":514,"value":672},">;",{"type":509,"tag":541,"props":674,"children":676},{"style":675},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[677],{"type":514,"value":678}," // expected to be '1' | '2' | '3'\n",{"type":509,"tag":680,"props":681,"children":683},"h2",{"id":682},"method-1",[684],{"type":514,"value":685},"method 1",{"type":509,"tag":531,"props":687,"children":689},{"className":533,"code":688,"language":535,"meta":503,"style":503},"type TupleToUnion\u003CT extends any[]> = T[number];\n",[690],{"type":509,"tag":517,"props":691,"children":692},{"__ignoreMap":503},[693],{"type":509,"tag":541,"props":694,"children":695},{"class":543,"line":544},[696,700,704,708,713,718,723,728,732,737,742,747],{"type":509,"tag":541,"props":697,"children":698},{"style":548},[699],{"type":514,"value":551},{"type":509,"tag":541,"props":701,"children":702},{"style":554},[703],{"type":514,"value":657},{"type":509,"tag":541,"props":705,"children":706},{"style":560},[707],{"type":514,"value":662},{"type":509,"tag":541,"props":709,"children":710},{"style":554},[711],{"type":514,"value":712},"T",{"type":509,"tag":541,"props":714,"children":715},{"style":548},[716],{"type":514,"value":717}," extends",{"type":509,"tag":541,"props":719,"children":720},{"style":554},[721],{"type":514,"value":722}," any",{"type":509,"tag":541,"props":724,"children":725},{"style":560},[726],{"type":514,"value":727},"[]>",{"type":509,"tag":541,"props":729,"children":730},{"style":560},[731],{"type":514,"value":563},{"type":509,"tag":541,"props":733,"children":734},{"style":554},[735],{"type":514,"value":736}," T",{"type":509,"tag":541,"props":738,"children":739},{"style":560},[740],{"type":514,"value":741},"[",{"type":509,"tag":541,"props":743,"children":744},{"style":554},[745],{"type":514,"value":746},"number",{"type":509,"tag":541,"props":748,"children":749},{"style":560},[750],{"type":514,"value":625},{"type":509,"tag":680,"props":752,"children":754},{"id":753},"method-2",[755],{"type":514,"value":756},"method 2",{"type":509,"tag":531,"props":758,"children":760},{"className":533,"code":759,"language":535,"meta":503,"style":503},"type TupleToUnion\u003CT extends unknown[]> = T extends [infer P, ...infer R]\n  ? P | TupleToUnion\u003CR>\n  : never;\n",[761],{"type":509,"tag":517,"props":762,"children":763},{"__ignoreMap":503},[764,845,880],{"type":509,"tag":541,"props":765,"children":766},{"class":543,"line":544},[767,771,775,779,783,787,792,796,800,804,808,812,817,822,826,831,835,840],{"type":509,"tag":541,"props":768,"children":769},{"style":548},[770],{"type":514,"value":551},{"type":509,"tag":541,"props":772,"children":773},{"style":554},[774],{"type":514,"value":657},{"type":509,"tag":541,"props":776,"children":777},{"style":560},[778],{"type":514,"value":662},{"type":509,"tag":541,"props":780,"children":781},{"style":554},[782],{"type":514,"value":712},{"type":509,"tag":541,"props":784,"children":785},{"style":548},[786],{"type":514,"value":717},{"type":509,"tag":541,"props":788,"children":789},{"style":554},[790],{"type":514,"value":791}," unknown",{"type":509,"tag":541,"props":793,"children":794},{"style":560},[795],{"type":514,"value":727},{"type":509,"tag":541,"props":797,"children":798},{"style":560},[799],{"type":514,"value":563},{"type":509,"tag":541,"props":801,"children":802},{"style":554},[803],{"type":514,"value":736},{"type":509,"tag":541,"props":805,"children":806},{"style":548},[807],{"type":514,"value":717},{"type":509,"tag":541,"props":809,"children":810},{"style":560},[811],{"type":514,"value":568},{"type":509,"tag":541,"props":813,"children":814},{"style":548},[815],{"type":514,"value":816},"infer",{"type":509,"tag":541,"props":818,"children":819},{"style":554},[820],{"type":514,"value":821}," P",{"type":509,"tag":541,"props":823,"children":824},{"style":560},[825],{"type":514,"value":589},{"type":509,"tag":541,"props":827,"children":828},{"style":560},[829],{"type":514,"value":830}," ...",{"type":509,"tag":541,"props":832,"children":833},{"style":548},[834],{"type":514,"value":816},{"type":509,"tag":541,"props":836,"children":837},{"style":554},[838],{"type":514,"value":839}," R",{"type":509,"tag":541,"props":841,"children":842},{"style":560},[843],{"type":514,"value":844},"]\n",{"type":509,"tag":541,"props":846,"children":847},{"class":543,"line":628},[848,853,857,862,866,870,875],{"type":509,"tag":541,"props":849,"children":850},{"style":548},[851],{"type":514,"value":852},"  ?",{"type":509,"tag":541,"props":854,"children":855},{"style":554},[856],{"type":514,"value":821},{"type":509,"tag":541,"props":858,"children":859},{"style":560},[860],{"type":514,"value":861}," |",{"type":509,"tag":541,"props":863,"children":864},{"style":554},[865],{"type":514,"value":657},{"type":509,"tag":541,"props":867,"children":868},{"style":560},[869],{"type":514,"value":662},{"type":509,"tag":541,"props":871,"children":872},{"style":554},[873],{"type":514,"value":874},"R",{"type":509,"tag":541,"props":876,"children":877},{"style":560},[878],{"type":514,"value":879},">\n",{"type":509,"tag":541,"props":881,"children":882},{"class":543,"line":638},[883,888,893],{"type":509,"tag":541,"props":884,"children":885},{"style":548},[886],{"type":514,"value":887},"  :",{"type":509,"tag":541,"props":889,"children":890},{"style":554},[891],{"type":514,"value":892}," never",{"type":509,"tag":541,"props":894,"children":895},{"style":560},[896],{"type":514,"value":897},";\n",{"type":509,"tag":680,"props":899,"children":901},{"id":900},"method-3",[902],{"type":514,"value":903},"method 3",{"type":509,"tag":531,"props":905,"children":907},{"className":533,"code":906,"language":535,"meta":503,"style":503},"type TupleToUnion\u003CT> = T extends (infer P)[] ? P : never;\n",[908],{"type":509,"tag":517,"props":909,"children":910},{"__ignoreMap":503},[911],{"type":509,"tag":541,"props":912,"children":913},{"class":543,"line":544},[914,918,922,926,930,935,939,943,947,952,956,960,965,970,974,979,983],{"type":509,"tag":541,"props":915,"children":916},{"style":548},[917],{"type":514,"value":551},{"type":509,"tag":541,"props":919,"children":920},{"style":554},[921],{"type":514,"value":657},{"type":509,"tag":541,"props":923,"children":924},{"style":560},[925],{"type":514,"value":662},{"type":509,"tag":541,"props":927,"children":928},{"style":554},[929],{"type":514,"value":712},{"type":509,"tag":541,"props":931,"children":932},{"style":560},[933],{"type":514,"value":934},">",{"type":509,"tag":541,"props":936,"children":937},{"style":560},[938],{"type":514,"value":563},{"type":509,"tag":541,"props":940,"children":941},{"style":554},[942],{"type":514,"value":736},{"type":509,"tag":541,"props":944,"children":945},{"style":548},[946],{"type":514,"value":717},{"type":509,"tag":541,"props":948,"children":949},{"style":560},[950],{"type":514,"value":951}," (",{"type":509,"tag":541,"props":953,"children":954},{"style":548},[955],{"type":514,"value":816},{"type":509,"tag":541,"props":957,"children":958},{"style":554},[959],{"type":514,"value":821},{"type":509,"tag":541,"props":961,"children":962},{"style":560},[963],{"type":514,"value":964},")[]",{"type":509,"tag":541,"props":966,"children":967},{"style":548},[968],{"type":514,"value":969}," ?",{"type":509,"tag":541,"props":971,"children":972},{"style":554},[973],{"type":514,"value":821},{"type":509,"tag":541,"props":975,"children":976},{"style":548},[977],{"type":514,"value":978}," :",{"type":509,"tag":541,"props":980,"children":981},{"style":554},[982],{"type":514,"value":892},{"type":509,"tag":541,"props":984,"children":985},{"style":560},[986],{"type":514,"value":897},{"type":509,"tag":988,"props":989,"children":990},"style",{},[991],{"type":514,"value":992},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":503,"searchDepth":994,"depth":994,"links":995},5,[996,997,998],{"id":682,"depth":628,"text":685},{"id":753,"depth":628,"text":756},{"id":900,"depth":628,"text":903},"markdown","content:3.code-assessment:3.type-challeges:10.medium-tuple-to-union.md","content","3.code-assessment/3.type-challeges/10.medium-tuple-to-union.md","md",[1005,1007],{"_path":459,"title":458,"description":1006},"给 xhr 添加 hook，从而实现在各个阶段打印日志",{"_path":474,"title":473,"description":1008},"Pinia",1714054340739]