[{"data":1,"prerenderedAt":1012},["Reactive",2],{"navigation":3,"/code-assessment/type-challeges/medium-tuple-to-union":503,"/code-assessment/type-challeges/medium-tuple-to-union-surround":1007},[4,269,298,471,479,488],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":470},"代码考核","/code-assessment",[302,370,463],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":371,"_path":372,"children":373},"业务场景","/code-assessment/scene",[374,399,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460],{"title":375,"_path":376,"children":377},"Promise","/code-assessment/scene/promise",[378,381,384,387,390,393,396],{"title":379,"_path":380},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":382,"_path":383},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":385,"_path":386},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":388,"_path":389},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":391,"_path":392},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":394,"_path":395},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":397,"_path":398},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":400,"_path":401,"children":402},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[403,406],{"title":404,"_path":405},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":407,"_path":408},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":410,"_path":411},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":413,"_path":414},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":416,"_path":417},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":419,"_path":420},"倒计时","/code-assessment/scene/countdown",{"title":422,"_path":423},"日期格式化","/code-assessment/scene/date-format",{"title":425,"_path":426},"实现前端路由","/code-assessment/scene/frontend-route",{"title":428,"_path":429},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":431,"_path":432},"lodash.get","/code-assessment/scene/lodash-get",{"title":434,"_path":435},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":437,"_path":438},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":440,"_path":441},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":443,"_path":444},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":446,"_path":447},"随机数","/code-assessment/scene/random-number",{"title":449,"_path":450},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":452,"_path":453},"sku 算法实现","/code-assessment/scene/sku",{"title":455,"_path":456},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":458,"_path":459},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":461,"_path":462},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":464,"_path":465,"children":466},"Ts 类型挑战","/code-assessment/type-challeges",[467],{"title":468,"_path":469},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":472,"_path":473,"children":474,"icon":478},"项目","/project",[475],{"title":476,"_path":477},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":480,"_path":481,"children":482,"icon":487},"设计模式","/design-mode",[483,484],{"title":480,"_path":481},{"title":485,"_path":486},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":489,"_path":490,"children":491,"icon":502},"后端语言","/backend-languages",[492],{"title":493,"_path":494,"children":495},"Python","/backend-languages/python",[496,499],{"title":497,"_path":498},"基础","/backend-languages/python/base",{"title":500,"_path":501},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":469,"_dir":504,"_draft":505,"_partial":505,"_locale":506,"title":468,"description":507,"body":508,"_type":1002,"_id":1003,"_source":1004,"_file":1005,"_extension":1006},"type-challeges",false,"","实现泛型TupleToUnion\u003CT>，它返回元组所有值的合集。",{"type":509,"children":510,"toc":996},"root",[511,528,533,682,689,754,760,901,907,990],{"type":512,"tag":513,"props":514,"children":515},"element","p",{},[516,519,526],{"type":517,"value":518},"text","实现泛型",{"type":512,"tag":520,"props":521,"children":523},"code",{"className":522},[],[524],{"type":517,"value":525},"TupleToUnion\u003CT>",{"type":517,"value":527},"，它返回元组所有值的合集。",{"type":512,"tag":513,"props":529,"children":530},{},[531],{"type":517,"value":532},"例如",{"type":512,"tag":534,"props":535,"children":539},"pre",{"className":536,"code":537,"language":538,"meta":506,"style":506},"language-ts shiki shiki-themes vitesse-light vitesse-light vitesse-dark","type Arr = [\"1\", \"2\", \"3\"];\n\ntype Test = TupleToUnion\u003CArr>; // expected to be '1' | '2' | '3'\n","ts",[540],{"type":512,"tag":520,"props":541,"children":542},{"__ignoreMap":506},[543,629,639],{"type":512,"tag":544,"props":545,"children":548},"span",{"class":546,"line":547},"line",1,[549,555,561,567,572,578,584,588,593,598,603,607,611,615,620,624],{"type":512,"tag":544,"props":550,"children":552},{"style":551},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[553],{"type":517,"value":554},"type",{"type":512,"tag":544,"props":556,"children":558},{"style":557},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[559],{"type":517,"value":560}," Arr",{"type":512,"tag":544,"props":562,"children":564},{"style":563},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[565],{"type":517,"value":566}," =",{"type":512,"tag":544,"props":568,"children":569},{"style":563},[570],{"type":517,"value":571}," [",{"type":512,"tag":544,"props":573,"children":575},{"style":574},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[576],{"type":517,"value":577},"\"",{"type":512,"tag":544,"props":579,"children":581},{"style":580},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[582],{"type":517,"value":583},"1",{"type":512,"tag":544,"props":585,"children":586},{"style":574},[587],{"type":517,"value":577},{"type":512,"tag":544,"props":589,"children":590},{"style":563},[591],{"type":517,"value":592},",",{"type":512,"tag":544,"props":594,"children":595},{"style":574},[596],{"type":517,"value":597}," \"",{"type":512,"tag":544,"props":599,"children":600},{"style":580},[601],{"type":517,"value":602},"2",{"type":512,"tag":544,"props":604,"children":605},{"style":574},[606],{"type":517,"value":577},{"type":512,"tag":544,"props":608,"children":609},{"style":563},[610],{"type":517,"value":592},{"type":512,"tag":544,"props":612,"children":613},{"style":574},[614],{"type":517,"value":597},{"type":512,"tag":544,"props":616,"children":617},{"style":580},[618],{"type":517,"value":619},"3",{"type":512,"tag":544,"props":621,"children":622},{"style":574},[623],{"type":517,"value":577},{"type":512,"tag":544,"props":625,"children":626},{"style":563},[627],{"type":517,"value":628},"];\n",{"type":512,"tag":544,"props":630,"children":632},{"class":546,"line":631},2,[633],{"type":512,"tag":544,"props":634,"children":636},{"emptyLinePlaceholder":635},true,[637],{"type":517,"value":638},"\n",{"type":512,"tag":544,"props":640,"children":642},{"class":546,"line":641},3,[643,647,652,656,661,666,671,676],{"type":512,"tag":544,"props":644,"children":645},{"style":551},[646],{"type":517,"value":554},{"type":512,"tag":544,"props":648,"children":649},{"style":557},[650],{"type":517,"value":651}," Test",{"type":512,"tag":544,"props":653,"children":654},{"style":563},[655],{"type":517,"value":566},{"type":512,"tag":544,"props":657,"children":658},{"style":557},[659],{"type":517,"value":660}," TupleToUnion",{"type":512,"tag":544,"props":662,"children":663},{"style":563},[664],{"type":517,"value":665},"\u003C",{"type":512,"tag":544,"props":667,"children":668},{"style":557},[669],{"type":517,"value":670},"Arr",{"type":512,"tag":544,"props":672,"children":673},{"style":563},[674],{"type":517,"value":675},">;",{"type":512,"tag":544,"props":677,"children":679},{"style":678},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[680],{"type":517,"value":681}," // expected to be '1' | '2' | '3'\n",{"type":512,"tag":683,"props":684,"children":686},"h2",{"id":685},"method-1",[687],{"type":517,"value":688},"method 1",{"type":512,"tag":534,"props":690,"children":692},{"className":536,"code":691,"language":538,"meta":506,"style":506},"type TupleToUnion\u003CT extends any[]> = T[number];\n",[693],{"type":512,"tag":520,"props":694,"children":695},{"__ignoreMap":506},[696],{"type":512,"tag":544,"props":697,"children":698},{"class":546,"line":547},[699,703,707,711,716,721,726,731,735,740,745,750],{"type":512,"tag":544,"props":700,"children":701},{"style":551},[702],{"type":517,"value":554},{"type":512,"tag":544,"props":704,"children":705},{"style":557},[706],{"type":517,"value":660},{"type":512,"tag":544,"props":708,"children":709},{"style":563},[710],{"type":517,"value":665},{"type":512,"tag":544,"props":712,"children":713},{"style":557},[714],{"type":517,"value":715},"T",{"type":512,"tag":544,"props":717,"children":718},{"style":551},[719],{"type":517,"value":720}," extends",{"type":512,"tag":544,"props":722,"children":723},{"style":557},[724],{"type":517,"value":725}," any",{"type":512,"tag":544,"props":727,"children":728},{"style":563},[729],{"type":517,"value":730},"[]>",{"type":512,"tag":544,"props":732,"children":733},{"style":563},[734],{"type":517,"value":566},{"type":512,"tag":544,"props":736,"children":737},{"style":557},[738],{"type":517,"value":739}," T",{"type":512,"tag":544,"props":741,"children":742},{"style":563},[743],{"type":517,"value":744},"[",{"type":512,"tag":544,"props":746,"children":747},{"style":557},[748],{"type":517,"value":749},"number",{"type":512,"tag":544,"props":751,"children":752},{"style":563},[753],{"type":517,"value":628},{"type":512,"tag":683,"props":755,"children":757},{"id":756},"method-2",[758],{"type":517,"value":759},"method 2",{"type":512,"tag":534,"props":761,"children":763},{"className":536,"code":762,"language":538,"meta":506,"style":506},"type TupleToUnion\u003CT extends unknown[]> = T extends [infer P, ...infer R]\n  ? P | TupleToUnion\u003CR>\n  : never;\n",[764],{"type":512,"tag":520,"props":765,"children":766},{"__ignoreMap":506},[767,848,883],{"type":512,"tag":544,"props":768,"children":769},{"class":546,"line":547},[770,774,778,782,786,790,795,799,803,807,811,815,820,825,829,834,838,843],{"type":512,"tag":544,"props":771,"children":772},{"style":551},[773],{"type":517,"value":554},{"type":512,"tag":544,"props":775,"children":776},{"style":557},[777],{"type":517,"value":660},{"type":512,"tag":544,"props":779,"children":780},{"style":563},[781],{"type":517,"value":665},{"type":512,"tag":544,"props":783,"children":784},{"style":557},[785],{"type":517,"value":715},{"type":512,"tag":544,"props":787,"children":788},{"style":551},[789],{"type":517,"value":720},{"type":512,"tag":544,"props":791,"children":792},{"style":557},[793],{"type":517,"value":794}," unknown",{"type":512,"tag":544,"props":796,"children":797},{"style":563},[798],{"type":517,"value":730},{"type":512,"tag":544,"props":800,"children":801},{"style":563},[802],{"type":517,"value":566},{"type":512,"tag":544,"props":804,"children":805},{"style":557},[806],{"type":517,"value":739},{"type":512,"tag":544,"props":808,"children":809},{"style":551},[810],{"type":517,"value":720},{"type":512,"tag":544,"props":812,"children":813},{"style":563},[814],{"type":517,"value":571},{"type":512,"tag":544,"props":816,"children":817},{"style":551},[818],{"type":517,"value":819},"infer",{"type":512,"tag":544,"props":821,"children":822},{"style":557},[823],{"type":517,"value":824}," P",{"type":512,"tag":544,"props":826,"children":827},{"style":563},[828],{"type":517,"value":592},{"type":512,"tag":544,"props":830,"children":831},{"style":563},[832],{"type":517,"value":833}," ...",{"type":512,"tag":544,"props":835,"children":836},{"style":551},[837],{"type":517,"value":819},{"type":512,"tag":544,"props":839,"children":840},{"style":557},[841],{"type":517,"value":842}," R",{"type":512,"tag":544,"props":844,"children":845},{"style":563},[846],{"type":517,"value":847},"]\n",{"type":512,"tag":544,"props":849,"children":850},{"class":546,"line":631},[851,856,860,865,869,873,878],{"type":512,"tag":544,"props":852,"children":853},{"style":551},[854],{"type":517,"value":855},"  ?",{"type":512,"tag":544,"props":857,"children":858},{"style":557},[859],{"type":517,"value":824},{"type":512,"tag":544,"props":861,"children":862},{"style":563},[863],{"type":517,"value":864}," |",{"type":512,"tag":544,"props":866,"children":867},{"style":557},[868],{"type":517,"value":660},{"type":512,"tag":544,"props":870,"children":871},{"style":563},[872],{"type":517,"value":665},{"type":512,"tag":544,"props":874,"children":875},{"style":557},[876],{"type":517,"value":877},"R",{"type":512,"tag":544,"props":879,"children":880},{"style":563},[881],{"type":517,"value":882},">\n",{"type":512,"tag":544,"props":884,"children":885},{"class":546,"line":641},[886,891,896],{"type":512,"tag":544,"props":887,"children":888},{"style":551},[889],{"type":517,"value":890},"  :",{"type":512,"tag":544,"props":892,"children":893},{"style":557},[894],{"type":517,"value":895}," never",{"type":512,"tag":544,"props":897,"children":898},{"style":563},[899],{"type":517,"value":900},";\n",{"type":512,"tag":683,"props":902,"children":904},{"id":903},"method-3",[905],{"type":517,"value":906},"method 3",{"type":512,"tag":534,"props":908,"children":910},{"className":536,"code":909,"language":538,"meta":506,"style":506},"type TupleToUnion\u003CT> = T extends (infer P)[] ? P : never;\n",[911],{"type":512,"tag":520,"props":912,"children":913},{"__ignoreMap":506},[914],{"type":512,"tag":544,"props":915,"children":916},{"class":546,"line":547},[917,921,925,929,933,938,942,946,950,955,959,963,968,973,977,982,986],{"type":512,"tag":544,"props":918,"children":919},{"style":551},[920],{"type":517,"value":554},{"type":512,"tag":544,"props":922,"children":923},{"style":557},[924],{"type":517,"value":660},{"type":512,"tag":544,"props":926,"children":927},{"style":563},[928],{"type":517,"value":665},{"type":512,"tag":544,"props":930,"children":931},{"style":557},[932],{"type":517,"value":715},{"type":512,"tag":544,"props":934,"children":935},{"style":563},[936],{"type":517,"value":937},">",{"type":512,"tag":544,"props":939,"children":940},{"style":563},[941],{"type":517,"value":566},{"type":512,"tag":544,"props":943,"children":944},{"style":557},[945],{"type":517,"value":739},{"type":512,"tag":544,"props":947,"children":948},{"style":551},[949],{"type":517,"value":720},{"type":512,"tag":544,"props":951,"children":952},{"style":563},[953],{"type":517,"value":954}," (",{"type":512,"tag":544,"props":956,"children":957},{"style":551},[958],{"type":517,"value":819},{"type":512,"tag":544,"props":960,"children":961},{"style":557},[962],{"type":517,"value":824},{"type":512,"tag":544,"props":964,"children":965},{"style":563},[966],{"type":517,"value":967},")[]",{"type":512,"tag":544,"props":969,"children":970},{"style":551},[971],{"type":517,"value":972}," ?",{"type":512,"tag":544,"props":974,"children":975},{"style":557},[976],{"type":517,"value":824},{"type":512,"tag":544,"props":978,"children":979},{"style":551},[980],{"type":517,"value":981}," :",{"type":512,"tag":544,"props":983,"children":984},{"style":557},[985],{"type":517,"value":895},{"type":512,"tag":544,"props":987,"children":988},{"style":563},[989],{"type":517,"value":900},{"type":512,"tag":991,"props":992,"children":993},"style",{},[994],{"type":517,"value":995},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":506,"searchDepth":997,"depth":997,"links":998},5,[999,1000,1001],{"id":685,"depth":631,"text":688},{"id":756,"depth":631,"text":759},{"id":903,"depth":631,"text":906},"markdown","content:3.code-assessment:3.type-challeges:10.medium-tuple-to-union.md","content","3.code-assessment/3.type-challeges/10.medium-tuple-to-union.md","md",[1008,1010],{"_path":462,"title":461,"description":1009},"给 xhr 添加 hook，从而实现在各个阶段打印日志",{"_path":477,"title":476,"description":1011},"Pinia",1714056097664]