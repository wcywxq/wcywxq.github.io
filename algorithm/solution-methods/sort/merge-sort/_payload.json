[{"data":1,"prerenderedAt":2146},["Reactive",2],{"navigation":3,"/algorithm/solution-methods/sort/merge-sort":559,"/algorithm/solution-methods/sort/merge-sort-surround":2143},[4,272,318,536,544],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":317},"八股文","/endorsement",[276,286,293,304],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"JavaScript","/endorsement/javascript",[290],{"title":291,"_path":292},"语法和数据类型","/endorsement/javascript/grammar-data-types",{"title":294,"_path":295,"children":296},"构建工具","/endorsement/build-tools",[297],{"title":298,"_path":299,"children":300},"Webpack","/endorsement/build-tools/webpack",[301],{"title":302,"_path":303},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":305,"_path":306,"children":307},"Html","/endorsement/html",[308,311,314],{"title":309,"_path":310},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":312,"_path":313},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":315,"_path":316},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":319,"_path":320,"children":321,"icon":535},"代码考核","/code-assessment",[322,427,528],{"title":323,"_path":324,"children":325},"源码实现","/code-assessment/source",[326,360,376,404,411,418,421,424],{"title":327,"_path":328,"children":329},"原生 api","/code-assessment/source/native-api",[330,333,336,339,342,345,348,351,354,357],{"title":331,"_path":332},"polyfill","/code-assessment/source/native-api/polyfill",{"title":334,"_path":335},"ajax","/code-assessment/source/native-api/ajax",{"title":337,"_path":338},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":340,"_path":341},"new 操作符","/code-assessment/source/native-api/new",{"title":343,"_path":344},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":346,"_path":347},"定时器","/code-assessment/source/native-api/timer",{"title":349,"_path":350},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":352,"_path":353},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":355,"_path":356},"extends","/code-assessment/source/native-api/extends",{"title":358,"_path":359},"Promise","/code-assessment/source/native-api/promise",{"title":361,"_path":362,"children":363},"函数 Function","/code-assessment/source/function",[364,367,370,373],{"title":365,"_path":366},"函数防抖","/code-assessment/source/function/debounce",{"title":368,"_path":369},"函数节流","/code-assessment/source/function/throttle",{"title":371,"_path":372},"函数柯理化","/code-assessment/source/function/curry",{"title":374,"_path":375},"函数睡眠","/code-assessment/source/function/sleep",{"title":377,"_path":378,"children":379},"数组 Array","/code-assessment/source/array",[380,383,386,389,392,395,398,401],{"title":381,"_path":382},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":384,"_path":385},"数组扁平化","/code-assessment/source/array/flat",{"title":387,"_path":388},"原型方法","/code-assessment/source/array/prototype-method",{"title":390,"_path":391},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":393,"_path":394},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":396,"_path":397},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":399,"_path":400},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":402,"_path":403},"二维数组","/code-assessment/source/array/2d-array",{"title":405,"_path":406,"children":407},"字符串 String","/code-assessment/source/string",[408],{"title":409,"_path":410},"repeat()","/code-assessment/source/string/repeat",{"title":412,"_path":413,"children":414},"集合 Set","/code-assessment/source/set",[415],{"title":416,"_path":417},"遍历集合","/code-assessment/source/set/traverse",{"title":419,"_path":420},"获取通用类型","/code-assessment/source/get-generic-type",{"title":422,"_path":423},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":425,"_path":426},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":428,"_path":429,"children":430},"业务场景","/code-assessment/scene",[431,461,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525],{"title":358,"_path":432,"children":433},"/code-assessment/scene/promise",[434,437,440,443,446,449,452,455,458],{"title":435,"_path":436},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":438,"_path":439},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":441,"_path":442},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":444,"_path":445},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":447,"_path":448},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":450,"_path":451},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":453,"_path":454},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":456,"_path":457},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":459,"_path":460},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":462,"_path":463,"children":464},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[465,468],{"title":466,"_path":467},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":469,"_path":470},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":472,"_path":473},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":475,"_path":476},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":478,"_path":479},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":481,"_path":482},"倒计时","/code-assessment/scene/countdown",{"title":484,"_path":485},"日期格式化","/code-assessment/scene/date-format",{"title":487,"_path":488},"实现前端路由","/code-assessment/scene/frontend-route",{"title":490,"_path":491},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":493,"_path":494},"lodash.get","/code-assessment/scene/lodash-get",{"title":496,"_path":497},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":499,"_path":500},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":502,"_path":503},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":505,"_path":506},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":508,"_path":509},"随机数","/code-assessment/scene/random-number",{"title":511,"_path":512},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":514,"_path":515},"sku 算法实现","/code-assessment/scene/sku",{"title":517,"_path":518},"整数分割","/code-assessment/scene/split-number",{"title":520,"_path":521},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":523,"_path":524},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":526,"_path":527},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":529,"_path":530,"children":531},"Ts 类型挑战","/code-assessment/type-challeges",[532],{"title":533,"_path":534},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":537,"_path":538,"children":539,"icon":543},"项目","/project",[540],{"title":541,"_path":542},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":545,"_path":546,"children":547,"icon":558},"后端语言","/backend-languages",[548],{"title":549,"_path":550,"children":551},"Python","/backend-languages/python",[552,555],{"title":553,"_path":554},"基础","/backend-languages/python/base",{"title":556,"_path":557},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":27,"_dir":560,"_draft":561,"_partial":561,"_locale":562,"title":26,"description":562,"body":563,"_type":2138,"_id":2139,"_source":2140,"_file":2141,"_extension":2142},"sort",false,"",{"type":564,"children":565,"toc":2132},"root",[566,574,580,585,590,595,620,625,630,2126],{"type":567,"tag":568,"props":569,"children":571},"element","h2",{"id":570},"简介",[572],{"type":573,"value":570},"text",{"type":567,"tag":575,"props":576,"children":577},"p",{},[578],{"type":573,"value":579},"归并排序就是利用分冶的思想，采用递归的形式，对元素进行排序",{"type":567,"tag":575,"props":581,"children":582},{},[583],{"type":573,"value":584},"当我们有两个长度为 n 的有序数组时，可以通过两个指针的移动，在 O(n) 的时间复杂度内，快速将它们合并成一个有序数组。而这两个长度为 n 的有序数组，也是可以通过两个 n/2 的有序数组合并得来。因此，只要对数组不断进行分冶，就可以把一个无序数组变成有序",{"type":567,"tag":575,"props":586,"children":587},{},[588],{"type":573,"value":589},"由于在数组拆分时用到了递归，而对数组组合的过程用到了合并，因此命名：归并排序",{"type":567,"tag":568,"props":591,"children":593},{"id":592},"步骤",[594],{"type":573,"value":592},{"type":567,"tag":596,"props":597,"children":598},"ul",{},[599,605,610,615],{"type":567,"tag":600,"props":601,"children":602},"li",{},[603],{"type":573,"value":604},"首先将数组拆分成左右两部分",{"type":567,"tag":600,"props":606,"children":607},{},[608],{"type":573,"value":609},"对于左边部分，继续拆分成左右两部分，直到无法拆分，此时将最小单元左侧部分保持有序，最小单元右侧部分也保持有序，然后对排序后的这两部分进行合并",{"type":567,"tag":600,"props":611,"children":612},{},[613],{"type":573,"value":614},"对于右侧部分，同左边部分一样拆分和合并",{"type":567,"tag":600,"props":616,"children":617},{},[618],{"type":573,"value":619},"最后合并左右两部分的数组",{"type":567,"tag":568,"props":621,"children":623},{"id":622},"时间复杂度和空间复杂度",[624],{"type":573,"value":622},{"type":567,"tag":568,"props":626,"children":628},{"id":627},"实现",[629],{"type":573,"value":627},{"type":567,"tag":631,"props":632,"children":636},"pre",{"className":633,"code":634,"language":635,"meta":562,"style":562},"language-py shiki shiki-themes vitesse-light vitesse-light vitesse-dark","def Merge(a, start, mid, end):\n    # 临时列表\n    tmp = []\n    # 两个游标，分别从两段区间的起点开始\n    l = start\n    r = mid + 1\n    # 当两个区间都未到达区间右端点时\n    while l \u003C= mid and r \u003C= end:\n        # 判断，将小的值插入临时列表\n        if a[l] \u003C= a[r]:\n            tmp.append(a[l])\n            # 对相应游标进行自增\n            l += 1\n        else:\n            tmp.append(a[r])\n            # 对相应游标进行自增\n            r += 1\n    # 当跳出循环时，将剩余的部分直接塞入临时列表\n    tmp.extend(a[l : mid + 1])\n    tmp.extend(a[r : end + 1])\n\n    # 把临时列表的值，拷贝回原列表 a\n    for i in range(start, end + 1):\n        a[i] = tmp[i - start]\n    # 打印本次合并结果\n    print(start, end, tmp)\n\n# 递归函数\ndef MergeSort(a, start, end):\n    # 若待排序元素只有一个则直接返回\n    if start == end:\n        return\n    # 否则计算出中点 mid\n    mid = (start + end) // 2\n    # 对左端点 start 到中点 mid 的元素执行一次归并排序\n    MergeSort(a, start, mid)\n    # 对中点 mid + 1 到右端点 end 的元素执行一次归并排序\n    MergeSort(a, mid + 1, end)\n    # 以上两次归并排序产生了两个有序数组，最后调用 Merge 进行归并排序\n    Merge(a, start, mid, end)\n\n# 测试\na = [8, 5, 6, 4, 3, 7, 10, 2]\nMergeSort(a, 0, 7)\n\n# 输出\n0 1 [5, 8]\n2 3 [4, 6]\n0 3 [4, 5, 6, 8]\n4 5 [3, 7]\n6 7 [2, 10]\n4 7 [2, 3, 7, 10]\n0 7 [2, 3, 4, 5, 6, 7, 8, 10]\n","py",[637],{"type":567,"tag":638,"props":639,"children":640},"code",{"__ignoreMap":562},[641,704,714,733,742,760,789,798,845,854,906,946,955,973,986,1022,1030,1047,1056,1113,1167,1177,1186,1240,1295,1304,1342,1350,1359,1400,1409,1436,1445,1454,1500,1509,1546,1555,1599,1608,1653,1661,1670,1760,1798,1806,1815,1850,1884,1932,1965,1998,2046],{"type":567,"tag":642,"props":643,"children":646},"span",{"class":644,"line":645},"line",1,[647,653,659,665,671,676,681,685,690,694,699],{"type":567,"tag":642,"props":648,"children":650},{"style":649},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[651],{"type":573,"value":652},"def",{"type":567,"tag":642,"props":654,"children":656},{"style":655},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[657],{"type":573,"value":658}," Merge",{"type":567,"tag":642,"props":660,"children":662},{"style":661},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[663],{"type":573,"value":664},"(",{"type":567,"tag":642,"props":666,"children":668},{"style":667},"--shiki-light:#393A34;--shiki-default:#393A34;--shiki-dark:#DBD7CAEE",[669],{"type":573,"value":670},"a",{"type":567,"tag":642,"props":672,"children":673},{"style":661},[674],{"type":573,"value":675},",",{"type":567,"tag":642,"props":677,"children":678},{"style":667},[679],{"type":573,"value":680}," start",{"type":567,"tag":642,"props":682,"children":683},{"style":661},[684],{"type":573,"value":675},{"type":567,"tag":642,"props":686,"children":687},{"style":667},[688],{"type":573,"value":689}," mid",{"type":567,"tag":642,"props":691,"children":692},{"style":661},[693],{"type":573,"value":675},{"type":567,"tag":642,"props":695,"children":696},{"style":667},[697],{"type":573,"value":698}," end",{"type":567,"tag":642,"props":700,"children":701},{"style":661},[702],{"type":573,"value":703},"):\n",{"type":567,"tag":642,"props":705,"children":707},{"class":644,"line":706},2,[708],{"type":567,"tag":642,"props":709,"children":711},{"style":710},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[712],{"type":573,"value":713},"    # 临时列表\n",{"type":567,"tag":642,"props":715,"children":717},{"class":644,"line":716},3,[718,723,728],{"type":567,"tag":642,"props":719,"children":720},{"style":667},[721],{"type":573,"value":722},"    tmp ",{"type":567,"tag":642,"props":724,"children":725},{"style":661},[726],{"type":573,"value":727},"=",{"type":567,"tag":642,"props":729,"children":730},{"style":661},[731],{"type":573,"value":732}," []\n",{"type":567,"tag":642,"props":734,"children":736},{"class":644,"line":735},4,[737],{"type":567,"tag":642,"props":738,"children":739},{"style":710},[740],{"type":573,"value":741},"    # 两个游标，分别从两段区间的起点开始\n",{"type":567,"tag":642,"props":743,"children":745},{"class":644,"line":744},5,[746,751,755],{"type":567,"tag":642,"props":747,"children":748},{"style":667},[749],{"type":573,"value":750},"    l ",{"type":567,"tag":642,"props":752,"children":753},{"style":661},[754],{"type":573,"value":727},{"type":567,"tag":642,"props":756,"children":757},{"style":667},[758],{"type":573,"value":759}," start\n",{"type":567,"tag":642,"props":761,"children":763},{"class":644,"line":762},6,[764,769,773,778,783],{"type":567,"tag":642,"props":765,"children":766},{"style":667},[767],{"type":573,"value":768},"    r ",{"type":567,"tag":642,"props":770,"children":771},{"style":661},[772],{"type":573,"value":727},{"type":567,"tag":642,"props":774,"children":775},{"style":667},[776],{"type":573,"value":777}," mid ",{"type":567,"tag":642,"props":779,"children":780},{"style":649},[781],{"type":573,"value":782},"+",{"type":567,"tag":642,"props":784,"children":786},{"style":785},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[787],{"type":573,"value":788}," 1\n",{"type":567,"tag":642,"props":790,"children":792},{"class":644,"line":791},7,[793],{"type":567,"tag":642,"props":794,"children":795},{"style":710},[796],{"type":573,"value":797},"    # 当两个区间都未到达区间右端点时\n",{"type":567,"tag":642,"props":799,"children":801},{"class":644,"line":800},8,[802,808,813,818,822,827,832,836,840],{"type":567,"tag":642,"props":803,"children":805},{"style":804},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[806],{"type":573,"value":807},"    while",{"type":567,"tag":642,"props":809,"children":810},{"style":667},[811],{"type":573,"value":812}," l ",{"type":567,"tag":642,"props":814,"children":815},{"style":649},[816],{"type":573,"value":817},"\u003C=",{"type":567,"tag":642,"props":819,"children":820},{"style":667},[821],{"type":573,"value":777},{"type":567,"tag":642,"props":823,"children":824},{"style":649},[825],{"type":573,"value":826},"and",{"type":567,"tag":642,"props":828,"children":829},{"style":667},[830],{"type":573,"value":831}," r ",{"type":567,"tag":642,"props":833,"children":834},{"style":649},[835],{"type":573,"value":817},{"type":567,"tag":642,"props":837,"children":838},{"style":667},[839],{"type":573,"value":698},{"type":567,"tag":642,"props":841,"children":842},{"style":661},[843],{"type":573,"value":844},":\n",{"type":567,"tag":642,"props":846,"children":848},{"class":644,"line":847},9,[849],{"type":567,"tag":642,"props":850,"children":851},{"style":710},[852],{"type":573,"value":853},"        # 判断，将小的值插入临时列表\n",{"type":567,"tag":642,"props":855,"children":857},{"class":644,"line":856},10,[858,863,868,873,878,883,888,892,896,901],{"type":567,"tag":642,"props":859,"children":860},{"style":804},[861],{"type":573,"value":862},"        if",{"type":567,"tag":642,"props":864,"children":865},{"style":667},[866],{"type":573,"value":867}," a",{"type":567,"tag":642,"props":869,"children":870},{"style":661},[871],{"type":573,"value":872},"[",{"type":567,"tag":642,"props":874,"children":875},{"style":667},[876],{"type":573,"value":877},"l",{"type":567,"tag":642,"props":879,"children":880},{"style":661},[881],{"type":573,"value":882},"]",{"type":567,"tag":642,"props":884,"children":885},{"style":649},[886],{"type":573,"value":887}," \u003C=",{"type":567,"tag":642,"props":889,"children":890},{"style":667},[891],{"type":573,"value":867},{"type":567,"tag":642,"props":893,"children":894},{"style":661},[895],{"type":573,"value":872},{"type":567,"tag":642,"props":897,"children":898},{"style":667},[899],{"type":573,"value":900},"r",{"type":567,"tag":642,"props":902,"children":903},{"style":661},[904],{"type":573,"value":905},"]:\n",{"type":567,"tag":642,"props":907,"children":909},{"class":644,"line":908},11,[910,915,920,925,929,933,937,941],{"type":567,"tag":642,"props":911,"children":912},{"style":667},[913],{"type":573,"value":914},"            tmp",{"type":567,"tag":642,"props":916,"children":917},{"style":661},[918],{"type":573,"value":919},".",{"type":567,"tag":642,"props":921,"children":922},{"style":667},[923],{"type":573,"value":924},"append",{"type":567,"tag":642,"props":926,"children":927},{"style":661},[928],{"type":573,"value":664},{"type":567,"tag":642,"props":930,"children":931},{"style":667},[932],{"type":573,"value":670},{"type":567,"tag":642,"props":934,"children":935},{"style":661},[936],{"type":573,"value":872},{"type":567,"tag":642,"props":938,"children":939},{"style":667},[940],{"type":573,"value":877},{"type":567,"tag":642,"props":942,"children":943},{"style":661},[944],{"type":573,"value":945},"])\n",{"type":567,"tag":642,"props":947,"children":949},{"class":644,"line":948},12,[950],{"type":567,"tag":642,"props":951,"children":952},{"style":710},[953],{"type":573,"value":954},"            # 对相应游标进行自增\n",{"type":567,"tag":642,"props":956,"children":958},{"class":644,"line":957},13,[959,964,969],{"type":567,"tag":642,"props":960,"children":961},{"style":667},[962],{"type":573,"value":963},"            l ",{"type":567,"tag":642,"props":965,"children":966},{"style":661},[967],{"type":573,"value":968},"+=",{"type":567,"tag":642,"props":970,"children":971},{"style":785},[972],{"type":573,"value":788},{"type":567,"tag":642,"props":974,"children":976},{"class":644,"line":975},14,[977,982],{"type":567,"tag":642,"props":978,"children":979},{"style":804},[980],{"type":573,"value":981},"        else",{"type":567,"tag":642,"props":983,"children":984},{"style":661},[985],{"type":573,"value":844},{"type":567,"tag":642,"props":987,"children":989},{"class":644,"line":988},15,[990,994,998,1002,1006,1010,1014,1018],{"type":567,"tag":642,"props":991,"children":992},{"style":667},[993],{"type":573,"value":914},{"type":567,"tag":642,"props":995,"children":996},{"style":661},[997],{"type":573,"value":919},{"type":567,"tag":642,"props":999,"children":1000},{"style":667},[1001],{"type":573,"value":924},{"type":567,"tag":642,"props":1003,"children":1004},{"style":661},[1005],{"type":573,"value":664},{"type":567,"tag":642,"props":1007,"children":1008},{"style":667},[1009],{"type":573,"value":670},{"type":567,"tag":642,"props":1011,"children":1012},{"style":661},[1013],{"type":573,"value":872},{"type":567,"tag":642,"props":1015,"children":1016},{"style":667},[1017],{"type":573,"value":900},{"type":567,"tag":642,"props":1019,"children":1020},{"style":661},[1021],{"type":573,"value":945},{"type":567,"tag":642,"props":1023,"children":1025},{"class":644,"line":1024},16,[1026],{"type":567,"tag":642,"props":1027,"children":1028},{"style":710},[1029],{"type":573,"value":954},{"type":567,"tag":642,"props":1031,"children":1033},{"class":644,"line":1032},17,[1034,1039,1043],{"type":567,"tag":642,"props":1035,"children":1036},{"style":667},[1037],{"type":573,"value":1038},"            r ",{"type":567,"tag":642,"props":1040,"children":1041},{"style":661},[1042],{"type":573,"value":968},{"type":567,"tag":642,"props":1044,"children":1045},{"style":785},[1046],{"type":573,"value":788},{"type":567,"tag":642,"props":1048,"children":1050},{"class":644,"line":1049},18,[1051],{"type":567,"tag":642,"props":1052,"children":1053},{"style":710},[1054],{"type":573,"value":1055},"    # 当跳出循环时，将剩余的部分直接塞入临时列表\n",{"type":567,"tag":642,"props":1057,"children":1059},{"class":644,"line":1058},19,[1060,1065,1069,1074,1078,1082,1086,1091,1096,1100,1104,1109],{"type":567,"tag":642,"props":1061,"children":1062},{"style":667},[1063],{"type":573,"value":1064},"    tmp",{"type":567,"tag":642,"props":1066,"children":1067},{"style":661},[1068],{"type":573,"value":919},{"type":567,"tag":642,"props":1070,"children":1071},{"style":667},[1072],{"type":573,"value":1073},"extend",{"type":567,"tag":642,"props":1075,"children":1076},{"style":661},[1077],{"type":573,"value":664},{"type":567,"tag":642,"props":1079,"children":1080},{"style":667},[1081],{"type":573,"value":670},{"type":567,"tag":642,"props":1083,"children":1084},{"style":661},[1085],{"type":573,"value":872},{"type":567,"tag":642,"props":1087,"children":1088},{"style":667},[1089],{"type":573,"value":1090},"l ",{"type":567,"tag":642,"props":1092,"children":1093},{"style":661},[1094],{"type":573,"value":1095},":",{"type":567,"tag":642,"props":1097,"children":1098},{"style":667},[1099],{"type":573,"value":777},{"type":567,"tag":642,"props":1101,"children":1102},{"style":649},[1103],{"type":573,"value":782},{"type":567,"tag":642,"props":1105,"children":1106},{"style":785},[1107],{"type":573,"value":1108}," 1",{"type":567,"tag":642,"props":1110,"children":1111},{"style":661},[1112],{"type":573,"value":945},{"type":567,"tag":642,"props":1114,"children":1116},{"class":644,"line":1115},20,[1117,1121,1125,1129,1133,1137,1141,1146,1150,1155,1159,1163],{"type":567,"tag":642,"props":1118,"children":1119},{"style":667},[1120],{"type":573,"value":1064},{"type":567,"tag":642,"props":1122,"children":1123},{"style":661},[1124],{"type":573,"value":919},{"type":567,"tag":642,"props":1126,"children":1127},{"style":667},[1128],{"type":573,"value":1073},{"type":567,"tag":642,"props":1130,"children":1131},{"style":661},[1132],{"type":573,"value":664},{"type":567,"tag":642,"props":1134,"children":1135},{"style":667},[1136],{"type":573,"value":670},{"type":567,"tag":642,"props":1138,"children":1139},{"style":661},[1140],{"type":573,"value":872},{"type":567,"tag":642,"props":1142,"children":1143},{"style":667},[1144],{"type":573,"value":1145},"r ",{"type":567,"tag":642,"props":1147,"children":1148},{"style":661},[1149],{"type":573,"value":1095},{"type":567,"tag":642,"props":1151,"children":1152},{"style":667},[1153],{"type":573,"value":1154}," end ",{"type":567,"tag":642,"props":1156,"children":1157},{"style":649},[1158],{"type":573,"value":782},{"type":567,"tag":642,"props":1160,"children":1161},{"style":785},[1162],{"type":573,"value":1108},{"type":567,"tag":642,"props":1164,"children":1165},{"style":661},[1166],{"type":573,"value":945},{"type":567,"tag":642,"props":1168,"children":1170},{"class":644,"line":1169},21,[1171],{"type":567,"tag":642,"props":1172,"children":1174},{"emptyLinePlaceholder":1173},true,[1175],{"type":573,"value":1176},"\n",{"type":567,"tag":642,"props":1178,"children":1180},{"class":644,"line":1179},22,[1181],{"type":567,"tag":642,"props":1182,"children":1183},{"style":710},[1184],{"type":573,"value":1185},"    # 把临时列表的值，拷贝回原列表 a\n",{"type":567,"tag":642,"props":1187,"children":1189},{"class":644,"line":1188},23,[1190,1195,1200,1205,1211,1215,1220,1224,1228,1232,1236],{"type":567,"tag":642,"props":1191,"children":1192},{"style":804},[1193],{"type":573,"value":1194},"    for",{"type":567,"tag":642,"props":1196,"children":1197},{"style":667},[1198],{"type":573,"value":1199}," i ",{"type":567,"tag":642,"props":1201,"children":1202},{"style":804},[1203],{"type":573,"value":1204},"in",{"type":567,"tag":642,"props":1206,"children":1208},{"style":1207},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1209],{"type":573,"value":1210}," range",{"type":567,"tag":642,"props":1212,"children":1213},{"style":661},[1214],{"type":573,"value":664},{"type":567,"tag":642,"props":1216,"children":1217},{"style":667},[1218],{"type":573,"value":1219},"start",{"type":567,"tag":642,"props":1221,"children":1222},{"style":661},[1223],{"type":573,"value":675},{"type":567,"tag":642,"props":1225,"children":1226},{"style":667},[1227],{"type":573,"value":1154},{"type":567,"tag":642,"props":1229,"children":1230},{"style":649},[1231],{"type":573,"value":782},{"type":567,"tag":642,"props":1233,"children":1234},{"style":785},[1235],{"type":573,"value":1108},{"type":567,"tag":642,"props":1237,"children":1238},{"style":661},[1239],{"type":573,"value":703},{"type":567,"tag":642,"props":1241,"children":1243},{"class":644,"line":1242},24,[1244,1249,1253,1258,1262,1267,1272,1276,1281,1286,1290],{"type":567,"tag":642,"props":1245,"children":1246},{"style":667},[1247],{"type":573,"value":1248},"        a",{"type":567,"tag":642,"props":1250,"children":1251},{"style":661},[1252],{"type":573,"value":872},{"type":567,"tag":642,"props":1254,"children":1255},{"style":667},[1256],{"type":573,"value":1257},"i",{"type":567,"tag":642,"props":1259,"children":1260},{"style":661},[1261],{"type":573,"value":882},{"type":567,"tag":642,"props":1263,"children":1264},{"style":661},[1265],{"type":573,"value":1266}," =",{"type":567,"tag":642,"props":1268,"children":1269},{"style":667},[1270],{"type":573,"value":1271}," tmp",{"type":567,"tag":642,"props":1273,"children":1274},{"style":661},[1275],{"type":573,"value":872},{"type":567,"tag":642,"props":1277,"children":1278},{"style":667},[1279],{"type":573,"value":1280},"i ",{"type":567,"tag":642,"props":1282,"children":1283},{"style":649},[1284],{"type":573,"value":1285},"-",{"type":567,"tag":642,"props":1287,"children":1288},{"style":667},[1289],{"type":573,"value":680},{"type":567,"tag":642,"props":1291,"children":1292},{"style":661},[1293],{"type":573,"value":1294},"]\n",{"type":567,"tag":642,"props":1296,"children":1298},{"class":644,"line":1297},25,[1299],{"type":567,"tag":642,"props":1300,"children":1301},{"style":710},[1302],{"type":573,"value":1303},"    # 打印本次合并结果\n",{"type":567,"tag":642,"props":1305,"children":1307},{"class":644,"line":1306},26,[1308,1313,1317,1321,1325,1329,1333,1337],{"type":567,"tag":642,"props":1309,"children":1310},{"style":1207},[1311],{"type":573,"value":1312},"    print",{"type":567,"tag":642,"props":1314,"children":1315},{"style":661},[1316],{"type":573,"value":664},{"type":567,"tag":642,"props":1318,"children":1319},{"style":667},[1320],{"type":573,"value":1219},{"type":567,"tag":642,"props":1322,"children":1323},{"style":661},[1324],{"type":573,"value":675},{"type":567,"tag":642,"props":1326,"children":1327},{"style":667},[1328],{"type":573,"value":698},{"type":567,"tag":642,"props":1330,"children":1331},{"style":661},[1332],{"type":573,"value":675},{"type":567,"tag":642,"props":1334,"children":1335},{"style":667},[1336],{"type":573,"value":1271},{"type":567,"tag":642,"props":1338,"children":1339},{"style":661},[1340],{"type":573,"value":1341},")\n",{"type":567,"tag":642,"props":1343,"children":1345},{"class":644,"line":1344},27,[1346],{"type":567,"tag":642,"props":1347,"children":1348},{"emptyLinePlaceholder":1173},[1349],{"type":573,"value":1176},{"type":567,"tag":642,"props":1351,"children":1353},{"class":644,"line":1352},28,[1354],{"type":567,"tag":642,"props":1355,"children":1356},{"style":710},[1357],{"type":573,"value":1358},"# 递归函数\n",{"type":567,"tag":642,"props":1360,"children":1362},{"class":644,"line":1361},29,[1363,1367,1372,1376,1380,1384,1388,1392,1396],{"type":567,"tag":642,"props":1364,"children":1365},{"style":649},[1366],{"type":573,"value":652},{"type":567,"tag":642,"props":1368,"children":1369},{"style":655},[1370],{"type":573,"value":1371}," MergeSort",{"type":567,"tag":642,"props":1373,"children":1374},{"style":661},[1375],{"type":573,"value":664},{"type":567,"tag":642,"props":1377,"children":1378},{"style":667},[1379],{"type":573,"value":670},{"type":567,"tag":642,"props":1381,"children":1382},{"style":661},[1383],{"type":573,"value":675},{"type":567,"tag":642,"props":1385,"children":1386},{"style":667},[1387],{"type":573,"value":680},{"type":567,"tag":642,"props":1389,"children":1390},{"style":661},[1391],{"type":573,"value":675},{"type":567,"tag":642,"props":1393,"children":1394},{"style":667},[1395],{"type":573,"value":698},{"type":567,"tag":642,"props":1397,"children":1398},{"style":661},[1399],{"type":573,"value":703},{"type":567,"tag":642,"props":1401,"children":1403},{"class":644,"line":1402},30,[1404],{"type":567,"tag":642,"props":1405,"children":1406},{"style":710},[1407],{"type":573,"value":1408},"    # 若待排序元素只有一个则直接返回\n",{"type":567,"tag":642,"props":1410,"children":1412},{"class":644,"line":1411},31,[1413,1418,1423,1428,1432],{"type":567,"tag":642,"props":1414,"children":1415},{"style":804},[1416],{"type":573,"value":1417},"    if",{"type":567,"tag":642,"props":1419,"children":1420},{"style":667},[1421],{"type":573,"value":1422}," start ",{"type":567,"tag":642,"props":1424,"children":1425},{"style":649},[1426],{"type":573,"value":1427},"==",{"type":567,"tag":642,"props":1429,"children":1430},{"style":667},[1431],{"type":573,"value":698},{"type":567,"tag":642,"props":1433,"children":1434},{"style":661},[1435],{"type":573,"value":844},{"type":567,"tag":642,"props":1437,"children":1439},{"class":644,"line":1438},32,[1440],{"type":567,"tag":642,"props":1441,"children":1442},{"style":804},[1443],{"type":573,"value":1444},"        return\n",{"type":567,"tag":642,"props":1446,"children":1448},{"class":644,"line":1447},33,[1449],{"type":567,"tag":642,"props":1450,"children":1451},{"style":710},[1452],{"type":573,"value":1453},"    # 否则计算出中点 mid\n",{"type":567,"tag":642,"props":1455,"children":1457},{"class":644,"line":1456},34,[1458,1463,1467,1472,1477,1481,1485,1490,1495],{"type":567,"tag":642,"props":1459,"children":1460},{"style":667},[1461],{"type":573,"value":1462},"    mid ",{"type":567,"tag":642,"props":1464,"children":1465},{"style":661},[1466],{"type":573,"value":727},{"type":567,"tag":642,"props":1468,"children":1469},{"style":661},[1470],{"type":573,"value":1471}," (",{"type":567,"tag":642,"props":1473,"children":1474},{"style":667},[1475],{"type":573,"value":1476},"start ",{"type":567,"tag":642,"props":1478,"children":1479},{"style":649},[1480],{"type":573,"value":782},{"type":567,"tag":642,"props":1482,"children":1483},{"style":667},[1484],{"type":573,"value":698},{"type":567,"tag":642,"props":1486,"children":1487},{"style":661},[1488],{"type":573,"value":1489},")",{"type":567,"tag":642,"props":1491,"children":1492},{"style":649},[1493],{"type":573,"value":1494}," //",{"type":567,"tag":642,"props":1496,"children":1497},{"style":785},[1498],{"type":573,"value":1499}," 2\n",{"type":567,"tag":642,"props":1501,"children":1503},{"class":644,"line":1502},35,[1504],{"type":567,"tag":642,"props":1505,"children":1506},{"style":710},[1507],{"type":573,"value":1508},"    # 对左端点 start 到中点 mid 的元素执行一次归并排序\n",{"type":567,"tag":642,"props":1510,"children":1512},{"class":644,"line":1511},36,[1513,1518,1522,1526,1530,1534,1538,1542],{"type":567,"tag":642,"props":1514,"children":1515},{"style":667},[1516],{"type":573,"value":1517},"    MergeSort",{"type":567,"tag":642,"props":1519,"children":1520},{"style":661},[1521],{"type":573,"value":664},{"type":567,"tag":642,"props":1523,"children":1524},{"style":667},[1525],{"type":573,"value":670},{"type":567,"tag":642,"props":1527,"children":1528},{"style":661},[1529],{"type":573,"value":675},{"type":567,"tag":642,"props":1531,"children":1532},{"style":667},[1533],{"type":573,"value":680},{"type":567,"tag":642,"props":1535,"children":1536},{"style":661},[1537],{"type":573,"value":675},{"type":567,"tag":642,"props":1539,"children":1540},{"style":667},[1541],{"type":573,"value":689},{"type":567,"tag":642,"props":1543,"children":1544},{"style":661},[1545],{"type":573,"value":1341},{"type":567,"tag":642,"props":1547,"children":1549},{"class":644,"line":1548},37,[1550],{"type":567,"tag":642,"props":1551,"children":1552},{"style":710},[1553],{"type":573,"value":1554},"    # 对中点 mid + 1 到右端点 end 的元素执行一次归并排序\n",{"type":567,"tag":642,"props":1556,"children":1558},{"class":644,"line":1557},38,[1559,1563,1567,1571,1575,1579,1583,1587,1591,1595],{"type":567,"tag":642,"props":1560,"children":1561},{"style":667},[1562],{"type":573,"value":1517},{"type":567,"tag":642,"props":1564,"children":1565},{"style":661},[1566],{"type":573,"value":664},{"type":567,"tag":642,"props":1568,"children":1569},{"style":667},[1570],{"type":573,"value":670},{"type":567,"tag":642,"props":1572,"children":1573},{"style":661},[1574],{"type":573,"value":675},{"type":567,"tag":642,"props":1576,"children":1577},{"style":667},[1578],{"type":573,"value":777},{"type":567,"tag":642,"props":1580,"children":1581},{"style":649},[1582],{"type":573,"value":782},{"type":567,"tag":642,"props":1584,"children":1585},{"style":785},[1586],{"type":573,"value":1108},{"type":567,"tag":642,"props":1588,"children":1589},{"style":661},[1590],{"type":573,"value":675},{"type":567,"tag":642,"props":1592,"children":1593},{"style":667},[1594],{"type":573,"value":698},{"type":567,"tag":642,"props":1596,"children":1597},{"style":661},[1598],{"type":573,"value":1341},{"type":567,"tag":642,"props":1600,"children":1602},{"class":644,"line":1601},39,[1603],{"type":567,"tag":642,"props":1604,"children":1605},{"style":710},[1606],{"type":573,"value":1607},"    # 以上两次归并排序产生了两个有序数组，最后调用 Merge 进行归并排序\n",{"type":567,"tag":642,"props":1609,"children":1611},{"class":644,"line":1610},40,[1612,1617,1621,1625,1629,1633,1637,1641,1645,1649],{"type":567,"tag":642,"props":1613,"children":1614},{"style":667},[1615],{"type":573,"value":1616},"    Merge",{"type":567,"tag":642,"props":1618,"children":1619},{"style":661},[1620],{"type":573,"value":664},{"type":567,"tag":642,"props":1622,"children":1623},{"style":667},[1624],{"type":573,"value":670},{"type":567,"tag":642,"props":1626,"children":1627},{"style":661},[1628],{"type":573,"value":675},{"type":567,"tag":642,"props":1630,"children":1631},{"style":667},[1632],{"type":573,"value":680},{"type":567,"tag":642,"props":1634,"children":1635},{"style":661},[1636],{"type":573,"value":675},{"type":567,"tag":642,"props":1638,"children":1639},{"style":667},[1640],{"type":573,"value":689},{"type":567,"tag":642,"props":1642,"children":1643},{"style":661},[1644],{"type":573,"value":675},{"type":567,"tag":642,"props":1646,"children":1647},{"style":667},[1648],{"type":573,"value":698},{"type":567,"tag":642,"props":1650,"children":1651},{"style":661},[1652],{"type":573,"value":1341},{"type":567,"tag":642,"props":1654,"children":1656},{"class":644,"line":1655},41,[1657],{"type":567,"tag":642,"props":1658,"children":1659},{"emptyLinePlaceholder":1173},[1660],{"type":573,"value":1176},{"type":567,"tag":642,"props":1662,"children":1664},{"class":644,"line":1663},42,[1665],{"type":567,"tag":642,"props":1666,"children":1667},{"style":710},[1668],{"type":573,"value":1669},"# 测试\n",{"type":567,"tag":642,"props":1671,"children":1673},{"class":644,"line":1672},43,[1674,1679,1683,1688,1693,1697,1702,1706,1711,1715,1720,1724,1729,1733,1738,1742,1747,1751,1756],{"type":567,"tag":642,"props":1675,"children":1676},{"style":667},[1677],{"type":573,"value":1678},"a ",{"type":567,"tag":642,"props":1680,"children":1681},{"style":661},[1682],{"type":573,"value":727},{"type":567,"tag":642,"props":1684,"children":1685},{"style":661},[1686],{"type":573,"value":1687}," [",{"type":567,"tag":642,"props":1689,"children":1690},{"style":785},[1691],{"type":573,"value":1692},"8",{"type":567,"tag":642,"props":1694,"children":1695},{"style":661},[1696],{"type":573,"value":675},{"type":567,"tag":642,"props":1698,"children":1699},{"style":785},[1700],{"type":573,"value":1701}," 5",{"type":567,"tag":642,"props":1703,"children":1704},{"style":661},[1705],{"type":573,"value":675},{"type":567,"tag":642,"props":1707,"children":1708},{"style":785},[1709],{"type":573,"value":1710}," 6",{"type":567,"tag":642,"props":1712,"children":1713},{"style":661},[1714],{"type":573,"value":675},{"type":567,"tag":642,"props":1716,"children":1717},{"style":785},[1718],{"type":573,"value":1719}," 4",{"type":567,"tag":642,"props":1721,"children":1722},{"style":661},[1723],{"type":573,"value":675},{"type":567,"tag":642,"props":1725,"children":1726},{"style":785},[1727],{"type":573,"value":1728}," 3",{"type":567,"tag":642,"props":1730,"children":1731},{"style":661},[1732],{"type":573,"value":675},{"type":567,"tag":642,"props":1734,"children":1735},{"style":785},[1736],{"type":573,"value":1737}," 7",{"type":567,"tag":642,"props":1739,"children":1740},{"style":661},[1741],{"type":573,"value":675},{"type":567,"tag":642,"props":1743,"children":1744},{"style":785},[1745],{"type":573,"value":1746}," 10",{"type":567,"tag":642,"props":1748,"children":1749},{"style":661},[1750],{"type":573,"value":675},{"type":567,"tag":642,"props":1752,"children":1753},{"style":785},[1754],{"type":573,"value":1755}," 2",{"type":567,"tag":642,"props":1757,"children":1758},{"style":661},[1759],{"type":573,"value":1294},{"type":567,"tag":642,"props":1761,"children":1763},{"class":644,"line":1762},44,[1764,1769,1773,1777,1781,1786,1790,1794],{"type":567,"tag":642,"props":1765,"children":1766},{"style":667},[1767],{"type":573,"value":1768},"MergeSort",{"type":567,"tag":642,"props":1770,"children":1771},{"style":661},[1772],{"type":573,"value":664},{"type":567,"tag":642,"props":1774,"children":1775},{"style":667},[1776],{"type":573,"value":670},{"type":567,"tag":642,"props":1778,"children":1779},{"style":661},[1780],{"type":573,"value":675},{"type":567,"tag":642,"props":1782,"children":1783},{"style":785},[1784],{"type":573,"value":1785}," 0",{"type":567,"tag":642,"props":1787,"children":1788},{"style":661},[1789],{"type":573,"value":675},{"type":567,"tag":642,"props":1791,"children":1792},{"style":785},[1793],{"type":573,"value":1737},{"type":567,"tag":642,"props":1795,"children":1796},{"style":661},[1797],{"type":573,"value":1341},{"type":567,"tag":642,"props":1799,"children":1801},{"class":644,"line":1800},45,[1802],{"type":567,"tag":642,"props":1803,"children":1804},{"emptyLinePlaceholder":1173},[1805],{"type":573,"value":1176},{"type":567,"tag":642,"props":1807,"children":1809},{"class":644,"line":1808},46,[1810],{"type":567,"tag":642,"props":1811,"children":1812},{"style":710},[1813],{"type":573,"value":1814},"# 输出\n",{"type":567,"tag":642,"props":1816,"children":1818},{"class":644,"line":1817},47,[1819,1824,1828,1832,1837,1841,1846],{"type":567,"tag":642,"props":1820,"children":1821},{"style":785},[1822],{"type":573,"value":1823},"0",{"type":567,"tag":642,"props":1825,"children":1826},{"style":785},[1827],{"type":573,"value":1108},{"type":567,"tag":642,"props":1829,"children":1830},{"style":661},[1831],{"type":573,"value":1687},{"type":567,"tag":642,"props":1833,"children":1834},{"style":785},[1835],{"type":573,"value":1836},"5",{"type":567,"tag":642,"props":1838,"children":1839},{"style":661},[1840],{"type":573,"value":675},{"type":567,"tag":642,"props":1842,"children":1843},{"style":785},[1844],{"type":573,"value":1845}," 8",{"type":567,"tag":642,"props":1847,"children":1848},{"style":661},[1849],{"type":573,"value":1294},{"type":567,"tag":642,"props":1851,"children":1853},{"class":644,"line":1852},48,[1854,1859,1863,1867,1872,1876,1880],{"type":567,"tag":642,"props":1855,"children":1856},{"style":785},[1857],{"type":573,"value":1858},"2",{"type":567,"tag":642,"props":1860,"children":1861},{"style":785},[1862],{"type":573,"value":1728},{"type":567,"tag":642,"props":1864,"children":1865},{"style":661},[1866],{"type":573,"value":1687},{"type":567,"tag":642,"props":1868,"children":1869},{"style":785},[1870],{"type":573,"value":1871},"4",{"type":567,"tag":642,"props":1873,"children":1874},{"style":661},[1875],{"type":573,"value":675},{"type":567,"tag":642,"props":1877,"children":1878},{"style":785},[1879],{"type":573,"value":1710},{"type":567,"tag":642,"props":1881,"children":1882},{"style":661},[1883],{"type":573,"value":1294},{"type":567,"tag":642,"props":1885,"children":1887},{"class":644,"line":1886},49,[1888,1892,1896,1900,1904,1908,1912,1916,1920,1924,1928],{"type":567,"tag":642,"props":1889,"children":1890},{"style":785},[1891],{"type":573,"value":1823},{"type":567,"tag":642,"props":1893,"children":1894},{"style":785},[1895],{"type":573,"value":1728},{"type":567,"tag":642,"props":1897,"children":1898},{"style":661},[1899],{"type":573,"value":1687},{"type":567,"tag":642,"props":1901,"children":1902},{"style":785},[1903],{"type":573,"value":1871},{"type":567,"tag":642,"props":1905,"children":1906},{"style":661},[1907],{"type":573,"value":675},{"type":567,"tag":642,"props":1909,"children":1910},{"style":785},[1911],{"type":573,"value":1701},{"type":567,"tag":642,"props":1913,"children":1914},{"style":661},[1915],{"type":573,"value":675},{"type":567,"tag":642,"props":1917,"children":1918},{"style":785},[1919],{"type":573,"value":1710},{"type":567,"tag":642,"props":1921,"children":1922},{"style":661},[1923],{"type":573,"value":675},{"type":567,"tag":642,"props":1925,"children":1926},{"style":785},[1927],{"type":573,"value":1845},{"type":567,"tag":642,"props":1929,"children":1930},{"style":661},[1931],{"type":573,"value":1294},{"type":567,"tag":642,"props":1933,"children":1935},{"class":644,"line":1934},50,[1936,1940,1944,1948,1953,1957,1961],{"type":567,"tag":642,"props":1937,"children":1938},{"style":785},[1939],{"type":573,"value":1871},{"type":567,"tag":642,"props":1941,"children":1942},{"style":785},[1943],{"type":573,"value":1701},{"type":567,"tag":642,"props":1945,"children":1946},{"style":661},[1947],{"type":573,"value":1687},{"type":567,"tag":642,"props":1949,"children":1950},{"style":785},[1951],{"type":573,"value":1952},"3",{"type":567,"tag":642,"props":1954,"children":1955},{"style":661},[1956],{"type":573,"value":675},{"type":567,"tag":642,"props":1958,"children":1959},{"style":785},[1960],{"type":573,"value":1737},{"type":567,"tag":642,"props":1962,"children":1963},{"style":661},[1964],{"type":573,"value":1294},{"type":567,"tag":642,"props":1966,"children":1968},{"class":644,"line":1967},51,[1969,1974,1978,1982,1986,1990,1994],{"type":567,"tag":642,"props":1970,"children":1971},{"style":785},[1972],{"type":573,"value":1973},"6",{"type":567,"tag":642,"props":1975,"children":1976},{"style":785},[1977],{"type":573,"value":1737},{"type":567,"tag":642,"props":1979,"children":1980},{"style":661},[1981],{"type":573,"value":1687},{"type":567,"tag":642,"props":1983,"children":1984},{"style":785},[1985],{"type":573,"value":1858},{"type":567,"tag":642,"props":1987,"children":1988},{"style":661},[1989],{"type":573,"value":675},{"type":567,"tag":642,"props":1991,"children":1992},{"style":785},[1993],{"type":573,"value":1746},{"type":567,"tag":642,"props":1995,"children":1996},{"style":661},[1997],{"type":573,"value":1294},{"type":567,"tag":642,"props":1999,"children":2001},{"class":644,"line":2000},52,[2002,2006,2010,2014,2018,2022,2026,2030,2034,2038,2042],{"type":567,"tag":642,"props":2003,"children":2004},{"style":785},[2005],{"type":573,"value":1871},{"type":567,"tag":642,"props":2007,"children":2008},{"style":785},[2009],{"type":573,"value":1737},{"type":567,"tag":642,"props":2011,"children":2012},{"style":661},[2013],{"type":573,"value":1687},{"type":567,"tag":642,"props":2015,"children":2016},{"style":785},[2017],{"type":573,"value":1858},{"type":567,"tag":642,"props":2019,"children":2020},{"style":661},[2021],{"type":573,"value":675},{"type":567,"tag":642,"props":2023,"children":2024},{"style":785},[2025],{"type":573,"value":1728},{"type":567,"tag":642,"props":2027,"children":2028},{"style":661},[2029],{"type":573,"value":675},{"type":567,"tag":642,"props":2031,"children":2032},{"style":785},[2033],{"type":573,"value":1737},{"type":567,"tag":642,"props":2035,"children":2036},{"style":661},[2037],{"type":573,"value":675},{"type":567,"tag":642,"props":2039,"children":2040},{"style":785},[2041],{"type":573,"value":1746},{"type":567,"tag":642,"props":2043,"children":2044},{"style":661},[2045],{"type":573,"value":1294},{"type":567,"tag":642,"props":2047,"children":2049},{"class":644,"line":2048},53,[2050,2054,2058,2062,2066,2070,2074,2078,2082,2086,2090,2094,2098,2102,2106,2110,2114,2118,2122],{"type":567,"tag":642,"props":2051,"children":2052},{"style":785},[2053],{"type":573,"value":1823},{"type":567,"tag":642,"props":2055,"children":2056},{"style":785},[2057],{"type":573,"value":1737},{"type":567,"tag":642,"props":2059,"children":2060},{"style":661},[2061],{"type":573,"value":1687},{"type":567,"tag":642,"props":2063,"children":2064},{"style":785},[2065],{"type":573,"value":1858},{"type":567,"tag":642,"props":2067,"children":2068},{"style":661},[2069],{"type":573,"value":675},{"type":567,"tag":642,"props":2071,"children":2072},{"style":785},[2073],{"type":573,"value":1728},{"type":567,"tag":642,"props":2075,"children":2076},{"style":661},[2077],{"type":573,"value":675},{"type":567,"tag":642,"props":2079,"children":2080},{"style":785},[2081],{"type":573,"value":1719},{"type":567,"tag":642,"props":2083,"children":2084},{"style":661},[2085],{"type":573,"value":675},{"type":567,"tag":642,"props":2087,"children":2088},{"style":785},[2089],{"type":573,"value":1701},{"type":567,"tag":642,"props":2091,"children":2092},{"style":661},[2093],{"type":573,"value":675},{"type":567,"tag":642,"props":2095,"children":2096},{"style":785},[2097],{"type":573,"value":1710},{"type":567,"tag":642,"props":2099,"children":2100},{"style":661},[2101],{"type":573,"value":675},{"type":567,"tag":642,"props":2103,"children":2104},{"style":785},[2105],{"type":573,"value":1737},{"type":567,"tag":642,"props":2107,"children":2108},{"style":661},[2109],{"type":573,"value":675},{"type":567,"tag":642,"props":2111,"children":2112},{"style":785},[2113],{"type":573,"value":1845},{"type":567,"tag":642,"props":2115,"children":2116},{"style":661},[2117],{"type":573,"value":675},{"type":567,"tag":642,"props":2119,"children":2120},{"style":785},[2121],{"type":573,"value":1746},{"type":567,"tag":642,"props":2123,"children":2124},{"style":661},[2125],{"type":573,"value":1294},{"type":567,"tag":2127,"props":2128,"children":2129},"style",{},[2130],{"type":573,"value":2131},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":562,"searchDepth":744,"depth":744,"links":2133},[2134,2135,2136,2137],{"id":570,"depth":706,"text":570},{"id":592,"depth":706,"text":592},{"id":622,"depth":706,"text":622},{"id":627,"depth":706,"text":627},"markdown","content:1.algorithm:2.solution-methods:sort:4.merge-sort.md","content","1.algorithm/2.solution-methods/sort/4.merge-sort.md","md",[2144,2145],{"_path":24,"title":23,"description":562},{"_path":30,"title":29,"description":562},1717734300695]