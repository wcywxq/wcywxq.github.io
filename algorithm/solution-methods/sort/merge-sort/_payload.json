[{"data":1,"prerenderedAt":1908},["Reactive",2],{"navigation":3,"/algorithm/solution-methods/sort/merge-sort":463,"/algorithm/solution-methods/sort/merge-sort-surround":1905},[4,266,295,440,448],{"title":5,"_path":6,"children":7,"icon":265},"算法","/algorithm",[8,28],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30,"children":31},"Leetcode 力扣","/algorithm/leetcode",[32,38,51],{"title":33,"_path":34,"children":35},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[36],{"title":37,"_path":34},"刷题索引",{"title":39,"_path":40,"children":41},"剑指 offer","/algorithm/leetcode/sword-ofter",[42,45,48],{"title":43,"_path":44},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":46,"_path":47},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":49,"_path":50},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":52,"_path":53,"children":54},"主题单","/algorithm/leetcode/major",[55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262],{"title":56,"_path":57},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":59,"_path":60},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":62,"_path":63},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":65,"_path":66},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":68,"_path":69},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":71,"_path":72},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":74,"_path":75},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":77,"_path":78},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":80,"_path":81},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":83,"_path":84},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":86,"_path":87},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":89,"_path":90},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":92,"_path":93},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":95,"_path":96},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":98,"_path":99},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":101,"_path":102},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":104,"_path":105},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":107,"_path":108},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":110,"_path":111},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":113,"_path":114},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":116,"_path":117},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":119,"_path":120},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":122,"_path":123},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":125,"_path":126},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":128,"_path":129},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":131,"_path":132},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":134,"_path":135},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":137,"_path":138},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":140,"_path":141},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":143,"_path":144},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":146,"_path":147},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":149,"_path":150},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":152,"_path":153},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":155,"_path":156},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":158,"_path":159},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":161,"_path":162},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":164,"_path":165},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":167,"_path":168},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":170,"_path":171},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":173,"_path":174},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":176,"_path":177},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":179,"_path":180},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":182,"_path":183},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":185,"_path":186},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":188,"_path":189},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":191,"_path":192},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":194,"_path":195},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":197,"_path":198},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":200,"_path":201},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":203,"_path":204},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":206,"_path":207},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":209,"_path":210},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":212,"_path":213},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":215,"_path":216},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":218,"_path":219},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":221,"_path":222},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":224,"_path":225},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":227,"_path":228},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":230,"_path":231},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":233,"_path":234},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":236,"_path":237},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":239,"_path":240},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":242,"_path":243},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":245,"_path":246},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":248,"_path":249},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":251,"_path":252},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":254,"_path":255},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":257,"_path":258},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":260,"_path":261},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":263,"_path":264},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":267,"_path":268,"children":269,"icon":294},"前端八股文","/frontend-endorsement",[270,281],{"title":271,"_path":272,"children":273},"构建工具","/frontend-endorsement/build-tools",[274],{"title":275,"_path":276,"children":277},"Webpack","/frontend-endorsement/build-tools/webpack",[278],{"title":279,"_path":280},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":282,"_path":283,"children":284},"Html","/frontend-endorsement/html",[285,288,291],{"title":286,"_path":287},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":289,"_path":290},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":292,"_path":293},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":296,"_path":297,"children":298,"icon":439},"前端代码考核","/frontend-code-assessment",[299,348,432],{"title":300,"_path":301,"children":302},"源码实现","/frontend-code-assessment/source",[303,328,341],{"title":304,"_path":305,"children":306},"原生 api","/frontend-code-assessment/source/native-api",[307,310,313,316,319,322,325],{"title":308,"_path":309},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":311,"_path":312},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":314,"_path":315},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":317,"_path":318},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":320,"_path":321},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":323,"_path":324},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":326,"_path":327},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":329,"_path":330,"children":331},"数组 Array","/frontend-code-assessment/source/array",[332,335,338],{"title":333,"_path":334},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":336,"_path":337},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":339,"_path":340},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":342,"_path":343,"children":344},"字符串 String","/frontend-code-assessment/source/string",[345],{"title":346,"_path":347},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":349,"_path":350,"children":351},"业务场景","/frontend-code-assessment/scene",[352,374,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429],{"title":353,"_path":354,"children":355},"Promise","/frontend-code-assessment/scene/promise",[356,359,362,365,368,371],{"title":357,"_path":358},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":360,"_path":361},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":363,"_path":364},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":366,"_path":367},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":369,"_path":370},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":372,"_path":373},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":375,"_path":376,"children":377},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[378],{"title":379,"_path":380},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":382,"_path":383},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":385,"_path":386},"倒计时","/frontend-code-assessment/scene/countdown",{"title":388,"_path":389},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":391,"_path":392},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":394,"_path":395},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":397,"_path":398},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":400,"_path":401},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":403,"_path":404},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":406,"_path":407},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":409,"_path":410},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":412,"_path":413},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":415,"_path":416},"随机数","/frontend-code-assessment/scene/random-number",{"title":418,"_path":419},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":421,"_path":422},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":424,"_path":425},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":427,"_path":428},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":430,"_path":431},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":433,"_path":434,"children":435},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[436],{"title":437,"_path":438},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":441,"_path":442,"children":443,"icon":447},"项目","/pro",[444],{"title":445,"_path":446},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":449,"_path":450,"children":451,"icon":462},"后端语言","/backend-languages",[452],{"title":453,"_path":454,"children":455},"Python","/backend-languages/python",[456,459],{"title":457,"_path":458},"基础","/backend-languages/python/base",{"title":460,"_path":461},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":27,"_dir":464,"_draft":465,"_partial":465,"_locale":466,"title":26,"description":466,"body":467,"_type":1900,"_id":1901,"_source":1902,"_file":1903,"_extension":1904},"sort",false,"",{"type":468,"children":469,"toc":1894},"root",[470,478,484,489,494,499,524,529,534,1888],{"type":471,"tag":472,"props":473,"children":475},"element","h2",{"id":474},"简介",[476],{"type":477,"value":474},"text",{"type":471,"tag":479,"props":480,"children":481},"p",{},[482],{"type":477,"value":483},"归并排序就是利用分冶的思想，采用递归的形式，对元素进行排序",{"type":471,"tag":479,"props":485,"children":486},{},[487],{"type":477,"value":488},"当我们有两个长度为 n 的有序数组时，可以通过两个指针的移动，在 O(n) 的时间复杂度内，快速将它们合并成一个有序数组。而这两个长度为 n 的有序数组，也是可以通过两个 n/2 的有序数组合并得来。因此，只要对数组不断进行分冶，就可以把一个无序数组变成有序",{"type":471,"tag":479,"props":490,"children":491},{},[492],{"type":477,"value":493},"由于在数组拆分时用到了递归，而对数组组合的过程用到了合并，因此命名：归并排序",{"type":471,"tag":472,"props":495,"children":497},{"id":496},"步骤",[498],{"type":477,"value":496},{"type":471,"tag":500,"props":501,"children":502},"ul",{},[503,509,514,519],{"type":471,"tag":504,"props":505,"children":506},"li",{},[507],{"type":477,"value":508},"首先将数组拆分成左右两部分",{"type":471,"tag":504,"props":510,"children":511},{},[512],{"type":477,"value":513},"对于左边部分，继续拆分成左右两部分，直到无法拆分，此时将最小单元左侧部分保持有序，最小单元右侧部分也保持有序，然后对排序后的这两部分进行合并",{"type":471,"tag":504,"props":515,"children":516},{},[517],{"type":477,"value":518},"对于右侧部分，同左边部分一样拆分和合并",{"type":471,"tag":504,"props":520,"children":521},{},[522],{"type":477,"value":523},"最后合并左右两部分的数组",{"type":471,"tag":472,"props":525,"children":527},{"id":526},"时间复杂度和空间复杂度",[528],{"type":477,"value":526},{"type":471,"tag":472,"props":530,"children":532},{"id":531},"实现",[533],{"type":477,"value":531},{"type":471,"tag":535,"props":536,"children":540},"pre",{"className":537,"code":538,"language":539,"meta":466,"style":466},"language-py shiki shiki-themes slack-ochin slack-ochin ayu-dark","def Merge(a, start, mid, end):\n    # 临时列表\n    tmp = []\n    # 两个游标，分别从两段区间的起点开始\n    l = start\n    r = mid + 1\n    # 当两个区间都未到达区间右端点时\n    while l \u003C= mid and r \u003C= end:\n        # 判断，将小的值插入临时列表\n        if a[l] \u003C= a[r]:\n            tmp.append(a[l])\n            # 对相应游标进行自增\n            l += 1\n        else:\n            tmp.append(a[r])\n            # 对相应游标进行自增\n            r += 1\n    # 当跳出循环时，将剩余的部分直接塞入临时列表\n    tmp.extend(a[l : mid + 1])\n    tmp.extend(a[r : end + 1])\n\n    # 把临时列表的值，拷贝回原列表 a\n    for i in range(start, end + 1):\n        a[i] = tmp[i - start]\n    # 打印本次合并结果\n    print(start, end, tmp)\n\n# 递归函数\ndef MergeSort(a, start, end):\n    # 若待排序元素只有一个则直接返回\n    if start == end:\n        return\n    # 否则计算出中点 mid\n    mid = (start + end) // 2\n    # 对左端点 start 到中点 mid 的元素执行一次归并排序\n    MergeSort(a, start, mid)\n    # 对中点 mid + 1 到右端点 end 的元素执行一次归并排序\n    MergeSort(a, mid + 1, end)\n    # 以上两次归并排序产生了两个有序数组，最后调用 Merge 进行归并排序\n    Merge(a, start, mid, end)\n\n# 测试\na = [8, 5, 6, 4, 3, 7, 10, 2]\nMergeSort(a, 0, 7)\n\n# 输出\n0 1 [5, 8]\n2 3 [4, 6]\n0 3 [4, 5, 6, 8]\n4 5 [3, 7]\n6 7 [2, 10]\n4 7 [2, 3, 7, 10]\n0 7 [2, 3, 4, 5, 6, 7, 8, 10]\n","py",[541],{"type":471,"tag":542,"props":543,"children":544},"code",{"__ignoreMap":466},[545,609,619,639,648,666,695,704,751,760,787,812,821,839,852,873,881,898,907,953,995,1005,1014,1069,1097,1106,1136,1144,1153,1194,1203,1230,1239,1248,1285,1294,1325,1334,1371,1380,1417,1425,1434,1525,1560,1568,1577,1612,1646,1694,1727,1760,1808],{"type":471,"tag":546,"props":547,"children":550},"span",{"class":548,"line":549},"line",1,[551,557,563,569,575,581,586,590,595,599,604],{"type":471,"tag":546,"props":552,"children":554},{"style":553},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[555],{"type":477,"value":556},"def",{"type":471,"tag":546,"props":558,"children":560},{"style":559},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[561],{"type":477,"value":562}," Merge",{"type":471,"tag":546,"props":564,"children":566},{"style":565},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[567],{"type":477,"value":568},"(",{"type":471,"tag":546,"props":570,"children":572},{"style":571},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[573],{"type":477,"value":574},"a",{"type":471,"tag":546,"props":576,"children":578},{"style":577},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[579],{"type":477,"value":580},",",{"type":471,"tag":546,"props":582,"children":583},{"style":571},[584],{"type":477,"value":585}," start",{"type":471,"tag":546,"props":587,"children":588},{"style":577},[589],{"type":477,"value":580},{"type":471,"tag":546,"props":591,"children":592},{"style":571},[593],{"type":477,"value":594}," mid",{"type":471,"tag":546,"props":596,"children":597},{"style":577},[598],{"type":477,"value":580},{"type":471,"tag":546,"props":600,"children":601},{"style":571},[602],{"type":477,"value":603}," end",{"type":471,"tag":546,"props":605,"children":606},{"style":565},[607],{"type":477,"value":608},"):\n",{"type":471,"tag":546,"props":610,"children":612},{"class":548,"line":611},2,[613],{"type":471,"tag":546,"props":614,"children":616},{"style":615},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[617],{"type":477,"value":618},"    # 临时列表\n",{"type":471,"tag":546,"props":620,"children":622},{"class":548,"line":621},3,[623,628,634],{"type":471,"tag":546,"props":624,"children":625},{"style":565},[626],{"type":477,"value":627},"    tmp ",{"type":471,"tag":546,"props":629,"children":631},{"style":630},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[632],{"type":477,"value":633},"=",{"type":471,"tag":546,"props":635,"children":636},{"style":565},[637],{"type":477,"value":638}," []\n",{"type":471,"tag":546,"props":640,"children":642},{"class":548,"line":641},4,[643],{"type":471,"tag":546,"props":644,"children":645},{"style":615},[646],{"type":477,"value":647},"    # 两个游标，分别从两段区间的起点开始\n",{"type":471,"tag":546,"props":649,"children":651},{"class":548,"line":650},5,[652,657,661],{"type":471,"tag":546,"props":653,"children":654},{"style":565},[655],{"type":477,"value":656},"    l ",{"type":471,"tag":546,"props":658,"children":659},{"style":630},[660],{"type":477,"value":633},{"type":471,"tag":546,"props":662,"children":663},{"style":565},[664],{"type":477,"value":665}," start\n",{"type":471,"tag":546,"props":667,"children":669},{"class":548,"line":668},6,[670,675,679,684,689],{"type":471,"tag":546,"props":671,"children":672},{"style":565},[673],{"type":477,"value":674},"    r ",{"type":471,"tag":546,"props":676,"children":677},{"style":630},[678],{"type":477,"value":633},{"type":471,"tag":546,"props":680,"children":681},{"style":565},[682],{"type":477,"value":683}," mid ",{"type":471,"tag":546,"props":685,"children":686},{"style":630},[687],{"type":477,"value":688},"+",{"type":471,"tag":546,"props":690,"children":692},{"style":691},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[693],{"type":477,"value":694}," 1\n",{"type":471,"tag":546,"props":696,"children":698},{"class":548,"line":697},7,[699],{"type":471,"tag":546,"props":700,"children":701},{"style":615},[702],{"type":477,"value":703},"    # 当两个区间都未到达区间右端点时\n",{"type":471,"tag":546,"props":705,"children":707},{"class":548,"line":706},8,[708,714,719,724,728,733,738,742,746],{"type":471,"tag":546,"props":709,"children":711},{"style":710},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[712],{"type":477,"value":713},"    while",{"type":471,"tag":546,"props":715,"children":716},{"style":565},[717],{"type":477,"value":718}," l ",{"type":471,"tag":546,"props":720,"children":721},{"style":630},[722],{"type":477,"value":723},"\u003C=",{"type":471,"tag":546,"props":725,"children":726},{"style":565},[727],{"type":477,"value":683},{"type":471,"tag":546,"props":729,"children":730},{"style":630},[731],{"type":477,"value":732},"and",{"type":471,"tag":546,"props":734,"children":735},{"style":565},[736],{"type":477,"value":737}," r ",{"type":471,"tag":546,"props":739,"children":740},{"style":630},[741],{"type":477,"value":723},{"type":471,"tag":546,"props":743,"children":744},{"style":565},[745],{"type":477,"value":603},{"type":471,"tag":546,"props":747,"children":748},{"style":577},[749],{"type":477,"value":750},":\n",{"type":471,"tag":546,"props":752,"children":754},{"class":548,"line":753},9,[755],{"type":471,"tag":546,"props":756,"children":757},{"style":615},[758],{"type":477,"value":759},"        # 判断，将小的值插入临时列表\n",{"type":471,"tag":546,"props":761,"children":763},{"class":548,"line":762},10,[764,769,774,778,783],{"type":471,"tag":546,"props":765,"children":766},{"style":710},[767],{"type":477,"value":768},"        if",{"type":471,"tag":546,"props":770,"children":771},{"style":565},[772],{"type":477,"value":773}," a[l] ",{"type":471,"tag":546,"props":775,"children":776},{"style":630},[777],{"type":477,"value":723},{"type":471,"tag":546,"props":779,"children":780},{"style":565},[781],{"type":477,"value":782}," a[r]",{"type":471,"tag":546,"props":784,"children":785},{"style":577},[786],{"type":477,"value":750},{"type":471,"tag":546,"props":788,"children":790},{"class":548,"line":789},11,[791,796,801,807],{"type":471,"tag":546,"props":792,"children":793},{"style":565},[794],{"type":477,"value":795},"            tmp",{"type":471,"tag":546,"props":797,"children":798},{"style":577},[799],{"type":477,"value":800},".",{"type":471,"tag":546,"props":802,"children":804},{"style":803},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#FFB454",[805],{"type":477,"value":806},"append",{"type":471,"tag":546,"props":808,"children":809},{"style":565},[810],{"type":477,"value":811},"(a[l])\n",{"type":471,"tag":546,"props":813,"children":815},{"class":548,"line":814},12,[816],{"type":471,"tag":546,"props":817,"children":818},{"style":615},[819],{"type":477,"value":820},"            # 对相应游标进行自增\n",{"type":471,"tag":546,"props":822,"children":824},{"class":548,"line":823},13,[825,830,835],{"type":471,"tag":546,"props":826,"children":827},{"style":565},[828],{"type":477,"value":829},"            l ",{"type":471,"tag":546,"props":831,"children":832},{"style":630},[833],{"type":477,"value":834},"+=",{"type":471,"tag":546,"props":836,"children":837},{"style":691},[838],{"type":477,"value":694},{"type":471,"tag":546,"props":840,"children":842},{"class":548,"line":841},14,[843,848],{"type":471,"tag":546,"props":844,"children":845},{"style":710},[846],{"type":477,"value":847},"        else",{"type":471,"tag":546,"props":849,"children":850},{"style":577},[851],{"type":477,"value":750},{"type":471,"tag":546,"props":853,"children":855},{"class":548,"line":854},15,[856,860,864,868],{"type":471,"tag":546,"props":857,"children":858},{"style":565},[859],{"type":477,"value":795},{"type":471,"tag":546,"props":861,"children":862},{"style":577},[863],{"type":477,"value":800},{"type":471,"tag":546,"props":865,"children":866},{"style":803},[867],{"type":477,"value":806},{"type":471,"tag":546,"props":869,"children":870},{"style":565},[871],{"type":477,"value":872},"(a[r])\n",{"type":471,"tag":546,"props":874,"children":876},{"class":548,"line":875},16,[877],{"type":471,"tag":546,"props":878,"children":879},{"style":615},[880],{"type":477,"value":820},{"type":471,"tag":546,"props":882,"children":884},{"class":548,"line":883},17,[885,890,894],{"type":471,"tag":546,"props":886,"children":887},{"style":565},[888],{"type":477,"value":889},"            r ",{"type":471,"tag":546,"props":891,"children":892},{"style":630},[893],{"type":477,"value":834},{"type":471,"tag":546,"props":895,"children":896},{"style":691},[897],{"type":477,"value":694},{"type":471,"tag":546,"props":899,"children":901},{"class":548,"line":900},18,[902],{"type":471,"tag":546,"props":903,"children":904},{"style":615},[905],{"type":477,"value":906},"    # 当跳出循环时，将剩余的部分直接塞入临时列表\n",{"type":471,"tag":546,"props":908,"children":910},{"class":548,"line":909},19,[911,916,920,925,930,935,939,943,948],{"type":471,"tag":546,"props":912,"children":913},{"style":565},[914],{"type":477,"value":915},"    tmp",{"type":471,"tag":546,"props":917,"children":918},{"style":577},[919],{"type":477,"value":800},{"type":471,"tag":546,"props":921,"children":922},{"style":803},[923],{"type":477,"value":924},"extend",{"type":471,"tag":546,"props":926,"children":927},{"style":565},[928],{"type":477,"value":929},"(a[l ",{"type":471,"tag":546,"props":931,"children":932},{"style":577},[933],{"type":477,"value":934},":",{"type":471,"tag":546,"props":936,"children":937},{"style":565},[938],{"type":477,"value":683},{"type":471,"tag":546,"props":940,"children":941},{"style":630},[942],{"type":477,"value":688},{"type":471,"tag":546,"props":944,"children":945},{"style":691},[946],{"type":477,"value":947}," 1",{"type":471,"tag":546,"props":949,"children":950},{"style":565},[951],{"type":477,"value":952},"])\n",{"type":471,"tag":546,"props":954,"children":956},{"class":548,"line":955},20,[957,961,965,969,974,978,983,987,991],{"type":471,"tag":546,"props":958,"children":959},{"style":565},[960],{"type":477,"value":915},{"type":471,"tag":546,"props":962,"children":963},{"style":577},[964],{"type":477,"value":800},{"type":471,"tag":546,"props":966,"children":967},{"style":803},[968],{"type":477,"value":924},{"type":471,"tag":546,"props":970,"children":971},{"style":565},[972],{"type":477,"value":973},"(a[r ",{"type":471,"tag":546,"props":975,"children":976},{"style":577},[977],{"type":477,"value":934},{"type":471,"tag":546,"props":979,"children":980},{"style":565},[981],{"type":477,"value":982}," end ",{"type":471,"tag":546,"props":984,"children":985},{"style":630},[986],{"type":477,"value":688},{"type":471,"tag":546,"props":988,"children":989},{"style":691},[990],{"type":477,"value":947},{"type":471,"tag":546,"props":992,"children":993},{"style":565},[994],{"type":477,"value":952},{"type":471,"tag":546,"props":996,"children":998},{"class":548,"line":997},21,[999],{"type":471,"tag":546,"props":1000,"children":1002},{"emptyLinePlaceholder":1001},true,[1003],{"type":477,"value":1004},"\n",{"type":471,"tag":546,"props":1006,"children":1008},{"class":548,"line":1007},22,[1009],{"type":471,"tag":546,"props":1010,"children":1011},{"style":615},[1012],{"type":477,"value":1013},"    # 把临时列表的值，拷贝回原列表 a\n",{"type":471,"tag":546,"props":1015,"children":1017},{"class":548,"line":1016},23,[1018,1023,1028,1033,1039,1044,1048,1052,1056,1060,1065],{"type":471,"tag":546,"props":1019,"children":1020},{"style":710},[1021],{"type":477,"value":1022},"    for",{"type":471,"tag":546,"props":1024,"children":1025},{"style":565},[1026],{"type":477,"value":1027}," i ",{"type":471,"tag":546,"props":1029,"children":1030},{"style":710},[1031],{"type":477,"value":1032},"in",{"type":471,"tag":546,"props":1034,"children":1036},{"style":1035},"--shiki-light:#1AB394;--shiki-default:#1AB394;--shiki-dark:#F07178",[1037],{"type":477,"value":1038}," range",{"type":471,"tag":546,"props":1040,"children":1041},{"style":565},[1042],{"type":477,"value":1043},"(start",{"type":471,"tag":546,"props":1045,"children":1046},{"style":577},[1047],{"type":477,"value":580},{"type":471,"tag":546,"props":1049,"children":1050},{"style":565},[1051],{"type":477,"value":982},{"type":471,"tag":546,"props":1053,"children":1054},{"style":630},[1055],{"type":477,"value":688},{"type":471,"tag":546,"props":1057,"children":1058},{"style":691},[1059],{"type":477,"value":947},{"type":471,"tag":546,"props":1061,"children":1062},{"style":565},[1063],{"type":477,"value":1064},")",{"type":471,"tag":546,"props":1066,"children":1067},{"style":577},[1068],{"type":477,"value":750},{"type":471,"tag":546,"props":1070,"children":1072},{"class":548,"line":1071},24,[1073,1078,1082,1087,1092],{"type":471,"tag":546,"props":1074,"children":1075},{"style":565},[1076],{"type":477,"value":1077},"        a[i] ",{"type":471,"tag":546,"props":1079,"children":1080},{"style":630},[1081],{"type":477,"value":633},{"type":471,"tag":546,"props":1083,"children":1084},{"style":565},[1085],{"type":477,"value":1086}," tmp[i ",{"type":471,"tag":546,"props":1088,"children":1089},{"style":630},[1090],{"type":477,"value":1091},"-",{"type":471,"tag":546,"props":1093,"children":1094},{"style":565},[1095],{"type":477,"value":1096}," start]\n",{"type":471,"tag":546,"props":1098,"children":1100},{"class":548,"line":1099},25,[1101],{"type":471,"tag":546,"props":1102,"children":1103},{"style":615},[1104],{"type":477,"value":1105},"    # 打印本次合并结果\n",{"type":471,"tag":546,"props":1107,"children":1109},{"class":548,"line":1108},26,[1110,1115,1119,1123,1127,1131],{"type":471,"tag":546,"props":1111,"children":1112},{"style":1035},[1113],{"type":477,"value":1114},"    print",{"type":471,"tag":546,"props":1116,"children":1117},{"style":565},[1118],{"type":477,"value":1043},{"type":471,"tag":546,"props":1120,"children":1121},{"style":577},[1122],{"type":477,"value":580},{"type":471,"tag":546,"props":1124,"children":1125},{"style":565},[1126],{"type":477,"value":603},{"type":471,"tag":546,"props":1128,"children":1129},{"style":577},[1130],{"type":477,"value":580},{"type":471,"tag":546,"props":1132,"children":1133},{"style":565},[1134],{"type":477,"value":1135}," tmp)\n",{"type":471,"tag":546,"props":1137,"children":1139},{"class":548,"line":1138},27,[1140],{"type":471,"tag":546,"props":1141,"children":1142},{"emptyLinePlaceholder":1001},[1143],{"type":477,"value":1004},{"type":471,"tag":546,"props":1145,"children":1147},{"class":548,"line":1146},28,[1148],{"type":471,"tag":546,"props":1149,"children":1150},{"style":615},[1151],{"type":477,"value":1152},"# 递归函数\n",{"type":471,"tag":546,"props":1154,"children":1156},{"class":548,"line":1155},29,[1157,1161,1166,1170,1174,1178,1182,1186,1190],{"type":471,"tag":546,"props":1158,"children":1159},{"style":553},[1160],{"type":477,"value":556},{"type":471,"tag":546,"props":1162,"children":1163},{"style":559},[1164],{"type":477,"value":1165}," MergeSort",{"type":471,"tag":546,"props":1167,"children":1168},{"style":565},[1169],{"type":477,"value":568},{"type":471,"tag":546,"props":1171,"children":1172},{"style":571},[1173],{"type":477,"value":574},{"type":471,"tag":546,"props":1175,"children":1176},{"style":577},[1177],{"type":477,"value":580},{"type":471,"tag":546,"props":1179,"children":1180},{"style":571},[1181],{"type":477,"value":585},{"type":471,"tag":546,"props":1183,"children":1184},{"style":577},[1185],{"type":477,"value":580},{"type":471,"tag":546,"props":1187,"children":1188},{"style":571},[1189],{"type":477,"value":603},{"type":471,"tag":546,"props":1191,"children":1192},{"style":565},[1193],{"type":477,"value":608},{"type":471,"tag":546,"props":1195,"children":1197},{"class":548,"line":1196},30,[1198],{"type":471,"tag":546,"props":1199,"children":1200},{"style":615},[1201],{"type":477,"value":1202},"    # 若待排序元素只有一个则直接返回\n",{"type":471,"tag":546,"props":1204,"children":1206},{"class":548,"line":1205},31,[1207,1212,1217,1222,1226],{"type":471,"tag":546,"props":1208,"children":1209},{"style":710},[1210],{"type":477,"value":1211},"    if",{"type":471,"tag":546,"props":1213,"children":1214},{"style":565},[1215],{"type":477,"value":1216}," start ",{"type":471,"tag":546,"props":1218,"children":1219},{"style":630},[1220],{"type":477,"value":1221},"==",{"type":471,"tag":546,"props":1223,"children":1224},{"style":565},[1225],{"type":477,"value":603},{"type":471,"tag":546,"props":1227,"children":1228},{"style":577},[1229],{"type":477,"value":750},{"type":471,"tag":546,"props":1231,"children":1233},{"class":548,"line":1232},32,[1234],{"type":471,"tag":546,"props":1235,"children":1236},{"style":710},[1237],{"type":477,"value":1238},"        return\n",{"type":471,"tag":546,"props":1240,"children":1242},{"class":548,"line":1241},33,[1243],{"type":471,"tag":546,"props":1244,"children":1245},{"style":615},[1246],{"type":477,"value":1247},"    # 否则计算出中点 mid\n",{"type":471,"tag":546,"props":1249,"children":1251},{"class":548,"line":1250},34,[1252,1257,1261,1266,1270,1275,1280],{"type":471,"tag":546,"props":1253,"children":1254},{"style":565},[1255],{"type":477,"value":1256},"    mid ",{"type":471,"tag":546,"props":1258,"children":1259},{"style":630},[1260],{"type":477,"value":633},{"type":471,"tag":546,"props":1262,"children":1263},{"style":565},[1264],{"type":477,"value":1265}," (start ",{"type":471,"tag":546,"props":1267,"children":1268},{"style":630},[1269],{"type":477,"value":688},{"type":471,"tag":546,"props":1271,"children":1272},{"style":565},[1273],{"type":477,"value":1274}," end) ",{"type":471,"tag":546,"props":1276,"children":1277},{"style":630},[1278],{"type":477,"value":1279},"//",{"type":471,"tag":546,"props":1281,"children":1282},{"style":691},[1283],{"type":477,"value":1284}," 2\n",{"type":471,"tag":546,"props":1286,"children":1288},{"class":548,"line":1287},35,[1289],{"type":471,"tag":546,"props":1290,"children":1291},{"style":615},[1292],{"type":477,"value":1293},"    # 对左端点 start 到中点 mid 的元素执行一次归并排序\n",{"type":471,"tag":546,"props":1295,"children":1297},{"class":548,"line":1296},36,[1298,1303,1308,1312,1316,1320],{"type":471,"tag":546,"props":1299,"children":1300},{"style":803},[1301],{"type":477,"value":1302},"    MergeSort",{"type":471,"tag":546,"props":1304,"children":1305},{"style":565},[1306],{"type":477,"value":1307},"(a",{"type":471,"tag":546,"props":1309,"children":1310},{"style":577},[1311],{"type":477,"value":580},{"type":471,"tag":546,"props":1313,"children":1314},{"style":565},[1315],{"type":477,"value":585},{"type":471,"tag":546,"props":1317,"children":1318},{"style":577},[1319],{"type":477,"value":580},{"type":471,"tag":546,"props":1321,"children":1322},{"style":565},[1323],{"type":477,"value":1324}," mid)\n",{"type":471,"tag":546,"props":1326,"children":1328},{"class":548,"line":1327},37,[1329],{"type":471,"tag":546,"props":1330,"children":1331},{"style":615},[1332],{"type":477,"value":1333},"    # 对中点 mid + 1 到右端点 end 的元素执行一次归并排序\n",{"type":471,"tag":546,"props":1335,"children":1337},{"class":548,"line":1336},38,[1338,1342,1346,1350,1354,1358,1362,1366],{"type":471,"tag":546,"props":1339,"children":1340},{"style":803},[1341],{"type":477,"value":1302},{"type":471,"tag":546,"props":1343,"children":1344},{"style":565},[1345],{"type":477,"value":1307},{"type":471,"tag":546,"props":1347,"children":1348},{"style":577},[1349],{"type":477,"value":580},{"type":471,"tag":546,"props":1351,"children":1352},{"style":565},[1353],{"type":477,"value":683},{"type":471,"tag":546,"props":1355,"children":1356},{"style":630},[1357],{"type":477,"value":688},{"type":471,"tag":546,"props":1359,"children":1360},{"style":691},[1361],{"type":477,"value":947},{"type":471,"tag":546,"props":1363,"children":1364},{"style":577},[1365],{"type":477,"value":580},{"type":471,"tag":546,"props":1367,"children":1368},{"style":565},[1369],{"type":477,"value":1370}," end)\n",{"type":471,"tag":546,"props":1372,"children":1374},{"class":548,"line":1373},39,[1375],{"type":471,"tag":546,"props":1376,"children":1377},{"style":615},[1378],{"type":477,"value":1379},"    # 以上两次归并排序产生了两个有序数组，最后调用 Merge 进行归并排序\n",{"type":471,"tag":546,"props":1381,"children":1383},{"class":548,"line":1382},40,[1384,1389,1393,1397,1401,1405,1409,1413],{"type":471,"tag":546,"props":1385,"children":1386},{"style":803},[1387],{"type":477,"value":1388},"    Merge",{"type":471,"tag":546,"props":1390,"children":1391},{"style":565},[1392],{"type":477,"value":1307},{"type":471,"tag":546,"props":1394,"children":1395},{"style":577},[1396],{"type":477,"value":580},{"type":471,"tag":546,"props":1398,"children":1399},{"style":565},[1400],{"type":477,"value":585},{"type":471,"tag":546,"props":1402,"children":1403},{"style":577},[1404],{"type":477,"value":580},{"type":471,"tag":546,"props":1406,"children":1407},{"style":565},[1408],{"type":477,"value":594},{"type":471,"tag":546,"props":1410,"children":1411},{"style":577},[1412],{"type":477,"value":580},{"type":471,"tag":546,"props":1414,"children":1415},{"style":565},[1416],{"type":477,"value":1370},{"type":471,"tag":546,"props":1418,"children":1420},{"class":548,"line":1419},41,[1421],{"type":471,"tag":546,"props":1422,"children":1423},{"emptyLinePlaceholder":1001},[1424],{"type":477,"value":1004},{"type":471,"tag":546,"props":1426,"children":1428},{"class":548,"line":1427},42,[1429],{"type":471,"tag":546,"props":1430,"children":1431},{"style":615},[1432],{"type":477,"value":1433},"# 测试\n",{"type":471,"tag":546,"props":1435,"children":1437},{"class":548,"line":1436},43,[1438,1443,1447,1452,1457,1461,1466,1470,1475,1479,1484,1488,1493,1497,1502,1506,1511,1515,1520],{"type":471,"tag":546,"props":1439,"children":1440},{"style":565},[1441],{"type":477,"value":1442},"a ",{"type":471,"tag":546,"props":1444,"children":1445},{"style":630},[1446],{"type":477,"value":633},{"type":471,"tag":546,"props":1448,"children":1449},{"style":565},[1450],{"type":477,"value":1451}," [",{"type":471,"tag":546,"props":1453,"children":1454},{"style":691},[1455],{"type":477,"value":1456},"8",{"type":471,"tag":546,"props":1458,"children":1459},{"style":577},[1460],{"type":477,"value":580},{"type":471,"tag":546,"props":1462,"children":1463},{"style":691},[1464],{"type":477,"value":1465}," 5",{"type":471,"tag":546,"props":1467,"children":1468},{"style":577},[1469],{"type":477,"value":580},{"type":471,"tag":546,"props":1471,"children":1472},{"style":691},[1473],{"type":477,"value":1474}," 6",{"type":471,"tag":546,"props":1476,"children":1477},{"style":577},[1478],{"type":477,"value":580},{"type":471,"tag":546,"props":1480,"children":1481},{"style":691},[1482],{"type":477,"value":1483}," 4",{"type":471,"tag":546,"props":1485,"children":1486},{"style":577},[1487],{"type":477,"value":580},{"type":471,"tag":546,"props":1489,"children":1490},{"style":691},[1491],{"type":477,"value":1492}," 3",{"type":471,"tag":546,"props":1494,"children":1495},{"style":577},[1496],{"type":477,"value":580},{"type":471,"tag":546,"props":1498,"children":1499},{"style":691},[1500],{"type":477,"value":1501}," 7",{"type":471,"tag":546,"props":1503,"children":1504},{"style":577},[1505],{"type":477,"value":580},{"type":471,"tag":546,"props":1507,"children":1508},{"style":691},[1509],{"type":477,"value":1510}," 10",{"type":471,"tag":546,"props":1512,"children":1513},{"style":577},[1514],{"type":477,"value":580},{"type":471,"tag":546,"props":1516,"children":1517},{"style":691},[1518],{"type":477,"value":1519}," 2",{"type":471,"tag":546,"props":1521,"children":1522},{"style":565},[1523],{"type":477,"value":1524},"]\n",{"type":471,"tag":546,"props":1526,"children":1528},{"class":548,"line":1527},44,[1529,1534,1538,1542,1547,1551,1555],{"type":471,"tag":546,"props":1530,"children":1531},{"style":803},[1532],{"type":477,"value":1533},"MergeSort",{"type":471,"tag":546,"props":1535,"children":1536},{"style":565},[1537],{"type":477,"value":1307},{"type":471,"tag":546,"props":1539,"children":1540},{"style":577},[1541],{"type":477,"value":580},{"type":471,"tag":546,"props":1543,"children":1544},{"style":691},[1545],{"type":477,"value":1546}," 0",{"type":471,"tag":546,"props":1548,"children":1549},{"style":577},[1550],{"type":477,"value":580},{"type":471,"tag":546,"props":1552,"children":1553},{"style":691},[1554],{"type":477,"value":1501},{"type":471,"tag":546,"props":1556,"children":1557},{"style":565},[1558],{"type":477,"value":1559},")\n",{"type":471,"tag":546,"props":1561,"children":1563},{"class":548,"line":1562},45,[1564],{"type":471,"tag":546,"props":1565,"children":1566},{"emptyLinePlaceholder":1001},[1567],{"type":477,"value":1004},{"type":471,"tag":546,"props":1569,"children":1571},{"class":548,"line":1570},46,[1572],{"type":471,"tag":546,"props":1573,"children":1574},{"style":615},[1575],{"type":477,"value":1576},"# 输出\n",{"type":471,"tag":546,"props":1578,"children":1580},{"class":548,"line":1579},47,[1581,1586,1590,1594,1599,1603,1608],{"type":471,"tag":546,"props":1582,"children":1583},{"style":691},[1584],{"type":477,"value":1585},"0",{"type":471,"tag":546,"props":1587,"children":1588},{"style":691},[1589],{"type":477,"value":947},{"type":471,"tag":546,"props":1591,"children":1592},{"style":565},[1593],{"type":477,"value":1451},{"type":471,"tag":546,"props":1595,"children":1596},{"style":691},[1597],{"type":477,"value":1598},"5",{"type":471,"tag":546,"props":1600,"children":1601},{"style":577},[1602],{"type":477,"value":580},{"type":471,"tag":546,"props":1604,"children":1605},{"style":691},[1606],{"type":477,"value":1607}," 8",{"type":471,"tag":546,"props":1609,"children":1610},{"style":565},[1611],{"type":477,"value":1524},{"type":471,"tag":546,"props":1613,"children":1615},{"class":548,"line":1614},48,[1616,1621,1625,1629,1634,1638,1642],{"type":471,"tag":546,"props":1617,"children":1618},{"style":691},[1619],{"type":477,"value":1620},"2",{"type":471,"tag":546,"props":1622,"children":1623},{"style":691},[1624],{"type":477,"value":1492},{"type":471,"tag":546,"props":1626,"children":1627},{"style":565},[1628],{"type":477,"value":1451},{"type":471,"tag":546,"props":1630,"children":1631},{"style":691},[1632],{"type":477,"value":1633},"4",{"type":471,"tag":546,"props":1635,"children":1636},{"style":577},[1637],{"type":477,"value":580},{"type":471,"tag":546,"props":1639,"children":1640},{"style":691},[1641],{"type":477,"value":1474},{"type":471,"tag":546,"props":1643,"children":1644},{"style":565},[1645],{"type":477,"value":1524},{"type":471,"tag":546,"props":1647,"children":1649},{"class":548,"line":1648},49,[1650,1654,1658,1662,1666,1670,1674,1678,1682,1686,1690],{"type":471,"tag":546,"props":1651,"children":1652},{"style":691},[1653],{"type":477,"value":1585},{"type":471,"tag":546,"props":1655,"children":1656},{"style":691},[1657],{"type":477,"value":1492},{"type":471,"tag":546,"props":1659,"children":1660},{"style":565},[1661],{"type":477,"value":1451},{"type":471,"tag":546,"props":1663,"children":1664},{"style":691},[1665],{"type":477,"value":1633},{"type":471,"tag":546,"props":1667,"children":1668},{"style":577},[1669],{"type":477,"value":580},{"type":471,"tag":546,"props":1671,"children":1672},{"style":691},[1673],{"type":477,"value":1465},{"type":471,"tag":546,"props":1675,"children":1676},{"style":577},[1677],{"type":477,"value":580},{"type":471,"tag":546,"props":1679,"children":1680},{"style":691},[1681],{"type":477,"value":1474},{"type":471,"tag":546,"props":1683,"children":1684},{"style":577},[1685],{"type":477,"value":580},{"type":471,"tag":546,"props":1687,"children":1688},{"style":691},[1689],{"type":477,"value":1607},{"type":471,"tag":546,"props":1691,"children":1692},{"style":565},[1693],{"type":477,"value":1524},{"type":471,"tag":546,"props":1695,"children":1697},{"class":548,"line":1696},50,[1698,1702,1706,1710,1715,1719,1723],{"type":471,"tag":546,"props":1699,"children":1700},{"style":691},[1701],{"type":477,"value":1633},{"type":471,"tag":546,"props":1703,"children":1704},{"style":691},[1705],{"type":477,"value":1465},{"type":471,"tag":546,"props":1707,"children":1708},{"style":565},[1709],{"type":477,"value":1451},{"type":471,"tag":546,"props":1711,"children":1712},{"style":691},[1713],{"type":477,"value":1714},"3",{"type":471,"tag":546,"props":1716,"children":1717},{"style":577},[1718],{"type":477,"value":580},{"type":471,"tag":546,"props":1720,"children":1721},{"style":691},[1722],{"type":477,"value":1501},{"type":471,"tag":546,"props":1724,"children":1725},{"style":565},[1726],{"type":477,"value":1524},{"type":471,"tag":546,"props":1728,"children":1730},{"class":548,"line":1729},51,[1731,1736,1740,1744,1748,1752,1756],{"type":471,"tag":546,"props":1732,"children":1733},{"style":691},[1734],{"type":477,"value":1735},"6",{"type":471,"tag":546,"props":1737,"children":1738},{"style":691},[1739],{"type":477,"value":1501},{"type":471,"tag":546,"props":1741,"children":1742},{"style":565},[1743],{"type":477,"value":1451},{"type":471,"tag":546,"props":1745,"children":1746},{"style":691},[1747],{"type":477,"value":1620},{"type":471,"tag":546,"props":1749,"children":1750},{"style":577},[1751],{"type":477,"value":580},{"type":471,"tag":546,"props":1753,"children":1754},{"style":691},[1755],{"type":477,"value":1510},{"type":471,"tag":546,"props":1757,"children":1758},{"style":565},[1759],{"type":477,"value":1524},{"type":471,"tag":546,"props":1761,"children":1763},{"class":548,"line":1762},52,[1764,1768,1772,1776,1780,1784,1788,1792,1796,1800,1804],{"type":471,"tag":546,"props":1765,"children":1766},{"style":691},[1767],{"type":477,"value":1633},{"type":471,"tag":546,"props":1769,"children":1770},{"style":691},[1771],{"type":477,"value":1501},{"type":471,"tag":546,"props":1773,"children":1774},{"style":565},[1775],{"type":477,"value":1451},{"type":471,"tag":546,"props":1777,"children":1778},{"style":691},[1779],{"type":477,"value":1620},{"type":471,"tag":546,"props":1781,"children":1782},{"style":577},[1783],{"type":477,"value":580},{"type":471,"tag":546,"props":1785,"children":1786},{"style":691},[1787],{"type":477,"value":1492},{"type":471,"tag":546,"props":1789,"children":1790},{"style":577},[1791],{"type":477,"value":580},{"type":471,"tag":546,"props":1793,"children":1794},{"style":691},[1795],{"type":477,"value":1501},{"type":471,"tag":546,"props":1797,"children":1798},{"style":577},[1799],{"type":477,"value":580},{"type":471,"tag":546,"props":1801,"children":1802},{"style":691},[1803],{"type":477,"value":1510},{"type":471,"tag":546,"props":1805,"children":1806},{"style":565},[1807],{"type":477,"value":1524},{"type":471,"tag":546,"props":1809,"children":1811},{"class":548,"line":1810},53,[1812,1816,1820,1824,1828,1832,1836,1840,1844,1848,1852,1856,1860,1864,1868,1872,1876,1880,1884],{"type":471,"tag":546,"props":1813,"children":1814},{"style":691},[1815],{"type":477,"value":1585},{"type":471,"tag":546,"props":1817,"children":1818},{"style":691},[1819],{"type":477,"value":1501},{"type":471,"tag":546,"props":1821,"children":1822},{"style":565},[1823],{"type":477,"value":1451},{"type":471,"tag":546,"props":1825,"children":1826},{"style":691},[1827],{"type":477,"value":1620},{"type":471,"tag":546,"props":1829,"children":1830},{"style":577},[1831],{"type":477,"value":580},{"type":471,"tag":546,"props":1833,"children":1834},{"style":691},[1835],{"type":477,"value":1492},{"type":471,"tag":546,"props":1837,"children":1838},{"style":577},[1839],{"type":477,"value":580},{"type":471,"tag":546,"props":1841,"children":1842},{"style":691},[1843],{"type":477,"value":1483},{"type":471,"tag":546,"props":1845,"children":1846},{"style":577},[1847],{"type":477,"value":580},{"type":471,"tag":546,"props":1849,"children":1850},{"style":691},[1851],{"type":477,"value":1465},{"type":471,"tag":546,"props":1853,"children":1854},{"style":577},[1855],{"type":477,"value":580},{"type":471,"tag":546,"props":1857,"children":1858},{"style":691},[1859],{"type":477,"value":1474},{"type":471,"tag":546,"props":1861,"children":1862},{"style":577},[1863],{"type":477,"value":580},{"type":471,"tag":546,"props":1865,"children":1866},{"style":691},[1867],{"type":477,"value":1501},{"type":471,"tag":546,"props":1869,"children":1870},{"style":577},[1871],{"type":477,"value":580},{"type":471,"tag":546,"props":1873,"children":1874},{"style":691},[1875],{"type":477,"value":1607},{"type":471,"tag":546,"props":1877,"children":1878},{"style":577},[1879],{"type":477,"value":580},{"type":471,"tag":546,"props":1881,"children":1882},{"style":691},[1883],{"type":477,"value":1510},{"type":471,"tag":546,"props":1885,"children":1886},{"style":565},[1887],{"type":477,"value":1524},{"type":471,"tag":1889,"props":1890,"children":1891},"style",{},[1892],{"type":477,"value":1893},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":466,"searchDepth":650,"depth":650,"links":1895},[1896,1897,1898,1899],{"id":474,"depth":611,"text":474},{"id":496,"depth":611,"text":496},{"id":526,"depth":611,"text":526},{"id":531,"depth":611,"text":531},"markdown","content:1.algorithm:2.solution-methods:sort:4.merge-sort.md","content","1.algorithm/2.solution-methods/sort/4.merge-sort.md","md",[1906,1907],{"_path":24,"title":23,"description":466},{"_path":34,"title":37,"description":466},1713695844645]