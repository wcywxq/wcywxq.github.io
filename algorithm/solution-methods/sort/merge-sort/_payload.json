[{"data":1,"prerenderedAt":2139},["Reactive",2],{"navigation":3,"/algorithm/solution-methods/sort/merge-sort":552,"/algorithm/solution-methods/sort/merge-sort-surround":2136},[4,272,311,529,537],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":310},"八股文","/endorsement",[276,286,297],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"构建工具","/endorsement/build-tools",[290],{"title":291,"_path":292,"children":293},"Webpack","/endorsement/build-tools/webpack",[294],{"title":295,"_path":296},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":298,"_path":299,"children":300},"Html","/endorsement/html",[301,304,307],{"title":302,"_path":303},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":305,"_path":306},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":308,"_path":309},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":312,"_path":313,"children":314,"icon":528},"代码考核","/code-assessment",[315,420,521],{"title":316,"_path":317,"children":318},"源码实现","/code-assessment/source",[319,353,369,397,404,411,414,417],{"title":320,"_path":321,"children":322},"原生 api","/code-assessment/source/native-api",[323,326,329,332,335,338,341,344,347,350],{"title":324,"_path":325},"polyfill","/code-assessment/source/native-api/polyfill",{"title":327,"_path":328},"ajax","/code-assessment/source/native-api/ajax",{"title":330,"_path":331},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":333,"_path":334},"new 操作符","/code-assessment/source/native-api/new",{"title":336,"_path":337},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":339,"_path":340},"定时器","/code-assessment/source/native-api/timer",{"title":342,"_path":343},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":345,"_path":346},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":348,"_path":349},"extends","/code-assessment/source/native-api/extends",{"title":351,"_path":352},"Promise","/code-assessment/source/native-api/promise",{"title":354,"_path":355,"children":356},"函数 Function","/code-assessment/source/function",[357,360,363,366],{"title":358,"_path":359},"函数防抖","/code-assessment/source/function/debounce",{"title":361,"_path":362},"函数节流","/code-assessment/source/function/throttle",{"title":364,"_path":365},"函数柯理化","/code-assessment/source/function/curry",{"title":367,"_path":368},"函数睡眠","/code-assessment/source/function/sleep",{"title":370,"_path":371,"children":372},"数组 Array","/code-assessment/source/array",[373,376,379,382,385,388,391,394],{"title":374,"_path":375},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":377,"_path":378},"数组扁平化","/code-assessment/source/array/flat",{"title":380,"_path":381},"原型方法","/code-assessment/source/array/prototype-method",{"title":383,"_path":384},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":386,"_path":387},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":389,"_path":390},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":392,"_path":393},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":395,"_path":396},"二维数组","/code-assessment/source/array/2d-array",{"title":398,"_path":399,"children":400},"字符串 String","/code-assessment/source/string",[401],{"title":402,"_path":403},"repeat()","/code-assessment/source/string/repeat",{"title":405,"_path":406,"children":407},"集合 Set","/code-assessment/source/set",[408],{"title":409,"_path":410},"遍历集合","/code-assessment/source/set/traverse",{"title":412,"_path":413},"获取通用类型","/code-assessment/source/get-generic-type",{"title":415,"_path":416},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":418,"_path":419},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":421,"_path":422,"children":423},"业务场景","/code-assessment/scene",[424,454,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518],{"title":351,"_path":425,"children":426},"/code-assessment/scene/promise",[427,430,433,436,439,442,445,448,451],{"title":428,"_path":429},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":431,"_path":432},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":434,"_path":435},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":437,"_path":438},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":440,"_path":441},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":443,"_path":444},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":446,"_path":447},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":449,"_path":450},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":452,"_path":453},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":455,"_path":456,"children":457},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[458,461],{"title":459,"_path":460},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":462,"_path":463},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":465,"_path":466},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":468,"_path":469},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":471,"_path":472},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":474,"_path":475},"倒计时","/code-assessment/scene/countdown",{"title":477,"_path":478},"日期格式化","/code-assessment/scene/date-format",{"title":480,"_path":481},"实现前端路由","/code-assessment/scene/frontend-route",{"title":483,"_path":484},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":486,"_path":487},"lodash.get","/code-assessment/scene/lodash-get",{"title":489,"_path":490},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":492,"_path":493},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":495,"_path":496},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":498,"_path":499},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":501,"_path":502},"随机数","/code-assessment/scene/random-number",{"title":504,"_path":505},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":507,"_path":508},"sku 算法实现","/code-assessment/scene/sku",{"title":510,"_path":511},"整数分割","/code-assessment/scene/split-number",{"title":513,"_path":514},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":516,"_path":517},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":519,"_path":520},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":522,"_path":523,"children":524},"Ts 类型挑战","/code-assessment/type-challeges",[525],{"title":526,"_path":527},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":530,"_path":531,"children":532,"icon":536},"项目","/project",[533],{"title":534,"_path":535},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":538,"_path":539,"children":540,"icon":551},"后端语言","/backend-languages",[541],{"title":542,"_path":543,"children":544},"Python","/backend-languages/python",[545,548],{"title":546,"_path":547},"基础","/backend-languages/python/base",{"title":549,"_path":550},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":27,"_dir":553,"_draft":554,"_partial":554,"_locale":555,"title":26,"description":555,"body":556,"_type":2131,"_id":2132,"_source":2133,"_file":2134,"_extension":2135},"sort",false,"",{"type":557,"children":558,"toc":2125},"root",[559,567,573,578,583,588,613,618,623,2119],{"type":560,"tag":561,"props":562,"children":564},"element","h2",{"id":563},"简介",[565],{"type":566,"value":563},"text",{"type":560,"tag":568,"props":569,"children":570},"p",{},[571],{"type":566,"value":572},"归并排序就是利用分冶的思想，采用递归的形式，对元素进行排序",{"type":560,"tag":568,"props":574,"children":575},{},[576],{"type":566,"value":577},"当我们有两个长度为 n 的有序数组时，可以通过两个指针的移动，在 O(n) 的时间复杂度内，快速将它们合并成一个有序数组。而这两个长度为 n 的有序数组，也是可以通过两个 n/2 的有序数组合并得来。因此，只要对数组不断进行分冶，就可以把一个无序数组变成有序",{"type":560,"tag":568,"props":579,"children":580},{},[581],{"type":566,"value":582},"由于在数组拆分时用到了递归，而对数组组合的过程用到了合并，因此命名：归并排序",{"type":560,"tag":561,"props":584,"children":586},{"id":585},"步骤",[587],{"type":566,"value":585},{"type":560,"tag":589,"props":590,"children":591},"ul",{},[592,598,603,608],{"type":560,"tag":593,"props":594,"children":595},"li",{},[596],{"type":566,"value":597},"首先将数组拆分成左右两部分",{"type":560,"tag":593,"props":599,"children":600},{},[601],{"type":566,"value":602},"对于左边部分，继续拆分成左右两部分，直到无法拆分，此时将最小单元左侧部分保持有序，最小单元右侧部分也保持有序，然后对排序后的这两部分进行合并",{"type":560,"tag":593,"props":604,"children":605},{},[606],{"type":566,"value":607},"对于右侧部分，同左边部分一样拆分和合并",{"type":560,"tag":593,"props":609,"children":610},{},[611],{"type":566,"value":612},"最后合并左右两部分的数组",{"type":560,"tag":561,"props":614,"children":616},{"id":615},"时间复杂度和空间复杂度",[617],{"type":566,"value":615},{"type":560,"tag":561,"props":619,"children":621},{"id":620},"实现",[622],{"type":566,"value":620},{"type":560,"tag":624,"props":625,"children":629},"pre",{"className":626,"code":627,"language":628,"meta":555,"style":555},"language-py shiki shiki-themes vitesse-light vitesse-light vitesse-dark","def Merge(a, start, mid, end):\n    # 临时列表\n    tmp = []\n    # 两个游标，分别从两段区间的起点开始\n    l = start\n    r = mid + 1\n    # 当两个区间都未到达区间右端点时\n    while l \u003C= mid and r \u003C= end:\n        # 判断，将小的值插入临时列表\n        if a[l] \u003C= a[r]:\n            tmp.append(a[l])\n            # 对相应游标进行自增\n            l += 1\n        else:\n            tmp.append(a[r])\n            # 对相应游标进行自增\n            r += 1\n    # 当跳出循环时，将剩余的部分直接塞入临时列表\n    tmp.extend(a[l : mid + 1])\n    tmp.extend(a[r : end + 1])\n\n    # 把临时列表的值，拷贝回原列表 a\n    for i in range(start, end + 1):\n        a[i] = tmp[i - start]\n    # 打印本次合并结果\n    print(start, end, tmp)\n\n# 递归函数\ndef MergeSort(a, start, end):\n    # 若待排序元素只有一个则直接返回\n    if start == end:\n        return\n    # 否则计算出中点 mid\n    mid = (start + end) // 2\n    # 对左端点 start 到中点 mid 的元素执行一次归并排序\n    MergeSort(a, start, mid)\n    # 对中点 mid + 1 到右端点 end 的元素执行一次归并排序\n    MergeSort(a, mid + 1, end)\n    # 以上两次归并排序产生了两个有序数组，最后调用 Merge 进行归并排序\n    Merge(a, start, mid, end)\n\n# 测试\na = [8, 5, 6, 4, 3, 7, 10, 2]\nMergeSort(a, 0, 7)\n\n# 输出\n0 1 [5, 8]\n2 3 [4, 6]\n0 3 [4, 5, 6, 8]\n4 5 [3, 7]\n6 7 [2, 10]\n4 7 [2, 3, 7, 10]\n0 7 [2, 3, 4, 5, 6, 7, 8, 10]\n","py",[630],{"type":560,"tag":631,"props":632,"children":633},"code",{"__ignoreMap":555},[634,697,707,726,735,753,782,791,838,847,899,939,948,966,979,1015,1023,1040,1049,1106,1160,1170,1179,1233,1288,1297,1335,1343,1352,1393,1402,1429,1438,1447,1493,1502,1539,1548,1592,1601,1646,1654,1663,1753,1791,1799,1808,1843,1877,1925,1958,1991,2039],{"type":560,"tag":635,"props":636,"children":639},"span",{"class":637,"line":638},"line",1,[640,646,652,658,664,669,674,678,683,687,692],{"type":560,"tag":635,"props":641,"children":643},{"style":642},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[644],{"type":566,"value":645},"def",{"type":560,"tag":635,"props":647,"children":649},{"style":648},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[650],{"type":566,"value":651}," Merge",{"type":560,"tag":635,"props":653,"children":655},{"style":654},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[656],{"type":566,"value":657},"(",{"type":560,"tag":635,"props":659,"children":661},{"style":660},"--shiki-light:#393A34;--shiki-default:#393A34;--shiki-dark:#DBD7CAEE",[662],{"type":566,"value":663},"a",{"type":560,"tag":635,"props":665,"children":666},{"style":654},[667],{"type":566,"value":668},",",{"type":560,"tag":635,"props":670,"children":671},{"style":660},[672],{"type":566,"value":673}," start",{"type":560,"tag":635,"props":675,"children":676},{"style":654},[677],{"type":566,"value":668},{"type":560,"tag":635,"props":679,"children":680},{"style":660},[681],{"type":566,"value":682}," mid",{"type":560,"tag":635,"props":684,"children":685},{"style":654},[686],{"type":566,"value":668},{"type":560,"tag":635,"props":688,"children":689},{"style":660},[690],{"type":566,"value":691}," end",{"type":560,"tag":635,"props":693,"children":694},{"style":654},[695],{"type":566,"value":696},"):\n",{"type":560,"tag":635,"props":698,"children":700},{"class":637,"line":699},2,[701],{"type":560,"tag":635,"props":702,"children":704},{"style":703},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[705],{"type":566,"value":706},"    # 临时列表\n",{"type":560,"tag":635,"props":708,"children":710},{"class":637,"line":709},3,[711,716,721],{"type":560,"tag":635,"props":712,"children":713},{"style":660},[714],{"type":566,"value":715},"    tmp ",{"type":560,"tag":635,"props":717,"children":718},{"style":654},[719],{"type":566,"value":720},"=",{"type":560,"tag":635,"props":722,"children":723},{"style":654},[724],{"type":566,"value":725}," []\n",{"type":560,"tag":635,"props":727,"children":729},{"class":637,"line":728},4,[730],{"type":560,"tag":635,"props":731,"children":732},{"style":703},[733],{"type":566,"value":734},"    # 两个游标，分别从两段区间的起点开始\n",{"type":560,"tag":635,"props":736,"children":738},{"class":637,"line":737},5,[739,744,748],{"type":560,"tag":635,"props":740,"children":741},{"style":660},[742],{"type":566,"value":743},"    l ",{"type":560,"tag":635,"props":745,"children":746},{"style":654},[747],{"type":566,"value":720},{"type":560,"tag":635,"props":749,"children":750},{"style":660},[751],{"type":566,"value":752}," start\n",{"type":560,"tag":635,"props":754,"children":756},{"class":637,"line":755},6,[757,762,766,771,776],{"type":560,"tag":635,"props":758,"children":759},{"style":660},[760],{"type":566,"value":761},"    r ",{"type":560,"tag":635,"props":763,"children":764},{"style":654},[765],{"type":566,"value":720},{"type":560,"tag":635,"props":767,"children":768},{"style":660},[769],{"type":566,"value":770}," mid ",{"type":560,"tag":635,"props":772,"children":773},{"style":642},[774],{"type":566,"value":775},"+",{"type":560,"tag":635,"props":777,"children":779},{"style":778},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[780],{"type":566,"value":781}," 1\n",{"type":560,"tag":635,"props":783,"children":785},{"class":637,"line":784},7,[786],{"type":560,"tag":635,"props":787,"children":788},{"style":703},[789],{"type":566,"value":790},"    # 当两个区间都未到达区间右端点时\n",{"type":560,"tag":635,"props":792,"children":794},{"class":637,"line":793},8,[795,801,806,811,815,820,825,829,833],{"type":560,"tag":635,"props":796,"children":798},{"style":797},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[799],{"type":566,"value":800},"    while",{"type":560,"tag":635,"props":802,"children":803},{"style":660},[804],{"type":566,"value":805}," l ",{"type":560,"tag":635,"props":807,"children":808},{"style":642},[809],{"type":566,"value":810},"\u003C=",{"type":560,"tag":635,"props":812,"children":813},{"style":660},[814],{"type":566,"value":770},{"type":560,"tag":635,"props":816,"children":817},{"style":642},[818],{"type":566,"value":819},"and",{"type":560,"tag":635,"props":821,"children":822},{"style":660},[823],{"type":566,"value":824}," r ",{"type":560,"tag":635,"props":826,"children":827},{"style":642},[828],{"type":566,"value":810},{"type":560,"tag":635,"props":830,"children":831},{"style":660},[832],{"type":566,"value":691},{"type":560,"tag":635,"props":834,"children":835},{"style":654},[836],{"type":566,"value":837},":\n",{"type":560,"tag":635,"props":839,"children":841},{"class":637,"line":840},9,[842],{"type":560,"tag":635,"props":843,"children":844},{"style":703},[845],{"type":566,"value":846},"        # 判断，将小的值插入临时列表\n",{"type":560,"tag":635,"props":848,"children":850},{"class":637,"line":849},10,[851,856,861,866,871,876,881,885,889,894],{"type":560,"tag":635,"props":852,"children":853},{"style":797},[854],{"type":566,"value":855},"        if",{"type":560,"tag":635,"props":857,"children":858},{"style":660},[859],{"type":566,"value":860}," a",{"type":560,"tag":635,"props":862,"children":863},{"style":654},[864],{"type":566,"value":865},"[",{"type":560,"tag":635,"props":867,"children":868},{"style":660},[869],{"type":566,"value":870},"l",{"type":560,"tag":635,"props":872,"children":873},{"style":654},[874],{"type":566,"value":875},"]",{"type":560,"tag":635,"props":877,"children":878},{"style":642},[879],{"type":566,"value":880}," \u003C=",{"type":560,"tag":635,"props":882,"children":883},{"style":660},[884],{"type":566,"value":860},{"type":560,"tag":635,"props":886,"children":887},{"style":654},[888],{"type":566,"value":865},{"type":560,"tag":635,"props":890,"children":891},{"style":660},[892],{"type":566,"value":893},"r",{"type":560,"tag":635,"props":895,"children":896},{"style":654},[897],{"type":566,"value":898},"]:\n",{"type":560,"tag":635,"props":900,"children":902},{"class":637,"line":901},11,[903,908,913,918,922,926,930,934],{"type":560,"tag":635,"props":904,"children":905},{"style":660},[906],{"type":566,"value":907},"            tmp",{"type":560,"tag":635,"props":909,"children":910},{"style":654},[911],{"type":566,"value":912},".",{"type":560,"tag":635,"props":914,"children":915},{"style":660},[916],{"type":566,"value":917},"append",{"type":560,"tag":635,"props":919,"children":920},{"style":654},[921],{"type":566,"value":657},{"type":560,"tag":635,"props":923,"children":924},{"style":660},[925],{"type":566,"value":663},{"type":560,"tag":635,"props":927,"children":928},{"style":654},[929],{"type":566,"value":865},{"type":560,"tag":635,"props":931,"children":932},{"style":660},[933],{"type":566,"value":870},{"type":560,"tag":635,"props":935,"children":936},{"style":654},[937],{"type":566,"value":938},"])\n",{"type":560,"tag":635,"props":940,"children":942},{"class":637,"line":941},12,[943],{"type":560,"tag":635,"props":944,"children":945},{"style":703},[946],{"type":566,"value":947},"            # 对相应游标进行自增\n",{"type":560,"tag":635,"props":949,"children":951},{"class":637,"line":950},13,[952,957,962],{"type":560,"tag":635,"props":953,"children":954},{"style":660},[955],{"type":566,"value":956},"            l ",{"type":560,"tag":635,"props":958,"children":959},{"style":654},[960],{"type":566,"value":961},"+=",{"type":560,"tag":635,"props":963,"children":964},{"style":778},[965],{"type":566,"value":781},{"type":560,"tag":635,"props":967,"children":969},{"class":637,"line":968},14,[970,975],{"type":560,"tag":635,"props":971,"children":972},{"style":797},[973],{"type":566,"value":974},"        else",{"type":560,"tag":635,"props":976,"children":977},{"style":654},[978],{"type":566,"value":837},{"type":560,"tag":635,"props":980,"children":982},{"class":637,"line":981},15,[983,987,991,995,999,1003,1007,1011],{"type":560,"tag":635,"props":984,"children":985},{"style":660},[986],{"type":566,"value":907},{"type":560,"tag":635,"props":988,"children":989},{"style":654},[990],{"type":566,"value":912},{"type":560,"tag":635,"props":992,"children":993},{"style":660},[994],{"type":566,"value":917},{"type":560,"tag":635,"props":996,"children":997},{"style":654},[998],{"type":566,"value":657},{"type":560,"tag":635,"props":1000,"children":1001},{"style":660},[1002],{"type":566,"value":663},{"type":560,"tag":635,"props":1004,"children":1005},{"style":654},[1006],{"type":566,"value":865},{"type":560,"tag":635,"props":1008,"children":1009},{"style":660},[1010],{"type":566,"value":893},{"type":560,"tag":635,"props":1012,"children":1013},{"style":654},[1014],{"type":566,"value":938},{"type":560,"tag":635,"props":1016,"children":1018},{"class":637,"line":1017},16,[1019],{"type":560,"tag":635,"props":1020,"children":1021},{"style":703},[1022],{"type":566,"value":947},{"type":560,"tag":635,"props":1024,"children":1026},{"class":637,"line":1025},17,[1027,1032,1036],{"type":560,"tag":635,"props":1028,"children":1029},{"style":660},[1030],{"type":566,"value":1031},"            r ",{"type":560,"tag":635,"props":1033,"children":1034},{"style":654},[1035],{"type":566,"value":961},{"type":560,"tag":635,"props":1037,"children":1038},{"style":778},[1039],{"type":566,"value":781},{"type":560,"tag":635,"props":1041,"children":1043},{"class":637,"line":1042},18,[1044],{"type":560,"tag":635,"props":1045,"children":1046},{"style":703},[1047],{"type":566,"value":1048},"    # 当跳出循环时，将剩余的部分直接塞入临时列表\n",{"type":560,"tag":635,"props":1050,"children":1052},{"class":637,"line":1051},19,[1053,1058,1062,1067,1071,1075,1079,1084,1089,1093,1097,1102],{"type":560,"tag":635,"props":1054,"children":1055},{"style":660},[1056],{"type":566,"value":1057},"    tmp",{"type":560,"tag":635,"props":1059,"children":1060},{"style":654},[1061],{"type":566,"value":912},{"type":560,"tag":635,"props":1063,"children":1064},{"style":660},[1065],{"type":566,"value":1066},"extend",{"type":560,"tag":635,"props":1068,"children":1069},{"style":654},[1070],{"type":566,"value":657},{"type":560,"tag":635,"props":1072,"children":1073},{"style":660},[1074],{"type":566,"value":663},{"type":560,"tag":635,"props":1076,"children":1077},{"style":654},[1078],{"type":566,"value":865},{"type":560,"tag":635,"props":1080,"children":1081},{"style":660},[1082],{"type":566,"value":1083},"l ",{"type":560,"tag":635,"props":1085,"children":1086},{"style":654},[1087],{"type":566,"value":1088},":",{"type":560,"tag":635,"props":1090,"children":1091},{"style":660},[1092],{"type":566,"value":770},{"type":560,"tag":635,"props":1094,"children":1095},{"style":642},[1096],{"type":566,"value":775},{"type":560,"tag":635,"props":1098,"children":1099},{"style":778},[1100],{"type":566,"value":1101}," 1",{"type":560,"tag":635,"props":1103,"children":1104},{"style":654},[1105],{"type":566,"value":938},{"type":560,"tag":635,"props":1107,"children":1109},{"class":637,"line":1108},20,[1110,1114,1118,1122,1126,1130,1134,1139,1143,1148,1152,1156],{"type":560,"tag":635,"props":1111,"children":1112},{"style":660},[1113],{"type":566,"value":1057},{"type":560,"tag":635,"props":1115,"children":1116},{"style":654},[1117],{"type":566,"value":912},{"type":560,"tag":635,"props":1119,"children":1120},{"style":660},[1121],{"type":566,"value":1066},{"type":560,"tag":635,"props":1123,"children":1124},{"style":654},[1125],{"type":566,"value":657},{"type":560,"tag":635,"props":1127,"children":1128},{"style":660},[1129],{"type":566,"value":663},{"type":560,"tag":635,"props":1131,"children":1132},{"style":654},[1133],{"type":566,"value":865},{"type":560,"tag":635,"props":1135,"children":1136},{"style":660},[1137],{"type":566,"value":1138},"r ",{"type":560,"tag":635,"props":1140,"children":1141},{"style":654},[1142],{"type":566,"value":1088},{"type":560,"tag":635,"props":1144,"children":1145},{"style":660},[1146],{"type":566,"value":1147}," end ",{"type":560,"tag":635,"props":1149,"children":1150},{"style":642},[1151],{"type":566,"value":775},{"type":560,"tag":635,"props":1153,"children":1154},{"style":778},[1155],{"type":566,"value":1101},{"type":560,"tag":635,"props":1157,"children":1158},{"style":654},[1159],{"type":566,"value":938},{"type":560,"tag":635,"props":1161,"children":1163},{"class":637,"line":1162},21,[1164],{"type":560,"tag":635,"props":1165,"children":1167},{"emptyLinePlaceholder":1166},true,[1168],{"type":566,"value":1169},"\n",{"type":560,"tag":635,"props":1171,"children":1173},{"class":637,"line":1172},22,[1174],{"type":560,"tag":635,"props":1175,"children":1176},{"style":703},[1177],{"type":566,"value":1178},"    # 把临时列表的值，拷贝回原列表 a\n",{"type":560,"tag":635,"props":1180,"children":1182},{"class":637,"line":1181},23,[1183,1188,1193,1198,1204,1208,1213,1217,1221,1225,1229],{"type":560,"tag":635,"props":1184,"children":1185},{"style":797},[1186],{"type":566,"value":1187},"    for",{"type":560,"tag":635,"props":1189,"children":1190},{"style":660},[1191],{"type":566,"value":1192}," i ",{"type":560,"tag":635,"props":1194,"children":1195},{"style":797},[1196],{"type":566,"value":1197},"in",{"type":560,"tag":635,"props":1199,"children":1201},{"style":1200},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1202],{"type":566,"value":1203}," range",{"type":560,"tag":635,"props":1205,"children":1206},{"style":654},[1207],{"type":566,"value":657},{"type":560,"tag":635,"props":1209,"children":1210},{"style":660},[1211],{"type":566,"value":1212},"start",{"type":560,"tag":635,"props":1214,"children":1215},{"style":654},[1216],{"type":566,"value":668},{"type":560,"tag":635,"props":1218,"children":1219},{"style":660},[1220],{"type":566,"value":1147},{"type":560,"tag":635,"props":1222,"children":1223},{"style":642},[1224],{"type":566,"value":775},{"type":560,"tag":635,"props":1226,"children":1227},{"style":778},[1228],{"type":566,"value":1101},{"type":560,"tag":635,"props":1230,"children":1231},{"style":654},[1232],{"type":566,"value":696},{"type":560,"tag":635,"props":1234,"children":1236},{"class":637,"line":1235},24,[1237,1242,1246,1251,1255,1260,1265,1269,1274,1279,1283],{"type":560,"tag":635,"props":1238,"children":1239},{"style":660},[1240],{"type":566,"value":1241},"        a",{"type":560,"tag":635,"props":1243,"children":1244},{"style":654},[1245],{"type":566,"value":865},{"type":560,"tag":635,"props":1247,"children":1248},{"style":660},[1249],{"type":566,"value":1250},"i",{"type":560,"tag":635,"props":1252,"children":1253},{"style":654},[1254],{"type":566,"value":875},{"type":560,"tag":635,"props":1256,"children":1257},{"style":654},[1258],{"type":566,"value":1259}," =",{"type":560,"tag":635,"props":1261,"children":1262},{"style":660},[1263],{"type":566,"value":1264}," tmp",{"type":560,"tag":635,"props":1266,"children":1267},{"style":654},[1268],{"type":566,"value":865},{"type":560,"tag":635,"props":1270,"children":1271},{"style":660},[1272],{"type":566,"value":1273},"i ",{"type":560,"tag":635,"props":1275,"children":1276},{"style":642},[1277],{"type":566,"value":1278},"-",{"type":560,"tag":635,"props":1280,"children":1281},{"style":660},[1282],{"type":566,"value":673},{"type":560,"tag":635,"props":1284,"children":1285},{"style":654},[1286],{"type":566,"value":1287},"]\n",{"type":560,"tag":635,"props":1289,"children":1291},{"class":637,"line":1290},25,[1292],{"type":560,"tag":635,"props":1293,"children":1294},{"style":703},[1295],{"type":566,"value":1296},"    # 打印本次合并结果\n",{"type":560,"tag":635,"props":1298,"children":1300},{"class":637,"line":1299},26,[1301,1306,1310,1314,1318,1322,1326,1330],{"type":560,"tag":635,"props":1302,"children":1303},{"style":1200},[1304],{"type":566,"value":1305},"    print",{"type":560,"tag":635,"props":1307,"children":1308},{"style":654},[1309],{"type":566,"value":657},{"type":560,"tag":635,"props":1311,"children":1312},{"style":660},[1313],{"type":566,"value":1212},{"type":560,"tag":635,"props":1315,"children":1316},{"style":654},[1317],{"type":566,"value":668},{"type":560,"tag":635,"props":1319,"children":1320},{"style":660},[1321],{"type":566,"value":691},{"type":560,"tag":635,"props":1323,"children":1324},{"style":654},[1325],{"type":566,"value":668},{"type":560,"tag":635,"props":1327,"children":1328},{"style":660},[1329],{"type":566,"value":1264},{"type":560,"tag":635,"props":1331,"children":1332},{"style":654},[1333],{"type":566,"value":1334},")\n",{"type":560,"tag":635,"props":1336,"children":1338},{"class":637,"line":1337},27,[1339],{"type":560,"tag":635,"props":1340,"children":1341},{"emptyLinePlaceholder":1166},[1342],{"type":566,"value":1169},{"type":560,"tag":635,"props":1344,"children":1346},{"class":637,"line":1345},28,[1347],{"type":560,"tag":635,"props":1348,"children":1349},{"style":703},[1350],{"type":566,"value":1351},"# 递归函数\n",{"type":560,"tag":635,"props":1353,"children":1355},{"class":637,"line":1354},29,[1356,1360,1365,1369,1373,1377,1381,1385,1389],{"type":560,"tag":635,"props":1357,"children":1358},{"style":642},[1359],{"type":566,"value":645},{"type":560,"tag":635,"props":1361,"children":1362},{"style":648},[1363],{"type":566,"value":1364}," MergeSort",{"type":560,"tag":635,"props":1366,"children":1367},{"style":654},[1368],{"type":566,"value":657},{"type":560,"tag":635,"props":1370,"children":1371},{"style":660},[1372],{"type":566,"value":663},{"type":560,"tag":635,"props":1374,"children":1375},{"style":654},[1376],{"type":566,"value":668},{"type":560,"tag":635,"props":1378,"children":1379},{"style":660},[1380],{"type":566,"value":673},{"type":560,"tag":635,"props":1382,"children":1383},{"style":654},[1384],{"type":566,"value":668},{"type":560,"tag":635,"props":1386,"children":1387},{"style":660},[1388],{"type":566,"value":691},{"type":560,"tag":635,"props":1390,"children":1391},{"style":654},[1392],{"type":566,"value":696},{"type":560,"tag":635,"props":1394,"children":1396},{"class":637,"line":1395},30,[1397],{"type":560,"tag":635,"props":1398,"children":1399},{"style":703},[1400],{"type":566,"value":1401},"    # 若待排序元素只有一个则直接返回\n",{"type":560,"tag":635,"props":1403,"children":1405},{"class":637,"line":1404},31,[1406,1411,1416,1421,1425],{"type":560,"tag":635,"props":1407,"children":1408},{"style":797},[1409],{"type":566,"value":1410},"    if",{"type":560,"tag":635,"props":1412,"children":1413},{"style":660},[1414],{"type":566,"value":1415}," start ",{"type":560,"tag":635,"props":1417,"children":1418},{"style":642},[1419],{"type":566,"value":1420},"==",{"type":560,"tag":635,"props":1422,"children":1423},{"style":660},[1424],{"type":566,"value":691},{"type":560,"tag":635,"props":1426,"children":1427},{"style":654},[1428],{"type":566,"value":837},{"type":560,"tag":635,"props":1430,"children":1432},{"class":637,"line":1431},32,[1433],{"type":560,"tag":635,"props":1434,"children":1435},{"style":797},[1436],{"type":566,"value":1437},"        return\n",{"type":560,"tag":635,"props":1439,"children":1441},{"class":637,"line":1440},33,[1442],{"type":560,"tag":635,"props":1443,"children":1444},{"style":703},[1445],{"type":566,"value":1446},"    # 否则计算出中点 mid\n",{"type":560,"tag":635,"props":1448,"children":1450},{"class":637,"line":1449},34,[1451,1456,1460,1465,1470,1474,1478,1483,1488],{"type":560,"tag":635,"props":1452,"children":1453},{"style":660},[1454],{"type":566,"value":1455},"    mid ",{"type":560,"tag":635,"props":1457,"children":1458},{"style":654},[1459],{"type":566,"value":720},{"type":560,"tag":635,"props":1461,"children":1462},{"style":654},[1463],{"type":566,"value":1464}," (",{"type":560,"tag":635,"props":1466,"children":1467},{"style":660},[1468],{"type":566,"value":1469},"start ",{"type":560,"tag":635,"props":1471,"children":1472},{"style":642},[1473],{"type":566,"value":775},{"type":560,"tag":635,"props":1475,"children":1476},{"style":660},[1477],{"type":566,"value":691},{"type":560,"tag":635,"props":1479,"children":1480},{"style":654},[1481],{"type":566,"value":1482},")",{"type":560,"tag":635,"props":1484,"children":1485},{"style":642},[1486],{"type":566,"value":1487}," //",{"type":560,"tag":635,"props":1489,"children":1490},{"style":778},[1491],{"type":566,"value":1492}," 2\n",{"type":560,"tag":635,"props":1494,"children":1496},{"class":637,"line":1495},35,[1497],{"type":560,"tag":635,"props":1498,"children":1499},{"style":703},[1500],{"type":566,"value":1501},"    # 对左端点 start 到中点 mid 的元素执行一次归并排序\n",{"type":560,"tag":635,"props":1503,"children":1505},{"class":637,"line":1504},36,[1506,1511,1515,1519,1523,1527,1531,1535],{"type":560,"tag":635,"props":1507,"children":1508},{"style":660},[1509],{"type":566,"value":1510},"    MergeSort",{"type":560,"tag":635,"props":1512,"children":1513},{"style":654},[1514],{"type":566,"value":657},{"type":560,"tag":635,"props":1516,"children":1517},{"style":660},[1518],{"type":566,"value":663},{"type":560,"tag":635,"props":1520,"children":1521},{"style":654},[1522],{"type":566,"value":668},{"type":560,"tag":635,"props":1524,"children":1525},{"style":660},[1526],{"type":566,"value":673},{"type":560,"tag":635,"props":1528,"children":1529},{"style":654},[1530],{"type":566,"value":668},{"type":560,"tag":635,"props":1532,"children":1533},{"style":660},[1534],{"type":566,"value":682},{"type":560,"tag":635,"props":1536,"children":1537},{"style":654},[1538],{"type":566,"value":1334},{"type":560,"tag":635,"props":1540,"children":1542},{"class":637,"line":1541},37,[1543],{"type":560,"tag":635,"props":1544,"children":1545},{"style":703},[1546],{"type":566,"value":1547},"    # 对中点 mid + 1 到右端点 end 的元素执行一次归并排序\n",{"type":560,"tag":635,"props":1549,"children":1551},{"class":637,"line":1550},38,[1552,1556,1560,1564,1568,1572,1576,1580,1584,1588],{"type":560,"tag":635,"props":1553,"children":1554},{"style":660},[1555],{"type":566,"value":1510},{"type":560,"tag":635,"props":1557,"children":1558},{"style":654},[1559],{"type":566,"value":657},{"type":560,"tag":635,"props":1561,"children":1562},{"style":660},[1563],{"type":566,"value":663},{"type":560,"tag":635,"props":1565,"children":1566},{"style":654},[1567],{"type":566,"value":668},{"type":560,"tag":635,"props":1569,"children":1570},{"style":660},[1571],{"type":566,"value":770},{"type":560,"tag":635,"props":1573,"children":1574},{"style":642},[1575],{"type":566,"value":775},{"type":560,"tag":635,"props":1577,"children":1578},{"style":778},[1579],{"type":566,"value":1101},{"type":560,"tag":635,"props":1581,"children":1582},{"style":654},[1583],{"type":566,"value":668},{"type":560,"tag":635,"props":1585,"children":1586},{"style":660},[1587],{"type":566,"value":691},{"type":560,"tag":635,"props":1589,"children":1590},{"style":654},[1591],{"type":566,"value":1334},{"type":560,"tag":635,"props":1593,"children":1595},{"class":637,"line":1594},39,[1596],{"type":560,"tag":635,"props":1597,"children":1598},{"style":703},[1599],{"type":566,"value":1600},"    # 以上两次归并排序产生了两个有序数组，最后调用 Merge 进行归并排序\n",{"type":560,"tag":635,"props":1602,"children":1604},{"class":637,"line":1603},40,[1605,1610,1614,1618,1622,1626,1630,1634,1638,1642],{"type":560,"tag":635,"props":1606,"children":1607},{"style":660},[1608],{"type":566,"value":1609},"    Merge",{"type":560,"tag":635,"props":1611,"children":1612},{"style":654},[1613],{"type":566,"value":657},{"type":560,"tag":635,"props":1615,"children":1616},{"style":660},[1617],{"type":566,"value":663},{"type":560,"tag":635,"props":1619,"children":1620},{"style":654},[1621],{"type":566,"value":668},{"type":560,"tag":635,"props":1623,"children":1624},{"style":660},[1625],{"type":566,"value":673},{"type":560,"tag":635,"props":1627,"children":1628},{"style":654},[1629],{"type":566,"value":668},{"type":560,"tag":635,"props":1631,"children":1632},{"style":660},[1633],{"type":566,"value":682},{"type":560,"tag":635,"props":1635,"children":1636},{"style":654},[1637],{"type":566,"value":668},{"type":560,"tag":635,"props":1639,"children":1640},{"style":660},[1641],{"type":566,"value":691},{"type":560,"tag":635,"props":1643,"children":1644},{"style":654},[1645],{"type":566,"value":1334},{"type":560,"tag":635,"props":1647,"children":1649},{"class":637,"line":1648},41,[1650],{"type":560,"tag":635,"props":1651,"children":1652},{"emptyLinePlaceholder":1166},[1653],{"type":566,"value":1169},{"type":560,"tag":635,"props":1655,"children":1657},{"class":637,"line":1656},42,[1658],{"type":560,"tag":635,"props":1659,"children":1660},{"style":703},[1661],{"type":566,"value":1662},"# 测试\n",{"type":560,"tag":635,"props":1664,"children":1666},{"class":637,"line":1665},43,[1667,1672,1676,1681,1686,1690,1695,1699,1704,1708,1713,1717,1722,1726,1731,1735,1740,1744,1749],{"type":560,"tag":635,"props":1668,"children":1669},{"style":660},[1670],{"type":566,"value":1671},"a ",{"type":560,"tag":635,"props":1673,"children":1674},{"style":654},[1675],{"type":566,"value":720},{"type":560,"tag":635,"props":1677,"children":1678},{"style":654},[1679],{"type":566,"value":1680}," [",{"type":560,"tag":635,"props":1682,"children":1683},{"style":778},[1684],{"type":566,"value":1685},"8",{"type":560,"tag":635,"props":1687,"children":1688},{"style":654},[1689],{"type":566,"value":668},{"type":560,"tag":635,"props":1691,"children":1692},{"style":778},[1693],{"type":566,"value":1694}," 5",{"type":560,"tag":635,"props":1696,"children":1697},{"style":654},[1698],{"type":566,"value":668},{"type":560,"tag":635,"props":1700,"children":1701},{"style":778},[1702],{"type":566,"value":1703}," 6",{"type":560,"tag":635,"props":1705,"children":1706},{"style":654},[1707],{"type":566,"value":668},{"type":560,"tag":635,"props":1709,"children":1710},{"style":778},[1711],{"type":566,"value":1712}," 4",{"type":560,"tag":635,"props":1714,"children":1715},{"style":654},[1716],{"type":566,"value":668},{"type":560,"tag":635,"props":1718,"children":1719},{"style":778},[1720],{"type":566,"value":1721}," 3",{"type":560,"tag":635,"props":1723,"children":1724},{"style":654},[1725],{"type":566,"value":668},{"type":560,"tag":635,"props":1727,"children":1728},{"style":778},[1729],{"type":566,"value":1730}," 7",{"type":560,"tag":635,"props":1732,"children":1733},{"style":654},[1734],{"type":566,"value":668},{"type":560,"tag":635,"props":1736,"children":1737},{"style":778},[1738],{"type":566,"value":1739}," 10",{"type":560,"tag":635,"props":1741,"children":1742},{"style":654},[1743],{"type":566,"value":668},{"type":560,"tag":635,"props":1745,"children":1746},{"style":778},[1747],{"type":566,"value":1748}," 2",{"type":560,"tag":635,"props":1750,"children":1751},{"style":654},[1752],{"type":566,"value":1287},{"type":560,"tag":635,"props":1754,"children":1756},{"class":637,"line":1755},44,[1757,1762,1766,1770,1774,1779,1783,1787],{"type":560,"tag":635,"props":1758,"children":1759},{"style":660},[1760],{"type":566,"value":1761},"MergeSort",{"type":560,"tag":635,"props":1763,"children":1764},{"style":654},[1765],{"type":566,"value":657},{"type":560,"tag":635,"props":1767,"children":1768},{"style":660},[1769],{"type":566,"value":663},{"type":560,"tag":635,"props":1771,"children":1772},{"style":654},[1773],{"type":566,"value":668},{"type":560,"tag":635,"props":1775,"children":1776},{"style":778},[1777],{"type":566,"value":1778}," 0",{"type":560,"tag":635,"props":1780,"children":1781},{"style":654},[1782],{"type":566,"value":668},{"type":560,"tag":635,"props":1784,"children":1785},{"style":778},[1786],{"type":566,"value":1730},{"type":560,"tag":635,"props":1788,"children":1789},{"style":654},[1790],{"type":566,"value":1334},{"type":560,"tag":635,"props":1792,"children":1794},{"class":637,"line":1793},45,[1795],{"type":560,"tag":635,"props":1796,"children":1797},{"emptyLinePlaceholder":1166},[1798],{"type":566,"value":1169},{"type":560,"tag":635,"props":1800,"children":1802},{"class":637,"line":1801},46,[1803],{"type":560,"tag":635,"props":1804,"children":1805},{"style":703},[1806],{"type":566,"value":1807},"# 输出\n",{"type":560,"tag":635,"props":1809,"children":1811},{"class":637,"line":1810},47,[1812,1817,1821,1825,1830,1834,1839],{"type":560,"tag":635,"props":1813,"children":1814},{"style":778},[1815],{"type":566,"value":1816},"0",{"type":560,"tag":635,"props":1818,"children":1819},{"style":778},[1820],{"type":566,"value":1101},{"type":560,"tag":635,"props":1822,"children":1823},{"style":654},[1824],{"type":566,"value":1680},{"type":560,"tag":635,"props":1826,"children":1827},{"style":778},[1828],{"type":566,"value":1829},"5",{"type":560,"tag":635,"props":1831,"children":1832},{"style":654},[1833],{"type":566,"value":668},{"type":560,"tag":635,"props":1835,"children":1836},{"style":778},[1837],{"type":566,"value":1838}," 8",{"type":560,"tag":635,"props":1840,"children":1841},{"style":654},[1842],{"type":566,"value":1287},{"type":560,"tag":635,"props":1844,"children":1846},{"class":637,"line":1845},48,[1847,1852,1856,1860,1865,1869,1873],{"type":560,"tag":635,"props":1848,"children":1849},{"style":778},[1850],{"type":566,"value":1851},"2",{"type":560,"tag":635,"props":1853,"children":1854},{"style":778},[1855],{"type":566,"value":1721},{"type":560,"tag":635,"props":1857,"children":1858},{"style":654},[1859],{"type":566,"value":1680},{"type":560,"tag":635,"props":1861,"children":1862},{"style":778},[1863],{"type":566,"value":1864},"4",{"type":560,"tag":635,"props":1866,"children":1867},{"style":654},[1868],{"type":566,"value":668},{"type":560,"tag":635,"props":1870,"children":1871},{"style":778},[1872],{"type":566,"value":1703},{"type":560,"tag":635,"props":1874,"children":1875},{"style":654},[1876],{"type":566,"value":1287},{"type":560,"tag":635,"props":1878,"children":1880},{"class":637,"line":1879},49,[1881,1885,1889,1893,1897,1901,1905,1909,1913,1917,1921],{"type":560,"tag":635,"props":1882,"children":1883},{"style":778},[1884],{"type":566,"value":1816},{"type":560,"tag":635,"props":1886,"children":1887},{"style":778},[1888],{"type":566,"value":1721},{"type":560,"tag":635,"props":1890,"children":1891},{"style":654},[1892],{"type":566,"value":1680},{"type":560,"tag":635,"props":1894,"children":1895},{"style":778},[1896],{"type":566,"value":1864},{"type":560,"tag":635,"props":1898,"children":1899},{"style":654},[1900],{"type":566,"value":668},{"type":560,"tag":635,"props":1902,"children":1903},{"style":778},[1904],{"type":566,"value":1694},{"type":560,"tag":635,"props":1906,"children":1907},{"style":654},[1908],{"type":566,"value":668},{"type":560,"tag":635,"props":1910,"children":1911},{"style":778},[1912],{"type":566,"value":1703},{"type":560,"tag":635,"props":1914,"children":1915},{"style":654},[1916],{"type":566,"value":668},{"type":560,"tag":635,"props":1918,"children":1919},{"style":778},[1920],{"type":566,"value":1838},{"type":560,"tag":635,"props":1922,"children":1923},{"style":654},[1924],{"type":566,"value":1287},{"type":560,"tag":635,"props":1926,"children":1928},{"class":637,"line":1927},50,[1929,1933,1937,1941,1946,1950,1954],{"type":560,"tag":635,"props":1930,"children":1931},{"style":778},[1932],{"type":566,"value":1864},{"type":560,"tag":635,"props":1934,"children":1935},{"style":778},[1936],{"type":566,"value":1694},{"type":560,"tag":635,"props":1938,"children":1939},{"style":654},[1940],{"type":566,"value":1680},{"type":560,"tag":635,"props":1942,"children":1943},{"style":778},[1944],{"type":566,"value":1945},"3",{"type":560,"tag":635,"props":1947,"children":1948},{"style":654},[1949],{"type":566,"value":668},{"type":560,"tag":635,"props":1951,"children":1952},{"style":778},[1953],{"type":566,"value":1730},{"type":560,"tag":635,"props":1955,"children":1956},{"style":654},[1957],{"type":566,"value":1287},{"type":560,"tag":635,"props":1959,"children":1961},{"class":637,"line":1960},51,[1962,1967,1971,1975,1979,1983,1987],{"type":560,"tag":635,"props":1963,"children":1964},{"style":778},[1965],{"type":566,"value":1966},"6",{"type":560,"tag":635,"props":1968,"children":1969},{"style":778},[1970],{"type":566,"value":1730},{"type":560,"tag":635,"props":1972,"children":1973},{"style":654},[1974],{"type":566,"value":1680},{"type":560,"tag":635,"props":1976,"children":1977},{"style":778},[1978],{"type":566,"value":1851},{"type":560,"tag":635,"props":1980,"children":1981},{"style":654},[1982],{"type":566,"value":668},{"type":560,"tag":635,"props":1984,"children":1985},{"style":778},[1986],{"type":566,"value":1739},{"type":560,"tag":635,"props":1988,"children":1989},{"style":654},[1990],{"type":566,"value":1287},{"type":560,"tag":635,"props":1992,"children":1994},{"class":637,"line":1993},52,[1995,1999,2003,2007,2011,2015,2019,2023,2027,2031,2035],{"type":560,"tag":635,"props":1996,"children":1997},{"style":778},[1998],{"type":566,"value":1864},{"type":560,"tag":635,"props":2000,"children":2001},{"style":778},[2002],{"type":566,"value":1730},{"type":560,"tag":635,"props":2004,"children":2005},{"style":654},[2006],{"type":566,"value":1680},{"type":560,"tag":635,"props":2008,"children":2009},{"style":778},[2010],{"type":566,"value":1851},{"type":560,"tag":635,"props":2012,"children":2013},{"style":654},[2014],{"type":566,"value":668},{"type":560,"tag":635,"props":2016,"children":2017},{"style":778},[2018],{"type":566,"value":1721},{"type":560,"tag":635,"props":2020,"children":2021},{"style":654},[2022],{"type":566,"value":668},{"type":560,"tag":635,"props":2024,"children":2025},{"style":778},[2026],{"type":566,"value":1730},{"type":560,"tag":635,"props":2028,"children":2029},{"style":654},[2030],{"type":566,"value":668},{"type":560,"tag":635,"props":2032,"children":2033},{"style":778},[2034],{"type":566,"value":1739},{"type":560,"tag":635,"props":2036,"children":2037},{"style":654},[2038],{"type":566,"value":1287},{"type":560,"tag":635,"props":2040,"children":2042},{"class":637,"line":2041},53,[2043,2047,2051,2055,2059,2063,2067,2071,2075,2079,2083,2087,2091,2095,2099,2103,2107,2111,2115],{"type":560,"tag":635,"props":2044,"children":2045},{"style":778},[2046],{"type":566,"value":1816},{"type":560,"tag":635,"props":2048,"children":2049},{"style":778},[2050],{"type":566,"value":1730},{"type":560,"tag":635,"props":2052,"children":2053},{"style":654},[2054],{"type":566,"value":1680},{"type":560,"tag":635,"props":2056,"children":2057},{"style":778},[2058],{"type":566,"value":1851},{"type":560,"tag":635,"props":2060,"children":2061},{"style":654},[2062],{"type":566,"value":668},{"type":560,"tag":635,"props":2064,"children":2065},{"style":778},[2066],{"type":566,"value":1721},{"type":560,"tag":635,"props":2068,"children":2069},{"style":654},[2070],{"type":566,"value":668},{"type":560,"tag":635,"props":2072,"children":2073},{"style":778},[2074],{"type":566,"value":1712},{"type":560,"tag":635,"props":2076,"children":2077},{"style":654},[2078],{"type":566,"value":668},{"type":560,"tag":635,"props":2080,"children":2081},{"style":778},[2082],{"type":566,"value":1694},{"type":560,"tag":635,"props":2084,"children":2085},{"style":654},[2086],{"type":566,"value":668},{"type":560,"tag":635,"props":2088,"children":2089},{"style":778},[2090],{"type":566,"value":1703},{"type":560,"tag":635,"props":2092,"children":2093},{"style":654},[2094],{"type":566,"value":668},{"type":560,"tag":635,"props":2096,"children":2097},{"style":778},[2098],{"type":566,"value":1730},{"type":560,"tag":635,"props":2100,"children":2101},{"style":654},[2102],{"type":566,"value":668},{"type":560,"tag":635,"props":2104,"children":2105},{"style":778},[2106],{"type":566,"value":1838},{"type":560,"tag":635,"props":2108,"children":2109},{"style":654},[2110],{"type":566,"value":668},{"type":560,"tag":635,"props":2112,"children":2113},{"style":778},[2114],{"type":566,"value":1739},{"type":560,"tag":635,"props":2116,"children":2117},{"style":654},[2118],{"type":566,"value":1287},{"type":560,"tag":2120,"props":2121,"children":2122},"style",{},[2123],{"type":566,"value":2124},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":555,"searchDepth":737,"depth":737,"links":2126},[2127,2128,2129,2130],{"id":563,"depth":699,"text":563},{"id":585,"depth":699,"text":585},{"id":615,"depth":699,"text":615},{"id":620,"depth":699,"text":620},"markdown","content:1.algorithm:2.solution-methods:sort:4.merge-sort.md","content","1.algorithm/2.solution-methods/sort/4.merge-sort.md","md",[2137,2138],{"_path":24,"title":23,"description":555},{"_path":30,"title":29,"description":555},1715137593972]