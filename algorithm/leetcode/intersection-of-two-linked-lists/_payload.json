[{"data":1,"prerenderedAt":2419},["Reactive",2],{"navigation":3,"/algorithm/leetcode/intersection-of-two-linked-lists":427,"/algorithm/leetcode/intersection-of-two-linked-lists-surround":2414},[4,237,265,406,413],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,399],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":382,"_path":383},"随机数","/frontend-code-assessment/scene/random-number",{"title":385,"_path":386},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":388,"_path":389},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":391,"_path":392},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":394,"_path":395},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":397,"_path":398},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":400,"_path":401,"children":402},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[403],{"title":404,"_path":405},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":407,"_path":408,"children":409},"项目","/pro",[410],{"title":411,"_path":412},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":414,"_path":415,"children":416},"后端语言","/backend-languages",[417],{"title":418,"_path":419,"children":420},"Python","/backend-languages/python",[421,424],{"title":422,"_path":423},"基础","/backend-languages/python/base",{"title":425,"_path":426},"函数","/backend-languages/python/function",{"_path":158,"_dir":428,"_draft":429,"_partial":429,"_locale":430,"title":157,"description":431,"url":432,"body":433,"_type":2409,"_id":2410,"_source":2411,"_file":2412,"_extension":2413},"leetcode",false,"","给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。","https://leetcode.cn/problems/intersection-of-two-linked-lists",{"type":434,"children":435,"toc":2401},"root",[436,443,448,457,462,467,472,477,507,517,583,593,640,645,653,700,705,748,753,759,764,770,1352,1357,1825,1830,2395],{"type":437,"tag":438,"props":439,"children":440},"element","p",{},[441],{"type":442,"value":431},"text",{"type":437,"tag":438,"props":444,"children":445},{},[446],{"type":442,"value":447},"图示两个链表在节点 c1 开始相交：",{"type":437,"tag":438,"props":449,"children":450},{},[451],{"type":437,"tag":452,"props":453,"children":456},"img",{"alt":454,"src":455},"statement","/img/code_leetcode_No.160_statement.png",[],{"type":437,"tag":438,"props":458,"children":459},{},[460],{"type":442,"value":461},"题目数据 保证 整个链式结构中不存在环。",{"type":437,"tag":438,"props":463,"children":464},{},[465],{"type":442,"value":466},"注意，函数返回结果后，链表必须 保持其原始结构 。",{"type":437,"tag":438,"props":468,"children":469},{},[470],{"type":442,"value":471},"自定义评测：",{"type":437,"tag":438,"props":473,"children":474},{},[475],{"type":442,"value":476},"评测系统 的输入如下（你设计的程序 不适用 此输入）：",{"type":437,"tag":478,"props":479,"children":480},"ul",{},[481,487,492,497,502],{"type":437,"tag":482,"props":483,"children":484},"li",{},[485],{"type":442,"value":486},"intersectVal - 相交的起始节点的值。如果不存在相交节点，这一值为 0",{"type":437,"tag":482,"props":488,"children":489},{},[490],{"type":442,"value":491},"listA - 第一个链表",{"type":437,"tag":482,"props":493,"children":494},{},[495],{"type":442,"value":496},"listB - 第二个链表",{"type":437,"tag":482,"props":498,"children":499},{},[500],{"type":442,"value":501},"skipA - 在 listA 中（从头节点开始）跳到交叉节点的节点数",{"type":437,"tag":482,"props":503,"children":504},{},[505],{"type":442,"value":506},"skipB - 在 listB 中（从头节点开始）跳到交叉节点的节点数\n评测系统将根据这些输入创建链式数据结构，并将两个头节点 headA 和 headB 传递给你的程序。如果程序能够正确返回相交节点，那么你的解决方案将被 视作正确答案 。",{"type":437,"tag":438,"props":508,"children":509},{},[510,512],{"type":442,"value":511},"示例 1：\n",{"type":437,"tag":452,"props":513,"children":516},{"alt":514,"src":515},"example_1","/img/code_leetcode_No.160_example_1.png",[],{"type":437,"tag":518,"props":519,"children":522},"pre",{"className":520,"code":521,"language":442,"meta":430,"style":430},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：intersectVal = 8, listA = [4,1,8,4,5], listB = [5,6,1,8,4,5], skipA = 2, skipB = 3\n输出：Intersected at '8'\n解释：相交节点的值为 8 （注意，如果两个链表相交则不能为 0）。\n从各自的表头开始算起，链表 A 为 [4,1,8,4,5]，链表 B 为 [5,6,1,8,4,5]。\n在 A 中，相交节点前有 2 个节点；在 B 中，相交节点前有 3 个节点。\n— 请注意相交节点的值不为 1，因为在链表 A 和链表 B 之中值为 1 的节点 (A 中第二个节点和 B 中第三个节点) 是不同的节点。换句话说，它们在内存中指向两个不同的位置，而链表 A 和链表 B 中值为 8 的节点 (A 中第三个节点，B 中第四个节点) 在内存中指向相同的位置。\n",[523],{"type":437,"tag":524,"props":525,"children":526},"code",{"__ignoreMap":430},[527,538,547,556,565,574],{"type":437,"tag":528,"props":529,"children":532},"span",{"class":530,"line":531},"line",1,[533],{"type":437,"tag":528,"props":534,"children":535},{},[536],{"type":442,"value":537},"输入：intersectVal = 8, listA = [4,1,8,4,5], listB = [5,6,1,8,4,5], skipA = 2, skipB = 3\n",{"type":437,"tag":528,"props":539,"children":541},{"class":530,"line":540},2,[542],{"type":437,"tag":528,"props":543,"children":544},{},[545],{"type":442,"value":546},"输出：Intersected at '8'\n",{"type":437,"tag":528,"props":548,"children":550},{"class":530,"line":549},3,[551],{"type":437,"tag":528,"props":552,"children":553},{},[554],{"type":442,"value":555},"解释：相交节点的值为 8 （注意，如果两个链表相交则不能为 0）。\n",{"type":437,"tag":528,"props":557,"children":559},{"class":530,"line":558},4,[560],{"type":437,"tag":528,"props":561,"children":562},{},[563],{"type":442,"value":564},"从各自的表头开始算起，链表 A 为 [4,1,8,4,5]，链表 B 为 [5,6,1,8,4,5]。\n",{"type":437,"tag":528,"props":566,"children":568},{"class":530,"line":567},5,[569],{"type":437,"tag":528,"props":570,"children":571},{},[572],{"type":442,"value":573},"在 A 中，相交节点前有 2 个节点；在 B 中，相交节点前有 3 个节点。\n",{"type":437,"tag":528,"props":575,"children":577},{"class":530,"line":576},6,[578],{"type":437,"tag":528,"props":579,"children":580},{},[581],{"type":442,"value":582},"— 请注意相交节点的值不为 1，因为在链表 A 和链表 B 之中值为 1 的节点 (A 中第二个节点和 B 中第三个节点) 是不同的节点。换句话说，它们在内存中指向两个不同的位置，而链表 A 和链表 B 中值为 8 的节点 (A 中第三个节点，B 中第四个节点) 在内存中指向相同的位置。\n",{"type":437,"tag":438,"props":584,"children":585},{},[586,588],{"type":442,"value":587},"示例 2：\n",{"type":437,"tag":452,"props":589,"children":592},{"alt":590,"src":591},"example_2","/img/code_leetcode_No.160_example_2.png",[],{"type":437,"tag":518,"props":594,"children":596},{"className":520,"code":595,"language":442,"meta":430,"style":430},"输入：intersectVal = 2, listA = [1,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1\n输出：Intersected at '2'\n解释：相交节点的值为 2 （注意，如果两个链表相交则不能为 0）。\n从各自的表头开始算起，链表 A 为 [1,9,1,2,4]，链表 B 为 [3,2,4]。\n在 A 中，相交节点前有 3 个节点；在 B 中，相交节点前有 1 个节点。\n",[597],{"type":437,"tag":524,"props":598,"children":599},{"__ignoreMap":430},[600,608,616,624,632],{"type":437,"tag":528,"props":601,"children":602},{"class":530,"line":531},[603],{"type":437,"tag":528,"props":604,"children":605},{},[606],{"type":442,"value":607},"输入：intersectVal = 2, listA = [1,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1\n",{"type":437,"tag":528,"props":609,"children":610},{"class":530,"line":540},[611],{"type":437,"tag":528,"props":612,"children":613},{},[614],{"type":442,"value":615},"输出：Intersected at '2'\n",{"type":437,"tag":528,"props":617,"children":618},{"class":530,"line":549},[619],{"type":437,"tag":528,"props":620,"children":621},{},[622],{"type":442,"value":623},"解释：相交节点的值为 2 （注意，如果两个链表相交则不能为 0）。\n",{"type":437,"tag":528,"props":625,"children":626},{"class":530,"line":558},[627],{"type":437,"tag":528,"props":628,"children":629},{},[630],{"type":442,"value":631},"从各自的表头开始算起，链表 A 为 [1,9,1,2,4]，链表 B 为 [3,2,4]。\n",{"type":437,"tag":528,"props":633,"children":634},{"class":530,"line":567},[635],{"type":437,"tag":528,"props":636,"children":637},{},[638],{"type":442,"value":639},"在 A 中，相交节点前有 3 个节点；在 B 中，相交节点前有 1 个节点。\n",{"type":437,"tag":438,"props":641,"children":642},{},[643],{"type":442,"value":644},"示例 3：",{"type":437,"tag":438,"props":646,"children":647},{},[648],{"type":437,"tag":452,"props":649,"children":652},{"alt":650,"src":651},"example_3","/img/code_leetcode_No.160_example_3.png",[],{"type":437,"tag":518,"props":654,"children":656},{"className":520,"code":655,"language":442,"meta":430,"style":430},"输入：intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2\n输出：null\n解释：从各自的表头开始算起，链表 A 为 [2,6,4]，链表 B 为 [1,5]。\n由于这两个链表不相交，所以 intersectVal 必须为 0，而 skipA 和 skipB 可以是任意值。\n这两个链表不相交，因此返回 null 。\n",[657],{"type":437,"tag":524,"props":658,"children":659},{"__ignoreMap":430},[660,668,676,684,692],{"type":437,"tag":528,"props":661,"children":662},{"class":530,"line":531},[663],{"type":437,"tag":528,"props":664,"children":665},{},[666],{"type":442,"value":667},"输入：intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2\n",{"type":437,"tag":528,"props":669,"children":670},{"class":530,"line":540},[671],{"type":437,"tag":528,"props":672,"children":673},{},[674],{"type":442,"value":675},"输出：null\n",{"type":437,"tag":528,"props":677,"children":678},{"class":530,"line":549},[679],{"type":437,"tag":528,"props":680,"children":681},{},[682],{"type":442,"value":683},"解释：从各自的表头开始算起，链表 A 为 [2,6,4]，链表 B 为 [1,5]。\n",{"type":437,"tag":528,"props":685,"children":686},{"class":530,"line":558},[687],{"type":437,"tag":528,"props":688,"children":689},{},[690],{"type":442,"value":691},"由于这两个链表不相交，所以 intersectVal 必须为 0，而 skipA 和 skipB 可以是任意值。\n",{"type":437,"tag":528,"props":693,"children":694},{"class":530,"line":567},[695],{"type":437,"tag":528,"props":696,"children":697},{},[698],{"type":442,"value":699},"这两个链表不相交，因此返回 null 。\n",{"type":437,"tag":438,"props":701,"children":702},{},[703],{"type":442,"value":704},"提示：",{"type":437,"tag":478,"props":706,"children":707},{},[708,713,718,723,728,733,738,743],{"type":437,"tag":482,"props":709,"children":710},{},[711],{"type":442,"value":712},"listA 中节点数目为 m",{"type":437,"tag":482,"props":714,"children":715},{},[716],{"type":442,"value":717},"listB 中节点数目为 n",{"type":437,"tag":482,"props":719,"children":720},{},[721],{"type":442,"value":722},"1 \u003C= m, n \u003C= 3 * 10^4",{"type":437,"tag":482,"props":724,"children":725},{},[726],{"type":442,"value":727},"1 \u003C= Node.val \u003C= 10^5",{"type":437,"tag":482,"props":729,"children":730},{},[731],{"type":442,"value":732},"0 \u003C= skipA \u003C= m",{"type":437,"tag":482,"props":734,"children":735},{},[736],{"type":442,"value":737},"0 \u003C= skipB \u003C= n",{"type":437,"tag":482,"props":739,"children":740},{},[741],{"type":442,"value":742},"如果 listA 和 listB 没有交点，intersectVal 为 0",{"type":437,"tag":482,"props":744,"children":745},{},[746],{"type":442,"value":747},"如果 listA 和 listB 有交点，intersectVal == listA[skipA] == listB[skipB]",{"type":437,"tag":438,"props":749,"children":750},{},[751],{"type":442,"value":752},"进阶：你能否设计一个时间复杂度 O(m + n) 、仅用 O(1) 内存的解决方案？",{"type":437,"tag":754,"props":755,"children":757},"h2",{"id":756},"解题思路",[758],{"type":442,"value":756},{"type":437,"tag":754,"props":760,"children":762},{"id":761},"实现",[763],{"type":442,"value":761},{"type":437,"tag":765,"props":766,"children":768},"h3",{"id":767},"暴力破解",[769],{"type":442,"value":767},{"type":437,"tag":518,"props":771,"children":775},{"className":772,"code":773,"language":774,"meta":430,"style":430},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for singly-linked list.\n */\nfunction ListNode(val) {\n  this.val = val;\n  this.next = null;\n}\n\n/**\n * @param {ListNode} headA\n * @param {ListNode} headB\n * @return {ListNode}\n */\nvar getIntersectionNode = function (headA, headB) {\n  if (!headA || !headB) return null;\n  let pA = headA;\n  while (pA) {\n    let pB = headB;\n    while (pB) {\n      if (pA === pB) return pA;\n      pB = pB.next;\n    }\n    pA = pA.next;\n  }\n  return pA;\n};\n","js",[776],{"type":437,"tag":524,"props":777,"children":778},{"__ignoreMap":430},[779,788,796,804,836,873,903,912,922,930,957,978,996,1004,1051,1107,1134,1156,1182,1204,1246,1275,1284,1313,1322,1339],{"type":437,"tag":528,"props":780,"children":781},{"class":530,"line":531},[782],{"type":437,"tag":528,"props":783,"children":785},{"style":784},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[786],{"type":442,"value":787},"/**\n",{"type":437,"tag":528,"props":789,"children":790},{"class":530,"line":540},[791],{"type":437,"tag":528,"props":792,"children":793},{"style":784},[794],{"type":442,"value":795}," * Definition for singly-linked list.\n",{"type":437,"tag":528,"props":797,"children":798},{"class":530,"line":549},[799],{"type":437,"tag":528,"props":800,"children":801},{"style":784},[802],{"type":442,"value":803}," */\n",{"type":437,"tag":528,"props":805,"children":806},{"class":530,"line":558},[807,813,819,825,831],{"type":437,"tag":528,"props":808,"children":810},{"style":809},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[811],{"type":442,"value":812},"function",{"type":437,"tag":528,"props":814,"children":816},{"style":815},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[817],{"type":442,"value":818}," ListNode",{"type":437,"tag":528,"props":820,"children":822},{"style":821},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[823],{"type":442,"value":824},"(",{"type":437,"tag":528,"props":826,"children":828},{"style":827},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[829],{"type":442,"value":830},"val",{"type":437,"tag":528,"props":832,"children":833},{"style":821},[834],{"type":442,"value":835},") {\n",{"type":437,"tag":528,"props":837,"children":838},{"class":530,"line":567},[839,845,851,856,862,867],{"type":437,"tag":528,"props":840,"children":842},{"style":841},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[843],{"type":442,"value":844},"  this",{"type":437,"tag":528,"props":846,"children":848},{"style":847},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[849],{"type":442,"value":850},".",{"type":437,"tag":528,"props":852,"children":854},{"style":853},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[855],{"type":442,"value":830},{"type":437,"tag":528,"props":857,"children":859},{"style":858},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[860],{"type":442,"value":861}," =",{"type":437,"tag":528,"props":863,"children":864},{"style":853},[865],{"type":442,"value":866}," val",{"type":437,"tag":528,"props":868,"children":870},{"style":869},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[871],{"type":442,"value":872},";\n",{"type":437,"tag":528,"props":874,"children":875},{"class":530,"line":576},[876,880,884,889,893,899],{"type":437,"tag":528,"props":877,"children":878},{"style":841},[879],{"type":442,"value":844},{"type":437,"tag":528,"props":881,"children":882},{"style":847},[883],{"type":442,"value":850},{"type":437,"tag":528,"props":885,"children":886},{"style":853},[887],{"type":442,"value":888},"next",{"type":437,"tag":528,"props":890,"children":891},{"style":858},[892],{"type":442,"value":861},{"type":437,"tag":528,"props":894,"children":896},{"style":895},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[897],{"type":442,"value":898}," null",{"type":437,"tag":528,"props":900,"children":901},{"style":869},[902],{"type":442,"value":872},{"type":437,"tag":528,"props":904,"children":906},{"class":530,"line":905},7,[907],{"type":437,"tag":528,"props":908,"children":909},{"style":821},[910],{"type":442,"value":911},"}\n",{"type":437,"tag":528,"props":913,"children":915},{"class":530,"line":914},8,[916],{"type":437,"tag":528,"props":917,"children":919},{"emptyLinePlaceholder":918},true,[920],{"type":442,"value":921},"\n",{"type":437,"tag":528,"props":923,"children":925},{"class":530,"line":924},9,[926],{"type":437,"tag":528,"props":927,"children":928},{"style":784},[929],{"type":442,"value":787},{"type":437,"tag":528,"props":931,"children":933},{"class":530,"line":932},10,[934,939,945,951],{"type":437,"tag":528,"props":935,"children":936},{"style":784},[937],{"type":442,"value":938}," * ",{"type":437,"tag":528,"props":940,"children":942},{"style":941},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[943],{"type":442,"value":944},"@param",{"type":437,"tag":528,"props":946,"children":948},{"style":947},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[949],{"type":442,"value":950}," {ListNode}",{"type":437,"tag":528,"props":952,"children":954},{"style":953},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[955],{"type":442,"value":956}," headA\n",{"type":437,"tag":528,"props":958,"children":960},{"class":530,"line":959},11,[961,965,969,973],{"type":437,"tag":528,"props":962,"children":963},{"style":784},[964],{"type":442,"value":938},{"type":437,"tag":528,"props":966,"children":967},{"style":941},[968],{"type":442,"value":944},{"type":437,"tag":528,"props":970,"children":971},{"style":947},[972],{"type":442,"value":950},{"type":437,"tag":528,"props":974,"children":975},{"style":953},[976],{"type":442,"value":977}," headB\n",{"type":437,"tag":528,"props":979,"children":981},{"class":530,"line":980},12,[982,986,991],{"type":437,"tag":528,"props":983,"children":984},{"style":784},[985],{"type":442,"value":938},{"type":437,"tag":528,"props":987,"children":988},{"style":941},[989],{"type":442,"value":990},"@return",{"type":437,"tag":528,"props":992,"children":993},{"style":947},[994],{"type":442,"value":995}," {ListNode}\n",{"type":437,"tag":528,"props":997,"children":999},{"class":530,"line":998},13,[1000],{"type":437,"tag":528,"props":1001,"children":1002},{"style":784},[1003],{"type":442,"value":803},{"type":437,"tag":528,"props":1005,"children":1007},{"class":530,"line":1006},14,[1008,1013,1018,1022,1027,1032,1037,1042,1047],{"type":437,"tag":528,"props":1009,"children":1010},{"style":809},[1011],{"type":442,"value":1012},"var",{"type":437,"tag":528,"props":1014,"children":1015},{"style":815},[1016],{"type":442,"value":1017}," getIntersectionNode",{"type":437,"tag":528,"props":1019,"children":1020},{"style":858},[1021],{"type":442,"value":861},{"type":437,"tag":528,"props":1023,"children":1024},{"style":809},[1025],{"type":442,"value":1026}," function",{"type":437,"tag":528,"props":1028,"children":1029},{"style":821},[1030],{"type":442,"value":1031}," (",{"type":437,"tag":528,"props":1033,"children":1034},{"style":827},[1035],{"type":442,"value":1036},"headA",{"type":437,"tag":528,"props":1038,"children":1039},{"style":869},[1040],{"type":442,"value":1041},",",{"type":437,"tag":528,"props":1043,"children":1044},{"style":827},[1045],{"type":442,"value":1046}," headB",{"type":437,"tag":528,"props":1048,"children":1049},{"style":821},[1050],{"type":442,"value":835},{"type":437,"tag":528,"props":1052,"children":1054},{"class":530,"line":1053},15,[1055,1061,1065,1070,1074,1079,1084,1089,1094,1099,1103],{"type":437,"tag":528,"props":1056,"children":1058},{"style":1057},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[1059],{"type":442,"value":1060},"  if",{"type":437,"tag":528,"props":1062,"children":1063},{"style":821},[1064],{"type":442,"value":1031},{"type":437,"tag":528,"props":1066,"children":1067},{"style":858},[1068],{"type":442,"value":1069},"!",{"type":437,"tag":528,"props":1071,"children":1072},{"style":853},[1073],{"type":442,"value":1036},{"type":437,"tag":528,"props":1075,"children":1076},{"style":858},[1077],{"type":442,"value":1078}," ||",{"type":437,"tag":528,"props":1080,"children":1081},{"style":858},[1082],{"type":442,"value":1083}," !",{"type":437,"tag":528,"props":1085,"children":1086},{"style":853},[1087],{"type":442,"value":1088},"headB",{"type":437,"tag":528,"props":1090,"children":1091},{"style":821},[1092],{"type":442,"value":1093},") ",{"type":437,"tag":528,"props":1095,"children":1096},{"style":1057},[1097],{"type":442,"value":1098},"return",{"type":437,"tag":528,"props":1100,"children":1101},{"style":895},[1102],{"type":442,"value":898},{"type":437,"tag":528,"props":1104,"children":1105},{"style":869},[1106],{"type":442,"value":872},{"type":437,"tag":528,"props":1108,"children":1110},{"class":530,"line":1109},16,[1111,1116,1121,1125,1130],{"type":437,"tag":528,"props":1112,"children":1113},{"style":809},[1114],{"type":442,"value":1115},"  let",{"type":437,"tag":528,"props":1117,"children":1118},{"style":853},[1119],{"type":442,"value":1120}," pA",{"type":437,"tag":528,"props":1122,"children":1123},{"style":858},[1124],{"type":442,"value":861},{"type":437,"tag":528,"props":1126,"children":1127},{"style":853},[1128],{"type":442,"value":1129}," headA",{"type":437,"tag":528,"props":1131,"children":1132},{"style":869},[1133],{"type":442,"value":872},{"type":437,"tag":528,"props":1135,"children":1137},{"class":530,"line":1136},17,[1138,1143,1147,1152],{"type":437,"tag":528,"props":1139,"children":1140},{"style":1057},[1141],{"type":442,"value":1142},"  while",{"type":437,"tag":528,"props":1144,"children":1145},{"style":821},[1146],{"type":442,"value":1031},{"type":437,"tag":528,"props":1148,"children":1149},{"style":853},[1150],{"type":442,"value":1151},"pA",{"type":437,"tag":528,"props":1153,"children":1154},{"style":821},[1155],{"type":442,"value":835},{"type":437,"tag":528,"props":1157,"children":1159},{"class":530,"line":1158},18,[1160,1165,1170,1174,1178],{"type":437,"tag":528,"props":1161,"children":1162},{"style":809},[1163],{"type":442,"value":1164},"    let",{"type":437,"tag":528,"props":1166,"children":1167},{"style":853},[1168],{"type":442,"value":1169}," pB",{"type":437,"tag":528,"props":1171,"children":1172},{"style":858},[1173],{"type":442,"value":861},{"type":437,"tag":528,"props":1175,"children":1176},{"style":853},[1177],{"type":442,"value":1046},{"type":437,"tag":528,"props":1179,"children":1180},{"style":869},[1181],{"type":442,"value":872},{"type":437,"tag":528,"props":1183,"children":1185},{"class":530,"line":1184},19,[1186,1191,1195,1200],{"type":437,"tag":528,"props":1187,"children":1188},{"style":1057},[1189],{"type":442,"value":1190},"    while",{"type":437,"tag":528,"props":1192,"children":1193},{"style":821},[1194],{"type":442,"value":1031},{"type":437,"tag":528,"props":1196,"children":1197},{"style":853},[1198],{"type":442,"value":1199},"pB",{"type":437,"tag":528,"props":1201,"children":1202},{"style":821},[1203],{"type":442,"value":835},{"type":437,"tag":528,"props":1205,"children":1207},{"class":530,"line":1206},20,[1208,1213,1217,1221,1226,1230,1234,1238,1242],{"type":437,"tag":528,"props":1209,"children":1210},{"style":1057},[1211],{"type":442,"value":1212},"      if",{"type":437,"tag":528,"props":1214,"children":1215},{"style":821},[1216],{"type":442,"value":1031},{"type":437,"tag":528,"props":1218,"children":1219},{"style":853},[1220],{"type":442,"value":1151},{"type":437,"tag":528,"props":1222,"children":1223},{"style":858},[1224],{"type":442,"value":1225}," ===",{"type":437,"tag":528,"props":1227,"children":1228},{"style":853},[1229],{"type":442,"value":1169},{"type":437,"tag":528,"props":1231,"children":1232},{"style":821},[1233],{"type":442,"value":1093},{"type":437,"tag":528,"props":1235,"children":1236},{"style":1057},[1237],{"type":442,"value":1098},{"type":437,"tag":528,"props":1239,"children":1240},{"style":853},[1241],{"type":442,"value":1120},{"type":437,"tag":528,"props":1243,"children":1244},{"style":869},[1245],{"type":442,"value":872},{"type":437,"tag":528,"props":1247,"children":1249},{"class":530,"line":1248},21,[1250,1255,1259,1263,1267,1271],{"type":437,"tag":528,"props":1251,"children":1252},{"style":853},[1253],{"type":442,"value":1254},"      pB",{"type":437,"tag":528,"props":1256,"children":1257},{"style":858},[1258],{"type":442,"value":861},{"type":437,"tag":528,"props":1260,"children":1261},{"style":853},[1262],{"type":442,"value":1169},{"type":437,"tag":528,"props":1264,"children":1265},{"style":847},[1266],{"type":442,"value":850},{"type":437,"tag":528,"props":1268,"children":1269},{"style":853},[1270],{"type":442,"value":888},{"type":437,"tag":528,"props":1272,"children":1273},{"style":869},[1274],{"type":442,"value":872},{"type":437,"tag":528,"props":1276,"children":1278},{"class":530,"line":1277},22,[1279],{"type":437,"tag":528,"props":1280,"children":1281},{"style":821},[1282],{"type":442,"value":1283},"    }\n",{"type":437,"tag":528,"props":1285,"children":1287},{"class":530,"line":1286},23,[1288,1293,1297,1301,1305,1309],{"type":437,"tag":528,"props":1289,"children":1290},{"style":853},[1291],{"type":442,"value":1292},"    pA",{"type":437,"tag":528,"props":1294,"children":1295},{"style":858},[1296],{"type":442,"value":861},{"type":437,"tag":528,"props":1298,"children":1299},{"style":853},[1300],{"type":442,"value":1120},{"type":437,"tag":528,"props":1302,"children":1303},{"style":847},[1304],{"type":442,"value":850},{"type":437,"tag":528,"props":1306,"children":1307},{"style":853},[1308],{"type":442,"value":888},{"type":437,"tag":528,"props":1310,"children":1311},{"style":869},[1312],{"type":442,"value":872},{"type":437,"tag":528,"props":1314,"children":1316},{"class":530,"line":1315},24,[1317],{"type":437,"tag":528,"props":1318,"children":1319},{"style":821},[1320],{"type":442,"value":1321},"  }\n",{"type":437,"tag":528,"props":1323,"children":1325},{"class":530,"line":1324},25,[1326,1331,1335],{"type":437,"tag":528,"props":1327,"children":1328},{"style":1057},[1329],{"type":442,"value":1330},"  return",{"type":437,"tag":528,"props":1332,"children":1333},{"style":853},[1334],{"type":442,"value":1120},{"type":437,"tag":528,"props":1336,"children":1337},{"style":869},[1338],{"type":442,"value":872},{"type":437,"tag":528,"props":1340,"children":1342},{"class":530,"line":1341},26,[1343,1348],{"type":437,"tag":528,"props":1344,"children":1345},{"style":821},[1346],{"type":442,"value":1347},"}",{"type":437,"tag":528,"props":1349,"children":1350},{"style":869},[1351],{"type":442,"value":872},{"type":437,"tag":765,"props":1353,"children":1355},{"id":1354},"双指针",[1356],{"type":442,"value":1354},{"type":437,"tag":518,"props":1358,"children":1360},{"className":772,"code":1359,"language":774,"meta":430,"style":430},"/**\n * Definition for singly-linked list.\n */\nfunction ListNode(val) {\n  this.val = val;\n  this.next = null;\n}\n\n/**\n * @param {ListNode} headA\n * @param {ListNode} headB\n * @return {ListNode}\n */\nvar getIntersectionNode = function (headA, headB) {\n  if (!headA || !headB) return null;\n  let pA = headA;\n  let pB = headB;\n  while (pA !== pB) {\n    pA = pA ? pA.next : headB;\n    pB = pB ? pB.next : headA;\n  }\n  return pA;\n};\n",[1361],{"type":437,"tag":524,"props":1362,"children":1363},{"__ignoreMap":430},[1364,1371,1378,1385,1408,1435,1462,1469,1476,1483,1502,1521,1536,1543,1582,1629,1652,1675,1703,1748,1792,1799,1814],{"type":437,"tag":528,"props":1365,"children":1366},{"class":530,"line":531},[1367],{"type":437,"tag":528,"props":1368,"children":1369},{"style":784},[1370],{"type":442,"value":787},{"type":437,"tag":528,"props":1372,"children":1373},{"class":530,"line":540},[1374],{"type":437,"tag":528,"props":1375,"children":1376},{"style":784},[1377],{"type":442,"value":795},{"type":437,"tag":528,"props":1379,"children":1380},{"class":530,"line":549},[1381],{"type":437,"tag":528,"props":1382,"children":1383},{"style":784},[1384],{"type":442,"value":803},{"type":437,"tag":528,"props":1386,"children":1387},{"class":530,"line":558},[1388,1392,1396,1400,1404],{"type":437,"tag":528,"props":1389,"children":1390},{"style":809},[1391],{"type":442,"value":812},{"type":437,"tag":528,"props":1393,"children":1394},{"style":815},[1395],{"type":442,"value":818},{"type":437,"tag":528,"props":1397,"children":1398},{"style":821},[1399],{"type":442,"value":824},{"type":437,"tag":528,"props":1401,"children":1402},{"style":827},[1403],{"type":442,"value":830},{"type":437,"tag":528,"props":1405,"children":1406},{"style":821},[1407],{"type":442,"value":835},{"type":437,"tag":528,"props":1409,"children":1410},{"class":530,"line":567},[1411,1415,1419,1423,1427,1431],{"type":437,"tag":528,"props":1412,"children":1413},{"style":841},[1414],{"type":442,"value":844},{"type":437,"tag":528,"props":1416,"children":1417},{"style":847},[1418],{"type":442,"value":850},{"type":437,"tag":528,"props":1420,"children":1421},{"style":853},[1422],{"type":442,"value":830},{"type":437,"tag":528,"props":1424,"children":1425},{"style":858},[1426],{"type":442,"value":861},{"type":437,"tag":528,"props":1428,"children":1429},{"style":853},[1430],{"type":442,"value":866},{"type":437,"tag":528,"props":1432,"children":1433},{"style":869},[1434],{"type":442,"value":872},{"type":437,"tag":528,"props":1436,"children":1437},{"class":530,"line":576},[1438,1442,1446,1450,1454,1458],{"type":437,"tag":528,"props":1439,"children":1440},{"style":841},[1441],{"type":442,"value":844},{"type":437,"tag":528,"props":1443,"children":1444},{"style":847},[1445],{"type":442,"value":850},{"type":437,"tag":528,"props":1447,"children":1448},{"style":853},[1449],{"type":442,"value":888},{"type":437,"tag":528,"props":1451,"children":1452},{"style":858},[1453],{"type":442,"value":861},{"type":437,"tag":528,"props":1455,"children":1456},{"style":895},[1457],{"type":442,"value":898},{"type":437,"tag":528,"props":1459,"children":1460},{"style":869},[1461],{"type":442,"value":872},{"type":437,"tag":528,"props":1463,"children":1464},{"class":530,"line":905},[1465],{"type":437,"tag":528,"props":1466,"children":1467},{"style":821},[1468],{"type":442,"value":911},{"type":437,"tag":528,"props":1470,"children":1471},{"class":530,"line":914},[1472],{"type":437,"tag":528,"props":1473,"children":1474},{"emptyLinePlaceholder":918},[1475],{"type":442,"value":921},{"type":437,"tag":528,"props":1477,"children":1478},{"class":530,"line":924},[1479],{"type":437,"tag":528,"props":1480,"children":1481},{"style":784},[1482],{"type":442,"value":787},{"type":437,"tag":528,"props":1484,"children":1485},{"class":530,"line":932},[1486,1490,1494,1498],{"type":437,"tag":528,"props":1487,"children":1488},{"style":784},[1489],{"type":442,"value":938},{"type":437,"tag":528,"props":1491,"children":1492},{"style":941},[1493],{"type":442,"value":944},{"type":437,"tag":528,"props":1495,"children":1496},{"style":947},[1497],{"type":442,"value":950},{"type":437,"tag":528,"props":1499,"children":1500},{"style":953},[1501],{"type":442,"value":956},{"type":437,"tag":528,"props":1503,"children":1504},{"class":530,"line":959},[1505,1509,1513,1517],{"type":437,"tag":528,"props":1506,"children":1507},{"style":784},[1508],{"type":442,"value":938},{"type":437,"tag":528,"props":1510,"children":1511},{"style":941},[1512],{"type":442,"value":944},{"type":437,"tag":528,"props":1514,"children":1515},{"style":947},[1516],{"type":442,"value":950},{"type":437,"tag":528,"props":1518,"children":1519},{"style":953},[1520],{"type":442,"value":977},{"type":437,"tag":528,"props":1522,"children":1523},{"class":530,"line":980},[1524,1528,1532],{"type":437,"tag":528,"props":1525,"children":1526},{"style":784},[1527],{"type":442,"value":938},{"type":437,"tag":528,"props":1529,"children":1530},{"style":941},[1531],{"type":442,"value":990},{"type":437,"tag":528,"props":1533,"children":1534},{"style":947},[1535],{"type":442,"value":995},{"type":437,"tag":528,"props":1537,"children":1538},{"class":530,"line":998},[1539],{"type":437,"tag":528,"props":1540,"children":1541},{"style":784},[1542],{"type":442,"value":803},{"type":437,"tag":528,"props":1544,"children":1545},{"class":530,"line":1006},[1546,1550,1554,1558,1562,1566,1570,1574,1578],{"type":437,"tag":528,"props":1547,"children":1548},{"style":809},[1549],{"type":442,"value":1012},{"type":437,"tag":528,"props":1551,"children":1552},{"style":815},[1553],{"type":442,"value":1017},{"type":437,"tag":528,"props":1555,"children":1556},{"style":858},[1557],{"type":442,"value":861},{"type":437,"tag":528,"props":1559,"children":1560},{"style":809},[1561],{"type":442,"value":1026},{"type":437,"tag":528,"props":1563,"children":1564},{"style":821},[1565],{"type":442,"value":1031},{"type":437,"tag":528,"props":1567,"children":1568},{"style":827},[1569],{"type":442,"value":1036},{"type":437,"tag":528,"props":1571,"children":1572},{"style":869},[1573],{"type":442,"value":1041},{"type":437,"tag":528,"props":1575,"children":1576},{"style":827},[1577],{"type":442,"value":1046},{"type":437,"tag":528,"props":1579,"children":1580},{"style":821},[1581],{"type":442,"value":835},{"type":437,"tag":528,"props":1583,"children":1584},{"class":530,"line":1053},[1585,1589,1593,1597,1601,1605,1609,1613,1617,1621,1625],{"type":437,"tag":528,"props":1586,"children":1587},{"style":1057},[1588],{"type":442,"value":1060},{"type":437,"tag":528,"props":1590,"children":1591},{"style":821},[1592],{"type":442,"value":1031},{"type":437,"tag":528,"props":1594,"children":1595},{"style":858},[1596],{"type":442,"value":1069},{"type":437,"tag":528,"props":1598,"children":1599},{"style":853},[1600],{"type":442,"value":1036},{"type":437,"tag":528,"props":1602,"children":1603},{"style":858},[1604],{"type":442,"value":1078},{"type":437,"tag":528,"props":1606,"children":1607},{"style":858},[1608],{"type":442,"value":1083},{"type":437,"tag":528,"props":1610,"children":1611},{"style":853},[1612],{"type":442,"value":1088},{"type":437,"tag":528,"props":1614,"children":1615},{"style":821},[1616],{"type":442,"value":1093},{"type":437,"tag":528,"props":1618,"children":1619},{"style":1057},[1620],{"type":442,"value":1098},{"type":437,"tag":528,"props":1622,"children":1623},{"style":895},[1624],{"type":442,"value":898},{"type":437,"tag":528,"props":1626,"children":1627},{"style":869},[1628],{"type":442,"value":872},{"type":437,"tag":528,"props":1630,"children":1631},{"class":530,"line":1109},[1632,1636,1640,1644,1648],{"type":437,"tag":528,"props":1633,"children":1634},{"style":809},[1635],{"type":442,"value":1115},{"type":437,"tag":528,"props":1637,"children":1638},{"style":853},[1639],{"type":442,"value":1120},{"type":437,"tag":528,"props":1641,"children":1642},{"style":858},[1643],{"type":442,"value":861},{"type":437,"tag":528,"props":1645,"children":1646},{"style":853},[1647],{"type":442,"value":1129},{"type":437,"tag":528,"props":1649,"children":1650},{"style":869},[1651],{"type":442,"value":872},{"type":437,"tag":528,"props":1653,"children":1654},{"class":530,"line":1136},[1655,1659,1663,1667,1671],{"type":437,"tag":528,"props":1656,"children":1657},{"style":809},[1658],{"type":442,"value":1115},{"type":437,"tag":528,"props":1660,"children":1661},{"style":853},[1662],{"type":442,"value":1169},{"type":437,"tag":528,"props":1664,"children":1665},{"style":858},[1666],{"type":442,"value":861},{"type":437,"tag":528,"props":1668,"children":1669},{"style":853},[1670],{"type":442,"value":1046},{"type":437,"tag":528,"props":1672,"children":1673},{"style":869},[1674],{"type":442,"value":872},{"type":437,"tag":528,"props":1676,"children":1677},{"class":530,"line":1158},[1678,1682,1686,1690,1695,1699],{"type":437,"tag":528,"props":1679,"children":1680},{"style":1057},[1681],{"type":442,"value":1142},{"type":437,"tag":528,"props":1683,"children":1684},{"style":821},[1685],{"type":442,"value":1031},{"type":437,"tag":528,"props":1687,"children":1688},{"style":853},[1689],{"type":442,"value":1151},{"type":437,"tag":528,"props":1691,"children":1692},{"style":858},[1693],{"type":442,"value":1694}," !==",{"type":437,"tag":528,"props":1696,"children":1697},{"style":853},[1698],{"type":442,"value":1169},{"type":437,"tag":528,"props":1700,"children":1701},{"style":821},[1702],{"type":442,"value":835},{"type":437,"tag":528,"props":1704,"children":1705},{"class":530,"line":1184},[1706,1710,1714,1718,1723,1727,1731,1735,1740,1744],{"type":437,"tag":528,"props":1707,"children":1708},{"style":853},[1709],{"type":442,"value":1292},{"type":437,"tag":528,"props":1711,"children":1712},{"style":858},[1713],{"type":442,"value":861},{"type":437,"tag":528,"props":1715,"children":1716},{"style":853},[1717],{"type":442,"value":1120},{"type":437,"tag":528,"props":1719,"children":1720},{"style":858},[1721],{"type":442,"value":1722}," ?",{"type":437,"tag":528,"props":1724,"children":1725},{"style":853},[1726],{"type":442,"value":1120},{"type":437,"tag":528,"props":1728,"children":1729},{"style":847},[1730],{"type":442,"value":850},{"type":437,"tag":528,"props":1732,"children":1733},{"style":853},[1734],{"type":442,"value":888},{"type":437,"tag":528,"props":1736,"children":1737},{"style":858},[1738],{"type":442,"value":1739}," :",{"type":437,"tag":528,"props":1741,"children":1742},{"style":853},[1743],{"type":442,"value":1046},{"type":437,"tag":528,"props":1745,"children":1746},{"style":869},[1747],{"type":442,"value":872},{"type":437,"tag":528,"props":1749,"children":1750},{"class":530,"line":1206},[1751,1756,1760,1764,1768,1772,1776,1780,1784,1788],{"type":437,"tag":528,"props":1752,"children":1753},{"style":853},[1754],{"type":442,"value":1755},"    pB",{"type":437,"tag":528,"props":1757,"children":1758},{"style":858},[1759],{"type":442,"value":861},{"type":437,"tag":528,"props":1761,"children":1762},{"style":853},[1763],{"type":442,"value":1169},{"type":437,"tag":528,"props":1765,"children":1766},{"style":858},[1767],{"type":442,"value":1722},{"type":437,"tag":528,"props":1769,"children":1770},{"style":853},[1771],{"type":442,"value":1169},{"type":437,"tag":528,"props":1773,"children":1774},{"style":847},[1775],{"type":442,"value":850},{"type":437,"tag":528,"props":1777,"children":1778},{"style":853},[1779],{"type":442,"value":888},{"type":437,"tag":528,"props":1781,"children":1782},{"style":858},[1783],{"type":442,"value":1739},{"type":437,"tag":528,"props":1785,"children":1786},{"style":853},[1787],{"type":442,"value":1129},{"type":437,"tag":528,"props":1789,"children":1790},{"style":869},[1791],{"type":442,"value":872},{"type":437,"tag":528,"props":1793,"children":1794},{"class":530,"line":1248},[1795],{"type":437,"tag":528,"props":1796,"children":1797},{"style":821},[1798],{"type":442,"value":1321},{"type":437,"tag":528,"props":1800,"children":1801},{"class":530,"line":1277},[1802,1806,1810],{"type":437,"tag":528,"props":1803,"children":1804},{"style":1057},[1805],{"type":442,"value":1330},{"type":437,"tag":528,"props":1807,"children":1808},{"style":853},[1809],{"type":442,"value":1120},{"type":437,"tag":528,"props":1811,"children":1812},{"style":869},[1813],{"type":442,"value":872},{"type":437,"tag":528,"props":1815,"children":1816},{"class":530,"line":1286},[1817,1821],{"type":437,"tag":528,"props":1818,"children":1819},{"style":821},[1820],{"type":442,"value":1347},{"type":437,"tag":528,"props":1822,"children":1823},{"style":869},[1824],{"type":442,"value":872},{"type":437,"tag":765,"props":1826,"children":1828},{"id":1827},"哈希法",[1829],{"type":442,"value":1827},{"type":437,"tag":518,"props":1831,"children":1833},{"className":772,"code":1832,"language":774,"meta":430,"style":430},"/**\n * Definition for singly-linked list.\n */\nfunction ListNode(val) {\n  this.val = val;\n  this.next = null;\n}\n\n/**\n * @param {ListNode} headA\n * @param {ListNode} headB\n * @return {ListNode}\n */\nvar getIntersectionNode = function (headA, headB) {\n  if (!headA || !headB) return null;\n  let map = new Map();\n  let pA = headA;\n  let pB = headB;\n  while (pA) {\n    map.set(pA, 1);\n    pA = pA.next;\n  }\n  while (pB) {\n    if (map.has(pB)) return pB;\n    pB = pB.next;\n  }\n};\n",[1834],{"type":437,"tag":524,"props":1835,"children":1836},{"__ignoreMap":430},[1837,1844,1851,1858,1881,1908,1935,1942,1949,1956,1975,1994,2009,2016,2055,2102,2137,2160,2183,2202,2245,2272,2279,2298,2349,2376,2383],{"type":437,"tag":528,"props":1838,"children":1839},{"class":530,"line":531},[1840],{"type":437,"tag":528,"props":1841,"children":1842},{"style":784},[1843],{"type":442,"value":787},{"type":437,"tag":528,"props":1845,"children":1846},{"class":530,"line":540},[1847],{"type":437,"tag":528,"props":1848,"children":1849},{"style":784},[1850],{"type":442,"value":795},{"type":437,"tag":528,"props":1852,"children":1853},{"class":530,"line":549},[1854],{"type":437,"tag":528,"props":1855,"children":1856},{"style":784},[1857],{"type":442,"value":803},{"type":437,"tag":528,"props":1859,"children":1860},{"class":530,"line":558},[1861,1865,1869,1873,1877],{"type":437,"tag":528,"props":1862,"children":1863},{"style":809},[1864],{"type":442,"value":812},{"type":437,"tag":528,"props":1866,"children":1867},{"style":815},[1868],{"type":442,"value":818},{"type":437,"tag":528,"props":1870,"children":1871},{"style":821},[1872],{"type":442,"value":824},{"type":437,"tag":528,"props":1874,"children":1875},{"style":827},[1876],{"type":442,"value":830},{"type":437,"tag":528,"props":1878,"children":1879},{"style":821},[1880],{"type":442,"value":835},{"type":437,"tag":528,"props":1882,"children":1883},{"class":530,"line":567},[1884,1888,1892,1896,1900,1904],{"type":437,"tag":528,"props":1885,"children":1886},{"style":841},[1887],{"type":442,"value":844},{"type":437,"tag":528,"props":1889,"children":1890},{"style":847},[1891],{"type":442,"value":850},{"type":437,"tag":528,"props":1893,"children":1894},{"style":853},[1895],{"type":442,"value":830},{"type":437,"tag":528,"props":1897,"children":1898},{"style":858},[1899],{"type":442,"value":861},{"type":437,"tag":528,"props":1901,"children":1902},{"style":853},[1903],{"type":442,"value":866},{"type":437,"tag":528,"props":1905,"children":1906},{"style":869},[1907],{"type":442,"value":872},{"type":437,"tag":528,"props":1909,"children":1910},{"class":530,"line":576},[1911,1915,1919,1923,1927,1931],{"type":437,"tag":528,"props":1912,"children":1913},{"style":841},[1914],{"type":442,"value":844},{"type":437,"tag":528,"props":1916,"children":1917},{"style":847},[1918],{"type":442,"value":850},{"type":437,"tag":528,"props":1920,"children":1921},{"style":853},[1922],{"type":442,"value":888},{"type":437,"tag":528,"props":1924,"children":1925},{"style":858},[1926],{"type":442,"value":861},{"type":437,"tag":528,"props":1928,"children":1929},{"style":895},[1930],{"type":442,"value":898},{"type":437,"tag":528,"props":1932,"children":1933},{"style":869},[1934],{"type":442,"value":872},{"type":437,"tag":528,"props":1936,"children":1937},{"class":530,"line":905},[1938],{"type":437,"tag":528,"props":1939,"children":1940},{"style":821},[1941],{"type":442,"value":911},{"type":437,"tag":528,"props":1943,"children":1944},{"class":530,"line":914},[1945],{"type":437,"tag":528,"props":1946,"children":1947},{"emptyLinePlaceholder":918},[1948],{"type":442,"value":921},{"type":437,"tag":528,"props":1950,"children":1951},{"class":530,"line":924},[1952],{"type":437,"tag":528,"props":1953,"children":1954},{"style":784},[1955],{"type":442,"value":787},{"type":437,"tag":528,"props":1957,"children":1958},{"class":530,"line":932},[1959,1963,1967,1971],{"type":437,"tag":528,"props":1960,"children":1961},{"style":784},[1962],{"type":442,"value":938},{"type":437,"tag":528,"props":1964,"children":1965},{"style":941},[1966],{"type":442,"value":944},{"type":437,"tag":528,"props":1968,"children":1969},{"style":947},[1970],{"type":442,"value":950},{"type":437,"tag":528,"props":1972,"children":1973},{"style":953},[1974],{"type":442,"value":956},{"type":437,"tag":528,"props":1976,"children":1977},{"class":530,"line":959},[1978,1982,1986,1990],{"type":437,"tag":528,"props":1979,"children":1980},{"style":784},[1981],{"type":442,"value":938},{"type":437,"tag":528,"props":1983,"children":1984},{"style":941},[1985],{"type":442,"value":944},{"type":437,"tag":528,"props":1987,"children":1988},{"style":947},[1989],{"type":442,"value":950},{"type":437,"tag":528,"props":1991,"children":1992},{"style":953},[1993],{"type":442,"value":977},{"type":437,"tag":528,"props":1995,"children":1996},{"class":530,"line":980},[1997,2001,2005],{"type":437,"tag":528,"props":1998,"children":1999},{"style":784},[2000],{"type":442,"value":938},{"type":437,"tag":528,"props":2002,"children":2003},{"style":941},[2004],{"type":442,"value":990},{"type":437,"tag":528,"props":2006,"children":2007},{"style":947},[2008],{"type":442,"value":995},{"type":437,"tag":528,"props":2010,"children":2011},{"class":530,"line":998},[2012],{"type":437,"tag":528,"props":2013,"children":2014},{"style":784},[2015],{"type":442,"value":803},{"type":437,"tag":528,"props":2017,"children":2018},{"class":530,"line":1006},[2019,2023,2027,2031,2035,2039,2043,2047,2051],{"type":437,"tag":528,"props":2020,"children":2021},{"style":809},[2022],{"type":442,"value":1012},{"type":437,"tag":528,"props":2024,"children":2025},{"style":815},[2026],{"type":442,"value":1017},{"type":437,"tag":528,"props":2028,"children":2029},{"style":858},[2030],{"type":442,"value":861},{"type":437,"tag":528,"props":2032,"children":2033},{"style":809},[2034],{"type":442,"value":1026},{"type":437,"tag":528,"props":2036,"children":2037},{"style":821},[2038],{"type":442,"value":1031},{"type":437,"tag":528,"props":2040,"children":2041},{"style":827},[2042],{"type":442,"value":1036},{"type":437,"tag":528,"props":2044,"children":2045},{"style":869},[2046],{"type":442,"value":1041},{"type":437,"tag":528,"props":2048,"children":2049},{"style":827},[2050],{"type":442,"value":1046},{"type":437,"tag":528,"props":2052,"children":2053},{"style":821},[2054],{"type":442,"value":835},{"type":437,"tag":528,"props":2056,"children":2057},{"class":530,"line":1053},[2058,2062,2066,2070,2074,2078,2082,2086,2090,2094,2098],{"type":437,"tag":528,"props":2059,"children":2060},{"style":1057},[2061],{"type":442,"value":1060},{"type":437,"tag":528,"props":2063,"children":2064},{"style":821},[2065],{"type":442,"value":1031},{"type":437,"tag":528,"props":2067,"children":2068},{"style":858},[2069],{"type":442,"value":1069},{"type":437,"tag":528,"props":2071,"children":2072},{"style":853},[2073],{"type":442,"value":1036},{"type":437,"tag":528,"props":2075,"children":2076},{"style":858},[2077],{"type":442,"value":1078},{"type":437,"tag":528,"props":2079,"children":2080},{"style":858},[2081],{"type":442,"value":1083},{"type":437,"tag":528,"props":2083,"children":2084},{"style":853},[2085],{"type":442,"value":1088},{"type":437,"tag":528,"props":2087,"children":2088},{"style":821},[2089],{"type":442,"value":1093},{"type":437,"tag":528,"props":2091,"children":2092},{"style":1057},[2093],{"type":442,"value":1098},{"type":437,"tag":528,"props":2095,"children":2096},{"style":895},[2097],{"type":442,"value":898},{"type":437,"tag":528,"props":2099,"children":2100},{"style":869},[2101],{"type":442,"value":872},{"type":437,"tag":528,"props":2103,"children":2104},{"class":530,"line":1109},[2105,2109,2114,2118,2123,2128,2133],{"type":437,"tag":528,"props":2106,"children":2107},{"style":809},[2108],{"type":442,"value":1115},{"type":437,"tag":528,"props":2110,"children":2111},{"style":853},[2112],{"type":442,"value":2113}," map",{"type":437,"tag":528,"props":2115,"children":2116},{"style":858},[2117],{"type":442,"value":861},{"type":437,"tag":528,"props":2119,"children":2120},{"style":858},[2121],{"type":442,"value":2122}," new",{"type":437,"tag":528,"props":2124,"children":2125},{"style":815},[2126],{"type":442,"value":2127}," Map",{"type":437,"tag":528,"props":2129,"children":2130},{"style":821},[2131],{"type":442,"value":2132},"()",{"type":437,"tag":528,"props":2134,"children":2135},{"style":869},[2136],{"type":442,"value":872},{"type":437,"tag":528,"props":2138,"children":2139},{"class":530,"line":1136},[2140,2144,2148,2152,2156],{"type":437,"tag":528,"props":2141,"children":2142},{"style":809},[2143],{"type":442,"value":1115},{"type":437,"tag":528,"props":2145,"children":2146},{"style":853},[2147],{"type":442,"value":1120},{"type":437,"tag":528,"props":2149,"children":2150},{"style":858},[2151],{"type":442,"value":861},{"type":437,"tag":528,"props":2153,"children":2154},{"style":853},[2155],{"type":442,"value":1129},{"type":437,"tag":528,"props":2157,"children":2158},{"style":869},[2159],{"type":442,"value":872},{"type":437,"tag":528,"props":2161,"children":2162},{"class":530,"line":1158},[2163,2167,2171,2175,2179],{"type":437,"tag":528,"props":2164,"children":2165},{"style":809},[2166],{"type":442,"value":1115},{"type":437,"tag":528,"props":2168,"children":2169},{"style":853},[2170],{"type":442,"value":1169},{"type":437,"tag":528,"props":2172,"children":2173},{"style":858},[2174],{"type":442,"value":861},{"type":437,"tag":528,"props":2176,"children":2177},{"style":853},[2178],{"type":442,"value":1046},{"type":437,"tag":528,"props":2180,"children":2181},{"style":869},[2182],{"type":442,"value":872},{"type":437,"tag":528,"props":2184,"children":2185},{"class":530,"line":1184},[2186,2190,2194,2198],{"type":437,"tag":528,"props":2187,"children":2188},{"style":1057},[2189],{"type":442,"value":1142},{"type":437,"tag":528,"props":2191,"children":2192},{"style":821},[2193],{"type":442,"value":1031},{"type":437,"tag":528,"props":2195,"children":2196},{"style":853},[2197],{"type":442,"value":1151},{"type":437,"tag":528,"props":2199,"children":2200},{"style":821},[2201],{"type":442,"value":835},{"type":437,"tag":528,"props":2203,"children":2204},{"class":530,"line":1206},[2205,2210,2214,2219,2223,2227,2231,2236,2241],{"type":437,"tag":528,"props":2206,"children":2207},{"style":853},[2208],{"type":442,"value":2209},"    map",{"type":437,"tag":528,"props":2211,"children":2212},{"style":847},[2213],{"type":442,"value":850},{"type":437,"tag":528,"props":2215,"children":2216},{"style":815},[2217],{"type":442,"value":2218},"set",{"type":437,"tag":528,"props":2220,"children":2221},{"style":821},[2222],{"type":442,"value":824},{"type":437,"tag":528,"props":2224,"children":2225},{"style":853},[2226],{"type":442,"value":1151},{"type":437,"tag":528,"props":2228,"children":2229},{"style":869},[2230],{"type":442,"value":1041},{"type":437,"tag":528,"props":2232,"children":2233},{"style":895},[2234],{"type":442,"value":2235}," 1",{"type":437,"tag":528,"props":2237,"children":2238},{"style":821},[2239],{"type":442,"value":2240},")",{"type":437,"tag":528,"props":2242,"children":2243},{"style":869},[2244],{"type":442,"value":872},{"type":437,"tag":528,"props":2246,"children":2247},{"class":530,"line":1248},[2248,2252,2256,2260,2264,2268],{"type":437,"tag":528,"props":2249,"children":2250},{"style":853},[2251],{"type":442,"value":1292},{"type":437,"tag":528,"props":2253,"children":2254},{"style":858},[2255],{"type":442,"value":861},{"type":437,"tag":528,"props":2257,"children":2258},{"style":853},[2259],{"type":442,"value":1120},{"type":437,"tag":528,"props":2261,"children":2262},{"style":847},[2263],{"type":442,"value":850},{"type":437,"tag":528,"props":2265,"children":2266},{"style":853},[2267],{"type":442,"value":888},{"type":437,"tag":528,"props":2269,"children":2270},{"style":869},[2271],{"type":442,"value":872},{"type":437,"tag":528,"props":2273,"children":2274},{"class":530,"line":1277},[2275],{"type":437,"tag":528,"props":2276,"children":2277},{"style":821},[2278],{"type":442,"value":1321},{"type":437,"tag":528,"props":2280,"children":2281},{"class":530,"line":1286},[2282,2286,2290,2294],{"type":437,"tag":528,"props":2283,"children":2284},{"style":1057},[2285],{"type":442,"value":1142},{"type":437,"tag":528,"props":2287,"children":2288},{"style":821},[2289],{"type":442,"value":1031},{"type":437,"tag":528,"props":2291,"children":2292},{"style":853},[2293],{"type":442,"value":1199},{"type":437,"tag":528,"props":2295,"children":2296},{"style":821},[2297],{"type":442,"value":835},{"type":437,"tag":528,"props":2299,"children":2300},{"class":530,"line":1315},[2301,2306,2310,2315,2319,2324,2328,2332,2337,2341,2345],{"type":437,"tag":528,"props":2302,"children":2303},{"style":1057},[2304],{"type":442,"value":2305},"    if",{"type":437,"tag":528,"props":2307,"children":2308},{"style":821},[2309],{"type":442,"value":1031},{"type":437,"tag":528,"props":2311,"children":2312},{"style":853},[2313],{"type":442,"value":2314},"map",{"type":437,"tag":528,"props":2316,"children":2317},{"style":847},[2318],{"type":442,"value":850},{"type":437,"tag":528,"props":2320,"children":2321},{"style":815},[2322],{"type":442,"value":2323},"has",{"type":437,"tag":528,"props":2325,"children":2326},{"style":821},[2327],{"type":442,"value":824},{"type":437,"tag":528,"props":2329,"children":2330},{"style":853},[2331],{"type":442,"value":1199},{"type":437,"tag":528,"props":2333,"children":2334},{"style":821},[2335],{"type":442,"value":2336},")) ",{"type":437,"tag":528,"props":2338,"children":2339},{"style":1057},[2340],{"type":442,"value":1098},{"type":437,"tag":528,"props":2342,"children":2343},{"style":853},[2344],{"type":442,"value":1169},{"type":437,"tag":528,"props":2346,"children":2347},{"style":869},[2348],{"type":442,"value":872},{"type":437,"tag":528,"props":2350,"children":2351},{"class":530,"line":1324},[2352,2356,2360,2364,2368,2372],{"type":437,"tag":528,"props":2353,"children":2354},{"style":853},[2355],{"type":442,"value":1755},{"type":437,"tag":528,"props":2357,"children":2358},{"style":858},[2359],{"type":442,"value":861},{"type":437,"tag":528,"props":2361,"children":2362},{"style":853},[2363],{"type":442,"value":1169},{"type":437,"tag":528,"props":2365,"children":2366},{"style":847},[2367],{"type":442,"value":850},{"type":437,"tag":528,"props":2369,"children":2370},{"style":853},[2371],{"type":442,"value":888},{"type":437,"tag":528,"props":2373,"children":2374},{"style":869},[2375],{"type":442,"value":872},{"type":437,"tag":528,"props":2377,"children":2378},{"class":530,"line":1341},[2379],{"type":437,"tag":528,"props":2380,"children":2381},{"style":821},[2382],{"type":442,"value":1321},{"type":437,"tag":528,"props":2384,"children":2386},{"class":530,"line":2385},27,[2387,2391],{"type":437,"tag":528,"props":2388,"children":2389},{"style":821},[2390],{"type":442,"value":1347},{"type":437,"tag":528,"props":2392,"children":2393},{"style":869},[2394],{"type":442,"value":872},{"type":437,"tag":2396,"props":2397,"children":2398},"style",{},[2399],{"type":442,"value":2400},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":430,"searchDepth":567,"depth":567,"links":2402},[2403,2404],{"id":756,"depth":540,"text":756},{"id":761,"depth":540,"text":761,"children":2405},[2406,2407,2408],{"id":767,"depth":549,"text":767},{"id":1354,"depth":549,"text":1354},{"id":1827,"depth":549,"text":1827},"markdown","content:1.algorithm:3.leetcode:160.intersection-of-two-linked-lists.md","content","1.algorithm/3.leetcode/160.intersection-of-two-linked-lists.md","md",[2415,2417],{"_path":155,"title":154,"description":2416},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",{"_path":161,"title":160,"description":2418},"峰值元素是指其值严格大于左右相邻值的元素。",1713426450638]