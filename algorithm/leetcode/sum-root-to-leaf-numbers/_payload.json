[{"data":1,"prerenderedAt":1417},["Reactive",2],{"navigation":3,"/algorithm/leetcode/sum-root-to-leaf-numbers":430,"/algorithm/leetcode/sum-root-to-leaf-numbers-surround":1412},[4,237,265,409,416],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,402],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396,399],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":379,"_path":380},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":382,"_path":383},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":385,"_path":386},"随机数","/frontend-code-assessment/scene/random-number",{"title":388,"_path":389},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":391,"_path":392},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":394,"_path":395},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":397,"_path":398},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":400,"_path":401},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":403,"_path":404,"children":405},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[406],{"title":407,"_path":408},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":410,"_path":411,"children":412},"项目","/pro",[413],{"title":414,"_path":415},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":417,"_path":418,"children":419},"后端语言","/backend-languages",[420],{"title":421,"_path":422,"children":423},"Python","/backend-languages/python",[424,427],{"title":425,"_path":426},"基础","/backend-languages/python/base",{"title":428,"_path":429},"函数","/backend-languages/python/function",{"_path":137,"_dir":431,"_draft":432,"_partial":432,"_locale":433,"title":136,"description":434,"url":435,"body":436,"_type":1407,"_id":1408,"_source":1409,"_file":1410,"_extension":1411},"leetcode",false,"","给你一个二叉树的根节点 root ，树中每个节点都存放有一个 0 到 9 之间的数字。\n每条从根节点到叶节点的路径都代表一个数字：","https://leetcode.cn/problems/sum-root-to-leaf-numbers",{"type":437,"children":438,"toc":1401},"root",[439,446,451,456,461,470,536,541,549,612,617,637,643,648,655,1395],{"type":440,"tag":441,"props":442,"children":443},"element","p",{},[444],{"type":445,"value":434},"text",{"type":440,"tag":441,"props":447,"children":448},{},[449],{"type":445,"value":450},"例如，从根节点到叶节点的路径 1 -> 2 -> 3 表示数字 123 。\n计算从根节点到叶节点生成的 所有数字之和 。",{"type":440,"tag":441,"props":452,"children":453},{},[454],{"type":445,"value":455},"叶节点 是指没有子节点的节点。",{"type":440,"tag":441,"props":457,"children":458},{},[459],{"type":445,"value":460},"示例 1：",{"type":440,"tag":441,"props":462,"children":463},{},[464],{"type":440,"tag":465,"props":466,"children":469},"img",{"alt":467,"src":468},"num1tree","/img/code_leetcode_No.129_num1tree.png",[],{"type":440,"tag":471,"props":472,"children":475},"pre",{"className":473,"code":474,"language":445,"meta":433,"style":433},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：root = [1,2,3]\n输出：25\n解释：\n从根到叶子节点路径 1->2 代表数字 12\n从根到叶子节点路径 1->3 代表数字 13\n因此，数字总和 = 12 + 13 = 25\n",[476],{"type":440,"tag":477,"props":478,"children":479},"code",{"__ignoreMap":433},[480,491,500,509,518,527],{"type":440,"tag":481,"props":482,"children":485},"span",{"class":483,"line":484},"line",1,[486],{"type":440,"tag":481,"props":487,"children":488},{},[489],{"type":445,"value":490},"输入：root = [1,2,3]\n",{"type":440,"tag":481,"props":492,"children":494},{"class":483,"line":493},2,[495],{"type":440,"tag":481,"props":496,"children":497},{},[498],{"type":445,"value":499},"输出：25\n",{"type":440,"tag":481,"props":501,"children":503},{"class":483,"line":502},3,[504],{"type":440,"tag":481,"props":505,"children":506},{},[507],{"type":445,"value":508},"解释：\n",{"type":440,"tag":481,"props":510,"children":512},{"class":483,"line":511},4,[513],{"type":440,"tag":481,"props":514,"children":515},{},[516],{"type":445,"value":517},"从根到叶子节点路径 1->2 代表数字 12\n",{"type":440,"tag":481,"props":519,"children":521},{"class":483,"line":520},5,[522],{"type":440,"tag":481,"props":523,"children":524},{},[525],{"type":445,"value":526},"从根到叶子节点路径 1->3 代表数字 13\n",{"type":440,"tag":481,"props":528,"children":530},{"class":483,"line":529},6,[531],{"type":440,"tag":481,"props":532,"children":533},{},[534],{"type":445,"value":535},"因此，数字总和 = 12 + 13 = 25\n",{"type":440,"tag":441,"props":537,"children":538},{},[539],{"type":445,"value":540},"示例 2：",{"type":440,"tag":441,"props":542,"children":543},{},[544],{"type":440,"tag":465,"props":545,"children":548},{"alt":546,"src":547},"num2tree","/img/code_leetcode_No.129_num2tree.png",[],{"type":440,"tag":471,"props":550,"children":552},{"className":473,"code":551,"language":445,"meta":433,"style":433},"输入：root = [4,9,0,5,1]\n输出：1026\n解释：\n从根到叶子节点路径 4->9->5 代表数字 495\n从根到叶子节点路径 4->9->1 代表数字 491\n从根到叶子节点路径 4->0 代表数字 40\n因此，数字总和 = 495 + 491 + 40 = 1026\n",[553],{"type":440,"tag":477,"props":554,"children":555},{"__ignoreMap":433},[556,564,572,579,587,595,603],{"type":440,"tag":481,"props":557,"children":558},{"class":483,"line":484},[559],{"type":440,"tag":481,"props":560,"children":561},{},[562],{"type":445,"value":563},"输入：root = [4,9,0,5,1]\n",{"type":440,"tag":481,"props":565,"children":566},{"class":483,"line":493},[567],{"type":440,"tag":481,"props":568,"children":569},{},[570],{"type":445,"value":571},"输出：1026\n",{"type":440,"tag":481,"props":573,"children":574},{"class":483,"line":502},[575],{"type":440,"tag":481,"props":576,"children":577},{},[578],{"type":445,"value":508},{"type":440,"tag":481,"props":580,"children":581},{"class":483,"line":511},[582],{"type":440,"tag":481,"props":583,"children":584},{},[585],{"type":445,"value":586},"从根到叶子节点路径 4->9->5 代表数字 495\n",{"type":440,"tag":481,"props":588,"children":589},{"class":483,"line":520},[590],{"type":440,"tag":481,"props":591,"children":592},{},[593],{"type":445,"value":594},"从根到叶子节点路径 4->9->1 代表数字 491\n",{"type":440,"tag":481,"props":596,"children":597},{"class":483,"line":529},[598],{"type":440,"tag":481,"props":599,"children":600},{},[601],{"type":445,"value":602},"从根到叶子节点路径 4->0 代表数字 40\n",{"type":440,"tag":481,"props":604,"children":606},{"class":483,"line":605},7,[607],{"type":440,"tag":481,"props":608,"children":609},{},[610],{"type":445,"value":611},"因此，数字总和 = 495 + 491 + 40 = 1026\n",{"type":440,"tag":441,"props":613,"children":614},{},[615],{"type":445,"value":616},"提示：",{"type":440,"tag":618,"props":619,"children":620},"ul",{},[621,627,632],{"type":440,"tag":622,"props":623,"children":624},"li",{},[625],{"type":445,"value":626},"树中节点的数目在范围 [1, 1000] 内",{"type":440,"tag":622,"props":628,"children":629},{},[630],{"type":445,"value":631},"0 \u003C= Node.val \u003C= 9",{"type":440,"tag":622,"props":633,"children":634},{},[635],{"type":445,"value":636},"树的深度不超过 10",{"type":440,"tag":638,"props":639,"children":641},"h2",{"id":640},"解题思路",[642],{"type":445,"value":640},{"type":440,"tag":638,"props":644,"children":646},{"id":645},"实现",[647],{"type":445,"value":645},{"type":440,"tag":649,"props":650,"children":652},"h3",{"id":651},"深度优先搜素-dfs",[653],{"type":445,"value":654},"深度优先搜素 - dfs",{"type":440,"tag":471,"props":656,"children":660},{"className":657,"code":658,"language":659,"meta":433,"style":433},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar sumNumbers = function (root) {\n  const dfs = (node, prev) => {\n    if (node === null) return 0;\n    let sum = prev * 10 + node.val;\n    if (node.left === null && node.right === null) return sum;\n    return dfs(node.left, sum) + dfs(node.right, sum);\n  };\n  return dfs(root, 0);\n};\n","js",[661],{"type":440,"tag":477,"props":662,"children":663},{"__ignoreMap":433},[664,673,681,689,741,807,860,912,921,931,939,966,984,992,1028,1079,1122,1176,1249,1332,1345,1382],{"type":440,"tag":481,"props":665,"children":666},{"class":483,"line":484},[667],{"type":440,"tag":481,"props":668,"children":670},{"style":669},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[671],{"type":445,"value":672},"/**\n",{"type":440,"tag":481,"props":674,"children":675},{"class":483,"line":493},[676],{"type":440,"tag":481,"props":677,"children":678},{"style":669},[679],{"type":445,"value":680}," * Definition for a binary tree node.\n",{"type":440,"tag":481,"props":682,"children":683},{"class":483,"line":502},[684],{"type":440,"tag":481,"props":685,"children":686},{"style":669},[687],{"type":445,"value":688}," */\n",{"type":440,"tag":481,"props":690,"children":691},{"class":483,"line":511},[692,698,704,710,716,722,727,731,736],{"type":440,"tag":481,"props":693,"children":695},{"style":694},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[696],{"type":445,"value":697},"function",{"type":440,"tag":481,"props":699,"children":701},{"style":700},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[702],{"type":445,"value":703}," TreeNode",{"type":440,"tag":481,"props":705,"children":707},{"style":706},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[708],{"type":445,"value":709},"(",{"type":440,"tag":481,"props":711,"children":713},{"style":712},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[714],{"type":445,"value":715},"val",{"type":440,"tag":481,"props":717,"children":719},{"style":718},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[720],{"type":445,"value":721},",",{"type":440,"tag":481,"props":723,"children":724},{"style":712},[725],{"type":445,"value":726}," left",{"type":440,"tag":481,"props":728,"children":729},{"style":718},[730],{"type":445,"value":721},{"type":440,"tag":481,"props":732,"children":733},{"style":712},[734],{"type":445,"value":735}," right",{"type":440,"tag":481,"props":737,"children":738},{"style":706},[739],{"type":445,"value":740},") {\n",{"type":440,"tag":481,"props":742,"children":743},{"class":483,"line":520},[744,750,756,761,767,772,777,783,788,793,798,802],{"type":440,"tag":481,"props":745,"children":747},{"style":746},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[748],{"type":445,"value":749},"  this",{"type":440,"tag":481,"props":751,"children":753},{"style":752},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[754],{"type":445,"value":755},".",{"type":440,"tag":481,"props":757,"children":759},{"style":758},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[760],{"type":445,"value":715},{"type":440,"tag":481,"props":762,"children":764},{"style":763},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[765],{"type":445,"value":766}," =",{"type":440,"tag":481,"props":768,"children":769},{"style":758},[770],{"type":445,"value":771}," val",{"type":440,"tag":481,"props":773,"children":774},{"style":763},[775],{"type":445,"value":776}," ===",{"type":440,"tag":481,"props":778,"children":780},{"style":779},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[781],{"type":445,"value":782}," undefined",{"type":440,"tag":481,"props":784,"children":785},{"style":763},[786],{"type":445,"value":787}," ?",{"type":440,"tag":481,"props":789,"children":790},{"style":779},[791],{"type":445,"value":792}," 0",{"type":440,"tag":481,"props":794,"children":795},{"style":763},[796],{"type":445,"value":797}," :",{"type":440,"tag":481,"props":799,"children":800},{"style":758},[801],{"type":445,"value":771},{"type":440,"tag":481,"props":803,"children":804},{"style":718},[805],{"type":445,"value":806},";\n",{"type":440,"tag":481,"props":808,"children":809},{"class":483,"line":529},[810,814,818,823,827,831,835,839,843,848,852,856],{"type":440,"tag":481,"props":811,"children":812},{"style":746},[813],{"type":445,"value":749},{"type":440,"tag":481,"props":815,"children":816},{"style":752},[817],{"type":445,"value":755},{"type":440,"tag":481,"props":819,"children":820},{"style":758},[821],{"type":445,"value":822},"left",{"type":440,"tag":481,"props":824,"children":825},{"style":763},[826],{"type":445,"value":766},{"type":440,"tag":481,"props":828,"children":829},{"style":758},[830],{"type":445,"value":726},{"type":440,"tag":481,"props":832,"children":833},{"style":763},[834],{"type":445,"value":776},{"type":440,"tag":481,"props":836,"children":837},{"style":779},[838],{"type":445,"value":782},{"type":440,"tag":481,"props":840,"children":841},{"style":763},[842],{"type":445,"value":787},{"type":440,"tag":481,"props":844,"children":845},{"style":779},[846],{"type":445,"value":847}," null",{"type":440,"tag":481,"props":849,"children":850},{"style":763},[851],{"type":445,"value":797},{"type":440,"tag":481,"props":853,"children":854},{"style":758},[855],{"type":445,"value":726},{"type":440,"tag":481,"props":857,"children":858},{"style":718},[859],{"type":445,"value":806},{"type":440,"tag":481,"props":861,"children":862},{"class":483,"line":605},[863,867,871,876,880,884,888,892,896,900,904,908],{"type":440,"tag":481,"props":864,"children":865},{"style":746},[866],{"type":445,"value":749},{"type":440,"tag":481,"props":868,"children":869},{"style":752},[870],{"type":445,"value":755},{"type":440,"tag":481,"props":872,"children":873},{"style":758},[874],{"type":445,"value":875},"right",{"type":440,"tag":481,"props":877,"children":878},{"style":763},[879],{"type":445,"value":766},{"type":440,"tag":481,"props":881,"children":882},{"style":758},[883],{"type":445,"value":735},{"type":440,"tag":481,"props":885,"children":886},{"style":763},[887],{"type":445,"value":776},{"type":440,"tag":481,"props":889,"children":890},{"style":779},[891],{"type":445,"value":782},{"type":440,"tag":481,"props":893,"children":894},{"style":763},[895],{"type":445,"value":787},{"type":440,"tag":481,"props":897,"children":898},{"style":779},[899],{"type":445,"value":847},{"type":440,"tag":481,"props":901,"children":902},{"style":763},[903],{"type":445,"value":797},{"type":440,"tag":481,"props":905,"children":906},{"style":758},[907],{"type":445,"value":735},{"type":440,"tag":481,"props":909,"children":910},{"style":718},[911],{"type":445,"value":806},{"type":440,"tag":481,"props":913,"children":915},{"class":483,"line":914},8,[916],{"type":440,"tag":481,"props":917,"children":918},{"style":706},[919],{"type":445,"value":920},"}\n",{"type":440,"tag":481,"props":922,"children":924},{"class":483,"line":923},9,[925],{"type":440,"tag":481,"props":926,"children":928},{"emptyLinePlaceholder":927},true,[929],{"type":445,"value":930},"\n",{"type":440,"tag":481,"props":932,"children":934},{"class":483,"line":933},10,[935],{"type":440,"tag":481,"props":936,"children":937},{"style":669},[938],{"type":445,"value":672},{"type":440,"tag":481,"props":940,"children":942},{"class":483,"line":941},11,[943,948,954,960],{"type":440,"tag":481,"props":944,"children":945},{"style":669},[946],{"type":445,"value":947}," * ",{"type":440,"tag":481,"props":949,"children":951},{"style":950},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[952],{"type":445,"value":953},"@param",{"type":440,"tag":481,"props":955,"children":957},{"style":956},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[958],{"type":445,"value":959}," {TreeNode}",{"type":440,"tag":481,"props":961,"children":963},{"style":962},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[964],{"type":445,"value":965}," root\n",{"type":440,"tag":481,"props":967,"children":969},{"class":483,"line":968},12,[970,974,979],{"type":440,"tag":481,"props":971,"children":972},{"style":669},[973],{"type":445,"value":947},{"type":440,"tag":481,"props":975,"children":976},{"style":950},[977],{"type":445,"value":978},"@return",{"type":440,"tag":481,"props":980,"children":981},{"style":956},[982],{"type":445,"value":983}," {number}\n",{"type":440,"tag":481,"props":985,"children":987},{"class":483,"line":986},13,[988],{"type":440,"tag":481,"props":989,"children":990},{"style":669},[991],{"type":445,"value":688},{"type":440,"tag":481,"props":993,"children":995},{"class":483,"line":994},14,[996,1001,1006,1010,1015,1020,1024],{"type":440,"tag":481,"props":997,"children":998},{"style":694},[999],{"type":445,"value":1000},"var",{"type":440,"tag":481,"props":1002,"children":1003},{"style":700},[1004],{"type":445,"value":1005}," sumNumbers",{"type":440,"tag":481,"props":1007,"children":1008},{"style":763},[1009],{"type":445,"value":766},{"type":440,"tag":481,"props":1011,"children":1012},{"style":694},[1013],{"type":445,"value":1014}," function",{"type":440,"tag":481,"props":1016,"children":1017},{"style":706},[1018],{"type":445,"value":1019}," (",{"type":440,"tag":481,"props":1021,"children":1022},{"style":712},[1023],{"type":445,"value":437},{"type":440,"tag":481,"props":1025,"children":1026},{"style":706},[1027],{"type":445,"value":740},{"type":440,"tag":481,"props":1029,"children":1031},{"class":483,"line":1030},15,[1032,1037,1042,1046,1050,1055,1059,1064,1069,1074],{"type":440,"tag":481,"props":1033,"children":1034},{"style":694},[1035],{"type":445,"value":1036},"  const",{"type":440,"tag":481,"props":1038,"children":1039},{"style":700},[1040],{"type":445,"value":1041}," dfs",{"type":440,"tag":481,"props":1043,"children":1044},{"style":763},[1045],{"type":445,"value":766},{"type":440,"tag":481,"props":1047,"children":1048},{"style":706},[1049],{"type":445,"value":1019},{"type":440,"tag":481,"props":1051,"children":1052},{"style":712},[1053],{"type":445,"value":1054},"node",{"type":440,"tag":481,"props":1056,"children":1057},{"style":718},[1058],{"type":445,"value":721},{"type":440,"tag":481,"props":1060,"children":1061},{"style":712},[1062],{"type":445,"value":1063}," prev",{"type":440,"tag":481,"props":1065,"children":1066},{"style":706},[1067],{"type":445,"value":1068},") ",{"type":440,"tag":481,"props":1070,"children":1071},{"style":694},[1072],{"type":445,"value":1073},"=>",{"type":440,"tag":481,"props":1075,"children":1076},{"style":706},[1077],{"type":445,"value":1078}," {\n",{"type":440,"tag":481,"props":1080,"children":1082},{"class":483,"line":1081},16,[1083,1089,1093,1097,1101,1105,1109,1114,1118],{"type":440,"tag":481,"props":1084,"children":1086},{"style":1085},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[1087],{"type":445,"value":1088},"    if",{"type":440,"tag":481,"props":1090,"children":1091},{"style":706},[1092],{"type":445,"value":1019},{"type":440,"tag":481,"props":1094,"children":1095},{"style":758},[1096],{"type":445,"value":1054},{"type":440,"tag":481,"props":1098,"children":1099},{"style":763},[1100],{"type":445,"value":776},{"type":440,"tag":481,"props":1102,"children":1103},{"style":779},[1104],{"type":445,"value":847},{"type":440,"tag":481,"props":1106,"children":1107},{"style":706},[1108],{"type":445,"value":1068},{"type":440,"tag":481,"props":1110,"children":1111},{"style":1085},[1112],{"type":445,"value":1113},"return",{"type":440,"tag":481,"props":1115,"children":1116},{"style":779},[1117],{"type":445,"value":792},{"type":440,"tag":481,"props":1119,"children":1120},{"style":718},[1121],{"type":445,"value":806},{"type":440,"tag":481,"props":1123,"children":1125},{"class":483,"line":1124},17,[1126,1131,1136,1140,1144,1149,1154,1159,1164,1168,1172],{"type":440,"tag":481,"props":1127,"children":1128},{"style":694},[1129],{"type":445,"value":1130},"    let",{"type":440,"tag":481,"props":1132,"children":1133},{"style":758},[1134],{"type":445,"value":1135}," sum",{"type":440,"tag":481,"props":1137,"children":1138},{"style":763},[1139],{"type":445,"value":766},{"type":440,"tag":481,"props":1141,"children":1142},{"style":758},[1143],{"type":445,"value":1063},{"type":440,"tag":481,"props":1145,"children":1146},{"style":763},[1147],{"type":445,"value":1148}," *",{"type":440,"tag":481,"props":1150,"children":1151},{"style":779},[1152],{"type":445,"value":1153}," 10",{"type":440,"tag":481,"props":1155,"children":1156},{"style":763},[1157],{"type":445,"value":1158}," +",{"type":440,"tag":481,"props":1160,"children":1161},{"style":758},[1162],{"type":445,"value":1163}," node",{"type":440,"tag":481,"props":1165,"children":1166},{"style":752},[1167],{"type":445,"value":755},{"type":440,"tag":481,"props":1169,"children":1170},{"style":758},[1171],{"type":445,"value":715},{"type":440,"tag":481,"props":1173,"children":1174},{"style":718},[1175],{"type":445,"value":806},{"type":440,"tag":481,"props":1177,"children":1179},{"class":483,"line":1178},18,[1180,1184,1188,1192,1196,1200,1204,1208,1213,1217,1221,1225,1229,1233,1237,1241,1245],{"type":440,"tag":481,"props":1181,"children":1182},{"style":1085},[1183],{"type":445,"value":1088},{"type":440,"tag":481,"props":1185,"children":1186},{"style":706},[1187],{"type":445,"value":1019},{"type":440,"tag":481,"props":1189,"children":1190},{"style":758},[1191],{"type":445,"value":1054},{"type":440,"tag":481,"props":1193,"children":1194},{"style":752},[1195],{"type":445,"value":755},{"type":440,"tag":481,"props":1197,"children":1198},{"style":758},[1199],{"type":445,"value":822},{"type":440,"tag":481,"props":1201,"children":1202},{"style":763},[1203],{"type":445,"value":776},{"type":440,"tag":481,"props":1205,"children":1206},{"style":779},[1207],{"type":445,"value":847},{"type":440,"tag":481,"props":1209,"children":1210},{"style":763},[1211],{"type":445,"value":1212}," &&",{"type":440,"tag":481,"props":1214,"children":1215},{"style":758},[1216],{"type":445,"value":1163},{"type":440,"tag":481,"props":1218,"children":1219},{"style":752},[1220],{"type":445,"value":755},{"type":440,"tag":481,"props":1222,"children":1223},{"style":758},[1224],{"type":445,"value":875},{"type":440,"tag":481,"props":1226,"children":1227},{"style":763},[1228],{"type":445,"value":776},{"type":440,"tag":481,"props":1230,"children":1231},{"style":779},[1232],{"type":445,"value":847},{"type":440,"tag":481,"props":1234,"children":1235},{"style":706},[1236],{"type":445,"value":1068},{"type":440,"tag":481,"props":1238,"children":1239},{"style":1085},[1240],{"type":445,"value":1113},{"type":440,"tag":481,"props":1242,"children":1243},{"style":758},[1244],{"type":445,"value":1135},{"type":440,"tag":481,"props":1246,"children":1247},{"style":718},[1248],{"type":445,"value":806},{"type":440,"tag":481,"props":1250,"children":1252},{"class":483,"line":1251},19,[1253,1258,1262,1266,1270,1274,1278,1282,1286,1290,1295,1299,1303,1307,1311,1315,1319,1323,1328],{"type":440,"tag":481,"props":1254,"children":1255},{"style":1085},[1256],{"type":445,"value":1257},"    return",{"type":440,"tag":481,"props":1259,"children":1260},{"style":700},[1261],{"type":445,"value":1041},{"type":440,"tag":481,"props":1263,"children":1264},{"style":706},[1265],{"type":445,"value":709},{"type":440,"tag":481,"props":1267,"children":1268},{"style":758},[1269],{"type":445,"value":1054},{"type":440,"tag":481,"props":1271,"children":1272},{"style":752},[1273],{"type":445,"value":755},{"type":440,"tag":481,"props":1275,"children":1276},{"style":758},[1277],{"type":445,"value":822},{"type":440,"tag":481,"props":1279,"children":1280},{"style":718},[1281],{"type":445,"value":721},{"type":440,"tag":481,"props":1283,"children":1284},{"style":758},[1285],{"type":445,"value":1135},{"type":440,"tag":481,"props":1287,"children":1288},{"style":706},[1289],{"type":445,"value":1068},{"type":440,"tag":481,"props":1291,"children":1292},{"style":763},[1293],{"type":445,"value":1294},"+",{"type":440,"tag":481,"props":1296,"children":1297},{"style":700},[1298],{"type":445,"value":1041},{"type":440,"tag":481,"props":1300,"children":1301},{"style":706},[1302],{"type":445,"value":709},{"type":440,"tag":481,"props":1304,"children":1305},{"style":758},[1306],{"type":445,"value":1054},{"type":440,"tag":481,"props":1308,"children":1309},{"style":752},[1310],{"type":445,"value":755},{"type":440,"tag":481,"props":1312,"children":1313},{"style":758},[1314],{"type":445,"value":875},{"type":440,"tag":481,"props":1316,"children":1317},{"style":718},[1318],{"type":445,"value":721},{"type":440,"tag":481,"props":1320,"children":1321},{"style":758},[1322],{"type":445,"value":1135},{"type":440,"tag":481,"props":1324,"children":1325},{"style":706},[1326],{"type":445,"value":1327},")",{"type":440,"tag":481,"props":1329,"children":1330},{"style":718},[1331],{"type":445,"value":806},{"type":440,"tag":481,"props":1333,"children":1335},{"class":483,"line":1334},20,[1336,1341],{"type":440,"tag":481,"props":1337,"children":1338},{"style":706},[1339],{"type":445,"value":1340},"  }",{"type":440,"tag":481,"props":1342,"children":1343},{"style":718},[1344],{"type":445,"value":806},{"type":440,"tag":481,"props":1346,"children":1348},{"class":483,"line":1347},21,[1349,1354,1358,1362,1366,1370,1374,1378],{"type":440,"tag":481,"props":1350,"children":1351},{"style":1085},[1352],{"type":445,"value":1353},"  return",{"type":440,"tag":481,"props":1355,"children":1356},{"style":700},[1357],{"type":445,"value":1041},{"type":440,"tag":481,"props":1359,"children":1360},{"style":706},[1361],{"type":445,"value":709},{"type":440,"tag":481,"props":1363,"children":1364},{"style":758},[1365],{"type":445,"value":437},{"type":440,"tag":481,"props":1367,"children":1368},{"style":718},[1369],{"type":445,"value":721},{"type":440,"tag":481,"props":1371,"children":1372},{"style":779},[1373],{"type":445,"value":792},{"type":440,"tag":481,"props":1375,"children":1376},{"style":706},[1377],{"type":445,"value":1327},{"type":440,"tag":481,"props":1379,"children":1380},{"style":718},[1381],{"type":445,"value":806},{"type":440,"tag":481,"props":1383,"children":1385},{"class":483,"line":1384},22,[1386,1391],{"type":440,"tag":481,"props":1387,"children":1388},{"style":706},[1389],{"type":445,"value":1390},"}",{"type":440,"tag":481,"props":1392,"children":1393},{"style":718},[1394],{"type":445,"value":806},{"type":440,"tag":1396,"props":1397,"children":1398},"style",{},[1399],{"type":445,"value":1400},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":433,"searchDepth":520,"depth":520,"links":1402},[1403,1404],{"id":640,"depth":493,"text":640},{"id":645,"depth":493,"text":645,"children":1405},[1406],{"id":651,"depth":502,"text":654},"markdown","content:1.algorithm:3.leetcode:129.sum-root-to-leaf-numbers.md","content","1.algorithm/3.leetcode/129.sum-root-to-leaf-numbers.md","md",[1413,1415],{"_path":134,"title":133,"description":1414},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",{"_path":140,"title":139,"description":1416},"给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。",1713426812158]