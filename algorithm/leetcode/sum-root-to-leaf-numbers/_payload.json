[{"data":1,"prerenderedAt":1411},["Reactive",2],{"navigation":3,"/algorithm/leetcode/sum-root-to-leaf-numbers":424,"/algorithm/leetcode/sum-root-to-leaf-numbers-surround":1406},[4,237,265,403,410],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,396],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"随机数","/frontend-code-assessment/scene/random-number",{"title":382,"_path":383},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":385,"_path":386},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":388,"_path":389},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":391,"_path":392},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":394,"_path":395},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":397,"_path":398,"children":399},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[400],{"title":401,"_path":402},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":404,"_path":405,"children":406},"项目","/pro",[407],{"title":408,"_path":409},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":411,"_path":412,"children":413},"后端语言","/backend-languages",[414],{"title":415,"_path":416,"children":417},"Python","/backend-languages/python",[418,421],{"title":419,"_path":420},"基础","/backend-languages/python/base",{"title":422,"_path":423},"函数","/backend-languages/python/function",{"_path":137,"_dir":425,"_draft":426,"_partial":426,"_locale":427,"title":136,"description":428,"url":429,"body":430,"_type":1401,"_id":1402,"_source":1403,"_file":1404,"_extension":1405},"leetcode",false,"","给你一个二叉树的根节点 root ，树中每个节点都存放有一个 0 到 9 之间的数字。\n每条从根节点到叶节点的路径都代表一个数字：","https://leetcode.cn/problems/sum-root-to-leaf-numbers",{"type":431,"children":432,"toc":1395},"root",[433,440,445,450,455,464,530,535,543,606,611,631,637,642,649,1389],{"type":434,"tag":435,"props":436,"children":437},"element","p",{},[438],{"type":439,"value":428},"text",{"type":434,"tag":435,"props":441,"children":442},{},[443],{"type":439,"value":444},"例如，从根节点到叶节点的路径 1 -> 2 -> 3 表示数字 123 。\n计算从根节点到叶节点生成的 所有数字之和 。",{"type":434,"tag":435,"props":446,"children":447},{},[448],{"type":439,"value":449},"叶节点 是指没有子节点的节点。",{"type":434,"tag":435,"props":451,"children":452},{},[453],{"type":439,"value":454},"示例 1：",{"type":434,"tag":435,"props":456,"children":457},{},[458],{"type":434,"tag":459,"props":460,"children":463},"img",{"alt":461,"src":462},"num1tree","/img/code_leetcode_No.129_num1tree.png",[],{"type":434,"tag":465,"props":466,"children":469},"pre",{"className":467,"code":468,"language":439,"meta":427,"style":427},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：root = [1,2,3]\n输出：25\n解释：\n从根到叶子节点路径 1->2 代表数字 12\n从根到叶子节点路径 1->3 代表数字 13\n因此，数字总和 = 12 + 13 = 25\n",[470],{"type":434,"tag":471,"props":472,"children":473},"code",{"__ignoreMap":427},[474,485,494,503,512,521],{"type":434,"tag":475,"props":476,"children":479},"span",{"class":477,"line":478},"line",1,[480],{"type":434,"tag":475,"props":481,"children":482},{},[483],{"type":439,"value":484},"输入：root = [1,2,3]\n",{"type":434,"tag":475,"props":486,"children":488},{"class":477,"line":487},2,[489],{"type":434,"tag":475,"props":490,"children":491},{},[492],{"type":439,"value":493},"输出：25\n",{"type":434,"tag":475,"props":495,"children":497},{"class":477,"line":496},3,[498],{"type":434,"tag":475,"props":499,"children":500},{},[501],{"type":439,"value":502},"解释：\n",{"type":434,"tag":475,"props":504,"children":506},{"class":477,"line":505},4,[507],{"type":434,"tag":475,"props":508,"children":509},{},[510],{"type":439,"value":511},"从根到叶子节点路径 1->2 代表数字 12\n",{"type":434,"tag":475,"props":513,"children":515},{"class":477,"line":514},5,[516],{"type":434,"tag":475,"props":517,"children":518},{},[519],{"type":439,"value":520},"从根到叶子节点路径 1->3 代表数字 13\n",{"type":434,"tag":475,"props":522,"children":524},{"class":477,"line":523},6,[525],{"type":434,"tag":475,"props":526,"children":527},{},[528],{"type":439,"value":529},"因此，数字总和 = 12 + 13 = 25\n",{"type":434,"tag":435,"props":531,"children":532},{},[533],{"type":439,"value":534},"示例 2：",{"type":434,"tag":435,"props":536,"children":537},{},[538],{"type":434,"tag":459,"props":539,"children":542},{"alt":540,"src":541},"num2tree","/img/code_leetcode_No.129_num2tree.png",[],{"type":434,"tag":465,"props":544,"children":546},{"className":467,"code":545,"language":439,"meta":427,"style":427},"输入：root = [4,9,0,5,1]\n输出：1026\n解释：\n从根到叶子节点路径 4->9->5 代表数字 495\n从根到叶子节点路径 4->9->1 代表数字 491\n从根到叶子节点路径 4->0 代表数字 40\n因此，数字总和 = 495 + 491 + 40 = 1026\n",[547],{"type":434,"tag":471,"props":548,"children":549},{"__ignoreMap":427},[550,558,566,573,581,589,597],{"type":434,"tag":475,"props":551,"children":552},{"class":477,"line":478},[553],{"type":434,"tag":475,"props":554,"children":555},{},[556],{"type":439,"value":557},"输入：root = [4,9,0,5,1]\n",{"type":434,"tag":475,"props":559,"children":560},{"class":477,"line":487},[561],{"type":434,"tag":475,"props":562,"children":563},{},[564],{"type":439,"value":565},"输出：1026\n",{"type":434,"tag":475,"props":567,"children":568},{"class":477,"line":496},[569],{"type":434,"tag":475,"props":570,"children":571},{},[572],{"type":439,"value":502},{"type":434,"tag":475,"props":574,"children":575},{"class":477,"line":505},[576],{"type":434,"tag":475,"props":577,"children":578},{},[579],{"type":439,"value":580},"从根到叶子节点路径 4->9->5 代表数字 495\n",{"type":434,"tag":475,"props":582,"children":583},{"class":477,"line":514},[584],{"type":434,"tag":475,"props":585,"children":586},{},[587],{"type":439,"value":588},"从根到叶子节点路径 4->9->1 代表数字 491\n",{"type":434,"tag":475,"props":590,"children":591},{"class":477,"line":523},[592],{"type":434,"tag":475,"props":593,"children":594},{},[595],{"type":439,"value":596},"从根到叶子节点路径 4->0 代表数字 40\n",{"type":434,"tag":475,"props":598,"children":600},{"class":477,"line":599},7,[601],{"type":434,"tag":475,"props":602,"children":603},{},[604],{"type":439,"value":605},"因此，数字总和 = 495 + 491 + 40 = 1026\n",{"type":434,"tag":435,"props":607,"children":608},{},[609],{"type":439,"value":610},"提示：",{"type":434,"tag":612,"props":613,"children":614},"ul",{},[615,621,626],{"type":434,"tag":616,"props":617,"children":618},"li",{},[619],{"type":439,"value":620},"树中节点的数目在范围 [1, 1000] 内",{"type":434,"tag":616,"props":622,"children":623},{},[624],{"type":439,"value":625},"0 \u003C= Node.val \u003C= 9",{"type":434,"tag":616,"props":627,"children":628},{},[629],{"type":439,"value":630},"树的深度不超过 10",{"type":434,"tag":632,"props":633,"children":635},"h2",{"id":634},"解题思路",[636],{"type":439,"value":634},{"type":434,"tag":632,"props":638,"children":640},{"id":639},"实现",[641],{"type":439,"value":639},{"type":434,"tag":643,"props":644,"children":646},"h3",{"id":645},"深度优先搜素-dfs",[647],{"type":439,"value":648},"深度优先搜素 - dfs",{"type":434,"tag":465,"props":650,"children":654},{"className":651,"code":652,"language":653,"meta":427,"style":427},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar sumNumbers = function (root) {\n  const dfs = (node, prev) => {\n    if (node === null) return 0;\n    let sum = prev * 10 + node.val;\n    if (node.left === null && node.right === null) return sum;\n    return dfs(node.left, sum) + dfs(node.right, sum);\n  };\n  return dfs(root, 0);\n};\n","js",[655],{"type":434,"tag":471,"props":656,"children":657},{"__ignoreMap":427},[658,667,675,683,735,801,854,906,915,925,933,960,978,986,1022,1073,1116,1170,1243,1326,1339,1376],{"type":434,"tag":475,"props":659,"children":660},{"class":477,"line":478},[661],{"type":434,"tag":475,"props":662,"children":664},{"style":663},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[665],{"type":439,"value":666},"/**\n",{"type":434,"tag":475,"props":668,"children":669},{"class":477,"line":487},[670],{"type":434,"tag":475,"props":671,"children":672},{"style":663},[673],{"type":439,"value":674}," * Definition for a binary tree node.\n",{"type":434,"tag":475,"props":676,"children":677},{"class":477,"line":496},[678],{"type":434,"tag":475,"props":679,"children":680},{"style":663},[681],{"type":439,"value":682}," */\n",{"type":434,"tag":475,"props":684,"children":685},{"class":477,"line":505},[686,692,698,704,710,716,721,725,730],{"type":434,"tag":475,"props":687,"children":689},{"style":688},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[690],{"type":439,"value":691},"function",{"type":434,"tag":475,"props":693,"children":695},{"style":694},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[696],{"type":439,"value":697}," TreeNode",{"type":434,"tag":475,"props":699,"children":701},{"style":700},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[702],{"type":439,"value":703},"(",{"type":434,"tag":475,"props":705,"children":707},{"style":706},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[708],{"type":439,"value":709},"val",{"type":434,"tag":475,"props":711,"children":713},{"style":712},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[714],{"type":439,"value":715},",",{"type":434,"tag":475,"props":717,"children":718},{"style":706},[719],{"type":439,"value":720}," left",{"type":434,"tag":475,"props":722,"children":723},{"style":712},[724],{"type":439,"value":715},{"type":434,"tag":475,"props":726,"children":727},{"style":706},[728],{"type":439,"value":729}," right",{"type":434,"tag":475,"props":731,"children":732},{"style":700},[733],{"type":439,"value":734},") {\n",{"type":434,"tag":475,"props":736,"children":737},{"class":477,"line":514},[738,744,750,755,761,766,771,777,782,787,792,796],{"type":434,"tag":475,"props":739,"children":741},{"style":740},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[742],{"type":439,"value":743},"  this",{"type":434,"tag":475,"props":745,"children":747},{"style":746},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[748],{"type":439,"value":749},".",{"type":434,"tag":475,"props":751,"children":753},{"style":752},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[754],{"type":439,"value":709},{"type":434,"tag":475,"props":756,"children":758},{"style":757},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[759],{"type":439,"value":760}," =",{"type":434,"tag":475,"props":762,"children":763},{"style":752},[764],{"type":439,"value":765}," val",{"type":434,"tag":475,"props":767,"children":768},{"style":757},[769],{"type":439,"value":770}," ===",{"type":434,"tag":475,"props":772,"children":774},{"style":773},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[775],{"type":439,"value":776}," undefined",{"type":434,"tag":475,"props":778,"children":779},{"style":757},[780],{"type":439,"value":781}," ?",{"type":434,"tag":475,"props":783,"children":784},{"style":773},[785],{"type":439,"value":786}," 0",{"type":434,"tag":475,"props":788,"children":789},{"style":757},[790],{"type":439,"value":791}," :",{"type":434,"tag":475,"props":793,"children":794},{"style":752},[795],{"type":439,"value":765},{"type":434,"tag":475,"props":797,"children":798},{"style":712},[799],{"type":439,"value":800},";\n",{"type":434,"tag":475,"props":802,"children":803},{"class":477,"line":523},[804,808,812,817,821,825,829,833,837,842,846,850],{"type":434,"tag":475,"props":805,"children":806},{"style":740},[807],{"type":439,"value":743},{"type":434,"tag":475,"props":809,"children":810},{"style":746},[811],{"type":439,"value":749},{"type":434,"tag":475,"props":813,"children":814},{"style":752},[815],{"type":439,"value":816},"left",{"type":434,"tag":475,"props":818,"children":819},{"style":757},[820],{"type":439,"value":760},{"type":434,"tag":475,"props":822,"children":823},{"style":752},[824],{"type":439,"value":720},{"type":434,"tag":475,"props":826,"children":827},{"style":757},[828],{"type":439,"value":770},{"type":434,"tag":475,"props":830,"children":831},{"style":773},[832],{"type":439,"value":776},{"type":434,"tag":475,"props":834,"children":835},{"style":757},[836],{"type":439,"value":781},{"type":434,"tag":475,"props":838,"children":839},{"style":773},[840],{"type":439,"value":841}," null",{"type":434,"tag":475,"props":843,"children":844},{"style":757},[845],{"type":439,"value":791},{"type":434,"tag":475,"props":847,"children":848},{"style":752},[849],{"type":439,"value":720},{"type":434,"tag":475,"props":851,"children":852},{"style":712},[853],{"type":439,"value":800},{"type":434,"tag":475,"props":855,"children":856},{"class":477,"line":599},[857,861,865,870,874,878,882,886,890,894,898,902],{"type":434,"tag":475,"props":858,"children":859},{"style":740},[860],{"type":439,"value":743},{"type":434,"tag":475,"props":862,"children":863},{"style":746},[864],{"type":439,"value":749},{"type":434,"tag":475,"props":866,"children":867},{"style":752},[868],{"type":439,"value":869},"right",{"type":434,"tag":475,"props":871,"children":872},{"style":757},[873],{"type":439,"value":760},{"type":434,"tag":475,"props":875,"children":876},{"style":752},[877],{"type":439,"value":729},{"type":434,"tag":475,"props":879,"children":880},{"style":757},[881],{"type":439,"value":770},{"type":434,"tag":475,"props":883,"children":884},{"style":773},[885],{"type":439,"value":776},{"type":434,"tag":475,"props":887,"children":888},{"style":757},[889],{"type":439,"value":781},{"type":434,"tag":475,"props":891,"children":892},{"style":773},[893],{"type":439,"value":841},{"type":434,"tag":475,"props":895,"children":896},{"style":757},[897],{"type":439,"value":791},{"type":434,"tag":475,"props":899,"children":900},{"style":752},[901],{"type":439,"value":729},{"type":434,"tag":475,"props":903,"children":904},{"style":712},[905],{"type":439,"value":800},{"type":434,"tag":475,"props":907,"children":909},{"class":477,"line":908},8,[910],{"type":434,"tag":475,"props":911,"children":912},{"style":700},[913],{"type":439,"value":914},"}\n",{"type":434,"tag":475,"props":916,"children":918},{"class":477,"line":917},9,[919],{"type":434,"tag":475,"props":920,"children":922},{"emptyLinePlaceholder":921},true,[923],{"type":439,"value":924},"\n",{"type":434,"tag":475,"props":926,"children":928},{"class":477,"line":927},10,[929],{"type":434,"tag":475,"props":930,"children":931},{"style":663},[932],{"type":439,"value":666},{"type":434,"tag":475,"props":934,"children":936},{"class":477,"line":935},11,[937,942,948,954],{"type":434,"tag":475,"props":938,"children":939},{"style":663},[940],{"type":439,"value":941}," * ",{"type":434,"tag":475,"props":943,"children":945},{"style":944},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[946],{"type":439,"value":947},"@param",{"type":434,"tag":475,"props":949,"children":951},{"style":950},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[952],{"type":439,"value":953}," {TreeNode}",{"type":434,"tag":475,"props":955,"children":957},{"style":956},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[958],{"type":439,"value":959}," root\n",{"type":434,"tag":475,"props":961,"children":963},{"class":477,"line":962},12,[964,968,973],{"type":434,"tag":475,"props":965,"children":966},{"style":663},[967],{"type":439,"value":941},{"type":434,"tag":475,"props":969,"children":970},{"style":944},[971],{"type":439,"value":972},"@return",{"type":434,"tag":475,"props":974,"children":975},{"style":950},[976],{"type":439,"value":977}," {number}\n",{"type":434,"tag":475,"props":979,"children":981},{"class":477,"line":980},13,[982],{"type":434,"tag":475,"props":983,"children":984},{"style":663},[985],{"type":439,"value":682},{"type":434,"tag":475,"props":987,"children":989},{"class":477,"line":988},14,[990,995,1000,1004,1009,1014,1018],{"type":434,"tag":475,"props":991,"children":992},{"style":688},[993],{"type":439,"value":994},"var",{"type":434,"tag":475,"props":996,"children":997},{"style":694},[998],{"type":439,"value":999}," sumNumbers",{"type":434,"tag":475,"props":1001,"children":1002},{"style":757},[1003],{"type":439,"value":760},{"type":434,"tag":475,"props":1005,"children":1006},{"style":688},[1007],{"type":439,"value":1008}," function",{"type":434,"tag":475,"props":1010,"children":1011},{"style":700},[1012],{"type":439,"value":1013}," (",{"type":434,"tag":475,"props":1015,"children":1016},{"style":706},[1017],{"type":439,"value":431},{"type":434,"tag":475,"props":1019,"children":1020},{"style":700},[1021],{"type":439,"value":734},{"type":434,"tag":475,"props":1023,"children":1025},{"class":477,"line":1024},15,[1026,1031,1036,1040,1044,1049,1053,1058,1063,1068],{"type":434,"tag":475,"props":1027,"children":1028},{"style":688},[1029],{"type":439,"value":1030},"  const",{"type":434,"tag":475,"props":1032,"children":1033},{"style":694},[1034],{"type":439,"value":1035}," dfs",{"type":434,"tag":475,"props":1037,"children":1038},{"style":757},[1039],{"type":439,"value":760},{"type":434,"tag":475,"props":1041,"children":1042},{"style":700},[1043],{"type":439,"value":1013},{"type":434,"tag":475,"props":1045,"children":1046},{"style":706},[1047],{"type":439,"value":1048},"node",{"type":434,"tag":475,"props":1050,"children":1051},{"style":712},[1052],{"type":439,"value":715},{"type":434,"tag":475,"props":1054,"children":1055},{"style":706},[1056],{"type":439,"value":1057}," prev",{"type":434,"tag":475,"props":1059,"children":1060},{"style":700},[1061],{"type":439,"value":1062},") ",{"type":434,"tag":475,"props":1064,"children":1065},{"style":688},[1066],{"type":439,"value":1067},"=>",{"type":434,"tag":475,"props":1069,"children":1070},{"style":700},[1071],{"type":439,"value":1072}," {\n",{"type":434,"tag":475,"props":1074,"children":1076},{"class":477,"line":1075},16,[1077,1083,1087,1091,1095,1099,1103,1108,1112],{"type":434,"tag":475,"props":1078,"children":1080},{"style":1079},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[1081],{"type":439,"value":1082},"    if",{"type":434,"tag":475,"props":1084,"children":1085},{"style":700},[1086],{"type":439,"value":1013},{"type":434,"tag":475,"props":1088,"children":1089},{"style":752},[1090],{"type":439,"value":1048},{"type":434,"tag":475,"props":1092,"children":1093},{"style":757},[1094],{"type":439,"value":770},{"type":434,"tag":475,"props":1096,"children":1097},{"style":773},[1098],{"type":439,"value":841},{"type":434,"tag":475,"props":1100,"children":1101},{"style":700},[1102],{"type":439,"value":1062},{"type":434,"tag":475,"props":1104,"children":1105},{"style":1079},[1106],{"type":439,"value":1107},"return",{"type":434,"tag":475,"props":1109,"children":1110},{"style":773},[1111],{"type":439,"value":786},{"type":434,"tag":475,"props":1113,"children":1114},{"style":712},[1115],{"type":439,"value":800},{"type":434,"tag":475,"props":1117,"children":1119},{"class":477,"line":1118},17,[1120,1125,1130,1134,1138,1143,1148,1153,1158,1162,1166],{"type":434,"tag":475,"props":1121,"children":1122},{"style":688},[1123],{"type":439,"value":1124},"    let",{"type":434,"tag":475,"props":1126,"children":1127},{"style":752},[1128],{"type":439,"value":1129}," sum",{"type":434,"tag":475,"props":1131,"children":1132},{"style":757},[1133],{"type":439,"value":760},{"type":434,"tag":475,"props":1135,"children":1136},{"style":752},[1137],{"type":439,"value":1057},{"type":434,"tag":475,"props":1139,"children":1140},{"style":757},[1141],{"type":439,"value":1142}," *",{"type":434,"tag":475,"props":1144,"children":1145},{"style":773},[1146],{"type":439,"value":1147}," 10",{"type":434,"tag":475,"props":1149,"children":1150},{"style":757},[1151],{"type":439,"value":1152}," +",{"type":434,"tag":475,"props":1154,"children":1155},{"style":752},[1156],{"type":439,"value":1157}," node",{"type":434,"tag":475,"props":1159,"children":1160},{"style":746},[1161],{"type":439,"value":749},{"type":434,"tag":475,"props":1163,"children":1164},{"style":752},[1165],{"type":439,"value":709},{"type":434,"tag":475,"props":1167,"children":1168},{"style":712},[1169],{"type":439,"value":800},{"type":434,"tag":475,"props":1171,"children":1173},{"class":477,"line":1172},18,[1174,1178,1182,1186,1190,1194,1198,1202,1207,1211,1215,1219,1223,1227,1231,1235,1239],{"type":434,"tag":475,"props":1175,"children":1176},{"style":1079},[1177],{"type":439,"value":1082},{"type":434,"tag":475,"props":1179,"children":1180},{"style":700},[1181],{"type":439,"value":1013},{"type":434,"tag":475,"props":1183,"children":1184},{"style":752},[1185],{"type":439,"value":1048},{"type":434,"tag":475,"props":1187,"children":1188},{"style":746},[1189],{"type":439,"value":749},{"type":434,"tag":475,"props":1191,"children":1192},{"style":752},[1193],{"type":439,"value":816},{"type":434,"tag":475,"props":1195,"children":1196},{"style":757},[1197],{"type":439,"value":770},{"type":434,"tag":475,"props":1199,"children":1200},{"style":773},[1201],{"type":439,"value":841},{"type":434,"tag":475,"props":1203,"children":1204},{"style":757},[1205],{"type":439,"value":1206}," &&",{"type":434,"tag":475,"props":1208,"children":1209},{"style":752},[1210],{"type":439,"value":1157},{"type":434,"tag":475,"props":1212,"children":1213},{"style":746},[1214],{"type":439,"value":749},{"type":434,"tag":475,"props":1216,"children":1217},{"style":752},[1218],{"type":439,"value":869},{"type":434,"tag":475,"props":1220,"children":1221},{"style":757},[1222],{"type":439,"value":770},{"type":434,"tag":475,"props":1224,"children":1225},{"style":773},[1226],{"type":439,"value":841},{"type":434,"tag":475,"props":1228,"children":1229},{"style":700},[1230],{"type":439,"value":1062},{"type":434,"tag":475,"props":1232,"children":1233},{"style":1079},[1234],{"type":439,"value":1107},{"type":434,"tag":475,"props":1236,"children":1237},{"style":752},[1238],{"type":439,"value":1129},{"type":434,"tag":475,"props":1240,"children":1241},{"style":712},[1242],{"type":439,"value":800},{"type":434,"tag":475,"props":1244,"children":1246},{"class":477,"line":1245},19,[1247,1252,1256,1260,1264,1268,1272,1276,1280,1284,1289,1293,1297,1301,1305,1309,1313,1317,1322],{"type":434,"tag":475,"props":1248,"children":1249},{"style":1079},[1250],{"type":439,"value":1251},"    return",{"type":434,"tag":475,"props":1253,"children":1254},{"style":694},[1255],{"type":439,"value":1035},{"type":434,"tag":475,"props":1257,"children":1258},{"style":700},[1259],{"type":439,"value":703},{"type":434,"tag":475,"props":1261,"children":1262},{"style":752},[1263],{"type":439,"value":1048},{"type":434,"tag":475,"props":1265,"children":1266},{"style":746},[1267],{"type":439,"value":749},{"type":434,"tag":475,"props":1269,"children":1270},{"style":752},[1271],{"type":439,"value":816},{"type":434,"tag":475,"props":1273,"children":1274},{"style":712},[1275],{"type":439,"value":715},{"type":434,"tag":475,"props":1277,"children":1278},{"style":752},[1279],{"type":439,"value":1129},{"type":434,"tag":475,"props":1281,"children":1282},{"style":700},[1283],{"type":439,"value":1062},{"type":434,"tag":475,"props":1285,"children":1286},{"style":757},[1287],{"type":439,"value":1288},"+",{"type":434,"tag":475,"props":1290,"children":1291},{"style":694},[1292],{"type":439,"value":1035},{"type":434,"tag":475,"props":1294,"children":1295},{"style":700},[1296],{"type":439,"value":703},{"type":434,"tag":475,"props":1298,"children":1299},{"style":752},[1300],{"type":439,"value":1048},{"type":434,"tag":475,"props":1302,"children":1303},{"style":746},[1304],{"type":439,"value":749},{"type":434,"tag":475,"props":1306,"children":1307},{"style":752},[1308],{"type":439,"value":869},{"type":434,"tag":475,"props":1310,"children":1311},{"style":712},[1312],{"type":439,"value":715},{"type":434,"tag":475,"props":1314,"children":1315},{"style":752},[1316],{"type":439,"value":1129},{"type":434,"tag":475,"props":1318,"children":1319},{"style":700},[1320],{"type":439,"value":1321},")",{"type":434,"tag":475,"props":1323,"children":1324},{"style":712},[1325],{"type":439,"value":800},{"type":434,"tag":475,"props":1327,"children":1329},{"class":477,"line":1328},20,[1330,1335],{"type":434,"tag":475,"props":1331,"children":1332},{"style":700},[1333],{"type":439,"value":1334},"  }",{"type":434,"tag":475,"props":1336,"children":1337},{"style":712},[1338],{"type":439,"value":800},{"type":434,"tag":475,"props":1340,"children":1342},{"class":477,"line":1341},21,[1343,1348,1352,1356,1360,1364,1368,1372],{"type":434,"tag":475,"props":1344,"children":1345},{"style":1079},[1346],{"type":439,"value":1347},"  return",{"type":434,"tag":475,"props":1349,"children":1350},{"style":694},[1351],{"type":439,"value":1035},{"type":434,"tag":475,"props":1353,"children":1354},{"style":700},[1355],{"type":439,"value":703},{"type":434,"tag":475,"props":1357,"children":1358},{"style":752},[1359],{"type":439,"value":431},{"type":434,"tag":475,"props":1361,"children":1362},{"style":712},[1363],{"type":439,"value":715},{"type":434,"tag":475,"props":1365,"children":1366},{"style":773},[1367],{"type":439,"value":786},{"type":434,"tag":475,"props":1369,"children":1370},{"style":700},[1371],{"type":439,"value":1321},{"type":434,"tag":475,"props":1373,"children":1374},{"style":712},[1375],{"type":439,"value":800},{"type":434,"tag":475,"props":1377,"children":1379},{"class":477,"line":1378},22,[1380,1385],{"type":434,"tag":475,"props":1381,"children":1382},{"style":700},[1383],{"type":439,"value":1384},"}",{"type":434,"tag":475,"props":1386,"children":1387},{"style":712},[1388],{"type":439,"value":800},{"type":434,"tag":1390,"props":1391,"children":1392},"style",{},[1393],{"type":439,"value":1394},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":427,"searchDepth":514,"depth":514,"links":1396},[1397,1398],{"id":634,"depth":487,"text":634},{"id":639,"depth":487,"text":639,"children":1399},[1400],{"id":645,"depth":496,"text":648},"markdown","content:1.algorithm:3.leetcode:129.sum-root-to-leaf-numbers.md","content","1.algorithm/3.leetcode/129.sum-root-to-leaf-numbers.md","md",[1407,1409],{"_path":134,"title":133,"description":1408},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",{"_path":140,"title":139,"description":1410},"给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。",1713339872482]