[{"data":1,"prerenderedAt":1371},["Reactive",2],{"navigation":3,"/algorithm/leetcode/add-strings":427,"/algorithm/leetcode/add-strings-surround":1366},[4,237,265,406,413],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,399],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":382,"_path":383},"随机数","/frontend-code-assessment/scene/random-number",{"title":385,"_path":386},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":388,"_path":389},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":391,"_path":392},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":394,"_path":395},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":397,"_path":398},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":400,"_path":401,"children":402},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[403],{"title":404,"_path":405},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":407,"_path":408,"children":409},"项目","/pro",[410],{"title":411,"_path":412},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":414,"_path":415,"children":416},"后端语言","/backend-languages",[417],{"title":418,"_path":419,"children":420},"Python","/backend-languages/python",[421,424],{"title":422,"_path":423},"基础","/backend-languages/python/base",{"title":425,"_path":426},"函数","/backend-languages/python/function",{"_path":203,"_dir":428,"_draft":429,"_partial":429,"_locale":430,"title":202,"description":431,"url":432,"body":433,"_type":1361,"_id":1362,"_source":1363,"_file":1364,"_extension":1365},"leetcode",false,"","给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。","https://leetcode.cn/problems/add-strings",{"type":434,"children":435,"toc":1355},"root",[436,443,448,453,483,488,511,516,539,544,564,570,689,710,715,743,748,754,1349],{"type":437,"tag":438,"props":439,"children":440},"element","p",{},[441],{"type":442,"value":431},"text",{"type":437,"tag":438,"props":444,"children":445},{},[446],{"type":442,"value":447},"你不能使用任何內建的用于处理大整数的库（比如 BigInteger）， 也不能直接将输入的字符串转换为整数形式。",{"type":437,"tag":438,"props":449,"children":450},{},[451],{"type":442,"value":452},"示例 1：",{"type":437,"tag":454,"props":455,"children":458},"pre",{"className":456,"code":457,"language":442,"meta":430,"style":430},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：num1 = \"11\", num2 = \"123\"\n输出：\"134\"\n",[459],{"type":437,"tag":460,"props":461,"children":462},"code",{"__ignoreMap":430},[463,474],{"type":437,"tag":464,"props":465,"children":468},"span",{"class":466,"line":467},"line",1,[469],{"type":437,"tag":464,"props":470,"children":471},{},[472],{"type":442,"value":473},"输入：num1 = \"11\", num2 = \"123\"\n",{"type":437,"tag":464,"props":475,"children":477},{"class":466,"line":476},2,[478],{"type":437,"tag":464,"props":479,"children":480},{},[481],{"type":442,"value":482},"输出：\"134\"\n",{"type":437,"tag":438,"props":484,"children":485},{},[486],{"type":442,"value":487},"示例 2：",{"type":437,"tag":454,"props":489,"children":491},{"className":456,"code":490,"language":442,"meta":430,"style":430},"输入：num1 = \"456\", num2 = \"77\"\n输出：\"533\"\n",[492],{"type":437,"tag":460,"props":493,"children":494},{"__ignoreMap":430},[495,503],{"type":437,"tag":464,"props":496,"children":497},{"class":466,"line":467},[498],{"type":437,"tag":464,"props":499,"children":500},{},[501],{"type":442,"value":502},"输入：num1 = \"456\", num2 = \"77\"\n",{"type":437,"tag":464,"props":504,"children":505},{"class":466,"line":476},[506],{"type":437,"tag":464,"props":507,"children":508},{},[509],{"type":442,"value":510},"输出：\"533\"\n",{"type":437,"tag":438,"props":512,"children":513},{},[514],{"type":442,"value":515},"示例 3：",{"type":437,"tag":454,"props":517,"children":519},{"className":456,"code":518,"language":442,"meta":430,"style":430},"输入：num1 = \"0\", num2 = \"0\"\n输出：\"0\"\n",[520],{"type":437,"tag":460,"props":521,"children":522},{"__ignoreMap":430},[523,531],{"type":437,"tag":464,"props":524,"children":525},{"class":466,"line":467},[526],{"type":437,"tag":464,"props":527,"children":528},{},[529],{"type":442,"value":530},"输入：num1 = \"0\", num2 = \"0\"\n",{"type":437,"tag":464,"props":532,"children":533},{"class":466,"line":476},[534],{"type":437,"tag":464,"props":535,"children":536},{},[537],{"type":442,"value":538},"输出：\"0\"\n",{"type":437,"tag":438,"props":540,"children":541},{},[542],{"type":442,"value":543},"提示：",{"type":437,"tag":545,"props":546,"children":547},"ul",{},[548,554,559],{"type":437,"tag":549,"props":550,"children":551},"li",{},[552],{"type":442,"value":553},"1 \u003C= num1.length, num2.length \u003C= 10^4",{"type":437,"tag":549,"props":555,"children":556},{},[557],{"type":442,"value":558},"num1 和 num2 都只包含数字 0-9",{"type":437,"tag":549,"props":560,"children":561},{},[562],{"type":442,"value":563},"num1 和 num2 都不包含任何前导零",{"type":437,"tag":565,"props":566,"children":568},"h2",{"id":567},"解题思路",[569],{"type":442,"value":567},{"type":437,"tag":454,"props":571,"children":575},{"className":572,"code":573,"language":574,"meta":430,"style":430},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","Number.MAX_VALUE; // 1.7976931348623157e+308\nNumber.MAX_SAFE_INTEGER; // 9007199254740991\nNumber.MIN_VALUE; // 5e-324\nNumber.MIN_SAFE_INTEGER; // -9007199254740991\n","js",[576],{"type":437,"tag":460,"props":577,"children":578},{"__ignoreMap":430},[579,612,637,663],{"type":437,"tag":464,"props":580,"children":581},{"class":466,"line":467},[582,588,594,600,606],{"type":437,"tag":464,"props":583,"children":585},{"style":584},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[586],{"type":442,"value":587},"Number",{"type":437,"tag":464,"props":589,"children":591},{"style":590},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[592],{"type":442,"value":593},".",{"type":437,"tag":464,"props":595,"children":597},{"style":596},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[598],{"type":442,"value":599},"MAX_VALUE",{"type":437,"tag":464,"props":601,"children":603},{"style":602},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[604],{"type":442,"value":605},";",{"type":437,"tag":464,"props":607,"children":609},{"style":608},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[610],{"type":442,"value":611}," // 1.7976931348623157e+308\n",{"type":437,"tag":464,"props":613,"children":614},{"class":466,"line":476},[615,619,623,628,632],{"type":437,"tag":464,"props":616,"children":617},{"style":584},[618],{"type":442,"value":587},{"type":437,"tag":464,"props":620,"children":621},{"style":590},[622],{"type":442,"value":593},{"type":437,"tag":464,"props":624,"children":625},{"style":596},[626],{"type":442,"value":627},"MAX_SAFE_INTEGER",{"type":437,"tag":464,"props":629,"children":630},{"style":602},[631],{"type":442,"value":605},{"type":437,"tag":464,"props":633,"children":634},{"style":608},[635],{"type":442,"value":636}," // 9007199254740991\n",{"type":437,"tag":464,"props":638,"children":640},{"class":466,"line":639},3,[641,645,649,654,658],{"type":437,"tag":464,"props":642,"children":643},{"style":584},[644],{"type":442,"value":587},{"type":437,"tag":464,"props":646,"children":647},{"style":590},[648],{"type":442,"value":593},{"type":437,"tag":464,"props":650,"children":651},{"style":596},[652],{"type":442,"value":653},"MIN_VALUE",{"type":437,"tag":464,"props":655,"children":656},{"style":602},[657],{"type":442,"value":605},{"type":437,"tag":464,"props":659,"children":660},{"style":608},[661],{"type":442,"value":662}," // 5e-324\n",{"type":437,"tag":464,"props":664,"children":666},{"class":466,"line":665},4,[667,671,675,680,684],{"type":437,"tag":464,"props":668,"children":669},{"style":584},[670],{"type":442,"value":587},{"type":437,"tag":464,"props":672,"children":673},{"style":590},[674],{"type":442,"value":593},{"type":437,"tag":464,"props":676,"children":677},{"style":596},[678],{"type":442,"value":679},"MIN_SAFE_INTEGER",{"type":437,"tag":464,"props":681,"children":682},{"style":602},[683],{"type":442,"value":605},{"type":437,"tag":464,"props":685,"children":686},{"style":608},[687],{"type":442,"value":688}," // -9007199254740991\n",{"type":437,"tag":438,"props":690,"children":691},{},[692,694,700,702,708],{"type":442,"value":693},"如果想要对一个超大的整数 ",{"type":437,"tag":460,"props":695,"children":697},{"className":696},[],[698],{"type":442,"value":699},"> Number.MAX_SAFE_INTEGER",{"type":442,"value":701}," 进行加法运算，但是又想要输出为一般形式，那么使用 + 是无法做到的，因为一旦数字超过 ",{"type":437,"tag":460,"props":703,"children":705},{"className":704},[],[706],{"type":442,"value":707},"Number.MAX_SAFE_INTEGER",{"type":442,"value":709}," 就会被转换为科学技术法，并且数字精度相比之前会有误差。",{"type":437,"tag":438,"props":711,"children":712},{},[713],{"type":442,"value":714},"使用算法实现大数相加：",{"type":437,"tag":545,"props":716,"children":717},{},[718,723,728,733,738],{"type":437,"tag":549,"props":719,"children":720},{},[721],{"type":442,"value":722},"首先，利用字符串的方式来保存大数，这样数字在数学表示上就不会发生变化；",{"type":437,"tag":549,"props":724,"children":725},{},[726],{"type":442,"value":727},"第二步，初始化 res、temp 来保存中间的计算结果，并将两个字符串转化为数组，方便进行每一位的加法运算；",{"type":437,"tag":549,"props":729,"children":730},{},[731],{"type":442,"value":732},"第三步，将两个数组的对应\"位\"进行相加，两个数相加的结果可能大于 10，所以可能要考虑\"进位\"，此时需要对 10 进行取余操作，将结果保存在当前位；",{"type":437,"tag":549,"props":734,"children":735},{},[736],{"type":442,"value":737},"第四步，判断当前位是否大于 9，即判断是否会进位。如果是则将 temp 赋值为 true，因为在加法运算中，true 自动隐式转换为 1，方便下一次相加；",{"type":437,"tag":549,"props":739,"children":740},{},[741],{"type":442,"value":742},"重复以上操作，直到计算出结果；",{"type":437,"tag":565,"props":744,"children":746},{"id":745},"实现",[747],{"type":442,"value":745},{"type":437,"tag":749,"props":750,"children":752},"h3",{"id":751},"大数相加",[753],{"type":442,"value":751},{"type":437,"tag":454,"props":755,"children":757},{"className":572,"code":756,"language":574,"meta":430,"style":430},"/**\n * @param {string} num1\n * @param {string} num2\n * @return {string}\n */\nvar addStrings = function (num1, num2) {\n  let n1 = num1.toString().split(\"\");\n  let n2 = num2.toString().split(\"\");\n  let res = \"\";\n  let temp = 0;\n  while (n1.length || n2.length || temp) {\n    temp += ~~n1.pop() + ~~n2.pop();\n    res += temp % 10;\n    temp = temp > 9;\n  }\n  return res.split(\"\").reverse().join(\"\");\n};\n",[758],{"type":437,"tag":460,"props":759,"children":760},{"__ignoreMap":430},[761,769,795,815,832,841,894,961,1018,1044,1071,1128,1195,1226,1256,1265,1336],{"type":437,"tag":464,"props":762,"children":763},{"class":466,"line":467},[764],{"type":437,"tag":464,"props":765,"children":766},{"style":608},[767],{"type":442,"value":768},"/**\n",{"type":437,"tag":464,"props":770,"children":771},{"class":466,"line":476},[772,777,783,789],{"type":437,"tag":464,"props":773,"children":774},{"style":608},[775],{"type":442,"value":776}," * ",{"type":437,"tag":464,"props":778,"children":780},{"style":779},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[781],{"type":442,"value":782},"@param",{"type":437,"tag":464,"props":784,"children":786},{"style":785},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[787],{"type":442,"value":788}," {string}",{"type":437,"tag":464,"props":790,"children":792},{"style":791},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[793],{"type":442,"value":794}," num1\n",{"type":437,"tag":464,"props":796,"children":797},{"class":466,"line":639},[798,802,806,810],{"type":437,"tag":464,"props":799,"children":800},{"style":608},[801],{"type":442,"value":776},{"type":437,"tag":464,"props":803,"children":804},{"style":779},[805],{"type":442,"value":782},{"type":437,"tag":464,"props":807,"children":808},{"style":785},[809],{"type":442,"value":788},{"type":437,"tag":464,"props":811,"children":812},{"style":791},[813],{"type":442,"value":814}," num2\n",{"type":437,"tag":464,"props":816,"children":817},{"class":466,"line":665},[818,822,827],{"type":437,"tag":464,"props":819,"children":820},{"style":608},[821],{"type":442,"value":776},{"type":437,"tag":464,"props":823,"children":824},{"style":779},[825],{"type":442,"value":826},"@return",{"type":437,"tag":464,"props":828,"children":829},{"style":785},[830],{"type":442,"value":831}," {string}\n",{"type":437,"tag":464,"props":833,"children":835},{"class":466,"line":834},5,[836],{"type":437,"tag":464,"props":837,"children":838},{"style":608},[839],{"type":442,"value":840}," */\n",{"type":437,"tag":464,"props":842,"children":844},{"class":466,"line":843},6,[845,851,857,863,868,873,879,884,889],{"type":437,"tag":464,"props":846,"children":848},{"style":847},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[849],{"type":442,"value":850},"var",{"type":437,"tag":464,"props":852,"children":854},{"style":853},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[855],{"type":442,"value":856}," addStrings",{"type":437,"tag":464,"props":858,"children":860},{"style":859},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[861],{"type":442,"value":862}," =",{"type":437,"tag":464,"props":864,"children":865},{"style":847},[866],{"type":442,"value":867}," function",{"type":437,"tag":464,"props":869,"children":870},{"style":596},[871],{"type":442,"value":872}," (",{"type":437,"tag":464,"props":874,"children":876},{"style":875},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[877],{"type":442,"value":878},"num1",{"type":437,"tag":464,"props":880,"children":881},{"style":602},[882],{"type":442,"value":883},",",{"type":437,"tag":464,"props":885,"children":886},{"style":875},[887],{"type":442,"value":888}," num2",{"type":437,"tag":464,"props":890,"children":891},{"style":596},[892],{"type":442,"value":893},") {\n",{"type":437,"tag":464,"props":895,"children":897},{"class":466,"line":896},7,[898,903,908,912,917,921,926,931,935,940,945,951,956],{"type":437,"tag":464,"props":899,"children":900},{"style":847},[901],{"type":442,"value":902},"  let",{"type":437,"tag":464,"props":904,"children":905},{"style":584},[906],{"type":442,"value":907}," n1",{"type":437,"tag":464,"props":909,"children":910},{"style":859},[911],{"type":442,"value":862},{"type":437,"tag":464,"props":913,"children":914},{"style":584},[915],{"type":442,"value":916}," num1",{"type":437,"tag":464,"props":918,"children":919},{"style":590},[920],{"type":442,"value":593},{"type":437,"tag":464,"props":922,"children":923},{"style":853},[924],{"type":442,"value":925},"toString",{"type":437,"tag":464,"props":927,"children":928},{"style":596},[929],{"type":442,"value":930},"()",{"type":437,"tag":464,"props":932,"children":933},{"style":590},[934],{"type":442,"value":593},{"type":437,"tag":464,"props":936,"children":937},{"style":853},[938],{"type":442,"value":939},"split",{"type":437,"tag":464,"props":941,"children":942},{"style":596},[943],{"type":442,"value":944},"(",{"type":437,"tag":464,"props":946,"children":948},{"style":947},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[949],{"type":442,"value":950},"\"\"",{"type":437,"tag":464,"props":952,"children":953},{"style":596},[954],{"type":442,"value":955},")",{"type":437,"tag":464,"props":957,"children":958},{"style":602},[959],{"type":442,"value":960},";\n",{"type":437,"tag":464,"props":962,"children":964},{"class":466,"line":963},8,[965,969,974,978,982,986,990,994,998,1002,1006,1010,1014],{"type":437,"tag":464,"props":966,"children":967},{"style":847},[968],{"type":442,"value":902},{"type":437,"tag":464,"props":970,"children":971},{"style":584},[972],{"type":442,"value":973}," n2",{"type":437,"tag":464,"props":975,"children":976},{"style":859},[977],{"type":442,"value":862},{"type":437,"tag":464,"props":979,"children":980},{"style":584},[981],{"type":442,"value":888},{"type":437,"tag":464,"props":983,"children":984},{"style":590},[985],{"type":442,"value":593},{"type":437,"tag":464,"props":987,"children":988},{"style":853},[989],{"type":442,"value":925},{"type":437,"tag":464,"props":991,"children":992},{"style":596},[993],{"type":442,"value":930},{"type":437,"tag":464,"props":995,"children":996},{"style":590},[997],{"type":442,"value":593},{"type":437,"tag":464,"props":999,"children":1000},{"style":853},[1001],{"type":442,"value":939},{"type":437,"tag":464,"props":1003,"children":1004},{"style":596},[1005],{"type":442,"value":944},{"type":437,"tag":464,"props":1007,"children":1008},{"style":947},[1009],{"type":442,"value":950},{"type":437,"tag":464,"props":1011,"children":1012},{"style":596},[1013],{"type":442,"value":955},{"type":437,"tag":464,"props":1015,"children":1016},{"style":602},[1017],{"type":442,"value":960},{"type":437,"tag":464,"props":1019,"children":1021},{"class":466,"line":1020},9,[1022,1026,1031,1035,1040],{"type":437,"tag":464,"props":1023,"children":1024},{"style":847},[1025],{"type":442,"value":902},{"type":437,"tag":464,"props":1027,"children":1028},{"style":584},[1029],{"type":442,"value":1030}," res",{"type":437,"tag":464,"props":1032,"children":1033},{"style":859},[1034],{"type":442,"value":862},{"type":437,"tag":464,"props":1036,"children":1037},{"style":947},[1038],{"type":442,"value":1039}," \"\"",{"type":437,"tag":464,"props":1041,"children":1042},{"style":602},[1043],{"type":442,"value":960},{"type":437,"tag":464,"props":1045,"children":1047},{"class":466,"line":1046},10,[1048,1052,1057,1061,1067],{"type":437,"tag":464,"props":1049,"children":1050},{"style":847},[1051],{"type":442,"value":902},{"type":437,"tag":464,"props":1053,"children":1054},{"style":584},[1055],{"type":442,"value":1056}," temp",{"type":437,"tag":464,"props":1058,"children":1059},{"style":859},[1060],{"type":442,"value":862},{"type":437,"tag":464,"props":1062,"children":1064},{"style":1063},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[1065],{"type":442,"value":1066}," 0",{"type":437,"tag":464,"props":1068,"children":1069},{"style":602},[1070],{"type":442,"value":960},{"type":437,"tag":464,"props":1072,"children":1074},{"class":466,"line":1073},11,[1075,1081,1085,1090,1094,1099,1104,1108,1112,1116,1120,1124],{"type":437,"tag":464,"props":1076,"children":1078},{"style":1077},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[1079],{"type":442,"value":1080},"  while",{"type":437,"tag":464,"props":1082,"children":1083},{"style":596},[1084],{"type":442,"value":872},{"type":437,"tag":464,"props":1086,"children":1087},{"style":584},[1088],{"type":442,"value":1089},"n1",{"type":437,"tag":464,"props":1091,"children":1092},{"style":590},[1093],{"type":442,"value":593},{"type":437,"tag":464,"props":1095,"children":1096},{"style":596},[1097],{"type":442,"value":1098},"length ",{"type":437,"tag":464,"props":1100,"children":1101},{"style":859},[1102],{"type":442,"value":1103},"||",{"type":437,"tag":464,"props":1105,"children":1106},{"style":584},[1107],{"type":442,"value":973},{"type":437,"tag":464,"props":1109,"children":1110},{"style":590},[1111],{"type":442,"value":593},{"type":437,"tag":464,"props":1113,"children":1114},{"style":596},[1115],{"type":442,"value":1098},{"type":437,"tag":464,"props":1117,"children":1118},{"style":859},[1119],{"type":442,"value":1103},{"type":437,"tag":464,"props":1121,"children":1122},{"style":584},[1123],{"type":442,"value":1056},{"type":437,"tag":464,"props":1125,"children":1126},{"style":596},[1127],{"type":442,"value":893},{"type":437,"tag":464,"props":1129,"children":1131},{"class":466,"line":1130},12,[1132,1137,1142,1147,1151,1155,1160,1165,1170,1174,1179,1183,1187,1191],{"type":437,"tag":464,"props":1133,"children":1134},{"style":584},[1135],{"type":442,"value":1136},"    temp",{"type":437,"tag":464,"props":1138,"children":1139},{"style":859},[1140],{"type":442,"value":1141}," +=",{"type":437,"tag":464,"props":1143,"children":1144},{"style":859},[1145],{"type":442,"value":1146}," ~~",{"type":437,"tag":464,"props":1148,"children":1149},{"style":584},[1150],{"type":442,"value":1089},{"type":437,"tag":464,"props":1152,"children":1153},{"style":590},[1154],{"type":442,"value":593},{"type":437,"tag":464,"props":1156,"children":1157},{"style":853},[1158],{"type":442,"value":1159},"pop",{"type":437,"tag":464,"props":1161,"children":1162},{"style":596},[1163],{"type":442,"value":1164},"() ",{"type":437,"tag":464,"props":1166,"children":1167},{"style":859},[1168],{"type":442,"value":1169},"+",{"type":437,"tag":464,"props":1171,"children":1172},{"style":859},[1173],{"type":442,"value":1146},{"type":437,"tag":464,"props":1175,"children":1176},{"style":584},[1177],{"type":442,"value":1178},"n2",{"type":437,"tag":464,"props":1180,"children":1181},{"style":590},[1182],{"type":442,"value":593},{"type":437,"tag":464,"props":1184,"children":1185},{"style":853},[1186],{"type":442,"value":1159},{"type":437,"tag":464,"props":1188,"children":1189},{"style":596},[1190],{"type":442,"value":930},{"type":437,"tag":464,"props":1192,"children":1193},{"style":602},[1194],{"type":442,"value":960},{"type":437,"tag":464,"props":1196,"children":1198},{"class":466,"line":1197},13,[1199,1204,1208,1212,1217,1222],{"type":437,"tag":464,"props":1200,"children":1201},{"style":584},[1202],{"type":442,"value":1203},"    res",{"type":437,"tag":464,"props":1205,"children":1206},{"style":859},[1207],{"type":442,"value":1141},{"type":437,"tag":464,"props":1209,"children":1210},{"style":584},[1211],{"type":442,"value":1056},{"type":437,"tag":464,"props":1213,"children":1214},{"style":859},[1215],{"type":442,"value":1216}," %",{"type":437,"tag":464,"props":1218,"children":1219},{"style":1063},[1220],{"type":442,"value":1221}," 10",{"type":437,"tag":464,"props":1223,"children":1224},{"style":602},[1225],{"type":442,"value":960},{"type":437,"tag":464,"props":1227,"children":1229},{"class":466,"line":1228},14,[1230,1234,1238,1242,1247,1252],{"type":437,"tag":464,"props":1231,"children":1232},{"style":584},[1233],{"type":442,"value":1136},{"type":437,"tag":464,"props":1235,"children":1236},{"style":859},[1237],{"type":442,"value":862},{"type":437,"tag":464,"props":1239,"children":1240},{"style":584},[1241],{"type":442,"value":1056},{"type":437,"tag":464,"props":1243,"children":1244},{"style":859},[1245],{"type":442,"value":1246}," >",{"type":437,"tag":464,"props":1248,"children":1249},{"style":1063},[1250],{"type":442,"value":1251}," 9",{"type":437,"tag":464,"props":1253,"children":1254},{"style":602},[1255],{"type":442,"value":960},{"type":437,"tag":464,"props":1257,"children":1259},{"class":466,"line":1258},15,[1260],{"type":437,"tag":464,"props":1261,"children":1262},{"style":596},[1263],{"type":442,"value":1264},"  }\n",{"type":437,"tag":464,"props":1266,"children":1268},{"class":466,"line":1267},16,[1269,1274,1278,1282,1286,1290,1294,1298,1302,1307,1311,1315,1320,1324,1328,1332],{"type":437,"tag":464,"props":1270,"children":1271},{"style":1077},[1272],{"type":442,"value":1273},"  return",{"type":437,"tag":464,"props":1275,"children":1276},{"style":584},[1277],{"type":442,"value":1030},{"type":437,"tag":464,"props":1279,"children":1280},{"style":590},[1281],{"type":442,"value":593},{"type":437,"tag":464,"props":1283,"children":1284},{"style":853},[1285],{"type":442,"value":939},{"type":437,"tag":464,"props":1287,"children":1288},{"style":596},[1289],{"type":442,"value":944},{"type":437,"tag":464,"props":1291,"children":1292},{"style":947},[1293],{"type":442,"value":950},{"type":437,"tag":464,"props":1295,"children":1296},{"style":596},[1297],{"type":442,"value":955},{"type":437,"tag":464,"props":1299,"children":1300},{"style":590},[1301],{"type":442,"value":593},{"type":437,"tag":464,"props":1303,"children":1304},{"style":853},[1305],{"type":442,"value":1306},"reverse",{"type":437,"tag":464,"props":1308,"children":1309},{"style":596},[1310],{"type":442,"value":930},{"type":437,"tag":464,"props":1312,"children":1313},{"style":590},[1314],{"type":442,"value":593},{"type":437,"tag":464,"props":1316,"children":1317},{"style":853},[1318],{"type":442,"value":1319},"join",{"type":437,"tag":464,"props":1321,"children":1322},{"style":596},[1323],{"type":442,"value":944},{"type":437,"tag":464,"props":1325,"children":1326},{"style":947},[1327],{"type":442,"value":950},{"type":437,"tag":464,"props":1329,"children":1330},{"style":596},[1331],{"type":442,"value":955},{"type":437,"tag":464,"props":1333,"children":1334},{"style":602},[1335],{"type":442,"value":960},{"type":437,"tag":464,"props":1337,"children":1339},{"class":466,"line":1338},17,[1340,1345],{"type":437,"tag":464,"props":1341,"children":1342},{"style":596},[1343],{"type":442,"value":1344},"}",{"type":437,"tag":464,"props":1346,"children":1347},{"style":602},[1348],{"type":442,"value":960},{"type":437,"tag":1350,"props":1351,"children":1352},"style",{},[1353],{"type":442,"value":1354},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":430,"searchDepth":834,"depth":834,"links":1356},[1357,1358],{"id":567,"depth":476,"text":567},{"id":745,"depth":476,"text":745,"children":1359},[1360],{"id":751,"depth":639,"text":751},"markdown","content:1.algorithm:3.leetcode:415.add-strings.md","content","1.algorithm/3.leetcode/415.add-strings.md","md",[1367,1369],{"_path":200,"title":199,"description":1368},"给你一个整数数组 nums ，设计算法来打乱一个没有重复元素的数组。打乱后，数组的所有排列应该是 等可能 的。",{"_path":206,"title":205,"description":1370},"给你一个字符数组 chars ，请使用下述算法压缩：",1713426452238]