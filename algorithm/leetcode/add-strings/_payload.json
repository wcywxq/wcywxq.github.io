[{"data":1,"prerenderedAt":1368},["Reactive",2],{"navigation":3,"/algorithm/leetcode/add-strings":424,"/algorithm/leetcode/add-strings-surround":1363},[4,237,265,403,410],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,396],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"随机数","/frontend-code-assessment/scene/random-number",{"title":382,"_path":383},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":385,"_path":386},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":388,"_path":389},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":391,"_path":392},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":394,"_path":395},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":397,"_path":398,"children":399},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[400],{"title":401,"_path":402},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":404,"_path":405,"children":406},"项目","/pro",[407],{"title":408,"_path":409},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":411,"_path":412,"children":413},"后端语言","/backend-languages",[414],{"title":415,"_path":416,"children":417},"Python","/backend-languages/python",[418,421],{"title":419,"_path":420},"基础","/backend-languages/python/base",{"title":422,"_path":423},"函数","/backend-languages/python/function",{"_path":203,"_dir":425,"_draft":426,"_partial":426,"_locale":427,"title":202,"description":428,"url":429,"body":430,"_type":1358,"_id":1359,"_source":1360,"_file":1361,"_extension":1362},"leetcode",false,"","给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。","https://leetcode.cn/problems/add-strings",{"type":431,"children":432,"toc":1352},"root",[433,440,445,450,480,485,508,513,536,541,561,567,686,707,712,740,745,751,1346],{"type":434,"tag":435,"props":436,"children":437},"element","p",{},[438],{"type":439,"value":428},"text",{"type":434,"tag":435,"props":441,"children":442},{},[443],{"type":439,"value":444},"你不能使用任何內建的用于处理大整数的库（比如 BigInteger）， 也不能直接将输入的字符串转换为整数形式。",{"type":434,"tag":435,"props":446,"children":447},{},[448],{"type":439,"value":449},"示例 1：",{"type":434,"tag":451,"props":452,"children":455},"pre",{"className":453,"code":454,"language":439,"meta":427,"style":427},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：num1 = \"11\", num2 = \"123\"\n输出：\"134\"\n",[456],{"type":434,"tag":457,"props":458,"children":459},"code",{"__ignoreMap":427},[460,471],{"type":434,"tag":461,"props":462,"children":465},"span",{"class":463,"line":464},"line",1,[466],{"type":434,"tag":461,"props":467,"children":468},{},[469],{"type":439,"value":470},"输入：num1 = \"11\", num2 = \"123\"\n",{"type":434,"tag":461,"props":472,"children":474},{"class":463,"line":473},2,[475],{"type":434,"tag":461,"props":476,"children":477},{},[478],{"type":439,"value":479},"输出：\"134\"\n",{"type":434,"tag":435,"props":481,"children":482},{},[483],{"type":439,"value":484},"示例 2：",{"type":434,"tag":451,"props":486,"children":488},{"className":453,"code":487,"language":439,"meta":427,"style":427},"输入：num1 = \"456\", num2 = \"77\"\n输出：\"533\"\n",[489],{"type":434,"tag":457,"props":490,"children":491},{"__ignoreMap":427},[492,500],{"type":434,"tag":461,"props":493,"children":494},{"class":463,"line":464},[495],{"type":434,"tag":461,"props":496,"children":497},{},[498],{"type":439,"value":499},"输入：num1 = \"456\", num2 = \"77\"\n",{"type":434,"tag":461,"props":501,"children":502},{"class":463,"line":473},[503],{"type":434,"tag":461,"props":504,"children":505},{},[506],{"type":439,"value":507},"输出：\"533\"\n",{"type":434,"tag":435,"props":509,"children":510},{},[511],{"type":439,"value":512},"示例 3：",{"type":434,"tag":451,"props":514,"children":516},{"className":453,"code":515,"language":439,"meta":427,"style":427},"输入：num1 = \"0\", num2 = \"0\"\n输出：\"0\"\n",[517],{"type":434,"tag":457,"props":518,"children":519},{"__ignoreMap":427},[520,528],{"type":434,"tag":461,"props":521,"children":522},{"class":463,"line":464},[523],{"type":434,"tag":461,"props":524,"children":525},{},[526],{"type":439,"value":527},"输入：num1 = \"0\", num2 = \"0\"\n",{"type":434,"tag":461,"props":529,"children":530},{"class":463,"line":473},[531],{"type":434,"tag":461,"props":532,"children":533},{},[534],{"type":439,"value":535},"输出：\"0\"\n",{"type":434,"tag":435,"props":537,"children":538},{},[539],{"type":439,"value":540},"提示：",{"type":434,"tag":542,"props":543,"children":544},"ul",{},[545,551,556],{"type":434,"tag":546,"props":547,"children":548},"li",{},[549],{"type":439,"value":550},"1 \u003C= num1.length, num2.length \u003C= 10^4",{"type":434,"tag":546,"props":552,"children":553},{},[554],{"type":439,"value":555},"num1 和 num2 都只包含数字 0-9",{"type":434,"tag":546,"props":557,"children":558},{},[559],{"type":439,"value":560},"num1 和 num2 都不包含任何前导零",{"type":434,"tag":562,"props":563,"children":565},"h2",{"id":564},"解题思路",[566],{"type":439,"value":564},{"type":434,"tag":451,"props":568,"children":572},{"className":569,"code":570,"language":571,"meta":427,"style":427},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","Number.MAX_VALUE; // 1.7976931348623157e+308\nNumber.MAX_SAFE_INTEGER; // 9007199254740991\nNumber.MIN_VALUE; // 5e-324\nNumber.MIN_SAFE_INTEGER; // -9007199254740991\n","js",[573],{"type":434,"tag":457,"props":574,"children":575},{"__ignoreMap":427},[576,609,634,660],{"type":434,"tag":461,"props":577,"children":578},{"class":463,"line":464},[579,585,591,597,603],{"type":434,"tag":461,"props":580,"children":582},{"style":581},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[583],{"type":439,"value":584},"Number",{"type":434,"tag":461,"props":586,"children":588},{"style":587},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[589],{"type":439,"value":590},".",{"type":434,"tag":461,"props":592,"children":594},{"style":593},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[595],{"type":439,"value":596},"MAX_VALUE",{"type":434,"tag":461,"props":598,"children":600},{"style":599},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[601],{"type":439,"value":602},";",{"type":434,"tag":461,"props":604,"children":606},{"style":605},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[607],{"type":439,"value":608}," // 1.7976931348623157e+308\n",{"type":434,"tag":461,"props":610,"children":611},{"class":463,"line":473},[612,616,620,625,629],{"type":434,"tag":461,"props":613,"children":614},{"style":581},[615],{"type":439,"value":584},{"type":434,"tag":461,"props":617,"children":618},{"style":587},[619],{"type":439,"value":590},{"type":434,"tag":461,"props":621,"children":622},{"style":593},[623],{"type":439,"value":624},"MAX_SAFE_INTEGER",{"type":434,"tag":461,"props":626,"children":627},{"style":599},[628],{"type":439,"value":602},{"type":434,"tag":461,"props":630,"children":631},{"style":605},[632],{"type":439,"value":633}," // 9007199254740991\n",{"type":434,"tag":461,"props":635,"children":637},{"class":463,"line":636},3,[638,642,646,651,655],{"type":434,"tag":461,"props":639,"children":640},{"style":581},[641],{"type":439,"value":584},{"type":434,"tag":461,"props":643,"children":644},{"style":587},[645],{"type":439,"value":590},{"type":434,"tag":461,"props":647,"children":648},{"style":593},[649],{"type":439,"value":650},"MIN_VALUE",{"type":434,"tag":461,"props":652,"children":653},{"style":599},[654],{"type":439,"value":602},{"type":434,"tag":461,"props":656,"children":657},{"style":605},[658],{"type":439,"value":659}," // 5e-324\n",{"type":434,"tag":461,"props":661,"children":663},{"class":463,"line":662},4,[664,668,672,677,681],{"type":434,"tag":461,"props":665,"children":666},{"style":581},[667],{"type":439,"value":584},{"type":434,"tag":461,"props":669,"children":670},{"style":587},[671],{"type":439,"value":590},{"type":434,"tag":461,"props":673,"children":674},{"style":593},[675],{"type":439,"value":676},"MIN_SAFE_INTEGER",{"type":434,"tag":461,"props":678,"children":679},{"style":599},[680],{"type":439,"value":602},{"type":434,"tag":461,"props":682,"children":683},{"style":605},[684],{"type":439,"value":685}," // -9007199254740991\n",{"type":434,"tag":435,"props":687,"children":688},{},[689,691,697,699,705],{"type":439,"value":690},"如果想要对一个超大的整数 ",{"type":434,"tag":457,"props":692,"children":694},{"className":693},[],[695],{"type":439,"value":696},"> Number.MAX_SAFE_INTEGER",{"type":439,"value":698}," 进行加法运算，但是又想要输出为一般形式，那么使用 + 是无法做到的，因为一旦数字超过 ",{"type":434,"tag":457,"props":700,"children":702},{"className":701},[],[703],{"type":439,"value":704},"Number.MAX_SAFE_INTEGER",{"type":439,"value":706}," 就会被转换为科学技术法，并且数字精度相比之前会有误差。",{"type":434,"tag":435,"props":708,"children":709},{},[710],{"type":439,"value":711},"使用算法实现大数相加：",{"type":434,"tag":542,"props":713,"children":714},{},[715,720,725,730,735],{"type":434,"tag":546,"props":716,"children":717},{},[718],{"type":439,"value":719},"首先，利用字符串的方式来保存大数，这样数字在数学表示上就不会发生变化；",{"type":434,"tag":546,"props":721,"children":722},{},[723],{"type":439,"value":724},"第二步，初始化 res、temp 来保存中间的计算结果，并将两个字符串转化为数组，方便进行每一位的加法运算；",{"type":434,"tag":546,"props":726,"children":727},{},[728],{"type":439,"value":729},"第三步，将两个数组的对应\"位\"进行相加，两个数相加的结果可能大于 10，所以可能要考虑\"进位\"，此时需要对 10 进行取余操作，将结果保存在当前位；",{"type":434,"tag":546,"props":731,"children":732},{},[733],{"type":439,"value":734},"第四步，判断当前位是否大于 9，即判断是否会进位。如果是则将 temp 赋值为 true，因为在加法运算中，true 自动隐式转换为 1，方便下一次相加；",{"type":434,"tag":546,"props":736,"children":737},{},[738],{"type":439,"value":739},"重复以上操作，直到计算出结果；",{"type":434,"tag":562,"props":741,"children":743},{"id":742},"实现",[744],{"type":439,"value":742},{"type":434,"tag":746,"props":747,"children":749},"h3",{"id":748},"大数相加",[750],{"type":439,"value":748},{"type":434,"tag":451,"props":752,"children":754},{"className":569,"code":753,"language":571,"meta":427,"style":427},"/**\n * @param {string} num1\n * @param {string} num2\n * @return {string}\n */\nvar addStrings = function (num1, num2) {\n  let n1 = num1.toString().split(\"\");\n  let n2 = num2.toString().split(\"\");\n  let res = \"\";\n  let temp = 0;\n  while (n1.length || n2.length || temp) {\n    temp += ~~n1.pop() + ~~n2.pop();\n    res += temp % 10;\n    temp = temp > 9;\n  }\n  return res.split(\"\").reverse().join(\"\");\n};\n",[755],{"type":434,"tag":457,"props":756,"children":757},{"__ignoreMap":427},[758,766,792,812,829,838,891,958,1015,1041,1068,1125,1192,1223,1253,1262,1333],{"type":434,"tag":461,"props":759,"children":760},{"class":463,"line":464},[761],{"type":434,"tag":461,"props":762,"children":763},{"style":605},[764],{"type":439,"value":765},"/**\n",{"type":434,"tag":461,"props":767,"children":768},{"class":463,"line":473},[769,774,780,786],{"type":434,"tag":461,"props":770,"children":771},{"style":605},[772],{"type":439,"value":773}," * ",{"type":434,"tag":461,"props":775,"children":777},{"style":776},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[778],{"type":439,"value":779},"@param",{"type":434,"tag":461,"props":781,"children":783},{"style":782},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[784],{"type":439,"value":785}," {string}",{"type":434,"tag":461,"props":787,"children":789},{"style":788},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[790],{"type":439,"value":791}," num1\n",{"type":434,"tag":461,"props":793,"children":794},{"class":463,"line":636},[795,799,803,807],{"type":434,"tag":461,"props":796,"children":797},{"style":605},[798],{"type":439,"value":773},{"type":434,"tag":461,"props":800,"children":801},{"style":776},[802],{"type":439,"value":779},{"type":434,"tag":461,"props":804,"children":805},{"style":782},[806],{"type":439,"value":785},{"type":434,"tag":461,"props":808,"children":809},{"style":788},[810],{"type":439,"value":811}," num2\n",{"type":434,"tag":461,"props":813,"children":814},{"class":463,"line":662},[815,819,824],{"type":434,"tag":461,"props":816,"children":817},{"style":605},[818],{"type":439,"value":773},{"type":434,"tag":461,"props":820,"children":821},{"style":776},[822],{"type":439,"value":823},"@return",{"type":434,"tag":461,"props":825,"children":826},{"style":782},[827],{"type":439,"value":828}," {string}\n",{"type":434,"tag":461,"props":830,"children":832},{"class":463,"line":831},5,[833],{"type":434,"tag":461,"props":834,"children":835},{"style":605},[836],{"type":439,"value":837}," */\n",{"type":434,"tag":461,"props":839,"children":841},{"class":463,"line":840},6,[842,848,854,860,865,870,876,881,886],{"type":434,"tag":461,"props":843,"children":845},{"style":844},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[846],{"type":439,"value":847},"var",{"type":434,"tag":461,"props":849,"children":851},{"style":850},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[852],{"type":439,"value":853}," addStrings",{"type":434,"tag":461,"props":855,"children":857},{"style":856},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[858],{"type":439,"value":859}," =",{"type":434,"tag":461,"props":861,"children":862},{"style":844},[863],{"type":439,"value":864}," function",{"type":434,"tag":461,"props":866,"children":867},{"style":593},[868],{"type":439,"value":869}," (",{"type":434,"tag":461,"props":871,"children":873},{"style":872},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[874],{"type":439,"value":875},"num1",{"type":434,"tag":461,"props":877,"children":878},{"style":599},[879],{"type":439,"value":880},",",{"type":434,"tag":461,"props":882,"children":883},{"style":872},[884],{"type":439,"value":885}," num2",{"type":434,"tag":461,"props":887,"children":888},{"style":593},[889],{"type":439,"value":890},") {\n",{"type":434,"tag":461,"props":892,"children":894},{"class":463,"line":893},7,[895,900,905,909,914,918,923,928,932,937,942,948,953],{"type":434,"tag":461,"props":896,"children":897},{"style":844},[898],{"type":439,"value":899},"  let",{"type":434,"tag":461,"props":901,"children":902},{"style":581},[903],{"type":439,"value":904}," n1",{"type":434,"tag":461,"props":906,"children":907},{"style":856},[908],{"type":439,"value":859},{"type":434,"tag":461,"props":910,"children":911},{"style":581},[912],{"type":439,"value":913}," num1",{"type":434,"tag":461,"props":915,"children":916},{"style":587},[917],{"type":439,"value":590},{"type":434,"tag":461,"props":919,"children":920},{"style":850},[921],{"type":439,"value":922},"toString",{"type":434,"tag":461,"props":924,"children":925},{"style":593},[926],{"type":439,"value":927},"()",{"type":434,"tag":461,"props":929,"children":930},{"style":587},[931],{"type":439,"value":590},{"type":434,"tag":461,"props":933,"children":934},{"style":850},[935],{"type":439,"value":936},"split",{"type":434,"tag":461,"props":938,"children":939},{"style":593},[940],{"type":439,"value":941},"(",{"type":434,"tag":461,"props":943,"children":945},{"style":944},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[946],{"type":439,"value":947},"\"\"",{"type":434,"tag":461,"props":949,"children":950},{"style":593},[951],{"type":439,"value":952},")",{"type":434,"tag":461,"props":954,"children":955},{"style":599},[956],{"type":439,"value":957},";\n",{"type":434,"tag":461,"props":959,"children":961},{"class":463,"line":960},8,[962,966,971,975,979,983,987,991,995,999,1003,1007,1011],{"type":434,"tag":461,"props":963,"children":964},{"style":844},[965],{"type":439,"value":899},{"type":434,"tag":461,"props":967,"children":968},{"style":581},[969],{"type":439,"value":970}," n2",{"type":434,"tag":461,"props":972,"children":973},{"style":856},[974],{"type":439,"value":859},{"type":434,"tag":461,"props":976,"children":977},{"style":581},[978],{"type":439,"value":885},{"type":434,"tag":461,"props":980,"children":981},{"style":587},[982],{"type":439,"value":590},{"type":434,"tag":461,"props":984,"children":985},{"style":850},[986],{"type":439,"value":922},{"type":434,"tag":461,"props":988,"children":989},{"style":593},[990],{"type":439,"value":927},{"type":434,"tag":461,"props":992,"children":993},{"style":587},[994],{"type":439,"value":590},{"type":434,"tag":461,"props":996,"children":997},{"style":850},[998],{"type":439,"value":936},{"type":434,"tag":461,"props":1000,"children":1001},{"style":593},[1002],{"type":439,"value":941},{"type":434,"tag":461,"props":1004,"children":1005},{"style":944},[1006],{"type":439,"value":947},{"type":434,"tag":461,"props":1008,"children":1009},{"style":593},[1010],{"type":439,"value":952},{"type":434,"tag":461,"props":1012,"children":1013},{"style":599},[1014],{"type":439,"value":957},{"type":434,"tag":461,"props":1016,"children":1018},{"class":463,"line":1017},9,[1019,1023,1028,1032,1037],{"type":434,"tag":461,"props":1020,"children":1021},{"style":844},[1022],{"type":439,"value":899},{"type":434,"tag":461,"props":1024,"children":1025},{"style":581},[1026],{"type":439,"value":1027}," res",{"type":434,"tag":461,"props":1029,"children":1030},{"style":856},[1031],{"type":439,"value":859},{"type":434,"tag":461,"props":1033,"children":1034},{"style":944},[1035],{"type":439,"value":1036}," \"\"",{"type":434,"tag":461,"props":1038,"children":1039},{"style":599},[1040],{"type":439,"value":957},{"type":434,"tag":461,"props":1042,"children":1044},{"class":463,"line":1043},10,[1045,1049,1054,1058,1064],{"type":434,"tag":461,"props":1046,"children":1047},{"style":844},[1048],{"type":439,"value":899},{"type":434,"tag":461,"props":1050,"children":1051},{"style":581},[1052],{"type":439,"value":1053}," temp",{"type":434,"tag":461,"props":1055,"children":1056},{"style":856},[1057],{"type":439,"value":859},{"type":434,"tag":461,"props":1059,"children":1061},{"style":1060},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[1062],{"type":439,"value":1063}," 0",{"type":434,"tag":461,"props":1065,"children":1066},{"style":599},[1067],{"type":439,"value":957},{"type":434,"tag":461,"props":1069,"children":1071},{"class":463,"line":1070},11,[1072,1078,1082,1087,1091,1096,1101,1105,1109,1113,1117,1121],{"type":434,"tag":461,"props":1073,"children":1075},{"style":1074},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[1076],{"type":439,"value":1077},"  while",{"type":434,"tag":461,"props":1079,"children":1080},{"style":593},[1081],{"type":439,"value":869},{"type":434,"tag":461,"props":1083,"children":1084},{"style":581},[1085],{"type":439,"value":1086},"n1",{"type":434,"tag":461,"props":1088,"children":1089},{"style":587},[1090],{"type":439,"value":590},{"type":434,"tag":461,"props":1092,"children":1093},{"style":593},[1094],{"type":439,"value":1095},"length ",{"type":434,"tag":461,"props":1097,"children":1098},{"style":856},[1099],{"type":439,"value":1100},"||",{"type":434,"tag":461,"props":1102,"children":1103},{"style":581},[1104],{"type":439,"value":970},{"type":434,"tag":461,"props":1106,"children":1107},{"style":587},[1108],{"type":439,"value":590},{"type":434,"tag":461,"props":1110,"children":1111},{"style":593},[1112],{"type":439,"value":1095},{"type":434,"tag":461,"props":1114,"children":1115},{"style":856},[1116],{"type":439,"value":1100},{"type":434,"tag":461,"props":1118,"children":1119},{"style":581},[1120],{"type":439,"value":1053},{"type":434,"tag":461,"props":1122,"children":1123},{"style":593},[1124],{"type":439,"value":890},{"type":434,"tag":461,"props":1126,"children":1128},{"class":463,"line":1127},12,[1129,1134,1139,1144,1148,1152,1157,1162,1167,1171,1176,1180,1184,1188],{"type":434,"tag":461,"props":1130,"children":1131},{"style":581},[1132],{"type":439,"value":1133},"    temp",{"type":434,"tag":461,"props":1135,"children":1136},{"style":856},[1137],{"type":439,"value":1138}," +=",{"type":434,"tag":461,"props":1140,"children":1141},{"style":856},[1142],{"type":439,"value":1143}," ~~",{"type":434,"tag":461,"props":1145,"children":1146},{"style":581},[1147],{"type":439,"value":1086},{"type":434,"tag":461,"props":1149,"children":1150},{"style":587},[1151],{"type":439,"value":590},{"type":434,"tag":461,"props":1153,"children":1154},{"style":850},[1155],{"type":439,"value":1156},"pop",{"type":434,"tag":461,"props":1158,"children":1159},{"style":593},[1160],{"type":439,"value":1161},"() ",{"type":434,"tag":461,"props":1163,"children":1164},{"style":856},[1165],{"type":439,"value":1166},"+",{"type":434,"tag":461,"props":1168,"children":1169},{"style":856},[1170],{"type":439,"value":1143},{"type":434,"tag":461,"props":1172,"children":1173},{"style":581},[1174],{"type":439,"value":1175},"n2",{"type":434,"tag":461,"props":1177,"children":1178},{"style":587},[1179],{"type":439,"value":590},{"type":434,"tag":461,"props":1181,"children":1182},{"style":850},[1183],{"type":439,"value":1156},{"type":434,"tag":461,"props":1185,"children":1186},{"style":593},[1187],{"type":439,"value":927},{"type":434,"tag":461,"props":1189,"children":1190},{"style":599},[1191],{"type":439,"value":957},{"type":434,"tag":461,"props":1193,"children":1195},{"class":463,"line":1194},13,[1196,1201,1205,1209,1214,1219],{"type":434,"tag":461,"props":1197,"children":1198},{"style":581},[1199],{"type":439,"value":1200},"    res",{"type":434,"tag":461,"props":1202,"children":1203},{"style":856},[1204],{"type":439,"value":1138},{"type":434,"tag":461,"props":1206,"children":1207},{"style":581},[1208],{"type":439,"value":1053},{"type":434,"tag":461,"props":1210,"children":1211},{"style":856},[1212],{"type":439,"value":1213}," %",{"type":434,"tag":461,"props":1215,"children":1216},{"style":1060},[1217],{"type":439,"value":1218}," 10",{"type":434,"tag":461,"props":1220,"children":1221},{"style":599},[1222],{"type":439,"value":957},{"type":434,"tag":461,"props":1224,"children":1226},{"class":463,"line":1225},14,[1227,1231,1235,1239,1244,1249],{"type":434,"tag":461,"props":1228,"children":1229},{"style":581},[1230],{"type":439,"value":1133},{"type":434,"tag":461,"props":1232,"children":1233},{"style":856},[1234],{"type":439,"value":859},{"type":434,"tag":461,"props":1236,"children":1237},{"style":581},[1238],{"type":439,"value":1053},{"type":434,"tag":461,"props":1240,"children":1241},{"style":856},[1242],{"type":439,"value":1243}," >",{"type":434,"tag":461,"props":1245,"children":1246},{"style":1060},[1247],{"type":439,"value":1248}," 9",{"type":434,"tag":461,"props":1250,"children":1251},{"style":599},[1252],{"type":439,"value":957},{"type":434,"tag":461,"props":1254,"children":1256},{"class":463,"line":1255},15,[1257],{"type":434,"tag":461,"props":1258,"children":1259},{"style":593},[1260],{"type":439,"value":1261},"  }\n",{"type":434,"tag":461,"props":1263,"children":1265},{"class":463,"line":1264},16,[1266,1271,1275,1279,1283,1287,1291,1295,1299,1304,1308,1312,1317,1321,1325,1329],{"type":434,"tag":461,"props":1267,"children":1268},{"style":1074},[1269],{"type":439,"value":1270},"  return",{"type":434,"tag":461,"props":1272,"children":1273},{"style":581},[1274],{"type":439,"value":1027},{"type":434,"tag":461,"props":1276,"children":1277},{"style":587},[1278],{"type":439,"value":590},{"type":434,"tag":461,"props":1280,"children":1281},{"style":850},[1282],{"type":439,"value":936},{"type":434,"tag":461,"props":1284,"children":1285},{"style":593},[1286],{"type":439,"value":941},{"type":434,"tag":461,"props":1288,"children":1289},{"style":944},[1290],{"type":439,"value":947},{"type":434,"tag":461,"props":1292,"children":1293},{"style":593},[1294],{"type":439,"value":952},{"type":434,"tag":461,"props":1296,"children":1297},{"style":587},[1298],{"type":439,"value":590},{"type":434,"tag":461,"props":1300,"children":1301},{"style":850},[1302],{"type":439,"value":1303},"reverse",{"type":434,"tag":461,"props":1305,"children":1306},{"style":593},[1307],{"type":439,"value":927},{"type":434,"tag":461,"props":1309,"children":1310},{"style":587},[1311],{"type":439,"value":590},{"type":434,"tag":461,"props":1313,"children":1314},{"style":850},[1315],{"type":439,"value":1316},"join",{"type":434,"tag":461,"props":1318,"children":1319},{"style":593},[1320],{"type":439,"value":941},{"type":434,"tag":461,"props":1322,"children":1323},{"style":944},[1324],{"type":439,"value":947},{"type":434,"tag":461,"props":1326,"children":1327},{"style":593},[1328],{"type":439,"value":952},{"type":434,"tag":461,"props":1330,"children":1331},{"style":599},[1332],{"type":439,"value":957},{"type":434,"tag":461,"props":1334,"children":1336},{"class":463,"line":1335},17,[1337,1342],{"type":434,"tag":461,"props":1338,"children":1339},{"style":593},[1340],{"type":439,"value":1341},"}",{"type":434,"tag":461,"props":1343,"children":1344},{"style":599},[1345],{"type":439,"value":957},{"type":434,"tag":1347,"props":1348,"children":1349},"style",{},[1350],{"type":439,"value":1351},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":427,"searchDepth":831,"depth":831,"links":1353},[1354,1355],{"id":564,"depth":473,"text":564},{"id":742,"depth":473,"text":742,"children":1356},[1357],{"id":748,"depth":636,"text":748},"markdown","content:1.algorithm:3.leetcode:415.add-strings.md","content","1.algorithm/3.leetcode/415.add-strings.md","md",[1364,1366],{"_path":200,"title":199,"description":1365},"给你一个整数数组 nums ，设计算法来打乱一个没有重复元素的数组。打乱后，数组的所有排列应该是 等可能 的。",{"_path":206,"title":205,"description":1367},"给你一个字符数组 chars ，请使用下述算法压缩：",1713339874180]