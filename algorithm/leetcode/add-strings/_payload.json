[{"data":1,"prerenderedAt":1374},["Reactive",2],{"navigation":3,"/algorithm/leetcode/add-strings":430,"/algorithm/leetcode/add-strings-surround":1369},[4,237,265,409,416],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,402],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396,399],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":379,"_path":380},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":382,"_path":383},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":385,"_path":386},"随机数","/frontend-code-assessment/scene/random-number",{"title":388,"_path":389},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":391,"_path":392},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":394,"_path":395},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":397,"_path":398},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":400,"_path":401},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":403,"_path":404,"children":405},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[406],{"title":407,"_path":408},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":410,"_path":411,"children":412},"项目","/pro",[413],{"title":414,"_path":415},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":417,"_path":418,"children":419},"后端语言","/backend-languages",[420],{"title":421,"_path":422,"children":423},"Python","/backend-languages/python",[424,427],{"title":425,"_path":426},"基础","/backend-languages/python/base",{"title":428,"_path":429},"函数","/backend-languages/python/function",{"_path":203,"_dir":431,"_draft":432,"_partial":432,"_locale":433,"title":202,"description":434,"url":435,"body":436,"_type":1364,"_id":1365,"_source":1366,"_file":1367,"_extension":1368},"leetcode",false,"","给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。","https://leetcode.cn/problems/add-strings",{"type":437,"children":438,"toc":1358},"root",[439,446,451,456,486,491,514,519,542,547,567,573,692,713,718,746,751,757,1352],{"type":440,"tag":441,"props":442,"children":443},"element","p",{},[444],{"type":445,"value":434},"text",{"type":440,"tag":441,"props":447,"children":448},{},[449],{"type":445,"value":450},"你不能使用任何內建的用于处理大整数的库（比如 BigInteger）， 也不能直接将输入的字符串转换为整数形式。",{"type":440,"tag":441,"props":452,"children":453},{},[454],{"type":445,"value":455},"示例 1：",{"type":440,"tag":457,"props":458,"children":461},"pre",{"className":459,"code":460,"language":445,"meta":433,"style":433},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：num1 = \"11\", num2 = \"123\"\n输出：\"134\"\n",[462],{"type":440,"tag":463,"props":464,"children":465},"code",{"__ignoreMap":433},[466,477],{"type":440,"tag":467,"props":468,"children":471},"span",{"class":469,"line":470},"line",1,[472],{"type":440,"tag":467,"props":473,"children":474},{},[475],{"type":445,"value":476},"输入：num1 = \"11\", num2 = \"123\"\n",{"type":440,"tag":467,"props":478,"children":480},{"class":469,"line":479},2,[481],{"type":440,"tag":467,"props":482,"children":483},{},[484],{"type":445,"value":485},"输出：\"134\"\n",{"type":440,"tag":441,"props":487,"children":488},{},[489],{"type":445,"value":490},"示例 2：",{"type":440,"tag":457,"props":492,"children":494},{"className":459,"code":493,"language":445,"meta":433,"style":433},"输入：num1 = \"456\", num2 = \"77\"\n输出：\"533\"\n",[495],{"type":440,"tag":463,"props":496,"children":497},{"__ignoreMap":433},[498,506],{"type":440,"tag":467,"props":499,"children":500},{"class":469,"line":470},[501],{"type":440,"tag":467,"props":502,"children":503},{},[504],{"type":445,"value":505},"输入：num1 = \"456\", num2 = \"77\"\n",{"type":440,"tag":467,"props":507,"children":508},{"class":469,"line":479},[509],{"type":440,"tag":467,"props":510,"children":511},{},[512],{"type":445,"value":513},"输出：\"533\"\n",{"type":440,"tag":441,"props":515,"children":516},{},[517],{"type":445,"value":518},"示例 3：",{"type":440,"tag":457,"props":520,"children":522},{"className":459,"code":521,"language":445,"meta":433,"style":433},"输入：num1 = \"0\", num2 = \"0\"\n输出：\"0\"\n",[523],{"type":440,"tag":463,"props":524,"children":525},{"__ignoreMap":433},[526,534],{"type":440,"tag":467,"props":527,"children":528},{"class":469,"line":470},[529],{"type":440,"tag":467,"props":530,"children":531},{},[532],{"type":445,"value":533},"输入：num1 = \"0\", num2 = \"0\"\n",{"type":440,"tag":467,"props":535,"children":536},{"class":469,"line":479},[537],{"type":440,"tag":467,"props":538,"children":539},{},[540],{"type":445,"value":541},"输出：\"0\"\n",{"type":440,"tag":441,"props":543,"children":544},{},[545],{"type":445,"value":546},"提示：",{"type":440,"tag":548,"props":549,"children":550},"ul",{},[551,557,562],{"type":440,"tag":552,"props":553,"children":554},"li",{},[555],{"type":445,"value":556},"1 \u003C= num1.length, num2.length \u003C= 10^4",{"type":440,"tag":552,"props":558,"children":559},{},[560],{"type":445,"value":561},"num1 和 num2 都只包含数字 0-9",{"type":440,"tag":552,"props":563,"children":564},{},[565],{"type":445,"value":566},"num1 和 num2 都不包含任何前导零",{"type":440,"tag":568,"props":569,"children":571},"h2",{"id":570},"解题思路",[572],{"type":445,"value":570},{"type":440,"tag":457,"props":574,"children":578},{"className":575,"code":576,"language":577,"meta":433,"style":433},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","Number.MAX_VALUE; // 1.7976931348623157e+308\nNumber.MAX_SAFE_INTEGER; // 9007199254740991\nNumber.MIN_VALUE; // 5e-324\nNumber.MIN_SAFE_INTEGER; // -9007199254740991\n","js",[579],{"type":440,"tag":463,"props":580,"children":581},{"__ignoreMap":433},[582,615,640,666],{"type":440,"tag":467,"props":583,"children":584},{"class":469,"line":470},[585,591,597,603,609],{"type":440,"tag":467,"props":586,"children":588},{"style":587},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[589],{"type":445,"value":590},"Number",{"type":440,"tag":467,"props":592,"children":594},{"style":593},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[595],{"type":445,"value":596},".",{"type":440,"tag":467,"props":598,"children":600},{"style":599},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[601],{"type":445,"value":602},"MAX_VALUE",{"type":440,"tag":467,"props":604,"children":606},{"style":605},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[607],{"type":445,"value":608},";",{"type":440,"tag":467,"props":610,"children":612},{"style":611},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[613],{"type":445,"value":614}," // 1.7976931348623157e+308\n",{"type":440,"tag":467,"props":616,"children":617},{"class":469,"line":479},[618,622,626,631,635],{"type":440,"tag":467,"props":619,"children":620},{"style":587},[621],{"type":445,"value":590},{"type":440,"tag":467,"props":623,"children":624},{"style":593},[625],{"type":445,"value":596},{"type":440,"tag":467,"props":627,"children":628},{"style":599},[629],{"type":445,"value":630},"MAX_SAFE_INTEGER",{"type":440,"tag":467,"props":632,"children":633},{"style":605},[634],{"type":445,"value":608},{"type":440,"tag":467,"props":636,"children":637},{"style":611},[638],{"type":445,"value":639}," // 9007199254740991\n",{"type":440,"tag":467,"props":641,"children":643},{"class":469,"line":642},3,[644,648,652,657,661],{"type":440,"tag":467,"props":645,"children":646},{"style":587},[647],{"type":445,"value":590},{"type":440,"tag":467,"props":649,"children":650},{"style":593},[651],{"type":445,"value":596},{"type":440,"tag":467,"props":653,"children":654},{"style":599},[655],{"type":445,"value":656},"MIN_VALUE",{"type":440,"tag":467,"props":658,"children":659},{"style":605},[660],{"type":445,"value":608},{"type":440,"tag":467,"props":662,"children":663},{"style":611},[664],{"type":445,"value":665}," // 5e-324\n",{"type":440,"tag":467,"props":667,"children":669},{"class":469,"line":668},4,[670,674,678,683,687],{"type":440,"tag":467,"props":671,"children":672},{"style":587},[673],{"type":445,"value":590},{"type":440,"tag":467,"props":675,"children":676},{"style":593},[677],{"type":445,"value":596},{"type":440,"tag":467,"props":679,"children":680},{"style":599},[681],{"type":445,"value":682},"MIN_SAFE_INTEGER",{"type":440,"tag":467,"props":684,"children":685},{"style":605},[686],{"type":445,"value":608},{"type":440,"tag":467,"props":688,"children":689},{"style":611},[690],{"type":445,"value":691}," // -9007199254740991\n",{"type":440,"tag":441,"props":693,"children":694},{},[695,697,703,705,711],{"type":445,"value":696},"如果想要对一个超大的整数 ",{"type":440,"tag":463,"props":698,"children":700},{"className":699},[],[701],{"type":445,"value":702},"> Number.MAX_SAFE_INTEGER",{"type":445,"value":704}," 进行加法运算，但是又想要输出为一般形式，那么使用 + 是无法做到的，因为一旦数字超过 ",{"type":440,"tag":463,"props":706,"children":708},{"className":707},[],[709],{"type":445,"value":710},"Number.MAX_SAFE_INTEGER",{"type":445,"value":712}," 就会被转换为科学技术法，并且数字精度相比之前会有误差。",{"type":440,"tag":441,"props":714,"children":715},{},[716],{"type":445,"value":717},"使用算法实现大数相加：",{"type":440,"tag":548,"props":719,"children":720},{},[721,726,731,736,741],{"type":440,"tag":552,"props":722,"children":723},{},[724],{"type":445,"value":725},"首先，利用字符串的方式来保存大数，这样数字在数学表示上就不会发生变化；",{"type":440,"tag":552,"props":727,"children":728},{},[729],{"type":445,"value":730},"第二步，初始化 res、temp 来保存中间的计算结果，并将两个字符串转化为数组，方便进行每一位的加法运算；",{"type":440,"tag":552,"props":732,"children":733},{},[734],{"type":445,"value":735},"第三步，将两个数组的对应\"位\"进行相加，两个数相加的结果可能大于 10，所以可能要考虑\"进位\"，此时需要对 10 进行取余操作，将结果保存在当前位；",{"type":440,"tag":552,"props":737,"children":738},{},[739],{"type":445,"value":740},"第四步，判断当前位是否大于 9，即判断是否会进位。如果是则将 temp 赋值为 true，因为在加法运算中，true 自动隐式转换为 1，方便下一次相加；",{"type":440,"tag":552,"props":742,"children":743},{},[744],{"type":445,"value":745},"重复以上操作，直到计算出结果；",{"type":440,"tag":568,"props":747,"children":749},{"id":748},"实现",[750],{"type":445,"value":748},{"type":440,"tag":752,"props":753,"children":755},"h3",{"id":754},"大数相加",[756],{"type":445,"value":754},{"type":440,"tag":457,"props":758,"children":760},{"className":575,"code":759,"language":577,"meta":433,"style":433},"/**\n * @param {string} num1\n * @param {string} num2\n * @return {string}\n */\nvar addStrings = function (num1, num2) {\n  let n1 = num1.toString().split(\"\");\n  let n2 = num2.toString().split(\"\");\n  let res = \"\";\n  let temp = 0;\n  while (n1.length || n2.length || temp) {\n    temp += ~~n1.pop() + ~~n2.pop();\n    res += temp % 10;\n    temp = temp > 9;\n  }\n  return res.split(\"\").reverse().join(\"\");\n};\n",[761],{"type":440,"tag":463,"props":762,"children":763},{"__ignoreMap":433},[764,772,798,818,835,844,897,964,1021,1047,1074,1131,1198,1229,1259,1268,1339],{"type":440,"tag":467,"props":765,"children":766},{"class":469,"line":470},[767],{"type":440,"tag":467,"props":768,"children":769},{"style":611},[770],{"type":445,"value":771},"/**\n",{"type":440,"tag":467,"props":773,"children":774},{"class":469,"line":479},[775,780,786,792],{"type":440,"tag":467,"props":776,"children":777},{"style":611},[778],{"type":445,"value":779}," * ",{"type":440,"tag":467,"props":781,"children":783},{"style":782},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[784],{"type":445,"value":785},"@param",{"type":440,"tag":467,"props":787,"children":789},{"style":788},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[790],{"type":445,"value":791}," {string}",{"type":440,"tag":467,"props":793,"children":795},{"style":794},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[796],{"type":445,"value":797}," num1\n",{"type":440,"tag":467,"props":799,"children":800},{"class":469,"line":642},[801,805,809,813],{"type":440,"tag":467,"props":802,"children":803},{"style":611},[804],{"type":445,"value":779},{"type":440,"tag":467,"props":806,"children":807},{"style":782},[808],{"type":445,"value":785},{"type":440,"tag":467,"props":810,"children":811},{"style":788},[812],{"type":445,"value":791},{"type":440,"tag":467,"props":814,"children":815},{"style":794},[816],{"type":445,"value":817}," num2\n",{"type":440,"tag":467,"props":819,"children":820},{"class":469,"line":668},[821,825,830],{"type":440,"tag":467,"props":822,"children":823},{"style":611},[824],{"type":445,"value":779},{"type":440,"tag":467,"props":826,"children":827},{"style":782},[828],{"type":445,"value":829},"@return",{"type":440,"tag":467,"props":831,"children":832},{"style":788},[833],{"type":445,"value":834}," {string}\n",{"type":440,"tag":467,"props":836,"children":838},{"class":469,"line":837},5,[839],{"type":440,"tag":467,"props":840,"children":841},{"style":611},[842],{"type":445,"value":843}," */\n",{"type":440,"tag":467,"props":845,"children":847},{"class":469,"line":846},6,[848,854,860,866,871,876,882,887,892],{"type":440,"tag":467,"props":849,"children":851},{"style":850},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[852],{"type":445,"value":853},"var",{"type":440,"tag":467,"props":855,"children":857},{"style":856},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[858],{"type":445,"value":859}," addStrings",{"type":440,"tag":467,"props":861,"children":863},{"style":862},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[864],{"type":445,"value":865}," =",{"type":440,"tag":467,"props":867,"children":868},{"style":850},[869],{"type":445,"value":870}," function",{"type":440,"tag":467,"props":872,"children":873},{"style":599},[874],{"type":445,"value":875}," (",{"type":440,"tag":467,"props":877,"children":879},{"style":878},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[880],{"type":445,"value":881},"num1",{"type":440,"tag":467,"props":883,"children":884},{"style":605},[885],{"type":445,"value":886},",",{"type":440,"tag":467,"props":888,"children":889},{"style":878},[890],{"type":445,"value":891}," num2",{"type":440,"tag":467,"props":893,"children":894},{"style":599},[895],{"type":445,"value":896},") {\n",{"type":440,"tag":467,"props":898,"children":900},{"class":469,"line":899},7,[901,906,911,915,920,924,929,934,938,943,948,954,959],{"type":440,"tag":467,"props":902,"children":903},{"style":850},[904],{"type":445,"value":905},"  let",{"type":440,"tag":467,"props":907,"children":908},{"style":587},[909],{"type":445,"value":910}," n1",{"type":440,"tag":467,"props":912,"children":913},{"style":862},[914],{"type":445,"value":865},{"type":440,"tag":467,"props":916,"children":917},{"style":587},[918],{"type":445,"value":919}," num1",{"type":440,"tag":467,"props":921,"children":922},{"style":593},[923],{"type":445,"value":596},{"type":440,"tag":467,"props":925,"children":926},{"style":856},[927],{"type":445,"value":928},"toString",{"type":440,"tag":467,"props":930,"children":931},{"style":599},[932],{"type":445,"value":933},"()",{"type":440,"tag":467,"props":935,"children":936},{"style":593},[937],{"type":445,"value":596},{"type":440,"tag":467,"props":939,"children":940},{"style":856},[941],{"type":445,"value":942},"split",{"type":440,"tag":467,"props":944,"children":945},{"style":599},[946],{"type":445,"value":947},"(",{"type":440,"tag":467,"props":949,"children":951},{"style":950},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[952],{"type":445,"value":953},"\"\"",{"type":440,"tag":467,"props":955,"children":956},{"style":599},[957],{"type":445,"value":958},")",{"type":440,"tag":467,"props":960,"children":961},{"style":605},[962],{"type":445,"value":963},";\n",{"type":440,"tag":467,"props":965,"children":967},{"class":469,"line":966},8,[968,972,977,981,985,989,993,997,1001,1005,1009,1013,1017],{"type":440,"tag":467,"props":969,"children":970},{"style":850},[971],{"type":445,"value":905},{"type":440,"tag":467,"props":973,"children":974},{"style":587},[975],{"type":445,"value":976}," n2",{"type":440,"tag":467,"props":978,"children":979},{"style":862},[980],{"type":445,"value":865},{"type":440,"tag":467,"props":982,"children":983},{"style":587},[984],{"type":445,"value":891},{"type":440,"tag":467,"props":986,"children":987},{"style":593},[988],{"type":445,"value":596},{"type":440,"tag":467,"props":990,"children":991},{"style":856},[992],{"type":445,"value":928},{"type":440,"tag":467,"props":994,"children":995},{"style":599},[996],{"type":445,"value":933},{"type":440,"tag":467,"props":998,"children":999},{"style":593},[1000],{"type":445,"value":596},{"type":440,"tag":467,"props":1002,"children":1003},{"style":856},[1004],{"type":445,"value":942},{"type":440,"tag":467,"props":1006,"children":1007},{"style":599},[1008],{"type":445,"value":947},{"type":440,"tag":467,"props":1010,"children":1011},{"style":950},[1012],{"type":445,"value":953},{"type":440,"tag":467,"props":1014,"children":1015},{"style":599},[1016],{"type":445,"value":958},{"type":440,"tag":467,"props":1018,"children":1019},{"style":605},[1020],{"type":445,"value":963},{"type":440,"tag":467,"props":1022,"children":1024},{"class":469,"line":1023},9,[1025,1029,1034,1038,1043],{"type":440,"tag":467,"props":1026,"children":1027},{"style":850},[1028],{"type":445,"value":905},{"type":440,"tag":467,"props":1030,"children":1031},{"style":587},[1032],{"type":445,"value":1033}," res",{"type":440,"tag":467,"props":1035,"children":1036},{"style":862},[1037],{"type":445,"value":865},{"type":440,"tag":467,"props":1039,"children":1040},{"style":950},[1041],{"type":445,"value":1042}," \"\"",{"type":440,"tag":467,"props":1044,"children":1045},{"style":605},[1046],{"type":445,"value":963},{"type":440,"tag":467,"props":1048,"children":1050},{"class":469,"line":1049},10,[1051,1055,1060,1064,1070],{"type":440,"tag":467,"props":1052,"children":1053},{"style":850},[1054],{"type":445,"value":905},{"type":440,"tag":467,"props":1056,"children":1057},{"style":587},[1058],{"type":445,"value":1059}," temp",{"type":440,"tag":467,"props":1061,"children":1062},{"style":862},[1063],{"type":445,"value":865},{"type":440,"tag":467,"props":1065,"children":1067},{"style":1066},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[1068],{"type":445,"value":1069}," 0",{"type":440,"tag":467,"props":1071,"children":1072},{"style":605},[1073],{"type":445,"value":963},{"type":440,"tag":467,"props":1075,"children":1077},{"class":469,"line":1076},11,[1078,1084,1088,1093,1097,1102,1107,1111,1115,1119,1123,1127],{"type":440,"tag":467,"props":1079,"children":1081},{"style":1080},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[1082],{"type":445,"value":1083},"  while",{"type":440,"tag":467,"props":1085,"children":1086},{"style":599},[1087],{"type":445,"value":875},{"type":440,"tag":467,"props":1089,"children":1090},{"style":587},[1091],{"type":445,"value":1092},"n1",{"type":440,"tag":467,"props":1094,"children":1095},{"style":593},[1096],{"type":445,"value":596},{"type":440,"tag":467,"props":1098,"children":1099},{"style":599},[1100],{"type":445,"value":1101},"length ",{"type":440,"tag":467,"props":1103,"children":1104},{"style":862},[1105],{"type":445,"value":1106},"||",{"type":440,"tag":467,"props":1108,"children":1109},{"style":587},[1110],{"type":445,"value":976},{"type":440,"tag":467,"props":1112,"children":1113},{"style":593},[1114],{"type":445,"value":596},{"type":440,"tag":467,"props":1116,"children":1117},{"style":599},[1118],{"type":445,"value":1101},{"type":440,"tag":467,"props":1120,"children":1121},{"style":862},[1122],{"type":445,"value":1106},{"type":440,"tag":467,"props":1124,"children":1125},{"style":587},[1126],{"type":445,"value":1059},{"type":440,"tag":467,"props":1128,"children":1129},{"style":599},[1130],{"type":445,"value":896},{"type":440,"tag":467,"props":1132,"children":1134},{"class":469,"line":1133},12,[1135,1140,1145,1150,1154,1158,1163,1168,1173,1177,1182,1186,1190,1194],{"type":440,"tag":467,"props":1136,"children":1137},{"style":587},[1138],{"type":445,"value":1139},"    temp",{"type":440,"tag":467,"props":1141,"children":1142},{"style":862},[1143],{"type":445,"value":1144}," +=",{"type":440,"tag":467,"props":1146,"children":1147},{"style":862},[1148],{"type":445,"value":1149}," ~~",{"type":440,"tag":467,"props":1151,"children":1152},{"style":587},[1153],{"type":445,"value":1092},{"type":440,"tag":467,"props":1155,"children":1156},{"style":593},[1157],{"type":445,"value":596},{"type":440,"tag":467,"props":1159,"children":1160},{"style":856},[1161],{"type":445,"value":1162},"pop",{"type":440,"tag":467,"props":1164,"children":1165},{"style":599},[1166],{"type":445,"value":1167},"() ",{"type":440,"tag":467,"props":1169,"children":1170},{"style":862},[1171],{"type":445,"value":1172},"+",{"type":440,"tag":467,"props":1174,"children":1175},{"style":862},[1176],{"type":445,"value":1149},{"type":440,"tag":467,"props":1178,"children":1179},{"style":587},[1180],{"type":445,"value":1181},"n2",{"type":440,"tag":467,"props":1183,"children":1184},{"style":593},[1185],{"type":445,"value":596},{"type":440,"tag":467,"props":1187,"children":1188},{"style":856},[1189],{"type":445,"value":1162},{"type":440,"tag":467,"props":1191,"children":1192},{"style":599},[1193],{"type":445,"value":933},{"type":440,"tag":467,"props":1195,"children":1196},{"style":605},[1197],{"type":445,"value":963},{"type":440,"tag":467,"props":1199,"children":1201},{"class":469,"line":1200},13,[1202,1207,1211,1215,1220,1225],{"type":440,"tag":467,"props":1203,"children":1204},{"style":587},[1205],{"type":445,"value":1206},"    res",{"type":440,"tag":467,"props":1208,"children":1209},{"style":862},[1210],{"type":445,"value":1144},{"type":440,"tag":467,"props":1212,"children":1213},{"style":587},[1214],{"type":445,"value":1059},{"type":440,"tag":467,"props":1216,"children":1217},{"style":862},[1218],{"type":445,"value":1219}," %",{"type":440,"tag":467,"props":1221,"children":1222},{"style":1066},[1223],{"type":445,"value":1224}," 10",{"type":440,"tag":467,"props":1226,"children":1227},{"style":605},[1228],{"type":445,"value":963},{"type":440,"tag":467,"props":1230,"children":1232},{"class":469,"line":1231},14,[1233,1237,1241,1245,1250,1255],{"type":440,"tag":467,"props":1234,"children":1235},{"style":587},[1236],{"type":445,"value":1139},{"type":440,"tag":467,"props":1238,"children":1239},{"style":862},[1240],{"type":445,"value":865},{"type":440,"tag":467,"props":1242,"children":1243},{"style":587},[1244],{"type":445,"value":1059},{"type":440,"tag":467,"props":1246,"children":1247},{"style":862},[1248],{"type":445,"value":1249}," >",{"type":440,"tag":467,"props":1251,"children":1252},{"style":1066},[1253],{"type":445,"value":1254}," 9",{"type":440,"tag":467,"props":1256,"children":1257},{"style":605},[1258],{"type":445,"value":963},{"type":440,"tag":467,"props":1260,"children":1262},{"class":469,"line":1261},15,[1263],{"type":440,"tag":467,"props":1264,"children":1265},{"style":599},[1266],{"type":445,"value":1267},"  }\n",{"type":440,"tag":467,"props":1269,"children":1271},{"class":469,"line":1270},16,[1272,1277,1281,1285,1289,1293,1297,1301,1305,1310,1314,1318,1323,1327,1331,1335],{"type":440,"tag":467,"props":1273,"children":1274},{"style":1080},[1275],{"type":445,"value":1276},"  return",{"type":440,"tag":467,"props":1278,"children":1279},{"style":587},[1280],{"type":445,"value":1033},{"type":440,"tag":467,"props":1282,"children":1283},{"style":593},[1284],{"type":445,"value":596},{"type":440,"tag":467,"props":1286,"children":1287},{"style":856},[1288],{"type":445,"value":942},{"type":440,"tag":467,"props":1290,"children":1291},{"style":599},[1292],{"type":445,"value":947},{"type":440,"tag":467,"props":1294,"children":1295},{"style":950},[1296],{"type":445,"value":953},{"type":440,"tag":467,"props":1298,"children":1299},{"style":599},[1300],{"type":445,"value":958},{"type":440,"tag":467,"props":1302,"children":1303},{"style":593},[1304],{"type":445,"value":596},{"type":440,"tag":467,"props":1306,"children":1307},{"style":856},[1308],{"type":445,"value":1309},"reverse",{"type":440,"tag":467,"props":1311,"children":1312},{"style":599},[1313],{"type":445,"value":933},{"type":440,"tag":467,"props":1315,"children":1316},{"style":593},[1317],{"type":445,"value":596},{"type":440,"tag":467,"props":1319,"children":1320},{"style":856},[1321],{"type":445,"value":1322},"join",{"type":440,"tag":467,"props":1324,"children":1325},{"style":599},[1326],{"type":445,"value":947},{"type":440,"tag":467,"props":1328,"children":1329},{"style":950},[1330],{"type":445,"value":953},{"type":440,"tag":467,"props":1332,"children":1333},{"style":599},[1334],{"type":445,"value":958},{"type":440,"tag":467,"props":1336,"children":1337},{"style":605},[1338],{"type":445,"value":963},{"type":440,"tag":467,"props":1340,"children":1342},{"class":469,"line":1341},17,[1343,1348],{"type":440,"tag":467,"props":1344,"children":1345},{"style":599},[1346],{"type":445,"value":1347},"}",{"type":440,"tag":467,"props":1349,"children":1350},{"style":605},[1351],{"type":445,"value":963},{"type":440,"tag":1353,"props":1354,"children":1355},"style",{},[1356],{"type":445,"value":1357},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":433,"searchDepth":837,"depth":837,"links":1359},[1360,1361],{"id":570,"depth":479,"text":570},{"id":748,"depth":479,"text":748,"children":1362},[1363],{"id":754,"depth":642,"text":754},"markdown","content:1.algorithm:3.leetcode:415.add-strings.md","content","1.algorithm/3.leetcode/415.add-strings.md","md",[1370,1372],{"_path":200,"title":199,"description":1371},"给你一个整数数组 nums ，设计算法来打乱一个没有重复元素的数组。打乱后，数组的所有排列应该是 等可能 的。",{"_path":206,"title":205,"description":1373},"给你一个字符数组 chars ，请使用下述算法压缩：",1713426813967]