[{"data":1,"prerenderedAt":1473},["Reactive",2],{"navigation":3,"/algorithm/leetcode/reverse-linked-list-ii":430,"/algorithm/leetcode/reverse-linked-list-ii-surround":1468},[4,237,265,409,416],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,402],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396,399],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":379,"_path":380},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":382,"_path":383},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":385,"_path":386},"随机数","/frontend-code-assessment/scene/random-number",{"title":388,"_path":389},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":391,"_path":392},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":394,"_path":395},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":397,"_path":398},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":400,"_path":401},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":403,"_path":404,"children":405},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[406],{"title":407,"_path":408},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":410,"_path":411,"children":412},"项目","/pro",[413],{"title":414,"_path":415},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":417,"_path":418,"children":419},"后端语言","/backend-languages",[420],{"title":421,"_path":422,"children":423},"Python","/backend-languages/python",[424,427],{"title":425,"_path":426},"基础","/backend-languages/python/base",{"title":428,"_path":429},"函数","/backend-languages/python/function",{"_path":113,"_dir":431,"_draft":432,"_partial":432,"_locale":433,"title":112,"description":434,"url":435,"body":436,"_type":1463,"_id":1464,"_source":1465,"_file":1466,"_extension":1467},"leetcode",false,"","给你单链表的头指针 head 和两个整数 left 和 right ，其中 left \u003C= right 。请你反转从位置 left 到位置 right 的链表节点，返回 反转后的链表 。","https://leetcode.cn/problems/reverse-linked-list-ii",{"type":437,"children":438,"toc":1459},"root",[439,446,451,460,490,495,518,523,548,553,559,564,569,1453],{"type":440,"tag":441,"props":442,"children":443},"element","p",{},[444],{"type":445,"value":434},"text",{"type":440,"tag":441,"props":447,"children":448},{},[449],{"type":445,"value":450},"示例 1：",{"type":440,"tag":441,"props":452,"children":453},{},[454],{"type":440,"tag":455,"props":456,"children":459},"img",{"alt":457,"src":458},"rev2ex2","/img/code_leetcode_No.92_rev2ex2.png",[],{"type":440,"tag":461,"props":462,"children":465},"pre",{"className":463,"code":464,"language":445,"meta":433,"style":433},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：head = [1,2,3,4,5], left = 2, right = 4\n输出：[1,4,3,2,5]\n",[466],{"type":440,"tag":467,"props":468,"children":469},"code",{"__ignoreMap":433},[470,481],{"type":440,"tag":471,"props":472,"children":475},"span",{"class":473,"line":474},"line",1,[476],{"type":440,"tag":471,"props":477,"children":478},{},[479],{"type":445,"value":480},"输入：head = [1,2,3,4,5], left = 2, right = 4\n",{"type":440,"tag":471,"props":482,"children":484},{"class":473,"line":483},2,[485],{"type":440,"tag":471,"props":486,"children":487},{},[488],{"type":445,"value":489},"输出：[1,4,3,2,5]\n",{"type":440,"tag":441,"props":491,"children":492},{},[493],{"type":445,"value":494},"示例 2：",{"type":440,"tag":461,"props":496,"children":498},{"className":463,"code":497,"language":445,"meta":433,"style":433},"输入：head = [5], left = 1, right = 1\n输出：[5]\n",[499],{"type":440,"tag":467,"props":500,"children":501},{"__ignoreMap":433},[502,510],{"type":440,"tag":471,"props":503,"children":504},{"class":473,"line":474},[505],{"type":440,"tag":471,"props":506,"children":507},{},[508],{"type":445,"value":509},"输入：head = [5], left = 1, right = 1\n",{"type":440,"tag":471,"props":511,"children":512},{"class":473,"line":483},[513],{"type":440,"tag":471,"props":514,"children":515},{},[516],{"type":445,"value":517},"输出：[5]\n",{"type":440,"tag":441,"props":519,"children":520},{},[521],{"type":445,"value":522},"提示：",{"type":440,"tag":524,"props":525,"children":526},"ul",{},[527,533,538,543],{"type":440,"tag":528,"props":529,"children":530},"li",{},[531],{"type":445,"value":532},"链表中节点数目为 n",{"type":440,"tag":528,"props":534,"children":535},{},[536],{"type":445,"value":537},"1 \u003C= n \u003C= 500",{"type":440,"tag":528,"props":539,"children":540},{},[541],{"type":445,"value":542},"-500 \u003C= Node.val \u003C= 500",{"type":440,"tag":528,"props":544,"children":545},{},[546],{"type":445,"value":547},"1 \u003C= left \u003C= right \u003C= n",{"type":440,"tag":441,"props":549,"children":550},{},[551],{"type":445,"value":552},"进阶： 你可以使用一趟扫描完成反转吗？",{"type":440,"tag":554,"props":555,"children":557},"h2",{"id":556},"解题思路",[558],{"type":445,"value":556},{"type":440,"tag":441,"props":560,"children":561},{},[562],{"type":445,"value":563},"性质：在反转结束后，从原链表上看，prev 指向反转这一段的末尾，current 指向反转这一段后续的下一个节点",{"type":440,"tag":554,"props":565,"children":567},{"id":566},"实现",[568],{"type":445,"value":566},{"type":440,"tag":461,"props":570,"children":574},{"className":571,"code":572,"language":573,"meta":433,"style":433},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @param {number} left\n * @param {number} right\n * @return {ListNode}\n */\nvar reverseBetween = function (head, left, right) {\n  const dummy = new ListNode();\n  dummy.next = head;\n\n  // p0 代表反转中间段的上一个节点\n  // left = 1 时，构造哨兵节点\n  // 循环后，到达反转后的上一个节点\n  let p0 = dummy;\n  for (let i = 0; i \u003C left - 1; i++) {\n    p0 = p0.next;\n  }\n\n  let prev = null;\n  let current = p0.next;\n  for (let i = 0; i \u003C right - left + 1; i++) {\n    const next = current.next;\n    current.next = prev;\n    prev = current;\n    current = next;\n  }\n\n  // p0 指向 prev\n  // p0 的 next 指向 current\n  p0.next.next = current;\n  p0.next = prev;\n\n  return dummy.next;\n};\n","js",[575],{"type":440,"tag":467,"props":576,"children":577},{"__ignoreMap":433},[578,587,595,604,613,622,631,640,648,675,697,718,736,744,808,847,880,890,899,908,917,943,1022,1051,1060,1068,1094,1127,1204,1238,1267,1288,1308,1316,1324,1333,1342,1379,1407,1415,1440],{"type":440,"tag":471,"props":579,"children":580},{"class":473,"line":474},[581],{"type":440,"tag":471,"props":582,"children":584},{"style":583},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[585],{"type":445,"value":586},"/**\n",{"type":440,"tag":471,"props":588,"children":589},{"class":473,"line":483},[590],{"type":440,"tag":471,"props":591,"children":592},{"style":583},[593],{"type":445,"value":594}," * Definition for singly-linked list.\n",{"type":440,"tag":471,"props":596,"children":598},{"class":473,"line":597},3,[599],{"type":440,"tag":471,"props":600,"children":601},{"style":583},[602],{"type":445,"value":603}," * function ListNode(val, next) {\n",{"type":440,"tag":471,"props":605,"children":607},{"class":473,"line":606},4,[608],{"type":440,"tag":471,"props":609,"children":610},{"style":583},[611],{"type":445,"value":612}," *     this.val = (val===undefined ? 0 : val)\n",{"type":440,"tag":471,"props":614,"children":616},{"class":473,"line":615},5,[617],{"type":440,"tag":471,"props":618,"children":619},{"style":583},[620],{"type":445,"value":621}," *     this.next = (next===undefined ? null : next)\n",{"type":440,"tag":471,"props":623,"children":625},{"class":473,"line":624},6,[626],{"type":440,"tag":471,"props":627,"children":628},{"style":583},[629],{"type":445,"value":630}," * }\n",{"type":440,"tag":471,"props":632,"children":634},{"class":473,"line":633},7,[635],{"type":440,"tag":471,"props":636,"children":637},{"style":583},[638],{"type":445,"value":639}," */\n",{"type":440,"tag":471,"props":641,"children":643},{"class":473,"line":642},8,[644],{"type":440,"tag":471,"props":645,"children":646},{"style":583},[647],{"type":445,"value":586},{"type":440,"tag":471,"props":649,"children":651},{"class":473,"line":650},9,[652,657,663,669],{"type":440,"tag":471,"props":653,"children":654},{"style":583},[655],{"type":445,"value":656}," * ",{"type":440,"tag":471,"props":658,"children":660},{"style":659},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[661],{"type":445,"value":662},"@param",{"type":440,"tag":471,"props":664,"children":666},{"style":665},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[667],{"type":445,"value":668}," {ListNode}",{"type":440,"tag":471,"props":670,"children":672},{"style":671},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[673],{"type":445,"value":674}," head\n",{"type":440,"tag":471,"props":676,"children":678},{"class":473,"line":677},10,[679,683,687,692],{"type":440,"tag":471,"props":680,"children":681},{"style":583},[682],{"type":445,"value":656},{"type":440,"tag":471,"props":684,"children":685},{"style":659},[686],{"type":445,"value":662},{"type":440,"tag":471,"props":688,"children":689},{"style":665},[690],{"type":445,"value":691}," {number}",{"type":440,"tag":471,"props":693,"children":694},{"style":671},[695],{"type":445,"value":696}," left\n",{"type":440,"tag":471,"props":698,"children":700},{"class":473,"line":699},11,[701,705,709,713],{"type":440,"tag":471,"props":702,"children":703},{"style":583},[704],{"type":445,"value":656},{"type":440,"tag":471,"props":706,"children":707},{"style":659},[708],{"type":445,"value":662},{"type":440,"tag":471,"props":710,"children":711},{"style":665},[712],{"type":445,"value":691},{"type":440,"tag":471,"props":714,"children":715},{"style":671},[716],{"type":445,"value":717}," right\n",{"type":440,"tag":471,"props":719,"children":721},{"class":473,"line":720},12,[722,726,731],{"type":440,"tag":471,"props":723,"children":724},{"style":583},[725],{"type":445,"value":656},{"type":440,"tag":471,"props":727,"children":728},{"style":659},[729],{"type":445,"value":730},"@return",{"type":440,"tag":471,"props":732,"children":733},{"style":665},[734],{"type":445,"value":735}," {ListNode}\n",{"type":440,"tag":471,"props":737,"children":739},{"class":473,"line":738},13,[740],{"type":440,"tag":471,"props":741,"children":742},{"style":583},[743],{"type":445,"value":639},{"type":440,"tag":471,"props":745,"children":747},{"class":473,"line":746},14,[748,754,760,766,771,777,783,789,794,798,803],{"type":440,"tag":471,"props":749,"children":751},{"style":750},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[752],{"type":445,"value":753},"var",{"type":440,"tag":471,"props":755,"children":757},{"style":756},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[758],{"type":445,"value":759}," reverseBetween",{"type":440,"tag":471,"props":761,"children":763},{"style":762},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[764],{"type":445,"value":765}," =",{"type":440,"tag":471,"props":767,"children":768},{"style":750},[769],{"type":445,"value":770}," function",{"type":440,"tag":471,"props":772,"children":774},{"style":773},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[775],{"type":445,"value":776}," (",{"type":440,"tag":471,"props":778,"children":780},{"style":779},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[781],{"type":445,"value":782},"head",{"type":440,"tag":471,"props":784,"children":786},{"style":785},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[787],{"type":445,"value":788},",",{"type":440,"tag":471,"props":790,"children":791},{"style":779},[792],{"type":445,"value":793}," left",{"type":440,"tag":471,"props":795,"children":796},{"style":785},[797],{"type":445,"value":788},{"type":440,"tag":471,"props":799,"children":800},{"style":779},[801],{"type":445,"value":802}," right",{"type":440,"tag":471,"props":804,"children":805},{"style":773},[806],{"type":445,"value":807},") {\n",{"type":440,"tag":471,"props":809,"children":811},{"class":473,"line":810},15,[812,817,823,827,832,837,842],{"type":440,"tag":471,"props":813,"children":814},{"style":750},[815],{"type":445,"value":816},"  const",{"type":440,"tag":471,"props":818,"children":820},{"style":819},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[821],{"type":445,"value":822}," dummy",{"type":440,"tag":471,"props":824,"children":825},{"style":762},[826],{"type":445,"value":765},{"type":440,"tag":471,"props":828,"children":829},{"style":762},[830],{"type":445,"value":831}," new",{"type":440,"tag":471,"props":833,"children":834},{"style":756},[835],{"type":445,"value":836}," ListNode",{"type":440,"tag":471,"props":838,"children":839},{"style":773},[840],{"type":445,"value":841},"()",{"type":440,"tag":471,"props":843,"children":844},{"style":785},[845],{"type":445,"value":846},";\n",{"type":440,"tag":471,"props":848,"children":850},{"class":473,"line":849},16,[851,856,862,867,871,876],{"type":440,"tag":471,"props":852,"children":853},{"style":819},[854],{"type":445,"value":855},"  dummy",{"type":440,"tag":471,"props":857,"children":859},{"style":858},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[860],{"type":445,"value":861},".",{"type":440,"tag":471,"props":863,"children":864},{"style":819},[865],{"type":445,"value":866},"next",{"type":440,"tag":471,"props":868,"children":869},{"style":762},[870],{"type":445,"value":765},{"type":440,"tag":471,"props":872,"children":873},{"style":819},[874],{"type":445,"value":875}," head",{"type":440,"tag":471,"props":877,"children":878},{"style":785},[879],{"type":445,"value":846},{"type":440,"tag":471,"props":881,"children":883},{"class":473,"line":882},17,[884],{"type":440,"tag":471,"props":885,"children":887},{"emptyLinePlaceholder":886},true,[888],{"type":445,"value":889},"\n",{"type":440,"tag":471,"props":891,"children":893},{"class":473,"line":892},18,[894],{"type":440,"tag":471,"props":895,"children":896},{"style":583},[897],{"type":445,"value":898},"  // p0 代表反转中间段的上一个节点\n",{"type":440,"tag":471,"props":900,"children":902},{"class":473,"line":901},19,[903],{"type":440,"tag":471,"props":904,"children":905},{"style":583},[906],{"type":445,"value":907},"  // left = 1 时，构造哨兵节点\n",{"type":440,"tag":471,"props":909,"children":911},{"class":473,"line":910},20,[912],{"type":440,"tag":471,"props":913,"children":914},{"style":583},[915],{"type":445,"value":916},"  // 循环后，到达反转后的上一个节点\n",{"type":440,"tag":471,"props":918,"children":920},{"class":473,"line":919},21,[921,926,931,935,939],{"type":440,"tag":471,"props":922,"children":923},{"style":750},[924],{"type":445,"value":925},"  let",{"type":440,"tag":471,"props":927,"children":928},{"style":819},[929],{"type":445,"value":930}," p0",{"type":440,"tag":471,"props":932,"children":933},{"style":762},[934],{"type":445,"value":765},{"type":440,"tag":471,"props":936,"children":937},{"style":819},[938],{"type":445,"value":822},{"type":440,"tag":471,"props":940,"children":941},{"style":785},[942],{"type":445,"value":846},{"type":440,"tag":471,"props":944,"children":946},{"class":473,"line":945},22,[947,953,957,962,967,971,977,982,986,991,995,1000,1005,1009,1013,1018],{"type":440,"tag":471,"props":948,"children":950},{"style":949},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[951],{"type":445,"value":952},"  for",{"type":440,"tag":471,"props":954,"children":955},{"style":773},[956],{"type":445,"value":776},{"type":440,"tag":471,"props":958,"children":959},{"style":750},[960],{"type":445,"value":961},"let",{"type":440,"tag":471,"props":963,"children":964},{"style":819},[965],{"type":445,"value":966}," i",{"type":440,"tag":471,"props":968,"children":969},{"style":762},[970],{"type":445,"value":765},{"type":440,"tag":471,"props":972,"children":974},{"style":973},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[975],{"type":445,"value":976}," 0",{"type":440,"tag":471,"props":978,"children":979},{"style":785},[980],{"type":445,"value":981},";",{"type":440,"tag":471,"props":983,"children":984},{"style":819},[985],{"type":445,"value":966},{"type":440,"tag":471,"props":987,"children":988},{"style":762},[989],{"type":445,"value":990}," \u003C",{"type":440,"tag":471,"props":992,"children":993},{"style":819},[994],{"type":445,"value":793},{"type":440,"tag":471,"props":996,"children":997},{"style":762},[998],{"type":445,"value":999}," -",{"type":440,"tag":471,"props":1001,"children":1002},{"style":973},[1003],{"type":445,"value":1004}," 1",{"type":440,"tag":471,"props":1006,"children":1007},{"style":785},[1008],{"type":445,"value":981},{"type":440,"tag":471,"props":1010,"children":1011},{"style":819},[1012],{"type":445,"value":966},{"type":440,"tag":471,"props":1014,"children":1015},{"style":762},[1016],{"type":445,"value":1017},"++",{"type":440,"tag":471,"props":1019,"children":1020},{"style":773},[1021],{"type":445,"value":807},{"type":440,"tag":471,"props":1023,"children":1025},{"class":473,"line":1024},23,[1026,1031,1035,1039,1043,1047],{"type":440,"tag":471,"props":1027,"children":1028},{"style":819},[1029],{"type":445,"value":1030},"    p0",{"type":440,"tag":471,"props":1032,"children":1033},{"style":762},[1034],{"type":445,"value":765},{"type":440,"tag":471,"props":1036,"children":1037},{"style":819},[1038],{"type":445,"value":930},{"type":440,"tag":471,"props":1040,"children":1041},{"style":858},[1042],{"type":445,"value":861},{"type":440,"tag":471,"props":1044,"children":1045},{"style":819},[1046],{"type":445,"value":866},{"type":440,"tag":471,"props":1048,"children":1049},{"style":785},[1050],{"type":445,"value":846},{"type":440,"tag":471,"props":1052,"children":1054},{"class":473,"line":1053},24,[1055],{"type":440,"tag":471,"props":1056,"children":1057},{"style":773},[1058],{"type":445,"value":1059},"  }\n",{"type":440,"tag":471,"props":1061,"children":1063},{"class":473,"line":1062},25,[1064],{"type":440,"tag":471,"props":1065,"children":1066},{"emptyLinePlaceholder":886},[1067],{"type":445,"value":889},{"type":440,"tag":471,"props":1069,"children":1071},{"class":473,"line":1070},26,[1072,1076,1081,1085,1090],{"type":440,"tag":471,"props":1073,"children":1074},{"style":750},[1075],{"type":445,"value":925},{"type":440,"tag":471,"props":1077,"children":1078},{"style":819},[1079],{"type":445,"value":1080}," prev",{"type":440,"tag":471,"props":1082,"children":1083},{"style":762},[1084],{"type":445,"value":765},{"type":440,"tag":471,"props":1086,"children":1087},{"style":973},[1088],{"type":445,"value":1089}," null",{"type":440,"tag":471,"props":1091,"children":1092},{"style":785},[1093],{"type":445,"value":846},{"type":440,"tag":471,"props":1095,"children":1097},{"class":473,"line":1096},27,[1098,1102,1107,1111,1115,1119,1123],{"type":440,"tag":471,"props":1099,"children":1100},{"style":750},[1101],{"type":445,"value":925},{"type":440,"tag":471,"props":1103,"children":1104},{"style":819},[1105],{"type":445,"value":1106}," current",{"type":440,"tag":471,"props":1108,"children":1109},{"style":762},[1110],{"type":445,"value":765},{"type":440,"tag":471,"props":1112,"children":1113},{"style":819},[1114],{"type":445,"value":930},{"type":440,"tag":471,"props":1116,"children":1117},{"style":858},[1118],{"type":445,"value":861},{"type":440,"tag":471,"props":1120,"children":1121},{"style":819},[1122],{"type":445,"value":866},{"type":440,"tag":471,"props":1124,"children":1125},{"style":785},[1126],{"type":445,"value":846},{"type":440,"tag":471,"props":1128,"children":1130},{"class":473,"line":1129},28,[1131,1135,1139,1143,1147,1151,1155,1159,1163,1167,1171,1175,1179,1184,1188,1192,1196,1200],{"type":440,"tag":471,"props":1132,"children":1133},{"style":949},[1134],{"type":445,"value":952},{"type":440,"tag":471,"props":1136,"children":1137},{"style":773},[1138],{"type":445,"value":776},{"type":440,"tag":471,"props":1140,"children":1141},{"style":750},[1142],{"type":445,"value":961},{"type":440,"tag":471,"props":1144,"children":1145},{"style":819},[1146],{"type":445,"value":966},{"type":440,"tag":471,"props":1148,"children":1149},{"style":762},[1150],{"type":445,"value":765},{"type":440,"tag":471,"props":1152,"children":1153},{"style":973},[1154],{"type":445,"value":976},{"type":440,"tag":471,"props":1156,"children":1157},{"style":785},[1158],{"type":445,"value":981},{"type":440,"tag":471,"props":1160,"children":1161},{"style":819},[1162],{"type":445,"value":966},{"type":440,"tag":471,"props":1164,"children":1165},{"style":762},[1166],{"type":445,"value":990},{"type":440,"tag":471,"props":1168,"children":1169},{"style":819},[1170],{"type":445,"value":802},{"type":440,"tag":471,"props":1172,"children":1173},{"style":762},[1174],{"type":445,"value":999},{"type":440,"tag":471,"props":1176,"children":1177},{"style":819},[1178],{"type":445,"value":793},{"type":440,"tag":471,"props":1180,"children":1181},{"style":762},[1182],{"type":445,"value":1183}," +",{"type":440,"tag":471,"props":1185,"children":1186},{"style":973},[1187],{"type":445,"value":1004},{"type":440,"tag":471,"props":1189,"children":1190},{"style":785},[1191],{"type":445,"value":981},{"type":440,"tag":471,"props":1193,"children":1194},{"style":819},[1195],{"type":445,"value":966},{"type":440,"tag":471,"props":1197,"children":1198},{"style":762},[1199],{"type":445,"value":1017},{"type":440,"tag":471,"props":1201,"children":1202},{"style":773},[1203],{"type":445,"value":807},{"type":440,"tag":471,"props":1205,"children":1207},{"class":473,"line":1206},29,[1208,1213,1218,1222,1226,1230,1234],{"type":440,"tag":471,"props":1209,"children":1210},{"style":750},[1211],{"type":445,"value":1212},"    const",{"type":440,"tag":471,"props":1214,"children":1215},{"style":819},[1216],{"type":445,"value":1217}," next",{"type":440,"tag":471,"props":1219,"children":1220},{"style":762},[1221],{"type":445,"value":765},{"type":440,"tag":471,"props":1223,"children":1224},{"style":819},[1225],{"type":445,"value":1106},{"type":440,"tag":471,"props":1227,"children":1228},{"style":858},[1229],{"type":445,"value":861},{"type":440,"tag":471,"props":1231,"children":1232},{"style":819},[1233],{"type":445,"value":866},{"type":440,"tag":471,"props":1235,"children":1236},{"style":785},[1237],{"type":445,"value":846},{"type":440,"tag":471,"props":1239,"children":1241},{"class":473,"line":1240},30,[1242,1247,1251,1255,1259,1263],{"type":440,"tag":471,"props":1243,"children":1244},{"style":819},[1245],{"type":445,"value":1246},"    current",{"type":440,"tag":471,"props":1248,"children":1249},{"style":858},[1250],{"type":445,"value":861},{"type":440,"tag":471,"props":1252,"children":1253},{"style":819},[1254],{"type":445,"value":866},{"type":440,"tag":471,"props":1256,"children":1257},{"style":762},[1258],{"type":445,"value":765},{"type":440,"tag":471,"props":1260,"children":1261},{"style":819},[1262],{"type":445,"value":1080},{"type":440,"tag":471,"props":1264,"children":1265},{"style":785},[1266],{"type":445,"value":846},{"type":440,"tag":471,"props":1268,"children":1270},{"class":473,"line":1269},31,[1271,1276,1280,1284],{"type":440,"tag":471,"props":1272,"children":1273},{"style":819},[1274],{"type":445,"value":1275},"    prev",{"type":440,"tag":471,"props":1277,"children":1278},{"style":762},[1279],{"type":445,"value":765},{"type":440,"tag":471,"props":1281,"children":1282},{"style":819},[1283],{"type":445,"value":1106},{"type":440,"tag":471,"props":1285,"children":1286},{"style":785},[1287],{"type":445,"value":846},{"type":440,"tag":471,"props":1289,"children":1291},{"class":473,"line":1290},32,[1292,1296,1300,1304],{"type":440,"tag":471,"props":1293,"children":1294},{"style":819},[1295],{"type":445,"value":1246},{"type":440,"tag":471,"props":1297,"children":1298},{"style":762},[1299],{"type":445,"value":765},{"type":440,"tag":471,"props":1301,"children":1302},{"style":819},[1303],{"type":445,"value":1217},{"type":440,"tag":471,"props":1305,"children":1306},{"style":785},[1307],{"type":445,"value":846},{"type":440,"tag":471,"props":1309,"children":1311},{"class":473,"line":1310},33,[1312],{"type":440,"tag":471,"props":1313,"children":1314},{"style":773},[1315],{"type":445,"value":1059},{"type":440,"tag":471,"props":1317,"children":1319},{"class":473,"line":1318},34,[1320],{"type":440,"tag":471,"props":1321,"children":1322},{"emptyLinePlaceholder":886},[1323],{"type":445,"value":889},{"type":440,"tag":471,"props":1325,"children":1327},{"class":473,"line":1326},35,[1328],{"type":440,"tag":471,"props":1329,"children":1330},{"style":583},[1331],{"type":445,"value":1332},"  // p0 指向 prev\n",{"type":440,"tag":471,"props":1334,"children":1336},{"class":473,"line":1335},36,[1337],{"type":440,"tag":471,"props":1338,"children":1339},{"style":583},[1340],{"type":445,"value":1341},"  // p0 的 next 指向 current\n",{"type":440,"tag":471,"props":1343,"children":1345},{"class":473,"line":1344},37,[1346,1351,1355,1359,1363,1367,1371,1375],{"type":440,"tag":471,"props":1347,"children":1348},{"style":819},[1349],{"type":445,"value":1350},"  p0",{"type":440,"tag":471,"props":1352,"children":1353},{"style":858},[1354],{"type":445,"value":861},{"type":440,"tag":471,"props":1356,"children":1357},{"style":819},[1358],{"type":445,"value":866},{"type":440,"tag":471,"props":1360,"children":1361},{"style":858},[1362],{"type":445,"value":861},{"type":440,"tag":471,"props":1364,"children":1365},{"style":819},[1366],{"type":445,"value":866},{"type":440,"tag":471,"props":1368,"children":1369},{"style":762},[1370],{"type":445,"value":765},{"type":440,"tag":471,"props":1372,"children":1373},{"style":819},[1374],{"type":445,"value":1106},{"type":440,"tag":471,"props":1376,"children":1377},{"style":785},[1378],{"type":445,"value":846},{"type":440,"tag":471,"props":1380,"children":1382},{"class":473,"line":1381},38,[1383,1387,1391,1395,1399,1403],{"type":440,"tag":471,"props":1384,"children":1385},{"style":819},[1386],{"type":445,"value":1350},{"type":440,"tag":471,"props":1388,"children":1389},{"style":858},[1390],{"type":445,"value":861},{"type":440,"tag":471,"props":1392,"children":1393},{"style":819},[1394],{"type":445,"value":866},{"type":440,"tag":471,"props":1396,"children":1397},{"style":762},[1398],{"type":445,"value":765},{"type":440,"tag":471,"props":1400,"children":1401},{"style":819},[1402],{"type":445,"value":1080},{"type":440,"tag":471,"props":1404,"children":1405},{"style":785},[1406],{"type":445,"value":846},{"type":440,"tag":471,"props":1408,"children":1410},{"class":473,"line":1409},39,[1411],{"type":440,"tag":471,"props":1412,"children":1413},{"emptyLinePlaceholder":886},[1414],{"type":445,"value":889},{"type":440,"tag":471,"props":1416,"children":1418},{"class":473,"line":1417},40,[1419,1424,1428,1432,1436],{"type":440,"tag":471,"props":1420,"children":1421},{"style":949},[1422],{"type":445,"value":1423},"  return",{"type":440,"tag":471,"props":1425,"children":1426},{"style":819},[1427],{"type":445,"value":822},{"type":440,"tag":471,"props":1429,"children":1430},{"style":858},[1431],{"type":445,"value":861},{"type":440,"tag":471,"props":1433,"children":1434},{"style":819},[1435],{"type":445,"value":866},{"type":440,"tag":471,"props":1437,"children":1438},{"style":785},[1439],{"type":445,"value":846},{"type":440,"tag":471,"props":1441,"children":1443},{"class":473,"line":1442},41,[1444,1449],{"type":440,"tag":471,"props":1445,"children":1446},{"style":773},[1447],{"type":445,"value":1448},"}",{"type":440,"tag":471,"props":1450,"children":1451},{"style":785},[1452],{"type":445,"value":846},{"type":440,"tag":1454,"props":1455,"children":1456},"style",{},[1457],{"type":445,"value":1458},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":433,"searchDepth":615,"depth":615,"links":1460},[1461,1462],{"id":556,"depth":483,"text":556},{"id":566,"depth":483,"text":566},"markdown","content:1.algorithm:3.leetcode:92.reverse-linked-list-ii.md","content","1.algorithm/3.leetcode/92.reverse-linked-list-ii.md","md",[1469,1471],{"_path":110,"title":109,"description":1470},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",{"_path":116,"title":115,"description":1472},"给定一个二叉树的根节点 root ，返回 它的 中序 遍历 。",1713426810496]