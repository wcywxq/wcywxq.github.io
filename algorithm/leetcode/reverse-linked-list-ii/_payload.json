[{"data":1,"prerenderedAt":1470},["Reactive",2],{"navigation":3,"/algorithm/leetcode/reverse-linked-list-ii":427,"/algorithm/leetcode/reverse-linked-list-ii-surround":1465},[4,237,265,406,413],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,399],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":382,"_path":383},"随机数","/frontend-code-assessment/scene/random-number",{"title":385,"_path":386},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":388,"_path":389},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":391,"_path":392},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":394,"_path":395},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":397,"_path":398},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":400,"_path":401,"children":402},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[403],{"title":404,"_path":405},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":407,"_path":408,"children":409},"项目","/pro",[410],{"title":411,"_path":412},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":414,"_path":415,"children":416},"后端语言","/backend-languages",[417],{"title":418,"_path":419,"children":420},"Python","/backend-languages/python",[421,424],{"title":422,"_path":423},"基础","/backend-languages/python/base",{"title":425,"_path":426},"函数","/backend-languages/python/function",{"_path":113,"_dir":428,"_draft":429,"_partial":429,"_locale":430,"title":112,"description":431,"url":432,"body":433,"_type":1460,"_id":1461,"_source":1462,"_file":1463,"_extension":1464},"leetcode",false,"","给你单链表的头指针 head 和两个整数 left 和 right ，其中 left \u003C= right 。请你反转从位置 left 到位置 right 的链表节点，返回 反转后的链表 。","https://leetcode.cn/problems/reverse-linked-list-ii",{"type":434,"children":435,"toc":1456},"root",[436,443,448,457,487,492,515,520,545,550,556,561,566,1450],{"type":437,"tag":438,"props":439,"children":440},"element","p",{},[441],{"type":442,"value":431},"text",{"type":437,"tag":438,"props":444,"children":445},{},[446],{"type":442,"value":447},"示例 1：",{"type":437,"tag":438,"props":449,"children":450},{},[451],{"type":437,"tag":452,"props":453,"children":456},"img",{"alt":454,"src":455},"rev2ex2","/img/code_leetcode_No.92_rev2ex2.png",[],{"type":437,"tag":458,"props":459,"children":462},"pre",{"className":460,"code":461,"language":442,"meta":430,"style":430},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：head = [1,2,3,4,5], left = 2, right = 4\n输出：[1,4,3,2,5]\n",[463],{"type":437,"tag":464,"props":465,"children":466},"code",{"__ignoreMap":430},[467,478],{"type":437,"tag":468,"props":469,"children":472},"span",{"class":470,"line":471},"line",1,[473],{"type":437,"tag":468,"props":474,"children":475},{},[476],{"type":442,"value":477},"输入：head = [1,2,3,4,5], left = 2, right = 4\n",{"type":437,"tag":468,"props":479,"children":481},{"class":470,"line":480},2,[482],{"type":437,"tag":468,"props":483,"children":484},{},[485],{"type":442,"value":486},"输出：[1,4,3,2,5]\n",{"type":437,"tag":438,"props":488,"children":489},{},[490],{"type":442,"value":491},"示例 2：",{"type":437,"tag":458,"props":493,"children":495},{"className":460,"code":494,"language":442,"meta":430,"style":430},"输入：head = [5], left = 1, right = 1\n输出：[5]\n",[496],{"type":437,"tag":464,"props":497,"children":498},{"__ignoreMap":430},[499,507],{"type":437,"tag":468,"props":500,"children":501},{"class":470,"line":471},[502],{"type":437,"tag":468,"props":503,"children":504},{},[505],{"type":442,"value":506},"输入：head = [5], left = 1, right = 1\n",{"type":437,"tag":468,"props":508,"children":509},{"class":470,"line":480},[510],{"type":437,"tag":468,"props":511,"children":512},{},[513],{"type":442,"value":514},"输出：[5]\n",{"type":437,"tag":438,"props":516,"children":517},{},[518],{"type":442,"value":519},"提示：",{"type":437,"tag":521,"props":522,"children":523},"ul",{},[524,530,535,540],{"type":437,"tag":525,"props":526,"children":527},"li",{},[528],{"type":442,"value":529},"链表中节点数目为 n",{"type":437,"tag":525,"props":531,"children":532},{},[533],{"type":442,"value":534},"1 \u003C= n \u003C= 500",{"type":437,"tag":525,"props":536,"children":537},{},[538],{"type":442,"value":539},"-500 \u003C= Node.val \u003C= 500",{"type":437,"tag":525,"props":541,"children":542},{},[543],{"type":442,"value":544},"1 \u003C= left \u003C= right \u003C= n",{"type":437,"tag":438,"props":546,"children":547},{},[548],{"type":442,"value":549},"进阶： 你可以使用一趟扫描完成反转吗？",{"type":437,"tag":551,"props":552,"children":554},"h2",{"id":553},"解题思路",[555],{"type":442,"value":553},{"type":437,"tag":438,"props":557,"children":558},{},[559],{"type":442,"value":560},"性质：在反转结束后，从原链表上看，prev 指向反转这一段的末尾，current 指向反转这一段后续的下一个节点",{"type":437,"tag":551,"props":562,"children":564},{"id":563},"实现",[565],{"type":442,"value":563},{"type":437,"tag":458,"props":567,"children":571},{"className":568,"code":569,"language":570,"meta":430,"style":430},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @param {number} left\n * @param {number} right\n * @return {ListNode}\n */\nvar reverseBetween = function (head, left, right) {\n  const dummy = new ListNode();\n  dummy.next = head;\n\n  // p0 代表反转中间段的上一个节点\n  // left = 1 时，构造哨兵节点\n  // 循环后，到达反转后的上一个节点\n  let p0 = dummy;\n  for (let i = 0; i \u003C left - 1; i++) {\n    p0 = p0.next;\n  }\n\n  let prev = null;\n  let current = p0.next;\n  for (let i = 0; i \u003C right - left + 1; i++) {\n    const next = current.next;\n    current.next = prev;\n    prev = current;\n    current = next;\n  }\n\n  // p0 指向 prev\n  // p0 的 next 指向 current\n  p0.next.next = current;\n  p0.next = prev;\n\n  return dummy.next;\n};\n","js",[572],{"type":437,"tag":464,"props":573,"children":574},{"__ignoreMap":430},[575,584,592,601,610,619,628,637,645,672,694,715,733,741,805,844,877,887,896,905,914,940,1019,1048,1057,1065,1091,1124,1201,1235,1264,1285,1305,1313,1321,1330,1339,1376,1404,1412,1437],{"type":437,"tag":468,"props":576,"children":577},{"class":470,"line":471},[578],{"type":437,"tag":468,"props":579,"children":581},{"style":580},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[582],{"type":442,"value":583},"/**\n",{"type":437,"tag":468,"props":585,"children":586},{"class":470,"line":480},[587],{"type":437,"tag":468,"props":588,"children":589},{"style":580},[590],{"type":442,"value":591}," * Definition for singly-linked list.\n",{"type":437,"tag":468,"props":593,"children":595},{"class":470,"line":594},3,[596],{"type":437,"tag":468,"props":597,"children":598},{"style":580},[599],{"type":442,"value":600}," * function ListNode(val, next) {\n",{"type":437,"tag":468,"props":602,"children":604},{"class":470,"line":603},4,[605],{"type":437,"tag":468,"props":606,"children":607},{"style":580},[608],{"type":442,"value":609}," *     this.val = (val===undefined ? 0 : val)\n",{"type":437,"tag":468,"props":611,"children":613},{"class":470,"line":612},5,[614],{"type":437,"tag":468,"props":615,"children":616},{"style":580},[617],{"type":442,"value":618}," *     this.next = (next===undefined ? null : next)\n",{"type":437,"tag":468,"props":620,"children":622},{"class":470,"line":621},6,[623],{"type":437,"tag":468,"props":624,"children":625},{"style":580},[626],{"type":442,"value":627}," * }\n",{"type":437,"tag":468,"props":629,"children":631},{"class":470,"line":630},7,[632],{"type":437,"tag":468,"props":633,"children":634},{"style":580},[635],{"type":442,"value":636}," */\n",{"type":437,"tag":468,"props":638,"children":640},{"class":470,"line":639},8,[641],{"type":437,"tag":468,"props":642,"children":643},{"style":580},[644],{"type":442,"value":583},{"type":437,"tag":468,"props":646,"children":648},{"class":470,"line":647},9,[649,654,660,666],{"type":437,"tag":468,"props":650,"children":651},{"style":580},[652],{"type":442,"value":653}," * ",{"type":437,"tag":468,"props":655,"children":657},{"style":656},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[658],{"type":442,"value":659},"@param",{"type":437,"tag":468,"props":661,"children":663},{"style":662},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[664],{"type":442,"value":665}," {ListNode}",{"type":437,"tag":468,"props":667,"children":669},{"style":668},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[670],{"type":442,"value":671}," head\n",{"type":437,"tag":468,"props":673,"children":675},{"class":470,"line":674},10,[676,680,684,689],{"type":437,"tag":468,"props":677,"children":678},{"style":580},[679],{"type":442,"value":653},{"type":437,"tag":468,"props":681,"children":682},{"style":656},[683],{"type":442,"value":659},{"type":437,"tag":468,"props":685,"children":686},{"style":662},[687],{"type":442,"value":688}," {number}",{"type":437,"tag":468,"props":690,"children":691},{"style":668},[692],{"type":442,"value":693}," left\n",{"type":437,"tag":468,"props":695,"children":697},{"class":470,"line":696},11,[698,702,706,710],{"type":437,"tag":468,"props":699,"children":700},{"style":580},[701],{"type":442,"value":653},{"type":437,"tag":468,"props":703,"children":704},{"style":656},[705],{"type":442,"value":659},{"type":437,"tag":468,"props":707,"children":708},{"style":662},[709],{"type":442,"value":688},{"type":437,"tag":468,"props":711,"children":712},{"style":668},[713],{"type":442,"value":714}," right\n",{"type":437,"tag":468,"props":716,"children":718},{"class":470,"line":717},12,[719,723,728],{"type":437,"tag":468,"props":720,"children":721},{"style":580},[722],{"type":442,"value":653},{"type":437,"tag":468,"props":724,"children":725},{"style":656},[726],{"type":442,"value":727},"@return",{"type":437,"tag":468,"props":729,"children":730},{"style":662},[731],{"type":442,"value":732}," {ListNode}\n",{"type":437,"tag":468,"props":734,"children":736},{"class":470,"line":735},13,[737],{"type":437,"tag":468,"props":738,"children":739},{"style":580},[740],{"type":442,"value":636},{"type":437,"tag":468,"props":742,"children":744},{"class":470,"line":743},14,[745,751,757,763,768,774,780,786,791,795,800],{"type":437,"tag":468,"props":746,"children":748},{"style":747},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[749],{"type":442,"value":750},"var",{"type":437,"tag":468,"props":752,"children":754},{"style":753},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[755],{"type":442,"value":756}," reverseBetween",{"type":437,"tag":468,"props":758,"children":760},{"style":759},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[761],{"type":442,"value":762}," =",{"type":437,"tag":468,"props":764,"children":765},{"style":747},[766],{"type":442,"value":767}," function",{"type":437,"tag":468,"props":769,"children":771},{"style":770},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[772],{"type":442,"value":773}," (",{"type":437,"tag":468,"props":775,"children":777},{"style":776},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[778],{"type":442,"value":779},"head",{"type":437,"tag":468,"props":781,"children":783},{"style":782},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[784],{"type":442,"value":785},",",{"type":437,"tag":468,"props":787,"children":788},{"style":776},[789],{"type":442,"value":790}," left",{"type":437,"tag":468,"props":792,"children":793},{"style":782},[794],{"type":442,"value":785},{"type":437,"tag":468,"props":796,"children":797},{"style":776},[798],{"type":442,"value":799}," right",{"type":437,"tag":468,"props":801,"children":802},{"style":770},[803],{"type":442,"value":804},") {\n",{"type":437,"tag":468,"props":806,"children":808},{"class":470,"line":807},15,[809,814,820,824,829,834,839],{"type":437,"tag":468,"props":810,"children":811},{"style":747},[812],{"type":442,"value":813},"  const",{"type":437,"tag":468,"props":815,"children":817},{"style":816},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[818],{"type":442,"value":819}," dummy",{"type":437,"tag":468,"props":821,"children":822},{"style":759},[823],{"type":442,"value":762},{"type":437,"tag":468,"props":825,"children":826},{"style":759},[827],{"type":442,"value":828}," new",{"type":437,"tag":468,"props":830,"children":831},{"style":753},[832],{"type":442,"value":833}," ListNode",{"type":437,"tag":468,"props":835,"children":836},{"style":770},[837],{"type":442,"value":838},"()",{"type":437,"tag":468,"props":840,"children":841},{"style":782},[842],{"type":442,"value":843},";\n",{"type":437,"tag":468,"props":845,"children":847},{"class":470,"line":846},16,[848,853,859,864,868,873],{"type":437,"tag":468,"props":849,"children":850},{"style":816},[851],{"type":442,"value":852},"  dummy",{"type":437,"tag":468,"props":854,"children":856},{"style":855},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[857],{"type":442,"value":858},".",{"type":437,"tag":468,"props":860,"children":861},{"style":816},[862],{"type":442,"value":863},"next",{"type":437,"tag":468,"props":865,"children":866},{"style":759},[867],{"type":442,"value":762},{"type":437,"tag":468,"props":869,"children":870},{"style":816},[871],{"type":442,"value":872}," head",{"type":437,"tag":468,"props":874,"children":875},{"style":782},[876],{"type":442,"value":843},{"type":437,"tag":468,"props":878,"children":880},{"class":470,"line":879},17,[881],{"type":437,"tag":468,"props":882,"children":884},{"emptyLinePlaceholder":883},true,[885],{"type":442,"value":886},"\n",{"type":437,"tag":468,"props":888,"children":890},{"class":470,"line":889},18,[891],{"type":437,"tag":468,"props":892,"children":893},{"style":580},[894],{"type":442,"value":895},"  // p0 代表反转中间段的上一个节点\n",{"type":437,"tag":468,"props":897,"children":899},{"class":470,"line":898},19,[900],{"type":437,"tag":468,"props":901,"children":902},{"style":580},[903],{"type":442,"value":904},"  // left = 1 时，构造哨兵节点\n",{"type":437,"tag":468,"props":906,"children":908},{"class":470,"line":907},20,[909],{"type":437,"tag":468,"props":910,"children":911},{"style":580},[912],{"type":442,"value":913},"  // 循环后，到达反转后的上一个节点\n",{"type":437,"tag":468,"props":915,"children":917},{"class":470,"line":916},21,[918,923,928,932,936],{"type":437,"tag":468,"props":919,"children":920},{"style":747},[921],{"type":442,"value":922},"  let",{"type":437,"tag":468,"props":924,"children":925},{"style":816},[926],{"type":442,"value":927}," p0",{"type":437,"tag":468,"props":929,"children":930},{"style":759},[931],{"type":442,"value":762},{"type":437,"tag":468,"props":933,"children":934},{"style":816},[935],{"type":442,"value":819},{"type":437,"tag":468,"props":937,"children":938},{"style":782},[939],{"type":442,"value":843},{"type":437,"tag":468,"props":941,"children":943},{"class":470,"line":942},22,[944,950,954,959,964,968,974,979,983,988,992,997,1002,1006,1010,1015],{"type":437,"tag":468,"props":945,"children":947},{"style":946},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[948],{"type":442,"value":949},"  for",{"type":437,"tag":468,"props":951,"children":952},{"style":770},[953],{"type":442,"value":773},{"type":437,"tag":468,"props":955,"children":956},{"style":747},[957],{"type":442,"value":958},"let",{"type":437,"tag":468,"props":960,"children":961},{"style":816},[962],{"type":442,"value":963}," i",{"type":437,"tag":468,"props":965,"children":966},{"style":759},[967],{"type":442,"value":762},{"type":437,"tag":468,"props":969,"children":971},{"style":970},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[972],{"type":442,"value":973}," 0",{"type":437,"tag":468,"props":975,"children":976},{"style":782},[977],{"type":442,"value":978},";",{"type":437,"tag":468,"props":980,"children":981},{"style":816},[982],{"type":442,"value":963},{"type":437,"tag":468,"props":984,"children":985},{"style":759},[986],{"type":442,"value":987}," \u003C",{"type":437,"tag":468,"props":989,"children":990},{"style":816},[991],{"type":442,"value":790},{"type":437,"tag":468,"props":993,"children":994},{"style":759},[995],{"type":442,"value":996}," -",{"type":437,"tag":468,"props":998,"children":999},{"style":970},[1000],{"type":442,"value":1001}," 1",{"type":437,"tag":468,"props":1003,"children":1004},{"style":782},[1005],{"type":442,"value":978},{"type":437,"tag":468,"props":1007,"children":1008},{"style":816},[1009],{"type":442,"value":963},{"type":437,"tag":468,"props":1011,"children":1012},{"style":759},[1013],{"type":442,"value":1014},"++",{"type":437,"tag":468,"props":1016,"children":1017},{"style":770},[1018],{"type":442,"value":804},{"type":437,"tag":468,"props":1020,"children":1022},{"class":470,"line":1021},23,[1023,1028,1032,1036,1040,1044],{"type":437,"tag":468,"props":1024,"children":1025},{"style":816},[1026],{"type":442,"value":1027},"    p0",{"type":437,"tag":468,"props":1029,"children":1030},{"style":759},[1031],{"type":442,"value":762},{"type":437,"tag":468,"props":1033,"children":1034},{"style":816},[1035],{"type":442,"value":927},{"type":437,"tag":468,"props":1037,"children":1038},{"style":855},[1039],{"type":442,"value":858},{"type":437,"tag":468,"props":1041,"children":1042},{"style":816},[1043],{"type":442,"value":863},{"type":437,"tag":468,"props":1045,"children":1046},{"style":782},[1047],{"type":442,"value":843},{"type":437,"tag":468,"props":1049,"children":1051},{"class":470,"line":1050},24,[1052],{"type":437,"tag":468,"props":1053,"children":1054},{"style":770},[1055],{"type":442,"value":1056},"  }\n",{"type":437,"tag":468,"props":1058,"children":1060},{"class":470,"line":1059},25,[1061],{"type":437,"tag":468,"props":1062,"children":1063},{"emptyLinePlaceholder":883},[1064],{"type":442,"value":886},{"type":437,"tag":468,"props":1066,"children":1068},{"class":470,"line":1067},26,[1069,1073,1078,1082,1087],{"type":437,"tag":468,"props":1070,"children":1071},{"style":747},[1072],{"type":442,"value":922},{"type":437,"tag":468,"props":1074,"children":1075},{"style":816},[1076],{"type":442,"value":1077}," prev",{"type":437,"tag":468,"props":1079,"children":1080},{"style":759},[1081],{"type":442,"value":762},{"type":437,"tag":468,"props":1083,"children":1084},{"style":970},[1085],{"type":442,"value":1086}," null",{"type":437,"tag":468,"props":1088,"children":1089},{"style":782},[1090],{"type":442,"value":843},{"type":437,"tag":468,"props":1092,"children":1094},{"class":470,"line":1093},27,[1095,1099,1104,1108,1112,1116,1120],{"type":437,"tag":468,"props":1096,"children":1097},{"style":747},[1098],{"type":442,"value":922},{"type":437,"tag":468,"props":1100,"children":1101},{"style":816},[1102],{"type":442,"value":1103}," current",{"type":437,"tag":468,"props":1105,"children":1106},{"style":759},[1107],{"type":442,"value":762},{"type":437,"tag":468,"props":1109,"children":1110},{"style":816},[1111],{"type":442,"value":927},{"type":437,"tag":468,"props":1113,"children":1114},{"style":855},[1115],{"type":442,"value":858},{"type":437,"tag":468,"props":1117,"children":1118},{"style":816},[1119],{"type":442,"value":863},{"type":437,"tag":468,"props":1121,"children":1122},{"style":782},[1123],{"type":442,"value":843},{"type":437,"tag":468,"props":1125,"children":1127},{"class":470,"line":1126},28,[1128,1132,1136,1140,1144,1148,1152,1156,1160,1164,1168,1172,1176,1181,1185,1189,1193,1197],{"type":437,"tag":468,"props":1129,"children":1130},{"style":946},[1131],{"type":442,"value":949},{"type":437,"tag":468,"props":1133,"children":1134},{"style":770},[1135],{"type":442,"value":773},{"type":437,"tag":468,"props":1137,"children":1138},{"style":747},[1139],{"type":442,"value":958},{"type":437,"tag":468,"props":1141,"children":1142},{"style":816},[1143],{"type":442,"value":963},{"type":437,"tag":468,"props":1145,"children":1146},{"style":759},[1147],{"type":442,"value":762},{"type":437,"tag":468,"props":1149,"children":1150},{"style":970},[1151],{"type":442,"value":973},{"type":437,"tag":468,"props":1153,"children":1154},{"style":782},[1155],{"type":442,"value":978},{"type":437,"tag":468,"props":1157,"children":1158},{"style":816},[1159],{"type":442,"value":963},{"type":437,"tag":468,"props":1161,"children":1162},{"style":759},[1163],{"type":442,"value":987},{"type":437,"tag":468,"props":1165,"children":1166},{"style":816},[1167],{"type":442,"value":799},{"type":437,"tag":468,"props":1169,"children":1170},{"style":759},[1171],{"type":442,"value":996},{"type":437,"tag":468,"props":1173,"children":1174},{"style":816},[1175],{"type":442,"value":790},{"type":437,"tag":468,"props":1177,"children":1178},{"style":759},[1179],{"type":442,"value":1180}," +",{"type":437,"tag":468,"props":1182,"children":1183},{"style":970},[1184],{"type":442,"value":1001},{"type":437,"tag":468,"props":1186,"children":1187},{"style":782},[1188],{"type":442,"value":978},{"type":437,"tag":468,"props":1190,"children":1191},{"style":816},[1192],{"type":442,"value":963},{"type":437,"tag":468,"props":1194,"children":1195},{"style":759},[1196],{"type":442,"value":1014},{"type":437,"tag":468,"props":1198,"children":1199},{"style":770},[1200],{"type":442,"value":804},{"type":437,"tag":468,"props":1202,"children":1204},{"class":470,"line":1203},29,[1205,1210,1215,1219,1223,1227,1231],{"type":437,"tag":468,"props":1206,"children":1207},{"style":747},[1208],{"type":442,"value":1209},"    const",{"type":437,"tag":468,"props":1211,"children":1212},{"style":816},[1213],{"type":442,"value":1214}," next",{"type":437,"tag":468,"props":1216,"children":1217},{"style":759},[1218],{"type":442,"value":762},{"type":437,"tag":468,"props":1220,"children":1221},{"style":816},[1222],{"type":442,"value":1103},{"type":437,"tag":468,"props":1224,"children":1225},{"style":855},[1226],{"type":442,"value":858},{"type":437,"tag":468,"props":1228,"children":1229},{"style":816},[1230],{"type":442,"value":863},{"type":437,"tag":468,"props":1232,"children":1233},{"style":782},[1234],{"type":442,"value":843},{"type":437,"tag":468,"props":1236,"children":1238},{"class":470,"line":1237},30,[1239,1244,1248,1252,1256,1260],{"type":437,"tag":468,"props":1240,"children":1241},{"style":816},[1242],{"type":442,"value":1243},"    current",{"type":437,"tag":468,"props":1245,"children":1246},{"style":855},[1247],{"type":442,"value":858},{"type":437,"tag":468,"props":1249,"children":1250},{"style":816},[1251],{"type":442,"value":863},{"type":437,"tag":468,"props":1253,"children":1254},{"style":759},[1255],{"type":442,"value":762},{"type":437,"tag":468,"props":1257,"children":1258},{"style":816},[1259],{"type":442,"value":1077},{"type":437,"tag":468,"props":1261,"children":1262},{"style":782},[1263],{"type":442,"value":843},{"type":437,"tag":468,"props":1265,"children":1267},{"class":470,"line":1266},31,[1268,1273,1277,1281],{"type":437,"tag":468,"props":1269,"children":1270},{"style":816},[1271],{"type":442,"value":1272},"    prev",{"type":437,"tag":468,"props":1274,"children":1275},{"style":759},[1276],{"type":442,"value":762},{"type":437,"tag":468,"props":1278,"children":1279},{"style":816},[1280],{"type":442,"value":1103},{"type":437,"tag":468,"props":1282,"children":1283},{"style":782},[1284],{"type":442,"value":843},{"type":437,"tag":468,"props":1286,"children":1288},{"class":470,"line":1287},32,[1289,1293,1297,1301],{"type":437,"tag":468,"props":1290,"children":1291},{"style":816},[1292],{"type":442,"value":1243},{"type":437,"tag":468,"props":1294,"children":1295},{"style":759},[1296],{"type":442,"value":762},{"type":437,"tag":468,"props":1298,"children":1299},{"style":816},[1300],{"type":442,"value":1214},{"type":437,"tag":468,"props":1302,"children":1303},{"style":782},[1304],{"type":442,"value":843},{"type":437,"tag":468,"props":1306,"children":1308},{"class":470,"line":1307},33,[1309],{"type":437,"tag":468,"props":1310,"children":1311},{"style":770},[1312],{"type":442,"value":1056},{"type":437,"tag":468,"props":1314,"children":1316},{"class":470,"line":1315},34,[1317],{"type":437,"tag":468,"props":1318,"children":1319},{"emptyLinePlaceholder":883},[1320],{"type":442,"value":886},{"type":437,"tag":468,"props":1322,"children":1324},{"class":470,"line":1323},35,[1325],{"type":437,"tag":468,"props":1326,"children":1327},{"style":580},[1328],{"type":442,"value":1329},"  // p0 指向 prev\n",{"type":437,"tag":468,"props":1331,"children":1333},{"class":470,"line":1332},36,[1334],{"type":437,"tag":468,"props":1335,"children":1336},{"style":580},[1337],{"type":442,"value":1338},"  // p0 的 next 指向 current\n",{"type":437,"tag":468,"props":1340,"children":1342},{"class":470,"line":1341},37,[1343,1348,1352,1356,1360,1364,1368,1372],{"type":437,"tag":468,"props":1344,"children":1345},{"style":816},[1346],{"type":442,"value":1347},"  p0",{"type":437,"tag":468,"props":1349,"children":1350},{"style":855},[1351],{"type":442,"value":858},{"type":437,"tag":468,"props":1353,"children":1354},{"style":816},[1355],{"type":442,"value":863},{"type":437,"tag":468,"props":1357,"children":1358},{"style":855},[1359],{"type":442,"value":858},{"type":437,"tag":468,"props":1361,"children":1362},{"style":816},[1363],{"type":442,"value":863},{"type":437,"tag":468,"props":1365,"children":1366},{"style":759},[1367],{"type":442,"value":762},{"type":437,"tag":468,"props":1369,"children":1370},{"style":816},[1371],{"type":442,"value":1103},{"type":437,"tag":468,"props":1373,"children":1374},{"style":782},[1375],{"type":442,"value":843},{"type":437,"tag":468,"props":1377,"children":1379},{"class":470,"line":1378},38,[1380,1384,1388,1392,1396,1400],{"type":437,"tag":468,"props":1381,"children":1382},{"style":816},[1383],{"type":442,"value":1347},{"type":437,"tag":468,"props":1385,"children":1386},{"style":855},[1387],{"type":442,"value":858},{"type":437,"tag":468,"props":1389,"children":1390},{"style":816},[1391],{"type":442,"value":863},{"type":437,"tag":468,"props":1393,"children":1394},{"style":759},[1395],{"type":442,"value":762},{"type":437,"tag":468,"props":1397,"children":1398},{"style":816},[1399],{"type":442,"value":1077},{"type":437,"tag":468,"props":1401,"children":1402},{"style":782},[1403],{"type":442,"value":843},{"type":437,"tag":468,"props":1405,"children":1407},{"class":470,"line":1406},39,[1408],{"type":437,"tag":468,"props":1409,"children":1410},{"emptyLinePlaceholder":883},[1411],{"type":442,"value":886},{"type":437,"tag":468,"props":1413,"children":1415},{"class":470,"line":1414},40,[1416,1421,1425,1429,1433],{"type":437,"tag":468,"props":1417,"children":1418},{"style":946},[1419],{"type":442,"value":1420},"  return",{"type":437,"tag":468,"props":1422,"children":1423},{"style":816},[1424],{"type":442,"value":819},{"type":437,"tag":468,"props":1426,"children":1427},{"style":855},[1428],{"type":442,"value":858},{"type":437,"tag":468,"props":1430,"children":1431},{"style":816},[1432],{"type":442,"value":863},{"type":437,"tag":468,"props":1434,"children":1435},{"style":782},[1436],{"type":442,"value":843},{"type":437,"tag":468,"props":1438,"children":1440},{"class":470,"line":1439},41,[1441,1446],{"type":437,"tag":468,"props":1442,"children":1443},{"style":770},[1444],{"type":442,"value":1445},"}",{"type":437,"tag":468,"props":1447,"children":1448},{"style":782},[1449],{"type":442,"value":843},{"type":437,"tag":1451,"props":1452,"children":1453},"style",{},[1454],{"type":442,"value":1455},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":430,"searchDepth":612,"depth":612,"links":1457},[1458,1459],{"id":553,"depth":480,"text":553},{"id":563,"depth":480,"text":563},"markdown","content:1.algorithm:3.leetcode:92.reverse-linked-list-ii.md","content","1.algorithm/3.leetcode/92.reverse-linked-list-ii.md","md",[1466,1468],{"_path":110,"title":109,"description":1467},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",{"_path":116,"title":115,"description":1469},"给定一个二叉树的根节点 root ，返回 它的 中序 遍历 。",1713426448945]