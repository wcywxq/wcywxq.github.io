[{"data":1,"prerenderedAt":1467},["Reactive",2],{"navigation":3,"/algorithm/leetcode/reverse-linked-list-ii":424,"/algorithm/leetcode/reverse-linked-list-ii-surround":1462},[4,237,265,403,410],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,396],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"随机数","/frontend-code-assessment/scene/random-number",{"title":382,"_path":383},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":385,"_path":386},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":388,"_path":389},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":391,"_path":392},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":394,"_path":395},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":397,"_path":398,"children":399},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[400],{"title":401,"_path":402},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":404,"_path":405,"children":406},"项目","/pro",[407],{"title":408,"_path":409},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":411,"_path":412,"children":413},"后端语言","/backend-languages",[414],{"title":415,"_path":416,"children":417},"Python","/backend-languages/python",[418,421],{"title":419,"_path":420},"基础","/backend-languages/python/base",{"title":422,"_path":423},"函数","/backend-languages/python/function",{"_path":113,"_dir":425,"_draft":426,"_partial":426,"_locale":427,"title":112,"description":428,"url":429,"body":430,"_type":1457,"_id":1458,"_source":1459,"_file":1460,"_extension":1461},"leetcode",false,"","给你单链表的头指针 head 和两个整数 left 和 right ，其中 left \u003C= right 。请你反转从位置 left 到位置 right 的链表节点，返回 反转后的链表 。","https://leetcode.cn/problems/reverse-linked-list-ii",{"type":431,"children":432,"toc":1453},"root",[433,440,445,454,484,489,512,517,542,547,553,558,563,1447],{"type":434,"tag":435,"props":436,"children":437},"element","p",{},[438],{"type":439,"value":428},"text",{"type":434,"tag":435,"props":441,"children":442},{},[443],{"type":439,"value":444},"示例 1：",{"type":434,"tag":435,"props":446,"children":447},{},[448],{"type":434,"tag":449,"props":450,"children":453},"img",{"alt":451,"src":452},"rev2ex2","/img/code_leetcode_No.92_rev2ex2.png",[],{"type":434,"tag":455,"props":456,"children":459},"pre",{"className":457,"code":458,"language":439,"meta":427,"style":427},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：head = [1,2,3,4,5], left = 2, right = 4\n输出：[1,4,3,2,5]\n",[460],{"type":434,"tag":461,"props":462,"children":463},"code",{"__ignoreMap":427},[464,475],{"type":434,"tag":465,"props":466,"children":469},"span",{"class":467,"line":468},"line",1,[470],{"type":434,"tag":465,"props":471,"children":472},{},[473],{"type":439,"value":474},"输入：head = [1,2,3,4,5], left = 2, right = 4\n",{"type":434,"tag":465,"props":476,"children":478},{"class":467,"line":477},2,[479],{"type":434,"tag":465,"props":480,"children":481},{},[482],{"type":439,"value":483},"输出：[1,4,3,2,5]\n",{"type":434,"tag":435,"props":485,"children":486},{},[487],{"type":439,"value":488},"示例 2：",{"type":434,"tag":455,"props":490,"children":492},{"className":457,"code":491,"language":439,"meta":427,"style":427},"输入：head = [5], left = 1, right = 1\n输出：[5]\n",[493],{"type":434,"tag":461,"props":494,"children":495},{"__ignoreMap":427},[496,504],{"type":434,"tag":465,"props":497,"children":498},{"class":467,"line":468},[499],{"type":434,"tag":465,"props":500,"children":501},{},[502],{"type":439,"value":503},"输入：head = [5], left = 1, right = 1\n",{"type":434,"tag":465,"props":505,"children":506},{"class":467,"line":477},[507],{"type":434,"tag":465,"props":508,"children":509},{},[510],{"type":439,"value":511},"输出：[5]\n",{"type":434,"tag":435,"props":513,"children":514},{},[515],{"type":439,"value":516},"提示：",{"type":434,"tag":518,"props":519,"children":520},"ul",{},[521,527,532,537],{"type":434,"tag":522,"props":523,"children":524},"li",{},[525],{"type":439,"value":526},"链表中节点数目为 n",{"type":434,"tag":522,"props":528,"children":529},{},[530],{"type":439,"value":531},"1 \u003C= n \u003C= 500",{"type":434,"tag":522,"props":533,"children":534},{},[535],{"type":439,"value":536},"-500 \u003C= Node.val \u003C= 500",{"type":434,"tag":522,"props":538,"children":539},{},[540],{"type":439,"value":541},"1 \u003C= left \u003C= right \u003C= n",{"type":434,"tag":435,"props":543,"children":544},{},[545],{"type":439,"value":546},"进阶： 你可以使用一趟扫描完成反转吗？",{"type":434,"tag":548,"props":549,"children":551},"h2",{"id":550},"解题思路",[552],{"type":439,"value":550},{"type":434,"tag":435,"props":554,"children":555},{},[556],{"type":439,"value":557},"性质：在反转结束后，从原链表上看，prev 指向反转这一段的末尾，current 指向反转这一段后续的下一个节点",{"type":434,"tag":548,"props":559,"children":561},{"id":560},"实现",[562],{"type":439,"value":560},{"type":434,"tag":455,"props":564,"children":568},{"className":565,"code":566,"language":567,"meta":427,"style":427},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @param {number} left\n * @param {number} right\n * @return {ListNode}\n */\nvar reverseBetween = function (head, left, right) {\n  const dummy = new ListNode();\n  dummy.next = head;\n\n  // p0 代表反转中间段的上一个节点\n  // left = 1 时，构造哨兵节点\n  // 循环后，到达反转后的上一个节点\n  let p0 = dummy;\n  for (let i = 0; i \u003C left - 1; i++) {\n    p0 = p0.next;\n  }\n\n  let prev = null;\n  let current = p0.next;\n  for (let i = 0; i \u003C right - left + 1; i++) {\n    const next = current.next;\n    current.next = prev;\n    prev = current;\n    current = next;\n  }\n\n  // p0 指向 prev\n  // p0 的 next 指向 current\n  p0.next.next = current;\n  p0.next = prev;\n\n  return dummy.next;\n};\n","js",[569],{"type":434,"tag":461,"props":570,"children":571},{"__ignoreMap":427},[572,581,589,598,607,616,625,634,642,669,691,712,730,738,802,841,874,884,893,902,911,937,1016,1045,1054,1062,1088,1121,1198,1232,1261,1282,1302,1310,1318,1327,1336,1373,1401,1409,1434],{"type":434,"tag":465,"props":573,"children":574},{"class":467,"line":468},[575],{"type":434,"tag":465,"props":576,"children":578},{"style":577},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[579],{"type":439,"value":580},"/**\n",{"type":434,"tag":465,"props":582,"children":583},{"class":467,"line":477},[584],{"type":434,"tag":465,"props":585,"children":586},{"style":577},[587],{"type":439,"value":588}," * Definition for singly-linked list.\n",{"type":434,"tag":465,"props":590,"children":592},{"class":467,"line":591},3,[593],{"type":434,"tag":465,"props":594,"children":595},{"style":577},[596],{"type":439,"value":597}," * function ListNode(val, next) {\n",{"type":434,"tag":465,"props":599,"children":601},{"class":467,"line":600},4,[602],{"type":434,"tag":465,"props":603,"children":604},{"style":577},[605],{"type":439,"value":606}," *     this.val = (val===undefined ? 0 : val)\n",{"type":434,"tag":465,"props":608,"children":610},{"class":467,"line":609},5,[611],{"type":434,"tag":465,"props":612,"children":613},{"style":577},[614],{"type":439,"value":615}," *     this.next = (next===undefined ? null : next)\n",{"type":434,"tag":465,"props":617,"children":619},{"class":467,"line":618},6,[620],{"type":434,"tag":465,"props":621,"children":622},{"style":577},[623],{"type":439,"value":624}," * }\n",{"type":434,"tag":465,"props":626,"children":628},{"class":467,"line":627},7,[629],{"type":434,"tag":465,"props":630,"children":631},{"style":577},[632],{"type":439,"value":633}," */\n",{"type":434,"tag":465,"props":635,"children":637},{"class":467,"line":636},8,[638],{"type":434,"tag":465,"props":639,"children":640},{"style":577},[641],{"type":439,"value":580},{"type":434,"tag":465,"props":643,"children":645},{"class":467,"line":644},9,[646,651,657,663],{"type":434,"tag":465,"props":647,"children":648},{"style":577},[649],{"type":439,"value":650}," * ",{"type":434,"tag":465,"props":652,"children":654},{"style":653},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[655],{"type":439,"value":656},"@param",{"type":434,"tag":465,"props":658,"children":660},{"style":659},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[661],{"type":439,"value":662}," {ListNode}",{"type":434,"tag":465,"props":664,"children":666},{"style":665},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[667],{"type":439,"value":668}," head\n",{"type":434,"tag":465,"props":670,"children":672},{"class":467,"line":671},10,[673,677,681,686],{"type":434,"tag":465,"props":674,"children":675},{"style":577},[676],{"type":439,"value":650},{"type":434,"tag":465,"props":678,"children":679},{"style":653},[680],{"type":439,"value":656},{"type":434,"tag":465,"props":682,"children":683},{"style":659},[684],{"type":439,"value":685}," {number}",{"type":434,"tag":465,"props":687,"children":688},{"style":665},[689],{"type":439,"value":690}," left\n",{"type":434,"tag":465,"props":692,"children":694},{"class":467,"line":693},11,[695,699,703,707],{"type":434,"tag":465,"props":696,"children":697},{"style":577},[698],{"type":439,"value":650},{"type":434,"tag":465,"props":700,"children":701},{"style":653},[702],{"type":439,"value":656},{"type":434,"tag":465,"props":704,"children":705},{"style":659},[706],{"type":439,"value":685},{"type":434,"tag":465,"props":708,"children":709},{"style":665},[710],{"type":439,"value":711}," right\n",{"type":434,"tag":465,"props":713,"children":715},{"class":467,"line":714},12,[716,720,725],{"type":434,"tag":465,"props":717,"children":718},{"style":577},[719],{"type":439,"value":650},{"type":434,"tag":465,"props":721,"children":722},{"style":653},[723],{"type":439,"value":724},"@return",{"type":434,"tag":465,"props":726,"children":727},{"style":659},[728],{"type":439,"value":729}," {ListNode}\n",{"type":434,"tag":465,"props":731,"children":733},{"class":467,"line":732},13,[734],{"type":434,"tag":465,"props":735,"children":736},{"style":577},[737],{"type":439,"value":633},{"type":434,"tag":465,"props":739,"children":741},{"class":467,"line":740},14,[742,748,754,760,765,771,777,783,788,792,797],{"type":434,"tag":465,"props":743,"children":745},{"style":744},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[746],{"type":439,"value":747},"var",{"type":434,"tag":465,"props":749,"children":751},{"style":750},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[752],{"type":439,"value":753}," reverseBetween",{"type":434,"tag":465,"props":755,"children":757},{"style":756},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[758],{"type":439,"value":759}," =",{"type":434,"tag":465,"props":761,"children":762},{"style":744},[763],{"type":439,"value":764}," function",{"type":434,"tag":465,"props":766,"children":768},{"style":767},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[769],{"type":439,"value":770}," (",{"type":434,"tag":465,"props":772,"children":774},{"style":773},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[775],{"type":439,"value":776},"head",{"type":434,"tag":465,"props":778,"children":780},{"style":779},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[781],{"type":439,"value":782},",",{"type":434,"tag":465,"props":784,"children":785},{"style":773},[786],{"type":439,"value":787}," left",{"type":434,"tag":465,"props":789,"children":790},{"style":779},[791],{"type":439,"value":782},{"type":434,"tag":465,"props":793,"children":794},{"style":773},[795],{"type":439,"value":796}," right",{"type":434,"tag":465,"props":798,"children":799},{"style":767},[800],{"type":439,"value":801},") {\n",{"type":434,"tag":465,"props":803,"children":805},{"class":467,"line":804},15,[806,811,817,821,826,831,836],{"type":434,"tag":465,"props":807,"children":808},{"style":744},[809],{"type":439,"value":810},"  const",{"type":434,"tag":465,"props":812,"children":814},{"style":813},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[815],{"type":439,"value":816}," dummy",{"type":434,"tag":465,"props":818,"children":819},{"style":756},[820],{"type":439,"value":759},{"type":434,"tag":465,"props":822,"children":823},{"style":756},[824],{"type":439,"value":825}," new",{"type":434,"tag":465,"props":827,"children":828},{"style":750},[829],{"type":439,"value":830}," ListNode",{"type":434,"tag":465,"props":832,"children":833},{"style":767},[834],{"type":439,"value":835},"()",{"type":434,"tag":465,"props":837,"children":838},{"style":779},[839],{"type":439,"value":840},";\n",{"type":434,"tag":465,"props":842,"children":844},{"class":467,"line":843},16,[845,850,856,861,865,870],{"type":434,"tag":465,"props":846,"children":847},{"style":813},[848],{"type":439,"value":849},"  dummy",{"type":434,"tag":465,"props":851,"children":853},{"style":852},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[854],{"type":439,"value":855},".",{"type":434,"tag":465,"props":857,"children":858},{"style":813},[859],{"type":439,"value":860},"next",{"type":434,"tag":465,"props":862,"children":863},{"style":756},[864],{"type":439,"value":759},{"type":434,"tag":465,"props":866,"children":867},{"style":813},[868],{"type":439,"value":869}," head",{"type":434,"tag":465,"props":871,"children":872},{"style":779},[873],{"type":439,"value":840},{"type":434,"tag":465,"props":875,"children":877},{"class":467,"line":876},17,[878],{"type":434,"tag":465,"props":879,"children":881},{"emptyLinePlaceholder":880},true,[882],{"type":439,"value":883},"\n",{"type":434,"tag":465,"props":885,"children":887},{"class":467,"line":886},18,[888],{"type":434,"tag":465,"props":889,"children":890},{"style":577},[891],{"type":439,"value":892},"  // p0 代表反转中间段的上一个节点\n",{"type":434,"tag":465,"props":894,"children":896},{"class":467,"line":895},19,[897],{"type":434,"tag":465,"props":898,"children":899},{"style":577},[900],{"type":439,"value":901},"  // left = 1 时，构造哨兵节点\n",{"type":434,"tag":465,"props":903,"children":905},{"class":467,"line":904},20,[906],{"type":434,"tag":465,"props":907,"children":908},{"style":577},[909],{"type":439,"value":910},"  // 循环后，到达反转后的上一个节点\n",{"type":434,"tag":465,"props":912,"children":914},{"class":467,"line":913},21,[915,920,925,929,933],{"type":434,"tag":465,"props":916,"children":917},{"style":744},[918],{"type":439,"value":919},"  let",{"type":434,"tag":465,"props":921,"children":922},{"style":813},[923],{"type":439,"value":924}," p0",{"type":434,"tag":465,"props":926,"children":927},{"style":756},[928],{"type":439,"value":759},{"type":434,"tag":465,"props":930,"children":931},{"style":813},[932],{"type":439,"value":816},{"type":434,"tag":465,"props":934,"children":935},{"style":779},[936],{"type":439,"value":840},{"type":434,"tag":465,"props":938,"children":940},{"class":467,"line":939},22,[941,947,951,956,961,965,971,976,980,985,989,994,999,1003,1007,1012],{"type":434,"tag":465,"props":942,"children":944},{"style":943},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[945],{"type":439,"value":946},"  for",{"type":434,"tag":465,"props":948,"children":949},{"style":767},[950],{"type":439,"value":770},{"type":434,"tag":465,"props":952,"children":953},{"style":744},[954],{"type":439,"value":955},"let",{"type":434,"tag":465,"props":957,"children":958},{"style":813},[959],{"type":439,"value":960}," i",{"type":434,"tag":465,"props":962,"children":963},{"style":756},[964],{"type":439,"value":759},{"type":434,"tag":465,"props":966,"children":968},{"style":967},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[969],{"type":439,"value":970}," 0",{"type":434,"tag":465,"props":972,"children":973},{"style":779},[974],{"type":439,"value":975},";",{"type":434,"tag":465,"props":977,"children":978},{"style":813},[979],{"type":439,"value":960},{"type":434,"tag":465,"props":981,"children":982},{"style":756},[983],{"type":439,"value":984}," \u003C",{"type":434,"tag":465,"props":986,"children":987},{"style":813},[988],{"type":439,"value":787},{"type":434,"tag":465,"props":990,"children":991},{"style":756},[992],{"type":439,"value":993}," -",{"type":434,"tag":465,"props":995,"children":996},{"style":967},[997],{"type":439,"value":998}," 1",{"type":434,"tag":465,"props":1000,"children":1001},{"style":779},[1002],{"type":439,"value":975},{"type":434,"tag":465,"props":1004,"children":1005},{"style":813},[1006],{"type":439,"value":960},{"type":434,"tag":465,"props":1008,"children":1009},{"style":756},[1010],{"type":439,"value":1011},"++",{"type":434,"tag":465,"props":1013,"children":1014},{"style":767},[1015],{"type":439,"value":801},{"type":434,"tag":465,"props":1017,"children":1019},{"class":467,"line":1018},23,[1020,1025,1029,1033,1037,1041],{"type":434,"tag":465,"props":1021,"children":1022},{"style":813},[1023],{"type":439,"value":1024},"    p0",{"type":434,"tag":465,"props":1026,"children":1027},{"style":756},[1028],{"type":439,"value":759},{"type":434,"tag":465,"props":1030,"children":1031},{"style":813},[1032],{"type":439,"value":924},{"type":434,"tag":465,"props":1034,"children":1035},{"style":852},[1036],{"type":439,"value":855},{"type":434,"tag":465,"props":1038,"children":1039},{"style":813},[1040],{"type":439,"value":860},{"type":434,"tag":465,"props":1042,"children":1043},{"style":779},[1044],{"type":439,"value":840},{"type":434,"tag":465,"props":1046,"children":1048},{"class":467,"line":1047},24,[1049],{"type":434,"tag":465,"props":1050,"children":1051},{"style":767},[1052],{"type":439,"value":1053},"  }\n",{"type":434,"tag":465,"props":1055,"children":1057},{"class":467,"line":1056},25,[1058],{"type":434,"tag":465,"props":1059,"children":1060},{"emptyLinePlaceholder":880},[1061],{"type":439,"value":883},{"type":434,"tag":465,"props":1063,"children":1065},{"class":467,"line":1064},26,[1066,1070,1075,1079,1084],{"type":434,"tag":465,"props":1067,"children":1068},{"style":744},[1069],{"type":439,"value":919},{"type":434,"tag":465,"props":1071,"children":1072},{"style":813},[1073],{"type":439,"value":1074}," prev",{"type":434,"tag":465,"props":1076,"children":1077},{"style":756},[1078],{"type":439,"value":759},{"type":434,"tag":465,"props":1080,"children":1081},{"style":967},[1082],{"type":439,"value":1083}," null",{"type":434,"tag":465,"props":1085,"children":1086},{"style":779},[1087],{"type":439,"value":840},{"type":434,"tag":465,"props":1089,"children":1091},{"class":467,"line":1090},27,[1092,1096,1101,1105,1109,1113,1117],{"type":434,"tag":465,"props":1093,"children":1094},{"style":744},[1095],{"type":439,"value":919},{"type":434,"tag":465,"props":1097,"children":1098},{"style":813},[1099],{"type":439,"value":1100}," current",{"type":434,"tag":465,"props":1102,"children":1103},{"style":756},[1104],{"type":439,"value":759},{"type":434,"tag":465,"props":1106,"children":1107},{"style":813},[1108],{"type":439,"value":924},{"type":434,"tag":465,"props":1110,"children":1111},{"style":852},[1112],{"type":439,"value":855},{"type":434,"tag":465,"props":1114,"children":1115},{"style":813},[1116],{"type":439,"value":860},{"type":434,"tag":465,"props":1118,"children":1119},{"style":779},[1120],{"type":439,"value":840},{"type":434,"tag":465,"props":1122,"children":1124},{"class":467,"line":1123},28,[1125,1129,1133,1137,1141,1145,1149,1153,1157,1161,1165,1169,1173,1178,1182,1186,1190,1194],{"type":434,"tag":465,"props":1126,"children":1127},{"style":943},[1128],{"type":439,"value":946},{"type":434,"tag":465,"props":1130,"children":1131},{"style":767},[1132],{"type":439,"value":770},{"type":434,"tag":465,"props":1134,"children":1135},{"style":744},[1136],{"type":439,"value":955},{"type":434,"tag":465,"props":1138,"children":1139},{"style":813},[1140],{"type":439,"value":960},{"type":434,"tag":465,"props":1142,"children":1143},{"style":756},[1144],{"type":439,"value":759},{"type":434,"tag":465,"props":1146,"children":1147},{"style":967},[1148],{"type":439,"value":970},{"type":434,"tag":465,"props":1150,"children":1151},{"style":779},[1152],{"type":439,"value":975},{"type":434,"tag":465,"props":1154,"children":1155},{"style":813},[1156],{"type":439,"value":960},{"type":434,"tag":465,"props":1158,"children":1159},{"style":756},[1160],{"type":439,"value":984},{"type":434,"tag":465,"props":1162,"children":1163},{"style":813},[1164],{"type":439,"value":796},{"type":434,"tag":465,"props":1166,"children":1167},{"style":756},[1168],{"type":439,"value":993},{"type":434,"tag":465,"props":1170,"children":1171},{"style":813},[1172],{"type":439,"value":787},{"type":434,"tag":465,"props":1174,"children":1175},{"style":756},[1176],{"type":439,"value":1177}," +",{"type":434,"tag":465,"props":1179,"children":1180},{"style":967},[1181],{"type":439,"value":998},{"type":434,"tag":465,"props":1183,"children":1184},{"style":779},[1185],{"type":439,"value":975},{"type":434,"tag":465,"props":1187,"children":1188},{"style":813},[1189],{"type":439,"value":960},{"type":434,"tag":465,"props":1191,"children":1192},{"style":756},[1193],{"type":439,"value":1011},{"type":434,"tag":465,"props":1195,"children":1196},{"style":767},[1197],{"type":439,"value":801},{"type":434,"tag":465,"props":1199,"children":1201},{"class":467,"line":1200},29,[1202,1207,1212,1216,1220,1224,1228],{"type":434,"tag":465,"props":1203,"children":1204},{"style":744},[1205],{"type":439,"value":1206},"    const",{"type":434,"tag":465,"props":1208,"children":1209},{"style":813},[1210],{"type":439,"value":1211}," next",{"type":434,"tag":465,"props":1213,"children":1214},{"style":756},[1215],{"type":439,"value":759},{"type":434,"tag":465,"props":1217,"children":1218},{"style":813},[1219],{"type":439,"value":1100},{"type":434,"tag":465,"props":1221,"children":1222},{"style":852},[1223],{"type":439,"value":855},{"type":434,"tag":465,"props":1225,"children":1226},{"style":813},[1227],{"type":439,"value":860},{"type":434,"tag":465,"props":1229,"children":1230},{"style":779},[1231],{"type":439,"value":840},{"type":434,"tag":465,"props":1233,"children":1235},{"class":467,"line":1234},30,[1236,1241,1245,1249,1253,1257],{"type":434,"tag":465,"props":1237,"children":1238},{"style":813},[1239],{"type":439,"value":1240},"    current",{"type":434,"tag":465,"props":1242,"children":1243},{"style":852},[1244],{"type":439,"value":855},{"type":434,"tag":465,"props":1246,"children":1247},{"style":813},[1248],{"type":439,"value":860},{"type":434,"tag":465,"props":1250,"children":1251},{"style":756},[1252],{"type":439,"value":759},{"type":434,"tag":465,"props":1254,"children":1255},{"style":813},[1256],{"type":439,"value":1074},{"type":434,"tag":465,"props":1258,"children":1259},{"style":779},[1260],{"type":439,"value":840},{"type":434,"tag":465,"props":1262,"children":1264},{"class":467,"line":1263},31,[1265,1270,1274,1278],{"type":434,"tag":465,"props":1266,"children":1267},{"style":813},[1268],{"type":439,"value":1269},"    prev",{"type":434,"tag":465,"props":1271,"children":1272},{"style":756},[1273],{"type":439,"value":759},{"type":434,"tag":465,"props":1275,"children":1276},{"style":813},[1277],{"type":439,"value":1100},{"type":434,"tag":465,"props":1279,"children":1280},{"style":779},[1281],{"type":439,"value":840},{"type":434,"tag":465,"props":1283,"children":1285},{"class":467,"line":1284},32,[1286,1290,1294,1298],{"type":434,"tag":465,"props":1287,"children":1288},{"style":813},[1289],{"type":439,"value":1240},{"type":434,"tag":465,"props":1291,"children":1292},{"style":756},[1293],{"type":439,"value":759},{"type":434,"tag":465,"props":1295,"children":1296},{"style":813},[1297],{"type":439,"value":1211},{"type":434,"tag":465,"props":1299,"children":1300},{"style":779},[1301],{"type":439,"value":840},{"type":434,"tag":465,"props":1303,"children":1305},{"class":467,"line":1304},33,[1306],{"type":434,"tag":465,"props":1307,"children":1308},{"style":767},[1309],{"type":439,"value":1053},{"type":434,"tag":465,"props":1311,"children":1313},{"class":467,"line":1312},34,[1314],{"type":434,"tag":465,"props":1315,"children":1316},{"emptyLinePlaceholder":880},[1317],{"type":439,"value":883},{"type":434,"tag":465,"props":1319,"children":1321},{"class":467,"line":1320},35,[1322],{"type":434,"tag":465,"props":1323,"children":1324},{"style":577},[1325],{"type":439,"value":1326},"  // p0 指向 prev\n",{"type":434,"tag":465,"props":1328,"children":1330},{"class":467,"line":1329},36,[1331],{"type":434,"tag":465,"props":1332,"children":1333},{"style":577},[1334],{"type":439,"value":1335},"  // p0 的 next 指向 current\n",{"type":434,"tag":465,"props":1337,"children":1339},{"class":467,"line":1338},37,[1340,1345,1349,1353,1357,1361,1365,1369],{"type":434,"tag":465,"props":1341,"children":1342},{"style":813},[1343],{"type":439,"value":1344},"  p0",{"type":434,"tag":465,"props":1346,"children":1347},{"style":852},[1348],{"type":439,"value":855},{"type":434,"tag":465,"props":1350,"children":1351},{"style":813},[1352],{"type":439,"value":860},{"type":434,"tag":465,"props":1354,"children":1355},{"style":852},[1356],{"type":439,"value":855},{"type":434,"tag":465,"props":1358,"children":1359},{"style":813},[1360],{"type":439,"value":860},{"type":434,"tag":465,"props":1362,"children":1363},{"style":756},[1364],{"type":439,"value":759},{"type":434,"tag":465,"props":1366,"children":1367},{"style":813},[1368],{"type":439,"value":1100},{"type":434,"tag":465,"props":1370,"children":1371},{"style":779},[1372],{"type":439,"value":840},{"type":434,"tag":465,"props":1374,"children":1376},{"class":467,"line":1375},38,[1377,1381,1385,1389,1393,1397],{"type":434,"tag":465,"props":1378,"children":1379},{"style":813},[1380],{"type":439,"value":1344},{"type":434,"tag":465,"props":1382,"children":1383},{"style":852},[1384],{"type":439,"value":855},{"type":434,"tag":465,"props":1386,"children":1387},{"style":813},[1388],{"type":439,"value":860},{"type":434,"tag":465,"props":1390,"children":1391},{"style":756},[1392],{"type":439,"value":759},{"type":434,"tag":465,"props":1394,"children":1395},{"style":813},[1396],{"type":439,"value":1074},{"type":434,"tag":465,"props":1398,"children":1399},{"style":779},[1400],{"type":439,"value":840},{"type":434,"tag":465,"props":1402,"children":1404},{"class":467,"line":1403},39,[1405],{"type":434,"tag":465,"props":1406,"children":1407},{"emptyLinePlaceholder":880},[1408],{"type":439,"value":883},{"type":434,"tag":465,"props":1410,"children":1412},{"class":467,"line":1411},40,[1413,1418,1422,1426,1430],{"type":434,"tag":465,"props":1414,"children":1415},{"style":943},[1416],{"type":439,"value":1417},"  return",{"type":434,"tag":465,"props":1419,"children":1420},{"style":813},[1421],{"type":439,"value":816},{"type":434,"tag":465,"props":1423,"children":1424},{"style":852},[1425],{"type":439,"value":855},{"type":434,"tag":465,"props":1427,"children":1428},{"style":813},[1429],{"type":439,"value":860},{"type":434,"tag":465,"props":1431,"children":1432},{"style":779},[1433],{"type":439,"value":840},{"type":434,"tag":465,"props":1435,"children":1437},{"class":467,"line":1436},41,[1438,1443],{"type":434,"tag":465,"props":1439,"children":1440},{"style":767},[1441],{"type":439,"value":1442},"}",{"type":434,"tag":465,"props":1444,"children":1445},{"style":779},[1446],{"type":439,"value":840},{"type":434,"tag":1448,"props":1449,"children":1450},"style",{},[1451],{"type":439,"value":1452},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":427,"searchDepth":609,"depth":609,"links":1454},[1455,1456],{"id":550,"depth":477,"text":550},{"id":560,"depth":477,"text":560},"markdown","content:1.algorithm:3.leetcode:92.reverse-linked-list-ii.md","content","1.algorithm/3.leetcode/92.reverse-linked-list-ii.md","md",[1463,1465],{"_path":110,"title":109,"description":1464},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",{"_path":116,"title":115,"description":1466},"给定一个二叉树的根节点 root ，返回 它的 中序 遍历 。",1713339870929]