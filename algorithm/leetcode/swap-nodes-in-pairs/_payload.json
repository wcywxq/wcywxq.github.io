[{"data":1,"prerenderedAt":1272},["Reactive",2],{"navigation":3,"/algorithm/leetcode/swap-nodes-in-pairs":427,"/algorithm/leetcode/swap-nodes-in-pairs-surround":1267},[4,237,265,406,413],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,399],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":382,"_path":383},"随机数","/frontend-code-assessment/scene/random-number",{"title":385,"_path":386},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":388,"_path":389},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":391,"_path":392},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":394,"_path":395},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":397,"_path":398},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":400,"_path":401,"children":402},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[403],{"title":404,"_path":405},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":407,"_path":408,"children":409},"项目","/pro",[410],{"title":411,"_path":412},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":414,"_path":415,"children":416},"后端语言","/backend-languages",[417],{"title":418,"_path":419,"children":420},"Python","/backend-languages/python",[421,424],{"title":422,"_path":423},"基础","/backend-languages/python/base",{"title":425,"_path":426},"函数","/backend-languages/python/function",{"_path":68,"_dir":428,"_draft":429,"_partial":429,"_locale":430,"title":67,"description":431,"url":432,"body":433,"_type":1262,"_id":1263,"_source":1264,"_file":1265,"_extension":1266},"leetcode",false,"","给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。","https://leetcode.cn/problems/swap-nodes-in-pairs",{"type":434,"children":435,"toc":1256},"root",[436,443,454,484,489,512,517,540,545,560,566,571,577,582,621,1250],{"type":437,"tag":438,"props":439,"children":440},"element","p",{},[441],{"type":442,"value":431},"text",{"type":437,"tag":438,"props":444,"children":445},{},[446,448],{"type":442,"value":447},"示例 1：\n",{"type":437,"tag":449,"props":450,"children":453},"img",{"alt":451,"src":452},"swap_ex1","/img/code_leetcode_No.24_swap_ex1.png",[],{"type":437,"tag":455,"props":456,"children":459},"pre",{"className":457,"code":458,"language":442,"meta":430,"style":430},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：head = [1,2,3,4]\n输出：[2,1,4,3]\n",[460],{"type":437,"tag":461,"props":462,"children":463},"code",{"__ignoreMap":430},[464,475],{"type":437,"tag":465,"props":466,"children":469},"span",{"class":467,"line":468},"line",1,[470],{"type":437,"tag":465,"props":471,"children":472},{},[473],{"type":442,"value":474},"输入：head = [1,2,3,4]\n",{"type":437,"tag":465,"props":476,"children":478},{"class":467,"line":477},2,[479],{"type":437,"tag":465,"props":480,"children":481},{},[482],{"type":442,"value":483},"输出：[2,1,4,3]\n",{"type":437,"tag":438,"props":485,"children":486},{},[487],{"type":442,"value":488},"示例 2：",{"type":437,"tag":455,"props":490,"children":492},{"className":457,"code":491,"language":442,"meta":430,"style":430},"输入：head = []\n输出：[]\n",[493],{"type":437,"tag":461,"props":494,"children":495},{"__ignoreMap":430},[496,504],{"type":437,"tag":465,"props":497,"children":498},{"class":467,"line":468},[499],{"type":437,"tag":465,"props":500,"children":501},{},[502],{"type":442,"value":503},"输入：head = []\n",{"type":437,"tag":465,"props":505,"children":506},{"class":467,"line":477},[507],{"type":437,"tag":465,"props":508,"children":509},{},[510],{"type":442,"value":511},"输出：[]\n",{"type":437,"tag":438,"props":513,"children":514},{},[515],{"type":442,"value":516},"示例 3：",{"type":437,"tag":455,"props":518,"children":520},{"className":457,"code":519,"language":442,"meta":430,"style":430},"输入：head = [1]\n输出：[1]\n",[521],{"type":437,"tag":461,"props":522,"children":523},{"__ignoreMap":430},[524,532],{"type":437,"tag":465,"props":525,"children":526},{"class":467,"line":468},[527],{"type":437,"tag":465,"props":528,"children":529},{},[530],{"type":442,"value":531},"输入：head = [1]\n",{"type":437,"tag":465,"props":533,"children":534},{"class":467,"line":477},[535],{"type":437,"tag":465,"props":536,"children":537},{},[538],{"type":442,"value":539},"输出：[1]\n",{"type":437,"tag":438,"props":541,"children":542},{},[543],{"type":442,"value":544},"提示：",{"type":437,"tag":546,"props":547,"children":548},"ul",{},[549,555],{"type":437,"tag":550,"props":551,"children":552},"li",{},[553],{"type":442,"value":554},"链表中节点的数目在范围 [0, 100] 内",{"type":437,"tag":550,"props":556,"children":557},{},[558],{"type":442,"value":559},"0 \u003C= Node.val \u003C= 100",{"type":437,"tag":561,"props":562,"children":564},"h2",{"id":563},"解题思路",[565],{"type":442,"value":563},{"type":437,"tag":561,"props":567,"children":569},{"id":568},"实现",[570],{"type":442,"value":568},{"type":437,"tag":572,"props":573,"children":575},"h3",{"id":574},"双指针",[576],{"type":442,"value":574},{"type":437,"tag":438,"props":578,"children":579},{},[580],{"type":442,"value":581},"设置一个 dummy 节点简化操作，dummy.next 指向 head",{"type":437,"tag":583,"props":584,"children":585},"ol",{},[586,591,596,601,606,611,616],{"type":437,"tag":550,"props":587,"children":588},{},[589],{"type":442,"value":590},"初始化 first 为第一个节点",{"type":437,"tag":550,"props":592,"children":593},{},[594],{"type":442,"value":595},"初始化 second 为第二个节点",{"type":437,"tag":550,"props":597,"children":598},{},[599],{"type":442,"value":600},"初始化 current 为 dummy",{"type":437,"tag":550,"props":602,"children":603},{},[604],{"type":442,"value":605},"first.next = second.next",{"type":437,"tag":550,"props":607,"children":608},{},[609],{"type":442,"value":610},"current.next = second",{"type":437,"tag":550,"props":612,"children":613},{},[614],{"type":442,"value":615},"current 移动 2 格",{"type":437,"tag":550,"props":617,"children":618},{},[619],{"type":442,"value":620},"重复执行",{"type":437,"tag":455,"props":622,"children":626},{"className":623,"code":624,"language":625,"meta":430,"style":430},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar swapPairs = function (head) {\n  const dummy = new ListNode();\n  dummy.next = head;\n  let current = dummy;\n  while (current.next && current.next.next) {\n    // 初始化双指针\n    const first = current.next;\n    const second = current.next.next;\n\n    // 更新双指针和 current 指针\n    first.next = second.next;\n    second.next = first;\n    current.next = second;\n\n    // 指针移动\n    current = current.next.next;\n  }\n  return dummy.next;\n};\n","js",[627],{"type":437,"tag":461,"props":628,"children":629},{"__ignoreMap":430},[630,639,647,656,665,674,683,692,700,727,745,753,797,837,870,896,952,961,995,1036,1046,1055,1092,1121,1150,1158,1167,1203,1212,1237],{"type":437,"tag":465,"props":631,"children":632},{"class":467,"line":468},[633],{"type":437,"tag":465,"props":634,"children":636},{"style":635},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[637],{"type":442,"value":638},"/**\n",{"type":437,"tag":465,"props":640,"children":641},{"class":467,"line":477},[642],{"type":437,"tag":465,"props":643,"children":644},{"style":635},[645],{"type":442,"value":646}," * Definition for singly-linked list.\n",{"type":437,"tag":465,"props":648,"children":650},{"class":467,"line":649},3,[651],{"type":437,"tag":465,"props":652,"children":653},{"style":635},[654],{"type":442,"value":655}," * function ListNode(val, next) {\n",{"type":437,"tag":465,"props":657,"children":659},{"class":467,"line":658},4,[660],{"type":437,"tag":465,"props":661,"children":662},{"style":635},[663],{"type":442,"value":664}," *     this.val = (val===undefined ? 0 : val)\n",{"type":437,"tag":465,"props":666,"children":668},{"class":467,"line":667},5,[669],{"type":437,"tag":465,"props":670,"children":671},{"style":635},[672],{"type":442,"value":673}," *     this.next = (next===undefined ? null : next)\n",{"type":437,"tag":465,"props":675,"children":677},{"class":467,"line":676},6,[678],{"type":437,"tag":465,"props":679,"children":680},{"style":635},[681],{"type":442,"value":682}," * }\n",{"type":437,"tag":465,"props":684,"children":686},{"class":467,"line":685},7,[687],{"type":437,"tag":465,"props":688,"children":689},{"style":635},[690],{"type":442,"value":691}," */\n",{"type":437,"tag":465,"props":693,"children":695},{"class":467,"line":694},8,[696],{"type":437,"tag":465,"props":697,"children":698},{"style":635},[699],{"type":442,"value":638},{"type":437,"tag":465,"props":701,"children":703},{"class":467,"line":702},9,[704,709,715,721],{"type":437,"tag":465,"props":705,"children":706},{"style":635},[707],{"type":442,"value":708}," * ",{"type":437,"tag":465,"props":710,"children":712},{"style":711},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[713],{"type":442,"value":714},"@param",{"type":437,"tag":465,"props":716,"children":718},{"style":717},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[719],{"type":442,"value":720}," {ListNode}",{"type":437,"tag":465,"props":722,"children":724},{"style":723},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[725],{"type":442,"value":726}," head\n",{"type":437,"tag":465,"props":728,"children":730},{"class":467,"line":729},10,[731,735,740],{"type":437,"tag":465,"props":732,"children":733},{"style":635},[734],{"type":442,"value":708},{"type":437,"tag":465,"props":736,"children":737},{"style":711},[738],{"type":442,"value":739},"@return",{"type":437,"tag":465,"props":741,"children":742},{"style":717},[743],{"type":442,"value":744}," {ListNode}\n",{"type":437,"tag":465,"props":746,"children":748},{"class":467,"line":747},11,[749],{"type":437,"tag":465,"props":750,"children":751},{"style":635},[752],{"type":442,"value":691},{"type":437,"tag":465,"props":754,"children":756},{"class":467,"line":755},12,[757,763,769,775,780,786,792],{"type":437,"tag":465,"props":758,"children":760},{"style":759},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[761],{"type":442,"value":762},"var",{"type":437,"tag":465,"props":764,"children":766},{"style":765},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[767],{"type":442,"value":768}," swapPairs",{"type":437,"tag":465,"props":770,"children":772},{"style":771},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[773],{"type":442,"value":774}," =",{"type":437,"tag":465,"props":776,"children":777},{"style":759},[778],{"type":442,"value":779}," function",{"type":437,"tag":465,"props":781,"children":783},{"style":782},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[784],{"type":442,"value":785}," (",{"type":437,"tag":465,"props":787,"children":789},{"style":788},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[790],{"type":442,"value":791},"head",{"type":437,"tag":465,"props":793,"children":794},{"style":782},[795],{"type":442,"value":796},") {\n",{"type":437,"tag":465,"props":798,"children":800},{"class":467,"line":799},13,[801,806,812,816,821,826,831],{"type":437,"tag":465,"props":802,"children":803},{"style":759},[804],{"type":442,"value":805},"  const",{"type":437,"tag":465,"props":807,"children":809},{"style":808},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[810],{"type":442,"value":811}," dummy",{"type":437,"tag":465,"props":813,"children":814},{"style":771},[815],{"type":442,"value":774},{"type":437,"tag":465,"props":817,"children":818},{"style":771},[819],{"type":442,"value":820}," new",{"type":437,"tag":465,"props":822,"children":823},{"style":765},[824],{"type":442,"value":825}," ListNode",{"type":437,"tag":465,"props":827,"children":828},{"style":782},[829],{"type":442,"value":830},"()",{"type":437,"tag":465,"props":832,"children":834},{"style":833},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[835],{"type":442,"value":836},";\n",{"type":437,"tag":465,"props":838,"children":840},{"class":467,"line":839},14,[841,846,852,857,861,866],{"type":437,"tag":465,"props":842,"children":843},{"style":808},[844],{"type":442,"value":845},"  dummy",{"type":437,"tag":465,"props":847,"children":849},{"style":848},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[850],{"type":442,"value":851},".",{"type":437,"tag":465,"props":853,"children":854},{"style":808},[855],{"type":442,"value":856},"next",{"type":437,"tag":465,"props":858,"children":859},{"style":771},[860],{"type":442,"value":774},{"type":437,"tag":465,"props":862,"children":863},{"style":808},[864],{"type":442,"value":865}," head",{"type":437,"tag":465,"props":867,"children":868},{"style":833},[869],{"type":442,"value":836},{"type":437,"tag":465,"props":871,"children":873},{"class":467,"line":872},15,[874,879,884,888,892],{"type":437,"tag":465,"props":875,"children":876},{"style":759},[877],{"type":442,"value":878},"  let",{"type":437,"tag":465,"props":880,"children":881},{"style":808},[882],{"type":442,"value":883}," current",{"type":437,"tag":465,"props":885,"children":886},{"style":771},[887],{"type":442,"value":774},{"type":437,"tag":465,"props":889,"children":890},{"style":808},[891],{"type":442,"value":811},{"type":437,"tag":465,"props":893,"children":894},{"style":833},[895],{"type":442,"value":836},{"type":437,"tag":465,"props":897,"children":899},{"class":467,"line":898},16,[900,906,910,915,919,923,928,932,936,940,944,948],{"type":437,"tag":465,"props":901,"children":903},{"style":902},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[904],{"type":442,"value":905},"  while",{"type":437,"tag":465,"props":907,"children":908},{"style":782},[909],{"type":442,"value":785},{"type":437,"tag":465,"props":911,"children":912},{"style":808},[913],{"type":442,"value":914},"current",{"type":437,"tag":465,"props":916,"children":917},{"style":848},[918],{"type":442,"value":851},{"type":437,"tag":465,"props":920,"children":921},{"style":808},[922],{"type":442,"value":856},{"type":437,"tag":465,"props":924,"children":925},{"style":771},[926],{"type":442,"value":927}," &&",{"type":437,"tag":465,"props":929,"children":930},{"style":808},[931],{"type":442,"value":883},{"type":437,"tag":465,"props":933,"children":934},{"style":848},[935],{"type":442,"value":851},{"type":437,"tag":465,"props":937,"children":938},{"style":808},[939],{"type":442,"value":856},{"type":437,"tag":465,"props":941,"children":942},{"style":848},[943],{"type":442,"value":851},{"type":437,"tag":465,"props":945,"children":946},{"style":808},[947],{"type":442,"value":856},{"type":437,"tag":465,"props":949,"children":950},{"style":782},[951],{"type":442,"value":796},{"type":437,"tag":465,"props":953,"children":955},{"class":467,"line":954},17,[956],{"type":437,"tag":465,"props":957,"children":958},{"style":635},[959],{"type":442,"value":960},"    // 初始化双指针\n",{"type":437,"tag":465,"props":962,"children":964},{"class":467,"line":963},18,[965,970,975,979,983,987,991],{"type":437,"tag":465,"props":966,"children":967},{"style":759},[968],{"type":442,"value":969},"    const",{"type":437,"tag":465,"props":971,"children":972},{"style":808},[973],{"type":442,"value":974}," first",{"type":437,"tag":465,"props":976,"children":977},{"style":771},[978],{"type":442,"value":774},{"type":437,"tag":465,"props":980,"children":981},{"style":808},[982],{"type":442,"value":883},{"type":437,"tag":465,"props":984,"children":985},{"style":848},[986],{"type":442,"value":851},{"type":437,"tag":465,"props":988,"children":989},{"style":808},[990],{"type":442,"value":856},{"type":437,"tag":465,"props":992,"children":993},{"style":833},[994],{"type":442,"value":836},{"type":437,"tag":465,"props":996,"children":998},{"class":467,"line":997},19,[999,1003,1008,1012,1016,1020,1024,1028,1032],{"type":437,"tag":465,"props":1000,"children":1001},{"style":759},[1002],{"type":442,"value":969},{"type":437,"tag":465,"props":1004,"children":1005},{"style":808},[1006],{"type":442,"value":1007}," second",{"type":437,"tag":465,"props":1009,"children":1010},{"style":771},[1011],{"type":442,"value":774},{"type":437,"tag":465,"props":1013,"children":1014},{"style":808},[1015],{"type":442,"value":883},{"type":437,"tag":465,"props":1017,"children":1018},{"style":848},[1019],{"type":442,"value":851},{"type":437,"tag":465,"props":1021,"children":1022},{"style":808},[1023],{"type":442,"value":856},{"type":437,"tag":465,"props":1025,"children":1026},{"style":848},[1027],{"type":442,"value":851},{"type":437,"tag":465,"props":1029,"children":1030},{"style":808},[1031],{"type":442,"value":856},{"type":437,"tag":465,"props":1033,"children":1034},{"style":833},[1035],{"type":442,"value":836},{"type":437,"tag":465,"props":1037,"children":1039},{"class":467,"line":1038},20,[1040],{"type":437,"tag":465,"props":1041,"children":1043},{"emptyLinePlaceholder":1042},true,[1044],{"type":442,"value":1045},"\n",{"type":437,"tag":465,"props":1047,"children":1049},{"class":467,"line":1048},21,[1050],{"type":437,"tag":465,"props":1051,"children":1052},{"style":635},[1053],{"type":442,"value":1054},"    // 更新双指针和 current 指针\n",{"type":437,"tag":465,"props":1056,"children":1058},{"class":467,"line":1057},22,[1059,1064,1068,1072,1076,1080,1084,1088],{"type":437,"tag":465,"props":1060,"children":1061},{"style":808},[1062],{"type":442,"value":1063},"    first",{"type":437,"tag":465,"props":1065,"children":1066},{"style":848},[1067],{"type":442,"value":851},{"type":437,"tag":465,"props":1069,"children":1070},{"style":808},[1071],{"type":442,"value":856},{"type":437,"tag":465,"props":1073,"children":1074},{"style":771},[1075],{"type":442,"value":774},{"type":437,"tag":465,"props":1077,"children":1078},{"style":808},[1079],{"type":442,"value":1007},{"type":437,"tag":465,"props":1081,"children":1082},{"style":848},[1083],{"type":442,"value":851},{"type":437,"tag":465,"props":1085,"children":1086},{"style":808},[1087],{"type":442,"value":856},{"type":437,"tag":465,"props":1089,"children":1090},{"style":833},[1091],{"type":442,"value":836},{"type":437,"tag":465,"props":1093,"children":1095},{"class":467,"line":1094},23,[1096,1101,1105,1109,1113,1117],{"type":437,"tag":465,"props":1097,"children":1098},{"style":808},[1099],{"type":442,"value":1100},"    second",{"type":437,"tag":465,"props":1102,"children":1103},{"style":848},[1104],{"type":442,"value":851},{"type":437,"tag":465,"props":1106,"children":1107},{"style":808},[1108],{"type":442,"value":856},{"type":437,"tag":465,"props":1110,"children":1111},{"style":771},[1112],{"type":442,"value":774},{"type":437,"tag":465,"props":1114,"children":1115},{"style":808},[1116],{"type":442,"value":974},{"type":437,"tag":465,"props":1118,"children":1119},{"style":833},[1120],{"type":442,"value":836},{"type":437,"tag":465,"props":1122,"children":1124},{"class":467,"line":1123},24,[1125,1130,1134,1138,1142,1146],{"type":437,"tag":465,"props":1126,"children":1127},{"style":808},[1128],{"type":442,"value":1129},"    current",{"type":437,"tag":465,"props":1131,"children":1132},{"style":848},[1133],{"type":442,"value":851},{"type":437,"tag":465,"props":1135,"children":1136},{"style":808},[1137],{"type":442,"value":856},{"type":437,"tag":465,"props":1139,"children":1140},{"style":771},[1141],{"type":442,"value":774},{"type":437,"tag":465,"props":1143,"children":1144},{"style":808},[1145],{"type":442,"value":1007},{"type":437,"tag":465,"props":1147,"children":1148},{"style":833},[1149],{"type":442,"value":836},{"type":437,"tag":465,"props":1151,"children":1153},{"class":467,"line":1152},25,[1154],{"type":437,"tag":465,"props":1155,"children":1156},{"emptyLinePlaceholder":1042},[1157],{"type":442,"value":1045},{"type":437,"tag":465,"props":1159,"children":1161},{"class":467,"line":1160},26,[1162],{"type":437,"tag":465,"props":1163,"children":1164},{"style":635},[1165],{"type":442,"value":1166},"    // 指针移动\n",{"type":437,"tag":465,"props":1168,"children":1170},{"class":467,"line":1169},27,[1171,1175,1179,1183,1187,1191,1195,1199],{"type":437,"tag":465,"props":1172,"children":1173},{"style":808},[1174],{"type":442,"value":1129},{"type":437,"tag":465,"props":1176,"children":1177},{"style":771},[1178],{"type":442,"value":774},{"type":437,"tag":465,"props":1180,"children":1181},{"style":808},[1182],{"type":442,"value":883},{"type":437,"tag":465,"props":1184,"children":1185},{"style":848},[1186],{"type":442,"value":851},{"type":437,"tag":465,"props":1188,"children":1189},{"style":808},[1190],{"type":442,"value":856},{"type":437,"tag":465,"props":1192,"children":1193},{"style":848},[1194],{"type":442,"value":851},{"type":437,"tag":465,"props":1196,"children":1197},{"style":808},[1198],{"type":442,"value":856},{"type":437,"tag":465,"props":1200,"children":1201},{"style":833},[1202],{"type":442,"value":836},{"type":437,"tag":465,"props":1204,"children":1206},{"class":467,"line":1205},28,[1207],{"type":437,"tag":465,"props":1208,"children":1209},{"style":782},[1210],{"type":442,"value":1211},"  }\n",{"type":437,"tag":465,"props":1213,"children":1215},{"class":467,"line":1214},29,[1216,1221,1225,1229,1233],{"type":437,"tag":465,"props":1217,"children":1218},{"style":902},[1219],{"type":442,"value":1220},"  return",{"type":437,"tag":465,"props":1222,"children":1223},{"style":808},[1224],{"type":442,"value":811},{"type":437,"tag":465,"props":1226,"children":1227},{"style":848},[1228],{"type":442,"value":851},{"type":437,"tag":465,"props":1230,"children":1231},{"style":808},[1232],{"type":442,"value":856},{"type":437,"tag":465,"props":1234,"children":1235},{"style":833},[1236],{"type":442,"value":836},{"type":437,"tag":465,"props":1238,"children":1240},{"class":467,"line":1239},30,[1241,1246],{"type":437,"tag":465,"props":1242,"children":1243},{"style":782},[1244],{"type":442,"value":1245},"}",{"type":437,"tag":465,"props":1247,"children":1248},{"style":833},[1249],{"type":442,"value":836},{"type":437,"tag":1251,"props":1252,"children":1253},"style",{},[1254],{"type":442,"value":1255},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":430,"searchDepth":667,"depth":667,"links":1257},[1258,1259],{"id":563,"depth":477,"text":563},{"id":568,"depth":477,"text":568,"children":1260},[1261],{"id":574,"depth":649,"text":574},"markdown","content:1.algorithm:3.leetcode:24.swap-nodes-in-pairs.md","content","1.algorithm/3.leetcode/24.swap-nodes-in-pairs.md","md",[1268,1270],{"_path":65,"title":64,"description":1269},"给你一个链表数组，每个链表都已经按升序排列。",{"_path":71,"title":70,"description":1271},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",1713426448787]