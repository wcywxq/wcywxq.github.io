[{"data":1,"prerenderedAt":1275},["Reactive",2],{"navigation":3,"/algorithm/leetcode/swap-nodes-in-pairs":430,"/algorithm/leetcode/swap-nodes-in-pairs-surround":1270},[4,237,265,409,416],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,402],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396,399],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":379,"_path":380},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":382,"_path":383},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":385,"_path":386},"随机数","/frontend-code-assessment/scene/random-number",{"title":388,"_path":389},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":391,"_path":392},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":394,"_path":395},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":397,"_path":398},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":400,"_path":401},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":403,"_path":404,"children":405},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[406],{"title":407,"_path":408},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":410,"_path":411,"children":412},"项目","/pro",[413],{"title":414,"_path":415},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":417,"_path":418,"children":419},"后端语言","/backend-languages",[420],{"title":421,"_path":422,"children":423},"Python","/backend-languages/python",[424,427],{"title":425,"_path":426},"基础","/backend-languages/python/base",{"title":428,"_path":429},"函数","/backend-languages/python/function",{"_path":68,"_dir":431,"_draft":432,"_partial":432,"_locale":433,"title":67,"description":434,"url":435,"body":436,"_type":1265,"_id":1266,"_source":1267,"_file":1268,"_extension":1269},"leetcode",false,"","给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。","https://leetcode.cn/problems/swap-nodes-in-pairs",{"type":437,"children":438,"toc":1259},"root",[439,446,457,487,492,515,520,543,548,563,569,574,580,585,624,1253],{"type":440,"tag":441,"props":442,"children":443},"element","p",{},[444],{"type":445,"value":434},"text",{"type":440,"tag":441,"props":447,"children":448},{},[449,451],{"type":445,"value":450},"示例 1：\n",{"type":440,"tag":452,"props":453,"children":456},"img",{"alt":454,"src":455},"swap_ex1","/img/code_leetcode_No.24_swap_ex1.png",[],{"type":440,"tag":458,"props":459,"children":462},"pre",{"className":460,"code":461,"language":445,"meta":433,"style":433},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：head = [1,2,3,4]\n输出：[2,1,4,3]\n",[463],{"type":440,"tag":464,"props":465,"children":466},"code",{"__ignoreMap":433},[467,478],{"type":440,"tag":468,"props":469,"children":472},"span",{"class":470,"line":471},"line",1,[473],{"type":440,"tag":468,"props":474,"children":475},{},[476],{"type":445,"value":477},"输入：head = [1,2,3,4]\n",{"type":440,"tag":468,"props":479,"children":481},{"class":470,"line":480},2,[482],{"type":440,"tag":468,"props":483,"children":484},{},[485],{"type":445,"value":486},"输出：[2,1,4,3]\n",{"type":440,"tag":441,"props":488,"children":489},{},[490],{"type":445,"value":491},"示例 2：",{"type":440,"tag":458,"props":493,"children":495},{"className":460,"code":494,"language":445,"meta":433,"style":433},"输入：head = []\n输出：[]\n",[496],{"type":440,"tag":464,"props":497,"children":498},{"__ignoreMap":433},[499,507],{"type":440,"tag":468,"props":500,"children":501},{"class":470,"line":471},[502],{"type":440,"tag":468,"props":503,"children":504},{},[505],{"type":445,"value":506},"输入：head = []\n",{"type":440,"tag":468,"props":508,"children":509},{"class":470,"line":480},[510],{"type":440,"tag":468,"props":511,"children":512},{},[513],{"type":445,"value":514},"输出：[]\n",{"type":440,"tag":441,"props":516,"children":517},{},[518],{"type":445,"value":519},"示例 3：",{"type":440,"tag":458,"props":521,"children":523},{"className":460,"code":522,"language":445,"meta":433,"style":433},"输入：head = [1]\n输出：[1]\n",[524],{"type":440,"tag":464,"props":525,"children":526},{"__ignoreMap":433},[527,535],{"type":440,"tag":468,"props":528,"children":529},{"class":470,"line":471},[530],{"type":440,"tag":468,"props":531,"children":532},{},[533],{"type":445,"value":534},"输入：head = [1]\n",{"type":440,"tag":468,"props":536,"children":537},{"class":470,"line":480},[538],{"type":440,"tag":468,"props":539,"children":540},{},[541],{"type":445,"value":542},"输出：[1]\n",{"type":440,"tag":441,"props":544,"children":545},{},[546],{"type":445,"value":547},"提示：",{"type":440,"tag":549,"props":550,"children":551},"ul",{},[552,558],{"type":440,"tag":553,"props":554,"children":555},"li",{},[556],{"type":445,"value":557},"链表中节点的数目在范围 [0, 100] 内",{"type":440,"tag":553,"props":559,"children":560},{},[561],{"type":445,"value":562},"0 \u003C= Node.val \u003C= 100",{"type":440,"tag":564,"props":565,"children":567},"h2",{"id":566},"解题思路",[568],{"type":445,"value":566},{"type":440,"tag":564,"props":570,"children":572},{"id":571},"实现",[573],{"type":445,"value":571},{"type":440,"tag":575,"props":576,"children":578},"h3",{"id":577},"双指针",[579],{"type":445,"value":577},{"type":440,"tag":441,"props":581,"children":582},{},[583],{"type":445,"value":584},"设置一个 dummy 节点简化操作，dummy.next 指向 head",{"type":440,"tag":586,"props":587,"children":588},"ol",{},[589,594,599,604,609,614,619],{"type":440,"tag":553,"props":590,"children":591},{},[592],{"type":445,"value":593},"初始化 first 为第一个节点",{"type":440,"tag":553,"props":595,"children":596},{},[597],{"type":445,"value":598},"初始化 second 为第二个节点",{"type":440,"tag":553,"props":600,"children":601},{},[602],{"type":445,"value":603},"初始化 current 为 dummy",{"type":440,"tag":553,"props":605,"children":606},{},[607],{"type":445,"value":608},"first.next = second.next",{"type":440,"tag":553,"props":610,"children":611},{},[612],{"type":445,"value":613},"current.next = second",{"type":440,"tag":553,"props":615,"children":616},{},[617],{"type":445,"value":618},"current 移动 2 格",{"type":440,"tag":553,"props":620,"children":621},{},[622],{"type":445,"value":623},"重复执行",{"type":440,"tag":458,"props":625,"children":629},{"className":626,"code":627,"language":628,"meta":433,"style":433},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar swapPairs = function (head) {\n  const dummy = new ListNode();\n  dummy.next = head;\n  let current = dummy;\n  while (current.next && current.next.next) {\n    // 初始化双指针\n    const first = current.next;\n    const second = current.next.next;\n\n    // 更新双指针和 current 指针\n    first.next = second.next;\n    second.next = first;\n    current.next = second;\n\n    // 指针移动\n    current = current.next.next;\n  }\n  return dummy.next;\n};\n","js",[630],{"type":440,"tag":464,"props":631,"children":632},{"__ignoreMap":433},[633,642,650,659,668,677,686,695,703,730,748,756,800,840,873,899,955,964,998,1039,1049,1058,1095,1124,1153,1161,1170,1206,1215,1240],{"type":440,"tag":468,"props":634,"children":635},{"class":470,"line":471},[636],{"type":440,"tag":468,"props":637,"children":639},{"style":638},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[640],{"type":445,"value":641},"/**\n",{"type":440,"tag":468,"props":643,"children":644},{"class":470,"line":480},[645],{"type":440,"tag":468,"props":646,"children":647},{"style":638},[648],{"type":445,"value":649}," * Definition for singly-linked list.\n",{"type":440,"tag":468,"props":651,"children":653},{"class":470,"line":652},3,[654],{"type":440,"tag":468,"props":655,"children":656},{"style":638},[657],{"type":445,"value":658}," * function ListNode(val, next) {\n",{"type":440,"tag":468,"props":660,"children":662},{"class":470,"line":661},4,[663],{"type":440,"tag":468,"props":664,"children":665},{"style":638},[666],{"type":445,"value":667}," *     this.val = (val===undefined ? 0 : val)\n",{"type":440,"tag":468,"props":669,"children":671},{"class":470,"line":670},5,[672],{"type":440,"tag":468,"props":673,"children":674},{"style":638},[675],{"type":445,"value":676}," *     this.next = (next===undefined ? null : next)\n",{"type":440,"tag":468,"props":678,"children":680},{"class":470,"line":679},6,[681],{"type":440,"tag":468,"props":682,"children":683},{"style":638},[684],{"type":445,"value":685}," * }\n",{"type":440,"tag":468,"props":687,"children":689},{"class":470,"line":688},7,[690],{"type":440,"tag":468,"props":691,"children":692},{"style":638},[693],{"type":445,"value":694}," */\n",{"type":440,"tag":468,"props":696,"children":698},{"class":470,"line":697},8,[699],{"type":440,"tag":468,"props":700,"children":701},{"style":638},[702],{"type":445,"value":641},{"type":440,"tag":468,"props":704,"children":706},{"class":470,"line":705},9,[707,712,718,724],{"type":440,"tag":468,"props":708,"children":709},{"style":638},[710],{"type":445,"value":711}," * ",{"type":440,"tag":468,"props":713,"children":715},{"style":714},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[716],{"type":445,"value":717},"@param",{"type":440,"tag":468,"props":719,"children":721},{"style":720},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[722],{"type":445,"value":723}," {ListNode}",{"type":440,"tag":468,"props":725,"children":727},{"style":726},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[728],{"type":445,"value":729}," head\n",{"type":440,"tag":468,"props":731,"children":733},{"class":470,"line":732},10,[734,738,743],{"type":440,"tag":468,"props":735,"children":736},{"style":638},[737],{"type":445,"value":711},{"type":440,"tag":468,"props":739,"children":740},{"style":714},[741],{"type":445,"value":742},"@return",{"type":440,"tag":468,"props":744,"children":745},{"style":720},[746],{"type":445,"value":747}," {ListNode}\n",{"type":440,"tag":468,"props":749,"children":751},{"class":470,"line":750},11,[752],{"type":440,"tag":468,"props":753,"children":754},{"style":638},[755],{"type":445,"value":694},{"type":440,"tag":468,"props":757,"children":759},{"class":470,"line":758},12,[760,766,772,778,783,789,795],{"type":440,"tag":468,"props":761,"children":763},{"style":762},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[764],{"type":445,"value":765},"var",{"type":440,"tag":468,"props":767,"children":769},{"style":768},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[770],{"type":445,"value":771}," swapPairs",{"type":440,"tag":468,"props":773,"children":775},{"style":774},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[776],{"type":445,"value":777}," =",{"type":440,"tag":468,"props":779,"children":780},{"style":762},[781],{"type":445,"value":782}," function",{"type":440,"tag":468,"props":784,"children":786},{"style":785},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[787],{"type":445,"value":788}," (",{"type":440,"tag":468,"props":790,"children":792},{"style":791},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[793],{"type":445,"value":794},"head",{"type":440,"tag":468,"props":796,"children":797},{"style":785},[798],{"type":445,"value":799},") {\n",{"type":440,"tag":468,"props":801,"children":803},{"class":470,"line":802},13,[804,809,815,819,824,829,834],{"type":440,"tag":468,"props":805,"children":806},{"style":762},[807],{"type":445,"value":808},"  const",{"type":440,"tag":468,"props":810,"children":812},{"style":811},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[813],{"type":445,"value":814}," dummy",{"type":440,"tag":468,"props":816,"children":817},{"style":774},[818],{"type":445,"value":777},{"type":440,"tag":468,"props":820,"children":821},{"style":774},[822],{"type":445,"value":823}," new",{"type":440,"tag":468,"props":825,"children":826},{"style":768},[827],{"type":445,"value":828}," ListNode",{"type":440,"tag":468,"props":830,"children":831},{"style":785},[832],{"type":445,"value":833},"()",{"type":440,"tag":468,"props":835,"children":837},{"style":836},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[838],{"type":445,"value":839},";\n",{"type":440,"tag":468,"props":841,"children":843},{"class":470,"line":842},14,[844,849,855,860,864,869],{"type":440,"tag":468,"props":845,"children":846},{"style":811},[847],{"type":445,"value":848},"  dummy",{"type":440,"tag":468,"props":850,"children":852},{"style":851},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[853],{"type":445,"value":854},".",{"type":440,"tag":468,"props":856,"children":857},{"style":811},[858],{"type":445,"value":859},"next",{"type":440,"tag":468,"props":861,"children":862},{"style":774},[863],{"type":445,"value":777},{"type":440,"tag":468,"props":865,"children":866},{"style":811},[867],{"type":445,"value":868}," head",{"type":440,"tag":468,"props":870,"children":871},{"style":836},[872],{"type":445,"value":839},{"type":440,"tag":468,"props":874,"children":876},{"class":470,"line":875},15,[877,882,887,891,895],{"type":440,"tag":468,"props":878,"children":879},{"style":762},[880],{"type":445,"value":881},"  let",{"type":440,"tag":468,"props":883,"children":884},{"style":811},[885],{"type":445,"value":886}," current",{"type":440,"tag":468,"props":888,"children":889},{"style":774},[890],{"type":445,"value":777},{"type":440,"tag":468,"props":892,"children":893},{"style":811},[894],{"type":445,"value":814},{"type":440,"tag":468,"props":896,"children":897},{"style":836},[898],{"type":445,"value":839},{"type":440,"tag":468,"props":900,"children":902},{"class":470,"line":901},16,[903,909,913,918,922,926,931,935,939,943,947,951],{"type":440,"tag":468,"props":904,"children":906},{"style":905},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[907],{"type":445,"value":908},"  while",{"type":440,"tag":468,"props":910,"children":911},{"style":785},[912],{"type":445,"value":788},{"type":440,"tag":468,"props":914,"children":915},{"style":811},[916],{"type":445,"value":917},"current",{"type":440,"tag":468,"props":919,"children":920},{"style":851},[921],{"type":445,"value":854},{"type":440,"tag":468,"props":923,"children":924},{"style":811},[925],{"type":445,"value":859},{"type":440,"tag":468,"props":927,"children":928},{"style":774},[929],{"type":445,"value":930}," &&",{"type":440,"tag":468,"props":932,"children":933},{"style":811},[934],{"type":445,"value":886},{"type":440,"tag":468,"props":936,"children":937},{"style":851},[938],{"type":445,"value":854},{"type":440,"tag":468,"props":940,"children":941},{"style":811},[942],{"type":445,"value":859},{"type":440,"tag":468,"props":944,"children":945},{"style":851},[946],{"type":445,"value":854},{"type":440,"tag":468,"props":948,"children":949},{"style":811},[950],{"type":445,"value":859},{"type":440,"tag":468,"props":952,"children":953},{"style":785},[954],{"type":445,"value":799},{"type":440,"tag":468,"props":956,"children":958},{"class":470,"line":957},17,[959],{"type":440,"tag":468,"props":960,"children":961},{"style":638},[962],{"type":445,"value":963},"    // 初始化双指针\n",{"type":440,"tag":468,"props":965,"children":967},{"class":470,"line":966},18,[968,973,978,982,986,990,994],{"type":440,"tag":468,"props":969,"children":970},{"style":762},[971],{"type":445,"value":972},"    const",{"type":440,"tag":468,"props":974,"children":975},{"style":811},[976],{"type":445,"value":977}," first",{"type":440,"tag":468,"props":979,"children":980},{"style":774},[981],{"type":445,"value":777},{"type":440,"tag":468,"props":983,"children":984},{"style":811},[985],{"type":445,"value":886},{"type":440,"tag":468,"props":987,"children":988},{"style":851},[989],{"type":445,"value":854},{"type":440,"tag":468,"props":991,"children":992},{"style":811},[993],{"type":445,"value":859},{"type":440,"tag":468,"props":995,"children":996},{"style":836},[997],{"type":445,"value":839},{"type":440,"tag":468,"props":999,"children":1001},{"class":470,"line":1000},19,[1002,1006,1011,1015,1019,1023,1027,1031,1035],{"type":440,"tag":468,"props":1003,"children":1004},{"style":762},[1005],{"type":445,"value":972},{"type":440,"tag":468,"props":1007,"children":1008},{"style":811},[1009],{"type":445,"value":1010}," second",{"type":440,"tag":468,"props":1012,"children":1013},{"style":774},[1014],{"type":445,"value":777},{"type":440,"tag":468,"props":1016,"children":1017},{"style":811},[1018],{"type":445,"value":886},{"type":440,"tag":468,"props":1020,"children":1021},{"style":851},[1022],{"type":445,"value":854},{"type":440,"tag":468,"props":1024,"children":1025},{"style":811},[1026],{"type":445,"value":859},{"type":440,"tag":468,"props":1028,"children":1029},{"style":851},[1030],{"type":445,"value":854},{"type":440,"tag":468,"props":1032,"children":1033},{"style":811},[1034],{"type":445,"value":859},{"type":440,"tag":468,"props":1036,"children":1037},{"style":836},[1038],{"type":445,"value":839},{"type":440,"tag":468,"props":1040,"children":1042},{"class":470,"line":1041},20,[1043],{"type":440,"tag":468,"props":1044,"children":1046},{"emptyLinePlaceholder":1045},true,[1047],{"type":445,"value":1048},"\n",{"type":440,"tag":468,"props":1050,"children":1052},{"class":470,"line":1051},21,[1053],{"type":440,"tag":468,"props":1054,"children":1055},{"style":638},[1056],{"type":445,"value":1057},"    // 更新双指针和 current 指针\n",{"type":440,"tag":468,"props":1059,"children":1061},{"class":470,"line":1060},22,[1062,1067,1071,1075,1079,1083,1087,1091],{"type":440,"tag":468,"props":1063,"children":1064},{"style":811},[1065],{"type":445,"value":1066},"    first",{"type":440,"tag":468,"props":1068,"children":1069},{"style":851},[1070],{"type":445,"value":854},{"type":440,"tag":468,"props":1072,"children":1073},{"style":811},[1074],{"type":445,"value":859},{"type":440,"tag":468,"props":1076,"children":1077},{"style":774},[1078],{"type":445,"value":777},{"type":440,"tag":468,"props":1080,"children":1081},{"style":811},[1082],{"type":445,"value":1010},{"type":440,"tag":468,"props":1084,"children":1085},{"style":851},[1086],{"type":445,"value":854},{"type":440,"tag":468,"props":1088,"children":1089},{"style":811},[1090],{"type":445,"value":859},{"type":440,"tag":468,"props":1092,"children":1093},{"style":836},[1094],{"type":445,"value":839},{"type":440,"tag":468,"props":1096,"children":1098},{"class":470,"line":1097},23,[1099,1104,1108,1112,1116,1120],{"type":440,"tag":468,"props":1100,"children":1101},{"style":811},[1102],{"type":445,"value":1103},"    second",{"type":440,"tag":468,"props":1105,"children":1106},{"style":851},[1107],{"type":445,"value":854},{"type":440,"tag":468,"props":1109,"children":1110},{"style":811},[1111],{"type":445,"value":859},{"type":440,"tag":468,"props":1113,"children":1114},{"style":774},[1115],{"type":445,"value":777},{"type":440,"tag":468,"props":1117,"children":1118},{"style":811},[1119],{"type":445,"value":977},{"type":440,"tag":468,"props":1121,"children":1122},{"style":836},[1123],{"type":445,"value":839},{"type":440,"tag":468,"props":1125,"children":1127},{"class":470,"line":1126},24,[1128,1133,1137,1141,1145,1149],{"type":440,"tag":468,"props":1129,"children":1130},{"style":811},[1131],{"type":445,"value":1132},"    current",{"type":440,"tag":468,"props":1134,"children":1135},{"style":851},[1136],{"type":445,"value":854},{"type":440,"tag":468,"props":1138,"children":1139},{"style":811},[1140],{"type":445,"value":859},{"type":440,"tag":468,"props":1142,"children":1143},{"style":774},[1144],{"type":445,"value":777},{"type":440,"tag":468,"props":1146,"children":1147},{"style":811},[1148],{"type":445,"value":1010},{"type":440,"tag":468,"props":1150,"children":1151},{"style":836},[1152],{"type":445,"value":839},{"type":440,"tag":468,"props":1154,"children":1156},{"class":470,"line":1155},25,[1157],{"type":440,"tag":468,"props":1158,"children":1159},{"emptyLinePlaceholder":1045},[1160],{"type":445,"value":1048},{"type":440,"tag":468,"props":1162,"children":1164},{"class":470,"line":1163},26,[1165],{"type":440,"tag":468,"props":1166,"children":1167},{"style":638},[1168],{"type":445,"value":1169},"    // 指针移动\n",{"type":440,"tag":468,"props":1171,"children":1173},{"class":470,"line":1172},27,[1174,1178,1182,1186,1190,1194,1198,1202],{"type":440,"tag":468,"props":1175,"children":1176},{"style":811},[1177],{"type":445,"value":1132},{"type":440,"tag":468,"props":1179,"children":1180},{"style":774},[1181],{"type":445,"value":777},{"type":440,"tag":468,"props":1183,"children":1184},{"style":811},[1185],{"type":445,"value":886},{"type":440,"tag":468,"props":1187,"children":1188},{"style":851},[1189],{"type":445,"value":854},{"type":440,"tag":468,"props":1191,"children":1192},{"style":811},[1193],{"type":445,"value":859},{"type":440,"tag":468,"props":1195,"children":1196},{"style":851},[1197],{"type":445,"value":854},{"type":440,"tag":468,"props":1199,"children":1200},{"style":811},[1201],{"type":445,"value":859},{"type":440,"tag":468,"props":1203,"children":1204},{"style":836},[1205],{"type":445,"value":839},{"type":440,"tag":468,"props":1207,"children":1209},{"class":470,"line":1208},28,[1210],{"type":440,"tag":468,"props":1211,"children":1212},{"style":785},[1213],{"type":445,"value":1214},"  }\n",{"type":440,"tag":468,"props":1216,"children":1218},{"class":470,"line":1217},29,[1219,1224,1228,1232,1236],{"type":440,"tag":468,"props":1220,"children":1221},{"style":905},[1222],{"type":445,"value":1223},"  return",{"type":440,"tag":468,"props":1225,"children":1226},{"style":811},[1227],{"type":445,"value":814},{"type":440,"tag":468,"props":1229,"children":1230},{"style":851},[1231],{"type":445,"value":854},{"type":440,"tag":468,"props":1233,"children":1234},{"style":811},[1235],{"type":445,"value":859},{"type":440,"tag":468,"props":1237,"children":1238},{"style":836},[1239],{"type":445,"value":839},{"type":440,"tag":468,"props":1241,"children":1243},{"class":470,"line":1242},30,[1244,1249],{"type":440,"tag":468,"props":1245,"children":1246},{"style":785},[1247],{"type":445,"value":1248},"}",{"type":440,"tag":468,"props":1250,"children":1251},{"style":836},[1252],{"type":445,"value":839},{"type":440,"tag":1254,"props":1255,"children":1256},"style",{},[1257],{"type":445,"value":1258},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":433,"searchDepth":670,"depth":670,"links":1260},[1261,1262],{"id":566,"depth":480,"text":566},{"id":571,"depth":480,"text":571,"children":1263},[1264],{"id":577,"depth":652,"text":577},"markdown","content:1.algorithm:3.leetcode:24.swap-nodes-in-pairs.md","content","1.algorithm/3.leetcode/24.swap-nodes-in-pairs.md","md",[1271,1273],{"_path":65,"title":64,"description":1272},"给你一个链表数组，每个链表都已经按升序排列。",{"_path":71,"title":70,"description":1274},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",1713426810328]