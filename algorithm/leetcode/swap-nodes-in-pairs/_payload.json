[{"data":1,"prerenderedAt":1269},["Reactive",2],{"navigation":3,"/algorithm/leetcode/swap-nodes-in-pairs":424,"/algorithm/leetcode/swap-nodes-in-pairs-surround":1264},[4,237,265,403,410],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,396],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"随机数","/frontend-code-assessment/scene/random-number",{"title":382,"_path":383},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":385,"_path":386},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":388,"_path":389},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":391,"_path":392},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":394,"_path":395},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":397,"_path":398,"children":399},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[400],{"title":401,"_path":402},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":404,"_path":405,"children":406},"项目","/pro",[407],{"title":408,"_path":409},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":411,"_path":412,"children":413},"后端语言","/backend-languages",[414],{"title":415,"_path":416,"children":417},"Python","/backend-languages/python",[418,421],{"title":419,"_path":420},"基础","/backend-languages/python/base",{"title":422,"_path":423},"函数","/backend-languages/python/function",{"_path":68,"_dir":425,"_draft":426,"_partial":426,"_locale":427,"title":67,"description":428,"url":429,"body":430,"_type":1259,"_id":1260,"_source":1261,"_file":1262,"_extension":1263},"leetcode",false,"","给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。","https://leetcode.cn/problems/swap-nodes-in-pairs",{"type":431,"children":432,"toc":1253},"root",[433,440,451,481,486,509,514,537,542,557,563,568,574,579,618,1247],{"type":434,"tag":435,"props":436,"children":437},"element","p",{},[438],{"type":439,"value":428},"text",{"type":434,"tag":435,"props":441,"children":442},{},[443,445],{"type":439,"value":444},"示例 1：\n",{"type":434,"tag":446,"props":447,"children":450},"img",{"alt":448,"src":449},"swap_ex1","/img/code_leetcode_No.24_swap_ex1.png",[],{"type":434,"tag":452,"props":453,"children":456},"pre",{"className":454,"code":455,"language":439,"meta":427,"style":427},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：head = [1,2,3,4]\n输出：[2,1,4,3]\n",[457],{"type":434,"tag":458,"props":459,"children":460},"code",{"__ignoreMap":427},[461,472],{"type":434,"tag":462,"props":463,"children":466},"span",{"class":464,"line":465},"line",1,[467],{"type":434,"tag":462,"props":468,"children":469},{},[470],{"type":439,"value":471},"输入：head = [1,2,3,4]\n",{"type":434,"tag":462,"props":473,"children":475},{"class":464,"line":474},2,[476],{"type":434,"tag":462,"props":477,"children":478},{},[479],{"type":439,"value":480},"输出：[2,1,4,3]\n",{"type":434,"tag":435,"props":482,"children":483},{},[484],{"type":439,"value":485},"示例 2：",{"type":434,"tag":452,"props":487,"children":489},{"className":454,"code":488,"language":439,"meta":427,"style":427},"输入：head = []\n输出：[]\n",[490],{"type":434,"tag":458,"props":491,"children":492},{"__ignoreMap":427},[493,501],{"type":434,"tag":462,"props":494,"children":495},{"class":464,"line":465},[496],{"type":434,"tag":462,"props":497,"children":498},{},[499],{"type":439,"value":500},"输入：head = []\n",{"type":434,"tag":462,"props":502,"children":503},{"class":464,"line":474},[504],{"type":434,"tag":462,"props":505,"children":506},{},[507],{"type":439,"value":508},"输出：[]\n",{"type":434,"tag":435,"props":510,"children":511},{},[512],{"type":439,"value":513},"示例 3：",{"type":434,"tag":452,"props":515,"children":517},{"className":454,"code":516,"language":439,"meta":427,"style":427},"输入：head = [1]\n输出：[1]\n",[518],{"type":434,"tag":458,"props":519,"children":520},{"__ignoreMap":427},[521,529],{"type":434,"tag":462,"props":522,"children":523},{"class":464,"line":465},[524],{"type":434,"tag":462,"props":525,"children":526},{},[527],{"type":439,"value":528},"输入：head = [1]\n",{"type":434,"tag":462,"props":530,"children":531},{"class":464,"line":474},[532],{"type":434,"tag":462,"props":533,"children":534},{},[535],{"type":439,"value":536},"输出：[1]\n",{"type":434,"tag":435,"props":538,"children":539},{},[540],{"type":439,"value":541},"提示：",{"type":434,"tag":543,"props":544,"children":545},"ul",{},[546,552],{"type":434,"tag":547,"props":548,"children":549},"li",{},[550],{"type":439,"value":551},"链表中节点的数目在范围 [0, 100] 内",{"type":434,"tag":547,"props":553,"children":554},{},[555],{"type":439,"value":556},"0 \u003C= Node.val \u003C= 100",{"type":434,"tag":558,"props":559,"children":561},"h2",{"id":560},"解题思路",[562],{"type":439,"value":560},{"type":434,"tag":558,"props":564,"children":566},{"id":565},"实现",[567],{"type":439,"value":565},{"type":434,"tag":569,"props":570,"children":572},"h3",{"id":571},"双指针",[573],{"type":439,"value":571},{"type":434,"tag":435,"props":575,"children":576},{},[577],{"type":439,"value":578},"设置一个 dummy 节点简化操作，dummy.next 指向 head",{"type":434,"tag":580,"props":581,"children":582},"ol",{},[583,588,593,598,603,608,613],{"type":434,"tag":547,"props":584,"children":585},{},[586],{"type":439,"value":587},"初始化 first 为第一个节点",{"type":434,"tag":547,"props":589,"children":590},{},[591],{"type":439,"value":592},"初始化 second 为第二个节点",{"type":434,"tag":547,"props":594,"children":595},{},[596],{"type":439,"value":597},"初始化 current 为 dummy",{"type":434,"tag":547,"props":599,"children":600},{},[601],{"type":439,"value":602},"first.next = second.next",{"type":434,"tag":547,"props":604,"children":605},{},[606],{"type":439,"value":607},"current.next = second",{"type":434,"tag":547,"props":609,"children":610},{},[611],{"type":439,"value":612},"current 移动 2 格",{"type":434,"tag":547,"props":614,"children":615},{},[616],{"type":439,"value":617},"重复执行",{"type":434,"tag":452,"props":619,"children":623},{"className":620,"code":621,"language":622,"meta":427,"style":427},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar swapPairs = function (head) {\n  const dummy = new ListNode();\n  dummy.next = head;\n  let current = dummy;\n  while (current.next && current.next.next) {\n    // 初始化双指针\n    const first = current.next;\n    const second = current.next.next;\n\n    // 更新双指针和 current 指针\n    first.next = second.next;\n    second.next = first;\n    current.next = second;\n\n    // 指针移动\n    current = current.next.next;\n  }\n  return dummy.next;\n};\n","js",[624],{"type":434,"tag":458,"props":625,"children":626},{"__ignoreMap":427},[627,636,644,653,662,671,680,689,697,724,742,750,794,834,867,893,949,958,992,1033,1043,1052,1089,1118,1147,1155,1164,1200,1209,1234],{"type":434,"tag":462,"props":628,"children":629},{"class":464,"line":465},[630],{"type":434,"tag":462,"props":631,"children":633},{"style":632},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[634],{"type":439,"value":635},"/**\n",{"type":434,"tag":462,"props":637,"children":638},{"class":464,"line":474},[639],{"type":434,"tag":462,"props":640,"children":641},{"style":632},[642],{"type":439,"value":643}," * Definition for singly-linked list.\n",{"type":434,"tag":462,"props":645,"children":647},{"class":464,"line":646},3,[648],{"type":434,"tag":462,"props":649,"children":650},{"style":632},[651],{"type":439,"value":652}," * function ListNode(val, next) {\n",{"type":434,"tag":462,"props":654,"children":656},{"class":464,"line":655},4,[657],{"type":434,"tag":462,"props":658,"children":659},{"style":632},[660],{"type":439,"value":661}," *     this.val = (val===undefined ? 0 : val)\n",{"type":434,"tag":462,"props":663,"children":665},{"class":464,"line":664},5,[666],{"type":434,"tag":462,"props":667,"children":668},{"style":632},[669],{"type":439,"value":670}," *     this.next = (next===undefined ? null : next)\n",{"type":434,"tag":462,"props":672,"children":674},{"class":464,"line":673},6,[675],{"type":434,"tag":462,"props":676,"children":677},{"style":632},[678],{"type":439,"value":679}," * }\n",{"type":434,"tag":462,"props":681,"children":683},{"class":464,"line":682},7,[684],{"type":434,"tag":462,"props":685,"children":686},{"style":632},[687],{"type":439,"value":688}," */\n",{"type":434,"tag":462,"props":690,"children":692},{"class":464,"line":691},8,[693],{"type":434,"tag":462,"props":694,"children":695},{"style":632},[696],{"type":439,"value":635},{"type":434,"tag":462,"props":698,"children":700},{"class":464,"line":699},9,[701,706,712,718],{"type":434,"tag":462,"props":702,"children":703},{"style":632},[704],{"type":439,"value":705}," * ",{"type":434,"tag":462,"props":707,"children":709},{"style":708},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[710],{"type":439,"value":711},"@param",{"type":434,"tag":462,"props":713,"children":715},{"style":714},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[716],{"type":439,"value":717}," {ListNode}",{"type":434,"tag":462,"props":719,"children":721},{"style":720},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[722],{"type":439,"value":723}," head\n",{"type":434,"tag":462,"props":725,"children":727},{"class":464,"line":726},10,[728,732,737],{"type":434,"tag":462,"props":729,"children":730},{"style":632},[731],{"type":439,"value":705},{"type":434,"tag":462,"props":733,"children":734},{"style":708},[735],{"type":439,"value":736},"@return",{"type":434,"tag":462,"props":738,"children":739},{"style":714},[740],{"type":439,"value":741}," {ListNode}\n",{"type":434,"tag":462,"props":743,"children":745},{"class":464,"line":744},11,[746],{"type":434,"tag":462,"props":747,"children":748},{"style":632},[749],{"type":439,"value":688},{"type":434,"tag":462,"props":751,"children":753},{"class":464,"line":752},12,[754,760,766,772,777,783,789],{"type":434,"tag":462,"props":755,"children":757},{"style":756},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[758],{"type":439,"value":759},"var",{"type":434,"tag":462,"props":761,"children":763},{"style":762},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[764],{"type":439,"value":765}," swapPairs",{"type":434,"tag":462,"props":767,"children":769},{"style":768},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[770],{"type":439,"value":771}," =",{"type":434,"tag":462,"props":773,"children":774},{"style":756},[775],{"type":439,"value":776}," function",{"type":434,"tag":462,"props":778,"children":780},{"style":779},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[781],{"type":439,"value":782}," (",{"type":434,"tag":462,"props":784,"children":786},{"style":785},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[787],{"type":439,"value":788},"head",{"type":434,"tag":462,"props":790,"children":791},{"style":779},[792],{"type":439,"value":793},") {\n",{"type":434,"tag":462,"props":795,"children":797},{"class":464,"line":796},13,[798,803,809,813,818,823,828],{"type":434,"tag":462,"props":799,"children":800},{"style":756},[801],{"type":439,"value":802},"  const",{"type":434,"tag":462,"props":804,"children":806},{"style":805},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[807],{"type":439,"value":808}," dummy",{"type":434,"tag":462,"props":810,"children":811},{"style":768},[812],{"type":439,"value":771},{"type":434,"tag":462,"props":814,"children":815},{"style":768},[816],{"type":439,"value":817}," new",{"type":434,"tag":462,"props":819,"children":820},{"style":762},[821],{"type":439,"value":822}," ListNode",{"type":434,"tag":462,"props":824,"children":825},{"style":779},[826],{"type":439,"value":827},"()",{"type":434,"tag":462,"props":829,"children":831},{"style":830},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[832],{"type":439,"value":833},";\n",{"type":434,"tag":462,"props":835,"children":837},{"class":464,"line":836},14,[838,843,849,854,858,863],{"type":434,"tag":462,"props":839,"children":840},{"style":805},[841],{"type":439,"value":842},"  dummy",{"type":434,"tag":462,"props":844,"children":846},{"style":845},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[847],{"type":439,"value":848},".",{"type":434,"tag":462,"props":850,"children":851},{"style":805},[852],{"type":439,"value":853},"next",{"type":434,"tag":462,"props":855,"children":856},{"style":768},[857],{"type":439,"value":771},{"type":434,"tag":462,"props":859,"children":860},{"style":805},[861],{"type":439,"value":862}," head",{"type":434,"tag":462,"props":864,"children":865},{"style":830},[866],{"type":439,"value":833},{"type":434,"tag":462,"props":868,"children":870},{"class":464,"line":869},15,[871,876,881,885,889],{"type":434,"tag":462,"props":872,"children":873},{"style":756},[874],{"type":439,"value":875},"  let",{"type":434,"tag":462,"props":877,"children":878},{"style":805},[879],{"type":439,"value":880}," current",{"type":434,"tag":462,"props":882,"children":883},{"style":768},[884],{"type":439,"value":771},{"type":434,"tag":462,"props":886,"children":887},{"style":805},[888],{"type":439,"value":808},{"type":434,"tag":462,"props":890,"children":891},{"style":830},[892],{"type":439,"value":833},{"type":434,"tag":462,"props":894,"children":896},{"class":464,"line":895},16,[897,903,907,912,916,920,925,929,933,937,941,945],{"type":434,"tag":462,"props":898,"children":900},{"style":899},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[901],{"type":439,"value":902},"  while",{"type":434,"tag":462,"props":904,"children":905},{"style":779},[906],{"type":439,"value":782},{"type":434,"tag":462,"props":908,"children":909},{"style":805},[910],{"type":439,"value":911},"current",{"type":434,"tag":462,"props":913,"children":914},{"style":845},[915],{"type":439,"value":848},{"type":434,"tag":462,"props":917,"children":918},{"style":805},[919],{"type":439,"value":853},{"type":434,"tag":462,"props":921,"children":922},{"style":768},[923],{"type":439,"value":924}," &&",{"type":434,"tag":462,"props":926,"children":927},{"style":805},[928],{"type":439,"value":880},{"type":434,"tag":462,"props":930,"children":931},{"style":845},[932],{"type":439,"value":848},{"type":434,"tag":462,"props":934,"children":935},{"style":805},[936],{"type":439,"value":853},{"type":434,"tag":462,"props":938,"children":939},{"style":845},[940],{"type":439,"value":848},{"type":434,"tag":462,"props":942,"children":943},{"style":805},[944],{"type":439,"value":853},{"type":434,"tag":462,"props":946,"children":947},{"style":779},[948],{"type":439,"value":793},{"type":434,"tag":462,"props":950,"children":952},{"class":464,"line":951},17,[953],{"type":434,"tag":462,"props":954,"children":955},{"style":632},[956],{"type":439,"value":957},"    // 初始化双指针\n",{"type":434,"tag":462,"props":959,"children":961},{"class":464,"line":960},18,[962,967,972,976,980,984,988],{"type":434,"tag":462,"props":963,"children":964},{"style":756},[965],{"type":439,"value":966},"    const",{"type":434,"tag":462,"props":968,"children":969},{"style":805},[970],{"type":439,"value":971}," first",{"type":434,"tag":462,"props":973,"children":974},{"style":768},[975],{"type":439,"value":771},{"type":434,"tag":462,"props":977,"children":978},{"style":805},[979],{"type":439,"value":880},{"type":434,"tag":462,"props":981,"children":982},{"style":845},[983],{"type":439,"value":848},{"type":434,"tag":462,"props":985,"children":986},{"style":805},[987],{"type":439,"value":853},{"type":434,"tag":462,"props":989,"children":990},{"style":830},[991],{"type":439,"value":833},{"type":434,"tag":462,"props":993,"children":995},{"class":464,"line":994},19,[996,1000,1005,1009,1013,1017,1021,1025,1029],{"type":434,"tag":462,"props":997,"children":998},{"style":756},[999],{"type":439,"value":966},{"type":434,"tag":462,"props":1001,"children":1002},{"style":805},[1003],{"type":439,"value":1004}," second",{"type":434,"tag":462,"props":1006,"children":1007},{"style":768},[1008],{"type":439,"value":771},{"type":434,"tag":462,"props":1010,"children":1011},{"style":805},[1012],{"type":439,"value":880},{"type":434,"tag":462,"props":1014,"children":1015},{"style":845},[1016],{"type":439,"value":848},{"type":434,"tag":462,"props":1018,"children":1019},{"style":805},[1020],{"type":439,"value":853},{"type":434,"tag":462,"props":1022,"children":1023},{"style":845},[1024],{"type":439,"value":848},{"type":434,"tag":462,"props":1026,"children":1027},{"style":805},[1028],{"type":439,"value":853},{"type":434,"tag":462,"props":1030,"children":1031},{"style":830},[1032],{"type":439,"value":833},{"type":434,"tag":462,"props":1034,"children":1036},{"class":464,"line":1035},20,[1037],{"type":434,"tag":462,"props":1038,"children":1040},{"emptyLinePlaceholder":1039},true,[1041],{"type":439,"value":1042},"\n",{"type":434,"tag":462,"props":1044,"children":1046},{"class":464,"line":1045},21,[1047],{"type":434,"tag":462,"props":1048,"children":1049},{"style":632},[1050],{"type":439,"value":1051},"    // 更新双指针和 current 指针\n",{"type":434,"tag":462,"props":1053,"children":1055},{"class":464,"line":1054},22,[1056,1061,1065,1069,1073,1077,1081,1085],{"type":434,"tag":462,"props":1057,"children":1058},{"style":805},[1059],{"type":439,"value":1060},"    first",{"type":434,"tag":462,"props":1062,"children":1063},{"style":845},[1064],{"type":439,"value":848},{"type":434,"tag":462,"props":1066,"children":1067},{"style":805},[1068],{"type":439,"value":853},{"type":434,"tag":462,"props":1070,"children":1071},{"style":768},[1072],{"type":439,"value":771},{"type":434,"tag":462,"props":1074,"children":1075},{"style":805},[1076],{"type":439,"value":1004},{"type":434,"tag":462,"props":1078,"children":1079},{"style":845},[1080],{"type":439,"value":848},{"type":434,"tag":462,"props":1082,"children":1083},{"style":805},[1084],{"type":439,"value":853},{"type":434,"tag":462,"props":1086,"children":1087},{"style":830},[1088],{"type":439,"value":833},{"type":434,"tag":462,"props":1090,"children":1092},{"class":464,"line":1091},23,[1093,1098,1102,1106,1110,1114],{"type":434,"tag":462,"props":1094,"children":1095},{"style":805},[1096],{"type":439,"value":1097},"    second",{"type":434,"tag":462,"props":1099,"children":1100},{"style":845},[1101],{"type":439,"value":848},{"type":434,"tag":462,"props":1103,"children":1104},{"style":805},[1105],{"type":439,"value":853},{"type":434,"tag":462,"props":1107,"children":1108},{"style":768},[1109],{"type":439,"value":771},{"type":434,"tag":462,"props":1111,"children":1112},{"style":805},[1113],{"type":439,"value":971},{"type":434,"tag":462,"props":1115,"children":1116},{"style":830},[1117],{"type":439,"value":833},{"type":434,"tag":462,"props":1119,"children":1121},{"class":464,"line":1120},24,[1122,1127,1131,1135,1139,1143],{"type":434,"tag":462,"props":1123,"children":1124},{"style":805},[1125],{"type":439,"value":1126},"    current",{"type":434,"tag":462,"props":1128,"children":1129},{"style":845},[1130],{"type":439,"value":848},{"type":434,"tag":462,"props":1132,"children":1133},{"style":805},[1134],{"type":439,"value":853},{"type":434,"tag":462,"props":1136,"children":1137},{"style":768},[1138],{"type":439,"value":771},{"type":434,"tag":462,"props":1140,"children":1141},{"style":805},[1142],{"type":439,"value":1004},{"type":434,"tag":462,"props":1144,"children":1145},{"style":830},[1146],{"type":439,"value":833},{"type":434,"tag":462,"props":1148,"children":1150},{"class":464,"line":1149},25,[1151],{"type":434,"tag":462,"props":1152,"children":1153},{"emptyLinePlaceholder":1039},[1154],{"type":439,"value":1042},{"type":434,"tag":462,"props":1156,"children":1158},{"class":464,"line":1157},26,[1159],{"type":434,"tag":462,"props":1160,"children":1161},{"style":632},[1162],{"type":439,"value":1163},"    // 指针移动\n",{"type":434,"tag":462,"props":1165,"children":1167},{"class":464,"line":1166},27,[1168,1172,1176,1180,1184,1188,1192,1196],{"type":434,"tag":462,"props":1169,"children":1170},{"style":805},[1171],{"type":439,"value":1126},{"type":434,"tag":462,"props":1173,"children":1174},{"style":768},[1175],{"type":439,"value":771},{"type":434,"tag":462,"props":1177,"children":1178},{"style":805},[1179],{"type":439,"value":880},{"type":434,"tag":462,"props":1181,"children":1182},{"style":845},[1183],{"type":439,"value":848},{"type":434,"tag":462,"props":1185,"children":1186},{"style":805},[1187],{"type":439,"value":853},{"type":434,"tag":462,"props":1189,"children":1190},{"style":845},[1191],{"type":439,"value":848},{"type":434,"tag":462,"props":1193,"children":1194},{"style":805},[1195],{"type":439,"value":853},{"type":434,"tag":462,"props":1197,"children":1198},{"style":830},[1199],{"type":439,"value":833},{"type":434,"tag":462,"props":1201,"children":1203},{"class":464,"line":1202},28,[1204],{"type":434,"tag":462,"props":1205,"children":1206},{"style":779},[1207],{"type":439,"value":1208},"  }\n",{"type":434,"tag":462,"props":1210,"children":1212},{"class":464,"line":1211},29,[1213,1218,1222,1226,1230],{"type":434,"tag":462,"props":1214,"children":1215},{"style":899},[1216],{"type":439,"value":1217},"  return",{"type":434,"tag":462,"props":1219,"children":1220},{"style":805},[1221],{"type":439,"value":808},{"type":434,"tag":462,"props":1223,"children":1224},{"style":845},[1225],{"type":439,"value":848},{"type":434,"tag":462,"props":1227,"children":1228},{"style":805},[1229],{"type":439,"value":853},{"type":434,"tag":462,"props":1231,"children":1232},{"style":830},[1233],{"type":439,"value":833},{"type":434,"tag":462,"props":1235,"children":1237},{"class":464,"line":1236},30,[1238,1243],{"type":434,"tag":462,"props":1239,"children":1240},{"style":779},[1241],{"type":439,"value":1242},"}",{"type":434,"tag":462,"props":1244,"children":1245},{"style":830},[1246],{"type":439,"value":833},{"type":434,"tag":1248,"props":1249,"children":1250},"style",{},[1251],{"type":439,"value":1252},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":427,"searchDepth":664,"depth":664,"links":1254},[1255,1256],{"id":560,"depth":474,"text":560},{"id":565,"depth":474,"text":565,"children":1257},[1258],{"id":571,"depth":646,"text":571},"markdown","content:1.algorithm:3.leetcode:24.swap-nodes-in-pairs.md","content","1.algorithm/3.leetcode/24.swap-nodes-in-pairs.md","md",[1265,1267],{"_path":65,"title":64,"description":1266},"给你一个链表数组，每个链表都已经按升序排列。",{"_path":71,"title":70,"description":1268},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",1713339870765]