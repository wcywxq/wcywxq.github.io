[{"data":1,"prerenderedAt":1252},["Reactive",2],{"navigation":3,"/algorithm/leetcode/increasing-triplet-subsequence":427,"/algorithm/leetcode/increasing-triplet-subsequence-surround":1247},[4,237,265,406,413],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,399],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":382,"_path":383},"随机数","/frontend-code-assessment/scene/random-number",{"title":385,"_path":386},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":388,"_path":389},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":391,"_path":392},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":394,"_path":395},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":397,"_path":398},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":400,"_path":401,"children":402},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[403],{"title":404,"_path":405},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":407,"_path":408,"children":409},"项目","/pro",[410],{"title":411,"_path":412},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":414,"_path":415,"children":416},"后端语言","/backend-languages",[417],{"title":418,"_path":419,"children":420},"Python","/backend-languages/python",[421,424],{"title":422,"_path":423},"基础","/backend-languages/python/base",{"title":425,"_path":426},"函数","/backend-languages/python/function",{"_path":191,"_dir":428,"_draft":429,"_partial":429,"_locale":430,"title":190,"description":431,"url":432,"body":433,"_type":1242,"_id":1243,"_source":1244,"_file":1245,"_extension":1246},"leetcode",false,"","给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。","https://leetcode.cn/problems/increasing-triplet-subsequence",{"type":434,"children":435,"toc":1236},"root",[436,443,448,453,492,497,528,533,563,568,583,588,594,599,605,1230],{"type":437,"tag":438,"props":439,"children":440},"element","p",{},[441],{"type":442,"value":431},"text",{"type":437,"tag":438,"props":444,"children":445},{},[446],{"type":442,"value":447},"如果存在这样的三元组下标 (i, j, k) 且满足 i \u003C j \u003C k ，使得 nums[i] \u003C nums[j] \u003C nums[k] ，返回 true ；否则，返回 false 。",{"type":437,"tag":438,"props":449,"children":450},{},[451],{"type":442,"value":452},"示例 1：",{"type":437,"tag":454,"props":455,"children":458},"pre",{"className":456,"code":457,"language":442,"meta":430,"style":430},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3,4,5]\n输出：true\n解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",[459],{"type":437,"tag":460,"props":461,"children":462},"code",{"__ignoreMap":430},[463,474,483],{"type":437,"tag":464,"props":465,"children":468},"span",{"class":466,"line":467},"line",1,[469],{"type":437,"tag":464,"props":470,"children":471},{},[472],{"type":442,"value":473},"输入：nums = [1,2,3,4,5]\n",{"type":437,"tag":464,"props":475,"children":477},{"class":466,"line":476},2,[478],{"type":437,"tag":464,"props":479,"children":480},{},[481],{"type":442,"value":482},"输出：true\n",{"type":437,"tag":464,"props":484,"children":486},{"class":466,"line":485},3,[487],{"type":437,"tag":464,"props":488,"children":489},{},[490],{"type":442,"value":491},"解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",{"type":437,"tag":438,"props":493,"children":494},{},[495],{"type":442,"value":496},"示例 2：",{"type":437,"tag":454,"props":498,"children":500},{"className":456,"code":499,"language":442,"meta":430,"style":430},"输入：nums = [5,4,3,2,1]\n输出：false\n解释：不存在满足题意的三元组\n",[501],{"type":437,"tag":460,"props":502,"children":503},{"__ignoreMap":430},[504,512,520],{"type":437,"tag":464,"props":505,"children":506},{"class":466,"line":467},[507],{"type":437,"tag":464,"props":508,"children":509},{},[510],{"type":442,"value":511},"输入：nums = [5,4,3,2,1]\n",{"type":437,"tag":464,"props":513,"children":514},{"class":466,"line":476},[515],{"type":437,"tag":464,"props":516,"children":517},{},[518],{"type":442,"value":519},"输出：false\n",{"type":437,"tag":464,"props":521,"children":522},{"class":466,"line":485},[523],{"type":437,"tag":464,"props":524,"children":525},{},[526],{"type":442,"value":527},"解释：不存在满足题意的三元组\n",{"type":437,"tag":438,"props":529,"children":530},{},[531],{"type":442,"value":532},"示例 3：",{"type":437,"tag":454,"props":534,"children":536},{"className":456,"code":535,"language":442,"meta":430,"style":430},"输入：nums = [2,1,5,0,4,6]\n输出：true\n解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",[537],{"type":437,"tag":460,"props":538,"children":539},{"__ignoreMap":430},[540,548,555],{"type":437,"tag":464,"props":541,"children":542},{"class":466,"line":467},[543],{"type":437,"tag":464,"props":544,"children":545},{},[546],{"type":442,"value":547},"输入：nums = [2,1,5,0,4,6]\n",{"type":437,"tag":464,"props":549,"children":550},{"class":466,"line":476},[551],{"type":437,"tag":464,"props":552,"children":553},{},[554],{"type":442,"value":482},{"type":437,"tag":464,"props":556,"children":557},{"class":466,"line":485},[558],{"type":437,"tag":464,"props":559,"children":560},{},[561],{"type":442,"value":562},"解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",{"type":437,"tag":438,"props":564,"children":565},{},[566],{"type":442,"value":567},"提示：",{"type":437,"tag":569,"props":570,"children":571},"ul",{},[572,578],{"type":437,"tag":573,"props":574,"children":575},"li",{},[576],{"type":442,"value":577},"1 \u003C= nums.length \u003C= 5 * 10^5",{"type":437,"tag":573,"props":579,"children":580},{},[581],{"type":442,"value":582},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":437,"tag":438,"props":584,"children":585},{},[586],{"type":442,"value":587},"进阶：你能实现时间复杂度为 O(n) ，空间复杂度为 O(1) 的解决方案吗？",{"type":437,"tag":589,"props":590,"children":592},"h2",{"id":591},"解题思路",[593],{"type":442,"value":591},{"type":437,"tag":589,"props":595,"children":597},{"id":596},"实现",[598],{"type":442,"value":596},{"type":437,"tag":600,"props":601,"children":603},"h3",{"id":602},"贪心",[604],{"type":442,"value":602},{"type":437,"tag":454,"props":606,"children":610},{"className":607,"code":608,"language":609,"meta":430,"style":430},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar increasingTriplet = function (nums) {\n  // 维护两个变量，代表递增序列中的第一个数、第二个数\n  let len = nums.length;\n  if (len \u003C 3) return false;\n  let first = nums[0];\n  let second = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i \u003C len; i++) {\n    if (nums[i] > second) {\n      // 找到第三个数\n      return true;\n    } else if (nums[i] > first) {\n      // 更新第二个数\n      second = nums[i];\n    } else {\n      // 更新第一个数\n      first = nums[i];\n    }\n  }\n  return false;\n};\n","js",[611],{"type":437,"tag":460,"props":612,"children":613},{"__ignoreMap":430},[614,623,649,666,675,719,728,769,818,858,893,959,1003,1012,1030,1081,1090,1123,1140,1149,1182,1191,1200,1217],{"type":437,"tag":464,"props":615,"children":616},{"class":466,"line":467},[617],{"type":437,"tag":464,"props":618,"children":620},{"style":619},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[621],{"type":442,"value":622},"/**\n",{"type":437,"tag":464,"props":624,"children":625},{"class":466,"line":476},[626,631,637,643],{"type":437,"tag":464,"props":627,"children":628},{"style":619},[629],{"type":442,"value":630}," * ",{"type":437,"tag":464,"props":632,"children":634},{"style":633},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[635],{"type":442,"value":636},"@param",{"type":437,"tag":464,"props":638,"children":640},{"style":639},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[641],{"type":442,"value":642}," {number[]}",{"type":437,"tag":464,"props":644,"children":646},{"style":645},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[647],{"type":442,"value":648}," nums\n",{"type":437,"tag":464,"props":650,"children":651},{"class":466,"line":485},[652,656,661],{"type":437,"tag":464,"props":653,"children":654},{"style":619},[655],{"type":442,"value":630},{"type":437,"tag":464,"props":657,"children":658},{"style":633},[659],{"type":442,"value":660},"@return",{"type":437,"tag":464,"props":662,"children":663},{"style":639},[664],{"type":442,"value":665}," {boolean}\n",{"type":437,"tag":464,"props":667,"children":669},{"class":466,"line":668},4,[670],{"type":437,"tag":464,"props":671,"children":672},{"style":619},[673],{"type":442,"value":674}," */\n",{"type":437,"tag":464,"props":676,"children":678},{"class":466,"line":677},5,[679,685,691,697,702,708,714],{"type":437,"tag":464,"props":680,"children":682},{"style":681},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[683],{"type":442,"value":684},"var",{"type":437,"tag":464,"props":686,"children":688},{"style":687},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[689],{"type":442,"value":690}," increasingTriplet",{"type":437,"tag":464,"props":692,"children":694},{"style":693},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[695],{"type":442,"value":696}," =",{"type":437,"tag":464,"props":698,"children":699},{"style":681},[700],{"type":442,"value":701}," function",{"type":437,"tag":464,"props":703,"children":705},{"style":704},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[706],{"type":442,"value":707}," (",{"type":437,"tag":464,"props":709,"children":711},{"style":710},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[712],{"type":442,"value":713},"nums",{"type":437,"tag":464,"props":715,"children":716},{"style":704},[717],{"type":442,"value":718},") {\n",{"type":437,"tag":464,"props":720,"children":722},{"class":466,"line":721},6,[723],{"type":437,"tag":464,"props":724,"children":725},{"style":619},[726],{"type":442,"value":727},"  // 维护两个变量，代表递增序列中的第一个数、第二个数\n",{"type":437,"tag":464,"props":729,"children":731},{"class":466,"line":730},7,[732,737,743,747,752,758,763],{"type":437,"tag":464,"props":733,"children":734},{"style":681},[735],{"type":442,"value":736},"  let",{"type":437,"tag":464,"props":738,"children":740},{"style":739},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[741],{"type":442,"value":742}," len",{"type":437,"tag":464,"props":744,"children":745},{"style":693},[746],{"type":442,"value":696},{"type":437,"tag":464,"props":748,"children":749},{"style":739},[750],{"type":442,"value":751}," nums",{"type":437,"tag":464,"props":753,"children":755},{"style":754},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[756],{"type":442,"value":757},".",{"type":437,"tag":464,"props":759,"children":760},{"style":704},[761],{"type":442,"value":762},"length",{"type":437,"tag":464,"props":764,"children":766},{"style":765},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[767],{"type":442,"value":768},";\n",{"type":437,"tag":464,"props":770,"children":772},{"class":466,"line":771},8,[773,779,783,788,793,799,804,809,814],{"type":437,"tag":464,"props":774,"children":776},{"style":775},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[777],{"type":442,"value":778},"  if",{"type":437,"tag":464,"props":780,"children":781},{"style":704},[782],{"type":442,"value":707},{"type":437,"tag":464,"props":784,"children":785},{"style":739},[786],{"type":442,"value":787},"len",{"type":437,"tag":464,"props":789,"children":790},{"style":693},[791],{"type":442,"value":792}," \u003C",{"type":437,"tag":464,"props":794,"children":796},{"style":795},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[797],{"type":442,"value":798}," 3",{"type":437,"tag":464,"props":800,"children":801},{"style":704},[802],{"type":442,"value":803},") ",{"type":437,"tag":464,"props":805,"children":806},{"style":775},[807],{"type":442,"value":808},"return",{"type":437,"tag":464,"props":810,"children":811},{"style":795},[812],{"type":442,"value":813}," false",{"type":437,"tag":464,"props":815,"children":816},{"style":765},[817],{"type":442,"value":768},{"type":437,"tag":464,"props":819,"children":821},{"class":466,"line":820},9,[822,826,831,835,839,844,849,854],{"type":437,"tag":464,"props":823,"children":824},{"style":681},[825],{"type":442,"value":736},{"type":437,"tag":464,"props":827,"children":828},{"style":739},[829],{"type":442,"value":830}," first",{"type":437,"tag":464,"props":832,"children":833},{"style":693},[834],{"type":442,"value":696},{"type":437,"tag":464,"props":836,"children":837},{"style":739},[838],{"type":442,"value":751},{"type":437,"tag":464,"props":840,"children":841},{"style":704},[842],{"type":442,"value":843},"[",{"type":437,"tag":464,"props":845,"children":846},{"style":795},[847],{"type":442,"value":848},"0",{"type":437,"tag":464,"props":850,"children":851},{"style":704},[852],{"type":442,"value":853},"]",{"type":437,"tag":464,"props":855,"children":856},{"style":765},[857],{"type":442,"value":768},{"type":437,"tag":464,"props":859,"children":861},{"class":466,"line":860},10,[862,866,871,875,880,884,889],{"type":437,"tag":464,"props":863,"children":864},{"style":681},[865],{"type":442,"value":736},{"type":437,"tag":464,"props":867,"children":868},{"style":739},[869],{"type":442,"value":870}," second",{"type":437,"tag":464,"props":872,"children":873},{"style":693},[874],{"type":442,"value":696},{"type":437,"tag":464,"props":876,"children":877},{"style":739},[878],{"type":442,"value":879}," Number",{"type":437,"tag":464,"props":881,"children":882},{"style":754},[883],{"type":442,"value":757},{"type":437,"tag":464,"props":885,"children":886},{"style":704},[887],{"type":442,"value":888},"MAX_SAFE_INTEGER",{"type":437,"tag":464,"props":890,"children":891},{"style":765},[892],{"type":442,"value":768},{"type":437,"tag":464,"props":894,"children":896},{"class":466,"line":895},11,[897,902,906,911,916,920,925,930,934,938,942,946,950,955],{"type":437,"tag":464,"props":898,"children":899},{"style":775},[900],{"type":442,"value":901},"  for",{"type":437,"tag":464,"props":903,"children":904},{"style":704},[905],{"type":442,"value":707},{"type":437,"tag":464,"props":907,"children":908},{"style":681},[909],{"type":442,"value":910},"let",{"type":437,"tag":464,"props":912,"children":913},{"style":739},[914],{"type":442,"value":915}," i",{"type":437,"tag":464,"props":917,"children":918},{"style":693},[919],{"type":442,"value":696},{"type":437,"tag":464,"props":921,"children":922},{"style":795},[923],{"type":442,"value":924}," 0",{"type":437,"tag":464,"props":926,"children":927},{"style":765},[928],{"type":442,"value":929},";",{"type":437,"tag":464,"props":931,"children":932},{"style":739},[933],{"type":442,"value":915},{"type":437,"tag":464,"props":935,"children":936},{"style":693},[937],{"type":442,"value":792},{"type":437,"tag":464,"props":939,"children":940},{"style":739},[941],{"type":442,"value":742},{"type":437,"tag":464,"props":943,"children":944},{"style":765},[945],{"type":442,"value":929},{"type":437,"tag":464,"props":947,"children":948},{"style":739},[949],{"type":442,"value":915},{"type":437,"tag":464,"props":951,"children":952},{"style":693},[953],{"type":442,"value":954},"++",{"type":437,"tag":464,"props":956,"children":957},{"style":704},[958],{"type":442,"value":718},{"type":437,"tag":464,"props":960,"children":962},{"class":466,"line":961},12,[963,968,972,976,980,985,990,995,999],{"type":437,"tag":464,"props":964,"children":965},{"style":775},[966],{"type":442,"value":967},"    if",{"type":437,"tag":464,"props":969,"children":970},{"style":704},[971],{"type":442,"value":707},{"type":437,"tag":464,"props":973,"children":974},{"style":739},[975],{"type":442,"value":713},{"type":437,"tag":464,"props":977,"children":978},{"style":704},[979],{"type":442,"value":843},{"type":437,"tag":464,"props":981,"children":982},{"style":739},[983],{"type":442,"value":984},"i",{"type":437,"tag":464,"props":986,"children":987},{"style":704},[988],{"type":442,"value":989},"] ",{"type":437,"tag":464,"props":991,"children":992},{"style":693},[993],{"type":442,"value":994},">",{"type":437,"tag":464,"props":996,"children":997},{"style":739},[998],{"type":442,"value":870},{"type":437,"tag":464,"props":1000,"children":1001},{"style":704},[1002],{"type":442,"value":718},{"type":437,"tag":464,"props":1004,"children":1006},{"class":466,"line":1005},13,[1007],{"type":437,"tag":464,"props":1008,"children":1009},{"style":619},[1010],{"type":442,"value":1011},"      // 找到第三个数\n",{"type":437,"tag":464,"props":1013,"children":1015},{"class":466,"line":1014},14,[1016,1021,1026],{"type":437,"tag":464,"props":1017,"children":1018},{"style":775},[1019],{"type":442,"value":1020},"      return",{"type":437,"tag":464,"props":1022,"children":1023},{"style":795},[1024],{"type":442,"value":1025}," true",{"type":437,"tag":464,"props":1027,"children":1028},{"style":765},[1029],{"type":442,"value":768},{"type":437,"tag":464,"props":1031,"children":1033},{"class":466,"line":1032},15,[1034,1039,1044,1049,1053,1057,1061,1065,1069,1073,1077],{"type":437,"tag":464,"props":1035,"children":1036},{"style":704},[1037],{"type":442,"value":1038},"    } ",{"type":437,"tag":464,"props":1040,"children":1041},{"style":775},[1042],{"type":442,"value":1043},"else",{"type":437,"tag":464,"props":1045,"children":1046},{"style":775},[1047],{"type":442,"value":1048}," if",{"type":437,"tag":464,"props":1050,"children":1051},{"style":704},[1052],{"type":442,"value":707},{"type":437,"tag":464,"props":1054,"children":1055},{"style":739},[1056],{"type":442,"value":713},{"type":437,"tag":464,"props":1058,"children":1059},{"style":704},[1060],{"type":442,"value":843},{"type":437,"tag":464,"props":1062,"children":1063},{"style":739},[1064],{"type":442,"value":984},{"type":437,"tag":464,"props":1066,"children":1067},{"style":704},[1068],{"type":442,"value":989},{"type":437,"tag":464,"props":1070,"children":1071},{"style":693},[1072],{"type":442,"value":994},{"type":437,"tag":464,"props":1074,"children":1075},{"style":739},[1076],{"type":442,"value":830},{"type":437,"tag":464,"props":1078,"children":1079},{"style":704},[1080],{"type":442,"value":718},{"type":437,"tag":464,"props":1082,"children":1084},{"class":466,"line":1083},16,[1085],{"type":437,"tag":464,"props":1086,"children":1087},{"style":619},[1088],{"type":442,"value":1089},"      // 更新第二个数\n",{"type":437,"tag":464,"props":1091,"children":1093},{"class":466,"line":1092},17,[1094,1099,1103,1107,1111,1115,1119],{"type":437,"tag":464,"props":1095,"children":1096},{"style":739},[1097],{"type":442,"value":1098},"      second",{"type":437,"tag":464,"props":1100,"children":1101},{"style":693},[1102],{"type":442,"value":696},{"type":437,"tag":464,"props":1104,"children":1105},{"style":739},[1106],{"type":442,"value":751},{"type":437,"tag":464,"props":1108,"children":1109},{"style":704},[1110],{"type":442,"value":843},{"type":437,"tag":464,"props":1112,"children":1113},{"style":739},[1114],{"type":442,"value":984},{"type":437,"tag":464,"props":1116,"children":1117},{"style":704},[1118],{"type":442,"value":853},{"type":437,"tag":464,"props":1120,"children":1121},{"style":765},[1122],{"type":442,"value":768},{"type":437,"tag":464,"props":1124,"children":1126},{"class":466,"line":1125},18,[1127,1131,1135],{"type":437,"tag":464,"props":1128,"children":1129},{"style":704},[1130],{"type":442,"value":1038},{"type":437,"tag":464,"props":1132,"children":1133},{"style":775},[1134],{"type":442,"value":1043},{"type":437,"tag":464,"props":1136,"children":1137},{"style":704},[1138],{"type":442,"value":1139}," {\n",{"type":437,"tag":464,"props":1141,"children":1143},{"class":466,"line":1142},19,[1144],{"type":437,"tag":464,"props":1145,"children":1146},{"style":619},[1147],{"type":442,"value":1148},"      // 更新第一个数\n",{"type":437,"tag":464,"props":1150,"children":1152},{"class":466,"line":1151},20,[1153,1158,1162,1166,1170,1174,1178],{"type":437,"tag":464,"props":1154,"children":1155},{"style":739},[1156],{"type":442,"value":1157},"      first",{"type":437,"tag":464,"props":1159,"children":1160},{"style":693},[1161],{"type":442,"value":696},{"type":437,"tag":464,"props":1163,"children":1164},{"style":739},[1165],{"type":442,"value":751},{"type":437,"tag":464,"props":1167,"children":1168},{"style":704},[1169],{"type":442,"value":843},{"type":437,"tag":464,"props":1171,"children":1172},{"style":739},[1173],{"type":442,"value":984},{"type":437,"tag":464,"props":1175,"children":1176},{"style":704},[1177],{"type":442,"value":853},{"type":437,"tag":464,"props":1179,"children":1180},{"style":765},[1181],{"type":442,"value":768},{"type":437,"tag":464,"props":1183,"children":1185},{"class":466,"line":1184},21,[1186],{"type":437,"tag":464,"props":1187,"children":1188},{"style":704},[1189],{"type":442,"value":1190},"    }\n",{"type":437,"tag":464,"props":1192,"children":1194},{"class":466,"line":1193},22,[1195],{"type":437,"tag":464,"props":1196,"children":1197},{"style":704},[1198],{"type":442,"value":1199},"  }\n",{"type":437,"tag":464,"props":1201,"children":1203},{"class":466,"line":1202},23,[1204,1209,1213],{"type":437,"tag":464,"props":1205,"children":1206},{"style":775},[1207],{"type":442,"value":1208},"  return",{"type":437,"tag":464,"props":1210,"children":1211},{"style":795},[1212],{"type":442,"value":813},{"type":437,"tag":464,"props":1214,"children":1215},{"style":765},[1216],{"type":442,"value":768},{"type":437,"tag":464,"props":1218,"children":1220},{"class":466,"line":1219},24,[1221,1226],{"type":437,"tag":464,"props":1222,"children":1223},{"style":704},[1224],{"type":442,"value":1225},"}",{"type":437,"tag":464,"props":1227,"children":1228},{"style":765},[1229],{"type":442,"value":768},{"type":437,"tag":1231,"props":1232,"children":1233},"style",{},[1234],{"type":442,"value":1235},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":430,"searchDepth":677,"depth":677,"links":1237},[1238,1239],{"id":591,"depth":476,"text":591},{"id":596,"depth":476,"text":596,"children":1240},[1241],{"id":602,"depth":485,"text":602},"markdown","content:1.algorithm:3.leetcode:334.increasing-triplet-subsequence.md","content","1.algorithm/3.leetcode/334.increasing-triplet-subsequence.md","md",[1248,1250],{"_path":188,"title":187,"description":1249},"给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。",{"_path":194,"title":193,"description":1251},"编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。",1713426452179]