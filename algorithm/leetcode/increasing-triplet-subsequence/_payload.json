[{"data":1,"prerenderedAt":1249},["Reactive",2],{"navigation":3,"/algorithm/leetcode/increasing-triplet-subsequence":424,"/algorithm/leetcode/increasing-triplet-subsequence-surround":1244},[4,237,265,403,410],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,396],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"随机数","/frontend-code-assessment/scene/random-number",{"title":382,"_path":383},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":385,"_path":386},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":388,"_path":389},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":391,"_path":392},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":394,"_path":395},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":397,"_path":398,"children":399},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[400],{"title":401,"_path":402},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":404,"_path":405,"children":406},"项目","/pro",[407],{"title":408,"_path":409},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":411,"_path":412,"children":413},"后端语言","/backend-languages",[414],{"title":415,"_path":416,"children":417},"Python","/backend-languages/python",[418,421],{"title":419,"_path":420},"基础","/backend-languages/python/base",{"title":422,"_path":423},"函数","/backend-languages/python/function",{"_path":191,"_dir":425,"_draft":426,"_partial":426,"_locale":427,"title":190,"description":428,"url":429,"body":430,"_type":1239,"_id":1240,"_source":1241,"_file":1242,"_extension":1243},"leetcode",false,"","给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。","https://leetcode.cn/problems/increasing-triplet-subsequence",{"type":431,"children":432,"toc":1233},"root",[433,440,445,450,489,494,525,530,560,565,580,585,591,596,602,1227],{"type":434,"tag":435,"props":436,"children":437},"element","p",{},[438],{"type":439,"value":428},"text",{"type":434,"tag":435,"props":441,"children":442},{},[443],{"type":439,"value":444},"如果存在这样的三元组下标 (i, j, k) 且满足 i \u003C j \u003C k ，使得 nums[i] \u003C nums[j] \u003C nums[k] ，返回 true ；否则，返回 false 。",{"type":434,"tag":435,"props":446,"children":447},{},[448],{"type":439,"value":449},"示例 1：",{"type":434,"tag":451,"props":452,"children":455},"pre",{"className":453,"code":454,"language":439,"meta":427,"style":427},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3,4,5]\n输出：true\n解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",[456],{"type":434,"tag":457,"props":458,"children":459},"code",{"__ignoreMap":427},[460,471,480],{"type":434,"tag":461,"props":462,"children":465},"span",{"class":463,"line":464},"line",1,[466],{"type":434,"tag":461,"props":467,"children":468},{},[469],{"type":439,"value":470},"输入：nums = [1,2,3,4,5]\n",{"type":434,"tag":461,"props":472,"children":474},{"class":463,"line":473},2,[475],{"type":434,"tag":461,"props":476,"children":477},{},[478],{"type":439,"value":479},"输出：true\n",{"type":434,"tag":461,"props":481,"children":483},{"class":463,"line":482},3,[484],{"type":434,"tag":461,"props":485,"children":486},{},[487],{"type":439,"value":488},"解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",{"type":434,"tag":435,"props":490,"children":491},{},[492],{"type":439,"value":493},"示例 2：",{"type":434,"tag":451,"props":495,"children":497},{"className":453,"code":496,"language":439,"meta":427,"style":427},"输入：nums = [5,4,3,2,1]\n输出：false\n解释：不存在满足题意的三元组\n",[498],{"type":434,"tag":457,"props":499,"children":500},{"__ignoreMap":427},[501,509,517],{"type":434,"tag":461,"props":502,"children":503},{"class":463,"line":464},[504],{"type":434,"tag":461,"props":505,"children":506},{},[507],{"type":439,"value":508},"输入：nums = [5,4,3,2,1]\n",{"type":434,"tag":461,"props":510,"children":511},{"class":463,"line":473},[512],{"type":434,"tag":461,"props":513,"children":514},{},[515],{"type":439,"value":516},"输出：false\n",{"type":434,"tag":461,"props":518,"children":519},{"class":463,"line":482},[520],{"type":434,"tag":461,"props":521,"children":522},{},[523],{"type":439,"value":524},"解释：不存在满足题意的三元组\n",{"type":434,"tag":435,"props":526,"children":527},{},[528],{"type":439,"value":529},"示例 3：",{"type":434,"tag":451,"props":531,"children":533},{"className":453,"code":532,"language":439,"meta":427,"style":427},"输入：nums = [2,1,5,0,4,6]\n输出：true\n解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",[534],{"type":434,"tag":457,"props":535,"children":536},{"__ignoreMap":427},[537,545,552],{"type":434,"tag":461,"props":538,"children":539},{"class":463,"line":464},[540],{"type":434,"tag":461,"props":541,"children":542},{},[543],{"type":439,"value":544},"输入：nums = [2,1,5,0,4,6]\n",{"type":434,"tag":461,"props":546,"children":547},{"class":463,"line":473},[548],{"type":434,"tag":461,"props":549,"children":550},{},[551],{"type":439,"value":479},{"type":434,"tag":461,"props":553,"children":554},{"class":463,"line":482},[555],{"type":434,"tag":461,"props":556,"children":557},{},[558],{"type":439,"value":559},"解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",{"type":434,"tag":435,"props":561,"children":562},{},[563],{"type":439,"value":564},"提示：",{"type":434,"tag":566,"props":567,"children":568},"ul",{},[569,575],{"type":434,"tag":570,"props":571,"children":572},"li",{},[573],{"type":439,"value":574},"1 \u003C= nums.length \u003C= 5 * 10^5",{"type":434,"tag":570,"props":576,"children":577},{},[578],{"type":439,"value":579},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":434,"tag":435,"props":581,"children":582},{},[583],{"type":439,"value":584},"进阶：你能实现时间复杂度为 O(n) ，空间复杂度为 O(1) 的解决方案吗？",{"type":434,"tag":586,"props":587,"children":589},"h2",{"id":588},"解题思路",[590],{"type":439,"value":588},{"type":434,"tag":586,"props":592,"children":594},{"id":593},"实现",[595],{"type":439,"value":593},{"type":434,"tag":597,"props":598,"children":600},"h3",{"id":599},"贪心",[601],{"type":439,"value":599},{"type":434,"tag":451,"props":603,"children":607},{"className":604,"code":605,"language":606,"meta":427,"style":427},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar increasingTriplet = function (nums) {\n  // 维护两个变量，代表递增序列中的第一个数、第二个数\n  let len = nums.length;\n  if (len \u003C 3) return false;\n  let first = nums[0];\n  let second = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i \u003C len; i++) {\n    if (nums[i] > second) {\n      // 找到第三个数\n      return true;\n    } else if (nums[i] > first) {\n      // 更新第二个数\n      second = nums[i];\n    } else {\n      // 更新第一个数\n      first = nums[i];\n    }\n  }\n  return false;\n};\n","js",[608],{"type":434,"tag":457,"props":609,"children":610},{"__ignoreMap":427},[611,620,646,663,672,716,725,766,815,855,890,956,1000,1009,1027,1078,1087,1120,1137,1146,1179,1188,1197,1214],{"type":434,"tag":461,"props":612,"children":613},{"class":463,"line":464},[614],{"type":434,"tag":461,"props":615,"children":617},{"style":616},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[618],{"type":439,"value":619},"/**\n",{"type":434,"tag":461,"props":621,"children":622},{"class":463,"line":473},[623,628,634,640],{"type":434,"tag":461,"props":624,"children":625},{"style":616},[626],{"type":439,"value":627}," * ",{"type":434,"tag":461,"props":629,"children":631},{"style":630},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[632],{"type":439,"value":633},"@param",{"type":434,"tag":461,"props":635,"children":637},{"style":636},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[638],{"type":439,"value":639}," {number[]}",{"type":434,"tag":461,"props":641,"children":643},{"style":642},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[644],{"type":439,"value":645}," nums\n",{"type":434,"tag":461,"props":647,"children":648},{"class":463,"line":482},[649,653,658],{"type":434,"tag":461,"props":650,"children":651},{"style":616},[652],{"type":439,"value":627},{"type":434,"tag":461,"props":654,"children":655},{"style":630},[656],{"type":439,"value":657},"@return",{"type":434,"tag":461,"props":659,"children":660},{"style":636},[661],{"type":439,"value":662}," {boolean}\n",{"type":434,"tag":461,"props":664,"children":666},{"class":463,"line":665},4,[667],{"type":434,"tag":461,"props":668,"children":669},{"style":616},[670],{"type":439,"value":671}," */\n",{"type":434,"tag":461,"props":673,"children":675},{"class":463,"line":674},5,[676,682,688,694,699,705,711],{"type":434,"tag":461,"props":677,"children":679},{"style":678},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[680],{"type":439,"value":681},"var",{"type":434,"tag":461,"props":683,"children":685},{"style":684},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[686],{"type":439,"value":687}," increasingTriplet",{"type":434,"tag":461,"props":689,"children":691},{"style":690},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[692],{"type":439,"value":693}," =",{"type":434,"tag":461,"props":695,"children":696},{"style":678},[697],{"type":439,"value":698}," function",{"type":434,"tag":461,"props":700,"children":702},{"style":701},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[703],{"type":439,"value":704}," (",{"type":434,"tag":461,"props":706,"children":708},{"style":707},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[709],{"type":439,"value":710},"nums",{"type":434,"tag":461,"props":712,"children":713},{"style":701},[714],{"type":439,"value":715},") {\n",{"type":434,"tag":461,"props":717,"children":719},{"class":463,"line":718},6,[720],{"type":434,"tag":461,"props":721,"children":722},{"style":616},[723],{"type":439,"value":724},"  // 维护两个变量，代表递增序列中的第一个数、第二个数\n",{"type":434,"tag":461,"props":726,"children":728},{"class":463,"line":727},7,[729,734,740,744,749,755,760],{"type":434,"tag":461,"props":730,"children":731},{"style":678},[732],{"type":439,"value":733},"  let",{"type":434,"tag":461,"props":735,"children":737},{"style":736},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[738],{"type":439,"value":739}," len",{"type":434,"tag":461,"props":741,"children":742},{"style":690},[743],{"type":439,"value":693},{"type":434,"tag":461,"props":745,"children":746},{"style":736},[747],{"type":439,"value":748}," nums",{"type":434,"tag":461,"props":750,"children":752},{"style":751},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[753],{"type":439,"value":754},".",{"type":434,"tag":461,"props":756,"children":757},{"style":701},[758],{"type":439,"value":759},"length",{"type":434,"tag":461,"props":761,"children":763},{"style":762},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[764],{"type":439,"value":765},";\n",{"type":434,"tag":461,"props":767,"children":769},{"class":463,"line":768},8,[770,776,780,785,790,796,801,806,811],{"type":434,"tag":461,"props":771,"children":773},{"style":772},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[774],{"type":439,"value":775},"  if",{"type":434,"tag":461,"props":777,"children":778},{"style":701},[779],{"type":439,"value":704},{"type":434,"tag":461,"props":781,"children":782},{"style":736},[783],{"type":439,"value":784},"len",{"type":434,"tag":461,"props":786,"children":787},{"style":690},[788],{"type":439,"value":789}," \u003C",{"type":434,"tag":461,"props":791,"children":793},{"style":792},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[794],{"type":439,"value":795}," 3",{"type":434,"tag":461,"props":797,"children":798},{"style":701},[799],{"type":439,"value":800},") ",{"type":434,"tag":461,"props":802,"children":803},{"style":772},[804],{"type":439,"value":805},"return",{"type":434,"tag":461,"props":807,"children":808},{"style":792},[809],{"type":439,"value":810}," false",{"type":434,"tag":461,"props":812,"children":813},{"style":762},[814],{"type":439,"value":765},{"type":434,"tag":461,"props":816,"children":818},{"class":463,"line":817},9,[819,823,828,832,836,841,846,851],{"type":434,"tag":461,"props":820,"children":821},{"style":678},[822],{"type":439,"value":733},{"type":434,"tag":461,"props":824,"children":825},{"style":736},[826],{"type":439,"value":827}," first",{"type":434,"tag":461,"props":829,"children":830},{"style":690},[831],{"type":439,"value":693},{"type":434,"tag":461,"props":833,"children":834},{"style":736},[835],{"type":439,"value":748},{"type":434,"tag":461,"props":837,"children":838},{"style":701},[839],{"type":439,"value":840},"[",{"type":434,"tag":461,"props":842,"children":843},{"style":792},[844],{"type":439,"value":845},"0",{"type":434,"tag":461,"props":847,"children":848},{"style":701},[849],{"type":439,"value":850},"]",{"type":434,"tag":461,"props":852,"children":853},{"style":762},[854],{"type":439,"value":765},{"type":434,"tag":461,"props":856,"children":858},{"class":463,"line":857},10,[859,863,868,872,877,881,886],{"type":434,"tag":461,"props":860,"children":861},{"style":678},[862],{"type":439,"value":733},{"type":434,"tag":461,"props":864,"children":865},{"style":736},[866],{"type":439,"value":867}," second",{"type":434,"tag":461,"props":869,"children":870},{"style":690},[871],{"type":439,"value":693},{"type":434,"tag":461,"props":873,"children":874},{"style":736},[875],{"type":439,"value":876}," Number",{"type":434,"tag":461,"props":878,"children":879},{"style":751},[880],{"type":439,"value":754},{"type":434,"tag":461,"props":882,"children":883},{"style":701},[884],{"type":439,"value":885},"MAX_SAFE_INTEGER",{"type":434,"tag":461,"props":887,"children":888},{"style":762},[889],{"type":439,"value":765},{"type":434,"tag":461,"props":891,"children":893},{"class":463,"line":892},11,[894,899,903,908,913,917,922,927,931,935,939,943,947,952],{"type":434,"tag":461,"props":895,"children":896},{"style":772},[897],{"type":439,"value":898},"  for",{"type":434,"tag":461,"props":900,"children":901},{"style":701},[902],{"type":439,"value":704},{"type":434,"tag":461,"props":904,"children":905},{"style":678},[906],{"type":439,"value":907},"let",{"type":434,"tag":461,"props":909,"children":910},{"style":736},[911],{"type":439,"value":912}," i",{"type":434,"tag":461,"props":914,"children":915},{"style":690},[916],{"type":439,"value":693},{"type":434,"tag":461,"props":918,"children":919},{"style":792},[920],{"type":439,"value":921}," 0",{"type":434,"tag":461,"props":923,"children":924},{"style":762},[925],{"type":439,"value":926},";",{"type":434,"tag":461,"props":928,"children":929},{"style":736},[930],{"type":439,"value":912},{"type":434,"tag":461,"props":932,"children":933},{"style":690},[934],{"type":439,"value":789},{"type":434,"tag":461,"props":936,"children":937},{"style":736},[938],{"type":439,"value":739},{"type":434,"tag":461,"props":940,"children":941},{"style":762},[942],{"type":439,"value":926},{"type":434,"tag":461,"props":944,"children":945},{"style":736},[946],{"type":439,"value":912},{"type":434,"tag":461,"props":948,"children":949},{"style":690},[950],{"type":439,"value":951},"++",{"type":434,"tag":461,"props":953,"children":954},{"style":701},[955],{"type":439,"value":715},{"type":434,"tag":461,"props":957,"children":959},{"class":463,"line":958},12,[960,965,969,973,977,982,987,992,996],{"type":434,"tag":461,"props":961,"children":962},{"style":772},[963],{"type":439,"value":964},"    if",{"type":434,"tag":461,"props":966,"children":967},{"style":701},[968],{"type":439,"value":704},{"type":434,"tag":461,"props":970,"children":971},{"style":736},[972],{"type":439,"value":710},{"type":434,"tag":461,"props":974,"children":975},{"style":701},[976],{"type":439,"value":840},{"type":434,"tag":461,"props":978,"children":979},{"style":736},[980],{"type":439,"value":981},"i",{"type":434,"tag":461,"props":983,"children":984},{"style":701},[985],{"type":439,"value":986},"] ",{"type":434,"tag":461,"props":988,"children":989},{"style":690},[990],{"type":439,"value":991},">",{"type":434,"tag":461,"props":993,"children":994},{"style":736},[995],{"type":439,"value":867},{"type":434,"tag":461,"props":997,"children":998},{"style":701},[999],{"type":439,"value":715},{"type":434,"tag":461,"props":1001,"children":1003},{"class":463,"line":1002},13,[1004],{"type":434,"tag":461,"props":1005,"children":1006},{"style":616},[1007],{"type":439,"value":1008},"      // 找到第三个数\n",{"type":434,"tag":461,"props":1010,"children":1012},{"class":463,"line":1011},14,[1013,1018,1023],{"type":434,"tag":461,"props":1014,"children":1015},{"style":772},[1016],{"type":439,"value":1017},"      return",{"type":434,"tag":461,"props":1019,"children":1020},{"style":792},[1021],{"type":439,"value":1022}," true",{"type":434,"tag":461,"props":1024,"children":1025},{"style":762},[1026],{"type":439,"value":765},{"type":434,"tag":461,"props":1028,"children":1030},{"class":463,"line":1029},15,[1031,1036,1041,1046,1050,1054,1058,1062,1066,1070,1074],{"type":434,"tag":461,"props":1032,"children":1033},{"style":701},[1034],{"type":439,"value":1035},"    } ",{"type":434,"tag":461,"props":1037,"children":1038},{"style":772},[1039],{"type":439,"value":1040},"else",{"type":434,"tag":461,"props":1042,"children":1043},{"style":772},[1044],{"type":439,"value":1045}," if",{"type":434,"tag":461,"props":1047,"children":1048},{"style":701},[1049],{"type":439,"value":704},{"type":434,"tag":461,"props":1051,"children":1052},{"style":736},[1053],{"type":439,"value":710},{"type":434,"tag":461,"props":1055,"children":1056},{"style":701},[1057],{"type":439,"value":840},{"type":434,"tag":461,"props":1059,"children":1060},{"style":736},[1061],{"type":439,"value":981},{"type":434,"tag":461,"props":1063,"children":1064},{"style":701},[1065],{"type":439,"value":986},{"type":434,"tag":461,"props":1067,"children":1068},{"style":690},[1069],{"type":439,"value":991},{"type":434,"tag":461,"props":1071,"children":1072},{"style":736},[1073],{"type":439,"value":827},{"type":434,"tag":461,"props":1075,"children":1076},{"style":701},[1077],{"type":439,"value":715},{"type":434,"tag":461,"props":1079,"children":1081},{"class":463,"line":1080},16,[1082],{"type":434,"tag":461,"props":1083,"children":1084},{"style":616},[1085],{"type":439,"value":1086},"      // 更新第二个数\n",{"type":434,"tag":461,"props":1088,"children":1090},{"class":463,"line":1089},17,[1091,1096,1100,1104,1108,1112,1116],{"type":434,"tag":461,"props":1092,"children":1093},{"style":736},[1094],{"type":439,"value":1095},"      second",{"type":434,"tag":461,"props":1097,"children":1098},{"style":690},[1099],{"type":439,"value":693},{"type":434,"tag":461,"props":1101,"children":1102},{"style":736},[1103],{"type":439,"value":748},{"type":434,"tag":461,"props":1105,"children":1106},{"style":701},[1107],{"type":439,"value":840},{"type":434,"tag":461,"props":1109,"children":1110},{"style":736},[1111],{"type":439,"value":981},{"type":434,"tag":461,"props":1113,"children":1114},{"style":701},[1115],{"type":439,"value":850},{"type":434,"tag":461,"props":1117,"children":1118},{"style":762},[1119],{"type":439,"value":765},{"type":434,"tag":461,"props":1121,"children":1123},{"class":463,"line":1122},18,[1124,1128,1132],{"type":434,"tag":461,"props":1125,"children":1126},{"style":701},[1127],{"type":439,"value":1035},{"type":434,"tag":461,"props":1129,"children":1130},{"style":772},[1131],{"type":439,"value":1040},{"type":434,"tag":461,"props":1133,"children":1134},{"style":701},[1135],{"type":439,"value":1136}," {\n",{"type":434,"tag":461,"props":1138,"children":1140},{"class":463,"line":1139},19,[1141],{"type":434,"tag":461,"props":1142,"children":1143},{"style":616},[1144],{"type":439,"value":1145},"      // 更新第一个数\n",{"type":434,"tag":461,"props":1147,"children":1149},{"class":463,"line":1148},20,[1150,1155,1159,1163,1167,1171,1175],{"type":434,"tag":461,"props":1151,"children":1152},{"style":736},[1153],{"type":439,"value":1154},"      first",{"type":434,"tag":461,"props":1156,"children":1157},{"style":690},[1158],{"type":439,"value":693},{"type":434,"tag":461,"props":1160,"children":1161},{"style":736},[1162],{"type":439,"value":748},{"type":434,"tag":461,"props":1164,"children":1165},{"style":701},[1166],{"type":439,"value":840},{"type":434,"tag":461,"props":1168,"children":1169},{"style":736},[1170],{"type":439,"value":981},{"type":434,"tag":461,"props":1172,"children":1173},{"style":701},[1174],{"type":439,"value":850},{"type":434,"tag":461,"props":1176,"children":1177},{"style":762},[1178],{"type":439,"value":765},{"type":434,"tag":461,"props":1180,"children":1182},{"class":463,"line":1181},21,[1183],{"type":434,"tag":461,"props":1184,"children":1185},{"style":701},[1186],{"type":439,"value":1187},"    }\n",{"type":434,"tag":461,"props":1189,"children":1191},{"class":463,"line":1190},22,[1192],{"type":434,"tag":461,"props":1193,"children":1194},{"style":701},[1195],{"type":439,"value":1196},"  }\n",{"type":434,"tag":461,"props":1198,"children":1200},{"class":463,"line":1199},23,[1201,1206,1210],{"type":434,"tag":461,"props":1202,"children":1203},{"style":772},[1204],{"type":439,"value":1205},"  return",{"type":434,"tag":461,"props":1207,"children":1208},{"style":792},[1209],{"type":439,"value":810},{"type":434,"tag":461,"props":1211,"children":1212},{"style":762},[1213],{"type":439,"value":765},{"type":434,"tag":461,"props":1215,"children":1217},{"class":463,"line":1216},24,[1218,1223],{"type":434,"tag":461,"props":1219,"children":1220},{"style":701},[1221],{"type":439,"value":1222},"}",{"type":434,"tag":461,"props":1224,"children":1225},{"style":762},[1226],{"type":439,"value":765},{"type":434,"tag":1228,"props":1229,"children":1230},"style",{},[1231],{"type":439,"value":1232},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":427,"searchDepth":674,"depth":674,"links":1234},[1235,1236],{"id":588,"depth":473,"text":588},{"id":593,"depth":473,"text":593,"children":1237},[1238],{"id":599,"depth":482,"text":599},"markdown","content:1.algorithm:3.leetcode:334.increasing-triplet-subsequence.md","content","1.algorithm/3.leetcode/334.increasing-triplet-subsequence.md","md",[1245,1247],{"_path":188,"title":187,"description":1246},"给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。",{"_path":194,"title":193,"description":1248},"编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。",1713339874111]