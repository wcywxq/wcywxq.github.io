[{"data":1,"prerenderedAt":1255},["Reactive",2],{"navigation":3,"/algorithm/leetcode/increasing-triplet-subsequence":430,"/algorithm/leetcode/increasing-triplet-subsequence-surround":1250},[4,237,265,409,416],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,402],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396,399],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":379,"_path":380},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":382,"_path":383},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":385,"_path":386},"随机数","/frontend-code-assessment/scene/random-number",{"title":388,"_path":389},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":391,"_path":392},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":394,"_path":395},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":397,"_path":398},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":400,"_path":401},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":403,"_path":404,"children":405},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[406],{"title":407,"_path":408},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":410,"_path":411,"children":412},"项目","/pro",[413],{"title":414,"_path":415},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":417,"_path":418,"children":419},"后端语言","/backend-languages",[420],{"title":421,"_path":422,"children":423},"Python","/backend-languages/python",[424,427],{"title":425,"_path":426},"基础","/backend-languages/python/base",{"title":428,"_path":429},"函数","/backend-languages/python/function",{"_path":191,"_dir":431,"_draft":432,"_partial":432,"_locale":433,"title":190,"description":434,"url":435,"body":436,"_type":1245,"_id":1246,"_source":1247,"_file":1248,"_extension":1249},"leetcode",false,"","给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。","https://leetcode.cn/problems/increasing-triplet-subsequence",{"type":437,"children":438,"toc":1239},"root",[439,446,451,456,495,500,531,536,566,571,586,591,597,602,608,1233],{"type":440,"tag":441,"props":442,"children":443},"element","p",{},[444],{"type":445,"value":434},"text",{"type":440,"tag":441,"props":447,"children":448},{},[449],{"type":445,"value":450},"如果存在这样的三元组下标 (i, j, k) 且满足 i \u003C j \u003C k ，使得 nums[i] \u003C nums[j] \u003C nums[k] ，返回 true ；否则，返回 false 。",{"type":440,"tag":441,"props":452,"children":453},{},[454],{"type":445,"value":455},"示例 1：",{"type":440,"tag":457,"props":458,"children":461},"pre",{"className":459,"code":460,"language":445,"meta":433,"style":433},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3,4,5]\n输出：true\n解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",[462],{"type":440,"tag":463,"props":464,"children":465},"code",{"__ignoreMap":433},[466,477,486],{"type":440,"tag":467,"props":468,"children":471},"span",{"class":469,"line":470},"line",1,[472],{"type":440,"tag":467,"props":473,"children":474},{},[475],{"type":445,"value":476},"输入：nums = [1,2,3,4,5]\n",{"type":440,"tag":467,"props":478,"children":480},{"class":469,"line":479},2,[481],{"type":440,"tag":467,"props":482,"children":483},{},[484],{"type":445,"value":485},"输出：true\n",{"type":440,"tag":467,"props":487,"children":489},{"class":469,"line":488},3,[490],{"type":440,"tag":467,"props":491,"children":492},{},[493],{"type":445,"value":494},"解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",{"type":440,"tag":441,"props":496,"children":497},{},[498],{"type":445,"value":499},"示例 2：",{"type":440,"tag":457,"props":501,"children":503},{"className":459,"code":502,"language":445,"meta":433,"style":433},"输入：nums = [5,4,3,2,1]\n输出：false\n解释：不存在满足题意的三元组\n",[504],{"type":440,"tag":463,"props":505,"children":506},{"__ignoreMap":433},[507,515,523],{"type":440,"tag":467,"props":508,"children":509},{"class":469,"line":470},[510],{"type":440,"tag":467,"props":511,"children":512},{},[513],{"type":445,"value":514},"输入：nums = [5,4,3,2,1]\n",{"type":440,"tag":467,"props":516,"children":517},{"class":469,"line":479},[518],{"type":440,"tag":467,"props":519,"children":520},{},[521],{"type":445,"value":522},"输出：false\n",{"type":440,"tag":467,"props":524,"children":525},{"class":469,"line":488},[526],{"type":440,"tag":467,"props":527,"children":528},{},[529],{"type":445,"value":530},"解释：不存在满足题意的三元组\n",{"type":440,"tag":441,"props":532,"children":533},{},[534],{"type":445,"value":535},"示例 3：",{"type":440,"tag":457,"props":537,"children":539},{"className":459,"code":538,"language":445,"meta":433,"style":433},"输入：nums = [2,1,5,0,4,6]\n输出：true\n解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",[540],{"type":440,"tag":463,"props":541,"children":542},{"__ignoreMap":433},[543,551,558],{"type":440,"tag":467,"props":544,"children":545},{"class":469,"line":470},[546],{"type":440,"tag":467,"props":547,"children":548},{},[549],{"type":445,"value":550},"输入：nums = [2,1,5,0,4,6]\n",{"type":440,"tag":467,"props":552,"children":553},{"class":469,"line":479},[554],{"type":440,"tag":467,"props":555,"children":556},{},[557],{"type":445,"value":485},{"type":440,"tag":467,"props":559,"children":560},{"class":469,"line":488},[561],{"type":440,"tag":467,"props":562,"children":563},{},[564],{"type":445,"value":565},"解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",{"type":440,"tag":441,"props":567,"children":568},{},[569],{"type":445,"value":570},"提示：",{"type":440,"tag":572,"props":573,"children":574},"ul",{},[575,581],{"type":440,"tag":576,"props":577,"children":578},"li",{},[579],{"type":445,"value":580},"1 \u003C= nums.length \u003C= 5 * 10^5",{"type":440,"tag":576,"props":582,"children":583},{},[584],{"type":445,"value":585},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":440,"tag":441,"props":587,"children":588},{},[589],{"type":445,"value":590},"进阶：你能实现时间复杂度为 O(n) ，空间复杂度为 O(1) 的解决方案吗？",{"type":440,"tag":592,"props":593,"children":595},"h2",{"id":594},"解题思路",[596],{"type":445,"value":594},{"type":440,"tag":592,"props":598,"children":600},{"id":599},"实现",[601],{"type":445,"value":599},{"type":440,"tag":603,"props":604,"children":606},"h3",{"id":605},"贪心",[607],{"type":445,"value":605},{"type":440,"tag":457,"props":609,"children":613},{"className":610,"code":611,"language":612,"meta":433,"style":433},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar increasingTriplet = function (nums) {\n  // 维护两个变量，代表递增序列中的第一个数、第二个数\n  let len = nums.length;\n  if (len \u003C 3) return false;\n  let first = nums[0];\n  let second = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i \u003C len; i++) {\n    if (nums[i] > second) {\n      // 找到第三个数\n      return true;\n    } else if (nums[i] > first) {\n      // 更新第二个数\n      second = nums[i];\n    } else {\n      // 更新第一个数\n      first = nums[i];\n    }\n  }\n  return false;\n};\n","js",[614],{"type":440,"tag":463,"props":615,"children":616},{"__ignoreMap":433},[617,626,652,669,678,722,731,772,821,861,896,962,1006,1015,1033,1084,1093,1126,1143,1152,1185,1194,1203,1220],{"type":440,"tag":467,"props":618,"children":619},{"class":469,"line":470},[620],{"type":440,"tag":467,"props":621,"children":623},{"style":622},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[624],{"type":445,"value":625},"/**\n",{"type":440,"tag":467,"props":627,"children":628},{"class":469,"line":479},[629,634,640,646],{"type":440,"tag":467,"props":630,"children":631},{"style":622},[632],{"type":445,"value":633}," * ",{"type":440,"tag":467,"props":635,"children":637},{"style":636},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[638],{"type":445,"value":639},"@param",{"type":440,"tag":467,"props":641,"children":643},{"style":642},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[644],{"type":445,"value":645}," {number[]}",{"type":440,"tag":467,"props":647,"children":649},{"style":648},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[650],{"type":445,"value":651}," nums\n",{"type":440,"tag":467,"props":653,"children":654},{"class":469,"line":488},[655,659,664],{"type":440,"tag":467,"props":656,"children":657},{"style":622},[658],{"type":445,"value":633},{"type":440,"tag":467,"props":660,"children":661},{"style":636},[662],{"type":445,"value":663},"@return",{"type":440,"tag":467,"props":665,"children":666},{"style":642},[667],{"type":445,"value":668}," {boolean}\n",{"type":440,"tag":467,"props":670,"children":672},{"class":469,"line":671},4,[673],{"type":440,"tag":467,"props":674,"children":675},{"style":622},[676],{"type":445,"value":677}," */\n",{"type":440,"tag":467,"props":679,"children":681},{"class":469,"line":680},5,[682,688,694,700,705,711,717],{"type":440,"tag":467,"props":683,"children":685},{"style":684},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[686],{"type":445,"value":687},"var",{"type":440,"tag":467,"props":689,"children":691},{"style":690},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[692],{"type":445,"value":693}," increasingTriplet",{"type":440,"tag":467,"props":695,"children":697},{"style":696},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[698],{"type":445,"value":699}," =",{"type":440,"tag":467,"props":701,"children":702},{"style":684},[703],{"type":445,"value":704}," function",{"type":440,"tag":467,"props":706,"children":708},{"style":707},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[709],{"type":445,"value":710}," (",{"type":440,"tag":467,"props":712,"children":714},{"style":713},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[715],{"type":445,"value":716},"nums",{"type":440,"tag":467,"props":718,"children":719},{"style":707},[720],{"type":445,"value":721},") {\n",{"type":440,"tag":467,"props":723,"children":725},{"class":469,"line":724},6,[726],{"type":440,"tag":467,"props":727,"children":728},{"style":622},[729],{"type":445,"value":730},"  // 维护两个变量，代表递增序列中的第一个数、第二个数\n",{"type":440,"tag":467,"props":732,"children":734},{"class":469,"line":733},7,[735,740,746,750,755,761,766],{"type":440,"tag":467,"props":736,"children":737},{"style":684},[738],{"type":445,"value":739},"  let",{"type":440,"tag":467,"props":741,"children":743},{"style":742},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[744],{"type":445,"value":745}," len",{"type":440,"tag":467,"props":747,"children":748},{"style":696},[749],{"type":445,"value":699},{"type":440,"tag":467,"props":751,"children":752},{"style":742},[753],{"type":445,"value":754}," nums",{"type":440,"tag":467,"props":756,"children":758},{"style":757},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[759],{"type":445,"value":760},".",{"type":440,"tag":467,"props":762,"children":763},{"style":707},[764],{"type":445,"value":765},"length",{"type":440,"tag":467,"props":767,"children":769},{"style":768},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[770],{"type":445,"value":771},";\n",{"type":440,"tag":467,"props":773,"children":775},{"class":469,"line":774},8,[776,782,786,791,796,802,807,812,817],{"type":440,"tag":467,"props":777,"children":779},{"style":778},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[780],{"type":445,"value":781},"  if",{"type":440,"tag":467,"props":783,"children":784},{"style":707},[785],{"type":445,"value":710},{"type":440,"tag":467,"props":787,"children":788},{"style":742},[789],{"type":445,"value":790},"len",{"type":440,"tag":467,"props":792,"children":793},{"style":696},[794],{"type":445,"value":795}," \u003C",{"type":440,"tag":467,"props":797,"children":799},{"style":798},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[800],{"type":445,"value":801}," 3",{"type":440,"tag":467,"props":803,"children":804},{"style":707},[805],{"type":445,"value":806},") ",{"type":440,"tag":467,"props":808,"children":809},{"style":778},[810],{"type":445,"value":811},"return",{"type":440,"tag":467,"props":813,"children":814},{"style":798},[815],{"type":445,"value":816}," false",{"type":440,"tag":467,"props":818,"children":819},{"style":768},[820],{"type":445,"value":771},{"type":440,"tag":467,"props":822,"children":824},{"class":469,"line":823},9,[825,829,834,838,842,847,852,857],{"type":440,"tag":467,"props":826,"children":827},{"style":684},[828],{"type":445,"value":739},{"type":440,"tag":467,"props":830,"children":831},{"style":742},[832],{"type":445,"value":833}," first",{"type":440,"tag":467,"props":835,"children":836},{"style":696},[837],{"type":445,"value":699},{"type":440,"tag":467,"props":839,"children":840},{"style":742},[841],{"type":445,"value":754},{"type":440,"tag":467,"props":843,"children":844},{"style":707},[845],{"type":445,"value":846},"[",{"type":440,"tag":467,"props":848,"children":849},{"style":798},[850],{"type":445,"value":851},"0",{"type":440,"tag":467,"props":853,"children":854},{"style":707},[855],{"type":445,"value":856},"]",{"type":440,"tag":467,"props":858,"children":859},{"style":768},[860],{"type":445,"value":771},{"type":440,"tag":467,"props":862,"children":864},{"class":469,"line":863},10,[865,869,874,878,883,887,892],{"type":440,"tag":467,"props":866,"children":867},{"style":684},[868],{"type":445,"value":739},{"type":440,"tag":467,"props":870,"children":871},{"style":742},[872],{"type":445,"value":873}," second",{"type":440,"tag":467,"props":875,"children":876},{"style":696},[877],{"type":445,"value":699},{"type":440,"tag":467,"props":879,"children":880},{"style":742},[881],{"type":445,"value":882}," Number",{"type":440,"tag":467,"props":884,"children":885},{"style":757},[886],{"type":445,"value":760},{"type":440,"tag":467,"props":888,"children":889},{"style":707},[890],{"type":445,"value":891},"MAX_SAFE_INTEGER",{"type":440,"tag":467,"props":893,"children":894},{"style":768},[895],{"type":445,"value":771},{"type":440,"tag":467,"props":897,"children":899},{"class":469,"line":898},11,[900,905,909,914,919,923,928,933,937,941,945,949,953,958],{"type":440,"tag":467,"props":901,"children":902},{"style":778},[903],{"type":445,"value":904},"  for",{"type":440,"tag":467,"props":906,"children":907},{"style":707},[908],{"type":445,"value":710},{"type":440,"tag":467,"props":910,"children":911},{"style":684},[912],{"type":445,"value":913},"let",{"type":440,"tag":467,"props":915,"children":916},{"style":742},[917],{"type":445,"value":918}," i",{"type":440,"tag":467,"props":920,"children":921},{"style":696},[922],{"type":445,"value":699},{"type":440,"tag":467,"props":924,"children":925},{"style":798},[926],{"type":445,"value":927}," 0",{"type":440,"tag":467,"props":929,"children":930},{"style":768},[931],{"type":445,"value":932},";",{"type":440,"tag":467,"props":934,"children":935},{"style":742},[936],{"type":445,"value":918},{"type":440,"tag":467,"props":938,"children":939},{"style":696},[940],{"type":445,"value":795},{"type":440,"tag":467,"props":942,"children":943},{"style":742},[944],{"type":445,"value":745},{"type":440,"tag":467,"props":946,"children":947},{"style":768},[948],{"type":445,"value":932},{"type":440,"tag":467,"props":950,"children":951},{"style":742},[952],{"type":445,"value":918},{"type":440,"tag":467,"props":954,"children":955},{"style":696},[956],{"type":445,"value":957},"++",{"type":440,"tag":467,"props":959,"children":960},{"style":707},[961],{"type":445,"value":721},{"type":440,"tag":467,"props":963,"children":965},{"class":469,"line":964},12,[966,971,975,979,983,988,993,998,1002],{"type":440,"tag":467,"props":967,"children":968},{"style":778},[969],{"type":445,"value":970},"    if",{"type":440,"tag":467,"props":972,"children":973},{"style":707},[974],{"type":445,"value":710},{"type":440,"tag":467,"props":976,"children":977},{"style":742},[978],{"type":445,"value":716},{"type":440,"tag":467,"props":980,"children":981},{"style":707},[982],{"type":445,"value":846},{"type":440,"tag":467,"props":984,"children":985},{"style":742},[986],{"type":445,"value":987},"i",{"type":440,"tag":467,"props":989,"children":990},{"style":707},[991],{"type":445,"value":992},"] ",{"type":440,"tag":467,"props":994,"children":995},{"style":696},[996],{"type":445,"value":997},">",{"type":440,"tag":467,"props":999,"children":1000},{"style":742},[1001],{"type":445,"value":873},{"type":440,"tag":467,"props":1003,"children":1004},{"style":707},[1005],{"type":445,"value":721},{"type":440,"tag":467,"props":1007,"children":1009},{"class":469,"line":1008},13,[1010],{"type":440,"tag":467,"props":1011,"children":1012},{"style":622},[1013],{"type":445,"value":1014},"      // 找到第三个数\n",{"type":440,"tag":467,"props":1016,"children":1018},{"class":469,"line":1017},14,[1019,1024,1029],{"type":440,"tag":467,"props":1020,"children":1021},{"style":778},[1022],{"type":445,"value":1023},"      return",{"type":440,"tag":467,"props":1025,"children":1026},{"style":798},[1027],{"type":445,"value":1028}," true",{"type":440,"tag":467,"props":1030,"children":1031},{"style":768},[1032],{"type":445,"value":771},{"type":440,"tag":467,"props":1034,"children":1036},{"class":469,"line":1035},15,[1037,1042,1047,1052,1056,1060,1064,1068,1072,1076,1080],{"type":440,"tag":467,"props":1038,"children":1039},{"style":707},[1040],{"type":445,"value":1041},"    } ",{"type":440,"tag":467,"props":1043,"children":1044},{"style":778},[1045],{"type":445,"value":1046},"else",{"type":440,"tag":467,"props":1048,"children":1049},{"style":778},[1050],{"type":445,"value":1051}," if",{"type":440,"tag":467,"props":1053,"children":1054},{"style":707},[1055],{"type":445,"value":710},{"type":440,"tag":467,"props":1057,"children":1058},{"style":742},[1059],{"type":445,"value":716},{"type":440,"tag":467,"props":1061,"children":1062},{"style":707},[1063],{"type":445,"value":846},{"type":440,"tag":467,"props":1065,"children":1066},{"style":742},[1067],{"type":445,"value":987},{"type":440,"tag":467,"props":1069,"children":1070},{"style":707},[1071],{"type":445,"value":992},{"type":440,"tag":467,"props":1073,"children":1074},{"style":696},[1075],{"type":445,"value":997},{"type":440,"tag":467,"props":1077,"children":1078},{"style":742},[1079],{"type":445,"value":833},{"type":440,"tag":467,"props":1081,"children":1082},{"style":707},[1083],{"type":445,"value":721},{"type":440,"tag":467,"props":1085,"children":1087},{"class":469,"line":1086},16,[1088],{"type":440,"tag":467,"props":1089,"children":1090},{"style":622},[1091],{"type":445,"value":1092},"      // 更新第二个数\n",{"type":440,"tag":467,"props":1094,"children":1096},{"class":469,"line":1095},17,[1097,1102,1106,1110,1114,1118,1122],{"type":440,"tag":467,"props":1098,"children":1099},{"style":742},[1100],{"type":445,"value":1101},"      second",{"type":440,"tag":467,"props":1103,"children":1104},{"style":696},[1105],{"type":445,"value":699},{"type":440,"tag":467,"props":1107,"children":1108},{"style":742},[1109],{"type":445,"value":754},{"type":440,"tag":467,"props":1111,"children":1112},{"style":707},[1113],{"type":445,"value":846},{"type":440,"tag":467,"props":1115,"children":1116},{"style":742},[1117],{"type":445,"value":987},{"type":440,"tag":467,"props":1119,"children":1120},{"style":707},[1121],{"type":445,"value":856},{"type":440,"tag":467,"props":1123,"children":1124},{"style":768},[1125],{"type":445,"value":771},{"type":440,"tag":467,"props":1127,"children":1129},{"class":469,"line":1128},18,[1130,1134,1138],{"type":440,"tag":467,"props":1131,"children":1132},{"style":707},[1133],{"type":445,"value":1041},{"type":440,"tag":467,"props":1135,"children":1136},{"style":778},[1137],{"type":445,"value":1046},{"type":440,"tag":467,"props":1139,"children":1140},{"style":707},[1141],{"type":445,"value":1142}," {\n",{"type":440,"tag":467,"props":1144,"children":1146},{"class":469,"line":1145},19,[1147],{"type":440,"tag":467,"props":1148,"children":1149},{"style":622},[1150],{"type":445,"value":1151},"      // 更新第一个数\n",{"type":440,"tag":467,"props":1153,"children":1155},{"class":469,"line":1154},20,[1156,1161,1165,1169,1173,1177,1181],{"type":440,"tag":467,"props":1157,"children":1158},{"style":742},[1159],{"type":445,"value":1160},"      first",{"type":440,"tag":467,"props":1162,"children":1163},{"style":696},[1164],{"type":445,"value":699},{"type":440,"tag":467,"props":1166,"children":1167},{"style":742},[1168],{"type":445,"value":754},{"type":440,"tag":467,"props":1170,"children":1171},{"style":707},[1172],{"type":445,"value":846},{"type":440,"tag":467,"props":1174,"children":1175},{"style":742},[1176],{"type":445,"value":987},{"type":440,"tag":467,"props":1178,"children":1179},{"style":707},[1180],{"type":445,"value":856},{"type":440,"tag":467,"props":1182,"children":1183},{"style":768},[1184],{"type":445,"value":771},{"type":440,"tag":467,"props":1186,"children":1188},{"class":469,"line":1187},21,[1189],{"type":440,"tag":467,"props":1190,"children":1191},{"style":707},[1192],{"type":445,"value":1193},"    }\n",{"type":440,"tag":467,"props":1195,"children":1197},{"class":469,"line":1196},22,[1198],{"type":440,"tag":467,"props":1199,"children":1200},{"style":707},[1201],{"type":445,"value":1202},"  }\n",{"type":440,"tag":467,"props":1204,"children":1206},{"class":469,"line":1205},23,[1207,1212,1216],{"type":440,"tag":467,"props":1208,"children":1209},{"style":778},[1210],{"type":445,"value":1211},"  return",{"type":440,"tag":467,"props":1213,"children":1214},{"style":798},[1215],{"type":445,"value":816},{"type":440,"tag":467,"props":1217,"children":1218},{"style":768},[1219],{"type":445,"value":771},{"type":440,"tag":467,"props":1221,"children":1223},{"class":469,"line":1222},24,[1224,1229],{"type":440,"tag":467,"props":1225,"children":1226},{"style":707},[1227],{"type":445,"value":1228},"}",{"type":440,"tag":467,"props":1230,"children":1231},{"style":768},[1232],{"type":445,"value":771},{"type":440,"tag":1234,"props":1235,"children":1236},"style",{},[1237],{"type":445,"value":1238},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":433,"searchDepth":680,"depth":680,"links":1240},[1241,1242],{"id":594,"depth":479,"text":594},{"id":599,"depth":479,"text":599,"children":1243},[1244],{"id":605,"depth":488,"text":605},"markdown","content:1.algorithm:3.leetcode:334.increasing-triplet-subsequence.md","content","1.algorithm/3.leetcode/334.increasing-triplet-subsequence.md","md",[1251,1253],{"_path":188,"title":187,"description":1252},"给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。",{"_path":194,"title":193,"description":1254},"编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。",1713426813918]