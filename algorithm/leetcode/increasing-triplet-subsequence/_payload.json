[{"data":1,"prerenderedAt":1223},["Reactive",2],{"navigation":3,"/algorithm/leetcode/increasing-triplet-subsequence":398,"/algorithm/leetcode/increasing-triplet-subsequence-surround":1218},[4,237,265,384],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR 169. 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR 187. 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数相加","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,377],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,347,350,353,356,359,362,365,368,371,374],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":348,"_path":349},"倒计时","/frontend-code-assessment/scene/countdown",{"title":351,"_path":352},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":354,"_path":355},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":357,"_path":358},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":360,"_path":361},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":363,"_path":364},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":366,"_path":367},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":369,"_path":370},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":372,"_path":373},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":375,"_path":376},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":378,"_path":379,"children":380},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[381],{"title":382,"_path":383},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":385,"_path":386,"children":387},"后端语言","/backend-languages",[388],{"title":389,"_path":390,"children":391},"Python","/backend-languages/python",[392,395],{"title":393,"_path":394},"基础","/backend-languages/python/base",{"title":396,"_path":397},"函数","/backend-languages/python/function",{"_path":191,"_dir":399,"_draft":400,"_partial":400,"_locale":401,"title":190,"description":402,"url":403,"body":404,"_type":1213,"_id":1214,"_source":1215,"_file":1216,"_extension":1217},"leetcode",false,"","给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。","https://leetcode.cn/problems/increasing-triplet-subsequence",{"type":405,"children":406,"toc":1207},"root",[407,414,419,424,463,468,499,504,534,539,554,559,565,570,576,1201],{"type":408,"tag":409,"props":410,"children":411},"element","p",{},[412],{"type":413,"value":402},"text",{"type":408,"tag":409,"props":415,"children":416},{},[417],{"type":413,"value":418},"如果存在这样的三元组下标 (i, j, k) 且满足 i \u003C j \u003C k ，使得 nums[i] \u003C nums[j] \u003C nums[k] ，返回 true ；否则，返回 false 。",{"type":408,"tag":409,"props":420,"children":421},{},[422],{"type":413,"value":423},"示例 1：",{"type":408,"tag":425,"props":426,"children":429},"pre",{"className":427,"code":428,"language":413,"meta":401,"style":401},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3,4,5]\n输出：true\n解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",[430],{"type":408,"tag":431,"props":432,"children":433},"code",{"__ignoreMap":401},[434,445,454],{"type":408,"tag":435,"props":436,"children":439},"span",{"class":437,"line":438},"line",1,[440],{"type":408,"tag":435,"props":441,"children":442},{},[443],{"type":413,"value":444},"输入：nums = [1,2,3,4,5]\n",{"type":408,"tag":435,"props":446,"children":448},{"class":437,"line":447},2,[449],{"type":408,"tag":435,"props":450,"children":451},{},[452],{"type":413,"value":453},"输出：true\n",{"type":408,"tag":435,"props":455,"children":457},{"class":437,"line":456},3,[458],{"type":408,"tag":435,"props":459,"children":460},{},[461],{"type":413,"value":462},"解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",{"type":408,"tag":409,"props":464,"children":465},{},[466],{"type":413,"value":467},"示例 2：",{"type":408,"tag":425,"props":469,"children":471},{"className":427,"code":470,"language":413,"meta":401,"style":401},"输入：nums = [5,4,3,2,1]\n输出：false\n解释：不存在满足题意的三元组\n",[472],{"type":408,"tag":431,"props":473,"children":474},{"__ignoreMap":401},[475,483,491],{"type":408,"tag":435,"props":476,"children":477},{"class":437,"line":438},[478],{"type":408,"tag":435,"props":479,"children":480},{},[481],{"type":413,"value":482},"输入：nums = [5,4,3,2,1]\n",{"type":408,"tag":435,"props":484,"children":485},{"class":437,"line":447},[486],{"type":408,"tag":435,"props":487,"children":488},{},[489],{"type":413,"value":490},"输出：false\n",{"type":408,"tag":435,"props":492,"children":493},{"class":437,"line":456},[494],{"type":408,"tag":435,"props":495,"children":496},{},[497],{"type":413,"value":498},"解释：不存在满足题意的三元组\n",{"type":408,"tag":409,"props":500,"children":501},{},[502],{"type":413,"value":503},"示例 3：",{"type":408,"tag":425,"props":505,"children":507},{"className":427,"code":506,"language":413,"meta":401,"style":401},"输入：nums = [2,1,5,0,4,6]\n输出：true\n解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",[508],{"type":408,"tag":431,"props":509,"children":510},{"__ignoreMap":401},[511,519,526],{"type":408,"tag":435,"props":512,"children":513},{"class":437,"line":438},[514],{"type":408,"tag":435,"props":515,"children":516},{},[517],{"type":413,"value":518},"输入：nums = [2,1,5,0,4,6]\n",{"type":408,"tag":435,"props":520,"children":521},{"class":437,"line":447},[522],{"type":408,"tag":435,"props":523,"children":524},{},[525],{"type":413,"value":453},{"type":408,"tag":435,"props":527,"children":528},{"class":437,"line":456},[529],{"type":408,"tag":435,"props":530,"children":531},{},[532],{"type":413,"value":533},"解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",{"type":408,"tag":409,"props":535,"children":536},{},[537],{"type":413,"value":538},"提示：",{"type":408,"tag":540,"props":541,"children":542},"ul",{},[543,549],{"type":408,"tag":544,"props":545,"children":546},"li",{},[547],{"type":413,"value":548},"1 \u003C= nums.length \u003C= 5 * 10^5",{"type":408,"tag":544,"props":550,"children":551},{},[552],{"type":413,"value":553},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":408,"tag":409,"props":555,"children":556},{},[557],{"type":413,"value":558},"进阶：你能实现时间复杂度为 O(n) ，空间复杂度为 O(1) 的解决方案吗？",{"type":408,"tag":560,"props":561,"children":563},"h2",{"id":562},"解题思路",[564],{"type":413,"value":562},{"type":408,"tag":560,"props":566,"children":568},{"id":567},"实现",[569],{"type":413,"value":567},{"type":408,"tag":571,"props":572,"children":574},"h3",{"id":573},"贪心",[575],{"type":413,"value":573},{"type":408,"tag":425,"props":577,"children":581},{"className":578,"code":579,"language":580,"meta":401,"style":401},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar increasingTriplet = function (nums) {\n  // 维护两个变量，代表递增序列中的第一个数、第二个数\n  let len = nums.length;\n  if (len \u003C 3) return false;\n  let first = nums[0];\n  let second = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i \u003C len; i++) {\n    if (nums[i] > second) {\n      // 找到第三个数\n      return true;\n    } else if (nums[i] > first) {\n      // 更新第二个数\n      second = nums[i];\n    } else {\n      // 更新第一个数\n      first = nums[i];\n    }\n  }\n  return false;\n};\n","js",[582],{"type":408,"tag":431,"props":583,"children":584},{"__ignoreMap":401},[585,594,620,637,646,690,699,740,789,829,864,930,974,983,1001,1052,1061,1094,1111,1120,1153,1162,1171,1188],{"type":408,"tag":435,"props":586,"children":587},{"class":437,"line":438},[588],{"type":408,"tag":435,"props":589,"children":591},{"style":590},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[592],{"type":413,"value":593},"/**\n",{"type":408,"tag":435,"props":595,"children":596},{"class":437,"line":447},[597,602,608,614],{"type":408,"tag":435,"props":598,"children":599},{"style":590},[600],{"type":413,"value":601}," * ",{"type":408,"tag":435,"props":603,"children":605},{"style":604},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[606],{"type":413,"value":607},"@param",{"type":408,"tag":435,"props":609,"children":611},{"style":610},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[612],{"type":413,"value":613}," {number[]}",{"type":408,"tag":435,"props":615,"children":617},{"style":616},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[618],{"type":413,"value":619}," nums\n",{"type":408,"tag":435,"props":621,"children":622},{"class":437,"line":456},[623,627,632],{"type":408,"tag":435,"props":624,"children":625},{"style":590},[626],{"type":413,"value":601},{"type":408,"tag":435,"props":628,"children":629},{"style":604},[630],{"type":413,"value":631},"@return",{"type":408,"tag":435,"props":633,"children":634},{"style":610},[635],{"type":413,"value":636}," {boolean}\n",{"type":408,"tag":435,"props":638,"children":640},{"class":437,"line":639},4,[641],{"type":408,"tag":435,"props":642,"children":643},{"style":590},[644],{"type":413,"value":645}," */\n",{"type":408,"tag":435,"props":647,"children":649},{"class":437,"line":648},5,[650,656,662,668,673,679,685],{"type":408,"tag":435,"props":651,"children":653},{"style":652},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[654],{"type":413,"value":655},"var",{"type":408,"tag":435,"props":657,"children":659},{"style":658},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[660],{"type":413,"value":661}," increasingTriplet",{"type":408,"tag":435,"props":663,"children":665},{"style":664},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[666],{"type":413,"value":667}," =",{"type":408,"tag":435,"props":669,"children":670},{"style":652},[671],{"type":413,"value":672}," function",{"type":408,"tag":435,"props":674,"children":676},{"style":675},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[677],{"type":413,"value":678}," (",{"type":408,"tag":435,"props":680,"children":682},{"style":681},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[683],{"type":413,"value":684},"nums",{"type":408,"tag":435,"props":686,"children":687},{"style":675},[688],{"type":413,"value":689},") {\n",{"type":408,"tag":435,"props":691,"children":693},{"class":437,"line":692},6,[694],{"type":408,"tag":435,"props":695,"children":696},{"style":590},[697],{"type":413,"value":698},"  // 维护两个变量，代表递增序列中的第一个数、第二个数\n",{"type":408,"tag":435,"props":700,"children":702},{"class":437,"line":701},7,[703,708,714,718,723,729,734],{"type":408,"tag":435,"props":704,"children":705},{"style":652},[706],{"type":413,"value":707},"  let",{"type":408,"tag":435,"props":709,"children":711},{"style":710},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[712],{"type":413,"value":713}," len",{"type":408,"tag":435,"props":715,"children":716},{"style":664},[717],{"type":413,"value":667},{"type":408,"tag":435,"props":719,"children":720},{"style":710},[721],{"type":413,"value":722}," nums",{"type":408,"tag":435,"props":724,"children":726},{"style":725},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[727],{"type":413,"value":728},".",{"type":408,"tag":435,"props":730,"children":731},{"style":675},[732],{"type":413,"value":733},"length",{"type":408,"tag":435,"props":735,"children":737},{"style":736},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[738],{"type":413,"value":739},";\n",{"type":408,"tag":435,"props":741,"children":743},{"class":437,"line":742},8,[744,750,754,759,764,770,775,780,785],{"type":408,"tag":435,"props":745,"children":747},{"style":746},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[748],{"type":413,"value":749},"  if",{"type":408,"tag":435,"props":751,"children":752},{"style":675},[753],{"type":413,"value":678},{"type":408,"tag":435,"props":755,"children":756},{"style":710},[757],{"type":413,"value":758},"len",{"type":408,"tag":435,"props":760,"children":761},{"style":664},[762],{"type":413,"value":763}," \u003C",{"type":408,"tag":435,"props":765,"children":767},{"style":766},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[768],{"type":413,"value":769}," 3",{"type":408,"tag":435,"props":771,"children":772},{"style":675},[773],{"type":413,"value":774},") ",{"type":408,"tag":435,"props":776,"children":777},{"style":746},[778],{"type":413,"value":779},"return",{"type":408,"tag":435,"props":781,"children":782},{"style":766},[783],{"type":413,"value":784}," false",{"type":408,"tag":435,"props":786,"children":787},{"style":736},[788],{"type":413,"value":739},{"type":408,"tag":435,"props":790,"children":792},{"class":437,"line":791},9,[793,797,802,806,810,815,820,825],{"type":408,"tag":435,"props":794,"children":795},{"style":652},[796],{"type":413,"value":707},{"type":408,"tag":435,"props":798,"children":799},{"style":710},[800],{"type":413,"value":801}," first",{"type":408,"tag":435,"props":803,"children":804},{"style":664},[805],{"type":413,"value":667},{"type":408,"tag":435,"props":807,"children":808},{"style":710},[809],{"type":413,"value":722},{"type":408,"tag":435,"props":811,"children":812},{"style":675},[813],{"type":413,"value":814},"[",{"type":408,"tag":435,"props":816,"children":817},{"style":766},[818],{"type":413,"value":819},"0",{"type":408,"tag":435,"props":821,"children":822},{"style":675},[823],{"type":413,"value":824},"]",{"type":408,"tag":435,"props":826,"children":827},{"style":736},[828],{"type":413,"value":739},{"type":408,"tag":435,"props":830,"children":832},{"class":437,"line":831},10,[833,837,842,846,851,855,860],{"type":408,"tag":435,"props":834,"children":835},{"style":652},[836],{"type":413,"value":707},{"type":408,"tag":435,"props":838,"children":839},{"style":710},[840],{"type":413,"value":841}," second",{"type":408,"tag":435,"props":843,"children":844},{"style":664},[845],{"type":413,"value":667},{"type":408,"tag":435,"props":847,"children":848},{"style":710},[849],{"type":413,"value":850}," Number",{"type":408,"tag":435,"props":852,"children":853},{"style":725},[854],{"type":413,"value":728},{"type":408,"tag":435,"props":856,"children":857},{"style":675},[858],{"type":413,"value":859},"MAX_SAFE_INTEGER",{"type":408,"tag":435,"props":861,"children":862},{"style":736},[863],{"type":413,"value":739},{"type":408,"tag":435,"props":865,"children":867},{"class":437,"line":866},11,[868,873,877,882,887,891,896,901,905,909,913,917,921,926],{"type":408,"tag":435,"props":869,"children":870},{"style":746},[871],{"type":413,"value":872},"  for",{"type":408,"tag":435,"props":874,"children":875},{"style":675},[876],{"type":413,"value":678},{"type":408,"tag":435,"props":878,"children":879},{"style":652},[880],{"type":413,"value":881},"let",{"type":408,"tag":435,"props":883,"children":884},{"style":710},[885],{"type":413,"value":886}," i",{"type":408,"tag":435,"props":888,"children":889},{"style":664},[890],{"type":413,"value":667},{"type":408,"tag":435,"props":892,"children":893},{"style":766},[894],{"type":413,"value":895}," 0",{"type":408,"tag":435,"props":897,"children":898},{"style":736},[899],{"type":413,"value":900},";",{"type":408,"tag":435,"props":902,"children":903},{"style":710},[904],{"type":413,"value":886},{"type":408,"tag":435,"props":906,"children":907},{"style":664},[908],{"type":413,"value":763},{"type":408,"tag":435,"props":910,"children":911},{"style":710},[912],{"type":413,"value":713},{"type":408,"tag":435,"props":914,"children":915},{"style":736},[916],{"type":413,"value":900},{"type":408,"tag":435,"props":918,"children":919},{"style":710},[920],{"type":413,"value":886},{"type":408,"tag":435,"props":922,"children":923},{"style":664},[924],{"type":413,"value":925},"++",{"type":408,"tag":435,"props":927,"children":928},{"style":675},[929],{"type":413,"value":689},{"type":408,"tag":435,"props":931,"children":933},{"class":437,"line":932},12,[934,939,943,947,951,956,961,966,970],{"type":408,"tag":435,"props":935,"children":936},{"style":746},[937],{"type":413,"value":938},"    if",{"type":408,"tag":435,"props":940,"children":941},{"style":675},[942],{"type":413,"value":678},{"type":408,"tag":435,"props":944,"children":945},{"style":710},[946],{"type":413,"value":684},{"type":408,"tag":435,"props":948,"children":949},{"style":675},[950],{"type":413,"value":814},{"type":408,"tag":435,"props":952,"children":953},{"style":710},[954],{"type":413,"value":955},"i",{"type":408,"tag":435,"props":957,"children":958},{"style":675},[959],{"type":413,"value":960},"] ",{"type":408,"tag":435,"props":962,"children":963},{"style":664},[964],{"type":413,"value":965},">",{"type":408,"tag":435,"props":967,"children":968},{"style":710},[969],{"type":413,"value":841},{"type":408,"tag":435,"props":971,"children":972},{"style":675},[973],{"type":413,"value":689},{"type":408,"tag":435,"props":975,"children":977},{"class":437,"line":976},13,[978],{"type":408,"tag":435,"props":979,"children":980},{"style":590},[981],{"type":413,"value":982},"      // 找到第三个数\n",{"type":408,"tag":435,"props":984,"children":986},{"class":437,"line":985},14,[987,992,997],{"type":408,"tag":435,"props":988,"children":989},{"style":746},[990],{"type":413,"value":991},"      return",{"type":408,"tag":435,"props":993,"children":994},{"style":766},[995],{"type":413,"value":996}," true",{"type":408,"tag":435,"props":998,"children":999},{"style":736},[1000],{"type":413,"value":739},{"type":408,"tag":435,"props":1002,"children":1004},{"class":437,"line":1003},15,[1005,1010,1015,1020,1024,1028,1032,1036,1040,1044,1048],{"type":408,"tag":435,"props":1006,"children":1007},{"style":675},[1008],{"type":413,"value":1009},"    } ",{"type":408,"tag":435,"props":1011,"children":1012},{"style":746},[1013],{"type":413,"value":1014},"else",{"type":408,"tag":435,"props":1016,"children":1017},{"style":746},[1018],{"type":413,"value":1019}," if",{"type":408,"tag":435,"props":1021,"children":1022},{"style":675},[1023],{"type":413,"value":678},{"type":408,"tag":435,"props":1025,"children":1026},{"style":710},[1027],{"type":413,"value":684},{"type":408,"tag":435,"props":1029,"children":1030},{"style":675},[1031],{"type":413,"value":814},{"type":408,"tag":435,"props":1033,"children":1034},{"style":710},[1035],{"type":413,"value":955},{"type":408,"tag":435,"props":1037,"children":1038},{"style":675},[1039],{"type":413,"value":960},{"type":408,"tag":435,"props":1041,"children":1042},{"style":664},[1043],{"type":413,"value":965},{"type":408,"tag":435,"props":1045,"children":1046},{"style":710},[1047],{"type":413,"value":801},{"type":408,"tag":435,"props":1049,"children":1050},{"style":675},[1051],{"type":413,"value":689},{"type":408,"tag":435,"props":1053,"children":1055},{"class":437,"line":1054},16,[1056],{"type":408,"tag":435,"props":1057,"children":1058},{"style":590},[1059],{"type":413,"value":1060},"      // 更新第二个数\n",{"type":408,"tag":435,"props":1062,"children":1064},{"class":437,"line":1063},17,[1065,1070,1074,1078,1082,1086,1090],{"type":408,"tag":435,"props":1066,"children":1067},{"style":710},[1068],{"type":413,"value":1069},"      second",{"type":408,"tag":435,"props":1071,"children":1072},{"style":664},[1073],{"type":413,"value":667},{"type":408,"tag":435,"props":1075,"children":1076},{"style":710},[1077],{"type":413,"value":722},{"type":408,"tag":435,"props":1079,"children":1080},{"style":675},[1081],{"type":413,"value":814},{"type":408,"tag":435,"props":1083,"children":1084},{"style":710},[1085],{"type":413,"value":955},{"type":408,"tag":435,"props":1087,"children":1088},{"style":675},[1089],{"type":413,"value":824},{"type":408,"tag":435,"props":1091,"children":1092},{"style":736},[1093],{"type":413,"value":739},{"type":408,"tag":435,"props":1095,"children":1097},{"class":437,"line":1096},18,[1098,1102,1106],{"type":408,"tag":435,"props":1099,"children":1100},{"style":675},[1101],{"type":413,"value":1009},{"type":408,"tag":435,"props":1103,"children":1104},{"style":746},[1105],{"type":413,"value":1014},{"type":408,"tag":435,"props":1107,"children":1108},{"style":675},[1109],{"type":413,"value":1110}," {\n",{"type":408,"tag":435,"props":1112,"children":1114},{"class":437,"line":1113},19,[1115],{"type":408,"tag":435,"props":1116,"children":1117},{"style":590},[1118],{"type":413,"value":1119},"      // 更新第一个数\n",{"type":408,"tag":435,"props":1121,"children":1123},{"class":437,"line":1122},20,[1124,1129,1133,1137,1141,1145,1149],{"type":408,"tag":435,"props":1125,"children":1126},{"style":710},[1127],{"type":413,"value":1128},"      first",{"type":408,"tag":435,"props":1130,"children":1131},{"style":664},[1132],{"type":413,"value":667},{"type":408,"tag":435,"props":1134,"children":1135},{"style":710},[1136],{"type":413,"value":722},{"type":408,"tag":435,"props":1138,"children":1139},{"style":675},[1140],{"type":413,"value":814},{"type":408,"tag":435,"props":1142,"children":1143},{"style":710},[1144],{"type":413,"value":955},{"type":408,"tag":435,"props":1146,"children":1147},{"style":675},[1148],{"type":413,"value":824},{"type":408,"tag":435,"props":1150,"children":1151},{"style":736},[1152],{"type":413,"value":739},{"type":408,"tag":435,"props":1154,"children":1156},{"class":437,"line":1155},21,[1157],{"type":408,"tag":435,"props":1158,"children":1159},{"style":675},[1160],{"type":413,"value":1161},"    }\n",{"type":408,"tag":435,"props":1163,"children":1165},{"class":437,"line":1164},22,[1166],{"type":408,"tag":435,"props":1167,"children":1168},{"style":675},[1169],{"type":413,"value":1170},"  }\n",{"type":408,"tag":435,"props":1172,"children":1174},{"class":437,"line":1173},23,[1175,1180,1184],{"type":408,"tag":435,"props":1176,"children":1177},{"style":746},[1178],{"type":413,"value":1179},"  return",{"type":408,"tag":435,"props":1181,"children":1182},{"style":766},[1183],{"type":413,"value":784},{"type":408,"tag":435,"props":1185,"children":1186},{"style":736},[1187],{"type":413,"value":739},{"type":408,"tag":435,"props":1189,"children":1191},{"class":437,"line":1190},24,[1192,1197],{"type":408,"tag":435,"props":1193,"children":1194},{"style":675},[1195],{"type":413,"value":1196},"}",{"type":408,"tag":435,"props":1198,"children":1199},{"style":736},[1200],{"type":413,"value":739},{"type":408,"tag":1202,"props":1203,"children":1204},"style",{},[1205],{"type":413,"value":1206},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":401,"searchDepth":648,"depth":648,"links":1208},[1209,1210],{"id":562,"depth":447,"text":562},{"id":567,"depth":447,"text":567,"children":1211},[1212],{"id":573,"depth":456,"text":573},"markdown","content:1.algorithm:3.leetcode:334.increasing-triplet-subsequence.md","content","1.algorithm/3.leetcode/334.increasing-triplet-subsequence.md","md",[1219,1221],{"_path":188,"title":187,"description":1220},"给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。",{"_path":194,"title":193,"description":1222},"编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。",1713153295804]