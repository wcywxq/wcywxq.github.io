[{"data":1,"prerenderedAt":1100},["Reactive",2],{"navigation":3,"/algorithm/leetcode/find-peak-element":427,"/algorithm/leetcode/find-peak-element-surround":1095},[4,237,265,406,413],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,399],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":382,"_path":383},"随机数","/frontend-code-assessment/scene/random-number",{"title":385,"_path":386},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":388,"_path":389},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":391,"_path":392},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":394,"_path":395},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":397,"_path":398},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":400,"_path":401,"children":402},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[403],{"title":404,"_path":405},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":407,"_path":408,"children":409},"项目","/pro",[410],{"title":411,"_path":412},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":414,"_path":415,"children":416},"后端语言","/backend-languages",[417],{"title":418,"_path":419,"children":420},"Python","/backend-languages/python",[421,424],{"title":422,"_path":423},"基础","/backend-languages/python/base",{"title":425,"_path":426},"函数","/backend-languages/python/function",{"_path":161,"_dir":428,"_draft":429,"_partial":429,"_locale":430,"title":160,"description":431,"url":432,"body":433,"_type":1090,"_id":1091,"_source":1092,"_file":1093,"_extension":1094},"leetcode",false,"","峰值元素是指其值严格大于左右相邻值的元素。","https://leetcode.cn/problems/find-peak-element",{"type":434,"children":435,"toc":1084},"root",[436,443,448,453,458,463,502,507,547,552,572,578,583,589,1078],{"type":437,"tag":438,"props":439,"children":440},"element","p",{},[441],{"type":442,"value":431},"text",{"type":437,"tag":438,"props":444,"children":445},{},[446],{"type":442,"value":447},"给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。",{"type":437,"tag":438,"props":449,"children":450},{},[451],{"type":442,"value":452},"你可以假设 nums[-1] = nums[n] = -∞ 。",{"type":437,"tag":438,"props":454,"children":455},{},[456],{"type":442,"value":457},"你必须实现时间复杂度为 O(log n) 的算法来解决此问题。",{"type":437,"tag":438,"props":459,"children":460},{},[461],{"type":442,"value":462},"示例 1：",{"type":437,"tag":464,"props":465,"children":468},"pre",{"className":466,"code":467,"language":442,"meta":430,"style":430},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。\n",[469],{"type":437,"tag":470,"props":471,"children":472},"code",{"__ignoreMap":430},[473,484,493],{"type":437,"tag":474,"props":475,"children":478},"span",{"class":476,"line":477},"line",1,[479],{"type":437,"tag":474,"props":480,"children":481},{},[482],{"type":442,"value":483},"输入：nums = [1,2,3,1]\n",{"type":437,"tag":474,"props":485,"children":487},{"class":476,"line":486},2,[488],{"type":437,"tag":474,"props":489,"children":490},{},[491],{"type":442,"value":492},"输出：2\n",{"type":437,"tag":474,"props":494,"children":496},{"class":476,"line":495},3,[497],{"type":437,"tag":474,"props":498,"children":499},{},[500],{"type":442,"value":501},"解释：3 是峰值元素，你的函数应该返回其索引 2。\n",{"type":437,"tag":438,"props":503,"children":504},{},[505],{"type":442,"value":506},"示例 2：",{"type":437,"tag":464,"props":508,"children":510},{"className":466,"code":509,"language":442,"meta":430,"style":430},"输入：nums = [1,2,1,3,5,6,4]\n输出：1 或 5\n解释：你的函数可以返回索引 1，其峰值元素为 2；\n或者返回索引 5， 其峰值元素为 6。\n",[511],{"type":437,"tag":470,"props":512,"children":513},{"__ignoreMap":430},[514,522,530,538],{"type":437,"tag":474,"props":515,"children":516},{"class":476,"line":477},[517],{"type":437,"tag":474,"props":518,"children":519},{},[520],{"type":442,"value":521},"输入：nums = [1,2,1,3,5,6,4]\n",{"type":437,"tag":474,"props":523,"children":524},{"class":476,"line":486},[525],{"type":437,"tag":474,"props":526,"children":527},{},[528],{"type":442,"value":529},"输出：1 或 5\n",{"type":437,"tag":474,"props":531,"children":532},{"class":476,"line":495},[533],{"type":437,"tag":474,"props":534,"children":535},{},[536],{"type":442,"value":537},"解释：你的函数可以返回索引 1，其峰值元素为 2；\n",{"type":437,"tag":474,"props":539,"children":541},{"class":476,"line":540},4,[542],{"type":437,"tag":474,"props":543,"children":544},{},[545],{"type":442,"value":546},"或者返回索引 5， 其峰值元素为 6。\n",{"type":437,"tag":438,"props":548,"children":549},{},[550],{"type":442,"value":551},"提示：",{"type":437,"tag":553,"props":554,"children":555},"ul",{},[556,562,567],{"type":437,"tag":557,"props":558,"children":559},"li",{},[560],{"type":442,"value":561},"1 \u003C= nums.length \u003C= 1000",{"type":437,"tag":557,"props":563,"children":564},{},[565],{"type":442,"value":566},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":437,"tag":557,"props":568,"children":569},{},[570],{"type":442,"value":571},"对于所有有效的 i 都有 nums[i] != nums[i + 1]",{"type":437,"tag":573,"props":574,"children":576},"h2",{"id":575},"解题思路",[577],{"type":442,"value":575},{"type":437,"tag":573,"props":579,"children":581},{"id":580},"实现",[582],{"type":442,"value":580},{"type":437,"tag":584,"props":585,"children":587},"h3",{"id":586},"二分查找",[588],{"type":442,"value":586},{"type":437,"tag":464,"props":590,"children":594},{"className":591,"code":592,"language":593,"meta":430,"style":430},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findPeakElement = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let l = -1;\n  let r = nums.length - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] > nums[mid + 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return r;\n};\n","js",[595],{"type":437,"tag":470,"props":596,"children":597},{"__ignoreMap":430},[598,607,633,650,658,702,711,720,756,803,844,896,958,985,1004,1030,1039,1048,1065],{"type":437,"tag":474,"props":599,"children":600},{"class":476,"line":477},[601],{"type":437,"tag":474,"props":602,"children":604},{"style":603},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[605],{"type":442,"value":606},"/**\n",{"type":437,"tag":474,"props":608,"children":609},{"class":476,"line":486},[610,615,621,627],{"type":437,"tag":474,"props":611,"children":612},{"style":603},[613],{"type":442,"value":614}," * ",{"type":437,"tag":474,"props":616,"children":618},{"style":617},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[619],{"type":442,"value":620},"@param",{"type":437,"tag":474,"props":622,"children":624},{"style":623},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[625],{"type":442,"value":626}," {number[]}",{"type":437,"tag":474,"props":628,"children":630},{"style":629},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[631],{"type":442,"value":632}," nums\n",{"type":437,"tag":474,"props":634,"children":635},{"class":476,"line":495},[636,640,645],{"type":437,"tag":474,"props":637,"children":638},{"style":603},[639],{"type":442,"value":614},{"type":437,"tag":474,"props":641,"children":642},{"style":617},[643],{"type":442,"value":644},"@return",{"type":437,"tag":474,"props":646,"children":647},{"style":623},[648],{"type":442,"value":649}," {number}\n",{"type":437,"tag":474,"props":651,"children":652},{"class":476,"line":540},[653],{"type":437,"tag":474,"props":654,"children":655},{"style":603},[656],{"type":442,"value":657}," */\n",{"type":437,"tag":474,"props":659,"children":661},{"class":476,"line":660},5,[662,668,674,680,685,691,697],{"type":437,"tag":474,"props":663,"children":665},{"style":664},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[666],{"type":442,"value":667},"var",{"type":437,"tag":474,"props":669,"children":671},{"style":670},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[672],{"type":442,"value":673}," findPeakElement",{"type":437,"tag":474,"props":675,"children":677},{"style":676},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[678],{"type":442,"value":679}," =",{"type":437,"tag":474,"props":681,"children":682},{"style":664},[683],{"type":442,"value":684}," function",{"type":437,"tag":474,"props":686,"children":688},{"style":687},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[689],{"type":442,"value":690}," (",{"type":437,"tag":474,"props":692,"children":694},{"style":693},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[695],{"type":442,"value":696},"nums",{"type":437,"tag":474,"props":698,"children":699},{"style":687},[700],{"type":442,"value":701},") {\n",{"type":437,"tag":474,"props":703,"children":705},{"class":476,"line":704},6,[706],{"type":437,"tag":474,"props":707,"children":708},{"style":603},[709],{"type":442,"value":710},"  // [0, n - 2]\n",{"type":437,"tag":474,"props":712,"children":714},{"class":476,"line":713},7,[715],{"type":437,"tag":474,"props":716,"children":717},{"style":603},[718],{"type":442,"value":719},"  // (-1, n - 1) 开区间写法\n",{"type":437,"tag":474,"props":721,"children":723},{"class":476,"line":722},8,[724,729,735,739,744,750],{"type":437,"tag":474,"props":725,"children":726},{"style":664},[727],{"type":442,"value":728},"  let",{"type":437,"tag":474,"props":730,"children":732},{"style":731},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[733],{"type":442,"value":734}," l",{"type":437,"tag":474,"props":736,"children":737},{"style":676},[738],{"type":442,"value":679},{"type":437,"tag":474,"props":740,"children":741},{"style":676},[742],{"type":442,"value":743}," -",{"type":437,"tag":474,"props":745,"children":747},{"style":746},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[748],{"type":442,"value":749},"1",{"type":437,"tag":474,"props":751,"children":753},{"style":752},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[754],{"type":442,"value":755},";\n",{"type":437,"tag":474,"props":757,"children":759},{"class":476,"line":758},9,[760,764,769,773,778,784,789,794,799],{"type":437,"tag":474,"props":761,"children":762},{"style":664},[763],{"type":442,"value":728},{"type":437,"tag":474,"props":765,"children":766},{"style":731},[767],{"type":442,"value":768}," r",{"type":437,"tag":474,"props":770,"children":771},{"style":676},[772],{"type":442,"value":679},{"type":437,"tag":474,"props":774,"children":775},{"style":731},[776],{"type":442,"value":777}," nums",{"type":437,"tag":474,"props":779,"children":781},{"style":780},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[782],{"type":442,"value":783},".",{"type":437,"tag":474,"props":785,"children":786},{"style":687},[787],{"type":442,"value":788},"length ",{"type":437,"tag":474,"props":790,"children":791},{"style":676},[792],{"type":442,"value":793},"-",{"type":437,"tag":474,"props":795,"children":796},{"style":746},[797],{"type":442,"value":798}," 1",{"type":437,"tag":474,"props":800,"children":801},{"style":752},[802],{"type":442,"value":755},{"type":437,"tag":474,"props":804,"children":806},{"class":476,"line":805},10,[807,813,817,822,827,831,836,840],{"type":437,"tag":474,"props":808,"children":810},{"style":809},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[811],{"type":442,"value":812},"  while",{"type":437,"tag":474,"props":814,"children":815},{"style":687},[816],{"type":442,"value":690},{"type":437,"tag":474,"props":818,"children":819},{"style":731},[820],{"type":442,"value":821},"l",{"type":437,"tag":474,"props":823,"children":824},{"style":676},[825],{"type":442,"value":826}," +",{"type":437,"tag":474,"props":828,"children":829},{"style":746},[830],{"type":442,"value":798},{"type":437,"tag":474,"props":832,"children":833},{"style":676},[834],{"type":442,"value":835}," \u003C",{"type":437,"tag":474,"props":837,"children":838},{"style":731},[839],{"type":442,"value":768},{"type":437,"tag":474,"props":841,"children":842},{"style":687},[843],{"type":442,"value":701},{"type":437,"tag":474,"props":845,"children":847},{"class":476,"line":846},11,[848,853,858,862,866,870,874,878,883,888,892],{"type":437,"tag":474,"props":849,"children":850},{"style":664},[851],{"type":442,"value":852},"    let",{"type":437,"tag":474,"props":854,"children":855},{"style":731},[856],{"type":442,"value":857}," mid",{"type":437,"tag":474,"props":859,"children":860},{"style":676},[861],{"type":442,"value":679},{"type":437,"tag":474,"props":863,"children":864},{"style":687},[865],{"type":442,"value":690},{"type":437,"tag":474,"props":867,"children":868},{"style":731},[869],{"type":442,"value":821},{"type":437,"tag":474,"props":871,"children":872},{"style":676},[873],{"type":442,"value":826},{"type":437,"tag":474,"props":875,"children":876},{"style":731},[877],{"type":442,"value":768},{"type":437,"tag":474,"props":879,"children":880},{"style":687},[881],{"type":442,"value":882},") ",{"type":437,"tag":474,"props":884,"children":885},{"style":676},[886],{"type":442,"value":887},">>",{"type":437,"tag":474,"props":889,"children":890},{"style":746},[891],{"type":442,"value":798},{"type":437,"tag":474,"props":893,"children":894},{"style":752},[895],{"type":442,"value":755},{"type":437,"tag":474,"props":897,"children":899},{"class":476,"line":898},12,[900,905,909,913,918,923,928,933,937,941,945,949,953],{"type":437,"tag":474,"props":901,"children":902},{"style":809},[903],{"type":442,"value":904},"    if",{"type":437,"tag":474,"props":906,"children":907},{"style":687},[908],{"type":442,"value":690},{"type":437,"tag":474,"props":910,"children":911},{"style":731},[912],{"type":442,"value":696},{"type":437,"tag":474,"props":914,"children":915},{"style":687},[916],{"type":442,"value":917},"[",{"type":437,"tag":474,"props":919,"children":920},{"style":731},[921],{"type":442,"value":922},"mid",{"type":437,"tag":474,"props":924,"children":925},{"style":687},[926],{"type":442,"value":927},"] ",{"type":437,"tag":474,"props":929,"children":930},{"style":676},[931],{"type":442,"value":932},">",{"type":437,"tag":474,"props":934,"children":935},{"style":731},[936],{"type":442,"value":777},{"type":437,"tag":474,"props":938,"children":939},{"style":687},[940],{"type":442,"value":917},{"type":437,"tag":474,"props":942,"children":943},{"style":731},[944],{"type":442,"value":922},{"type":437,"tag":474,"props":946,"children":947},{"style":676},[948],{"type":442,"value":826},{"type":437,"tag":474,"props":950,"children":951},{"style":746},[952],{"type":442,"value":798},{"type":437,"tag":474,"props":954,"children":955},{"style":687},[956],{"type":442,"value":957},"]) {\n",{"type":437,"tag":474,"props":959,"children":961},{"class":476,"line":960},13,[962,967,971,975,980],{"type":437,"tag":474,"props":963,"children":964},{"style":731},[965],{"type":442,"value":966},"      r",{"type":437,"tag":474,"props":968,"children":969},{"style":676},[970],{"type":442,"value":679},{"type":437,"tag":474,"props":972,"children":973},{"style":731},[974],{"type":442,"value":857},{"type":437,"tag":474,"props":976,"children":977},{"style":752},[978],{"type":442,"value":979},";",{"type":437,"tag":474,"props":981,"children":982},{"style":603},[983],{"type":442,"value":984}," // 染蓝色\n",{"type":437,"tag":474,"props":986,"children":988},{"class":476,"line":987},14,[989,994,999],{"type":437,"tag":474,"props":990,"children":991},{"style":687},[992],{"type":442,"value":993},"    } ",{"type":437,"tag":474,"props":995,"children":996},{"style":809},[997],{"type":442,"value":998},"else",{"type":437,"tag":474,"props":1000,"children":1001},{"style":687},[1002],{"type":442,"value":1003}," {\n",{"type":437,"tag":474,"props":1005,"children":1007},{"class":476,"line":1006},15,[1008,1013,1017,1021,1025],{"type":437,"tag":474,"props":1009,"children":1010},{"style":731},[1011],{"type":442,"value":1012},"      l",{"type":437,"tag":474,"props":1014,"children":1015},{"style":676},[1016],{"type":442,"value":679},{"type":437,"tag":474,"props":1018,"children":1019},{"style":731},[1020],{"type":442,"value":857},{"type":437,"tag":474,"props":1022,"children":1023},{"style":752},[1024],{"type":442,"value":979},{"type":437,"tag":474,"props":1026,"children":1027},{"style":603},[1028],{"type":442,"value":1029}," // 染红色\n",{"type":437,"tag":474,"props":1031,"children":1033},{"class":476,"line":1032},16,[1034],{"type":437,"tag":474,"props":1035,"children":1036},{"style":687},[1037],{"type":442,"value":1038},"    }\n",{"type":437,"tag":474,"props":1040,"children":1042},{"class":476,"line":1041},17,[1043],{"type":437,"tag":474,"props":1044,"children":1045},{"style":687},[1046],{"type":442,"value":1047},"  }\n",{"type":437,"tag":474,"props":1049,"children":1051},{"class":476,"line":1050},18,[1052,1057,1061],{"type":437,"tag":474,"props":1053,"children":1054},{"style":809},[1055],{"type":442,"value":1056},"  return",{"type":437,"tag":474,"props":1058,"children":1059},{"style":731},[1060],{"type":442,"value":768},{"type":437,"tag":474,"props":1062,"children":1063},{"style":752},[1064],{"type":442,"value":755},{"type":437,"tag":474,"props":1066,"children":1068},{"class":476,"line":1067},19,[1069,1074],{"type":437,"tag":474,"props":1070,"children":1071},{"style":687},[1072],{"type":442,"value":1073},"}",{"type":437,"tag":474,"props":1075,"children":1076},{"style":752},[1077],{"type":442,"value":755},{"type":437,"tag":1079,"props":1080,"children":1081},"style",{},[1082],{"type":442,"value":1083},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":430,"searchDepth":660,"depth":660,"links":1085},[1086,1087],{"id":575,"depth":486,"text":575},{"id":580,"depth":486,"text":580,"children":1088},[1089],{"id":586,"depth":495,"text":586},"markdown","content:1.algorithm:3.leetcode:162.find-peak-element.md","content","1.algorithm/3.leetcode/162.find-peak-element.md","md",[1096,1098],{"_path":158,"title":157,"description":1097},"给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。",{"_path":164,"title":163,"description":1099},"给你两个版本号 version1 和 version2 ，请你比较它们。",1713426450664]