[{"data":1,"prerenderedAt":1103},["Reactive",2],{"navigation":3,"/algorithm/leetcode/find-peak-element":430,"/algorithm/leetcode/find-peak-element-surround":1098},[4,237,265,409,416],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,402],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396,399],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":379,"_path":380},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":382,"_path":383},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":385,"_path":386},"随机数","/frontend-code-assessment/scene/random-number",{"title":388,"_path":389},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":391,"_path":392},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":394,"_path":395},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":397,"_path":398},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":400,"_path":401},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":403,"_path":404,"children":405},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[406],{"title":407,"_path":408},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":410,"_path":411,"children":412},"项目","/pro",[413],{"title":414,"_path":415},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":417,"_path":418,"children":419},"后端语言","/backend-languages",[420],{"title":421,"_path":422,"children":423},"Python","/backend-languages/python",[424,427],{"title":425,"_path":426},"基础","/backend-languages/python/base",{"title":428,"_path":429},"函数","/backend-languages/python/function",{"_path":161,"_dir":431,"_draft":432,"_partial":432,"_locale":433,"title":160,"description":434,"url":435,"body":436,"_type":1093,"_id":1094,"_source":1095,"_file":1096,"_extension":1097},"leetcode",false,"","峰值元素是指其值严格大于左右相邻值的元素。","https://leetcode.cn/problems/find-peak-element",{"type":437,"children":438,"toc":1087},"root",[439,446,451,456,461,466,505,510,550,555,575,581,586,592,1081],{"type":440,"tag":441,"props":442,"children":443},"element","p",{},[444],{"type":445,"value":434},"text",{"type":440,"tag":441,"props":447,"children":448},{},[449],{"type":445,"value":450},"给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。",{"type":440,"tag":441,"props":452,"children":453},{},[454],{"type":445,"value":455},"你可以假设 nums[-1] = nums[n] = -∞ 。",{"type":440,"tag":441,"props":457,"children":458},{},[459],{"type":445,"value":460},"你必须实现时间复杂度为 O(log n) 的算法来解决此问题。",{"type":440,"tag":441,"props":462,"children":463},{},[464],{"type":445,"value":465},"示例 1：",{"type":440,"tag":467,"props":468,"children":471},"pre",{"className":469,"code":470,"language":445,"meta":433,"style":433},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。\n",[472],{"type":440,"tag":473,"props":474,"children":475},"code",{"__ignoreMap":433},[476,487,496],{"type":440,"tag":477,"props":478,"children":481},"span",{"class":479,"line":480},"line",1,[482],{"type":440,"tag":477,"props":483,"children":484},{},[485],{"type":445,"value":486},"输入：nums = [1,2,3,1]\n",{"type":440,"tag":477,"props":488,"children":490},{"class":479,"line":489},2,[491],{"type":440,"tag":477,"props":492,"children":493},{},[494],{"type":445,"value":495},"输出：2\n",{"type":440,"tag":477,"props":497,"children":499},{"class":479,"line":498},3,[500],{"type":440,"tag":477,"props":501,"children":502},{},[503],{"type":445,"value":504},"解释：3 是峰值元素，你的函数应该返回其索引 2。\n",{"type":440,"tag":441,"props":506,"children":507},{},[508],{"type":445,"value":509},"示例 2：",{"type":440,"tag":467,"props":511,"children":513},{"className":469,"code":512,"language":445,"meta":433,"style":433},"输入：nums = [1,2,1,3,5,6,4]\n输出：1 或 5\n解释：你的函数可以返回索引 1，其峰值元素为 2；\n或者返回索引 5， 其峰值元素为 6。\n",[514],{"type":440,"tag":473,"props":515,"children":516},{"__ignoreMap":433},[517,525,533,541],{"type":440,"tag":477,"props":518,"children":519},{"class":479,"line":480},[520],{"type":440,"tag":477,"props":521,"children":522},{},[523],{"type":445,"value":524},"输入：nums = [1,2,1,3,5,6,4]\n",{"type":440,"tag":477,"props":526,"children":527},{"class":479,"line":489},[528],{"type":440,"tag":477,"props":529,"children":530},{},[531],{"type":445,"value":532},"输出：1 或 5\n",{"type":440,"tag":477,"props":534,"children":535},{"class":479,"line":498},[536],{"type":440,"tag":477,"props":537,"children":538},{},[539],{"type":445,"value":540},"解释：你的函数可以返回索引 1，其峰值元素为 2；\n",{"type":440,"tag":477,"props":542,"children":544},{"class":479,"line":543},4,[545],{"type":440,"tag":477,"props":546,"children":547},{},[548],{"type":445,"value":549},"或者返回索引 5， 其峰值元素为 6。\n",{"type":440,"tag":441,"props":551,"children":552},{},[553],{"type":445,"value":554},"提示：",{"type":440,"tag":556,"props":557,"children":558},"ul",{},[559,565,570],{"type":440,"tag":560,"props":561,"children":562},"li",{},[563],{"type":445,"value":564},"1 \u003C= nums.length \u003C= 1000",{"type":440,"tag":560,"props":566,"children":567},{},[568],{"type":445,"value":569},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":440,"tag":560,"props":571,"children":572},{},[573],{"type":445,"value":574},"对于所有有效的 i 都有 nums[i] != nums[i + 1]",{"type":440,"tag":576,"props":577,"children":579},"h2",{"id":578},"解题思路",[580],{"type":445,"value":578},{"type":440,"tag":576,"props":582,"children":584},{"id":583},"实现",[585],{"type":445,"value":583},{"type":440,"tag":587,"props":588,"children":590},"h3",{"id":589},"二分查找",[591],{"type":445,"value":589},{"type":440,"tag":467,"props":593,"children":597},{"className":594,"code":595,"language":596,"meta":433,"style":433},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findPeakElement = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let l = -1;\n  let r = nums.length - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] > nums[mid + 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return r;\n};\n","js",[598],{"type":440,"tag":473,"props":599,"children":600},{"__ignoreMap":433},[601,610,636,653,661,705,714,723,759,806,847,899,961,988,1007,1033,1042,1051,1068],{"type":440,"tag":477,"props":602,"children":603},{"class":479,"line":480},[604],{"type":440,"tag":477,"props":605,"children":607},{"style":606},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[608],{"type":445,"value":609},"/**\n",{"type":440,"tag":477,"props":611,"children":612},{"class":479,"line":489},[613,618,624,630],{"type":440,"tag":477,"props":614,"children":615},{"style":606},[616],{"type":445,"value":617}," * ",{"type":440,"tag":477,"props":619,"children":621},{"style":620},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[622],{"type":445,"value":623},"@param",{"type":440,"tag":477,"props":625,"children":627},{"style":626},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[628],{"type":445,"value":629}," {number[]}",{"type":440,"tag":477,"props":631,"children":633},{"style":632},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[634],{"type":445,"value":635}," nums\n",{"type":440,"tag":477,"props":637,"children":638},{"class":479,"line":498},[639,643,648],{"type":440,"tag":477,"props":640,"children":641},{"style":606},[642],{"type":445,"value":617},{"type":440,"tag":477,"props":644,"children":645},{"style":620},[646],{"type":445,"value":647},"@return",{"type":440,"tag":477,"props":649,"children":650},{"style":626},[651],{"type":445,"value":652}," {number}\n",{"type":440,"tag":477,"props":654,"children":655},{"class":479,"line":543},[656],{"type":440,"tag":477,"props":657,"children":658},{"style":606},[659],{"type":445,"value":660}," */\n",{"type":440,"tag":477,"props":662,"children":664},{"class":479,"line":663},5,[665,671,677,683,688,694,700],{"type":440,"tag":477,"props":666,"children":668},{"style":667},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[669],{"type":445,"value":670},"var",{"type":440,"tag":477,"props":672,"children":674},{"style":673},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[675],{"type":445,"value":676}," findPeakElement",{"type":440,"tag":477,"props":678,"children":680},{"style":679},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[681],{"type":445,"value":682}," =",{"type":440,"tag":477,"props":684,"children":685},{"style":667},[686],{"type":445,"value":687}," function",{"type":440,"tag":477,"props":689,"children":691},{"style":690},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[692],{"type":445,"value":693}," (",{"type":440,"tag":477,"props":695,"children":697},{"style":696},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[698],{"type":445,"value":699},"nums",{"type":440,"tag":477,"props":701,"children":702},{"style":690},[703],{"type":445,"value":704},") {\n",{"type":440,"tag":477,"props":706,"children":708},{"class":479,"line":707},6,[709],{"type":440,"tag":477,"props":710,"children":711},{"style":606},[712],{"type":445,"value":713},"  // [0, n - 2]\n",{"type":440,"tag":477,"props":715,"children":717},{"class":479,"line":716},7,[718],{"type":440,"tag":477,"props":719,"children":720},{"style":606},[721],{"type":445,"value":722},"  // (-1, n - 1) 开区间写法\n",{"type":440,"tag":477,"props":724,"children":726},{"class":479,"line":725},8,[727,732,738,742,747,753],{"type":440,"tag":477,"props":728,"children":729},{"style":667},[730],{"type":445,"value":731},"  let",{"type":440,"tag":477,"props":733,"children":735},{"style":734},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[736],{"type":445,"value":737}," l",{"type":440,"tag":477,"props":739,"children":740},{"style":679},[741],{"type":445,"value":682},{"type":440,"tag":477,"props":743,"children":744},{"style":679},[745],{"type":445,"value":746}," -",{"type":440,"tag":477,"props":748,"children":750},{"style":749},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[751],{"type":445,"value":752},"1",{"type":440,"tag":477,"props":754,"children":756},{"style":755},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[757],{"type":445,"value":758},";\n",{"type":440,"tag":477,"props":760,"children":762},{"class":479,"line":761},9,[763,767,772,776,781,787,792,797,802],{"type":440,"tag":477,"props":764,"children":765},{"style":667},[766],{"type":445,"value":731},{"type":440,"tag":477,"props":768,"children":769},{"style":734},[770],{"type":445,"value":771}," r",{"type":440,"tag":477,"props":773,"children":774},{"style":679},[775],{"type":445,"value":682},{"type":440,"tag":477,"props":777,"children":778},{"style":734},[779],{"type":445,"value":780}," nums",{"type":440,"tag":477,"props":782,"children":784},{"style":783},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[785],{"type":445,"value":786},".",{"type":440,"tag":477,"props":788,"children":789},{"style":690},[790],{"type":445,"value":791},"length ",{"type":440,"tag":477,"props":793,"children":794},{"style":679},[795],{"type":445,"value":796},"-",{"type":440,"tag":477,"props":798,"children":799},{"style":749},[800],{"type":445,"value":801}," 1",{"type":440,"tag":477,"props":803,"children":804},{"style":755},[805],{"type":445,"value":758},{"type":440,"tag":477,"props":807,"children":809},{"class":479,"line":808},10,[810,816,820,825,830,834,839,843],{"type":440,"tag":477,"props":811,"children":813},{"style":812},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[814],{"type":445,"value":815},"  while",{"type":440,"tag":477,"props":817,"children":818},{"style":690},[819],{"type":445,"value":693},{"type":440,"tag":477,"props":821,"children":822},{"style":734},[823],{"type":445,"value":824},"l",{"type":440,"tag":477,"props":826,"children":827},{"style":679},[828],{"type":445,"value":829}," +",{"type":440,"tag":477,"props":831,"children":832},{"style":749},[833],{"type":445,"value":801},{"type":440,"tag":477,"props":835,"children":836},{"style":679},[837],{"type":445,"value":838}," \u003C",{"type":440,"tag":477,"props":840,"children":841},{"style":734},[842],{"type":445,"value":771},{"type":440,"tag":477,"props":844,"children":845},{"style":690},[846],{"type":445,"value":704},{"type":440,"tag":477,"props":848,"children":850},{"class":479,"line":849},11,[851,856,861,865,869,873,877,881,886,891,895],{"type":440,"tag":477,"props":852,"children":853},{"style":667},[854],{"type":445,"value":855},"    let",{"type":440,"tag":477,"props":857,"children":858},{"style":734},[859],{"type":445,"value":860}," mid",{"type":440,"tag":477,"props":862,"children":863},{"style":679},[864],{"type":445,"value":682},{"type":440,"tag":477,"props":866,"children":867},{"style":690},[868],{"type":445,"value":693},{"type":440,"tag":477,"props":870,"children":871},{"style":734},[872],{"type":445,"value":824},{"type":440,"tag":477,"props":874,"children":875},{"style":679},[876],{"type":445,"value":829},{"type":440,"tag":477,"props":878,"children":879},{"style":734},[880],{"type":445,"value":771},{"type":440,"tag":477,"props":882,"children":883},{"style":690},[884],{"type":445,"value":885},") ",{"type":440,"tag":477,"props":887,"children":888},{"style":679},[889],{"type":445,"value":890},">>",{"type":440,"tag":477,"props":892,"children":893},{"style":749},[894],{"type":445,"value":801},{"type":440,"tag":477,"props":896,"children":897},{"style":755},[898],{"type":445,"value":758},{"type":440,"tag":477,"props":900,"children":902},{"class":479,"line":901},12,[903,908,912,916,921,926,931,936,940,944,948,952,956],{"type":440,"tag":477,"props":904,"children":905},{"style":812},[906],{"type":445,"value":907},"    if",{"type":440,"tag":477,"props":909,"children":910},{"style":690},[911],{"type":445,"value":693},{"type":440,"tag":477,"props":913,"children":914},{"style":734},[915],{"type":445,"value":699},{"type":440,"tag":477,"props":917,"children":918},{"style":690},[919],{"type":445,"value":920},"[",{"type":440,"tag":477,"props":922,"children":923},{"style":734},[924],{"type":445,"value":925},"mid",{"type":440,"tag":477,"props":927,"children":928},{"style":690},[929],{"type":445,"value":930},"] ",{"type":440,"tag":477,"props":932,"children":933},{"style":679},[934],{"type":445,"value":935},">",{"type":440,"tag":477,"props":937,"children":938},{"style":734},[939],{"type":445,"value":780},{"type":440,"tag":477,"props":941,"children":942},{"style":690},[943],{"type":445,"value":920},{"type":440,"tag":477,"props":945,"children":946},{"style":734},[947],{"type":445,"value":925},{"type":440,"tag":477,"props":949,"children":950},{"style":679},[951],{"type":445,"value":829},{"type":440,"tag":477,"props":953,"children":954},{"style":749},[955],{"type":445,"value":801},{"type":440,"tag":477,"props":957,"children":958},{"style":690},[959],{"type":445,"value":960},"]) {\n",{"type":440,"tag":477,"props":962,"children":964},{"class":479,"line":963},13,[965,970,974,978,983],{"type":440,"tag":477,"props":966,"children":967},{"style":734},[968],{"type":445,"value":969},"      r",{"type":440,"tag":477,"props":971,"children":972},{"style":679},[973],{"type":445,"value":682},{"type":440,"tag":477,"props":975,"children":976},{"style":734},[977],{"type":445,"value":860},{"type":440,"tag":477,"props":979,"children":980},{"style":755},[981],{"type":445,"value":982},";",{"type":440,"tag":477,"props":984,"children":985},{"style":606},[986],{"type":445,"value":987}," // 染蓝色\n",{"type":440,"tag":477,"props":989,"children":991},{"class":479,"line":990},14,[992,997,1002],{"type":440,"tag":477,"props":993,"children":994},{"style":690},[995],{"type":445,"value":996},"    } ",{"type":440,"tag":477,"props":998,"children":999},{"style":812},[1000],{"type":445,"value":1001},"else",{"type":440,"tag":477,"props":1003,"children":1004},{"style":690},[1005],{"type":445,"value":1006}," {\n",{"type":440,"tag":477,"props":1008,"children":1010},{"class":479,"line":1009},15,[1011,1016,1020,1024,1028],{"type":440,"tag":477,"props":1012,"children":1013},{"style":734},[1014],{"type":445,"value":1015},"      l",{"type":440,"tag":477,"props":1017,"children":1018},{"style":679},[1019],{"type":445,"value":682},{"type":440,"tag":477,"props":1021,"children":1022},{"style":734},[1023],{"type":445,"value":860},{"type":440,"tag":477,"props":1025,"children":1026},{"style":755},[1027],{"type":445,"value":982},{"type":440,"tag":477,"props":1029,"children":1030},{"style":606},[1031],{"type":445,"value":1032}," // 染红色\n",{"type":440,"tag":477,"props":1034,"children":1036},{"class":479,"line":1035},16,[1037],{"type":440,"tag":477,"props":1038,"children":1039},{"style":690},[1040],{"type":445,"value":1041},"    }\n",{"type":440,"tag":477,"props":1043,"children":1045},{"class":479,"line":1044},17,[1046],{"type":440,"tag":477,"props":1047,"children":1048},{"style":690},[1049],{"type":445,"value":1050},"  }\n",{"type":440,"tag":477,"props":1052,"children":1054},{"class":479,"line":1053},18,[1055,1060,1064],{"type":440,"tag":477,"props":1056,"children":1057},{"style":812},[1058],{"type":445,"value":1059},"  return",{"type":440,"tag":477,"props":1061,"children":1062},{"style":734},[1063],{"type":445,"value":771},{"type":440,"tag":477,"props":1065,"children":1066},{"style":755},[1067],{"type":445,"value":758},{"type":440,"tag":477,"props":1069,"children":1071},{"class":479,"line":1070},19,[1072,1077],{"type":440,"tag":477,"props":1073,"children":1074},{"style":690},[1075],{"type":445,"value":1076},"}",{"type":440,"tag":477,"props":1078,"children":1079},{"style":755},[1080],{"type":445,"value":758},{"type":440,"tag":1082,"props":1083,"children":1084},"style",{},[1085],{"type":445,"value":1086},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":433,"searchDepth":663,"depth":663,"links":1088},[1089,1090],{"id":578,"depth":489,"text":578},{"id":583,"depth":489,"text":583,"children":1091},[1092],{"id":589,"depth":498,"text":589},"markdown","content:1.algorithm:3.leetcode:162.find-peak-element.md","content","1.algorithm/3.leetcode/162.find-peak-element.md","md",[1099,1101],{"_path":158,"title":157,"description":1100},"给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。",{"_path":164,"title":163,"description":1102},"给你两个版本号 version1 和 version2 ，请你比较它们。",1713426812286]