[{"data":1,"prerenderedAt":1078},["Reactive",2],{"navigation":3,"/algorithm/leetcode/find-peak-element":405,"/algorithm/leetcode/find-peak-element-surround":1073},[4,237,265,384,391],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR 169. 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR 187. 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,377],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,347,350,353,356,359,362,365,368,371,374],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":348,"_path":349},"倒计时","/frontend-code-assessment/scene/countdown",{"title":351,"_path":352},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":354,"_path":355},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":357,"_path":358},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":360,"_path":361},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":363,"_path":364},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":366,"_path":367},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":369,"_path":370},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":372,"_path":373},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":375,"_path":376},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":378,"_path":379,"children":380},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[381],{"title":382,"_path":383},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":385,"_path":386,"children":387},"项目","/pro",[388],{"title":389,"_path":390},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":392,"_path":393,"children":394},"后端语言","/backend-languages",[395],{"title":396,"_path":397,"children":398},"Python","/backend-languages/python",[399,402],{"title":400,"_path":401},"基础","/backend-languages/python/base",{"title":403,"_path":404},"函数","/backend-languages/python/function",{"_path":161,"_dir":406,"_draft":407,"_partial":407,"_locale":408,"title":160,"description":409,"url":410,"body":411,"_type":1068,"_id":1069,"_source":1070,"_file":1071,"_extension":1072},"leetcode",false,"","峰值元素是指其值严格大于左右相邻值的元素。","https://leetcode.cn/problems/find-peak-element",{"type":412,"children":413,"toc":1062},"root",[414,421,426,431,436,441,480,485,525,530,550,556,561,567,1056],{"type":415,"tag":416,"props":417,"children":418},"element","p",{},[419],{"type":420,"value":409},"text",{"type":415,"tag":416,"props":422,"children":423},{},[424],{"type":420,"value":425},"给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。",{"type":415,"tag":416,"props":427,"children":428},{},[429],{"type":420,"value":430},"你可以假设 nums[-1] = nums[n] = -∞ 。",{"type":415,"tag":416,"props":432,"children":433},{},[434],{"type":420,"value":435},"你必须实现时间复杂度为 O(log n) 的算法来解决此问题。",{"type":415,"tag":416,"props":437,"children":438},{},[439],{"type":420,"value":440},"示例 1：",{"type":415,"tag":442,"props":443,"children":446},"pre",{"className":444,"code":445,"language":420,"meta":408,"style":408},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。\n",[447],{"type":415,"tag":448,"props":449,"children":450},"code",{"__ignoreMap":408},[451,462,471],{"type":415,"tag":452,"props":453,"children":456},"span",{"class":454,"line":455},"line",1,[457],{"type":415,"tag":452,"props":458,"children":459},{},[460],{"type":420,"value":461},"输入：nums = [1,2,3,1]\n",{"type":415,"tag":452,"props":463,"children":465},{"class":454,"line":464},2,[466],{"type":415,"tag":452,"props":467,"children":468},{},[469],{"type":420,"value":470},"输出：2\n",{"type":415,"tag":452,"props":472,"children":474},{"class":454,"line":473},3,[475],{"type":415,"tag":452,"props":476,"children":477},{},[478],{"type":420,"value":479},"解释：3 是峰值元素，你的函数应该返回其索引 2。\n",{"type":415,"tag":416,"props":481,"children":482},{},[483],{"type":420,"value":484},"示例 2：",{"type":415,"tag":442,"props":486,"children":488},{"className":444,"code":487,"language":420,"meta":408,"style":408},"输入：nums = [1,2,1,3,5,6,4]\n输出：1 或 5\n解释：你的函数可以返回索引 1，其峰值元素为 2；\n或者返回索引 5， 其峰值元素为 6。\n",[489],{"type":415,"tag":448,"props":490,"children":491},{"__ignoreMap":408},[492,500,508,516],{"type":415,"tag":452,"props":493,"children":494},{"class":454,"line":455},[495],{"type":415,"tag":452,"props":496,"children":497},{},[498],{"type":420,"value":499},"输入：nums = [1,2,1,3,5,6,4]\n",{"type":415,"tag":452,"props":501,"children":502},{"class":454,"line":464},[503],{"type":415,"tag":452,"props":504,"children":505},{},[506],{"type":420,"value":507},"输出：1 或 5\n",{"type":415,"tag":452,"props":509,"children":510},{"class":454,"line":473},[511],{"type":415,"tag":452,"props":512,"children":513},{},[514],{"type":420,"value":515},"解释：你的函数可以返回索引 1，其峰值元素为 2；\n",{"type":415,"tag":452,"props":517,"children":519},{"class":454,"line":518},4,[520],{"type":415,"tag":452,"props":521,"children":522},{},[523],{"type":420,"value":524},"或者返回索引 5， 其峰值元素为 6。\n",{"type":415,"tag":416,"props":526,"children":527},{},[528],{"type":420,"value":529},"提示：",{"type":415,"tag":531,"props":532,"children":533},"ul",{},[534,540,545],{"type":415,"tag":535,"props":536,"children":537},"li",{},[538],{"type":420,"value":539},"1 \u003C= nums.length \u003C= 1000",{"type":415,"tag":535,"props":541,"children":542},{},[543],{"type":420,"value":544},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":415,"tag":535,"props":546,"children":547},{},[548],{"type":420,"value":549},"对于所有有效的 i 都有 nums[i] != nums[i + 1]",{"type":415,"tag":551,"props":552,"children":554},"h2",{"id":553},"解题思路",[555],{"type":420,"value":553},{"type":415,"tag":551,"props":557,"children":559},{"id":558},"实现",[560],{"type":420,"value":558},{"type":415,"tag":562,"props":563,"children":565},"h3",{"id":564},"二分查找",[566],{"type":420,"value":564},{"type":415,"tag":442,"props":568,"children":572},{"className":569,"code":570,"language":571,"meta":408,"style":408},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findPeakElement = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let l = -1;\n  let r = nums.length - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] > nums[mid + 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return r;\n};\n","js",[573],{"type":415,"tag":448,"props":574,"children":575},{"__ignoreMap":408},[576,585,611,628,636,680,689,698,734,781,822,874,936,963,982,1008,1017,1026,1043],{"type":415,"tag":452,"props":577,"children":578},{"class":454,"line":455},[579],{"type":415,"tag":452,"props":580,"children":582},{"style":581},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[583],{"type":420,"value":584},"/**\n",{"type":415,"tag":452,"props":586,"children":587},{"class":454,"line":464},[588,593,599,605],{"type":415,"tag":452,"props":589,"children":590},{"style":581},[591],{"type":420,"value":592}," * ",{"type":415,"tag":452,"props":594,"children":596},{"style":595},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[597],{"type":420,"value":598},"@param",{"type":415,"tag":452,"props":600,"children":602},{"style":601},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[603],{"type":420,"value":604}," {number[]}",{"type":415,"tag":452,"props":606,"children":608},{"style":607},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[609],{"type":420,"value":610}," nums\n",{"type":415,"tag":452,"props":612,"children":613},{"class":454,"line":473},[614,618,623],{"type":415,"tag":452,"props":615,"children":616},{"style":581},[617],{"type":420,"value":592},{"type":415,"tag":452,"props":619,"children":620},{"style":595},[621],{"type":420,"value":622},"@return",{"type":415,"tag":452,"props":624,"children":625},{"style":601},[626],{"type":420,"value":627}," {number}\n",{"type":415,"tag":452,"props":629,"children":630},{"class":454,"line":518},[631],{"type":415,"tag":452,"props":632,"children":633},{"style":581},[634],{"type":420,"value":635}," */\n",{"type":415,"tag":452,"props":637,"children":639},{"class":454,"line":638},5,[640,646,652,658,663,669,675],{"type":415,"tag":452,"props":641,"children":643},{"style":642},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[644],{"type":420,"value":645},"var",{"type":415,"tag":452,"props":647,"children":649},{"style":648},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[650],{"type":420,"value":651}," findPeakElement",{"type":415,"tag":452,"props":653,"children":655},{"style":654},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[656],{"type":420,"value":657}," =",{"type":415,"tag":452,"props":659,"children":660},{"style":642},[661],{"type":420,"value":662}," function",{"type":415,"tag":452,"props":664,"children":666},{"style":665},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[667],{"type":420,"value":668}," (",{"type":415,"tag":452,"props":670,"children":672},{"style":671},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[673],{"type":420,"value":674},"nums",{"type":415,"tag":452,"props":676,"children":677},{"style":665},[678],{"type":420,"value":679},") {\n",{"type":415,"tag":452,"props":681,"children":683},{"class":454,"line":682},6,[684],{"type":415,"tag":452,"props":685,"children":686},{"style":581},[687],{"type":420,"value":688},"  // [0, n - 2]\n",{"type":415,"tag":452,"props":690,"children":692},{"class":454,"line":691},7,[693],{"type":415,"tag":452,"props":694,"children":695},{"style":581},[696],{"type":420,"value":697},"  // (-1, n - 1) 开区间写法\n",{"type":415,"tag":452,"props":699,"children":701},{"class":454,"line":700},8,[702,707,713,717,722,728],{"type":415,"tag":452,"props":703,"children":704},{"style":642},[705],{"type":420,"value":706},"  let",{"type":415,"tag":452,"props":708,"children":710},{"style":709},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[711],{"type":420,"value":712}," l",{"type":415,"tag":452,"props":714,"children":715},{"style":654},[716],{"type":420,"value":657},{"type":415,"tag":452,"props":718,"children":719},{"style":654},[720],{"type":420,"value":721}," -",{"type":415,"tag":452,"props":723,"children":725},{"style":724},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[726],{"type":420,"value":727},"1",{"type":415,"tag":452,"props":729,"children":731},{"style":730},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[732],{"type":420,"value":733},";\n",{"type":415,"tag":452,"props":735,"children":737},{"class":454,"line":736},9,[738,742,747,751,756,762,767,772,777],{"type":415,"tag":452,"props":739,"children":740},{"style":642},[741],{"type":420,"value":706},{"type":415,"tag":452,"props":743,"children":744},{"style":709},[745],{"type":420,"value":746}," r",{"type":415,"tag":452,"props":748,"children":749},{"style":654},[750],{"type":420,"value":657},{"type":415,"tag":452,"props":752,"children":753},{"style":709},[754],{"type":420,"value":755}," nums",{"type":415,"tag":452,"props":757,"children":759},{"style":758},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[760],{"type":420,"value":761},".",{"type":415,"tag":452,"props":763,"children":764},{"style":665},[765],{"type":420,"value":766},"length ",{"type":415,"tag":452,"props":768,"children":769},{"style":654},[770],{"type":420,"value":771},"-",{"type":415,"tag":452,"props":773,"children":774},{"style":724},[775],{"type":420,"value":776}," 1",{"type":415,"tag":452,"props":778,"children":779},{"style":730},[780],{"type":420,"value":733},{"type":415,"tag":452,"props":782,"children":784},{"class":454,"line":783},10,[785,791,795,800,805,809,814,818],{"type":415,"tag":452,"props":786,"children":788},{"style":787},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[789],{"type":420,"value":790},"  while",{"type":415,"tag":452,"props":792,"children":793},{"style":665},[794],{"type":420,"value":668},{"type":415,"tag":452,"props":796,"children":797},{"style":709},[798],{"type":420,"value":799},"l",{"type":415,"tag":452,"props":801,"children":802},{"style":654},[803],{"type":420,"value":804}," +",{"type":415,"tag":452,"props":806,"children":807},{"style":724},[808],{"type":420,"value":776},{"type":415,"tag":452,"props":810,"children":811},{"style":654},[812],{"type":420,"value":813}," \u003C",{"type":415,"tag":452,"props":815,"children":816},{"style":709},[817],{"type":420,"value":746},{"type":415,"tag":452,"props":819,"children":820},{"style":665},[821],{"type":420,"value":679},{"type":415,"tag":452,"props":823,"children":825},{"class":454,"line":824},11,[826,831,836,840,844,848,852,856,861,866,870],{"type":415,"tag":452,"props":827,"children":828},{"style":642},[829],{"type":420,"value":830},"    let",{"type":415,"tag":452,"props":832,"children":833},{"style":709},[834],{"type":420,"value":835}," mid",{"type":415,"tag":452,"props":837,"children":838},{"style":654},[839],{"type":420,"value":657},{"type":415,"tag":452,"props":841,"children":842},{"style":665},[843],{"type":420,"value":668},{"type":415,"tag":452,"props":845,"children":846},{"style":709},[847],{"type":420,"value":799},{"type":415,"tag":452,"props":849,"children":850},{"style":654},[851],{"type":420,"value":804},{"type":415,"tag":452,"props":853,"children":854},{"style":709},[855],{"type":420,"value":746},{"type":415,"tag":452,"props":857,"children":858},{"style":665},[859],{"type":420,"value":860},") ",{"type":415,"tag":452,"props":862,"children":863},{"style":654},[864],{"type":420,"value":865},">>",{"type":415,"tag":452,"props":867,"children":868},{"style":724},[869],{"type":420,"value":776},{"type":415,"tag":452,"props":871,"children":872},{"style":730},[873],{"type":420,"value":733},{"type":415,"tag":452,"props":875,"children":877},{"class":454,"line":876},12,[878,883,887,891,896,901,906,911,915,919,923,927,931],{"type":415,"tag":452,"props":879,"children":880},{"style":787},[881],{"type":420,"value":882},"    if",{"type":415,"tag":452,"props":884,"children":885},{"style":665},[886],{"type":420,"value":668},{"type":415,"tag":452,"props":888,"children":889},{"style":709},[890],{"type":420,"value":674},{"type":415,"tag":452,"props":892,"children":893},{"style":665},[894],{"type":420,"value":895},"[",{"type":415,"tag":452,"props":897,"children":898},{"style":709},[899],{"type":420,"value":900},"mid",{"type":415,"tag":452,"props":902,"children":903},{"style":665},[904],{"type":420,"value":905},"] ",{"type":415,"tag":452,"props":907,"children":908},{"style":654},[909],{"type":420,"value":910},">",{"type":415,"tag":452,"props":912,"children":913},{"style":709},[914],{"type":420,"value":755},{"type":415,"tag":452,"props":916,"children":917},{"style":665},[918],{"type":420,"value":895},{"type":415,"tag":452,"props":920,"children":921},{"style":709},[922],{"type":420,"value":900},{"type":415,"tag":452,"props":924,"children":925},{"style":654},[926],{"type":420,"value":804},{"type":415,"tag":452,"props":928,"children":929},{"style":724},[930],{"type":420,"value":776},{"type":415,"tag":452,"props":932,"children":933},{"style":665},[934],{"type":420,"value":935},"]) {\n",{"type":415,"tag":452,"props":937,"children":939},{"class":454,"line":938},13,[940,945,949,953,958],{"type":415,"tag":452,"props":941,"children":942},{"style":709},[943],{"type":420,"value":944},"      r",{"type":415,"tag":452,"props":946,"children":947},{"style":654},[948],{"type":420,"value":657},{"type":415,"tag":452,"props":950,"children":951},{"style":709},[952],{"type":420,"value":835},{"type":415,"tag":452,"props":954,"children":955},{"style":730},[956],{"type":420,"value":957},";",{"type":415,"tag":452,"props":959,"children":960},{"style":581},[961],{"type":420,"value":962}," // 染蓝色\n",{"type":415,"tag":452,"props":964,"children":966},{"class":454,"line":965},14,[967,972,977],{"type":415,"tag":452,"props":968,"children":969},{"style":665},[970],{"type":420,"value":971},"    } ",{"type":415,"tag":452,"props":973,"children":974},{"style":787},[975],{"type":420,"value":976},"else",{"type":415,"tag":452,"props":978,"children":979},{"style":665},[980],{"type":420,"value":981}," {\n",{"type":415,"tag":452,"props":983,"children":985},{"class":454,"line":984},15,[986,991,995,999,1003],{"type":415,"tag":452,"props":987,"children":988},{"style":709},[989],{"type":420,"value":990},"      l",{"type":415,"tag":452,"props":992,"children":993},{"style":654},[994],{"type":420,"value":657},{"type":415,"tag":452,"props":996,"children":997},{"style":709},[998],{"type":420,"value":835},{"type":415,"tag":452,"props":1000,"children":1001},{"style":730},[1002],{"type":420,"value":957},{"type":415,"tag":452,"props":1004,"children":1005},{"style":581},[1006],{"type":420,"value":1007}," // 染红色\n",{"type":415,"tag":452,"props":1009,"children":1011},{"class":454,"line":1010},16,[1012],{"type":415,"tag":452,"props":1013,"children":1014},{"style":665},[1015],{"type":420,"value":1016},"    }\n",{"type":415,"tag":452,"props":1018,"children":1020},{"class":454,"line":1019},17,[1021],{"type":415,"tag":452,"props":1022,"children":1023},{"style":665},[1024],{"type":420,"value":1025},"  }\n",{"type":415,"tag":452,"props":1027,"children":1029},{"class":454,"line":1028},18,[1030,1035,1039],{"type":415,"tag":452,"props":1031,"children":1032},{"style":787},[1033],{"type":420,"value":1034},"  return",{"type":415,"tag":452,"props":1036,"children":1037},{"style":709},[1038],{"type":420,"value":746},{"type":415,"tag":452,"props":1040,"children":1041},{"style":730},[1042],{"type":420,"value":733},{"type":415,"tag":452,"props":1044,"children":1046},{"class":454,"line":1045},19,[1047,1052],{"type":415,"tag":452,"props":1048,"children":1049},{"style":665},[1050],{"type":420,"value":1051},"}",{"type":415,"tag":452,"props":1053,"children":1054},{"style":730},[1055],{"type":420,"value":733},{"type":415,"tag":1057,"props":1058,"children":1059},"style",{},[1060],{"type":420,"value":1061},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":408,"searchDepth":638,"depth":638,"links":1063},[1064,1065],{"id":553,"depth":464,"text":553},{"id":558,"depth":464,"text":558,"children":1066},[1067],{"id":564,"depth":473,"text":564},"markdown","content:1.algorithm:3.leetcode:162.find-peak-element.md","content","1.algorithm/3.leetcode/162.find-peak-element.md","md",[1074,1076],{"_path":158,"title":157,"description":1075},"给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。",{"_path":164,"title":163,"description":1077},"给你两个版本号 version1 和 version2 ，请你比较它们。",1713279656757]