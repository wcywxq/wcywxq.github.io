[{"data":1,"prerenderedAt":1097},["Reactive",2],{"navigation":3,"/algorithm/leetcode/find-peak-element":424,"/algorithm/leetcode/find-peak-element-surround":1092},[4,237,265,403,410],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,396],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"随机数","/frontend-code-assessment/scene/random-number",{"title":382,"_path":383},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":385,"_path":386},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":388,"_path":389},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":391,"_path":392},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":394,"_path":395},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":397,"_path":398,"children":399},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[400],{"title":401,"_path":402},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":404,"_path":405,"children":406},"项目","/pro",[407],{"title":408,"_path":409},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":411,"_path":412,"children":413},"后端语言","/backend-languages",[414],{"title":415,"_path":416,"children":417},"Python","/backend-languages/python",[418,421],{"title":419,"_path":420},"基础","/backend-languages/python/base",{"title":422,"_path":423},"函数","/backend-languages/python/function",{"_path":161,"_dir":425,"_draft":426,"_partial":426,"_locale":427,"title":160,"description":428,"url":429,"body":430,"_type":1087,"_id":1088,"_source":1089,"_file":1090,"_extension":1091},"leetcode",false,"","峰值元素是指其值严格大于左右相邻值的元素。","https://leetcode.cn/problems/find-peak-element",{"type":431,"children":432,"toc":1081},"root",[433,440,445,450,455,460,499,504,544,549,569,575,580,586,1075],{"type":434,"tag":435,"props":436,"children":437},"element","p",{},[438],{"type":439,"value":428},"text",{"type":434,"tag":435,"props":441,"children":442},{},[443],{"type":439,"value":444},"给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。",{"type":434,"tag":435,"props":446,"children":447},{},[448],{"type":439,"value":449},"你可以假设 nums[-1] = nums[n] = -∞ 。",{"type":434,"tag":435,"props":451,"children":452},{},[453],{"type":439,"value":454},"你必须实现时间复杂度为 O(log n) 的算法来解决此问题。",{"type":434,"tag":435,"props":456,"children":457},{},[458],{"type":439,"value":459},"示例 1：",{"type":434,"tag":461,"props":462,"children":465},"pre",{"className":463,"code":464,"language":439,"meta":427,"style":427},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。\n",[466],{"type":434,"tag":467,"props":468,"children":469},"code",{"__ignoreMap":427},[470,481,490],{"type":434,"tag":471,"props":472,"children":475},"span",{"class":473,"line":474},"line",1,[476],{"type":434,"tag":471,"props":477,"children":478},{},[479],{"type":439,"value":480},"输入：nums = [1,2,3,1]\n",{"type":434,"tag":471,"props":482,"children":484},{"class":473,"line":483},2,[485],{"type":434,"tag":471,"props":486,"children":487},{},[488],{"type":439,"value":489},"输出：2\n",{"type":434,"tag":471,"props":491,"children":493},{"class":473,"line":492},3,[494],{"type":434,"tag":471,"props":495,"children":496},{},[497],{"type":439,"value":498},"解释：3 是峰值元素，你的函数应该返回其索引 2。\n",{"type":434,"tag":435,"props":500,"children":501},{},[502],{"type":439,"value":503},"示例 2：",{"type":434,"tag":461,"props":505,"children":507},{"className":463,"code":506,"language":439,"meta":427,"style":427},"输入：nums = [1,2,1,3,5,6,4]\n输出：1 或 5\n解释：你的函数可以返回索引 1，其峰值元素为 2；\n或者返回索引 5， 其峰值元素为 6。\n",[508],{"type":434,"tag":467,"props":509,"children":510},{"__ignoreMap":427},[511,519,527,535],{"type":434,"tag":471,"props":512,"children":513},{"class":473,"line":474},[514],{"type":434,"tag":471,"props":515,"children":516},{},[517],{"type":439,"value":518},"输入：nums = [1,2,1,3,5,6,4]\n",{"type":434,"tag":471,"props":520,"children":521},{"class":473,"line":483},[522],{"type":434,"tag":471,"props":523,"children":524},{},[525],{"type":439,"value":526},"输出：1 或 5\n",{"type":434,"tag":471,"props":528,"children":529},{"class":473,"line":492},[530],{"type":434,"tag":471,"props":531,"children":532},{},[533],{"type":439,"value":534},"解释：你的函数可以返回索引 1，其峰值元素为 2；\n",{"type":434,"tag":471,"props":536,"children":538},{"class":473,"line":537},4,[539],{"type":434,"tag":471,"props":540,"children":541},{},[542],{"type":439,"value":543},"或者返回索引 5， 其峰值元素为 6。\n",{"type":434,"tag":435,"props":545,"children":546},{},[547],{"type":439,"value":548},"提示：",{"type":434,"tag":550,"props":551,"children":552},"ul",{},[553,559,564],{"type":434,"tag":554,"props":555,"children":556},"li",{},[557],{"type":439,"value":558},"1 \u003C= nums.length \u003C= 1000",{"type":434,"tag":554,"props":560,"children":561},{},[562],{"type":439,"value":563},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":434,"tag":554,"props":565,"children":566},{},[567],{"type":439,"value":568},"对于所有有效的 i 都有 nums[i] != nums[i + 1]",{"type":434,"tag":570,"props":571,"children":573},"h2",{"id":572},"解题思路",[574],{"type":439,"value":572},{"type":434,"tag":570,"props":576,"children":578},{"id":577},"实现",[579],{"type":439,"value":577},{"type":434,"tag":581,"props":582,"children":584},"h3",{"id":583},"二分查找",[585],{"type":439,"value":583},{"type":434,"tag":461,"props":587,"children":591},{"className":588,"code":589,"language":590,"meta":427,"style":427},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findPeakElement = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let l = -1;\n  let r = nums.length - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] > nums[mid + 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return r;\n};\n","js",[592],{"type":434,"tag":467,"props":593,"children":594},{"__ignoreMap":427},[595,604,630,647,655,699,708,717,753,800,841,893,955,982,1001,1027,1036,1045,1062],{"type":434,"tag":471,"props":596,"children":597},{"class":473,"line":474},[598],{"type":434,"tag":471,"props":599,"children":601},{"style":600},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[602],{"type":439,"value":603},"/**\n",{"type":434,"tag":471,"props":605,"children":606},{"class":473,"line":483},[607,612,618,624],{"type":434,"tag":471,"props":608,"children":609},{"style":600},[610],{"type":439,"value":611}," * ",{"type":434,"tag":471,"props":613,"children":615},{"style":614},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[616],{"type":439,"value":617},"@param",{"type":434,"tag":471,"props":619,"children":621},{"style":620},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[622],{"type":439,"value":623}," {number[]}",{"type":434,"tag":471,"props":625,"children":627},{"style":626},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[628],{"type":439,"value":629}," nums\n",{"type":434,"tag":471,"props":631,"children":632},{"class":473,"line":492},[633,637,642],{"type":434,"tag":471,"props":634,"children":635},{"style":600},[636],{"type":439,"value":611},{"type":434,"tag":471,"props":638,"children":639},{"style":614},[640],{"type":439,"value":641},"@return",{"type":434,"tag":471,"props":643,"children":644},{"style":620},[645],{"type":439,"value":646}," {number}\n",{"type":434,"tag":471,"props":648,"children":649},{"class":473,"line":537},[650],{"type":434,"tag":471,"props":651,"children":652},{"style":600},[653],{"type":439,"value":654}," */\n",{"type":434,"tag":471,"props":656,"children":658},{"class":473,"line":657},5,[659,665,671,677,682,688,694],{"type":434,"tag":471,"props":660,"children":662},{"style":661},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[663],{"type":439,"value":664},"var",{"type":434,"tag":471,"props":666,"children":668},{"style":667},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[669],{"type":439,"value":670}," findPeakElement",{"type":434,"tag":471,"props":672,"children":674},{"style":673},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[675],{"type":439,"value":676}," =",{"type":434,"tag":471,"props":678,"children":679},{"style":661},[680],{"type":439,"value":681}," function",{"type":434,"tag":471,"props":683,"children":685},{"style":684},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[686],{"type":439,"value":687}," (",{"type":434,"tag":471,"props":689,"children":691},{"style":690},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[692],{"type":439,"value":693},"nums",{"type":434,"tag":471,"props":695,"children":696},{"style":684},[697],{"type":439,"value":698},") {\n",{"type":434,"tag":471,"props":700,"children":702},{"class":473,"line":701},6,[703],{"type":434,"tag":471,"props":704,"children":705},{"style":600},[706],{"type":439,"value":707},"  // [0, n - 2]\n",{"type":434,"tag":471,"props":709,"children":711},{"class":473,"line":710},7,[712],{"type":434,"tag":471,"props":713,"children":714},{"style":600},[715],{"type":439,"value":716},"  // (-1, n - 1) 开区间写法\n",{"type":434,"tag":471,"props":718,"children":720},{"class":473,"line":719},8,[721,726,732,736,741,747],{"type":434,"tag":471,"props":722,"children":723},{"style":661},[724],{"type":439,"value":725},"  let",{"type":434,"tag":471,"props":727,"children":729},{"style":728},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[730],{"type":439,"value":731}," l",{"type":434,"tag":471,"props":733,"children":734},{"style":673},[735],{"type":439,"value":676},{"type":434,"tag":471,"props":737,"children":738},{"style":673},[739],{"type":439,"value":740}," -",{"type":434,"tag":471,"props":742,"children":744},{"style":743},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[745],{"type":439,"value":746},"1",{"type":434,"tag":471,"props":748,"children":750},{"style":749},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[751],{"type":439,"value":752},";\n",{"type":434,"tag":471,"props":754,"children":756},{"class":473,"line":755},9,[757,761,766,770,775,781,786,791,796],{"type":434,"tag":471,"props":758,"children":759},{"style":661},[760],{"type":439,"value":725},{"type":434,"tag":471,"props":762,"children":763},{"style":728},[764],{"type":439,"value":765}," r",{"type":434,"tag":471,"props":767,"children":768},{"style":673},[769],{"type":439,"value":676},{"type":434,"tag":471,"props":771,"children":772},{"style":728},[773],{"type":439,"value":774}," nums",{"type":434,"tag":471,"props":776,"children":778},{"style":777},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[779],{"type":439,"value":780},".",{"type":434,"tag":471,"props":782,"children":783},{"style":684},[784],{"type":439,"value":785},"length ",{"type":434,"tag":471,"props":787,"children":788},{"style":673},[789],{"type":439,"value":790},"-",{"type":434,"tag":471,"props":792,"children":793},{"style":743},[794],{"type":439,"value":795}," 1",{"type":434,"tag":471,"props":797,"children":798},{"style":749},[799],{"type":439,"value":752},{"type":434,"tag":471,"props":801,"children":803},{"class":473,"line":802},10,[804,810,814,819,824,828,833,837],{"type":434,"tag":471,"props":805,"children":807},{"style":806},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[808],{"type":439,"value":809},"  while",{"type":434,"tag":471,"props":811,"children":812},{"style":684},[813],{"type":439,"value":687},{"type":434,"tag":471,"props":815,"children":816},{"style":728},[817],{"type":439,"value":818},"l",{"type":434,"tag":471,"props":820,"children":821},{"style":673},[822],{"type":439,"value":823}," +",{"type":434,"tag":471,"props":825,"children":826},{"style":743},[827],{"type":439,"value":795},{"type":434,"tag":471,"props":829,"children":830},{"style":673},[831],{"type":439,"value":832}," \u003C",{"type":434,"tag":471,"props":834,"children":835},{"style":728},[836],{"type":439,"value":765},{"type":434,"tag":471,"props":838,"children":839},{"style":684},[840],{"type":439,"value":698},{"type":434,"tag":471,"props":842,"children":844},{"class":473,"line":843},11,[845,850,855,859,863,867,871,875,880,885,889],{"type":434,"tag":471,"props":846,"children":847},{"style":661},[848],{"type":439,"value":849},"    let",{"type":434,"tag":471,"props":851,"children":852},{"style":728},[853],{"type":439,"value":854}," mid",{"type":434,"tag":471,"props":856,"children":857},{"style":673},[858],{"type":439,"value":676},{"type":434,"tag":471,"props":860,"children":861},{"style":684},[862],{"type":439,"value":687},{"type":434,"tag":471,"props":864,"children":865},{"style":728},[866],{"type":439,"value":818},{"type":434,"tag":471,"props":868,"children":869},{"style":673},[870],{"type":439,"value":823},{"type":434,"tag":471,"props":872,"children":873},{"style":728},[874],{"type":439,"value":765},{"type":434,"tag":471,"props":876,"children":877},{"style":684},[878],{"type":439,"value":879},") ",{"type":434,"tag":471,"props":881,"children":882},{"style":673},[883],{"type":439,"value":884},">>",{"type":434,"tag":471,"props":886,"children":887},{"style":743},[888],{"type":439,"value":795},{"type":434,"tag":471,"props":890,"children":891},{"style":749},[892],{"type":439,"value":752},{"type":434,"tag":471,"props":894,"children":896},{"class":473,"line":895},12,[897,902,906,910,915,920,925,930,934,938,942,946,950],{"type":434,"tag":471,"props":898,"children":899},{"style":806},[900],{"type":439,"value":901},"    if",{"type":434,"tag":471,"props":903,"children":904},{"style":684},[905],{"type":439,"value":687},{"type":434,"tag":471,"props":907,"children":908},{"style":728},[909],{"type":439,"value":693},{"type":434,"tag":471,"props":911,"children":912},{"style":684},[913],{"type":439,"value":914},"[",{"type":434,"tag":471,"props":916,"children":917},{"style":728},[918],{"type":439,"value":919},"mid",{"type":434,"tag":471,"props":921,"children":922},{"style":684},[923],{"type":439,"value":924},"] ",{"type":434,"tag":471,"props":926,"children":927},{"style":673},[928],{"type":439,"value":929},">",{"type":434,"tag":471,"props":931,"children":932},{"style":728},[933],{"type":439,"value":774},{"type":434,"tag":471,"props":935,"children":936},{"style":684},[937],{"type":439,"value":914},{"type":434,"tag":471,"props":939,"children":940},{"style":728},[941],{"type":439,"value":919},{"type":434,"tag":471,"props":943,"children":944},{"style":673},[945],{"type":439,"value":823},{"type":434,"tag":471,"props":947,"children":948},{"style":743},[949],{"type":439,"value":795},{"type":434,"tag":471,"props":951,"children":952},{"style":684},[953],{"type":439,"value":954},"]) {\n",{"type":434,"tag":471,"props":956,"children":958},{"class":473,"line":957},13,[959,964,968,972,977],{"type":434,"tag":471,"props":960,"children":961},{"style":728},[962],{"type":439,"value":963},"      r",{"type":434,"tag":471,"props":965,"children":966},{"style":673},[967],{"type":439,"value":676},{"type":434,"tag":471,"props":969,"children":970},{"style":728},[971],{"type":439,"value":854},{"type":434,"tag":471,"props":973,"children":974},{"style":749},[975],{"type":439,"value":976},";",{"type":434,"tag":471,"props":978,"children":979},{"style":600},[980],{"type":439,"value":981}," // 染蓝色\n",{"type":434,"tag":471,"props":983,"children":985},{"class":473,"line":984},14,[986,991,996],{"type":434,"tag":471,"props":987,"children":988},{"style":684},[989],{"type":439,"value":990},"    } ",{"type":434,"tag":471,"props":992,"children":993},{"style":806},[994],{"type":439,"value":995},"else",{"type":434,"tag":471,"props":997,"children":998},{"style":684},[999],{"type":439,"value":1000}," {\n",{"type":434,"tag":471,"props":1002,"children":1004},{"class":473,"line":1003},15,[1005,1010,1014,1018,1022],{"type":434,"tag":471,"props":1006,"children":1007},{"style":728},[1008],{"type":439,"value":1009},"      l",{"type":434,"tag":471,"props":1011,"children":1012},{"style":673},[1013],{"type":439,"value":676},{"type":434,"tag":471,"props":1015,"children":1016},{"style":728},[1017],{"type":439,"value":854},{"type":434,"tag":471,"props":1019,"children":1020},{"style":749},[1021],{"type":439,"value":976},{"type":434,"tag":471,"props":1023,"children":1024},{"style":600},[1025],{"type":439,"value":1026}," // 染红色\n",{"type":434,"tag":471,"props":1028,"children":1030},{"class":473,"line":1029},16,[1031],{"type":434,"tag":471,"props":1032,"children":1033},{"style":684},[1034],{"type":439,"value":1035},"    }\n",{"type":434,"tag":471,"props":1037,"children":1039},{"class":473,"line":1038},17,[1040],{"type":434,"tag":471,"props":1041,"children":1042},{"style":684},[1043],{"type":439,"value":1044},"  }\n",{"type":434,"tag":471,"props":1046,"children":1048},{"class":473,"line":1047},18,[1049,1054,1058],{"type":434,"tag":471,"props":1050,"children":1051},{"style":806},[1052],{"type":439,"value":1053},"  return",{"type":434,"tag":471,"props":1055,"children":1056},{"style":728},[1057],{"type":439,"value":765},{"type":434,"tag":471,"props":1059,"children":1060},{"style":749},[1061],{"type":439,"value":752},{"type":434,"tag":471,"props":1063,"children":1065},{"class":473,"line":1064},19,[1066,1071],{"type":434,"tag":471,"props":1067,"children":1068},{"style":684},[1069],{"type":439,"value":1070},"}",{"type":434,"tag":471,"props":1072,"children":1073},{"style":749},[1074],{"type":439,"value":752},{"type":434,"tag":1076,"props":1077,"children":1078},"style",{},[1079],{"type":439,"value":1080},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":427,"searchDepth":657,"depth":657,"links":1082},[1083,1084],{"id":572,"depth":483,"text":572},{"id":577,"depth":483,"text":577,"children":1085},[1086],{"id":583,"depth":492,"text":583},"markdown","content:1.algorithm:3.leetcode:162.find-peak-element.md","content","1.algorithm/3.leetcode/162.find-peak-element.md","md",[1093,1095],{"_path":158,"title":157,"description":1094},"给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。",{"_path":164,"title":163,"description":1096},"给你两个版本号 version1 和 version2 ，请你比较它们。",1713339872592]