[{"data":1,"prerenderedAt":1071},["Reactive",2],{"navigation":3,"/algorithm/leetcode/find-peak-element":398,"/algorithm/leetcode/find-peak-element-surround":1066},[4,237,265,384],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR 169. 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR 187. 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数相加","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,377],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,347,350,353,356,359,362,365,368,371,374],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":348,"_path":349},"倒计时","/frontend-code-assessment/scene/countdown",{"title":351,"_path":352},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":354,"_path":355},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":357,"_path":358},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":360,"_path":361},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":363,"_path":364},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":366,"_path":367},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":369,"_path":370},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":372,"_path":373},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":375,"_path":376},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":378,"_path":379,"children":380},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[381],{"title":382,"_path":383},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":385,"_path":386,"children":387},"后端语言","/backend-languages",[388],{"title":389,"_path":390,"children":391},"Python","/backend-languages/python",[392,395],{"title":393,"_path":394},"基础","/backend-languages/python/base",{"title":396,"_path":397},"函数","/backend-languages/python/function",{"_path":161,"_dir":399,"_draft":400,"_partial":400,"_locale":401,"title":160,"description":402,"url":403,"body":404,"_type":1061,"_id":1062,"_source":1063,"_file":1064,"_extension":1065},"leetcode",false,"","峰值元素是指其值严格大于左右相邻值的元素。","https://leetcode.cn/problems/find-peak-element",{"type":405,"children":406,"toc":1055},"root",[407,414,419,424,429,434,473,478,518,523,543,549,554,560,1049],{"type":408,"tag":409,"props":410,"children":411},"element","p",{},[412],{"type":413,"value":402},"text",{"type":408,"tag":409,"props":415,"children":416},{},[417],{"type":413,"value":418},"给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。",{"type":408,"tag":409,"props":420,"children":421},{},[422],{"type":413,"value":423},"你可以假设 nums[-1] = nums[n] = -∞ 。",{"type":408,"tag":409,"props":425,"children":426},{},[427],{"type":413,"value":428},"你必须实现时间复杂度为 O(log n) 的算法来解决此问题。",{"type":408,"tag":409,"props":430,"children":431},{},[432],{"type":413,"value":433},"示例 1：",{"type":408,"tag":435,"props":436,"children":439},"pre",{"className":437,"code":438,"language":413,"meta":401,"style":401},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。\n",[440],{"type":408,"tag":441,"props":442,"children":443},"code",{"__ignoreMap":401},[444,455,464],{"type":408,"tag":445,"props":446,"children":449},"span",{"class":447,"line":448},"line",1,[450],{"type":408,"tag":445,"props":451,"children":452},{},[453],{"type":413,"value":454},"输入：nums = [1,2,3,1]\n",{"type":408,"tag":445,"props":456,"children":458},{"class":447,"line":457},2,[459],{"type":408,"tag":445,"props":460,"children":461},{},[462],{"type":413,"value":463},"输出：2\n",{"type":408,"tag":445,"props":465,"children":467},{"class":447,"line":466},3,[468],{"type":408,"tag":445,"props":469,"children":470},{},[471],{"type":413,"value":472},"解释：3 是峰值元素，你的函数应该返回其索引 2。\n",{"type":408,"tag":409,"props":474,"children":475},{},[476],{"type":413,"value":477},"示例 2：",{"type":408,"tag":435,"props":479,"children":481},{"className":437,"code":480,"language":413,"meta":401,"style":401},"输入：nums = [1,2,1,3,5,6,4]\n输出：1 或 5\n解释：你的函数可以返回索引 1，其峰值元素为 2；\n或者返回索引 5， 其峰值元素为 6。\n",[482],{"type":408,"tag":441,"props":483,"children":484},{"__ignoreMap":401},[485,493,501,509],{"type":408,"tag":445,"props":486,"children":487},{"class":447,"line":448},[488],{"type":408,"tag":445,"props":489,"children":490},{},[491],{"type":413,"value":492},"输入：nums = [1,2,1,3,5,6,4]\n",{"type":408,"tag":445,"props":494,"children":495},{"class":447,"line":457},[496],{"type":408,"tag":445,"props":497,"children":498},{},[499],{"type":413,"value":500},"输出：1 或 5\n",{"type":408,"tag":445,"props":502,"children":503},{"class":447,"line":466},[504],{"type":408,"tag":445,"props":505,"children":506},{},[507],{"type":413,"value":508},"解释：你的函数可以返回索引 1，其峰值元素为 2；\n",{"type":408,"tag":445,"props":510,"children":512},{"class":447,"line":511},4,[513],{"type":408,"tag":445,"props":514,"children":515},{},[516],{"type":413,"value":517},"或者返回索引 5， 其峰值元素为 6。\n",{"type":408,"tag":409,"props":519,"children":520},{},[521],{"type":413,"value":522},"提示：",{"type":408,"tag":524,"props":525,"children":526},"ul",{},[527,533,538],{"type":408,"tag":528,"props":529,"children":530},"li",{},[531],{"type":413,"value":532},"1 \u003C= nums.length \u003C= 1000",{"type":408,"tag":528,"props":534,"children":535},{},[536],{"type":413,"value":537},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":408,"tag":528,"props":539,"children":540},{},[541],{"type":413,"value":542},"对于所有有效的 i 都有 nums[i] != nums[i + 1]",{"type":408,"tag":544,"props":545,"children":547},"h2",{"id":546},"解题思路",[548],{"type":413,"value":546},{"type":408,"tag":544,"props":550,"children":552},{"id":551},"实现",[553],{"type":413,"value":551},{"type":408,"tag":555,"props":556,"children":558},"h3",{"id":557},"二分查找",[559],{"type":413,"value":557},{"type":408,"tag":435,"props":561,"children":565},{"className":562,"code":563,"language":564,"meta":401,"style":401},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findPeakElement = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let l = -1;\n  let r = nums.length - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] > nums[mid + 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return r;\n};\n","js",[566],{"type":408,"tag":441,"props":567,"children":568},{"__ignoreMap":401},[569,578,604,621,629,673,682,691,727,774,815,867,929,956,975,1001,1010,1019,1036],{"type":408,"tag":445,"props":570,"children":571},{"class":447,"line":448},[572],{"type":408,"tag":445,"props":573,"children":575},{"style":574},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[576],{"type":413,"value":577},"/**\n",{"type":408,"tag":445,"props":579,"children":580},{"class":447,"line":457},[581,586,592,598],{"type":408,"tag":445,"props":582,"children":583},{"style":574},[584],{"type":413,"value":585}," * ",{"type":408,"tag":445,"props":587,"children":589},{"style":588},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[590],{"type":413,"value":591},"@param",{"type":408,"tag":445,"props":593,"children":595},{"style":594},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[596],{"type":413,"value":597}," {number[]}",{"type":408,"tag":445,"props":599,"children":601},{"style":600},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[602],{"type":413,"value":603}," nums\n",{"type":408,"tag":445,"props":605,"children":606},{"class":447,"line":466},[607,611,616],{"type":408,"tag":445,"props":608,"children":609},{"style":574},[610],{"type":413,"value":585},{"type":408,"tag":445,"props":612,"children":613},{"style":588},[614],{"type":413,"value":615},"@return",{"type":408,"tag":445,"props":617,"children":618},{"style":594},[619],{"type":413,"value":620}," {number}\n",{"type":408,"tag":445,"props":622,"children":623},{"class":447,"line":511},[624],{"type":408,"tag":445,"props":625,"children":626},{"style":574},[627],{"type":413,"value":628}," */\n",{"type":408,"tag":445,"props":630,"children":632},{"class":447,"line":631},5,[633,639,645,651,656,662,668],{"type":408,"tag":445,"props":634,"children":636},{"style":635},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[637],{"type":413,"value":638},"var",{"type":408,"tag":445,"props":640,"children":642},{"style":641},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[643],{"type":413,"value":644}," findPeakElement",{"type":408,"tag":445,"props":646,"children":648},{"style":647},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[649],{"type":413,"value":650}," =",{"type":408,"tag":445,"props":652,"children":653},{"style":635},[654],{"type":413,"value":655}," function",{"type":408,"tag":445,"props":657,"children":659},{"style":658},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[660],{"type":413,"value":661}," (",{"type":408,"tag":445,"props":663,"children":665},{"style":664},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[666],{"type":413,"value":667},"nums",{"type":408,"tag":445,"props":669,"children":670},{"style":658},[671],{"type":413,"value":672},") {\n",{"type":408,"tag":445,"props":674,"children":676},{"class":447,"line":675},6,[677],{"type":408,"tag":445,"props":678,"children":679},{"style":574},[680],{"type":413,"value":681},"  // [0, n - 2]\n",{"type":408,"tag":445,"props":683,"children":685},{"class":447,"line":684},7,[686],{"type":408,"tag":445,"props":687,"children":688},{"style":574},[689],{"type":413,"value":690},"  // (-1, n - 1) 开区间写法\n",{"type":408,"tag":445,"props":692,"children":694},{"class":447,"line":693},8,[695,700,706,710,715,721],{"type":408,"tag":445,"props":696,"children":697},{"style":635},[698],{"type":413,"value":699},"  let",{"type":408,"tag":445,"props":701,"children":703},{"style":702},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[704],{"type":413,"value":705}," l",{"type":408,"tag":445,"props":707,"children":708},{"style":647},[709],{"type":413,"value":650},{"type":408,"tag":445,"props":711,"children":712},{"style":647},[713],{"type":413,"value":714}," -",{"type":408,"tag":445,"props":716,"children":718},{"style":717},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[719],{"type":413,"value":720},"1",{"type":408,"tag":445,"props":722,"children":724},{"style":723},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[725],{"type":413,"value":726},";\n",{"type":408,"tag":445,"props":728,"children":730},{"class":447,"line":729},9,[731,735,740,744,749,755,760,765,770],{"type":408,"tag":445,"props":732,"children":733},{"style":635},[734],{"type":413,"value":699},{"type":408,"tag":445,"props":736,"children":737},{"style":702},[738],{"type":413,"value":739}," r",{"type":408,"tag":445,"props":741,"children":742},{"style":647},[743],{"type":413,"value":650},{"type":408,"tag":445,"props":745,"children":746},{"style":702},[747],{"type":413,"value":748}," nums",{"type":408,"tag":445,"props":750,"children":752},{"style":751},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[753],{"type":413,"value":754},".",{"type":408,"tag":445,"props":756,"children":757},{"style":658},[758],{"type":413,"value":759},"length ",{"type":408,"tag":445,"props":761,"children":762},{"style":647},[763],{"type":413,"value":764},"-",{"type":408,"tag":445,"props":766,"children":767},{"style":717},[768],{"type":413,"value":769}," 1",{"type":408,"tag":445,"props":771,"children":772},{"style":723},[773],{"type":413,"value":726},{"type":408,"tag":445,"props":775,"children":777},{"class":447,"line":776},10,[778,784,788,793,798,802,807,811],{"type":408,"tag":445,"props":779,"children":781},{"style":780},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[782],{"type":413,"value":783},"  while",{"type":408,"tag":445,"props":785,"children":786},{"style":658},[787],{"type":413,"value":661},{"type":408,"tag":445,"props":789,"children":790},{"style":702},[791],{"type":413,"value":792},"l",{"type":408,"tag":445,"props":794,"children":795},{"style":647},[796],{"type":413,"value":797}," +",{"type":408,"tag":445,"props":799,"children":800},{"style":717},[801],{"type":413,"value":769},{"type":408,"tag":445,"props":803,"children":804},{"style":647},[805],{"type":413,"value":806}," \u003C",{"type":408,"tag":445,"props":808,"children":809},{"style":702},[810],{"type":413,"value":739},{"type":408,"tag":445,"props":812,"children":813},{"style":658},[814],{"type":413,"value":672},{"type":408,"tag":445,"props":816,"children":818},{"class":447,"line":817},11,[819,824,829,833,837,841,845,849,854,859,863],{"type":408,"tag":445,"props":820,"children":821},{"style":635},[822],{"type":413,"value":823},"    let",{"type":408,"tag":445,"props":825,"children":826},{"style":702},[827],{"type":413,"value":828}," mid",{"type":408,"tag":445,"props":830,"children":831},{"style":647},[832],{"type":413,"value":650},{"type":408,"tag":445,"props":834,"children":835},{"style":658},[836],{"type":413,"value":661},{"type":408,"tag":445,"props":838,"children":839},{"style":702},[840],{"type":413,"value":792},{"type":408,"tag":445,"props":842,"children":843},{"style":647},[844],{"type":413,"value":797},{"type":408,"tag":445,"props":846,"children":847},{"style":702},[848],{"type":413,"value":739},{"type":408,"tag":445,"props":850,"children":851},{"style":658},[852],{"type":413,"value":853},") ",{"type":408,"tag":445,"props":855,"children":856},{"style":647},[857],{"type":413,"value":858},">>",{"type":408,"tag":445,"props":860,"children":861},{"style":717},[862],{"type":413,"value":769},{"type":408,"tag":445,"props":864,"children":865},{"style":723},[866],{"type":413,"value":726},{"type":408,"tag":445,"props":868,"children":870},{"class":447,"line":869},12,[871,876,880,884,889,894,899,904,908,912,916,920,924],{"type":408,"tag":445,"props":872,"children":873},{"style":780},[874],{"type":413,"value":875},"    if",{"type":408,"tag":445,"props":877,"children":878},{"style":658},[879],{"type":413,"value":661},{"type":408,"tag":445,"props":881,"children":882},{"style":702},[883],{"type":413,"value":667},{"type":408,"tag":445,"props":885,"children":886},{"style":658},[887],{"type":413,"value":888},"[",{"type":408,"tag":445,"props":890,"children":891},{"style":702},[892],{"type":413,"value":893},"mid",{"type":408,"tag":445,"props":895,"children":896},{"style":658},[897],{"type":413,"value":898},"] ",{"type":408,"tag":445,"props":900,"children":901},{"style":647},[902],{"type":413,"value":903},">",{"type":408,"tag":445,"props":905,"children":906},{"style":702},[907],{"type":413,"value":748},{"type":408,"tag":445,"props":909,"children":910},{"style":658},[911],{"type":413,"value":888},{"type":408,"tag":445,"props":913,"children":914},{"style":702},[915],{"type":413,"value":893},{"type":408,"tag":445,"props":917,"children":918},{"style":647},[919],{"type":413,"value":797},{"type":408,"tag":445,"props":921,"children":922},{"style":717},[923],{"type":413,"value":769},{"type":408,"tag":445,"props":925,"children":926},{"style":658},[927],{"type":413,"value":928},"]) {\n",{"type":408,"tag":445,"props":930,"children":932},{"class":447,"line":931},13,[933,938,942,946,951],{"type":408,"tag":445,"props":934,"children":935},{"style":702},[936],{"type":413,"value":937},"      r",{"type":408,"tag":445,"props":939,"children":940},{"style":647},[941],{"type":413,"value":650},{"type":408,"tag":445,"props":943,"children":944},{"style":702},[945],{"type":413,"value":828},{"type":408,"tag":445,"props":947,"children":948},{"style":723},[949],{"type":413,"value":950},";",{"type":408,"tag":445,"props":952,"children":953},{"style":574},[954],{"type":413,"value":955}," // 染蓝色\n",{"type":408,"tag":445,"props":957,"children":959},{"class":447,"line":958},14,[960,965,970],{"type":408,"tag":445,"props":961,"children":962},{"style":658},[963],{"type":413,"value":964},"    } ",{"type":408,"tag":445,"props":966,"children":967},{"style":780},[968],{"type":413,"value":969},"else",{"type":408,"tag":445,"props":971,"children":972},{"style":658},[973],{"type":413,"value":974}," {\n",{"type":408,"tag":445,"props":976,"children":978},{"class":447,"line":977},15,[979,984,988,992,996],{"type":408,"tag":445,"props":980,"children":981},{"style":702},[982],{"type":413,"value":983},"      l",{"type":408,"tag":445,"props":985,"children":986},{"style":647},[987],{"type":413,"value":650},{"type":408,"tag":445,"props":989,"children":990},{"style":702},[991],{"type":413,"value":828},{"type":408,"tag":445,"props":993,"children":994},{"style":723},[995],{"type":413,"value":950},{"type":408,"tag":445,"props":997,"children":998},{"style":574},[999],{"type":413,"value":1000}," // 染红色\n",{"type":408,"tag":445,"props":1002,"children":1004},{"class":447,"line":1003},16,[1005],{"type":408,"tag":445,"props":1006,"children":1007},{"style":658},[1008],{"type":413,"value":1009},"    }\n",{"type":408,"tag":445,"props":1011,"children":1013},{"class":447,"line":1012},17,[1014],{"type":408,"tag":445,"props":1015,"children":1016},{"style":658},[1017],{"type":413,"value":1018},"  }\n",{"type":408,"tag":445,"props":1020,"children":1022},{"class":447,"line":1021},18,[1023,1028,1032],{"type":408,"tag":445,"props":1024,"children":1025},{"style":780},[1026],{"type":413,"value":1027},"  return",{"type":408,"tag":445,"props":1029,"children":1030},{"style":702},[1031],{"type":413,"value":739},{"type":408,"tag":445,"props":1033,"children":1034},{"style":723},[1035],{"type":413,"value":726},{"type":408,"tag":445,"props":1037,"children":1039},{"class":447,"line":1038},19,[1040,1045],{"type":408,"tag":445,"props":1041,"children":1042},{"style":658},[1043],{"type":413,"value":1044},"}",{"type":408,"tag":445,"props":1046,"children":1047},{"style":723},[1048],{"type":413,"value":726},{"type":408,"tag":1050,"props":1051,"children":1052},"style",{},[1053],{"type":413,"value":1054},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":401,"searchDepth":631,"depth":631,"links":1056},[1057,1058],{"id":546,"depth":457,"text":546},{"id":551,"depth":457,"text":551,"children":1059},[1060],{"id":557,"depth":466,"text":557},"markdown","content:1.algorithm:3.leetcode:162.find-peak-element.md","content","1.algorithm/3.leetcode/162.find-peak-element.md","md",[1067,1069],{"_path":158,"title":157,"description":1068},"给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。",{"_path":164,"title":163,"description":1070},"给你两个版本号 version1 和 version2 ，请你比较它们。",1713153294250]