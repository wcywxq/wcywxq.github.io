[{"data":1,"prerenderedAt":1192},["Reactive",2],{"navigation":3,"/algorithm/leetcode/find-minimum-in-rotated-sorted-array":424,"/algorithm/leetcode/find-minimum-in-rotated-sorted-array-surround":1187},[4,237,265,403,410],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,396],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"随机数","/frontend-code-assessment/scene/random-number",{"title":382,"_path":383},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":385,"_path":386},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":388,"_path":389},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":391,"_path":392},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":394,"_path":395},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":397,"_path":398,"children":399},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[400],{"title":401,"_path":402},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":404,"_path":405,"children":406},"项目","/pro",[407],{"title":408,"_path":409},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":411,"_path":412,"children":413},"后端语言","/backend-languages",[414],{"title":415,"_path":416,"children":417},"Python","/backend-languages/python",[418,421],{"title":419,"_path":420},"基础","/backend-languages/python/base",{"title":422,"_path":423},"函数","/backend-languages/python/function",{"_path":152,"_dir":425,"_draft":426,"_partial":426,"_locale":427,"title":151,"description":428,"url":429,"body":430,"_type":1182,"_id":1183,"_source":1184,"_file":1185,"_extension":1186},"leetcode",false,"","已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：","https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array",{"type":431,"children":432,"toc":1178},"root",[433,440,455,460,465,470,509,514,545,550,581,586,614,620,638,643,1172],{"type":434,"tag":435,"props":436,"children":437},"element","p",{},[438],{"type":439,"value":428},"text",{"type":434,"tag":441,"props":442,"children":443},"ul",{},[444,450],{"type":434,"tag":445,"props":446,"children":447},"li",{},[448],{"type":439,"value":449},"若旋转 4 次，则可以得到 [4,5,6,7,0,1,2]",{"type":434,"tag":445,"props":451,"children":452},{},[453],{"type":439,"value":454},"若旋转 7 次，则可以得到 [0,1,2,4,5,6,7]\n注意，数组 [a[0], a[1], a[2], ..., a[n-1]] 旋转一次 的结果为数组 [a[n-1], a[0], a[1], a[2], ..., a[n-2]] 。",{"type":434,"tag":435,"props":456,"children":457},{},[458],{"type":439,"value":459},"给你一个元素值 互不相同 的数组 nums ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 最小元素 。",{"type":434,"tag":435,"props":461,"children":462},{},[463],{"type":439,"value":464},"你必须设计一个时间复杂度为 O(log n) 的算法解决此问题。",{"type":434,"tag":435,"props":466,"children":467},{},[468],{"type":439,"value":469},"示例 1：",{"type":434,"tag":471,"props":472,"children":475},"pre",{"className":473,"code":474,"language":439,"meta":427,"style":427},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [3,4,5,1,2]\n输出：1\n解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",[476],{"type":434,"tag":477,"props":478,"children":479},"code",{"__ignoreMap":427},[480,491,500],{"type":434,"tag":481,"props":482,"children":485},"span",{"class":483,"line":484},"line",1,[486],{"type":434,"tag":481,"props":487,"children":488},{},[489],{"type":439,"value":490},"输入：nums = [3,4,5,1,2]\n",{"type":434,"tag":481,"props":492,"children":494},{"class":483,"line":493},2,[495],{"type":434,"tag":481,"props":496,"children":497},{},[498],{"type":439,"value":499},"输出：1\n",{"type":434,"tag":481,"props":501,"children":503},{"class":483,"line":502},3,[504],{"type":434,"tag":481,"props":505,"children":506},{},[507],{"type":439,"value":508},"解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",{"type":434,"tag":435,"props":510,"children":511},{},[512],{"type":439,"value":513},"示例 2：",{"type":434,"tag":471,"props":515,"children":517},{"className":473,"code":516,"language":439,"meta":427,"style":427},"输入：nums = [4,5,6,7,0,1,2]\n输出：0\n解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",[518],{"type":434,"tag":477,"props":519,"children":520},{"__ignoreMap":427},[521,529,537],{"type":434,"tag":481,"props":522,"children":523},{"class":483,"line":484},[524],{"type":434,"tag":481,"props":525,"children":526},{},[527],{"type":439,"value":528},"输入：nums = [4,5,6,7,0,1,2]\n",{"type":434,"tag":481,"props":530,"children":531},{"class":483,"line":493},[532],{"type":434,"tag":481,"props":533,"children":534},{},[535],{"type":439,"value":536},"输出：0\n",{"type":434,"tag":481,"props":538,"children":539},{"class":483,"line":502},[540],{"type":434,"tag":481,"props":541,"children":542},{},[543],{"type":439,"value":544},"解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",{"type":434,"tag":435,"props":546,"children":547},{},[548],{"type":439,"value":549},"示例 3：",{"type":434,"tag":471,"props":551,"children":553},{"className":473,"code":552,"language":439,"meta":427,"style":427},"输入：nums = [11,13,15,17]\n输出：11\n解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",[554],{"type":434,"tag":477,"props":555,"children":556},{"__ignoreMap":427},[557,565,573],{"type":434,"tag":481,"props":558,"children":559},{"class":483,"line":484},[560],{"type":434,"tag":481,"props":561,"children":562},{},[563],{"type":439,"value":564},"输入：nums = [11,13,15,17]\n",{"type":434,"tag":481,"props":566,"children":567},{"class":483,"line":493},[568],{"type":434,"tag":481,"props":569,"children":570},{},[571],{"type":439,"value":572},"输出：11\n",{"type":434,"tag":481,"props":574,"children":575},{"class":483,"line":502},[576],{"type":434,"tag":481,"props":577,"children":578},{},[579],{"type":439,"value":580},"解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",{"type":434,"tag":435,"props":582,"children":583},{},[584],{"type":439,"value":585},"提示：",{"type":434,"tag":441,"props":587,"children":588},{},[589,594,599,604,609],{"type":434,"tag":445,"props":590,"children":591},{},[592],{"type":439,"value":593},"n == nums.length",{"type":434,"tag":445,"props":595,"children":596},{},[597],{"type":439,"value":598},"1 \u003C= n \u003C= 5000",{"type":434,"tag":445,"props":600,"children":601},{},[602],{"type":439,"value":603},"-5000 \u003C= nums[i] \u003C= 5000",{"type":434,"tag":445,"props":605,"children":606},{},[607],{"type":439,"value":608},"nums 中的所有整数 互不相同",{"type":434,"tag":445,"props":610,"children":611},{},[612],{"type":439,"value":613},"nums 原来是一个升序排序的数组，并进行了 1 至 n 次旋转",{"type":434,"tag":615,"props":616,"children":618},"h2",{"id":617},"解题思路",[619],{"type":439,"value":617},{"type":434,"tag":441,"props":621,"children":622},{},[623,628,633],{"type":434,"tag":445,"props":624,"children":625},{},[626],{"type":439,"value":627},"经过分析，红色即最小值左侧，蓝色即最小值及其右侧",{"type":434,"tag":445,"props":629,"children":630},{},[631],{"type":439,"value":632},"n - 1 一定是蓝色",{"type":434,"tag":445,"props":634,"children":635},{},[636],{"type":439,"value":637},"总结：小于最后一个数，就是蓝色，否则就是红色",{"type":434,"tag":615,"props":639,"children":641},{"id":640},"实现",[642],{"type":439,"value":640},{"type":434,"tag":471,"props":644,"children":648},{"className":645,"code":646,"language":647,"meta":427,"style":427},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMin = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let len = nums.length;\n  let l = -1;\n  let r = len - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] \u003C nums[len - 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return nums[r];\n};\n","js",[649],{"type":434,"tag":477,"props":650,"children":651},{"__ignoreMap":427},[652,661,687,704,713,757,766,775,816,848,882,923,975,1038,1065,1084,1110,1119,1128,1159],{"type":434,"tag":481,"props":653,"children":654},{"class":483,"line":484},[655],{"type":434,"tag":481,"props":656,"children":658},{"style":657},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[659],{"type":439,"value":660},"/**\n",{"type":434,"tag":481,"props":662,"children":663},{"class":483,"line":493},[664,669,675,681],{"type":434,"tag":481,"props":665,"children":666},{"style":657},[667],{"type":439,"value":668}," * ",{"type":434,"tag":481,"props":670,"children":672},{"style":671},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[673],{"type":439,"value":674},"@param",{"type":434,"tag":481,"props":676,"children":678},{"style":677},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[679],{"type":439,"value":680}," {number[]}",{"type":434,"tag":481,"props":682,"children":684},{"style":683},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[685],{"type":439,"value":686}," nums\n",{"type":434,"tag":481,"props":688,"children":689},{"class":483,"line":502},[690,694,699],{"type":434,"tag":481,"props":691,"children":692},{"style":657},[693],{"type":439,"value":668},{"type":434,"tag":481,"props":695,"children":696},{"style":671},[697],{"type":439,"value":698},"@return",{"type":434,"tag":481,"props":700,"children":701},{"style":677},[702],{"type":439,"value":703}," {number}\n",{"type":434,"tag":481,"props":705,"children":707},{"class":483,"line":706},4,[708],{"type":434,"tag":481,"props":709,"children":710},{"style":657},[711],{"type":439,"value":712}," */\n",{"type":434,"tag":481,"props":714,"children":716},{"class":483,"line":715},5,[717,723,729,735,740,746,752],{"type":434,"tag":481,"props":718,"children":720},{"style":719},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[721],{"type":439,"value":722},"var",{"type":434,"tag":481,"props":724,"children":726},{"style":725},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[727],{"type":439,"value":728}," findMin",{"type":434,"tag":481,"props":730,"children":732},{"style":731},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[733],{"type":439,"value":734}," =",{"type":434,"tag":481,"props":736,"children":737},{"style":719},[738],{"type":439,"value":739}," function",{"type":434,"tag":481,"props":741,"children":743},{"style":742},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[744],{"type":439,"value":745}," (",{"type":434,"tag":481,"props":747,"children":749},{"style":748},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[750],{"type":439,"value":751},"nums",{"type":434,"tag":481,"props":753,"children":754},{"style":742},[755],{"type":439,"value":756},") {\n",{"type":434,"tag":481,"props":758,"children":760},{"class":483,"line":759},6,[761],{"type":434,"tag":481,"props":762,"children":763},{"style":657},[764],{"type":439,"value":765},"  // [0, n - 2]\n",{"type":434,"tag":481,"props":767,"children":769},{"class":483,"line":768},7,[770],{"type":434,"tag":481,"props":771,"children":772},{"style":657},[773],{"type":439,"value":774},"  // (-1, n - 1) 开区间写法\n",{"type":434,"tag":481,"props":776,"children":778},{"class":483,"line":777},8,[779,784,790,794,799,805,810],{"type":434,"tag":481,"props":780,"children":781},{"style":719},[782],{"type":439,"value":783},"  let",{"type":434,"tag":481,"props":785,"children":787},{"style":786},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[788],{"type":439,"value":789}," len",{"type":434,"tag":481,"props":791,"children":792},{"style":731},[793],{"type":439,"value":734},{"type":434,"tag":481,"props":795,"children":796},{"style":786},[797],{"type":439,"value":798}," nums",{"type":434,"tag":481,"props":800,"children":802},{"style":801},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[803],{"type":439,"value":804},".",{"type":434,"tag":481,"props":806,"children":807},{"style":742},[808],{"type":439,"value":809},"length",{"type":434,"tag":481,"props":811,"children":813},{"style":812},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[814],{"type":439,"value":815},";\n",{"type":434,"tag":481,"props":817,"children":819},{"class":483,"line":818},9,[820,824,829,833,838,844],{"type":434,"tag":481,"props":821,"children":822},{"style":719},[823],{"type":439,"value":783},{"type":434,"tag":481,"props":825,"children":826},{"style":786},[827],{"type":439,"value":828}," l",{"type":434,"tag":481,"props":830,"children":831},{"style":731},[832],{"type":439,"value":734},{"type":434,"tag":481,"props":834,"children":835},{"style":731},[836],{"type":439,"value":837}," -",{"type":434,"tag":481,"props":839,"children":841},{"style":840},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[842],{"type":439,"value":843},"1",{"type":434,"tag":481,"props":845,"children":846},{"style":812},[847],{"type":439,"value":815},{"type":434,"tag":481,"props":849,"children":851},{"class":483,"line":850},10,[852,856,861,865,869,873,878],{"type":434,"tag":481,"props":853,"children":854},{"style":719},[855],{"type":439,"value":783},{"type":434,"tag":481,"props":857,"children":858},{"style":786},[859],{"type":439,"value":860}," r",{"type":434,"tag":481,"props":862,"children":863},{"style":731},[864],{"type":439,"value":734},{"type":434,"tag":481,"props":866,"children":867},{"style":786},[868],{"type":439,"value":789},{"type":434,"tag":481,"props":870,"children":871},{"style":731},[872],{"type":439,"value":837},{"type":434,"tag":481,"props":874,"children":875},{"style":840},[876],{"type":439,"value":877}," 1",{"type":434,"tag":481,"props":879,"children":880},{"style":812},[881],{"type":439,"value":815},{"type":434,"tag":481,"props":883,"children":885},{"class":483,"line":884},11,[886,892,896,901,906,910,915,919],{"type":434,"tag":481,"props":887,"children":889},{"style":888},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[890],{"type":439,"value":891},"  while",{"type":434,"tag":481,"props":893,"children":894},{"style":742},[895],{"type":439,"value":745},{"type":434,"tag":481,"props":897,"children":898},{"style":786},[899],{"type":439,"value":900},"l",{"type":434,"tag":481,"props":902,"children":903},{"style":731},[904],{"type":439,"value":905}," +",{"type":434,"tag":481,"props":907,"children":908},{"style":840},[909],{"type":439,"value":877},{"type":434,"tag":481,"props":911,"children":912},{"style":731},[913],{"type":439,"value":914}," \u003C",{"type":434,"tag":481,"props":916,"children":917},{"style":786},[918],{"type":439,"value":860},{"type":434,"tag":481,"props":920,"children":921},{"style":742},[922],{"type":439,"value":756},{"type":434,"tag":481,"props":924,"children":926},{"class":483,"line":925},12,[927,932,937,941,945,949,953,957,962,967,971],{"type":434,"tag":481,"props":928,"children":929},{"style":719},[930],{"type":439,"value":931},"    let",{"type":434,"tag":481,"props":933,"children":934},{"style":786},[935],{"type":439,"value":936}," mid",{"type":434,"tag":481,"props":938,"children":939},{"style":731},[940],{"type":439,"value":734},{"type":434,"tag":481,"props":942,"children":943},{"style":742},[944],{"type":439,"value":745},{"type":434,"tag":481,"props":946,"children":947},{"style":786},[948],{"type":439,"value":900},{"type":434,"tag":481,"props":950,"children":951},{"style":731},[952],{"type":439,"value":905},{"type":434,"tag":481,"props":954,"children":955},{"style":786},[956],{"type":439,"value":860},{"type":434,"tag":481,"props":958,"children":959},{"style":742},[960],{"type":439,"value":961},") ",{"type":434,"tag":481,"props":963,"children":964},{"style":731},[965],{"type":439,"value":966},">>",{"type":434,"tag":481,"props":968,"children":969},{"style":840},[970],{"type":439,"value":877},{"type":434,"tag":481,"props":972,"children":973},{"style":812},[974],{"type":439,"value":815},{"type":434,"tag":481,"props":976,"children":978},{"class":483,"line":977},13,[979,984,988,992,997,1002,1007,1012,1016,1020,1025,1029,1033],{"type":434,"tag":481,"props":980,"children":981},{"style":888},[982],{"type":439,"value":983},"    if",{"type":434,"tag":481,"props":985,"children":986},{"style":742},[987],{"type":439,"value":745},{"type":434,"tag":481,"props":989,"children":990},{"style":786},[991],{"type":439,"value":751},{"type":434,"tag":481,"props":993,"children":994},{"style":742},[995],{"type":439,"value":996},"[",{"type":434,"tag":481,"props":998,"children":999},{"style":786},[1000],{"type":439,"value":1001},"mid",{"type":434,"tag":481,"props":1003,"children":1004},{"style":742},[1005],{"type":439,"value":1006},"] ",{"type":434,"tag":481,"props":1008,"children":1009},{"style":731},[1010],{"type":439,"value":1011},"\u003C",{"type":434,"tag":481,"props":1013,"children":1014},{"style":786},[1015],{"type":439,"value":798},{"type":434,"tag":481,"props":1017,"children":1018},{"style":742},[1019],{"type":439,"value":996},{"type":434,"tag":481,"props":1021,"children":1022},{"style":786},[1023],{"type":439,"value":1024},"len",{"type":434,"tag":481,"props":1026,"children":1027},{"style":731},[1028],{"type":439,"value":837},{"type":434,"tag":481,"props":1030,"children":1031},{"style":840},[1032],{"type":439,"value":877},{"type":434,"tag":481,"props":1034,"children":1035},{"style":742},[1036],{"type":439,"value":1037},"]) {\n",{"type":434,"tag":481,"props":1039,"children":1041},{"class":483,"line":1040},14,[1042,1047,1051,1055,1060],{"type":434,"tag":481,"props":1043,"children":1044},{"style":786},[1045],{"type":439,"value":1046},"      r",{"type":434,"tag":481,"props":1048,"children":1049},{"style":731},[1050],{"type":439,"value":734},{"type":434,"tag":481,"props":1052,"children":1053},{"style":786},[1054],{"type":439,"value":936},{"type":434,"tag":481,"props":1056,"children":1057},{"style":812},[1058],{"type":439,"value":1059},";",{"type":434,"tag":481,"props":1061,"children":1062},{"style":657},[1063],{"type":439,"value":1064}," // 染蓝色\n",{"type":434,"tag":481,"props":1066,"children":1068},{"class":483,"line":1067},15,[1069,1074,1079],{"type":434,"tag":481,"props":1070,"children":1071},{"style":742},[1072],{"type":439,"value":1073},"    } ",{"type":434,"tag":481,"props":1075,"children":1076},{"style":888},[1077],{"type":439,"value":1078},"else",{"type":434,"tag":481,"props":1080,"children":1081},{"style":742},[1082],{"type":439,"value":1083}," {\n",{"type":434,"tag":481,"props":1085,"children":1087},{"class":483,"line":1086},16,[1088,1093,1097,1101,1105],{"type":434,"tag":481,"props":1089,"children":1090},{"style":786},[1091],{"type":439,"value":1092},"      l",{"type":434,"tag":481,"props":1094,"children":1095},{"style":731},[1096],{"type":439,"value":734},{"type":434,"tag":481,"props":1098,"children":1099},{"style":786},[1100],{"type":439,"value":936},{"type":434,"tag":481,"props":1102,"children":1103},{"style":812},[1104],{"type":439,"value":1059},{"type":434,"tag":481,"props":1106,"children":1107},{"style":657},[1108],{"type":439,"value":1109}," // 染红色\n",{"type":434,"tag":481,"props":1111,"children":1113},{"class":483,"line":1112},17,[1114],{"type":434,"tag":481,"props":1115,"children":1116},{"style":742},[1117],{"type":439,"value":1118},"    }\n",{"type":434,"tag":481,"props":1120,"children":1122},{"class":483,"line":1121},18,[1123],{"type":434,"tag":481,"props":1124,"children":1125},{"style":742},[1126],{"type":439,"value":1127},"  }\n",{"type":434,"tag":481,"props":1129,"children":1131},{"class":483,"line":1130},19,[1132,1137,1141,1145,1150,1155],{"type":434,"tag":481,"props":1133,"children":1134},{"style":888},[1135],{"type":439,"value":1136},"  return",{"type":434,"tag":481,"props":1138,"children":1139},{"style":786},[1140],{"type":439,"value":798},{"type":434,"tag":481,"props":1142,"children":1143},{"style":742},[1144],{"type":439,"value":996},{"type":434,"tag":481,"props":1146,"children":1147},{"style":786},[1148],{"type":439,"value":1149},"r",{"type":434,"tag":481,"props":1151,"children":1152},{"style":742},[1153],{"type":439,"value":1154},"]",{"type":434,"tag":481,"props":1156,"children":1157},{"style":812},[1158],{"type":439,"value":815},{"type":434,"tag":481,"props":1160,"children":1162},{"class":483,"line":1161},20,[1163,1168],{"type":434,"tag":481,"props":1164,"children":1165},{"style":742},[1166],{"type":439,"value":1167},"}",{"type":434,"tag":481,"props":1169,"children":1170},{"style":812},[1171],{"type":439,"value":815},{"type":434,"tag":1173,"props":1174,"children":1175},"style",{},[1176],{"type":439,"value":1177},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":427,"searchDepth":715,"depth":715,"links":1179},[1180,1181],{"id":617,"depth":493,"text":617},{"id":640,"depth":493,"text":640},"markdown","content:1.algorithm:3.leetcode:153.find-minimum-in-rotated-sorted-array.md","content","1.algorithm/3.leetcode/153.find-minimum-in-rotated-sorted-array.md","md",[1188,1190],{"_path":149,"title":148,"description":1189},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",{"_path":155,"title":154,"description":1191},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",1713339872544]