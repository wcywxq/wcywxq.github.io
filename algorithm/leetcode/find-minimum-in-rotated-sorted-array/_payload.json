[{"data":1,"prerenderedAt":1173},["Reactive",2],{"navigation":3,"/algorithm/leetcode/find-minimum-in-rotated-sorted-array":405,"/algorithm/leetcode/find-minimum-in-rotated-sorted-array-surround":1168},[4,237,265,384,391],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR 169. 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR 187. 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,377],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,347,350,353,356,359,362,365,368,371,374],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":348,"_path":349},"倒计时","/frontend-code-assessment/scene/countdown",{"title":351,"_path":352},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":354,"_path":355},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":357,"_path":358},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":360,"_path":361},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":363,"_path":364},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":366,"_path":367},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":369,"_path":370},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":372,"_path":373},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":375,"_path":376},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":378,"_path":379,"children":380},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[381],{"title":382,"_path":383},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":385,"_path":386,"children":387},"项目","/pro",[388],{"title":389,"_path":390},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":392,"_path":393,"children":394},"后端语言","/backend-languages",[395],{"title":396,"_path":397,"children":398},"Python","/backend-languages/python",[399,402],{"title":400,"_path":401},"基础","/backend-languages/python/base",{"title":403,"_path":404},"函数","/backend-languages/python/function",{"_path":152,"_dir":406,"_draft":407,"_partial":407,"_locale":408,"title":151,"description":409,"url":410,"body":411,"_type":1163,"_id":1164,"_source":1165,"_file":1166,"_extension":1167},"leetcode",false,"","已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：","https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array",{"type":412,"children":413,"toc":1159},"root",[414,421,436,441,446,451,490,495,526,531,562,567,595,601,619,624,1153],{"type":415,"tag":416,"props":417,"children":418},"element","p",{},[419],{"type":420,"value":409},"text",{"type":415,"tag":422,"props":423,"children":424},"ul",{},[425,431],{"type":415,"tag":426,"props":427,"children":428},"li",{},[429],{"type":420,"value":430},"若旋转 4 次，则可以得到 [4,5,6,7,0,1,2]",{"type":415,"tag":426,"props":432,"children":433},{},[434],{"type":420,"value":435},"若旋转 7 次，则可以得到 [0,1,2,4,5,6,7]\n注意，数组 [a[0], a[1], a[2], ..., a[n-1]] 旋转一次 的结果为数组 [a[n-1], a[0], a[1], a[2], ..., a[n-2]] 。",{"type":415,"tag":416,"props":437,"children":438},{},[439],{"type":420,"value":440},"给你一个元素值 互不相同 的数组 nums ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 最小元素 。",{"type":415,"tag":416,"props":442,"children":443},{},[444],{"type":420,"value":445},"你必须设计一个时间复杂度为 O(log n) 的算法解决此问题。",{"type":415,"tag":416,"props":447,"children":448},{},[449],{"type":420,"value":450},"示例 1：",{"type":415,"tag":452,"props":453,"children":456},"pre",{"className":454,"code":455,"language":420,"meta":408,"style":408},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [3,4,5,1,2]\n输出：1\n解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",[457],{"type":415,"tag":458,"props":459,"children":460},"code",{"__ignoreMap":408},[461,472,481],{"type":415,"tag":462,"props":463,"children":466},"span",{"class":464,"line":465},"line",1,[467],{"type":415,"tag":462,"props":468,"children":469},{},[470],{"type":420,"value":471},"输入：nums = [3,4,5,1,2]\n",{"type":415,"tag":462,"props":473,"children":475},{"class":464,"line":474},2,[476],{"type":415,"tag":462,"props":477,"children":478},{},[479],{"type":420,"value":480},"输出：1\n",{"type":415,"tag":462,"props":482,"children":484},{"class":464,"line":483},3,[485],{"type":415,"tag":462,"props":486,"children":487},{},[488],{"type":420,"value":489},"解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",{"type":415,"tag":416,"props":491,"children":492},{},[493],{"type":420,"value":494},"示例 2：",{"type":415,"tag":452,"props":496,"children":498},{"className":454,"code":497,"language":420,"meta":408,"style":408},"输入：nums = [4,5,6,7,0,1,2]\n输出：0\n解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",[499],{"type":415,"tag":458,"props":500,"children":501},{"__ignoreMap":408},[502,510,518],{"type":415,"tag":462,"props":503,"children":504},{"class":464,"line":465},[505],{"type":415,"tag":462,"props":506,"children":507},{},[508],{"type":420,"value":509},"输入：nums = [4,5,6,7,0,1,2]\n",{"type":415,"tag":462,"props":511,"children":512},{"class":464,"line":474},[513],{"type":415,"tag":462,"props":514,"children":515},{},[516],{"type":420,"value":517},"输出：0\n",{"type":415,"tag":462,"props":519,"children":520},{"class":464,"line":483},[521],{"type":415,"tag":462,"props":522,"children":523},{},[524],{"type":420,"value":525},"解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",{"type":415,"tag":416,"props":527,"children":528},{},[529],{"type":420,"value":530},"示例 3：",{"type":415,"tag":452,"props":532,"children":534},{"className":454,"code":533,"language":420,"meta":408,"style":408},"输入：nums = [11,13,15,17]\n输出：11\n解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",[535],{"type":415,"tag":458,"props":536,"children":537},{"__ignoreMap":408},[538,546,554],{"type":415,"tag":462,"props":539,"children":540},{"class":464,"line":465},[541],{"type":415,"tag":462,"props":542,"children":543},{},[544],{"type":420,"value":545},"输入：nums = [11,13,15,17]\n",{"type":415,"tag":462,"props":547,"children":548},{"class":464,"line":474},[549],{"type":415,"tag":462,"props":550,"children":551},{},[552],{"type":420,"value":553},"输出：11\n",{"type":415,"tag":462,"props":555,"children":556},{"class":464,"line":483},[557],{"type":415,"tag":462,"props":558,"children":559},{},[560],{"type":420,"value":561},"解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",{"type":415,"tag":416,"props":563,"children":564},{},[565],{"type":420,"value":566},"提示：",{"type":415,"tag":422,"props":568,"children":569},{},[570,575,580,585,590],{"type":415,"tag":426,"props":571,"children":572},{},[573],{"type":420,"value":574},"n == nums.length",{"type":415,"tag":426,"props":576,"children":577},{},[578],{"type":420,"value":579},"1 \u003C= n \u003C= 5000",{"type":415,"tag":426,"props":581,"children":582},{},[583],{"type":420,"value":584},"-5000 \u003C= nums[i] \u003C= 5000",{"type":415,"tag":426,"props":586,"children":587},{},[588],{"type":420,"value":589},"nums 中的所有整数 互不相同",{"type":415,"tag":426,"props":591,"children":592},{},[593],{"type":420,"value":594},"nums 原来是一个升序排序的数组，并进行了 1 至 n 次旋转",{"type":415,"tag":596,"props":597,"children":599},"h2",{"id":598},"解题思路",[600],{"type":420,"value":598},{"type":415,"tag":422,"props":602,"children":603},{},[604,609,614],{"type":415,"tag":426,"props":605,"children":606},{},[607],{"type":420,"value":608},"经过分析，红色即最小值左侧，蓝色即最小值及其右侧",{"type":415,"tag":426,"props":610,"children":611},{},[612],{"type":420,"value":613},"n - 1 一定是蓝色",{"type":415,"tag":426,"props":615,"children":616},{},[617],{"type":420,"value":618},"总结：小于最后一个数，就是蓝色，否则就是红色",{"type":415,"tag":596,"props":620,"children":622},{"id":621},"实现",[623],{"type":420,"value":621},{"type":415,"tag":452,"props":625,"children":629},{"className":626,"code":627,"language":628,"meta":408,"style":408},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMin = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let len = nums.length;\n  let l = -1;\n  let r = len - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] \u003C nums[len - 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return nums[r];\n};\n","js",[630],{"type":415,"tag":458,"props":631,"children":632},{"__ignoreMap":408},[633,642,668,685,694,738,747,756,797,829,863,904,956,1019,1046,1065,1091,1100,1109,1140],{"type":415,"tag":462,"props":634,"children":635},{"class":464,"line":465},[636],{"type":415,"tag":462,"props":637,"children":639},{"style":638},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[640],{"type":420,"value":641},"/**\n",{"type":415,"tag":462,"props":643,"children":644},{"class":464,"line":474},[645,650,656,662],{"type":415,"tag":462,"props":646,"children":647},{"style":638},[648],{"type":420,"value":649}," * ",{"type":415,"tag":462,"props":651,"children":653},{"style":652},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[654],{"type":420,"value":655},"@param",{"type":415,"tag":462,"props":657,"children":659},{"style":658},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[660],{"type":420,"value":661}," {number[]}",{"type":415,"tag":462,"props":663,"children":665},{"style":664},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[666],{"type":420,"value":667}," nums\n",{"type":415,"tag":462,"props":669,"children":670},{"class":464,"line":483},[671,675,680],{"type":415,"tag":462,"props":672,"children":673},{"style":638},[674],{"type":420,"value":649},{"type":415,"tag":462,"props":676,"children":677},{"style":652},[678],{"type":420,"value":679},"@return",{"type":415,"tag":462,"props":681,"children":682},{"style":658},[683],{"type":420,"value":684}," {number}\n",{"type":415,"tag":462,"props":686,"children":688},{"class":464,"line":687},4,[689],{"type":415,"tag":462,"props":690,"children":691},{"style":638},[692],{"type":420,"value":693}," */\n",{"type":415,"tag":462,"props":695,"children":697},{"class":464,"line":696},5,[698,704,710,716,721,727,733],{"type":415,"tag":462,"props":699,"children":701},{"style":700},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[702],{"type":420,"value":703},"var",{"type":415,"tag":462,"props":705,"children":707},{"style":706},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[708],{"type":420,"value":709}," findMin",{"type":415,"tag":462,"props":711,"children":713},{"style":712},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[714],{"type":420,"value":715}," =",{"type":415,"tag":462,"props":717,"children":718},{"style":700},[719],{"type":420,"value":720}," function",{"type":415,"tag":462,"props":722,"children":724},{"style":723},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[725],{"type":420,"value":726}," (",{"type":415,"tag":462,"props":728,"children":730},{"style":729},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[731],{"type":420,"value":732},"nums",{"type":415,"tag":462,"props":734,"children":735},{"style":723},[736],{"type":420,"value":737},") {\n",{"type":415,"tag":462,"props":739,"children":741},{"class":464,"line":740},6,[742],{"type":415,"tag":462,"props":743,"children":744},{"style":638},[745],{"type":420,"value":746},"  // [0, n - 2]\n",{"type":415,"tag":462,"props":748,"children":750},{"class":464,"line":749},7,[751],{"type":415,"tag":462,"props":752,"children":753},{"style":638},[754],{"type":420,"value":755},"  // (-1, n - 1) 开区间写法\n",{"type":415,"tag":462,"props":757,"children":759},{"class":464,"line":758},8,[760,765,771,775,780,786,791],{"type":415,"tag":462,"props":761,"children":762},{"style":700},[763],{"type":420,"value":764},"  let",{"type":415,"tag":462,"props":766,"children":768},{"style":767},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[769],{"type":420,"value":770}," len",{"type":415,"tag":462,"props":772,"children":773},{"style":712},[774],{"type":420,"value":715},{"type":415,"tag":462,"props":776,"children":777},{"style":767},[778],{"type":420,"value":779}," nums",{"type":415,"tag":462,"props":781,"children":783},{"style":782},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[784],{"type":420,"value":785},".",{"type":415,"tag":462,"props":787,"children":788},{"style":723},[789],{"type":420,"value":790},"length",{"type":415,"tag":462,"props":792,"children":794},{"style":793},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[795],{"type":420,"value":796},";\n",{"type":415,"tag":462,"props":798,"children":800},{"class":464,"line":799},9,[801,805,810,814,819,825],{"type":415,"tag":462,"props":802,"children":803},{"style":700},[804],{"type":420,"value":764},{"type":415,"tag":462,"props":806,"children":807},{"style":767},[808],{"type":420,"value":809}," l",{"type":415,"tag":462,"props":811,"children":812},{"style":712},[813],{"type":420,"value":715},{"type":415,"tag":462,"props":815,"children":816},{"style":712},[817],{"type":420,"value":818}," -",{"type":415,"tag":462,"props":820,"children":822},{"style":821},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[823],{"type":420,"value":824},"1",{"type":415,"tag":462,"props":826,"children":827},{"style":793},[828],{"type":420,"value":796},{"type":415,"tag":462,"props":830,"children":832},{"class":464,"line":831},10,[833,837,842,846,850,854,859],{"type":415,"tag":462,"props":834,"children":835},{"style":700},[836],{"type":420,"value":764},{"type":415,"tag":462,"props":838,"children":839},{"style":767},[840],{"type":420,"value":841}," r",{"type":415,"tag":462,"props":843,"children":844},{"style":712},[845],{"type":420,"value":715},{"type":415,"tag":462,"props":847,"children":848},{"style":767},[849],{"type":420,"value":770},{"type":415,"tag":462,"props":851,"children":852},{"style":712},[853],{"type":420,"value":818},{"type":415,"tag":462,"props":855,"children":856},{"style":821},[857],{"type":420,"value":858}," 1",{"type":415,"tag":462,"props":860,"children":861},{"style":793},[862],{"type":420,"value":796},{"type":415,"tag":462,"props":864,"children":866},{"class":464,"line":865},11,[867,873,877,882,887,891,896,900],{"type":415,"tag":462,"props":868,"children":870},{"style":869},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[871],{"type":420,"value":872},"  while",{"type":415,"tag":462,"props":874,"children":875},{"style":723},[876],{"type":420,"value":726},{"type":415,"tag":462,"props":878,"children":879},{"style":767},[880],{"type":420,"value":881},"l",{"type":415,"tag":462,"props":883,"children":884},{"style":712},[885],{"type":420,"value":886}," +",{"type":415,"tag":462,"props":888,"children":889},{"style":821},[890],{"type":420,"value":858},{"type":415,"tag":462,"props":892,"children":893},{"style":712},[894],{"type":420,"value":895}," \u003C",{"type":415,"tag":462,"props":897,"children":898},{"style":767},[899],{"type":420,"value":841},{"type":415,"tag":462,"props":901,"children":902},{"style":723},[903],{"type":420,"value":737},{"type":415,"tag":462,"props":905,"children":907},{"class":464,"line":906},12,[908,913,918,922,926,930,934,938,943,948,952],{"type":415,"tag":462,"props":909,"children":910},{"style":700},[911],{"type":420,"value":912},"    let",{"type":415,"tag":462,"props":914,"children":915},{"style":767},[916],{"type":420,"value":917}," mid",{"type":415,"tag":462,"props":919,"children":920},{"style":712},[921],{"type":420,"value":715},{"type":415,"tag":462,"props":923,"children":924},{"style":723},[925],{"type":420,"value":726},{"type":415,"tag":462,"props":927,"children":928},{"style":767},[929],{"type":420,"value":881},{"type":415,"tag":462,"props":931,"children":932},{"style":712},[933],{"type":420,"value":886},{"type":415,"tag":462,"props":935,"children":936},{"style":767},[937],{"type":420,"value":841},{"type":415,"tag":462,"props":939,"children":940},{"style":723},[941],{"type":420,"value":942},") ",{"type":415,"tag":462,"props":944,"children":945},{"style":712},[946],{"type":420,"value":947},">>",{"type":415,"tag":462,"props":949,"children":950},{"style":821},[951],{"type":420,"value":858},{"type":415,"tag":462,"props":953,"children":954},{"style":793},[955],{"type":420,"value":796},{"type":415,"tag":462,"props":957,"children":959},{"class":464,"line":958},13,[960,965,969,973,978,983,988,993,997,1001,1006,1010,1014],{"type":415,"tag":462,"props":961,"children":962},{"style":869},[963],{"type":420,"value":964},"    if",{"type":415,"tag":462,"props":966,"children":967},{"style":723},[968],{"type":420,"value":726},{"type":415,"tag":462,"props":970,"children":971},{"style":767},[972],{"type":420,"value":732},{"type":415,"tag":462,"props":974,"children":975},{"style":723},[976],{"type":420,"value":977},"[",{"type":415,"tag":462,"props":979,"children":980},{"style":767},[981],{"type":420,"value":982},"mid",{"type":415,"tag":462,"props":984,"children":985},{"style":723},[986],{"type":420,"value":987},"] ",{"type":415,"tag":462,"props":989,"children":990},{"style":712},[991],{"type":420,"value":992},"\u003C",{"type":415,"tag":462,"props":994,"children":995},{"style":767},[996],{"type":420,"value":779},{"type":415,"tag":462,"props":998,"children":999},{"style":723},[1000],{"type":420,"value":977},{"type":415,"tag":462,"props":1002,"children":1003},{"style":767},[1004],{"type":420,"value":1005},"len",{"type":415,"tag":462,"props":1007,"children":1008},{"style":712},[1009],{"type":420,"value":818},{"type":415,"tag":462,"props":1011,"children":1012},{"style":821},[1013],{"type":420,"value":858},{"type":415,"tag":462,"props":1015,"children":1016},{"style":723},[1017],{"type":420,"value":1018},"]) {\n",{"type":415,"tag":462,"props":1020,"children":1022},{"class":464,"line":1021},14,[1023,1028,1032,1036,1041],{"type":415,"tag":462,"props":1024,"children":1025},{"style":767},[1026],{"type":420,"value":1027},"      r",{"type":415,"tag":462,"props":1029,"children":1030},{"style":712},[1031],{"type":420,"value":715},{"type":415,"tag":462,"props":1033,"children":1034},{"style":767},[1035],{"type":420,"value":917},{"type":415,"tag":462,"props":1037,"children":1038},{"style":793},[1039],{"type":420,"value":1040},";",{"type":415,"tag":462,"props":1042,"children":1043},{"style":638},[1044],{"type":420,"value":1045}," // 染蓝色\n",{"type":415,"tag":462,"props":1047,"children":1049},{"class":464,"line":1048},15,[1050,1055,1060],{"type":415,"tag":462,"props":1051,"children":1052},{"style":723},[1053],{"type":420,"value":1054},"    } ",{"type":415,"tag":462,"props":1056,"children":1057},{"style":869},[1058],{"type":420,"value":1059},"else",{"type":415,"tag":462,"props":1061,"children":1062},{"style":723},[1063],{"type":420,"value":1064}," {\n",{"type":415,"tag":462,"props":1066,"children":1068},{"class":464,"line":1067},16,[1069,1074,1078,1082,1086],{"type":415,"tag":462,"props":1070,"children":1071},{"style":767},[1072],{"type":420,"value":1073},"      l",{"type":415,"tag":462,"props":1075,"children":1076},{"style":712},[1077],{"type":420,"value":715},{"type":415,"tag":462,"props":1079,"children":1080},{"style":767},[1081],{"type":420,"value":917},{"type":415,"tag":462,"props":1083,"children":1084},{"style":793},[1085],{"type":420,"value":1040},{"type":415,"tag":462,"props":1087,"children":1088},{"style":638},[1089],{"type":420,"value":1090}," // 染红色\n",{"type":415,"tag":462,"props":1092,"children":1094},{"class":464,"line":1093},17,[1095],{"type":415,"tag":462,"props":1096,"children":1097},{"style":723},[1098],{"type":420,"value":1099},"    }\n",{"type":415,"tag":462,"props":1101,"children":1103},{"class":464,"line":1102},18,[1104],{"type":415,"tag":462,"props":1105,"children":1106},{"style":723},[1107],{"type":420,"value":1108},"  }\n",{"type":415,"tag":462,"props":1110,"children":1112},{"class":464,"line":1111},19,[1113,1118,1122,1126,1131,1136],{"type":415,"tag":462,"props":1114,"children":1115},{"style":869},[1116],{"type":420,"value":1117},"  return",{"type":415,"tag":462,"props":1119,"children":1120},{"style":767},[1121],{"type":420,"value":779},{"type":415,"tag":462,"props":1123,"children":1124},{"style":723},[1125],{"type":420,"value":977},{"type":415,"tag":462,"props":1127,"children":1128},{"style":767},[1129],{"type":420,"value":1130},"r",{"type":415,"tag":462,"props":1132,"children":1133},{"style":723},[1134],{"type":420,"value":1135},"]",{"type":415,"tag":462,"props":1137,"children":1138},{"style":793},[1139],{"type":420,"value":796},{"type":415,"tag":462,"props":1141,"children":1143},{"class":464,"line":1142},20,[1144,1149],{"type":415,"tag":462,"props":1145,"children":1146},{"style":723},[1147],{"type":420,"value":1148},"}",{"type":415,"tag":462,"props":1150,"children":1151},{"style":793},[1152],{"type":420,"value":796},{"type":415,"tag":1154,"props":1155,"children":1156},"style",{},[1157],{"type":420,"value":1158},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":408,"searchDepth":696,"depth":696,"links":1160},[1161,1162],{"id":598,"depth":474,"text":598},{"id":621,"depth":474,"text":621},"markdown","content:1.algorithm:3.leetcode:153.find-minimum-in-rotated-sorted-array.md","content","1.algorithm/3.leetcode/153.find-minimum-in-rotated-sorted-array.md","md",[1169,1171],{"_path":149,"title":148,"description":1170},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",{"_path":155,"title":154,"description":1172},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",1713279656691]