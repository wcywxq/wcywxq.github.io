[{"data":1,"prerenderedAt":1166},["Reactive",2],{"navigation":3,"/algorithm/leetcode/find-minimum-in-rotated-sorted-array":398,"/algorithm/leetcode/find-minimum-in-rotated-sorted-array-surround":1161},[4,237,265,384],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR 169. 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR 187. 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数相加","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,377],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,347,350,353,356,359,362,365,368,371,374],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":348,"_path":349},"倒计时","/frontend-code-assessment/scene/countdown",{"title":351,"_path":352},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":354,"_path":355},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":357,"_path":358},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":360,"_path":361},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":363,"_path":364},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":366,"_path":367},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":369,"_path":370},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":372,"_path":373},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":375,"_path":376},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":378,"_path":379,"children":380},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[381],{"title":382,"_path":383},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":385,"_path":386,"children":387},"后端语言","/backend-languages",[388],{"title":389,"_path":390,"children":391},"Python","/backend-languages/python",[392,395],{"title":393,"_path":394},"基础","/backend-languages/python/base",{"title":396,"_path":397},"函数","/backend-languages/python/function",{"_path":152,"_dir":399,"_draft":400,"_partial":400,"_locale":401,"title":151,"description":402,"url":403,"body":404,"_type":1156,"_id":1157,"_source":1158,"_file":1159,"_extension":1160},"leetcode",false,"","已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：","https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array",{"type":405,"children":406,"toc":1152},"root",[407,414,429,434,439,444,483,488,519,524,555,560,588,594,612,617,1146],{"type":408,"tag":409,"props":410,"children":411},"element","p",{},[412],{"type":413,"value":402},"text",{"type":408,"tag":415,"props":416,"children":417},"ul",{},[418,424],{"type":408,"tag":419,"props":420,"children":421},"li",{},[422],{"type":413,"value":423},"若旋转 4 次，则可以得到 [4,5,6,7,0,1,2]",{"type":408,"tag":419,"props":425,"children":426},{},[427],{"type":413,"value":428},"若旋转 7 次，则可以得到 [0,1,2,4,5,6,7]\n注意，数组 [a[0], a[1], a[2], ..., a[n-1]] 旋转一次 的结果为数组 [a[n-1], a[0], a[1], a[2], ..., a[n-2]] 。",{"type":408,"tag":409,"props":430,"children":431},{},[432],{"type":413,"value":433},"给你一个元素值 互不相同 的数组 nums ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 最小元素 。",{"type":408,"tag":409,"props":435,"children":436},{},[437],{"type":413,"value":438},"你必须设计一个时间复杂度为 O(log n) 的算法解决此问题。",{"type":408,"tag":409,"props":440,"children":441},{},[442],{"type":413,"value":443},"示例 1：",{"type":408,"tag":445,"props":446,"children":449},"pre",{"className":447,"code":448,"language":413,"meta":401,"style":401},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [3,4,5,1,2]\n输出：1\n解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",[450],{"type":408,"tag":451,"props":452,"children":453},"code",{"__ignoreMap":401},[454,465,474],{"type":408,"tag":455,"props":456,"children":459},"span",{"class":457,"line":458},"line",1,[460],{"type":408,"tag":455,"props":461,"children":462},{},[463],{"type":413,"value":464},"输入：nums = [3,4,5,1,2]\n",{"type":408,"tag":455,"props":466,"children":468},{"class":457,"line":467},2,[469],{"type":408,"tag":455,"props":470,"children":471},{},[472],{"type":413,"value":473},"输出：1\n",{"type":408,"tag":455,"props":475,"children":477},{"class":457,"line":476},3,[478],{"type":408,"tag":455,"props":479,"children":480},{},[481],{"type":413,"value":482},"解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",{"type":408,"tag":409,"props":484,"children":485},{},[486],{"type":413,"value":487},"示例 2：",{"type":408,"tag":445,"props":489,"children":491},{"className":447,"code":490,"language":413,"meta":401,"style":401},"输入：nums = [4,5,6,7,0,1,2]\n输出：0\n解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",[492],{"type":408,"tag":451,"props":493,"children":494},{"__ignoreMap":401},[495,503,511],{"type":408,"tag":455,"props":496,"children":497},{"class":457,"line":458},[498],{"type":408,"tag":455,"props":499,"children":500},{},[501],{"type":413,"value":502},"输入：nums = [4,5,6,7,0,1,2]\n",{"type":408,"tag":455,"props":504,"children":505},{"class":457,"line":467},[506],{"type":408,"tag":455,"props":507,"children":508},{},[509],{"type":413,"value":510},"输出：0\n",{"type":408,"tag":455,"props":512,"children":513},{"class":457,"line":476},[514],{"type":408,"tag":455,"props":515,"children":516},{},[517],{"type":413,"value":518},"解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",{"type":408,"tag":409,"props":520,"children":521},{},[522],{"type":413,"value":523},"示例 3：",{"type":408,"tag":445,"props":525,"children":527},{"className":447,"code":526,"language":413,"meta":401,"style":401},"输入：nums = [11,13,15,17]\n输出：11\n解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",[528],{"type":408,"tag":451,"props":529,"children":530},{"__ignoreMap":401},[531,539,547],{"type":408,"tag":455,"props":532,"children":533},{"class":457,"line":458},[534],{"type":408,"tag":455,"props":535,"children":536},{},[537],{"type":413,"value":538},"输入：nums = [11,13,15,17]\n",{"type":408,"tag":455,"props":540,"children":541},{"class":457,"line":467},[542],{"type":408,"tag":455,"props":543,"children":544},{},[545],{"type":413,"value":546},"输出：11\n",{"type":408,"tag":455,"props":548,"children":549},{"class":457,"line":476},[550],{"type":408,"tag":455,"props":551,"children":552},{},[553],{"type":413,"value":554},"解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",{"type":408,"tag":409,"props":556,"children":557},{},[558],{"type":413,"value":559},"提示：",{"type":408,"tag":415,"props":561,"children":562},{},[563,568,573,578,583],{"type":408,"tag":419,"props":564,"children":565},{},[566],{"type":413,"value":567},"n == nums.length",{"type":408,"tag":419,"props":569,"children":570},{},[571],{"type":413,"value":572},"1 \u003C= n \u003C= 5000",{"type":408,"tag":419,"props":574,"children":575},{},[576],{"type":413,"value":577},"-5000 \u003C= nums[i] \u003C= 5000",{"type":408,"tag":419,"props":579,"children":580},{},[581],{"type":413,"value":582},"nums 中的所有整数 互不相同",{"type":408,"tag":419,"props":584,"children":585},{},[586],{"type":413,"value":587},"nums 原来是一个升序排序的数组，并进行了 1 至 n 次旋转",{"type":408,"tag":589,"props":590,"children":592},"h2",{"id":591},"解题思路",[593],{"type":413,"value":591},{"type":408,"tag":415,"props":595,"children":596},{},[597,602,607],{"type":408,"tag":419,"props":598,"children":599},{},[600],{"type":413,"value":601},"经过分析，红色即最小值左侧，蓝色即最小值及其右侧",{"type":408,"tag":419,"props":603,"children":604},{},[605],{"type":413,"value":606},"n - 1 一定是蓝色",{"type":408,"tag":419,"props":608,"children":609},{},[610],{"type":413,"value":611},"总结：小于最后一个数，就是蓝色，否则就是红色",{"type":408,"tag":589,"props":613,"children":615},{"id":614},"实现",[616],{"type":413,"value":614},{"type":408,"tag":445,"props":618,"children":622},{"className":619,"code":620,"language":621,"meta":401,"style":401},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMin = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let len = nums.length;\n  let l = -1;\n  let r = len - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] \u003C nums[len - 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return nums[r];\n};\n","js",[623],{"type":408,"tag":451,"props":624,"children":625},{"__ignoreMap":401},[626,635,661,678,687,731,740,749,790,822,856,897,949,1012,1039,1058,1084,1093,1102,1133],{"type":408,"tag":455,"props":627,"children":628},{"class":457,"line":458},[629],{"type":408,"tag":455,"props":630,"children":632},{"style":631},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[633],{"type":413,"value":634},"/**\n",{"type":408,"tag":455,"props":636,"children":637},{"class":457,"line":467},[638,643,649,655],{"type":408,"tag":455,"props":639,"children":640},{"style":631},[641],{"type":413,"value":642}," * ",{"type":408,"tag":455,"props":644,"children":646},{"style":645},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[647],{"type":413,"value":648},"@param",{"type":408,"tag":455,"props":650,"children":652},{"style":651},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[653],{"type":413,"value":654}," {number[]}",{"type":408,"tag":455,"props":656,"children":658},{"style":657},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[659],{"type":413,"value":660}," nums\n",{"type":408,"tag":455,"props":662,"children":663},{"class":457,"line":476},[664,668,673],{"type":408,"tag":455,"props":665,"children":666},{"style":631},[667],{"type":413,"value":642},{"type":408,"tag":455,"props":669,"children":670},{"style":645},[671],{"type":413,"value":672},"@return",{"type":408,"tag":455,"props":674,"children":675},{"style":651},[676],{"type":413,"value":677}," {number}\n",{"type":408,"tag":455,"props":679,"children":681},{"class":457,"line":680},4,[682],{"type":408,"tag":455,"props":683,"children":684},{"style":631},[685],{"type":413,"value":686}," */\n",{"type":408,"tag":455,"props":688,"children":690},{"class":457,"line":689},5,[691,697,703,709,714,720,726],{"type":408,"tag":455,"props":692,"children":694},{"style":693},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[695],{"type":413,"value":696},"var",{"type":408,"tag":455,"props":698,"children":700},{"style":699},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[701],{"type":413,"value":702}," findMin",{"type":408,"tag":455,"props":704,"children":706},{"style":705},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[707],{"type":413,"value":708}," =",{"type":408,"tag":455,"props":710,"children":711},{"style":693},[712],{"type":413,"value":713}," function",{"type":408,"tag":455,"props":715,"children":717},{"style":716},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[718],{"type":413,"value":719}," (",{"type":408,"tag":455,"props":721,"children":723},{"style":722},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[724],{"type":413,"value":725},"nums",{"type":408,"tag":455,"props":727,"children":728},{"style":716},[729],{"type":413,"value":730},") {\n",{"type":408,"tag":455,"props":732,"children":734},{"class":457,"line":733},6,[735],{"type":408,"tag":455,"props":736,"children":737},{"style":631},[738],{"type":413,"value":739},"  // [0, n - 2]\n",{"type":408,"tag":455,"props":741,"children":743},{"class":457,"line":742},7,[744],{"type":408,"tag":455,"props":745,"children":746},{"style":631},[747],{"type":413,"value":748},"  // (-1, n - 1) 开区间写法\n",{"type":408,"tag":455,"props":750,"children":752},{"class":457,"line":751},8,[753,758,764,768,773,779,784],{"type":408,"tag":455,"props":754,"children":755},{"style":693},[756],{"type":413,"value":757},"  let",{"type":408,"tag":455,"props":759,"children":761},{"style":760},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[762],{"type":413,"value":763}," len",{"type":408,"tag":455,"props":765,"children":766},{"style":705},[767],{"type":413,"value":708},{"type":408,"tag":455,"props":769,"children":770},{"style":760},[771],{"type":413,"value":772}," nums",{"type":408,"tag":455,"props":774,"children":776},{"style":775},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[777],{"type":413,"value":778},".",{"type":408,"tag":455,"props":780,"children":781},{"style":716},[782],{"type":413,"value":783},"length",{"type":408,"tag":455,"props":785,"children":787},{"style":786},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[788],{"type":413,"value":789},";\n",{"type":408,"tag":455,"props":791,"children":793},{"class":457,"line":792},9,[794,798,803,807,812,818],{"type":408,"tag":455,"props":795,"children":796},{"style":693},[797],{"type":413,"value":757},{"type":408,"tag":455,"props":799,"children":800},{"style":760},[801],{"type":413,"value":802}," l",{"type":408,"tag":455,"props":804,"children":805},{"style":705},[806],{"type":413,"value":708},{"type":408,"tag":455,"props":808,"children":809},{"style":705},[810],{"type":413,"value":811}," -",{"type":408,"tag":455,"props":813,"children":815},{"style":814},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[816],{"type":413,"value":817},"1",{"type":408,"tag":455,"props":819,"children":820},{"style":786},[821],{"type":413,"value":789},{"type":408,"tag":455,"props":823,"children":825},{"class":457,"line":824},10,[826,830,835,839,843,847,852],{"type":408,"tag":455,"props":827,"children":828},{"style":693},[829],{"type":413,"value":757},{"type":408,"tag":455,"props":831,"children":832},{"style":760},[833],{"type":413,"value":834}," r",{"type":408,"tag":455,"props":836,"children":837},{"style":705},[838],{"type":413,"value":708},{"type":408,"tag":455,"props":840,"children":841},{"style":760},[842],{"type":413,"value":763},{"type":408,"tag":455,"props":844,"children":845},{"style":705},[846],{"type":413,"value":811},{"type":408,"tag":455,"props":848,"children":849},{"style":814},[850],{"type":413,"value":851}," 1",{"type":408,"tag":455,"props":853,"children":854},{"style":786},[855],{"type":413,"value":789},{"type":408,"tag":455,"props":857,"children":859},{"class":457,"line":858},11,[860,866,870,875,880,884,889,893],{"type":408,"tag":455,"props":861,"children":863},{"style":862},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[864],{"type":413,"value":865},"  while",{"type":408,"tag":455,"props":867,"children":868},{"style":716},[869],{"type":413,"value":719},{"type":408,"tag":455,"props":871,"children":872},{"style":760},[873],{"type":413,"value":874},"l",{"type":408,"tag":455,"props":876,"children":877},{"style":705},[878],{"type":413,"value":879}," +",{"type":408,"tag":455,"props":881,"children":882},{"style":814},[883],{"type":413,"value":851},{"type":408,"tag":455,"props":885,"children":886},{"style":705},[887],{"type":413,"value":888}," \u003C",{"type":408,"tag":455,"props":890,"children":891},{"style":760},[892],{"type":413,"value":834},{"type":408,"tag":455,"props":894,"children":895},{"style":716},[896],{"type":413,"value":730},{"type":408,"tag":455,"props":898,"children":900},{"class":457,"line":899},12,[901,906,911,915,919,923,927,931,936,941,945],{"type":408,"tag":455,"props":902,"children":903},{"style":693},[904],{"type":413,"value":905},"    let",{"type":408,"tag":455,"props":907,"children":908},{"style":760},[909],{"type":413,"value":910}," mid",{"type":408,"tag":455,"props":912,"children":913},{"style":705},[914],{"type":413,"value":708},{"type":408,"tag":455,"props":916,"children":917},{"style":716},[918],{"type":413,"value":719},{"type":408,"tag":455,"props":920,"children":921},{"style":760},[922],{"type":413,"value":874},{"type":408,"tag":455,"props":924,"children":925},{"style":705},[926],{"type":413,"value":879},{"type":408,"tag":455,"props":928,"children":929},{"style":760},[930],{"type":413,"value":834},{"type":408,"tag":455,"props":932,"children":933},{"style":716},[934],{"type":413,"value":935},") ",{"type":408,"tag":455,"props":937,"children":938},{"style":705},[939],{"type":413,"value":940},">>",{"type":408,"tag":455,"props":942,"children":943},{"style":814},[944],{"type":413,"value":851},{"type":408,"tag":455,"props":946,"children":947},{"style":786},[948],{"type":413,"value":789},{"type":408,"tag":455,"props":950,"children":952},{"class":457,"line":951},13,[953,958,962,966,971,976,981,986,990,994,999,1003,1007],{"type":408,"tag":455,"props":954,"children":955},{"style":862},[956],{"type":413,"value":957},"    if",{"type":408,"tag":455,"props":959,"children":960},{"style":716},[961],{"type":413,"value":719},{"type":408,"tag":455,"props":963,"children":964},{"style":760},[965],{"type":413,"value":725},{"type":408,"tag":455,"props":967,"children":968},{"style":716},[969],{"type":413,"value":970},"[",{"type":408,"tag":455,"props":972,"children":973},{"style":760},[974],{"type":413,"value":975},"mid",{"type":408,"tag":455,"props":977,"children":978},{"style":716},[979],{"type":413,"value":980},"] ",{"type":408,"tag":455,"props":982,"children":983},{"style":705},[984],{"type":413,"value":985},"\u003C",{"type":408,"tag":455,"props":987,"children":988},{"style":760},[989],{"type":413,"value":772},{"type":408,"tag":455,"props":991,"children":992},{"style":716},[993],{"type":413,"value":970},{"type":408,"tag":455,"props":995,"children":996},{"style":760},[997],{"type":413,"value":998},"len",{"type":408,"tag":455,"props":1000,"children":1001},{"style":705},[1002],{"type":413,"value":811},{"type":408,"tag":455,"props":1004,"children":1005},{"style":814},[1006],{"type":413,"value":851},{"type":408,"tag":455,"props":1008,"children":1009},{"style":716},[1010],{"type":413,"value":1011},"]) {\n",{"type":408,"tag":455,"props":1013,"children":1015},{"class":457,"line":1014},14,[1016,1021,1025,1029,1034],{"type":408,"tag":455,"props":1017,"children":1018},{"style":760},[1019],{"type":413,"value":1020},"      r",{"type":408,"tag":455,"props":1022,"children":1023},{"style":705},[1024],{"type":413,"value":708},{"type":408,"tag":455,"props":1026,"children":1027},{"style":760},[1028],{"type":413,"value":910},{"type":408,"tag":455,"props":1030,"children":1031},{"style":786},[1032],{"type":413,"value":1033},";",{"type":408,"tag":455,"props":1035,"children":1036},{"style":631},[1037],{"type":413,"value":1038}," // 染蓝色\n",{"type":408,"tag":455,"props":1040,"children":1042},{"class":457,"line":1041},15,[1043,1048,1053],{"type":408,"tag":455,"props":1044,"children":1045},{"style":716},[1046],{"type":413,"value":1047},"    } ",{"type":408,"tag":455,"props":1049,"children":1050},{"style":862},[1051],{"type":413,"value":1052},"else",{"type":408,"tag":455,"props":1054,"children":1055},{"style":716},[1056],{"type":413,"value":1057}," {\n",{"type":408,"tag":455,"props":1059,"children":1061},{"class":457,"line":1060},16,[1062,1067,1071,1075,1079],{"type":408,"tag":455,"props":1063,"children":1064},{"style":760},[1065],{"type":413,"value":1066},"      l",{"type":408,"tag":455,"props":1068,"children":1069},{"style":705},[1070],{"type":413,"value":708},{"type":408,"tag":455,"props":1072,"children":1073},{"style":760},[1074],{"type":413,"value":910},{"type":408,"tag":455,"props":1076,"children":1077},{"style":786},[1078],{"type":413,"value":1033},{"type":408,"tag":455,"props":1080,"children":1081},{"style":631},[1082],{"type":413,"value":1083}," // 染红色\n",{"type":408,"tag":455,"props":1085,"children":1087},{"class":457,"line":1086},17,[1088],{"type":408,"tag":455,"props":1089,"children":1090},{"style":716},[1091],{"type":413,"value":1092},"    }\n",{"type":408,"tag":455,"props":1094,"children":1096},{"class":457,"line":1095},18,[1097],{"type":408,"tag":455,"props":1098,"children":1099},{"style":716},[1100],{"type":413,"value":1101},"  }\n",{"type":408,"tag":455,"props":1103,"children":1105},{"class":457,"line":1104},19,[1106,1111,1115,1119,1124,1129],{"type":408,"tag":455,"props":1107,"children":1108},{"style":862},[1109],{"type":413,"value":1110},"  return",{"type":408,"tag":455,"props":1112,"children":1113},{"style":760},[1114],{"type":413,"value":772},{"type":408,"tag":455,"props":1116,"children":1117},{"style":716},[1118],{"type":413,"value":970},{"type":408,"tag":455,"props":1120,"children":1121},{"style":760},[1122],{"type":413,"value":1123},"r",{"type":408,"tag":455,"props":1125,"children":1126},{"style":716},[1127],{"type":413,"value":1128},"]",{"type":408,"tag":455,"props":1130,"children":1131},{"style":786},[1132],{"type":413,"value":789},{"type":408,"tag":455,"props":1134,"children":1136},{"class":457,"line":1135},20,[1137,1142],{"type":408,"tag":455,"props":1138,"children":1139},{"style":716},[1140],{"type":413,"value":1141},"}",{"type":408,"tag":455,"props":1143,"children":1144},{"style":786},[1145],{"type":413,"value":789},{"type":408,"tag":1147,"props":1148,"children":1149},"style",{},[1150],{"type":413,"value":1151},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":401,"searchDepth":689,"depth":689,"links":1153},[1154,1155],{"id":591,"depth":467,"text":591},{"id":614,"depth":467,"text":614},"markdown","content:1.algorithm:3.leetcode:153.find-minimum-in-rotated-sorted-array.md","content","1.algorithm/3.leetcode/153.find-minimum-in-rotated-sorted-array.md","md",[1162,1164],{"_path":149,"title":148,"description":1163},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",{"_path":155,"title":154,"description":1165},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",1713153294180]