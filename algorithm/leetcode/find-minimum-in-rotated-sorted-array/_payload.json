[{"data":1,"prerenderedAt":1195},["Reactive",2],{"navigation":3,"/algorithm/leetcode/find-minimum-in-rotated-sorted-array":427,"/algorithm/leetcode/find-minimum-in-rotated-sorted-array-surround":1190},[4,237,265,406,413],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,399],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":382,"_path":383},"随机数","/frontend-code-assessment/scene/random-number",{"title":385,"_path":386},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":388,"_path":389},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":391,"_path":392},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":394,"_path":395},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":397,"_path":398},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":400,"_path":401,"children":402},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[403],{"title":404,"_path":405},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":407,"_path":408,"children":409},"项目","/pro",[410],{"title":411,"_path":412},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":414,"_path":415,"children":416},"后端语言","/backend-languages",[417],{"title":418,"_path":419,"children":420},"Python","/backend-languages/python",[421,424],{"title":422,"_path":423},"基础","/backend-languages/python/base",{"title":425,"_path":426},"函数","/backend-languages/python/function",{"_path":152,"_dir":428,"_draft":429,"_partial":429,"_locale":430,"title":151,"description":431,"url":432,"body":433,"_type":1185,"_id":1186,"_source":1187,"_file":1188,"_extension":1189},"leetcode",false,"","已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：","https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array",{"type":434,"children":435,"toc":1181},"root",[436,443,458,463,468,473,512,517,548,553,584,589,617,623,641,646,1175],{"type":437,"tag":438,"props":439,"children":440},"element","p",{},[441],{"type":442,"value":431},"text",{"type":437,"tag":444,"props":445,"children":446},"ul",{},[447,453],{"type":437,"tag":448,"props":449,"children":450},"li",{},[451],{"type":442,"value":452},"若旋转 4 次，则可以得到 [4,5,6,7,0,1,2]",{"type":437,"tag":448,"props":454,"children":455},{},[456],{"type":442,"value":457},"若旋转 7 次，则可以得到 [0,1,2,4,5,6,7]\n注意，数组 [a[0], a[1], a[2], ..., a[n-1]] 旋转一次 的结果为数组 [a[n-1], a[0], a[1], a[2], ..., a[n-2]] 。",{"type":437,"tag":438,"props":459,"children":460},{},[461],{"type":442,"value":462},"给你一个元素值 互不相同 的数组 nums ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 最小元素 。",{"type":437,"tag":438,"props":464,"children":465},{},[466],{"type":442,"value":467},"你必须设计一个时间复杂度为 O(log n) 的算法解决此问题。",{"type":437,"tag":438,"props":469,"children":470},{},[471],{"type":442,"value":472},"示例 1：",{"type":437,"tag":474,"props":475,"children":478},"pre",{"className":476,"code":477,"language":442,"meta":430,"style":430},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [3,4,5,1,2]\n输出：1\n解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",[479],{"type":437,"tag":480,"props":481,"children":482},"code",{"__ignoreMap":430},[483,494,503],{"type":437,"tag":484,"props":485,"children":488},"span",{"class":486,"line":487},"line",1,[489],{"type":437,"tag":484,"props":490,"children":491},{},[492],{"type":442,"value":493},"输入：nums = [3,4,5,1,2]\n",{"type":437,"tag":484,"props":495,"children":497},{"class":486,"line":496},2,[498],{"type":437,"tag":484,"props":499,"children":500},{},[501],{"type":442,"value":502},"输出：1\n",{"type":437,"tag":484,"props":504,"children":506},{"class":486,"line":505},3,[507],{"type":437,"tag":484,"props":508,"children":509},{},[510],{"type":442,"value":511},"解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",{"type":437,"tag":438,"props":513,"children":514},{},[515],{"type":442,"value":516},"示例 2：",{"type":437,"tag":474,"props":518,"children":520},{"className":476,"code":519,"language":442,"meta":430,"style":430},"输入：nums = [4,5,6,7,0,1,2]\n输出：0\n解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",[521],{"type":437,"tag":480,"props":522,"children":523},{"__ignoreMap":430},[524,532,540],{"type":437,"tag":484,"props":525,"children":526},{"class":486,"line":487},[527],{"type":437,"tag":484,"props":528,"children":529},{},[530],{"type":442,"value":531},"输入：nums = [4,5,6,7,0,1,2]\n",{"type":437,"tag":484,"props":533,"children":534},{"class":486,"line":496},[535],{"type":437,"tag":484,"props":536,"children":537},{},[538],{"type":442,"value":539},"输出：0\n",{"type":437,"tag":484,"props":541,"children":542},{"class":486,"line":505},[543],{"type":437,"tag":484,"props":544,"children":545},{},[546],{"type":442,"value":547},"解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",{"type":437,"tag":438,"props":549,"children":550},{},[551],{"type":442,"value":552},"示例 3：",{"type":437,"tag":474,"props":554,"children":556},{"className":476,"code":555,"language":442,"meta":430,"style":430},"输入：nums = [11,13,15,17]\n输出：11\n解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",[557],{"type":437,"tag":480,"props":558,"children":559},{"__ignoreMap":430},[560,568,576],{"type":437,"tag":484,"props":561,"children":562},{"class":486,"line":487},[563],{"type":437,"tag":484,"props":564,"children":565},{},[566],{"type":442,"value":567},"输入：nums = [11,13,15,17]\n",{"type":437,"tag":484,"props":569,"children":570},{"class":486,"line":496},[571],{"type":437,"tag":484,"props":572,"children":573},{},[574],{"type":442,"value":575},"输出：11\n",{"type":437,"tag":484,"props":577,"children":578},{"class":486,"line":505},[579],{"type":437,"tag":484,"props":580,"children":581},{},[582],{"type":442,"value":583},"解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",{"type":437,"tag":438,"props":585,"children":586},{},[587],{"type":442,"value":588},"提示：",{"type":437,"tag":444,"props":590,"children":591},{},[592,597,602,607,612],{"type":437,"tag":448,"props":593,"children":594},{},[595],{"type":442,"value":596},"n == nums.length",{"type":437,"tag":448,"props":598,"children":599},{},[600],{"type":442,"value":601},"1 \u003C= n \u003C= 5000",{"type":437,"tag":448,"props":603,"children":604},{},[605],{"type":442,"value":606},"-5000 \u003C= nums[i] \u003C= 5000",{"type":437,"tag":448,"props":608,"children":609},{},[610],{"type":442,"value":611},"nums 中的所有整数 互不相同",{"type":437,"tag":448,"props":613,"children":614},{},[615],{"type":442,"value":616},"nums 原来是一个升序排序的数组，并进行了 1 至 n 次旋转",{"type":437,"tag":618,"props":619,"children":621},"h2",{"id":620},"解题思路",[622],{"type":442,"value":620},{"type":437,"tag":444,"props":624,"children":625},{},[626,631,636],{"type":437,"tag":448,"props":627,"children":628},{},[629],{"type":442,"value":630},"经过分析，红色即最小值左侧，蓝色即最小值及其右侧",{"type":437,"tag":448,"props":632,"children":633},{},[634],{"type":442,"value":635},"n - 1 一定是蓝色",{"type":437,"tag":448,"props":637,"children":638},{},[639],{"type":442,"value":640},"总结：小于最后一个数，就是蓝色，否则就是红色",{"type":437,"tag":618,"props":642,"children":644},{"id":643},"实现",[645],{"type":442,"value":643},{"type":437,"tag":474,"props":647,"children":651},{"className":648,"code":649,"language":650,"meta":430,"style":430},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMin = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let len = nums.length;\n  let l = -1;\n  let r = len - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] \u003C nums[len - 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return nums[r];\n};\n","js",[652],{"type":437,"tag":480,"props":653,"children":654},{"__ignoreMap":430},[655,664,690,707,716,760,769,778,819,851,885,926,978,1041,1068,1087,1113,1122,1131,1162],{"type":437,"tag":484,"props":656,"children":657},{"class":486,"line":487},[658],{"type":437,"tag":484,"props":659,"children":661},{"style":660},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[662],{"type":442,"value":663},"/**\n",{"type":437,"tag":484,"props":665,"children":666},{"class":486,"line":496},[667,672,678,684],{"type":437,"tag":484,"props":668,"children":669},{"style":660},[670],{"type":442,"value":671}," * ",{"type":437,"tag":484,"props":673,"children":675},{"style":674},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[676],{"type":442,"value":677},"@param",{"type":437,"tag":484,"props":679,"children":681},{"style":680},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[682],{"type":442,"value":683}," {number[]}",{"type":437,"tag":484,"props":685,"children":687},{"style":686},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[688],{"type":442,"value":689}," nums\n",{"type":437,"tag":484,"props":691,"children":692},{"class":486,"line":505},[693,697,702],{"type":437,"tag":484,"props":694,"children":695},{"style":660},[696],{"type":442,"value":671},{"type":437,"tag":484,"props":698,"children":699},{"style":674},[700],{"type":442,"value":701},"@return",{"type":437,"tag":484,"props":703,"children":704},{"style":680},[705],{"type":442,"value":706}," {number}\n",{"type":437,"tag":484,"props":708,"children":710},{"class":486,"line":709},4,[711],{"type":437,"tag":484,"props":712,"children":713},{"style":660},[714],{"type":442,"value":715}," */\n",{"type":437,"tag":484,"props":717,"children":719},{"class":486,"line":718},5,[720,726,732,738,743,749,755],{"type":437,"tag":484,"props":721,"children":723},{"style":722},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[724],{"type":442,"value":725},"var",{"type":437,"tag":484,"props":727,"children":729},{"style":728},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[730],{"type":442,"value":731}," findMin",{"type":437,"tag":484,"props":733,"children":735},{"style":734},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[736],{"type":442,"value":737}," =",{"type":437,"tag":484,"props":739,"children":740},{"style":722},[741],{"type":442,"value":742}," function",{"type":437,"tag":484,"props":744,"children":746},{"style":745},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[747],{"type":442,"value":748}," (",{"type":437,"tag":484,"props":750,"children":752},{"style":751},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[753],{"type":442,"value":754},"nums",{"type":437,"tag":484,"props":756,"children":757},{"style":745},[758],{"type":442,"value":759},") {\n",{"type":437,"tag":484,"props":761,"children":763},{"class":486,"line":762},6,[764],{"type":437,"tag":484,"props":765,"children":766},{"style":660},[767],{"type":442,"value":768},"  // [0, n - 2]\n",{"type":437,"tag":484,"props":770,"children":772},{"class":486,"line":771},7,[773],{"type":437,"tag":484,"props":774,"children":775},{"style":660},[776],{"type":442,"value":777},"  // (-1, n - 1) 开区间写法\n",{"type":437,"tag":484,"props":779,"children":781},{"class":486,"line":780},8,[782,787,793,797,802,808,813],{"type":437,"tag":484,"props":783,"children":784},{"style":722},[785],{"type":442,"value":786},"  let",{"type":437,"tag":484,"props":788,"children":790},{"style":789},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[791],{"type":442,"value":792}," len",{"type":437,"tag":484,"props":794,"children":795},{"style":734},[796],{"type":442,"value":737},{"type":437,"tag":484,"props":798,"children":799},{"style":789},[800],{"type":442,"value":801}," nums",{"type":437,"tag":484,"props":803,"children":805},{"style":804},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[806],{"type":442,"value":807},".",{"type":437,"tag":484,"props":809,"children":810},{"style":745},[811],{"type":442,"value":812},"length",{"type":437,"tag":484,"props":814,"children":816},{"style":815},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[817],{"type":442,"value":818},";\n",{"type":437,"tag":484,"props":820,"children":822},{"class":486,"line":821},9,[823,827,832,836,841,847],{"type":437,"tag":484,"props":824,"children":825},{"style":722},[826],{"type":442,"value":786},{"type":437,"tag":484,"props":828,"children":829},{"style":789},[830],{"type":442,"value":831}," l",{"type":437,"tag":484,"props":833,"children":834},{"style":734},[835],{"type":442,"value":737},{"type":437,"tag":484,"props":837,"children":838},{"style":734},[839],{"type":442,"value":840}," -",{"type":437,"tag":484,"props":842,"children":844},{"style":843},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[845],{"type":442,"value":846},"1",{"type":437,"tag":484,"props":848,"children":849},{"style":815},[850],{"type":442,"value":818},{"type":437,"tag":484,"props":852,"children":854},{"class":486,"line":853},10,[855,859,864,868,872,876,881],{"type":437,"tag":484,"props":856,"children":857},{"style":722},[858],{"type":442,"value":786},{"type":437,"tag":484,"props":860,"children":861},{"style":789},[862],{"type":442,"value":863}," r",{"type":437,"tag":484,"props":865,"children":866},{"style":734},[867],{"type":442,"value":737},{"type":437,"tag":484,"props":869,"children":870},{"style":789},[871],{"type":442,"value":792},{"type":437,"tag":484,"props":873,"children":874},{"style":734},[875],{"type":442,"value":840},{"type":437,"tag":484,"props":877,"children":878},{"style":843},[879],{"type":442,"value":880}," 1",{"type":437,"tag":484,"props":882,"children":883},{"style":815},[884],{"type":442,"value":818},{"type":437,"tag":484,"props":886,"children":888},{"class":486,"line":887},11,[889,895,899,904,909,913,918,922],{"type":437,"tag":484,"props":890,"children":892},{"style":891},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[893],{"type":442,"value":894},"  while",{"type":437,"tag":484,"props":896,"children":897},{"style":745},[898],{"type":442,"value":748},{"type":437,"tag":484,"props":900,"children":901},{"style":789},[902],{"type":442,"value":903},"l",{"type":437,"tag":484,"props":905,"children":906},{"style":734},[907],{"type":442,"value":908}," +",{"type":437,"tag":484,"props":910,"children":911},{"style":843},[912],{"type":442,"value":880},{"type":437,"tag":484,"props":914,"children":915},{"style":734},[916],{"type":442,"value":917}," \u003C",{"type":437,"tag":484,"props":919,"children":920},{"style":789},[921],{"type":442,"value":863},{"type":437,"tag":484,"props":923,"children":924},{"style":745},[925],{"type":442,"value":759},{"type":437,"tag":484,"props":927,"children":929},{"class":486,"line":928},12,[930,935,940,944,948,952,956,960,965,970,974],{"type":437,"tag":484,"props":931,"children":932},{"style":722},[933],{"type":442,"value":934},"    let",{"type":437,"tag":484,"props":936,"children":937},{"style":789},[938],{"type":442,"value":939}," mid",{"type":437,"tag":484,"props":941,"children":942},{"style":734},[943],{"type":442,"value":737},{"type":437,"tag":484,"props":945,"children":946},{"style":745},[947],{"type":442,"value":748},{"type":437,"tag":484,"props":949,"children":950},{"style":789},[951],{"type":442,"value":903},{"type":437,"tag":484,"props":953,"children":954},{"style":734},[955],{"type":442,"value":908},{"type":437,"tag":484,"props":957,"children":958},{"style":789},[959],{"type":442,"value":863},{"type":437,"tag":484,"props":961,"children":962},{"style":745},[963],{"type":442,"value":964},") ",{"type":437,"tag":484,"props":966,"children":967},{"style":734},[968],{"type":442,"value":969},">>",{"type":437,"tag":484,"props":971,"children":972},{"style":843},[973],{"type":442,"value":880},{"type":437,"tag":484,"props":975,"children":976},{"style":815},[977],{"type":442,"value":818},{"type":437,"tag":484,"props":979,"children":981},{"class":486,"line":980},13,[982,987,991,995,1000,1005,1010,1015,1019,1023,1028,1032,1036],{"type":437,"tag":484,"props":983,"children":984},{"style":891},[985],{"type":442,"value":986},"    if",{"type":437,"tag":484,"props":988,"children":989},{"style":745},[990],{"type":442,"value":748},{"type":437,"tag":484,"props":992,"children":993},{"style":789},[994],{"type":442,"value":754},{"type":437,"tag":484,"props":996,"children":997},{"style":745},[998],{"type":442,"value":999},"[",{"type":437,"tag":484,"props":1001,"children":1002},{"style":789},[1003],{"type":442,"value":1004},"mid",{"type":437,"tag":484,"props":1006,"children":1007},{"style":745},[1008],{"type":442,"value":1009},"] ",{"type":437,"tag":484,"props":1011,"children":1012},{"style":734},[1013],{"type":442,"value":1014},"\u003C",{"type":437,"tag":484,"props":1016,"children":1017},{"style":789},[1018],{"type":442,"value":801},{"type":437,"tag":484,"props":1020,"children":1021},{"style":745},[1022],{"type":442,"value":999},{"type":437,"tag":484,"props":1024,"children":1025},{"style":789},[1026],{"type":442,"value":1027},"len",{"type":437,"tag":484,"props":1029,"children":1030},{"style":734},[1031],{"type":442,"value":840},{"type":437,"tag":484,"props":1033,"children":1034},{"style":843},[1035],{"type":442,"value":880},{"type":437,"tag":484,"props":1037,"children":1038},{"style":745},[1039],{"type":442,"value":1040},"]) {\n",{"type":437,"tag":484,"props":1042,"children":1044},{"class":486,"line":1043},14,[1045,1050,1054,1058,1063],{"type":437,"tag":484,"props":1046,"children":1047},{"style":789},[1048],{"type":442,"value":1049},"      r",{"type":437,"tag":484,"props":1051,"children":1052},{"style":734},[1053],{"type":442,"value":737},{"type":437,"tag":484,"props":1055,"children":1056},{"style":789},[1057],{"type":442,"value":939},{"type":437,"tag":484,"props":1059,"children":1060},{"style":815},[1061],{"type":442,"value":1062},";",{"type":437,"tag":484,"props":1064,"children":1065},{"style":660},[1066],{"type":442,"value":1067}," // 染蓝色\n",{"type":437,"tag":484,"props":1069,"children":1071},{"class":486,"line":1070},15,[1072,1077,1082],{"type":437,"tag":484,"props":1073,"children":1074},{"style":745},[1075],{"type":442,"value":1076},"    } ",{"type":437,"tag":484,"props":1078,"children":1079},{"style":891},[1080],{"type":442,"value":1081},"else",{"type":437,"tag":484,"props":1083,"children":1084},{"style":745},[1085],{"type":442,"value":1086}," {\n",{"type":437,"tag":484,"props":1088,"children":1090},{"class":486,"line":1089},16,[1091,1096,1100,1104,1108],{"type":437,"tag":484,"props":1092,"children":1093},{"style":789},[1094],{"type":442,"value":1095},"      l",{"type":437,"tag":484,"props":1097,"children":1098},{"style":734},[1099],{"type":442,"value":737},{"type":437,"tag":484,"props":1101,"children":1102},{"style":789},[1103],{"type":442,"value":939},{"type":437,"tag":484,"props":1105,"children":1106},{"style":815},[1107],{"type":442,"value":1062},{"type":437,"tag":484,"props":1109,"children":1110},{"style":660},[1111],{"type":442,"value":1112}," // 染红色\n",{"type":437,"tag":484,"props":1114,"children":1116},{"class":486,"line":1115},17,[1117],{"type":437,"tag":484,"props":1118,"children":1119},{"style":745},[1120],{"type":442,"value":1121},"    }\n",{"type":437,"tag":484,"props":1123,"children":1125},{"class":486,"line":1124},18,[1126],{"type":437,"tag":484,"props":1127,"children":1128},{"style":745},[1129],{"type":442,"value":1130},"  }\n",{"type":437,"tag":484,"props":1132,"children":1134},{"class":486,"line":1133},19,[1135,1140,1144,1148,1153,1158],{"type":437,"tag":484,"props":1136,"children":1137},{"style":891},[1138],{"type":442,"value":1139},"  return",{"type":437,"tag":484,"props":1141,"children":1142},{"style":789},[1143],{"type":442,"value":801},{"type":437,"tag":484,"props":1145,"children":1146},{"style":745},[1147],{"type":442,"value":999},{"type":437,"tag":484,"props":1149,"children":1150},{"style":789},[1151],{"type":442,"value":1152},"r",{"type":437,"tag":484,"props":1154,"children":1155},{"style":745},[1156],{"type":442,"value":1157},"]",{"type":437,"tag":484,"props":1159,"children":1160},{"style":815},[1161],{"type":442,"value":818},{"type":437,"tag":484,"props":1163,"children":1165},{"class":486,"line":1164},20,[1166,1171],{"type":437,"tag":484,"props":1167,"children":1168},{"style":745},[1169],{"type":442,"value":1170},"}",{"type":437,"tag":484,"props":1172,"children":1173},{"style":815},[1174],{"type":442,"value":818},{"type":437,"tag":1176,"props":1177,"children":1178},"style",{},[1179],{"type":442,"value":1180},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":430,"searchDepth":718,"depth":718,"links":1182},[1183,1184],{"id":620,"depth":496,"text":620},{"id":643,"depth":496,"text":643},"markdown","content:1.algorithm:3.leetcode:153.find-minimum-in-rotated-sorted-array.md","content","1.algorithm/3.leetcode/153.find-minimum-in-rotated-sorted-array.md","md",[1191,1193],{"_path":149,"title":148,"description":1192},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",{"_path":155,"title":154,"description":1194},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",1713426450606]