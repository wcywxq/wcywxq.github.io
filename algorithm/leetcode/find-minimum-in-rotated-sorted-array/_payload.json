[{"data":1,"prerenderedAt":1198},["Reactive",2],{"navigation":3,"/algorithm/leetcode/find-minimum-in-rotated-sorted-array":430,"/algorithm/leetcode/find-minimum-in-rotated-sorted-array-surround":1193},[4,237,265,409,416],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,402],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396,399],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":379,"_path":380},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":382,"_path":383},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":385,"_path":386},"随机数","/frontend-code-assessment/scene/random-number",{"title":388,"_path":389},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":391,"_path":392},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":394,"_path":395},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":397,"_path":398},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":400,"_path":401},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":403,"_path":404,"children":405},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[406],{"title":407,"_path":408},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":410,"_path":411,"children":412},"项目","/pro",[413],{"title":414,"_path":415},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":417,"_path":418,"children":419},"后端语言","/backend-languages",[420],{"title":421,"_path":422,"children":423},"Python","/backend-languages/python",[424,427],{"title":425,"_path":426},"基础","/backend-languages/python/base",{"title":428,"_path":429},"函数","/backend-languages/python/function",{"_path":152,"_dir":431,"_draft":432,"_partial":432,"_locale":433,"title":151,"description":434,"url":435,"body":436,"_type":1188,"_id":1189,"_source":1190,"_file":1191,"_extension":1192},"leetcode",false,"","已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：","https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array",{"type":437,"children":438,"toc":1184},"root",[439,446,461,466,471,476,515,520,551,556,587,592,620,626,644,649,1178],{"type":440,"tag":441,"props":442,"children":443},"element","p",{},[444],{"type":445,"value":434},"text",{"type":440,"tag":447,"props":448,"children":449},"ul",{},[450,456],{"type":440,"tag":451,"props":452,"children":453},"li",{},[454],{"type":445,"value":455},"若旋转 4 次，则可以得到 [4,5,6,7,0,1,2]",{"type":440,"tag":451,"props":457,"children":458},{},[459],{"type":445,"value":460},"若旋转 7 次，则可以得到 [0,1,2,4,5,6,7]\n注意，数组 [a[0], a[1], a[2], ..., a[n-1]] 旋转一次 的结果为数组 [a[n-1], a[0], a[1], a[2], ..., a[n-2]] 。",{"type":440,"tag":441,"props":462,"children":463},{},[464],{"type":445,"value":465},"给你一个元素值 互不相同 的数组 nums ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 最小元素 。",{"type":440,"tag":441,"props":467,"children":468},{},[469],{"type":445,"value":470},"你必须设计一个时间复杂度为 O(log n) 的算法解决此问题。",{"type":440,"tag":441,"props":472,"children":473},{},[474],{"type":445,"value":475},"示例 1：",{"type":440,"tag":477,"props":478,"children":481},"pre",{"className":479,"code":480,"language":445,"meta":433,"style":433},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [3,4,5,1,2]\n输出：1\n解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",[482],{"type":440,"tag":483,"props":484,"children":485},"code",{"__ignoreMap":433},[486,497,506],{"type":440,"tag":487,"props":488,"children":491},"span",{"class":489,"line":490},"line",1,[492],{"type":440,"tag":487,"props":493,"children":494},{},[495],{"type":445,"value":496},"输入：nums = [3,4,5,1,2]\n",{"type":440,"tag":487,"props":498,"children":500},{"class":489,"line":499},2,[501],{"type":440,"tag":487,"props":502,"children":503},{},[504],{"type":445,"value":505},"输出：1\n",{"type":440,"tag":487,"props":507,"children":509},{"class":489,"line":508},3,[510],{"type":440,"tag":487,"props":511,"children":512},{},[513],{"type":445,"value":514},"解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",{"type":440,"tag":441,"props":516,"children":517},{},[518],{"type":445,"value":519},"示例 2：",{"type":440,"tag":477,"props":521,"children":523},{"className":479,"code":522,"language":445,"meta":433,"style":433},"输入：nums = [4,5,6,7,0,1,2]\n输出：0\n解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",[524],{"type":440,"tag":483,"props":525,"children":526},{"__ignoreMap":433},[527,535,543],{"type":440,"tag":487,"props":528,"children":529},{"class":489,"line":490},[530],{"type":440,"tag":487,"props":531,"children":532},{},[533],{"type":445,"value":534},"输入：nums = [4,5,6,7,0,1,2]\n",{"type":440,"tag":487,"props":536,"children":537},{"class":489,"line":499},[538],{"type":440,"tag":487,"props":539,"children":540},{},[541],{"type":445,"value":542},"输出：0\n",{"type":440,"tag":487,"props":544,"children":545},{"class":489,"line":508},[546],{"type":440,"tag":487,"props":547,"children":548},{},[549],{"type":445,"value":550},"解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",{"type":440,"tag":441,"props":552,"children":553},{},[554],{"type":445,"value":555},"示例 3：",{"type":440,"tag":477,"props":557,"children":559},{"className":479,"code":558,"language":445,"meta":433,"style":433},"输入：nums = [11,13,15,17]\n输出：11\n解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",[560],{"type":440,"tag":483,"props":561,"children":562},{"__ignoreMap":433},[563,571,579],{"type":440,"tag":487,"props":564,"children":565},{"class":489,"line":490},[566],{"type":440,"tag":487,"props":567,"children":568},{},[569],{"type":445,"value":570},"输入：nums = [11,13,15,17]\n",{"type":440,"tag":487,"props":572,"children":573},{"class":489,"line":499},[574],{"type":440,"tag":487,"props":575,"children":576},{},[577],{"type":445,"value":578},"输出：11\n",{"type":440,"tag":487,"props":580,"children":581},{"class":489,"line":508},[582],{"type":440,"tag":487,"props":583,"children":584},{},[585],{"type":445,"value":586},"解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",{"type":440,"tag":441,"props":588,"children":589},{},[590],{"type":445,"value":591},"提示：",{"type":440,"tag":447,"props":593,"children":594},{},[595,600,605,610,615],{"type":440,"tag":451,"props":596,"children":597},{},[598],{"type":445,"value":599},"n == nums.length",{"type":440,"tag":451,"props":601,"children":602},{},[603],{"type":445,"value":604},"1 \u003C= n \u003C= 5000",{"type":440,"tag":451,"props":606,"children":607},{},[608],{"type":445,"value":609},"-5000 \u003C= nums[i] \u003C= 5000",{"type":440,"tag":451,"props":611,"children":612},{},[613],{"type":445,"value":614},"nums 中的所有整数 互不相同",{"type":440,"tag":451,"props":616,"children":617},{},[618],{"type":445,"value":619},"nums 原来是一个升序排序的数组，并进行了 1 至 n 次旋转",{"type":440,"tag":621,"props":622,"children":624},"h2",{"id":623},"解题思路",[625],{"type":445,"value":623},{"type":440,"tag":447,"props":627,"children":628},{},[629,634,639],{"type":440,"tag":451,"props":630,"children":631},{},[632],{"type":445,"value":633},"经过分析，红色即最小值左侧，蓝色即最小值及其右侧",{"type":440,"tag":451,"props":635,"children":636},{},[637],{"type":445,"value":638},"n - 1 一定是蓝色",{"type":440,"tag":451,"props":640,"children":641},{},[642],{"type":445,"value":643},"总结：小于最后一个数，就是蓝色，否则就是红色",{"type":440,"tag":621,"props":645,"children":647},{"id":646},"实现",[648],{"type":445,"value":646},{"type":440,"tag":477,"props":650,"children":654},{"className":651,"code":652,"language":653,"meta":433,"style":433},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMin = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let len = nums.length;\n  let l = -1;\n  let r = len - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] \u003C nums[len - 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return nums[r];\n};\n","js",[655],{"type":440,"tag":483,"props":656,"children":657},{"__ignoreMap":433},[658,667,693,710,719,763,772,781,822,854,888,929,981,1044,1071,1090,1116,1125,1134,1165],{"type":440,"tag":487,"props":659,"children":660},{"class":489,"line":490},[661],{"type":440,"tag":487,"props":662,"children":664},{"style":663},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[665],{"type":445,"value":666},"/**\n",{"type":440,"tag":487,"props":668,"children":669},{"class":489,"line":499},[670,675,681,687],{"type":440,"tag":487,"props":671,"children":672},{"style":663},[673],{"type":445,"value":674}," * ",{"type":440,"tag":487,"props":676,"children":678},{"style":677},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[679],{"type":445,"value":680},"@param",{"type":440,"tag":487,"props":682,"children":684},{"style":683},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[685],{"type":445,"value":686}," {number[]}",{"type":440,"tag":487,"props":688,"children":690},{"style":689},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[691],{"type":445,"value":692}," nums\n",{"type":440,"tag":487,"props":694,"children":695},{"class":489,"line":508},[696,700,705],{"type":440,"tag":487,"props":697,"children":698},{"style":663},[699],{"type":445,"value":674},{"type":440,"tag":487,"props":701,"children":702},{"style":677},[703],{"type":445,"value":704},"@return",{"type":440,"tag":487,"props":706,"children":707},{"style":683},[708],{"type":445,"value":709}," {number}\n",{"type":440,"tag":487,"props":711,"children":713},{"class":489,"line":712},4,[714],{"type":440,"tag":487,"props":715,"children":716},{"style":663},[717],{"type":445,"value":718}," */\n",{"type":440,"tag":487,"props":720,"children":722},{"class":489,"line":721},5,[723,729,735,741,746,752,758],{"type":440,"tag":487,"props":724,"children":726},{"style":725},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[727],{"type":445,"value":728},"var",{"type":440,"tag":487,"props":730,"children":732},{"style":731},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[733],{"type":445,"value":734}," findMin",{"type":440,"tag":487,"props":736,"children":738},{"style":737},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[739],{"type":445,"value":740}," =",{"type":440,"tag":487,"props":742,"children":743},{"style":725},[744],{"type":445,"value":745}," function",{"type":440,"tag":487,"props":747,"children":749},{"style":748},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[750],{"type":445,"value":751}," (",{"type":440,"tag":487,"props":753,"children":755},{"style":754},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[756],{"type":445,"value":757},"nums",{"type":440,"tag":487,"props":759,"children":760},{"style":748},[761],{"type":445,"value":762},") {\n",{"type":440,"tag":487,"props":764,"children":766},{"class":489,"line":765},6,[767],{"type":440,"tag":487,"props":768,"children":769},{"style":663},[770],{"type":445,"value":771},"  // [0, n - 2]\n",{"type":440,"tag":487,"props":773,"children":775},{"class":489,"line":774},7,[776],{"type":440,"tag":487,"props":777,"children":778},{"style":663},[779],{"type":445,"value":780},"  // (-1, n - 1) 开区间写法\n",{"type":440,"tag":487,"props":782,"children":784},{"class":489,"line":783},8,[785,790,796,800,805,811,816],{"type":440,"tag":487,"props":786,"children":787},{"style":725},[788],{"type":445,"value":789},"  let",{"type":440,"tag":487,"props":791,"children":793},{"style":792},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[794],{"type":445,"value":795}," len",{"type":440,"tag":487,"props":797,"children":798},{"style":737},[799],{"type":445,"value":740},{"type":440,"tag":487,"props":801,"children":802},{"style":792},[803],{"type":445,"value":804}," nums",{"type":440,"tag":487,"props":806,"children":808},{"style":807},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[809],{"type":445,"value":810},".",{"type":440,"tag":487,"props":812,"children":813},{"style":748},[814],{"type":445,"value":815},"length",{"type":440,"tag":487,"props":817,"children":819},{"style":818},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[820],{"type":445,"value":821},";\n",{"type":440,"tag":487,"props":823,"children":825},{"class":489,"line":824},9,[826,830,835,839,844,850],{"type":440,"tag":487,"props":827,"children":828},{"style":725},[829],{"type":445,"value":789},{"type":440,"tag":487,"props":831,"children":832},{"style":792},[833],{"type":445,"value":834}," l",{"type":440,"tag":487,"props":836,"children":837},{"style":737},[838],{"type":445,"value":740},{"type":440,"tag":487,"props":840,"children":841},{"style":737},[842],{"type":445,"value":843}," -",{"type":440,"tag":487,"props":845,"children":847},{"style":846},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[848],{"type":445,"value":849},"1",{"type":440,"tag":487,"props":851,"children":852},{"style":818},[853],{"type":445,"value":821},{"type":440,"tag":487,"props":855,"children":857},{"class":489,"line":856},10,[858,862,867,871,875,879,884],{"type":440,"tag":487,"props":859,"children":860},{"style":725},[861],{"type":445,"value":789},{"type":440,"tag":487,"props":863,"children":864},{"style":792},[865],{"type":445,"value":866}," r",{"type":440,"tag":487,"props":868,"children":869},{"style":737},[870],{"type":445,"value":740},{"type":440,"tag":487,"props":872,"children":873},{"style":792},[874],{"type":445,"value":795},{"type":440,"tag":487,"props":876,"children":877},{"style":737},[878],{"type":445,"value":843},{"type":440,"tag":487,"props":880,"children":881},{"style":846},[882],{"type":445,"value":883}," 1",{"type":440,"tag":487,"props":885,"children":886},{"style":818},[887],{"type":445,"value":821},{"type":440,"tag":487,"props":889,"children":891},{"class":489,"line":890},11,[892,898,902,907,912,916,921,925],{"type":440,"tag":487,"props":893,"children":895},{"style":894},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[896],{"type":445,"value":897},"  while",{"type":440,"tag":487,"props":899,"children":900},{"style":748},[901],{"type":445,"value":751},{"type":440,"tag":487,"props":903,"children":904},{"style":792},[905],{"type":445,"value":906},"l",{"type":440,"tag":487,"props":908,"children":909},{"style":737},[910],{"type":445,"value":911}," +",{"type":440,"tag":487,"props":913,"children":914},{"style":846},[915],{"type":445,"value":883},{"type":440,"tag":487,"props":917,"children":918},{"style":737},[919],{"type":445,"value":920}," \u003C",{"type":440,"tag":487,"props":922,"children":923},{"style":792},[924],{"type":445,"value":866},{"type":440,"tag":487,"props":926,"children":927},{"style":748},[928],{"type":445,"value":762},{"type":440,"tag":487,"props":930,"children":932},{"class":489,"line":931},12,[933,938,943,947,951,955,959,963,968,973,977],{"type":440,"tag":487,"props":934,"children":935},{"style":725},[936],{"type":445,"value":937},"    let",{"type":440,"tag":487,"props":939,"children":940},{"style":792},[941],{"type":445,"value":942}," mid",{"type":440,"tag":487,"props":944,"children":945},{"style":737},[946],{"type":445,"value":740},{"type":440,"tag":487,"props":948,"children":949},{"style":748},[950],{"type":445,"value":751},{"type":440,"tag":487,"props":952,"children":953},{"style":792},[954],{"type":445,"value":906},{"type":440,"tag":487,"props":956,"children":957},{"style":737},[958],{"type":445,"value":911},{"type":440,"tag":487,"props":960,"children":961},{"style":792},[962],{"type":445,"value":866},{"type":440,"tag":487,"props":964,"children":965},{"style":748},[966],{"type":445,"value":967},") ",{"type":440,"tag":487,"props":969,"children":970},{"style":737},[971],{"type":445,"value":972},">>",{"type":440,"tag":487,"props":974,"children":975},{"style":846},[976],{"type":445,"value":883},{"type":440,"tag":487,"props":978,"children":979},{"style":818},[980],{"type":445,"value":821},{"type":440,"tag":487,"props":982,"children":984},{"class":489,"line":983},13,[985,990,994,998,1003,1008,1013,1018,1022,1026,1031,1035,1039],{"type":440,"tag":487,"props":986,"children":987},{"style":894},[988],{"type":445,"value":989},"    if",{"type":440,"tag":487,"props":991,"children":992},{"style":748},[993],{"type":445,"value":751},{"type":440,"tag":487,"props":995,"children":996},{"style":792},[997],{"type":445,"value":757},{"type":440,"tag":487,"props":999,"children":1000},{"style":748},[1001],{"type":445,"value":1002},"[",{"type":440,"tag":487,"props":1004,"children":1005},{"style":792},[1006],{"type":445,"value":1007},"mid",{"type":440,"tag":487,"props":1009,"children":1010},{"style":748},[1011],{"type":445,"value":1012},"] ",{"type":440,"tag":487,"props":1014,"children":1015},{"style":737},[1016],{"type":445,"value":1017},"\u003C",{"type":440,"tag":487,"props":1019,"children":1020},{"style":792},[1021],{"type":445,"value":804},{"type":440,"tag":487,"props":1023,"children":1024},{"style":748},[1025],{"type":445,"value":1002},{"type":440,"tag":487,"props":1027,"children":1028},{"style":792},[1029],{"type":445,"value":1030},"len",{"type":440,"tag":487,"props":1032,"children":1033},{"style":737},[1034],{"type":445,"value":843},{"type":440,"tag":487,"props":1036,"children":1037},{"style":846},[1038],{"type":445,"value":883},{"type":440,"tag":487,"props":1040,"children":1041},{"style":748},[1042],{"type":445,"value":1043},"]) {\n",{"type":440,"tag":487,"props":1045,"children":1047},{"class":489,"line":1046},14,[1048,1053,1057,1061,1066],{"type":440,"tag":487,"props":1049,"children":1050},{"style":792},[1051],{"type":445,"value":1052},"      r",{"type":440,"tag":487,"props":1054,"children":1055},{"style":737},[1056],{"type":445,"value":740},{"type":440,"tag":487,"props":1058,"children":1059},{"style":792},[1060],{"type":445,"value":942},{"type":440,"tag":487,"props":1062,"children":1063},{"style":818},[1064],{"type":445,"value":1065},";",{"type":440,"tag":487,"props":1067,"children":1068},{"style":663},[1069],{"type":445,"value":1070}," // 染蓝色\n",{"type":440,"tag":487,"props":1072,"children":1074},{"class":489,"line":1073},15,[1075,1080,1085],{"type":440,"tag":487,"props":1076,"children":1077},{"style":748},[1078],{"type":445,"value":1079},"    } ",{"type":440,"tag":487,"props":1081,"children":1082},{"style":894},[1083],{"type":445,"value":1084},"else",{"type":440,"tag":487,"props":1086,"children":1087},{"style":748},[1088],{"type":445,"value":1089}," {\n",{"type":440,"tag":487,"props":1091,"children":1093},{"class":489,"line":1092},16,[1094,1099,1103,1107,1111],{"type":440,"tag":487,"props":1095,"children":1096},{"style":792},[1097],{"type":445,"value":1098},"      l",{"type":440,"tag":487,"props":1100,"children":1101},{"style":737},[1102],{"type":445,"value":740},{"type":440,"tag":487,"props":1104,"children":1105},{"style":792},[1106],{"type":445,"value":942},{"type":440,"tag":487,"props":1108,"children":1109},{"style":818},[1110],{"type":445,"value":1065},{"type":440,"tag":487,"props":1112,"children":1113},{"style":663},[1114],{"type":445,"value":1115}," // 染红色\n",{"type":440,"tag":487,"props":1117,"children":1119},{"class":489,"line":1118},17,[1120],{"type":440,"tag":487,"props":1121,"children":1122},{"style":748},[1123],{"type":445,"value":1124},"    }\n",{"type":440,"tag":487,"props":1126,"children":1128},{"class":489,"line":1127},18,[1129],{"type":440,"tag":487,"props":1130,"children":1131},{"style":748},[1132],{"type":445,"value":1133},"  }\n",{"type":440,"tag":487,"props":1135,"children":1137},{"class":489,"line":1136},19,[1138,1143,1147,1151,1156,1161],{"type":440,"tag":487,"props":1139,"children":1140},{"style":894},[1141],{"type":445,"value":1142},"  return",{"type":440,"tag":487,"props":1144,"children":1145},{"style":792},[1146],{"type":445,"value":804},{"type":440,"tag":487,"props":1148,"children":1149},{"style":748},[1150],{"type":445,"value":1002},{"type":440,"tag":487,"props":1152,"children":1153},{"style":792},[1154],{"type":445,"value":1155},"r",{"type":440,"tag":487,"props":1157,"children":1158},{"style":748},[1159],{"type":445,"value":1160},"]",{"type":440,"tag":487,"props":1162,"children":1163},{"style":818},[1164],{"type":445,"value":821},{"type":440,"tag":487,"props":1166,"children":1168},{"class":489,"line":1167},20,[1169,1174],{"type":440,"tag":487,"props":1170,"children":1171},{"style":748},[1172],{"type":445,"value":1173},"}",{"type":440,"tag":487,"props":1175,"children":1176},{"style":818},[1177],{"type":445,"value":821},{"type":440,"tag":1179,"props":1180,"children":1181},"style",{},[1182],{"type":445,"value":1183},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":433,"searchDepth":721,"depth":721,"links":1185},[1186,1187],{"id":623,"depth":499,"text":623},{"id":646,"depth":499,"text":646},"markdown","content:1.algorithm:3.leetcode:153.find-minimum-in-rotated-sorted-array.md","content","1.algorithm/3.leetcode/153.find-minimum-in-rotated-sorted-array.md","md",[1194,1196],{"_path":149,"title":148,"description":1195},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",{"_path":155,"title":154,"description":1197},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",1713426812214]