[{"data":1,"prerenderedAt":1117},["Reactive",2],{"navigation":3,"/algorithm/leetcode/maximum-subarray":405,"/algorithm/leetcode/maximum-subarray-surround":1112},[4,237,265,384,391],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,377],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,347,350,353,356,359,362,365,368,371,374],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":348,"_path":349},"倒计时","/frontend-code-assessment/scene/countdown",{"title":351,"_path":352},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":354,"_path":355},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":357,"_path":358},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":360,"_path":361},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":363,"_path":364},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":366,"_path":367},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":369,"_path":370},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":372,"_path":373},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":375,"_path":376},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":378,"_path":379,"children":380},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[381],{"title":382,"_path":383},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":385,"_path":386,"children":387},"项目","/pro",[388],{"title":389,"_path":390},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":392,"_path":393,"children":394},"后端语言","/backend-languages",[395],{"title":396,"_path":397,"children":398},"Python","/backend-languages/python",[399,402],{"title":400,"_path":401},"基础","/backend-languages/python/base",{"title":403,"_path":404},"函数","/backend-languages/python/function",{"_path":95,"_dir":406,"_draft":407,"_partial":407,"_locale":408,"title":94,"description":409,"url":410,"body":411,"_type":1107,"_id":1108,"_source":1109,"_file":1110,"_extension":1111},"leetcode",false,"","给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。","https://leetcode.cn/problems/maximum-subarray",{"type":412,"children":413,"toc":1101},"root",[414,421,426,431,470,475,498,503,526,531,546,551,557,562,568,1095],{"type":415,"tag":416,"props":417,"children":418},"element","p",{},[419],{"type":420,"value":409},"text",{"type":415,"tag":416,"props":422,"children":423},{},[424],{"type":420,"value":425},"子数组\n是数组中的一个连续部分。",{"type":415,"tag":416,"props":427,"children":428},{},[429],{"type":420,"value":430},"示例 1：",{"type":415,"tag":432,"props":433,"children":436},"pre",{"className":434,"code":435,"language":420,"meta":408,"style":408},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n输出：6\n解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",[437],{"type":415,"tag":438,"props":439,"children":440},"code",{"__ignoreMap":408},[441,452,461],{"type":415,"tag":442,"props":443,"children":446},"span",{"class":444,"line":445},"line",1,[447],{"type":415,"tag":442,"props":448,"children":449},{},[450],{"type":420,"value":451},"输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n",{"type":415,"tag":442,"props":453,"children":455},{"class":444,"line":454},2,[456],{"type":415,"tag":442,"props":457,"children":458},{},[459],{"type":420,"value":460},"输出：6\n",{"type":415,"tag":442,"props":462,"children":464},{"class":444,"line":463},3,[465],{"type":415,"tag":442,"props":466,"children":467},{},[468],{"type":420,"value":469},"解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",{"type":415,"tag":416,"props":471,"children":472},{},[473],{"type":420,"value":474},"示例 2：",{"type":415,"tag":432,"props":476,"children":478},{"className":434,"code":477,"language":420,"meta":408,"style":408},"输入：nums = [1]\n输出：1\n",[479],{"type":415,"tag":438,"props":480,"children":481},{"__ignoreMap":408},[482,490],{"type":415,"tag":442,"props":483,"children":484},{"class":444,"line":445},[485],{"type":415,"tag":442,"props":486,"children":487},{},[488],{"type":420,"value":489},"输入：nums = [1]\n",{"type":415,"tag":442,"props":491,"children":492},{"class":444,"line":454},[493],{"type":415,"tag":442,"props":494,"children":495},{},[496],{"type":420,"value":497},"输出：1\n",{"type":415,"tag":416,"props":499,"children":500},{},[501],{"type":420,"value":502},"示例 3：",{"type":415,"tag":432,"props":504,"children":506},{"className":434,"code":505,"language":420,"meta":408,"style":408},"输入：nums = [5,4,-1,7,8]\n输出：23\n",[507],{"type":415,"tag":438,"props":508,"children":509},{"__ignoreMap":408},[510,518],{"type":415,"tag":442,"props":511,"children":512},{"class":444,"line":445},[513],{"type":415,"tag":442,"props":514,"children":515},{},[516],{"type":420,"value":517},"输入：nums = [5,4,-1,7,8]\n",{"type":415,"tag":442,"props":519,"children":520},{"class":444,"line":454},[521],{"type":415,"tag":442,"props":522,"children":523},{},[524],{"type":420,"value":525},"输出：23\n",{"type":415,"tag":416,"props":527,"children":528},{},[529],{"type":420,"value":530},"提示：",{"type":415,"tag":532,"props":533,"children":534},"ul",{},[535,541],{"type":415,"tag":536,"props":537,"children":538},"li",{},[539],{"type":420,"value":540},"1 \u003C= nums.length \u003C= 105",{"type":415,"tag":536,"props":542,"children":543},{},[544],{"type":420,"value":545},"-104 \u003C= nums[i] \u003C= 104",{"type":415,"tag":416,"props":547,"children":548},{},[549],{"type":420,"value":550},"进阶：如果你已经实现复杂度为 O(n) 的解法，尝试使用更为精妙的 分治法 求解。",{"type":415,"tag":552,"props":553,"children":555},"h2",{"id":554},"解题思路",[556],{"type":420,"value":554},{"type":415,"tag":552,"props":558,"children":560},{"id":559},"实现",[561],{"type":420,"value":559},{"type":415,"tag":563,"props":564,"children":566},"h3",{"id":565},"动态规划",[567],{"type":420,"value":565},{"type":415,"tag":432,"props":569,"children":573},{"className":570,"code":571,"language":572,"meta":408,"style":408},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSubArray = function (nums) {\n  let dp = [];\n  dp[0] = nums[0];\n  let res = dp[0];\n  for (let i = 1; i \u003C nums.length; i++) {\n    dp[i] = Math.max(dp[i - 1] + nums[i], nums[i]);\n    res = Math.max(res, dp[i]);\n  }\n  return res;\n};\n","js",[574],{"type":415,"tag":438,"props":575,"children":576},{"__ignoreMap":408},[577,586,612,629,638,682,712,764,801,880,998,1056,1065,1082],{"type":415,"tag":442,"props":578,"children":579},{"class":444,"line":445},[580],{"type":415,"tag":442,"props":581,"children":583},{"style":582},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[584],{"type":420,"value":585},"/**\n",{"type":415,"tag":442,"props":587,"children":588},{"class":444,"line":454},[589,594,600,606],{"type":415,"tag":442,"props":590,"children":591},{"style":582},[592],{"type":420,"value":593}," * ",{"type":415,"tag":442,"props":595,"children":597},{"style":596},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[598],{"type":420,"value":599},"@param",{"type":415,"tag":442,"props":601,"children":603},{"style":602},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[604],{"type":420,"value":605}," {number[]}",{"type":415,"tag":442,"props":607,"children":609},{"style":608},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[610],{"type":420,"value":611}," nums\n",{"type":415,"tag":442,"props":613,"children":614},{"class":444,"line":463},[615,619,624],{"type":415,"tag":442,"props":616,"children":617},{"style":582},[618],{"type":420,"value":593},{"type":415,"tag":442,"props":620,"children":621},{"style":596},[622],{"type":420,"value":623},"@return",{"type":415,"tag":442,"props":625,"children":626},{"style":602},[627],{"type":420,"value":628}," {number}\n",{"type":415,"tag":442,"props":630,"children":632},{"class":444,"line":631},4,[633],{"type":415,"tag":442,"props":634,"children":635},{"style":582},[636],{"type":420,"value":637}," */\n",{"type":415,"tag":442,"props":639,"children":641},{"class":444,"line":640},5,[642,648,654,660,665,671,677],{"type":415,"tag":442,"props":643,"children":645},{"style":644},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[646],{"type":420,"value":647},"var",{"type":415,"tag":442,"props":649,"children":651},{"style":650},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[652],{"type":420,"value":653}," maxSubArray",{"type":415,"tag":442,"props":655,"children":657},{"style":656},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[658],{"type":420,"value":659}," =",{"type":415,"tag":442,"props":661,"children":662},{"style":644},[663],{"type":420,"value":664}," function",{"type":415,"tag":442,"props":666,"children":668},{"style":667},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[669],{"type":420,"value":670}," (",{"type":415,"tag":442,"props":672,"children":674},{"style":673},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[675],{"type":420,"value":676},"nums",{"type":415,"tag":442,"props":678,"children":679},{"style":667},[680],{"type":420,"value":681},") {\n",{"type":415,"tag":442,"props":683,"children":685},{"class":444,"line":684},6,[686,691,697,701,706],{"type":415,"tag":442,"props":687,"children":688},{"style":644},[689],{"type":420,"value":690},"  let",{"type":415,"tag":442,"props":692,"children":694},{"style":693},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[695],{"type":420,"value":696}," dp",{"type":415,"tag":442,"props":698,"children":699},{"style":656},[700],{"type":420,"value":659},{"type":415,"tag":442,"props":702,"children":703},{"style":667},[704],{"type":420,"value":705}," []",{"type":415,"tag":442,"props":707,"children":709},{"style":708},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[710],{"type":420,"value":711},";\n",{"type":415,"tag":442,"props":713,"children":715},{"class":444,"line":714},7,[716,721,726,732,737,742,747,751,755,760],{"type":415,"tag":442,"props":717,"children":718},{"style":693},[719],{"type":420,"value":720},"  dp",{"type":415,"tag":442,"props":722,"children":723},{"style":667},[724],{"type":420,"value":725},"[",{"type":415,"tag":442,"props":727,"children":729},{"style":728},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[730],{"type":420,"value":731},"0",{"type":415,"tag":442,"props":733,"children":734},{"style":667},[735],{"type":420,"value":736},"] ",{"type":415,"tag":442,"props":738,"children":739},{"style":656},[740],{"type":420,"value":741},"=",{"type":415,"tag":442,"props":743,"children":744},{"style":693},[745],{"type":420,"value":746}," nums",{"type":415,"tag":442,"props":748,"children":749},{"style":667},[750],{"type":420,"value":725},{"type":415,"tag":442,"props":752,"children":753},{"style":728},[754],{"type":420,"value":731},{"type":415,"tag":442,"props":756,"children":757},{"style":667},[758],{"type":420,"value":759},"]",{"type":415,"tag":442,"props":761,"children":762},{"style":708},[763],{"type":420,"value":711},{"type":415,"tag":442,"props":765,"children":767},{"class":444,"line":766},8,[768,772,777,781,785,789,793,797],{"type":415,"tag":442,"props":769,"children":770},{"style":644},[771],{"type":420,"value":690},{"type":415,"tag":442,"props":773,"children":774},{"style":693},[775],{"type":420,"value":776}," res",{"type":415,"tag":442,"props":778,"children":779},{"style":656},[780],{"type":420,"value":659},{"type":415,"tag":442,"props":782,"children":783},{"style":693},[784],{"type":420,"value":696},{"type":415,"tag":442,"props":786,"children":787},{"style":667},[788],{"type":420,"value":725},{"type":415,"tag":442,"props":790,"children":791},{"style":728},[792],{"type":420,"value":731},{"type":415,"tag":442,"props":794,"children":795},{"style":667},[796],{"type":420,"value":759},{"type":415,"tag":442,"props":798,"children":799},{"style":708},[800],{"type":420,"value":711},{"type":415,"tag":442,"props":802,"children":804},{"class":444,"line":803},9,[805,811,815,820,825,829,834,839,843,848,852,858,863,867,871,876],{"type":415,"tag":442,"props":806,"children":808},{"style":807},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[809],{"type":420,"value":810},"  for",{"type":415,"tag":442,"props":812,"children":813},{"style":667},[814],{"type":420,"value":670},{"type":415,"tag":442,"props":816,"children":817},{"style":644},[818],{"type":420,"value":819},"let",{"type":415,"tag":442,"props":821,"children":822},{"style":693},[823],{"type":420,"value":824}," i",{"type":415,"tag":442,"props":826,"children":827},{"style":656},[828],{"type":420,"value":659},{"type":415,"tag":442,"props":830,"children":831},{"style":728},[832],{"type":420,"value":833}," 1",{"type":415,"tag":442,"props":835,"children":836},{"style":708},[837],{"type":420,"value":838},";",{"type":415,"tag":442,"props":840,"children":841},{"style":693},[842],{"type":420,"value":824},{"type":415,"tag":442,"props":844,"children":845},{"style":656},[846],{"type":420,"value":847}," \u003C",{"type":415,"tag":442,"props":849,"children":850},{"style":693},[851],{"type":420,"value":746},{"type":415,"tag":442,"props":853,"children":855},{"style":854},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[856],{"type":420,"value":857},".",{"type":415,"tag":442,"props":859,"children":860},{"style":667},[861],{"type":420,"value":862},"length",{"type":415,"tag":442,"props":864,"children":865},{"style":708},[866],{"type":420,"value":838},{"type":415,"tag":442,"props":868,"children":869},{"style":693},[870],{"type":420,"value":824},{"type":415,"tag":442,"props":872,"children":873},{"style":656},[874],{"type":420,"value":875},"++",{"type":415,"tag":442,"props":877,"children":878},{"style":667},[879],{"type":420,"value":681},{"type":415,"tag":442,"props":881,"children":883},{"class":444,"line":882},10,[884,889,893,898,902,906,911,915,920,925,930,934,938,943,947,951,956,960,964,968,972,977,981,985,989,994],{"type":415,"tag":442,"props":885,"children":886},{"style":693},[887],{"type":420,"value":888},"    dp",{"type":415,"tag":442,"props":890,"children":891},{"style":667},[892],{"type":420,"value":725},{"type":415,"tag":442,"props":894,"children":895},{"style":693},[896],{"type":420,"value":897},"i",{"type":415,"tag":442,"props":899,"children":900},{"style":667},[901],{"type":420,"value":736},{"type":415,"tag":442,"props":903,"children":904},{"style":656},[905],{"type":420,"value":741},{"type":415,"tag":442,"props":907,"children":908},{"style":693},[909],{"type":420,"value":910}," Math",{"type":415,"tag":442,"props":912,"children":913},{"style":854},[914],{"type":420,"value":857},{"type":415,"tag":442,"props":916,"children":917},{"style":650},[918],{"type":420,"value":919},"max",{"type":415,"tag":442,"props":921,"children":922},{"style":667},[923],{"type":420,"value":924},"(",{"type":415,"tag":442,"props":926,"children":927},{"style":693},[928],{"type":420,"value":929},"dp",{"type":415,"tag":442,"props":931,"children":932},{"style":667},[933],{"type":420,"value":725},{"type":415,"tag":442,"props":935,"children":936},{"style":693},[937],{"type":420,"value":897},{"type":415,"tag":442,"props":939,"children":940},{"style":656},[941],{"type":420,"value":942}," -",{"type":415,"tag":442,"props":944,"children":945},{"style":728},[946],{"type":420,"value":833},{"type":415,"tag":442,"props":948,"children":949},{"style":667},[950],{"type":420,"value":736},{"type":415,"tag":442,"props":952,"children":953},{"style":656},[954],{"type":420,"value":955},"+",{"type":415,"tag":442,"props":957,"children":958},{"style":693},[959],{"type":420,"value":746},{"type":415,"tag":442,"props":961,"children":962},{"style":667},[963],{"type":420,"value":725},{"type":415,"tag":442,"props":965,"children":966},{"style":693},[967],{"type":420,"value":897},{"type":415,"tag":442,"props":969,"children":970},{"style":667},[971],{"type":420,"value":759},{"type":415,"tag":442,"props":973,"children":974},{"style":708},[975],{"type":420,"value":976},",",{"type":415,"tag":442,"props":978,"children":979},{"style":693},[980],{"type":420,"value":746},{"type":415,"tag":442,"props":982,"children":983},{"style":667},[984],{"type":420,"value":725},{"type":415,"tag":442,"props":986,"children":987},{"style":693},[988],{"type":420,"value":897},{"type":415,"tag":442,"props":990,"children":991},{"style":667},[992],{"type":420,"value":993},"])",{"type":415,"tag":442,"props":995,"children":996},{"style":708},[997],{"type":420,"value":711},{"type":415,"tag":442,"props":999,"children":1001},{"class":444,"line":1000},11,[1002,1007,1011,1015,1019,1023,1027,1032,1036,1040,1044,1048,1052],{"type":415,"tag":442,"props":1003,"children":1004},{"style":693},[1005],{"type":420,"value":1006},"    res",{"type":415,"tag":442,"props":1008,"children":1009},{"style":656},[1010],{"type":420,"value":659},{"type":415,"tag":442,"props":1012,"children":1013},{"style":693},[1014],{"type":420,"value":910},{"type":415,"tag":442,"props":1016,"children":1017},{"style":854},[1018],{"type":420,"value":857},{"type":415,"tag":442,"props":1020,"children":1021},{"style":650},[1022],{"type":420,"value":919},{"type":415,"tag":442,"props":1024,"children":1025},{"style":667},[1026],{"type":420,"value":924},{"type":415,"tag":442,"props":1028,"children":1029},{"style":693},[1030],{"type":420,"value":1031},"res",{"type":415,"tag":442,"props":1033,"children":1034},{"style":708},[1035],{"type":420,"value":976},{"type":415,"tag":442,"props":1037,"children":1038},{"style":693},[1039],{"type":420,"value":696},{"type":415,"tag":442,"props":1041,"children":1042},{"style":667},[1043],{"type":420,"value":725},{"type":415,"tag":442,"props":1045,"children":1046},{"style":693},[1047],{"type":420,"value":897},{"type":415,"tag":442,"props":1049,"children":1050},{"style":667},[1051],{"type":420,"value":993},{"type":415,"tag":442,"props":1053,"children":1054},{"style":708},[1055],{"type":420,"value":711},{"type":415,"tag":442,"props":1057,"children":1059},{"class":444,"line":1058},12,[1060],{"type":415,"tag":442,"props":1061,"children":1062},{"style":667},[1063],{"type":420,"value":1064},"  }\n",{"type":415,"tag":442,"props":1066,"children":1068},{"class":444,"line":1067},13,[1069,1074,1078],{"type":415,"tag":442,"props":1070,"children":1071},{"style":807},[1072],{"type":420,"value":1073},"  return",{"type":415,"tag":442,"props":1075,"children":1076},{"style":693},[1077],{"type":420,"value":776},{"type":415,"tag":442,"props":1079,"children":1080},{"style":708},[1081],{"type":420,"value":711},{"type":415,"tag":442,"props":1083,"children":1085},{"class":444,"line":1084},14,[1086,1091],{"type":415,"tag":442,"props":1087,"children":1088},{"style":667},[1089],{"type":420,"value":1090},"}",{"type":415,"tag":442,"props":1092,"children":1093},{"style":708},[1094],{"type":420,"value":711},{"type":415,"tag":1096,"props":1097,"children":1098},"style",{},[1099],{"type":420,"value":1100},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":408,"searchDepth":640,"depth":640,"links":1102},[1103,1104],{"id":554,"depth":454,"text":554},{"id":559,"depth":454,"text":559,"children":1105},[1106],{"id":565,"depth":463,"text":565},"markdown","content:1.algorithm:3.leetcode:53.maximum-subarray.md","content","1.algorithm/3.leetcode/53.maximum-subarray.md","md",[1113,1115],{"_path":92,"title":91,"description":1114},"给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。",{"_path":98,"title":97,"description":1116},"以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [start_i, end_i] 。请你合并所有重叠的区间，并返回 一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间 。",1713320360971]