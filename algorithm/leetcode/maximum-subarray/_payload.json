[{"data":1,"prerenderedAt":1136},["Reactive",2],{"navigation":3,"/algorithm/leetcode/maximum-subarray":424,"/algorithm/leetcode/maximum-subarray-surround":1131},[4,237,265,403,410],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,396],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"随机数","/frontend-code-assessment/scene/random-number",{"title":382,"_path":383},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":385,"_path":386},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":388,"_path":389},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":391,"_path":392},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":394,"_path":395},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":397,"_path":398,"children":399},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[400],{"title":401,"_path":402},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":404,"_path":405,"children":406},"项目","/pro",[407],{"title":408,"_path":409},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":411,"_path":412,"children":413},"后端语言","/backend-languages",[414],{"title":415,"_path":416,"children":417},"Python","/backend-languages/python",[418,421],{"title":419,"_path":420},"基础","/backend-languages/python/base",{"title":422,"_path":423},"函数","/backend-languages/python/function",{"_path":95,"_dir":425,"_draft":426,"_partial":426,"_locale":427,"title":94,"description":428,"url":429,"body":430,"_type":1126,"_id":1127,"_source":1128,"_file":1129,"_extension":1130},"leetcode",false,"","给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。","https://leetcode.cn/problems/maximum-subarray",{"type":431,"children":432,"toc":1120},"root",[433,440,445,450,489,494,517,522,545,550,565,570,576,581,587,1114],{"type":434,"tag":435,"props":436,"children":437},"element","p",{},[438],{"type":439,"value":428},"text",{"type":434,"tag":435,"props":441,"children":442},{},[443],{"type":439,"value":444},"子数组\n是数组中的一个连续部分。",{"type":434,"tag":435,"props":446,"children":447},{},[448],{"type":439,"value":449},"示例 1：",{"type":434,"tag":451,"props":452,"children":455},"pre",{"className":453,"code":454,"language":439,"meta":427,"style":427},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n输出：6\n解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",[456],{"type":434,"tag":457,"props":458,"children":459},"code",{"__ignoreMap":427},[460,471,480],{"type":434,"tag":461,"props":462,"children":465},"span",{"class":463,"line":464},"line",1,[466],{"type":434,"tag":461,"props":467,"children":468},{},[469],{"type":439,"value":470},"输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n",{"type":434,"tag":461,"props":472,"children":474},{"class":463,"line":473},2,[475],{"type":434,"tag":461,"props":476,"children":477},{},[478],{"type":439,"value":479},"输出：6\n",{"type":434,"tag":461,"props":481,"children":483},{"class":463,"line":482},3,[484],{"type":434,"tag":461,"props":485,"children":486},{},[487],{"type":439,"value":488},"解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",{"type":434,"tag":435,"props":490,"children":491},{},[492],{"type":439,"value":493},"示例 2：",{"type":434,"tag":451,"props":495,"children":497},{"className":453,"code":496,"language":439,"meta":427,"style":427},"输入：nums = [1]\n输出：1\n",[498],{"type":434,"tag":457,"props":499,"children":500},{"__ignoreMap":427},[501,509],{"type":434,"tag":461,"props":502,"children":503},{"class":463,"line":464},[504],{"type":434,"tag":461,"props":505,"children":506},{},[507],{"type":439,"value":508},"输入：nums = [1]\n",{"type":434,"tag":461,"props":510,"children":511},{"class":463,"line":473},[512],{"type":434,"tag":461,"props":513,"children":514},{},[515],{"type":439,"value":516},"输出：1\n",{"type":434,"tag":435,"props":518,"children":519},{},[520],{"type":439,"value":521},"示例 3：",{"type":434,"tag":451,"props":523,"children":525},{"className":453,"code":524,"language":439,"meta":427,"style":427},"输入：nums = [5,4,-1,7,8]\n输出：23\n",[526],{"type":434,"tag":457,"props":527,"children":528},{"__ignoreMap":427},[529,537],{"type":434,"tag":461,"props":530,"children":531},{"class":463,"line":464},[532],{"type":434,"tag":461,"props":533,"children":534},{},[535],{"type":439,"value":536},"输入：nums = [5,4,-1,7,8]\n",{"type":434,"tag":461,"props":538,"children":539},{"class":463,"line":473},[540],{"type":434,"tag":461,"props":541,"children":542},{},[543],{"type":439,"value":544},"输出：23\n",{"type":434,"tag":435,"props":546,"children":547},{},[548],{"type":439,"value":549},"提示：",{"type":434,"tag":551,"props":552,"children":553},"ul",{},[554,560],{"type":434,"tag":555,"props":556,"children":557},"li",{},[558],{"type":439,"value":559},"1 \u003C= nums.length \u003C= 105",{"type":434,"tag":555,"props":561,"children":562},{},[563],{"type":439,"value":564},"-104 \u003C= nums[i] \u003C= 104",{"type":434,"tag":435,"props":566,"children":567},{},[568],{"type":439,"value":569},"进阶：如果你已经实现复杂度为 O(n) 的解法，尝试使用更为精妙的 分治法 求解。",{"type":434,"tag":571,"props":572,"children":574},"h2",{"id":573},"解题思路",[575],{"type":439,"value":573},{"type":434,"tag":571,"props":577,"children":579},{"id":578},"实现",[580],{"type":439,"value":578},{"type":434,"tag":582,"props":583,"children":585},"h3",{"id":584},"动态规划",[586],{"type":439,"value":584},{"type":434,"tag":451,"props":588,"children":592},{"className":589,"code":590,"language":591,"meta":427,"style":427},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSubArray = function (nums) {\n  let dp = [];\n  dp[0] = nums[0];\n  let res = dp[0];\n  for (let i = 1; i \u003C nums.length; i++) {\n    dp[i] = Math.max(dp[i - 1] + nums[i], nums[i]);\n    res = Math.max(res, dp[i]);\n  }\n  return res;\n};\n","js",[593],{"type":434,"tag":457,"props":594,"children":595},{"__ignoreMap":427},[596,605,631,648,657,701,731,783,820,899,1017,1075,1084,1101],{"type":434,"tag":461,"props":597,"children":598},{"class":463,"line":464},[599],{"type":434,"tag":461,"props":600,"children":602},{"style":601},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[603],{"type":439,"value":604},"/**\n",{"type":434,"tag":461,"props":606,"children":607},{"class":463,"line":473},[608,613,619,625],{"type":434,"tag":461,"props":609,"children":610},{"style":601},[611],{"type":439,"value":612}," * ",{"type":434,"tag":461,"props":614,"children":616},{"style":615},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[617],{"type":439,"value":618},"@param",{"type":434,"tag":461,"props":620,"children":622},{"style":621},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[623],{"type":439,"value":624}," {number[]}",{"type":434,"tag":461,"props":626,"children":628},{"style":627},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[629],{"type":439,"value":630}," nums\n",{"type":434,"tag":461,"props":632,"children":633},{"class":463,"line":482},[634,638,643],{"type":434,"tag":461,"props":635,"children":636},{"style":601},[637],{"type":439,"value":612},{"type":434,"tag":461,"props":639,"children":640},{"style":615},[641],{"type":439,"value":642},"@return",{"type":434,"tag":461,"props":644,"children":645},{"style":621},[646],{"type":439,"value":647}," {number}\n",{"type":434,"tag":461,"props":649,"children":651},{"class":463,"line":650},4,[652],{"type":434,"tag":461,"props":653,"children":654},{"style":601},[655],{"type":439,"value":656}," */\n",{"type":434,"tag":461,"props":658,"children":660},{"class":463,"line":659},5,[661,667,673,679,684,690,696],{"type":434,"tag":461,"props":662,"children":664},{"style":663},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[665],{"type":439,"value":666},"var",{"type":434,"tag":461,"props":668,"children":670},{"style":669},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[671],{"type":439,"value":672}," maxSubArray",{"type":434,"tag":461,"props":674,"children":676},{"style":675},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[677],{"type":439,"value":678}," =",{"type":434,"tag":461,"props":680,"children":681},{"style":663},[682],{"type":439,"value":683}," function",{"type":434,"tag":461,"props":685,"children":687},{"style":686},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[688],{"type":439,"value":689}," (",{"type":434,"tag":461,"props":691,"children":693},{"style":692},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[694],{"type":439,"value":695},"nums",{"type":434,"tag":461,"props":697,"children":698},{"style":686},[699],{"type":439,"value":700},") {\n",{"type":434,"tag":461,"props":702,"children":704},{"class":463,"line":703},6,[705,710,716,720,725],{"type":434,"tag":461,"props":706,"children":707},{"style":663},[708],{"type":439,"value":709},"  let",{"type":434,"tag":461,"props":711,"children":713},{"style":712},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[714],{"type":439,"value":715}," dp",{"type":434,"tag":461,"props":717,"children":718},{"style":675},[719],{"type":439,"value":678},{"type":434,"tag":461,"props":721,"children":722},{"style":686},[723],{"type":439,"value":724}," []",{"type":434,"tag":461,"props":726,"children":728},{"style":727},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[729],{"type":439,"value":730},";\n",{"type":434,"tag":461,"props":732,"children":734},{"class":463,"line":733},7,[735,740,745,751,756,761,766,770,774,779],{"type":434,"tag":461,"props":736,"children":737},{"style":712},[738],{"type":439,"value":739},"  dp",{"type":434,"tag":461,"props":741,"children":742},{"style":686},[743],{"type":439,"value":744},"[",{"type":434,"tag":461,"props":746,"children":748},{"style":747},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[749],{"type":439,"value":750},"0",{"type":434,"tag":461,"props":752,"children":753},{"style":686},[754],{"type":439,"value":755},"] ",{"type":434,"tag":461,"props":757,"children":758},{"style":675},[759],{"type":439,"value":760},"=",{"type":434,"tag":461,"props":762,"children":763},{"style":712},[764],{"type":439,"value":765}," nums",{"type":434,"tag":461,"props":767,"children":768},{"style":686},[769],{"type":439,"value":744},{"type":434,"tag":461,"props":771,"children":772},{"style":747},[773],{"type":439,"value":750},{"type":434,"tag":461,"props":775,"children":776},{"style":686},[777],{"type":439,"value":778},"]",{"type":434,"tag":461,"props":780,"children":781},{"style":727},[782],{"type":439,"value":730},{"type":434,"tag":461,"props":784,"children":786},{"class":463,"line":785},8,[787,791,796,800,804,808,812,816],{"type":434,"tag":461,"props":788,"children":789},{"style":663},[790],{"type":439,"value":709},{"type":434,"tag":461,"props":792,"children":793},{"style":712},[794],{"type":439,"value":795}," res",{"type":434,"tag":461,"props":797,"children":798},{"style":675},[799],{"type":439,"value":678},{"type":434,"tag":461,"props":801,"children":802},{"style":712},[803],{"type":439,"value":715},{"type":434,"tag":461,"props":805,"children":806},{"style":686},[807],{"type":439,"value":744},{"type":434,"tag":461,"props":809,"children":810},{"style":747},[811],{"type":439,"value":750},{"type":434,"tag":461,"props":813,"children":814},{"style":686},[815],{"type":439,"value":778},{"type":434,"tag":461,"props":817,"children":818},{"style":727},[819],{"type":439,"value":730},{"type":434,"tag":461,"props":821,"children":823},{"class":463,"line":822},9,[824,830,834,839,844,848,853,858,862,867,871,877,882,886,890,895],{"type":434,"tag":461,"props":825,"children":827},{"style":826},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[828],{"type":439,"value":829},"  for",{"type":434,"tag":461,"props":831,"children":832},{"style":686},[833],{"type":439,"value":689},{"type":434,"tag":461,"props":835,"children":836},{"style":663},[837],{"type":439,"value":838},"let",{"type":434,"tag":461,"props":840,"children":841},{"style":712},[842],{"type":439,"value":843}," i",{"type":434,"tag":461,"props":845,"children":846},{"style":675},[847],{"type":439,"value":678},{"type":434,"tag":461,"props":849,"children":850},{"style":747},[851],{"type":439,"value":852}," 1",{"type":434,"tag":461,"props":854,"children":855},{"style":727},[856],{"type":439,"value":857},";",{"type":434,"tag":461,"props":859,"children":860},{"style":712},[861],{"type":439,"value":843},{"type":434,"tag":461,"props":863,"children":864},{"style":675},[865],{"type":439,"value":866}," \u003C",{"type":434,"tag":461,"props":868,"children":869},{"style":712},[870],{"type":439,"value":765},{"type":434,"tag":461,"props":872,"children":874},{"style":873},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[875],{"type":439,"value":876},".",{"type":434,"tag":461,"props":878,"children":879},{"style":686},[880],{"type":439,"value":881},"length",{"type":434,"tag":461,"props":883,"children":884},{"style":727},[885],{"type":439,"value":857},{"type":434,"tag":461,"props":887,"children":888},{"style":712},[889],{"type":439,"value":843},{"type":434,"tag":461,"props":891,"children":892},{"style":675},[893],{"type":439,"value":894},"++",{"type":434,"tag":461,"props":896,"children":897},{"style":686},[898],{"type":439,"value":700},{"type":434,"tag":461,"props":900,"children":902},{"class":463,"line":901},10,[903,908,912,917,921,925,930,934,939,944,949,953,957,962,966,970,975,979,983,987,991,996,1000,1004,1008,1013],{"type":434,"tag":461,"props":904,"children":905},{"style":712},[906],{"type":439,"value":907},"    dp",{"type":434,"tag":461,"props":909,"children":910},{"style":686},[911],{"type":439,"value":744},{"type":434,"tag":461,"props":913,"children":914},{"style":712},[915],{"type":439,"value":916},"i",{"type":434,"tag":461,"props":918,"children":919},{"style":686},[920],{"type":439,"value":755},{"type":434,"tag":461,"props":922,"children":923},{"style":675},[924],{"type":439,"value":760},{"type":434,"tag":461,"props":926,"children":927},{"style":712},[928],{"type":439,"value":929}," Math",{"type":434,"tag":461,"props":931,"children":932},{"style":873},[933],{"type":439,"value":876},{"type":434,"tag":461,"props":935,"children":936},{"style":669},[937],{"type":439,"value":938},"max",{"type":434,"tag":461,"props":940,"children":941},{"style":686},[942],{"type":439,"value":943},"(",{"type":434,"tag":461,"props":945,"children":946},{"style":712},[947],{"type":439,"value":948},"dp",{"type":434,"tag":461,"props":950,"children":951},{"style":686},[952],{"type":439,"value":744},{"type":434,"tag":461,"props":954,"children":955},{"style":712},[956],{"type":439,"value":916},{"type":434,"tag":461,"props":958,"children":959},{"style":675},[960],{"type":439,"value":961}," -",{"type":434,"tag":461,"props":963,"children":964},{"style":747},[965],{"type":439,"value":852},{"type":434,"tag":461,"props":967,"children":968},{"style":686},[969],{"type":439,"value":755},{"type":434,"tag":461,"props":971,"children":972},{"style":675},[973],{"type":439,"value":974},"+",{"type":434,"tag":461,"props":976,"children":977},{"style":712},[978],{"type":439,"value":765},{"type":434,"tag":461,"props":980,"children":981},{"style":686},[982],{"type":439,"value":744},{"type":434,"tag":461,"props":984,"children":985},{"style":712},[986],{"type":439,"value":916},{"type":434,"tag":461,"props":988,"children":989},{"style":686},[990],{"type":439,"value":778},{"type":434,"tag":461,"props":992,"children":993},{"style":727},[994],{"type":439,"value":995},",",{"type":434,"tag":461,"props":997,"children":998},{"style":712},[999],{"type":439,"value":765},{"type":434,"tag":461,"props":1001,"children":1002},{"style":686},[1003],{"type":439,"value":744},{"type":434,"tag":461,"props":1005,"children":1006},{"style":712},[1007],{"type":439,"value":916},{"type":434,"tag":461,"props":1009,"children":1010},{"style":686},[1011],{"type":439,"value":1012},"])",{"type":434,"tag":461,"props":1014,"children":1015},{"style":727},[1016],{"type":439,"value":730},{"type":434,"tag":461,"props":1018,"children":1020},{"class":463,"line":1019},11,[1021,1026,1030,1034,1038,1042,1046,1051,1055,1059,1063,1067,1071],{"type":434,"tag":461,"props":1022,"children":1023},{"style":712},[1024],{"type":439,"value":1025},"    res",{"type":434,"tag":461,"props":1027,"children":1028},{"style":675},[1029],{"type":439,"value":678},{"type":434,"tag":461,"props":1031,"children":1032},{"style":712},[1033],{"type":439,"value":929},{"type":434,"tag":461,"props":1035,"children":1036},{"style":873},[1037],{"type":439,"value":876},{"type":434,"tag":461,"props":1039,"children":1040},{"style":669},[1041],{"type":439,"value":938},{"type":434,"tag":461,"props":1043,"children":1044},{"style":686},[1045],{"type":439,"value":943},{"type":434,"tag":461,"props":1047,"children":1048},{"style":712},[1049],{"type":439,"value":1050},"res",{"type":434,"tag":461,"props":1052,"children":1053},{"style":727},[1054],{"type":439,"value":995},{"type":434,"tag":461,"props":1056,"children":1057},{"style":712},[1058],{"type":439,"value":715},{"type":434,"tag":461,"props":1060,"children":1061},{"style":686},[1062],{"type":439,"value":744},{"type":434,"tag":461,"props":1064,"children":1065},{"style":712},[1066],{"type":439,"value":916},{"type":434,"tag":461,"props":1068,"children":1069},{"style":686},[1070],{"type":439,"value":1012},{"type":434,"tag":461,"props":1072,"children":1073},{"style":727},[1074],{"type":439,"value":730},{"type":434,"tag":461,"props":1076,"children":1078},{"class":463,"line":1077},12,[1079],{"type":434,"tag":461,"props":1080,"children":1081},{"style":686},[1082],{"type":439,"value":1083},"  }\n",{"type":434,"tag":461,"props":1085,"children":1087},{"class":463,"line":1086},13,[1088,1093,1097],{"type":434,"tag":461,"props":1089,"children":1090},{"style":826},[1091],{"type":439,"value":1092},"  return",{"type":434,"tag":461,"props":1094,"children":1095},{"style":712},[1096],{"type":439,"value":795},{"type":434,"tag":461,"props":1098,"children":1099},{"style":727},[1100],{"type":439,"value":730},{"type":434,"tag":461,"props":1102,"children":1104},{"class":463,"line":1103},14,[1105,1110],{"type":434,"tag":461,"props":1106,"children":1107},{"style":686},[1108],{"type":439,"value":1109},"}",{"type":434,"tag":461,"props":1111,"children":1112},{"style":727},[1113],{"type":439,"value":730},{"type":434,"tag":1115,"props":1116,"children":1117},"style",{},[1118],{"type":439,"value":1119},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":427,"searchDepth":659,"depth":659,"links":1121},[1122,1123],{"id":573,"depth":473,"text":573},{"id":578,"depth":473,"text":578,"children":1124},[1125],{"id":584,"depth":482,"text":584},"markdown","content:1.algorithm:3.leetcode:53.maximum-subarray.md","content","1.algorithm/3.leetcode/53.maximum-subarray.md","md",[1132,1134],{"_path":92,"title":91,"description":1133},"给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。",{"_path":98,"title":97,"description":1135},"以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [start_i, end_i] 。请你合并所有重叠的区间，并返回 一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间 。",1713339870885]