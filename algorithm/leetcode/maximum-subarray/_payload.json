[{"data":1,"prerenderedAt":1110},["Reactive",2],{"navigation":3,"/algorithm/leetcode/maximum-subarray":398,"/algorithm/leetcode/maximum-subarray-surround":1105},[4,237,265,384],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR 169. 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR 187. 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数相加","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,377],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,347,350,353,356,359,362,365,368,371,374],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":348,"_path":349},"倒计时","/frontend-code-assessment/scene/countdown",{"title":351,"_path":352},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":354,"_path":355},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":357,"_path":358},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":360,"_path":361},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":363,"_path":364},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":366,"_path":367},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":369,"_path":370},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":372,"_path":373},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":375,"_path":376},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":378,"_path":379,"children":380},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[381],{"title":382,"_path":383},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":385,"_path":386,"children":387},"后端语言","/backend-languages",[388],{"title":389,"_path":390,"children":391},"Python","/backend-languages/python",[392,395],{"title":393,"_path":394},"基础","/backend-languages/python/base",{"title":396,"_path":397},"函数","/backend-languages/python/function",{"_path":95,"_dir":399,"_draft":400,"_partial":400,"_locale":401,"title":94,"description":402,"url":403,"body":404,"_type":1100,"_id":1101,"_source":1102,"_file":1103,"_extension":1104},"leetcode",false,"","给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。","https://leetcode.cn/problems/maximum-subarray",{"type":405,"children":406,"toc":1094},"root",[407,414,419,424,463,468,491,496,519,524,539,544,550,555,561,1088],{"type":408,"tag":409,"props":410,"children":411},"element","p",{},[412],{"type":413,"value":402},"text",{"type":408,"tag":409,"props":415,"children":416},{},[417],{"type":413,"value":418},"子数组\n是数组中的一个连续部分。",{"type":408,"tag":409,"props":420,"children":421},{},[422],{"type":413,"value":423},"示例 1：",{"type":408,"tag":425,"props":426,"children":429},"pre",{"className":427,"code":428,"language":413,"meta":401,"style":401},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n输出：6\n解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",[430],{"type":408,"tag":431,"props":432,"children":433},"code",{"__ignoreMap":401},[434,445,454],{"type":408,"tag":435,"props":436,"children":439},"span",{"class":437,"line":438},"line",1,[440],{"type":408,"tag":435,"props":441,"children":442},{},[443],{"type":413,"value":444},"输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n",{"type":408,"tag":435,"props":446,"children":448},{"class":437,"line":447},2,[449],{"type":408,"tag":435,"props":450,"children":451},{},[452],{"type":413,"value":453},"输出：6\n",{"type":408,"tag":435,"props":455,"children":457},{"class":437,"line":456},3,[458],{"type":408,"tag":435,"props":459,"children":460},{},[461],{"type":413,"value":462},"解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",{"type":408,"tag":409,"props":464,"children":465},{},[466],{"type":413,"value":467},"示例 2：",{"type":408,"tag":425,"props":469,"children":471},{"className":427,"code":470,"language":413,"meta":401,"style":401},"输入：nums = [1]\n输出：1\n",[472],{"type":408,"tag":431,"props":473,"children":474},{"__ignoreMap":401},[475,483],{"type":408,"tag":435,"props":476,"children":477},{"class":437,"line":438},[478],{"type":408,"tag":435,"props":479,"children":480},{},[481],{"type":413,"value":482},"输入：nums = [1]\n",{"type":408,"tag":435,"props":484,"children":485},{"class":437,"line":447},[486],{"type":408,"tag":435,"props":487,"children":488},{},[489],{"type":413,"value":490},"输出：1\n",{"type":408,"tag":409,"props":492,"children":493},{},[494],{"type":413,"value":495},"示例 3：",{"type":408,"tag":425,"props":497,"children":499},{"className":427,"code":498,"language":413,"meta":401,"style":401},"输入：nums = [5,4,-1,7,8]\n输出：23\n",[500],{"type":408,"tag":431,"props":501,"children":502},{"__ignoreMap":401},[503,511],{"type":408,"tag":435,"props":504,"children":505},{"class":437,"line":438},[506],{"type":408,"tag":435,"props":507,"children":508},{},[509],{"type":413,"value":510},"输入：nums = [5,4,-1,7,8]\n",{"type":408,"tag":435,"props":512,"children":513},{"class":437,"line":447},[514],{"type":408,"tag":435,"props":515,"children":516},{},[517],{"type":413,"value":518},"输出：23\n",{"type":408,"tag":409,"props":520,"children":521},{},[522],{"type":413,"value":523},"提示：",{"type":408,"tag":525,"props":526,"children":527},"ul",{},[528,534],{"type":408,"tag":529,"props":530,"children":531},"li",{},[532],{"type":413,"value":533},"1 \u003C= nums.length \u003C= 105",{"type":408,"tag":529,"props":535,"children":536},{},[537],{"type":413,"value":538},"-104 \u003C= nums[i] \u003C= 104",{"type":408,"tag":409,"props":540,"children":541},{},[542],{"type":413,"value":543},"进阶：如果你已经实现复杂度为 O(n) 的解法，尝试使用更为精妙的 分治法 求解。",{"type":408,"tag":545,"props":546,"children":548},"h2",{"id":547},"解题思路",[549],{"type":413,"value":547},{"type":408,"tag":545,"props":551,"children":553},{"id":552},"实现",[554],{"type":413,"value":552},{"type":408,"tag":556,"props":557,"children":559},"h3",{"id":558},"动态规划",[560],{"type":413,"value":558},{"type":408,"tag":425,"props":562,"children":566},{"className":563,"code":564,"language":565,"meta":401,"style":401},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSubArray = function (nums) {\n  let dp = [];\n  dp[0] = nums[0];\n  let res = dp[0];\n  for (let i = 1; i \u003C nums.length; i++) {\n    dp[i] = Math.max(dp[i - 1] + nums[i], nums[i]);\n    res = Math.max(res, dp[i]);\n  }\n  return res;\n};\n","js",[567],{"type":408,"tag":431,"props":568,"children":569},{"__ignoreMap":401},[570,579,605,622,631,675,705,757,794,873,991,1049,1058,1075],{"type":408,"tag":435,"props":571,"children":572},{"class":437,"line":438},[573],{"type":408,"tag":435,"props":574,"children":576},{"style":575},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[577],{"type":413,"value":578},"/**\n",{"type":408,"tag":435,"props":580,"children":581},{"class":437,"line":447},[582,587,593,599],{"type":408,"tag":435,"props":583,"children":584},{"style":575},[585],{"type":413,"value":586}," * ",{"type":408,"tag":435,"props":588,"children":590},{"style":589},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[591],{"type":413,"value":592},"@param",{"type":408,"tag":435,"props":594,"children":596},{"style":595},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[597],{"type":413,"value":598}," {number[]}",{"type":408,"tag":435,"props":600,"children":602},{"style":601},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[603],{"type":413,"value":604}," nums\n",{"type":408,"tag":435,"props":606,"children":607},{"class":437,"line":456},[608,612,617],{"type":408,"tag":435,"props":609,"children":610},{"style":575},[611],{"type":413,"value":586},{"type":408,"tag":435,"props":613,"children":614},{"style":589},[615],{"type":413,"value":616},"@return",{"type":408,"tag":435,"props":618,"children":619},{"style":595},[620],{"type":413,"value":621}," {number}\n",{"type":408,"tag":435,"props":623,"children":625},{"class":437,"line":624},4,[626],{"type":408,"tag":435,"props":627,"children":628},{"style":575},[629],{"type":413,"value":630}," */\n",{"type":408,"tag":435,"props":632,"children":634},{"class":437,"line":633},5,[635,641,647,653,658,664,670],{"type":408,"tag":435,"props":636,"children":638},{"style":637},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[639],{"type":413,"value":640},"var",{"type":408,"tag":435,"props":642,"children":644},{"style":643},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[645],{"type":413,"value":646}," maxSubArray",{"type":408,"tag":435,"props":648,"children":650},{"style":649},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[651],{"type":413,"value":652}," =",{"type":408,"tag":435,"props":654,"children":655},{"style":637},[656],{"type":413,"value":657}," function",{"type":408,"tag":435,"props":659,"children":661},{"style":660},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[662],{"type":413,"value":663}," (",{"type":408,"tag":435,"props":665,"children":667},{"style":666},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[668],{"type":413,"value":669},"nums",{"type":408,"tag":435,"props":671,"children":672},{"style":660},[673],{"type":413,"value":674},") {\n",{"type":408,"tag":435,"props":676,"children":678},{"class":437,"line":677},6,[679,684,690,694,699],{"type":408,"tag":435,"props":680,"children":681},{"style":637},[682],{"type":413,"value":683},"  let",{"type":408,"tag":435,"props":685,"children":687},{"style":686},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[688],{"type":413,"value":689}," dp",{"type":408,"tag":435,"props":691,"children":692},{"style":649},[693],{"type":413,"value":652},{"type":408,"tag":435,"props":695,"children":696},{"style":660},[697],{"type":413,"value":698}," []",{"type":408,"tag":435,"props":700,"children":702},{"style":701},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[703],{"type":413,"value":704},";\n",{"type":408,"tag":435,"props":706,"children":708},{"class":437,"line":707},7,[709,714,719,725,730,735,740,744,748,753],{"type":408,"tag":435,"props":710,"children":711},{"style":686},[712],{"type":413,"value":713},"  dp",{"type":408,"tag":435,"props":715,"children":716},{"style":660},[717],{"type":413,"value":718},"[",{"type":408,"tag":435,"props":720,"children":722},{"style":721},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[723],{"type":413,"value":724},"0",{"type":408,"tag":435,"props":726,"children":727},{"style":660},[728],{"type":413,"value":729},"] ",{"type":408,"tag":435,"props":731,"children":732},{"style":649},[733],{"type":413,"value":734},"=",{"type":408,"tag":435,"props":736,"children":737},{"style":686},[738],{"type":413,"value":739}," nums",{"type":408,"tag":435,"props":741,"children":742},{"style":660},[743],{"type":413,"value":718},{"type":408,"tag":435,"props":745,"children":746},{"style":721},[747],{"type":413,"value":724},{"type":408,"tag":435,"props":749,"children":750},{"style":660},[751],{"type":413,"value":752},"]",{"type":408,"tag":435,"props":754,"children":755},{"style":701},[756],{"type":413,"value":704},{"type":408,"tag":435,"props":758,"children":760},{"class":437,"line":759},8,[761,765,770,774,778,782,786,790],{"type":408,"tag":435,"props":762,"children":763},{"style":637},[764],{"type":413,"value":683},{"type":408,"tag":435,"props":766,"children":767},{"style":686},[768],{"type":413,"value":769}," res",{"type":408,"tag":435,"props":771,"children":772},{"style":649},[773],{"type":413,"value":652},{"type":408,"tag":435,"props":775,"children":776},{"style":686},[777],{"type":413,"value":689},{"type":408,"tag":435,"props":779,"children":780},{"style":660},[781],{"type":413,"value":718},{"type":408,"tag":435,"props":783,"children":784},{"style":721},[785],{"type":413,"value":724},{"type":408,"tag":435,"props":787,"children":788},{"style":660},[789],{"type":413,"value":752},{"type":408,"tag":435,"props":791,"children":792},{"style":701},[793],{"type":413,"value":704},{"type":408,"tag":435,"props":795,"children":797},{"class":437,"line":796},9,[798,804,808,813,818,822,827,832,836,841,845,851,856,860,864,869],{"type":408,"tag":435,"props":799,"children":801},{"style":800},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[802],{"type":413,"value":803},"  for",{"type":408,"tag":435,"props":805,"children":806},{"style":660},[807],{"type":413,"value":663},{"type":408,"tag":435,"props":809,"children":810},{"style":637},[811],{"type":413,"value":812},"let",{"type":408,"tag":435,"props":814,"children":815},{"style":686},[816],{"type":413,"value":817}," i",{"type":408,"tag":435,"props":819,"children":820},{"style":649},[821],{"type":413,"value":652},{"type":408,"tag":435,"props":823,"children":824},{"style":721},[825],{"type":413,"value":826}," 1",{"type":408,"tag":435,"props":828,"children":829},{"style":701},[830],{"type":413,"value":831},";",{"type":408,"tag":435,"props":833,"children":834},{"style":686},[835],{"type":413,"value":817},{"type":408,"tag":435,"props":837,"children":838},{"style":649},[839],{"type":413,"value":840}," \u003C",{"type":408,"tag":435,"props":842,"children":843},{"style":686},[844],{"type":413,"value":739},{"type":408,"tag":435,"props":846,"children":848},{"style":847},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[849],{"type":413,"value":850},".",{"type":408,"tag":435,"props":852,"children":853},{"style":660},[854],{"type":413,"value":855},"length",{"type":408,"tag":435,"props":857,"children":858},{"style":701},[859],{"type":413,"value":831},{"type":408,"tag":435,"props":861,"children":862},{"style":686},[863],{"type":413,"value":817},{"type":408,"tag":435,"props":865,"children":866},{"style":649},[867],{"type":413,"value":868},"++",{"type":408,"tag":435,"props":870,"children":871},{"style":660},[872],{"type":413,"value":674},{"type":408,"tag":435,"props":874,"children":876},{"class":437,"line":875},10,[877,882,886,891,895,899,904,908,913,918,923,927,931,936,940,944,949,953,957,961,965,970,974,978,982,987],{"type":408,"tag":435,"props":878,"children":879},{"style":686},[880],{"type":413,"value":881},"    dp",{"type":408,"tag":435,"props":883,"children":884},{"style":660},[885],{"type":413,"value":718},{"type":408,"tag":435,"props":887,"children":888},{"style":686},[889],{"type":413,"value":890},"i",{"type":408,"tag":435,"props":892,"children":893},{"style":660},[894],{"type":413,"value":729},{"type":408,"tag":435,"props":896,"children":897},{"style":649},[898],{"type":413,"value":734},{"type":408,"tag":435,"props":900,"children":901},{"style":686},[902],{"type":413,"value":903}," Math",{"type":408,"tag":435,"props":905,"children":906},{"style":847},[907],{"type":413,"value":850},{"type":408,"tag":435,"props":909,"children":910},{"style":643},[911],{"type":413,"value":912},"max",{"type":408,"tag":435,"props":914,"children":915},{"style":660},[916],{"type":413,"value":917},"(",{"type":408,"tag":435,"props":919,"children":920},{"style":686},[921],{"type":413,"value":922},"dp",{"type":408,"tag":435,"props":924,"children":925},{"style":660},[926],{"type":413,"value":718},{"type":408,"tag":435,"props":928,"children":929},{"style":686},[930],{"type":413,"value":890},{"type":408,"tag":435,"props":932,"children":933},{"style":649},[934],{"type":413,"value":935}," -",{"type":408,"tag":435,"props":937,"children":938},{"style":721},[939],{"type":413,"value":826},{"type":408,"tag":435,"props":941,"children":942},{"style":660},[943],{"type":413,"value":729},{"type":408,"tag":435,"props":945,"children":946},{"style":649},[947],{"type":413,"value":948},"+",{"type":408,"tag":435,"props":950,"children":951},{"style":686},[952],{"type":413,"value":739},{"type":408,"tag":435,"props":954,"children":955},{"style":660},[956],{"type":413,"value":718},{"type":408,"tag":435,"props":958,"children":959},{"style":686},[960],{"type":413,"value":890},{"type":408,"tag":435,"props":962,"children":963},{"style":660},[964],{"type":413,"value":752},{"type":408,"tag":435,"props":966,"children":967},{"style":701},[968],{"type":413,"value":969},",",{"type":408,"tag":435,"props":971,"children":972},{"style":686},[973],{"type":413,"value":739},{"type":408,"tag":435,"props":975,"children":976},{"style":660},[977],{"type":413,"value":718},{"type":408,"tag":435,"props":979,"children":980},{"style":686},[981],{"type":413,"value":890},{"type":408,"tag":435,"props":983,"children":984},{"style":660},[985],{"type":413,"value":986},"])",{"type":408,"tag":435,"props":988,"children":989},{"style":701},[990],{"type":413,"value":704},{"type":408,"tag":435,"props":992,"children":994},{"class":437,"line":993},11,[995,1000,1004,1008,1012,1016,1020,1025,1029,1033,1037,1041,1045],{"type":408,"tag":435,"props":996,"children":997},{"style":686},[998],{"type":413,"value":999},"    res",{"type":408,"tag":435,"props":1001,"children":1002},{"style":649},[1003],{"type":413,"value":652},{"type":408,"tag":435,"props":1005,"children":1006},{"style":686},[1007],{"type":413,"value":903},{"type":408,"tag":435,"props":1009,"children":1010},{"style":847},[1011],{"type":413,"value":850},{"type":408,"tag":435,"props":1013,"children":1014},{"style":643},[1015],{"type":413,"value":912},{"type":408,"tag":435,"props":1017,"children":1018},{"style":660},[1019],{"type":413,"value":917},{"type":408,"tag":435,"props":1021,"children":1022},{"style":686},[1023],{"type":413,"value":1024},"res",{"type":408,"tag":435,"props":1026,"children":1027},{"style":701},[1028],{"type":413,"value":969},{"type":408,"tag":435,"props":1030,"children":1031},{"style":686},[1032],{"type":413,"value":689},{"type":408,"tag":435,"props":1034,"children":1035},{"style":660},[1036],{"type":413,"value":718},{"type":408,"tag":435,"props":1038,"children":1039},{"style":686},[1040],{"type":413,"value":890},{"type":408,"tag":435,"props":1042,"children":1043},{"style":660},[1044],{"type":413,"value":986},{"type":408,"tag":435,"props":1046,"children":1047},{"style":701},[1048],{"type":413,"value":704},{"type":408,"tag":435,"props":1050,"children":1052},{"class":437,"line":1051},12,[1053],{"type":408,"tag":435,"props":1054,"children":1055},{"style":660},[1056],{"type":413,"value":1057},"  }\n",{"type":408,"tag":435,"props":1059,"children":1061},{"class":437,"line":1060},13,[1062,1067,1071],{"type":408,"tag":435,"props":1063,"children":1064},{"style":800},[1065],{"type":413,"value":1066},"  return",{"type":408,"tag":435,"props":1068,"children":1069},{"style":686},[1070],{"type":413,"value":769},{"type":408,"tag":435,"props":1072,"children":1073},{"style":701},[1074],{"type":413,"value":704},{"type":408,"tag":435,"props":1076,"children":1078},{"class":437,"line":1077},14,[1079,1084],{"type":408,"tag":435,"props":1080,"children":1081},{"style":660},[1082],{"type":413,"value":1083},"}",{"type":408,"tag":435,"props":1085,"children":1086},{"style":701},[1087],{"type":413,"value":704},{"type":408,"tag":1089,"props":1090,"children":1091},"style",{},[1092],{"type":413,"value":1093},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":401,"searchDepth":633,"depth":633,"links":1095},[1096,1097],{"id":547,"depth":447,"text":547},{"id":552,"depth":447,"text":552,"children":1098},[1099],{"id":558,"depth":456,"text":558},"markdown","content:1.algorithm:3.leetcode:53.maximum-subarray.md","content","1.algorithm/3.leetcode/53.maximum-subarray.md","md",[1106,1108],{"_path":92,"title":91,"description":1107},"给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。",{"_path":98,"title":97,"description":1109},"以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [start_i, end_i] 。请你合并所有重叠的区间，并返回 一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间 。",1713153292475]