[{"data":1,"prerenderedAt":1142},["Reactive",2],{"navigation":3,"/algorithm/leetcode/maximum-subarray":430,"/algorithm/leetcode/maximum-subarray-surround":1137},[4,237,265,409,416],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,402],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396,399],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":379,"_path":380},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":382,"_path":383},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":385,"_path":386},"随机数","/frontend-code-assessment/scene/random-number",{"title":388,"_path":389},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":391,"_path":392},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":394,"_path":395},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":397,"_path":398},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":400,"_path":401},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":403,"_path":404,"children":405},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[406],{"title":407,"_path":408},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":410,"_path":411,"children":412},"项目","/pro",[413],{"title":414,"_path":415},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":417,"_path":418,"children":419},"后端语言","/backend-languages",[420],{"title":421,"_path":422,"children":423},"Python","/backend-languages/python",[424,427],{"title":425,"_path":426},"基础","/backend-languages/python/base",{"title":428,"_path":429},"函数","/backend-languages/python/function",{"_path":95,"_dir":431,"_draft":432,"_partial":432,"_locale":433,"title":94,"description":434,"url":435,"body":436,"_type":1132,"_id":1133,"_source":1134,"_file":1135,"_extension":1136},"leetcode",false,"","给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。","https://leetcode.cn/problems/maximum-subarray",{"type":437,"children":438,"toc":1126},"root",[439,446,451,456,495,500,523,528,551,556,571,576,582,587,593,1120],{"type":440,"tag":441,"props":442,"children":443},"element","p",{},[444],{"type":445,"value":434},"text",{"type":440,"tag":441,"props":447,"children":448},{},[449],{"type":445,"value":450},"子数组\n是数组中的一个连续部分。",{"type":440,"tag":441,"props":452,"children":453},{},[454],{"type":445,"value":455},"示例 1：",{"type":440,"tag":457,"props":458,"children":461},"pre",{"className":459,"code":460,"language":445,"meta":433,"style":433},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n输出：6\n解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",[462],{"type":440,"tag":463,"props":464,"children":465},"code",{"__ignoreMap":433},[466,477,486],{"type":440,"tag":467,"props":468,"children":471},"span",{"class":469,"line":470},"line",1,[472],{"type":440,"tag":467,"props":473,"children":474},{},[475],{"type":445,"value":476},"输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n",{"type":440,"tag":467,"props":478,"children":480},{"class":469,"line":479},2,[481],{"type":440,"tag":467,"props":482,"children":483},{},[484],{"type":445,"value":485},"输出：6\n",{"type":440,"tag":467,"props":487,"children":489},{"class":469,"line":488},3,[490],{"type":440,"tag":467,"props":491,"children":492},{},[493],{"type":445,"value":494},"解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",{"type":440,"tag":441,"props":496,"children":497},{},[498],{"type":445,"value":499},"示例 2：",{"type":440,"tag":457,"props":501,"children":503},{"className":459,"code":502,"language":445,"meta":433,"style":433},"输入：nums = [1]\n输出：1\n",[504],{"type":440,"tag":463,"props":505,"children":506},{"__ignoreMap":433},[507,515],{"type":440,"tag":467,"props":508,"children":509},{"class":469,"line":470},[510],{"type":440,"tag":467,"props":511,"children":512},{},[513],{"type":445,"value":514},"输入：nums = [1]\n",{"type":440,"tag":467,"props":516,"children":517},{"class":469,"line":479},[518],{"type":440,"tag":467,"props":519,"children":520},{},[521],{"type":445,"value":522},"输出：1\n",{"type":440,"tag":441,"props":524,"children":525},{},[526],{"type":445,"value":527},"示例 3：",{"type":440,"tag":457,"props":529,"children":531},{"className":459,"code":530,"language":445,"meta":433,"style":433},"输入：nums = [5,4,-1,7,8]\n输出：23\n",[532],{"type":440,"tag":463,"props":533,"children":534},{"__ignoreMap":433},[535,543],{"type":440,"tag":467,"props":536,"children":537},{"class":469,"line":470},[538],{"type":440,"tag":467,"props":539,"children":540},{},[541],{"type":445,"value":542},"输入：nums = [5,4,-1,7,8]\n",{"type":440,"tag":467,"props":544,"children":545},{"class":469,"line":479},[546],{"type":440,"tag":467,"props":547,"children":548},{},[549],{"type":445,"value":550},"输出：23\n",{"type":440,"tag":441,"props":552,"children":553},{},[554],{"type":445,"value":555},"提示：",{"type":440,"tag":557,"props":558,"children":559},"ul",{},[560,566],{"type":440,"tag":561,"props":562,"children":563},"li",{},[564],{"type":445,"value":565},"1 \u003C= nums.length \u003C= 105",{"type":440,"tag":561,"props":567,"children":568},{},[569],{"type":445,"value":570},"-104 \u003C= nums[i] \u003C= 104",{"type":440,"tag":441,"props":572,"children":573},{},[574],{"type":445,"value":575},"进阶：如果你已经实现复杂度为 O(n) 的解法，尝试使用更为精妙的 分治法 求解。",{"type":440,"tag":577,"props":578,"children":580},"h2",{"id":579},"解题思路",[581],{"type":445,"value":579},{"type":440,"tag":577,"props":583,"children":585},{"id":584},"实现",[586],{"type":445,"value":584},{"type":440,"tag":588,"props":589,"children":591},"h3",{"id":590},"动态规划",[592],{"type":445,"value":590},{"type":440,"tag":457,"props":594,"children":598},{"className":595,"code":596,"language":597,"meta":433,"style":433},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSubArray = function (nums) {\n  let dp = [];\n  dp[0] = nums[0];\n  let res = dp[0];\n  for (let i = 1; i \u003C nums.length; i++) {\n    dp[i] = Math.max(dp[i - 1] + nums[i], nums[i]);\n    res = Math.max(res, dp[i]);\n  }\n  return res;\n};\n","js",[599],{"type":440,"tag":463,"props":600,"children":601},{"__ignoreMap":433},[602,611,637,654,663,707,737,789,826,905,1023,1081,1090,1107],{"type":440,"tag":467,"props":603,"children":604},{"class":469,"line":470},[605],{"type":440,"tag":467,"props":606,"children":608},{"style":607},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[609],{"type":445,"value":610},"/**\n",{"type":440,"tag":467,"props":612,"children":613},{"class":469,"line":479},[614,619,625,631],{"type":440,"tag":467,"props":615,"children":616},{"style":607},[617],{"type":445,"value":618}," * ",{"type":440,"tag":467,"props":620,"children":622},{"style":621},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[623],{"type":445,"value":624},"@param",{"type":440,"tag":467,"props":626,"children":628},{"style":627},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[629],{"type":445,"value":630}," {number[]}",{"type":440,"tag":467,"props":632,"children":634},{"style":633},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[635],{"type":445,"value":636}," nums\n",{"type":440,"tag":467,"props":638,"children":639},{"class":469,"line":488},[640,644,649],{"type":440,"tag":467,"props":641,"children":642},{"style":607},[643],{"type":445,"value":618},{"type":440,"tag":467,"props":645,"children":646},{"style":621},[647],{"type":445,"value":648},"@return",{"type":440,"tag":467,"props":650,"children":651},{"style":627},[652],{"type":445,"value":653}," {number}\n",{"type":440,"tag":467,"props":655,"children":657},{"class":469,"line":656},4,[658],{"type":440,"tag":467,"props":659,"children":660},{"style":607},[661],{"type":445,"value":662}," */\n",{"type":440,"tag":467,"props":664,"children":666},{"class":469,"line":665},5,[667,673,679,685,690,696,702],{"type":440,"tag":467,"props":668,"children":670},{"style":669},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[671],{"type":445,"value":672},"var",{"type":440,"tag":467,"props":674,"children":676},{"style":675},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[677],{"type":445,"value":678}," maxSubArray",{"type":440,"tag":467,"props":680,"children":682},{"style":681},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[683],{"type":445,"value":684}," =",{"type":440,"tag":467,"props":686,"children":687},{"style":669},[688],{"type":445,"value":689}," function",{"type":440,"tag":467,"props":691,"children":693},{"style":692},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[694],{"type":445,"value":695}," (",{"type":440,"tag":467,"props":697,"children":699},{"style":698},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[700],{"type":445,"value":701},"nums",{"type":440,"tag":467,"props":703,"children":704},{"style":692},[705],{"type":445,"value":706},") {\n",{"type":440,"tag":467,"props":708,"children":710},{"class":469,"line":709},6,[711,716,722,726,731],{"type":440,"tag":467,"props":712,"children":713},{"style":669},[714],{"type":445,"value":715},"  let",{"type":440,"tag":467,"props":717,"children":719},{"style":718},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[720],{"type":445,"value":721}," dp",{"type":440,"tag":467,"props":723,"children":724},{"style":681},[725],{"type":445,"value":684},{"type":440,"tag":467,"props":727,"children":728},{"style":692},[729],{"type":445,"value":730}," []",{"type":440,"tag":467,"props":732,"children":734},{"style":733},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[735],{"type":445,"value":736},";\n",{"type":440,"tag":467,"props":738,"children":740},{"class":469,"line":739},7,[741,746,751,757,762,767,772,776,780,785],{"type":440,"tag":467,"props":742,"children":743},{"style":718},[744],{"type":445,"value":745},"  dp",{"type":440,"tag":467,"props":747,"children":748},{"style":692},[749],{"type":445,"value":750},"[",{"type":440,"tag":467,"props":752,"children":754},{"style":753},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[755],{"type":445,"value":756},"0",{"type":440,"tag":467,"props":758,"children":759},{"style":692},[760],{"type":445,"value":761},"] ",{"type":440,"tag":467,"props":763,"children":764},{"style":681},[765],{"type":445,"value":766},"=",{"type":440,"tag":467,"props":768,"children":769},{"style":718},[770],{"type":445,"value":771}," nums",{"type":440,"tag":467,"props":773,"children":774},{"style":692},[775],{"type":445,"value":750},{"type":440,"tag":467,"props":777,"children":778},{"style":753},[779],{"type":445,"value":756},{"type":440,"tag":467,"props":781,"children":782},{"style":692},[783],{"type":445,"value":784},"]",{"type":440,"tag":467,"props":786,"children":787},{"style":733},[788],{"type":445,"value":736},{"type":440,"tag":467,"props":790,"children":792},{"class":469,"line":791},8,[793,797,802,806,810,814,818,822],{"type":440,"tag":467,"props":794,"children":795},{"style":669},[796],{"type":445,"value":715},{"type":440,"tag":467,"props":798,"children":799},{"style":718},[800],{"type":445,"value":801}," res",{"type":440,"tag":467,"props":803,"children":804},{"style":681},[805],{"type":445,"value":684},{"type":440,"tag":467,"props":807,"children":808},{"style":718},[809],{"type":445,"value":721},{"type":440,"tag":467,"props":811,"children":812},{"style":692},[813],{"type":445,"value":750},{"type":440,"tag":467,"props":815,"children":816},{"style":753},[817],{"type":445,"value":756},{"type":440,"tag":467,"props":819,"children":820},{"style":692},[821],{"type":445,"value":784},{"type":440,"tag":467,"props":823,"children":824},{"style":733},[825],{"type":445,"value":736},{"type":440,"tag":467,"props":827,"children":829},{"class":469,"line":828},9,[830,836,840,845,850,854,859,864,868,873,877,883,888,892,896,901],{"type":440,"tag":467,"props":831,"children":833},{"style":832},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[834],{"type":445,"value":835},"  for",{"type":440,"tag":467,"props":837,"children":838},{"style":692},[839],{"type":445,"value":695},{"type":440,"tag":467,"props":841,"children":842},{"style":669},[843],{"type":445,"value":844},"let",{"type":440,"tag":467,"props":846,"children":847},{"style":718},[848],{"type":445,"value":849}," i",{"type":440,"tag":467,"props":851,"children":852},{"style":681},[853],{"type":445,"value":684},{"type":440,"tag":467,"props":855,"children":856},{"style":753},[857],{"type":445,"value":858}," 1",{"type":440,"tag":467,"props":860,"children":861},{"style":733},[862],{"type":445,"value":863},";",{"type":440,"tag":467,"props":865,"children":866},{"style":718},[867],{"type":445,"value":849},{"type":440,"tag":467,"props":869,"children":870},{"style":681},[871],{"type":445,"value":872}," \u003C",{"type":440,"tag":467,"props":874,"children":875},{"style":718},[876],{"type":445,"value":771},{"type":440,"tag":467,"props":878,"children":880},{"style":879},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[881],{"type":445,"value":882},".",{"type":440,"tag":467,"props":884,"children":885},{"style":692},[886],{"type":445,"value":887},"length",{"type":440,"tag":467,"props":889,"children":890},{"style":733},[891],{"type":445,"value":863},{"type":440,"tag":467,"props":893,"children":894},{"style":718},[895],{"type":445,"value":849},{"type":440,"tag":467,"props":897,"children":898},{"style":681},[899],{"type":445,"value":900},"++",{"type":440,"tag":467,"props":902,"children":903},{"style":692},[904],{"type":445,"value":706},{"type":440,"tag":467,"props":906,"children":908},{"class":469,"line":907},10,[909,914,918,923,927,931,936,940,945,950,955,959,963,968,972,976,981,985,989,993,997,1002,1006,1010,1014,1019],{"type":440,"tag":467,"props":910,"children":911},{"style":718},[912],{"type":445,"value":913},"    dp",{"type":440,"tag":467,"props":915,"children":916},{"style":692},[917],{"type":445,"value":750},{"type":440,"tag":467,"props":919,"children":920},{"style":718},[921],{"type":445,"value":922},"i",{"type":440,"tag":467,"props":924,"children":925},{"style":692},[926],{"type":445,"value":761},{"type":440,"tag":467,"props":928,"children":929},{"style":681},[930],{"type":445,"value":766},{"type":440,"tag":467,"props":932,"children":933},{"style":718},[934],{"type":445,"value":935}," Math",{"type":440,"tag":467,"props":937,"children":938},{"style":879},[939],{"type":445,"value":882},{"type":440,"tag":467,"props":941,"children":942},{"style":675},[943],{"type":445,"value":944},"max",{"type":440,"tag":467,"props":946,"children":947},{"style":692},[948],{"type":445,"value":949},"(",{"type":440,"tag":467,"props":951,"children":952},{"style":718},[953],{"type":445,"value":954},"dp",{"type":440,"tag":467,"props":956,"children":957},{"style":692},[958],{"type":445,"value":750},{"type":440,"tag":467,"props":960,"children":961},{"style":718},[962],{"type":445,"value":922},{"type":440,"tag":467,"props":964,"children":965},{"style":681},[966],{"type":445,"value":967}," -",{"type":440,"tag":467,"props":969,"children":970},{"style":753},[971],{"type":445,"value":858},{"type":440,"tag":467,"props":973,"children":974},{"style":692},[975],{"type":445,"value":761},{"type":440,"tag":467,"props":977,"children":978},{"style":681},[979],{"type":445,"value":980},"+",{"type":440,"tag":467,"props":982,"children":983},{"style":718},[984],{"type":445,"value":771},{"type":440,"tag":467,"props":986,"children":987},{"style":692},[988],{"type":445,"value":750},{"type":440,"tag":467,"props":990,"children":991},{"style":718},[992],{"type":445,"value":922},{"type":440,"tag":467,"props":994,"children":995},{"style":692},[996],{"type":445,"value":784},{"type":440,"tag":467,"props":998,"children":999},{"style":733},[1000],{"type":445,"value":1001},",",{"type":440,"tag":467,"props":1003,"children":1004},{"style":718},[1005],{"type":445,"value":771},{"type":440,"tag":467,"props":1007,"children":1008},{"style":692},[1009],{"type":445,"value":750},{"type":440,"tag":467,"props":1011,"children":1012},{"style":718},[1013],{"type":445,"value":922},{"type":440,"tag":467,"props":1015,"children":1016},{"style":692},[1017],{"type":445,"value":1018},"])",{"type":440,"tag":467,"props":1020,"children":1021},{"style":733},[1022],{"type":445,"value":736},{"type":440,"tag":467,"props":1024,"children":1026},{"class":469,"line":1025},11,[1027,1032,1036,1040,1044,1048,1052,1057,1061,1065,1069,1073,1077],{"type":440,"tag":467,"props":1028,"children":1029},{"style":718},[1030],{"type":445,"value":1031},"    res",{"type":440,"tag":467,"props":1033,"children":1034},{"style":681},[1035],{"type":445,"value":684},{"type":440,"tag":467,"props":1037,"children":1038},{"style":718},[1039],{"type":445,"value":935},{"type":440,"tag":467,"props":1041,"children":1042},{"style":879},[1043],{"type":445,"value":882},{"type":440,"tag":467,"props":1045,"children":1046},{"style":675},[1047],{"type":445,"value":944},{"type":440,"tag":467,"props":1049,"children":1050},{"style":692},[1051],{"type":445,"value":949},{"type":440,"tag":467,"props":1053,"children":1054},{"style":718},[1055],{"type":445,"value":1056},"res",{"type":440,"tag":467,"props":1058,"children":1059},{"style":733},[1060],{"type":445,"value":1001},{"type":440,"tag":467,"props":1062,"children":1063},{"style":718},[1064],{"type":445,"value":721},{"type":440,"tag":467,"props":1066,"children":1067},{"style":692},[1068],{"type":445,"value":750},{"type":440,"tag":467,"props":1070,"children":1071},{"style":718},[1072],{"type":445,"value":922},{"type":440,"tag":467,"props":1074,"children":1075},{"style":692},[1076],{"type":445,"value":1018},{"type":440,"tag":467,"props":1078,"children":1079},{"style":733},[1080],{"type":445,"value":736},{"type":440,"tag":467,"props":1082,"children":1084},{"class":469,"line":1083},12,[1085],{"type":440,"tag":467,"props":1086,"children":1087},{"style":692},[1088],{"type":445,"value":1089},"  }\n",{"type":440,"tag":467,"props":1091,"children":1093},{"class":469,"line":1092},13,[1094,1099,1103],{"type":440,"tag":467,"props":1095,"children":1096},{"style":832},[1097],{"type":445,"value":1098},"  return",{"type":440,"tag":467,"props":1100,"children":1101},{"style":718},[1102],{"type":445,"value":801},{"type":440,"tag":467,"props":1104,"children":1105},{"style":733},[1106],{"type":445,"value":736},{"type":440,"tag":467,"props":1108,"children":1110},{"class":469,"line":1109},14,[1111,1116],{"type":440,"tag":467,"props":1112,"children":1113},{"style":692},[1114],{"type":445,"value":1115},"}",{"type":440,"tag":467,"props":1117,"children":1118},{"style":733},[1119],{"type":445,"value":736},{"type":440,"tag":1121,"props":1122,"children":1123},"style",{},[1124],{"type":445,"value":1125},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":433,"searchDepth":665,"depth":665,"links":1127},[1128,1129],{"id":579,"depth":479,"text":579},{"id":584,"depth":479,"text":584,"children":1130},[1131],{"id":590,"depth":488,"text":590},"markdown","content:1.algorithm:3.leetcode:53.maximum-subarray.md","content","1.algorithm/3.leetcode/53.maximum-subarray.md","md",[1138,1140],{"_path":92,"title":91,"description":1139},"给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。",{"_path":98,"title":97,"description":1141},"以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [start_i, end_i] 。请你合并所有重叠的区间，并返回 一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间 。",1713426810448]