[{"data":1,"prerenderedAt":1139},["Reactive",2],{"navigation":3,"/algorithm/leetcode/maximum-subarray":427,"/algorithm/leetcode/maximum-subarray-surround":1134},[4,237,265,406,413],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,399],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":382,"_path":383},"随机数","/frontend-code-assessment/scene/random-number",{"title":385,"_path":386},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":388,"_path":389},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":391,"_path":392},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":394,"_path":395},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":397,"_path":398},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":400,"_path":401,"children":402},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[403],{"title":404,"_path":405},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":407,"_path":408,"children":409},"项目","/pro",[410],{"title":411,"_path":412},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":414,"_path":415,"children":416},"后端语言","/backend-languages",[417],{"title":418,"_path":419,"children":420},"Python","/backend-languages/python",[421,424],{"title":422,"_path":423},"基础","/backend-languages/python/base",{"title":425,"_path":426},"函数","/backend-languages/python/function",{"_path":95,"_dir":428,"_draft":429,"_partial":429,"_locale":430,"title":94,"description":431,"url":432,"body":433,"_type":1129,"_id":1130,"_source":1131,"_file":1132,"_extension":1133},"leetcode",false,"","给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。","https://leetcode.cn/problems/maximum-subarray",{"type":434,"children":435,"toc":1123},"root",[436,443,448,453,492,497,520,525,548,553,568,573,579,584,590,1117],{"type":437,"tag":438,"props":439,"children":440},"element","p",{},[441],{"type":442,"value":431},"text",{"type":437,"tag":438,"props":444,"children":445},{},[446],{"type":442,"value":447},"子数组\n是数组中的一个连续部分。",{"type":437,"tag":438,"props":449,"children":450},{},[451],{"type":442,"value":452},"示例 1：",{"type":437,"tag":454,"props":455,"children":458},"pre",{"className":456,"code":457,"language":442,"meta":430,"style":430},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n输出：6\n解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",[459],{"type":437,"tag":460,"props":461,"children":462},"code",{"__ignoreMap":430},[463,474,483],{"type":437,"tag":464,"props":465,"children":468},"span",{"class":466,"line":467},"line",1,[469],{"type":437,"tag":464,"props":470,"children":471},{},[472],{"type":442,"value":473},"输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n",{"type":437,"tag":464,"props":475,"children":477},{"class":466,"line":476},2,[478],{"type":437,"tag":464,"props":479,"children":480},{},[481],{"type":442,"value":482},"输出：6\n",{"type":437,"tag":464,"props":484,"children":486},{"class":466,"line":485},3,[487],{"type":437,"tag":464,"props":488,"children":489},{},[490],{"type":442,"value":491},"解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",{"type":437,"tag":438,"props":493,"children":494},{},[495],{"type":442,"value":496},"示例 2：",{"type":437,"tag":454,"props":498,"children":500},{"className":456,"code":499,"language":442,"meta":430,"style":430},"输入：nums = [1]\n输出：1\n",[501],{"type":437,"tag":460,"props":502,"children":503},{"__ignoreMap":430},[504,512],{"type":437,"tag":464,"props":505,"children":506},{"class":466,"line":467},[507],{"type":437,"tag":464,"props":508,"children":509},{},[510],{"type":442,"value":511},"输入：nums = [1]\n",{"type":437,"tag":464,"props":513,"children":514},{"class":466,"line":476},[515],{"type":437,"tag":464,"props":516,"children":517},{},[518],{"type":442,"value":519},"输出：1\n",{"type":437,"tag":438,"props":521,"children":522},{},[523],{"type":442,"value":524},"示例 3：",{"type":437,"tag":454,"props":526,"children":528},{"className":456,"code":527,"language":442,"meta":430,"style":430},"输入：nums = [5,4,-1,7,8]\n输出：23\n",[529],{"type":437,"tag":460,"props":530,"children":531},{"__ignoreMap":430},[532,540],{"type":437,"tag":464,"props":533,"children":534},{"class":466,"line":467},[535],{"type":437,"tag":464,"props":536,"children":537},{},[538],{"type":442,"value":539},"输入：nums = [5,4,-1,7,8]\n",{"type":437,"tag":464,"props":541,"children":542},{"class":466,"line":476},[543],{"type":437,"tag":464,"props":544,"children":545},{},[546],{"type":442,"value":547},"输出：23\n",{"type":437,"tag":438,"props":549,"children":550},{},[551],{"type":442,"value":552},"提示：",{"type":437,"tag":554,"props":555,"children":556},"ul",{},[557,563],{"type":437,"tag":558,"props":559,"children":560},"li",{},[561],{"type":442,"value":562},"1 \u003C= nums.length \u003C= 105",{"type":437,"tag":558,"props":564,"children":565},{},[566],{"type":442,"value":567},"-104 \u003C= nums[i] \u003C= 104",{"type":437,"tag":438,"props":569,"children":570},{},[571],{"type":442,"value":572},"进阶：如果你已经实现复杂度为 O(n) 的解法，尝试使用更为精妙的 分治法 求解。",{"type":437,"tag":574,"props":575,"children":577},"h2",{"id":576},"解题思路",[578],{"type":442,"value":576},{"type":437,"tag":574,"props":580,"children":582},{"id":581},"实现",[583],{"type":442,"value":581},{"type":437,"tag":585,"props":586,"children":588},"h3",{"id":587},"动态规划",[589],{"type":442,"value":587},{"type":437,"tag":454,"props":591,"children":595},{"className":592,"code":593,"language":594,"meta":430,"style":430},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSubArray = function (nums) {\n  let dp = [];\n  dp[0] = nums[0];\n  let res = dp[0];\n  for (let i = 1; i \u003C nums.length; i++) {\n    dp[i] = Math.max(dp[i - 1] + nums[i], nums[i]);\n    res = Math.max(res, dp[i]);\n  }\n  return res;\n};\n","js",[596],{"type":437,"tag":460,"props":597,"children":598},{"__ignoreMap":430},[599,608,634,651,660,704,734,786,823,902,1020,1078,1087,1104],{"type":437,"tag":464,"props":600,"children":601},{"class":466,"line":467},[602],{"type":437,"tag":464,"props":603,"children":605},{"style":604},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[606],{"type":442,"value":607},"/**\n",{"type":437,"tag":464,"props":609,"children":610},{"class":466,"line":476},[611,616,622,628],{"type":437,"tag":464,"props":612,"children":613},{"style":604},[614],{"type":442,"value":615}," * ",{"type":437,"tag":464,"props":617,"children":619},{"style":618},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[620],{"type":442,"value":621},"@param",{"type":437,"tag":464,"props":623,"children":625},{"style":624},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[626],{"type":442,"value":627}," {number[]}",{"type":437,"tag":464,"props":629,"children":631},{"style":630},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[632],{"type":442,"value":633}," nums\n",{"type":437,"tag":464,"props":635,"children":636},{"class":466,"line":485},[637,641,646],{"type":437,"tag":464,"props":638,"children":639},{"style":604},[640],{"type":442,"value":615},{"type":437,"tag":464,"props":642,"children":643},{"style":618},[644],{"type":442,"value":645},"@return",{"type":437,"tag":464,"props":647,"children":648},{"style":624},[649],{"type":442,"value":650}," {number}\n",{"type":437,"tag":464,"props":652,"children":654},{"class":466,"line":653},4,[655],{"type":437,"tag":464,"props":656,"children":657},{"style":604},[658],{"type":442,"value":659}," */\n",{"type":437,"tag":464,"props":661,"children":663},{"class":466,"line":662},5,[664,670,676,682,687,693,699],{"type":437,"tag":464,"props":665,"children":667},{"style":666},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[668],{"type":442,"value":669},"var",{"type":437,"tag":464,"props":671,"children":673},{"style":672},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[674],{"type":442,"value":675}," maxSubArray",{"type":437,"tag":464,"props":677,"children":679},{"style":678},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[680],{"type":442,"value":681}," =",{"type":437,"tag":464,"props":683,"children":684},{"style":666},[685],{"type":442,"value":686}," function",{"type":437,"tag":464,"props":688,"children":690},{"style":689},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[691],{"type":442,"value":692}," (",{"type":437,"tag":464,"props":694,"children":696},{"style":695},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[697],{"type":442,"value":698},"nums",{"type":437,"tag":464,"props":700,"children":701},{"style":689},[702],{"type":442,"value":703},") {\n",{"type":437,"tag":464,"props":705,"children":707},{"class":466,"line":706},6,[708,713,719,723,728],{"type":437,"tag":464,"props":709,"children":710},{"style":666},[711],{"type":442,"value":712},"  let",{"type":437,"tag":464,"props":714,"children":716},{"style":715},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[717],{"type":442,"value":718}," dp",{"type":437,"tag":464,"props":720,"children":721},{"style":678},[722],{"type":442,"value":681},{"type":437,"tag":464,"props":724,"children":725},{"style":689},[726],{"type":442,"value":727}," []",{"type":437,"tag":464,"props":729,"children":731},{"style":730},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[732],{"type":442,"value":733},";\n",{"type":437,"tag":464,"props":735,"children":737},{"class":466,"line":736},7,[738,743,748,754,759,764,769,773,777,782],{"type":437,"tag":464,"props":739,"children":740},{"style":715},[741],{"type":442,"value":742},"  dp",{"type":437,"tag":464,"props":744,"children":745},{"style":689},[746],{"type":442,"value":747},"[",{"type":437,"tag":464,"props":749,"children":751},{"style":750},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[752],{"type":442,"value":753},"0",{"type":437,"tag":464,"props":755,"children":756},{"style":689},[757],{"type":442,"value":758},"] ",{"type":437,"tag":464,"props":760,"children":761},{"style":678},[762],{"type":442,"value":763},"=",{"type":437,"tag":464,"props":765,"children":766},{"style":715},[767],{"type":442,"value":768}," nums",{"type":437,"tag":464,"props":770,"children":771},{"style":689},[772],{"type":442,"value":747},{"type":437,"tag":464,"props":774,"children":775},{"style":750},[776],{"type":442,"value":753},{"type":437,"tag":464,"props":778,"children":779},{"style":689},[780],{"type":442,"value":781},"]",{"type":437,"tag":464,"props":783,"children":784},{"style":730},[785],{"type":442,"value":733},{"type":437,"tag":464,"props":787,"children":789},{"class":466,"line":788},8,[790,794,799,803,807,811,815,819],{"type":437,"tag":464,"props":791,"children":792},{"style":666},[793],{"type":442,"value":712},{"type":437,"tag":464,"props":795,"children":796},{"style":715},[797],{"type":442,"value":798}," res",{"type":437,"tag":464,"props":800,"children":801},{"style":678},[802],{"type":442,"value":681},{"type":437,"tag":464,"props":804,"children":805},{"style":715},[806],{"type":442,"value":718},{"type":437,"tag":464,"props":808,"children":809},{"style":689},[810],{"type":442,"value":747},{"type":437,"tag":464,"props":812,"children":813},{"style":750},[814],{"type":442,"value":753},{"type":437,"tag":464,"props":816,"children":817},{"style":689},[818],{"type":442,"value":781},{"type":437,"tag":464,"props":820,"children":821},{"style":730},[822],{"type":442,"value":733},{"type":437,"tag":464,"props":824,"children":826},{"class":466,"line":825},9,[827,833,837,842,847,851,856,861,865,870,874,880,885,889,893,898],{"type":437,"tag":464,"props":828,"children":830},{"style":829},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[831],{"type":442,"value":832},"  for",{"type":437,"tag":464,"props":834,"children":835},{"style":689},[836],{"type":442,"value":692},{"type":437,"tag":464,"props":838,"children":839},{"style":666},[840],{"type":442,"value":841},"let",{"type":437,"tag":464,"props":843,"children":844},{"style":715},[845],{"type":442,"value":846}," i",{"type":437,"tag":464,"props":848,"children":849},{"style":678},[850],{"type":442,"value":681},{"type":437,"tag":464,"props":852,"children":853},{"style":750},[854],{"type":442,"value":855}," 1",{"type":437,"tag":464,"props":857,"children":858},{"style":730},[859],{"type":442,"value":860},";",{"type":437,"tag":464,"props":862,"children":863},{"style":715},[864],{"type":442,"value":846},{"type":437,"tag":464,"props":866,"children":867},{"style":678},[868],{"type":442,"value":869}," \u003C",{"type":437,"tag":464,"props":871,"children":872},{"style":715},[873],{"type":442,"value":768},{"type":437,"tag":464,"props":875,"children":877},{"style":876},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[878],{"type":442,"value":879},".",{"type":437,"tag":464,"props":881,"children":882},{"style":689},[883],{"type":442,"value":884},"length",{"type":437,"tag":464,"props":886,"children":887},{"style":730},[888],{"type":442,"value":860},{"type":437,"tag":464,"props":890,"children":891},{"style":715},[892],{"type":442,"value":846},{"type":437,"tag":464,"props":894,"children":895},{"style":678},[896],{"type":442,"value":897},"++",{"type":437,"tag":464,"props":899,"children":900},{"style":689},[901],{"type":442,"value":703},{"type":437,"tag":464,"props":903,"children":905},{"class":466,"line":904},10,[906,911,915,920,924,928,933,937,942,947,952,956,960,965,969,973,978,982,986,990,994,999,1003,1007,1011,1016],{"type":437,"tag":464,"props":907,"children":908},{"style":715},[909],{"type":442,"value":910},"    dp",{"type":437,"tag":464,"props":912,"children":913},{"style":689},[914],{"type":442,"value":747},{"type":437,"tag":464,"props":916,"children":917},{"style":715},[918],{"type":442,"value":919},"i",{"type":437,"tag":464,"props":921,"children":922},{"style":689},[923],{"type":442,"value":758},{"type":437,"tag":464,"props":925,"children":926},{"style":678},[927],{"type":442,"value":763},{"type":437,"tag":464,"props":929,"children":930},{"style":715},[931],{"type":442,"value":932}," Math",{"type":437,"tag":464,"props":934,"children":935},{"style":876},[936],{"type":442,"value":879},{"type":437,"tag":464,"props":938,"children":939},{"style":672},[940],{"type":442,"value":941},"max",{"type":437,"tag":464,"props":943,"children":944},{"style":689},[945],{"type":442,"value":946},"(",{"type":437,"tag":464,"props":948,"children":949},{"style":715},[950],{"type":442,"value":951},"dp",{"type":437,"tag":464,"props":953,"children":954},{"style":689},[955],{"type":442,"value":747},{"type":437,"tag":464,"props":957,"children":958},{"style":715},[959],{"type":442,"value":919},{"type":437,"tag":464,"props":961,"children":962},{"style":678},[963],{"type":442,"value":964}," -",{"type":437,"tag":464,"props":966,"children":967},{"style":750},[968],{"type":442,"value":855},{"type":437,"tag":464,"props":970,"children":971},{"style":689},[972],{"type":442,"value":758},{"type":437,"tag":464,"props":974,"children":975},{"style":678},[976],{"type":442,"value":977},"+",{"type":437,"tag":464,"props":979,"children":980},{"style":715},[981],{"type":442,"value":768},{"type":437,"tag":464,"props":983,"children":984},{"style":689},[985],{"type":442,"value":747},{"type":437,"tag":464,"props":987,"children":988},{"style":715},[989],{"type":442,"value":919},{"type":437,"tag":464,"props":991,"children":992},{"style":689},[993],{"type":442,"value":781},{"type":437,"tag":464,"props":995,"children":996},{"style":730},[997],{"type":442,"value":998},",",{"type":437,"tag":464,"props":1000,"children":1001},{"style":715},[1002],{"type":442,"value":768},{"type":437,"tag":464,"props":1004,"children":1005},{"style":689},[1006],{"type":442,"value":747},{"type":437,"tag":464,"props":1008,"children":1009},{"style":715},[1010],{"type":442,"value":919},{"type":437,"tag":464,"props":1012,"children":1013},{"style":689},[1014],{"type":442,"value":1015},"])",{"type":437,"tag":464,"props":1017,"children":1018},{"style":730},[1019],{"type":442,"value":733},{"type":437,"tag":464,"props":1021,"children":1023},{"class":466,"line":1022},11,[1024,1029,1033,1037,1041,1045,1049,1054,1058,1062,1066,1070,1074],{"type":437,"tag":464,"props":1025,"children":1026},{"style":715},[1027],{"type":442,"value":1028},"    res",{"type":437,"tag":464,"props":1030,"children":1031},{"style":678},[1032],{"type":442,"value":681},{"type":437,"tag":464,"props":1034,"children":1035},{"style":715},[1036],{"type":442,"value":932},{"type":437,"tag":464,"props":1038,"children":1039},{"style":876},[1040],{"type":442,"value":879},{"type":437,"tag":464,"props":1042,"children":1043},{"style":672},[1044],{"type":442,"value":941},{"type":437,"tag":464,"props":1046,"children":1047},{"style":689},[1048],{"type":442,"value":946},{"type":437,"tag":464,"props":1050,"children":1051},{"style":715},[1052],{"type":442,"value":1053},"res",{"type":437,"tag":464,"props":1055,"children":1056},{"style":730},[1057],{"type":442,"value":998},{"type":437,"tag":464,"props":1059,"children":1060},{"style":715},[1061],{"type":442,"value":718},{"type":437,"tag":464,"props":1063,"children":1064},{"style":689},[1065],{"type":442,"value":747},{"type":437,"tag":464,"props":1067,"children":1068},{"style":715},[1069],{"type":442,"value":919},{"type":437,"tag":464,"props":1071,"children":1072},{"style":689},[1073],{"type":442,"value":1015},{"type":437,"tag":464,"props":1075,"children":1076},{"style":730},[1077],{"type":442,"value":733},{"type":437,"tag":464,"props":1079,"children":1081},{"class":466,"line":1080},12,[1082],{"type":437,"tag":464,"props":1083,"children":1084},{"style":689},[1085],{"type":442,"value":1086},"  }\n",{"type":437,"tag":464,"props":1088,"children":1090},{"class":466,"line":1089},13,[1091,1096,1100],{"type":437,"tag":464,"props":1092,"children":1093},{"style":829},[1094],{"type":442,"value":1095},"  return",{"type":437,"tag":464,"props":1097,"children":1098},{"style":715},[1099],{"type":442,"value":798},{"type":437,"tag":464,"props":1101,"children":1102},{"style":730},[1103],{"type":442,"value":733},{"type":437,"tag":464,"props":1105,"children":1107},{"class":466,"line":1106},14,[1108,1113],{"type":437,"tag":464,"props":1109,"children":1110},{"style":689},[1111],{"type":442,"value":1112},"}",{"type":437,"tag":464,"props":1114,"children":1115},{"style":730},[1116],{"type":442,"value":733},{"type":437,"tag":1118,"props":1119,"children":1120},"style",{},[1121],{"type":442,"value":1122},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":430,"searchDepth":662,"depth":662,"links":1124},[1125,1126],{"id":576,"depth":476,"text":576},{"id":581,"depth":476,"text":581,"children":1127},[1128],{"id":587,"depth":485,"text":587},"markdown","content:1.algorithm:3.leetcode:53.maximum-subarray.md","content","1.algorithm/3.leetcode/53.maximum-subarray.md","md",[1135,1137],{"_path":92,"title":91,"description":1136},"给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。",{"_path":98,"title":97,"description":1138},"以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [start_i, end_i] 。请你合并所有重叠的区间，并返回 一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间 。",1713426448891]