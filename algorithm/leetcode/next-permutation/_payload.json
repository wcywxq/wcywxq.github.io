[{"data":1,"prerenderedAt":1454},["Reactive",2],{"navigation":3,"/algorithm/leetcode/next-permutation":405,"/algorithm/leetcode/next-permutation-surround":1449},[4,237,265,384,391],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,377],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,347,350,353,356,359,362,365,368,371,374],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":348,"_path":349},"倒计时","/frontend-code-assessment/scene/countdown",{"title":351,"_path":352},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":354,"_path":355},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":357,"_path":358},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":360,"_path":361},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":363,"_path":364},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":366,"_path":367},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":369,"_path":370},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":372,"_path":373},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":375,"_path":376},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":378,"_path":379,"children":380},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[381],{"title":382,"_path":383},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":385,"_path":386,"children":387},"项目","/pro",[388],{"title":389,"_path":390},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":392,"_path":393,"children":394},"后端语言","/backend-languages",[395],{"title":396,"_path":397,"children":398},"Python","/backend-languages/python",[399,402],{"title":400,"_path":401},"基础","/backend-languages/python/base",{"title":403,"_path":404},"函数","/backend-languages/python/function",{"_path":74,"_dir":406,"_draft":407,"_partial":407,"_locale":408,"title":73,"description":409,"url":410,"body":411,"_type":1444,"_id":1445,"_source":1446,"_file":1447,"_extension":1448},"leetcode",false,"","整数数组的一个 排列 就是将其所有成员以序列或线性顺序排列。","https://leetcode.cn/problems/next-permutation",{"type":412,"children":413,"toc":1438},"root",[414,421,431,436,454,459,464,469,499,504,527,532,555,560,573,579,584,590,1432],{"type":415,"tag":416,"props":417,"children":418},"element","p",{},[419],{"type":420,"value":409},"text",{"type":415,"tag":422,"props":423,"children":424},"ul",{},[425],{"type":415,"tag":426,"props":427,"children":428},"li",{},[429],{"type":420,"value":430},"例如，arr = [1,2,3] ，以下这些都可以视作 arr 的排列：[1,2,3]、[1,3,2]、[3,1,2]、[2,3,1] 。",{"type":415,"tag":416,"props":432,"children":433},{},[434],{"type":420,"value":435},"整数数组的 下一个排列 是指其整数的下一个字典序更大的排列。更正式地，如果数组的所有排列根据其字典顺序从小到大排列在一个容器中，那么数组的 下一个排列 就是在这个有序容器中排在它后面的那个排列。如果不存在下一个更大的排列，那么这个数组必须重排为字典序最小的排列（即，其元素按升序排列）。",{"type":415,"tag":422,"props":437,"children":438},{},[439,444,449],{"type":415,"tag":426,"props":440,"children":441},{},[442],{"type":420,"value":443},"例如，arr = [1,2,3] 的下一个排列是 [1,3,2] 。",{"type":415,"tag":426,"props":445,"children":446},{},[447],{"type":420,"value":448},"类似地，arr = [2,3,1] 的下一个排列是 [3,1,2] 。",{"type":415,"tag":426,"props":450,"children":451},{},[452],{"type":420,"value":453},"而 arr = [3,2,1] 的下一个排列是 [1,2,3] ，因为 [3,2,1] 不存在一个字典序更大的排列。",{"type":415,"tag":416,"props":455,"children":456},{},[457],{"type":420,"value":458},"给你一个整数数组 nums ，找出 nums 的下一个排列。",{"type":415,"tag":416,"props":460,"children":461},{},[462],{"type":420,"value":463},"必须 原地 修改，只允许使用额外常数空间。",{"type":415,"tag":416,"props":465,"children":466},{},[467],{"type":420,"value":468},"示例 1：",{"type":415,"tag":470,"props":471,"children":474},"pre",{"className":472,"code":473,"language":420,"meta":408,"style":408},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3]\n输出：[1,3,2]\n",[475],{"type":415,"tag":476,"props":477,"children":478},"code",{"__ignoreMap":408},[479,490],{"type":415,"tag":480,"props":481,"children":484},"span",{"class":482,"line":483},"line",1,[485],{"type":415,"tag":480,"props":486,"children":487},{},[488],{"type":420,"value":489},"输入：nums = [1,2,3]\n",{"type":415,"tag":480,"props":491,"children":493},{"class":482,"line":492},2,[494],{"type":415,"tag":480,"props":495,"children":496},{},[497],{"type":420,"value":498},"输出：[1,3,2]\n",{"type":415,"tag":416,"props":500,"children":501},{},[502],{"type":420,"value":503},"示例 2：",{"type":415,"tag":470,"props":505,"children":507},{"className":472,"code":506,"language":420,"meta":408,"style":408},"输入：nums = [3,2,1]\n输出：[1,2,3]\n",[508],{"type":415,"tag":476,"props":509,"children":510},{"__ignoreMap":408},[511,519],{"type":415,"tag":480,"props":512,"children":513},{"class":482,"line":483},[514],{"type":415,"tag":480,"props":515,"children":516},{},[517],{"type":420,"value":518},"输入：nums = [3,2,1]\n",{"type":415,"tag":480,"props":520,"children":521},{"class":482,"line":492},[522],{"type":415,"tag":480,"props":523,"children":524},{},[525],{"type":420,"value":526},"输出：[1,2,3]\n",{"type":415,"tag":416,"props":528,"children":529},{},[530],{"type":420,"value":531},"示例 3：",{"type":415,"tag":470,"props":533,"children":535},{"className":472,"code":534,"language":420,"meta":408,"style":408},"输入：nums = [1,1,5]\n输出：[1,5,1]\n",[536],{"type":415,"tag":476,"props":537,"children":538},{"__ignoreMap":408},[539,547],{"type":415,"tag":480,"props":540,"children":541},{"class":482,"line":483},[542],{"type":415,"tag":480,"props":543,"children":544},{},[545],{"type":420,"value":546},"输入：nums = [1,1,5]\n",{"type":415,"tag":480,"props":548,"children":549},{"class":482,"line":492},[550],{"type":415,"tag":480,"props":551,"children":552},{},[553],{"type":420,"value":554},"输出：[1,5,1]\n",{"type":415,"tag":416,"props":556,"children":557},{},[558],{"type":420,"value":559},"提示：",{"type":415,"tag":422,"props":561,"children":562},{},[563,568],{"type":415,"tag":426,"props":564,"children":565},{},[566],{"type":420,"value":567},"1 \u003C= nums.length \u003C= 100",{"type":415,"tag":426,"props":569,"children":570},{},[571],{"type":420,"value":572},"0 \u003C= nums[i] \u003C= 100",{"type":415,"tag":574,"props":575,"children":577},"h2",{"id":576},"解题思路",[578],{"type":420,"value":576},{"type":415,"tag":574,"props":580,"children":582},{"id":581},"实现",[583],{"type":420,"value":581},{"type":415,"tag":585,"props":586,"children":588},"h3",{"id":587},"双指针",[589],{"type":420,"value":587},{"type":415,"tag":470,"props":591,"children":595},{"className":592,"code":593,"language":594,"meta":408,"style":408},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar nextPermutation = function (nums) {\n  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n  let i = nums.length - 2;\n  while (i >= 0 && nums[i] >= nums[i + 1]) {\n    i--;\n  }\n  // i 在数组中存在，进行交换\n  if (i >= 0) {\n    let j = nums.length - 1;\n    while (j >= 0 && nums[i] >= nums[j]) {\n      j--;\n    }\n    // 交换\n    [nums[i], nums[j]] = [nums[j], nums[i]];\n  }\n  // i 不存在，说明是递减序列，则 i 是 -1\n  let l = i + 1;\n  let r = nums.length - 1;\n  while (l \u003C r) {\n    [nums[l], nums[r]] = [nums[r], nums[l]];\n    l++;\n    r--;\n  }\n};\n","js",[596],{"type":415,"tag":476,"props":597,"children":598},{"__ignoreMap":408},[599,608,634,657,666,710,719,771,855,873,882,891,920,962,1028,1045,1054,1063,1162,1170,1179,1212,1253,1283,1376,1394,1411,1419],{"type":415,"tag":480,"props":600,"children":601},{"class":482,"line":483},[602],{"type":415,"tag":480,"props":603,"children":605},{"style":604},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[606],{"type":420,"value":607},"/**\n",{"type":415,"tag":480,"props":609,"children":610},{"class":482,"line":492},[611,616,622,628],{"type":415,"tag":480,"props":612,"children":613},{"style":604},[614],{"type":420,"value":615}," * ",{"type":415,"tag":480,"props":617,"children":619},{"style":618},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[620],{"type":420,"value":621},"@param",{"type":415,"tag":480,"props":623,"children":625},{"style":624},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[626],{"type":420,"value":627}," {number[]}",{"type":415,"tag":480,"props":629,"children":631},{"style":630},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[632],{"type":420,"value":633}," nums\n",{"type":415,"tag":480,"props":635,"children":637},{"class":482,"line":636},3,[638,642,647,652],{"type":415,"tag":480,"props":639,"children":640},{"style":604},[641],{"type":420,"value":615},{"type":415,"tag":480,"props":643,"children":644},{"style":618},[645],{"type":420,"value":646},"@return",{"type":415,"tag":480,"props":648,"children":649},{"style":624},[650],{"type":420,"value":651}," {void}",{"type":415,"tag":480,"props":653,"children":654},{"style":604},[655],{"type":420,"value":656}," Do not return anything, modify nums in-place instead.\n",{"type":415,"tag":480,"props":658,"children":660},{"class":482,"line":659},4,[661],{"type":415,"tag":480,"props":662,"children":663},{"style":604},[664],{"type":420,"value":665}," */\n",{"type":415,"tag":480,"props":667,"children":669},{"class":482,"line":668},5,[670,676,682,688,693,699,705],{"type":415,"tag":480,"props":671,"children":673},{"style":672},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[674],{"type":420,"value":675},"var",{"type":415,"tag":480,"props":677,"children":679},{"style":678},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[680],{"type":420,"value":681}," nextPermutation",{"type":415,"tag":480,"props":683,"children":685},{"style":684},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[686],{"type":420,"value":687}," =",{"type":415,"tag":480,"props":689,"children":690},{"style":672},[691],{"type":420,"value":692}," function",{"type":415,"tag":480,"props":694,"children":696},{"style":695},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[697],{"type":420,"value":698}," (",{"type":415,"tag":480,"props":700,"children":702},{"style":701},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[703],{"type":420,"value":704},"nums",{"type":415,"tag":480,"props":706,"children":707},{"style":695},[708],{"type":420,"value":709},") {\n",{"type":415,"tag":480,"props":711,"children":713},{"class":482,"line":712},6,[714],{"type":415,"tag":480,"props":715,"children":716},{"style":604},[717],{"type":420,"value":718},"  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n",{"type":415,"tag":480,"props":720,"children":722},{"class":482,"line":721},7,[723,728,734,738,743,749,754,759,765],{"type":415,"tag":480,"props":724,"children":725},{"style":672},[726],{"type":420,"value":727},"  let",{"type":415,"tag":480,"props":729,"children":731},{"style":730},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[732],{"type":420,"value":733}," i",{"type":415,"tag":480,"props":735,"children":736},{"style":684},[737],{"type":420,"value":687},{"type":415,"tag":480,"props":739,"children":740},{"style":730},[741],{"type":420,"value":742}," nums",{"type":415,"tag":480,"props":744,"children":746},{"style":745},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[747],{"type":420,"value":748},".",{"type":415,"tag":480,"props":750,"children":751},{"style":695},[752],{"type":420,"value":753},"length ",{"type":415,"tag":480,"props":755,"children":756},{"style":684},[757],{"type":420,"value":758},"-",{"type":415,"tag":480,"props":760,"children":762},{"style":761},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[763],{"type":420,"value":764}," 2",{"type":415,"tag":480,"props":766,"children":768},{"style":767},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[769],{"type":420,"value":770},";\n",{"type":415,"tag":480,"props":772,"children":774},{"class":482,"line":773},8,[775,781,785,790,795,800,805,809,814,818,823,828,832,836,840,845,850],{"type":415,"tag":480,"props":776,"children":778},{"style":777},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[779],{"type":420,"value":780},"  while",{"type":415,"tag":480,"props":782,"children":783},{"style":695},[784],{"type":420,"value":698},{"type":415,"tag":480,"props":786,"children":787},{"style":730},[788],{"type":420,"value":789},"i",{"type":415,"tag":480,"props":791,"children":792},{"style":684},[793],{"type":420,"value":794}," >=",{"type":415,"tag":480,"props":796,"children":797},{"style":761},[798],{"type":420,"value":799}," 0",{"type":415,"tag":480,"props":801,"children":802},{"style":684},[803],{"type":420,"value":804}," &&",{"type":415,"tag":480,"props":806,"children":807},{"style":730},[808],{"type":420,"value":742},{"type":415,"tag":480,"props":810,"children":811},{"style":695},[812],{"type":420,"value":813},"[",{"type":415,"tag":480,"props":815,"children":816},{"style":730},[817],{"type":420,"value":789},{"type":415,"tag":480,"props":819,"children":820},{"style":695},[821],{"type":420,"value":822},"] ",{"type":415,"tag":480,"props":824,"children":825},{"style":684},[826],{"type":420,"value":827},">=",{"type":415,"tag":480,"props":829,"children":830},{"style":730},[831],{"type":420,"value":742},{"type":415,"tag":480,"props":833,"children":834},{"style":695},[835],{"type":420,"value":813},{"type":415,"tag":480,"props":837,"children":838},{"style":730},[839],{"type":420,"value":789},{"type":415,"tag":480,"props":841,"children":842},{"style":684},[843],{"type":420,"value":844}," +",{"type":415,"tag":480,"props":846,"children":847},{"style":761},[848],{"type":420,"value":849}," 1",{"type":415,"tag":480,"props":851,"children":852},{"style":695},[853],{"type":420,"value":854},"]) {\n",{"type":415,"tag":480,"props":856,"children":858},{"class":482,"line":857},9,[859,864,869],{"type":415,"tag":480,"props":860,"children":861},{"style":730},[862],{"type":420,"value":863},"    i",{"type":415,"tag":480,"props":865,"children":866},{"style":684},[867],{"type":420,"value":868},"--",{"type":415,"tag":480,"props":870,"children":871},{"style":767},[872],{"type":420,"value":770},{"type":415,"tag":480,"props":874,"children":876},{"class":482,"line":875},10,[877],{"type":415,"tag":480,"props":878,"children":879},{"style":695},[880],{"type":420,"value":881},"  }\n",{"type":415,"tag":480,"props":883,"children":885},{"class":482,"line":884},11,[886],{"type":415,"tag":480,"props":887,"children":888},{"style":604},[889],{"type":420,"value":890},"  // i 在数组中存在，进行交换\n",{"type":415,"tag":480,"props":892,"children":894},{"class":482,"line":893},12,[895,900,904,908,912,916],{"type":415,"tag":480,"props":896,"children":897},{"style":777},[898],{"type":420,"value":899},"  if",{"type":415,"tag":480,"props":901,"children":902},{"style":695},[903],{"type":420,"value":698},{"type":415,"tag":480,"props":905,"children":906},{"style":730},[907],{"type":420,"value":789},{"type":415,"tag":480,"props":909,"children":910},{"style":684},[911],{"type":420,"value":794},{"type":415,"tag":480,"props":913,"children":914},{"style":761},[915],{"type":420,"value":799},{"type":415,"tag":480,"props":917,"children":918},{"style":695},[919],{"type":420,"value":709},{"type":415,"tag":480,"props":921,"children":923},{"class":482,"line":922},13,[924,929,934,938,942,946,950,954,958],{"type":415,"tag":480,"props":925,"children":926},{"style":672},[927],{"type":420,"value":928},"    let",{"type":415,"tag":480,"props":930,"children":931},{"style":730},[932],{"type":420,"value":933}," j",{"type":415,"tag":480,"props":935,"children":936},{"style":684},[937],{"type":420,"value":687},{"type":415,"tag":480,"props":939,"children":940},{"style":730},[941],{"type":420,"value":742},{"type":415,"tag":480,"props":943,"children":944},{"style":745},[945],{"type":420,"value":748},{"type":415,"tag":480,"props":947,"children":948},{"style":695},[949],{"type":420,"value":753},{"type":415,"tag":480,"props":951,"children":952},{"style":684},[953],{"type":420,"value":758},{"type":415,"tag":480,"props":955,"children":956},{"style":761},[957],{"type":420,"value":849},{"type":415,"tag":480,"props":959,"children":960},{"style":767},[961],{"type":420,"value":770},{"type":415,"tag":480,"props":963,"children":965},{"class":482,"line":964},14,[966,971,975,980,984,988,992,996,1000,1004,1008,1012,1016,1020,1024],{"type":415,"tag":480,"props":967,"children":968},{"style":777},[969],{"type":420,"value":970},"    while",{"type":415,"tag":480,"props":972,"children":973},{"style":695},[974],{"type":420,"value":698},{"type":415,"tag":480,"props":976,"children":977},{"style":730},[978],{"type":420,"value":979},"j",{"type":415,"tag":480,"props":981,"children":982},{"style":684},[983],{"type":420,"value":794},{"type":415,"tag":480,"props":985,"children":986},{"style":761},[987],{"type":420,"value":799},{"type":415,"tag":480,"props":989,"children":990},{"style":684},[991],{"type":420,"value":804},{"type":415,"tag":480,"props":993,"children":994},{"style":730},[995],{"type":420,"value":742},{"type":415,"tag":480,"props":997,"children":998},{"style":695},[999],{"type":420,"value":813},{"type":415,"tag":480,"props":1001,"children":1002},{"style":730},[1003],{"type":420,"value":789},{"type":415,"tag":480,"props":1005,"children":1006},{"style":695},[1007],{"type":420,"value":822},{"type":415,"tag":480,"props":1009,"children":1010},{"style":684},[1011],{"type":420,"value":827},{"type":415,"tag":480,"props":1013,"children":1014},{"style":730},[1015],{"type":420,"value":742},{"type":415,"tag":480,"props":1017,"children":1018},{"style":695},[1019],{"type":420,"value":813},{"type":415,"tag":480,"props":1021,"children":1022},{"style":730},[1023],{"type":420,"value":979},{"type":415,"tag":480,"props":1025,"children":1026},{"style":695},[1027],{"type":420,"value":854},{"type":415,"tag":480,"props":1029,"children":1031},{"class":482,"line":1030},15,[1032,1037,1041],{"type":415,"tag":480,"props":1033,"children":1034},{"style":730},[1035],{"type":420,"value":1036},"      j",{"type":415,"tag":480,"props":1038,"children":1039},{"style":684},[1040],{"type":420,"value":868},{"type":415,"tag":480,"props":1042,"children":1043},{"style":767},[1044],{"type":420,"value":770},{"type":415,"tag":480,"props":1046,"children":1048},{"class":482,"line":1047},16,[1049],{"type":415,"tag":480,"props":1050,"children":1051},{"style":695},[1052],{"type":420,"value":1053},"    }\n",{"type":415,"tag":480,"props":1055,"children":1057},{"class":482,"line":1056},17,[1058],{"type":415,"tag":480,"props":1059,"children":1060},{"style":604},[1061],{"type":420,"value":1062},"    // 交换\n",{"type":415,"tag":480,"props":1064,"children":1066},{"class":482,"line":1065},18,[1067,1072,1076,1080,1084,1089,1094,1098,1102,1106,1111,1116,1121,1125,1129,1133,1137,1141,1145,1149,1153,1158],{"type":415,"tag":480,"props":1068,"children":1069},{"style":695},[1070],{"type":420,"value":1071},"    [",{"type":415,"tag":480,"props":1073,"children":1074},{"style":730},[1075],{"type":420,"value":704},{"type":415,"tag":480,"props":1077,"children":1078},{"style":695},[1079],{"type":420,"value":813},{"type":415,"tag":480,"props":1081,"children":1082},{"style":730},[1083],{"type":420,"value":789},{"type":415,"tag":480,"props":1085,"children":1086},{"style":695},[1087],{"type":420,"value":1088},"]",{"type":415,"tag":480,"props":1090,"children":1091},{"style":767},[1092],{"type":420,"value":1093},",",{"type":415,"tag":480,"props":1095,"children":1096},{"style":730},[1097],{"type":420,"value":742},{"type":415,"tag":480,"props":1099,"children":1100},{"style":695},[1101],{"type":420,"value":813},{"type":415,"tag":480,"props":1103,"children":1104},{"style":730},[1105],{"type":420,"value":979},{"type":415,"tag":480,"props":1107,"children":1108},{"style":695},[1109],{"type":420,"value":1110},"]] ",{"type":415,"tag":480,"props":1112,"children":1113},{"style":684},[1114],{"type":420,"value":1115},"=",{"type":415,"tag":480,"props":1117,"children":1118},{"style":695},[1119],{"type":420,"value":1120}," [",{"type":415,"tag":480,"props":1122,"children":1123},{"style":730},[1124],{"type":420,"value":704},{"type":415,"tag":480,"props":1126,"children":1127},{"style":695},[1128],{"type":420,"value":813},{"type":415,"tag":480,"props":1130,"children":1131},{"style":730},[1132],{"type":420,"value":979},{"type":415,"tag":480,"props":1134,"children":1135},{"style":695},[1136],{"type":420,"value":1088},{"type":415,"tag":480,"props":1138,"children":1139},{"style":767},[1140],{"type":420,"value":1093},{"type":415,"tag":480,"props":1142,"children":1143},{"style":730},[1144],{"type":420,"value":742},{"type":415,"tag":480,"props":1146,"children":1147},{"style":695},[1148],{"type":420,"value":813},{"type":415,"tag":480,"props":1150,"children":1151},{"style":730},[1152],{"type":420,"value":789},{"type":415,"tag":480,"props":1154,"children":1155},{"style":695},[1156],{"type":420,"value":1157},"]]",{"type":415,"tag":480,"props":1159,"children":1160},{"style":767},[1161],{"type":420,"value":770},{"type":415,"tag":480,"props":1163,"children":1165},{"class":482,"line":1164},19,[1166],{"type":415,"tag":480,"props":1167,"children":1168},{"style":695},[1169],{"type":420,"value":881},{"type":415,"tag":480,"props":1171,"children":1173},{"class":482,"line":1172},20,[1174],{"type":415,"tag":480,"props":1175,"children":1176},{"style":604},[1177],{"type":420,"value":1178},"  // i 不存在，说明是递减序列，则 i 是 -1\n",{"type":415,"tag":480,"props":1180,"children":1182},{"class":482,"line":1181},21,[1183,1187,1192,1196,1200,1204,1208],{"type":415,"tag":480,"props":1184,"children":1185},{"style":672},[1186],{"type":420,"value":727},{"type":415,"tag":480,"props":1188,"children":1189},{"style":730},[1190],{"type":420,"value":1191}," l",{"type":415,"tag":480,"props":1193,"children":1194},{"style":684},[1195],{"type":420,"value":687},{"type":415,"tag":480,"props":1197,"children":1198},{"style":730},[1199],{"type":420,"value":733},{"type":415,"tag":480,"props":1201,"children":1202},{"style":684},[1203],{"type":420,"value":844},{"type":415,"tag":480,"props":1205,"children":1206},{"style":761},[1207],{"type":420,"value":849},{"type":415,"tag":480,"props":1209,"children":1210},{"style":767},[1211],{"type":420,"value":770},{"type":415,"tag":480,"props":1213,"children":1215},{"class":482,"line":1214},22,[1216,1220,1225,1229,1233,1237,1241,1245,1249],{"type":415,"tag":480,"props":1217,"children":1218},{"style":672},[1219],{"type":420,"value":727},{"type":415,"tag":480,"props":1221,"children":1222},{"style":730},[1223],{"type":420,"value":1224}," r",{"type":415,"tag":480,"props":1226,"children":1227},{"style":684},[1228],{"type":420,"value":687},{"type":415,"tag":480,"props":1230,"children":1231},{"style":730},[1232],{"type":420,"value":742},{"type":415,"tag":480,"props":1234,"children":1235},{"style":745},[1236],{"type":420,"value":748},{"type":415,"tag":480,"props":1238,"children":1239},{"style":695},[1240],{"type":420,"value":753},{"type":415,"tag":480,"props":1242,"children":1243},{"style":684},[1244],{"type":420,"value":758},{"type":415,"tag":480,"props":1246,"children":1247},{"style":761},[1248],{"type":420,"value":849},{"type":415,"tag":480,"props":1250,"children":1251},{"style":767},[1252],{"type":420,"value":770},{"type":415,"tag":480,"props":1254,"children":1256},{"class":482,"line":1255},23,[1257,1261,1265,1270,1275,1279],{"type":415,"tag":480,"props":1258,"children":1259},{"style":777},[1260],{"type":420,"value":780},{"type":415,"tag":480,"props":1262,"children":1263},{"style":695},[1264],{"type":420,"value":698},{"type":415,"tag":480,"props":1266,"children":1267},{"style":730},[1268],{"type":420,"value":1269},"l",{"type":415,"tag":480,"props":1271,"children":1272},{"style":684},[1273],{"type":420,"value":1274}," \u003C",{"type":415,"tag":480,"props":1276,"children":1277},{"style":730},[1278],{"type":420,"value":1224},{"type":415,"tag":480,"props":1280,"children":1281},{"style":695},[1282],{"type":420,"value":709},{"type":415,"tag":480,"props":1284,"children":1286},{"class":482,"line":1285},24,[1287,1291,1295,1299,1303,1307,1311,1315,1319,1324,1328,1332,1336,1340,1344,1348,1352,1356,1360,1364,1368,1372],{"type":415,"tag":480,"props":1288,"children":1289},{"style":695},[1290],{"type":420,"value":1071},{"type":415,"tag":480,"props":1292,"children":1293},{"style":730},[1294],{"type":420,"value":704},{"type":415,"tag":480,"props":1296,"children":1297},{"style":695},[1298],{"type":420,"value":813},{"type":415,"tag":480,"props":1300,"children":1301},{"style":730},[1302],{"type":420,"value":1269},{"type":415,"tag":480,"props":1304,"children":1305},{"style":695},[1306],{"type":420,"value":1088},{"type":415,"tag":480,"props":1308,"children":1309},{"style":767},[1310],{"type":420,"value":1093},{"type":415,"tag":480,"props":1312,"children":1313},{"style":730},[1314],{"type":420,"value":742},{"type":415,"tag":480,"props":1316,"children":1317},{"style":695},[1318],{"type":420,"value":813},{"type":415,"tag":480,"props":1320,"children":1321},{"style":730},[1322],{"type":420,"value":1323},"r",{"type":415,"tag":480,"props":1325,"children":1326},{"style":695},[1327],{"type":420,"value":1110},{"type":415,"tag":480,"props":1329,"children":1330},{"style":684},[1331],{"type":420,"value":1115},{"type":415,"tag":480,"props":1333,"children":1334},{"style":695},[1335],{"type":420,"value":1120},{"type":415,"tag":480,"props":1337,"children":1338},{"style":730},[1339],{"type":420,"value":704},{"type":415,"tag":480,"props":1341,"children":1342},{"style":695},[1343],{"type":420,"value":813},{"type":415,"tag":480,"props":1345,"children":1346},{"style":730},[1347],{"type":420,"value":1323},{"type":415,"tag":480,"props":1349,"children":1350},{"style":695},[1351],{"type":420,"value":1088},{"type":415,"tag":480,"props":1353,"children":1354},{"style":767},[1355],{"type":420,"value":1093},{"type":415,"tag":480,"props":1357,"children":1358},{"style":730},[1359],{"type":420,"value":742},{"type":415,"tag":480,"props":1361,"children":1362},{"style":695},[1363],{"type":420,"value":813},{"type":415,"tag":480,"props":1365,"children":1366},{"style":730},[1367],{"type":420,"value":1269},{"type":415,"tag":480,"props":1369,"children":1370},{"style":695},[1371],{"type":420,"value":1157},{"type":415,"tag":480,"props":1373,"children":1374},{"style":767},[1375],{"type":420,"value":770},{"type":415,"tag":480,"props":1377,"children":1379},{"class":482,"line":1378},25,[1380,1385,1390],{"type":415,"tag":480,"props":1381,"children":1382},{"style":730},[1383],{"type":420,"value":1384},"    l",{"type":415,"tag":480,"props":1386,"children":1387},{"style":684},[1388],{"type":420,"value":1389},"++",{"type":415,"tag":480,"props":1391,"children":1392},{"style":767},[1393],{"type":420,"value":770},{"type":415,"tag":480,"props":1395,"children":1397},{"class":482,"line":1396},26,[1398,1403,1407],{"type":415,"tag":480,"props":1399,"children":1400},{"style":730},[1401],{"type":420,"value":1402},"    r",{"type":415,"tag":480,"props":1404,"children":1405},{"style":684},[1406],{"type":420,"value":868},{"type":415,"tag":480,"props":1408,"children":1409},{"style":767},[1410],{"type":420,"value":770},{"type":415,"tag":480,"props":1412,"children":1414},{"class":482,"line":1413},27,[1415],{"type":415,"tag":480,"props":1416,"children":1417},{"style":695},[1418],{"type":420,"value":881},{"type":415,"tag":480,"props":1420,"children":1422},{"class":482,"line":1421},28,[1423,1428],{"type":415,"tag":480,"props":1424,"children":1425},{"style":695},[1426],{"type":420,"value":1427},"}",{"type":415,"tag":480,"props":1429,"children":1430},{"style":767},[1431],{"type":420,"value":770},{"type":415,"tag":1433,"props":1434,"children":1435},"style",{},[1436],{"type":420,"value":1437},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":408,"searchDepth":668,"depth":668,"links":1439},[1440,1441],{"id":576,"depth":492,"text":576},{"id":581,"depth":492,"text":581,"children":1442},[1443],{"id":587,"depth":636,"text":587},"markdown","content:1.algorithm:3.leetcode:31.next-permutation.md","content","1.algorithm/3.leetcode/31.next-permutation.md","md",[1450,1452],{"_path":71,"title":70,"description":1451},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",{"_path":77,"title":76,"description":1453},"给你一个只包含 '(' 和 ')' 的字符串，找出最长有效（格式正确且连续）括号\n子串\n的长度。",1713320360916]