[{"data":1,"prerenderedAt":1447},["Reactive",2],{"navigation":3,"/algorithm/leetcode/next-permutation":398,"/algorithm/leetcode/next-permutation-surround":1442},[4,237,265,384],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR 169. 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR 187. 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数相加","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,377],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,347,350,353,356,359,362,365,368,371,374],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":348,"_path":349},"倒计时","/frontend-code-assessment/scene/countdown",{"title":351,"_path":352},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":354,"_path":355},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":357,"_path":358},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":360,"_path":361},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":363,"_path":364},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":366,"_path":367},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":369,"_path":370},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":372,"_path":373},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":375,"_path":376},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":378,"_path":379,"children":380},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[381],{"title":382,"_path":383},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":385,"_path":386,"children":387},"后端语言","/backend-languages",[388],{"title":389,"_path":390,"children":391},"Python","/backend-languages/python",[392,395],{"title":393,"_path":394},"基础","/backend-languages/python/base",{"title":396,"_path":397},"函数","/backend-languages/python/function",{"_path":74,"_dir":399,"_draft":400,"_partial":400,"_locale":401,"title":73,"description":402,"url":403,"body":404,"_type":1437,"_id":1438,"_source":1439,"_file":1440,"_extension":1441},"leetcode",false,"","整数数组的一个 排列 就是将其所有成员以序列或线性顺序排列。","https://leetcode.cn/problems/next-permutation",{"type":405,"children":406,"toc":1431},"root",[407,414,424,429,447,452,457,462,492,497,520,525,548,553,566,572,577,583,1425],{"type":408,"tag":409,"props":410,"children":411},"element","p",{},[412],{"type":413,"value":402},"text",{"type":408,"tag":415,"props":416,"children":417},"ul",{},[418],{"type":408,"tag":419,"props":420,"children":421},"li",{},[422],{"type":413,"value":423},"例如，arr = [1,2,3] ，以下这些都可以视作 arr 的排列：[1,2,3]、[1,3,2]、[3,1,2]、[2,3,1] 。",{"type":408,"tag":409,"props":425,"children":426},{},[427],{"type":413,"value":428},"整数数组的 下一个排列 是指其整数的下一个字典序更大的排列。更正式地，如果数组的所有排列根据其字典顺序从小到大排列在一个容器中，那么数组的 下一个排列 就是在这个有序容器中排在它后面的那个排列。如果不存在下一个更大的排列，那么这个数组必须重排为字典序最小的排列（即，其元素按升序排列）。",{"type":408,"tag":415,"props":430,"children":431},{},[432,437,442],{"type":408,"tag":419,"props":433,"children":434},{},[435],{"type":413,"value":436},"例如，arr = [1,2,3] 的下一个排列是 [1,3,2] 。",{"type":408,"tag":419,"props":438,"children":439},{},[440],{"type":413,"value":441},"类似地，arr = [2,3,1] 的下一个排列是 [3,1,2] 。",{"type":408,"tag":419,"props":443,"children":444},{},[445],{"type":413,"value":446},"而 arr = [3,2,1] 的下一个排列是 [1,2,3] ，因为 [3,2,1] 不存在一个字典序更大的排列。",{"type":408,"tag":409,"props":448,"children":449},{},[450],{"type":413,"value":451},"给你一个整数数组 nums ，找出 nums 的下一个排列。",{"type":408,"tag":409,"props":453,"children":454},{},[455],{"type":413,"value":456},"必须 原地 修改，只允许使用额外常数空间。",{"type":408,"tag":409,"props":458,"children":459},{},[460],{"type":413,"value":461},"示例 1：",{"type":408,"tag":463,"props":464,"children":467},"pre",{"className":465,"code":466,"language":413,"meta":401,"style":401},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3]\n输出：[1,3,2]\n",[468],{"type":408,"tag":469,"props":470,"children":471},"code",{"__ignoreMap":401},[472,483],{"type":408,"tag":473,"props":474,"children":477},"span",{"class":475,"line":476},"line",1,[478],{"type":408,"tag":473,"props":479,"children":480},{},[481],{"type":413,"value":482},"输入：nums = [1,2,3]\n",{"type":408,"tag":473,"props":484,"children":486},{"class":475,"line":485},2,[487],{"type":408,"tag":473,"props":488,"children":489},{},[490],{"type":413,"value":491},"输出：[1,3,2]\n",{"type":408,"tag":409,"props":493,"children":494},{},[495],{"type":413,"value":496},"示例 2：",{"type":408,"tag":463,"props":498,"children":500},{"className":465,"code":499,"language":413,"meta":401,"style":401},"输入：nums = [3,2,1]\n输出：[1,2,3]\n",[501],{"type":408,"tag":469,"props":502,"children":503},{"__ignoreMap":401},[504,512],{"type":408,"tag":473,"props":505,"children":506},{"class":475,"line":476},[507],{"type":408,"tag":473,"props":508,"children":509},{},[510],{"type":413,"value":511},"输入：nums = [3,2,1]\n",{"type":408,"tag":473,"props":513,"children":514},{"class":475,"line":485},[515],{"type":408,"tag":473,"props":516,"children":517},{},[518],{"type":413,"value":519},"输出：[1,2,3]\n",{"type":408,"tag":409,"props":521,"children":522},{},[523],{"type":413,"value":524},"示例 3：",{"type":408,"tag":463,"props":526,"children":528},{"className":465,"code":527,"language":413,"meta":401,"style":401},"输入：nums = [1,1,5]\n输出：[1,5,1]\n",[529],{"type":408,"tag":469,"props":530,"children":531},{"__ignoreMap":401},[532,540],{"type":408,"tag":473,"props":533,"children":534},{"class":475,"line":476},[535],{"type":408,"tag":473,"props":536,"children":537},{},[538],{"type":413,"value":539},"输入：nums = [1,1,5]\n",{"type":408,"tag":473,"props":541,"children":542},{"class":475,"line":485},[543],{"type":408,"tag":473,"props":544,"children":545},{},[546],{"type":413,"value":547},"输出：[1,5,1]\n",{"type":408,"tag":409,"props":549,"children":550},{},[551],{"type":413,"value":552},"提示：",{"type":408,"tag":415,"props":554,"children":555},{},[556,561],{"type":408,"tag":419,"props":557,"children":558},{},[559],{"type":413,"value":560},"1 \u003C= nums.length \u003C= 100",{"type":408,"tag":419,"props":562,"children":563},{},[564],{"type":413,"value":565},"0 \u003C= nums[i] \u003C= 100",{"type":408,"tag":567,"props":568,"children":570},"h2",{"id":569},"解题思路",[571],{"type":413,"value":569},{"type":408,"tag":567,"props":573,"children":575},{"id":574},"实现",[576],{"type":413,"value":574},{"type":408,"tag":578,"props":579,"children":581},"h3",{"id":580},"双指针",[582],{"type":413,"value":580},{"type":408,"tag":463,"props":584,"children":588},{"className":585,"code":586,"language":587,"meta":401,"style":401},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar nextPermutation = function (nums) {\n  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n  let i = nums.length - 2;\n  while (i >= 0 && nums[i] >= nums[i + 1]) {\n    i--;\n  }\n  // i 在数组中存在，进行交换\n  if (i >= 0) {\n    let j = nums.length - 1;\n    while (j >= 0 && nums[i] >= nums[j]) {\n      j--;\n    }\n    // 交换\n    [nums[i], nums[j]] = [nums[j], nums[i]];\n  }\n  // i 不存在，说明是递减序列，则 i 是 -1\n  let l = i + 1;\n  let r = nums.length - 1;\n  while (l \u003C r) {\n    [nums[l], nums[r]] = [nums[r], nums[l]];\n    l++;\n    r--;\n  }\n};\n","js",[589],{"type":408,"tag":469,"props":590,"children":591},{"__ignoreMap":401},[592,601,627,650,659,703,712,764,848,866,875,884,913,955,1021,1038,1047,1056,1155,1163,1172,1205,1246,1276,1369,1387,1404,1412],{"type":408,"tag":473,"props":593,"children":594},{"class":475,"line":476},[595],{"type":408,"tag":473,"props":596,"children":598},{"style":597},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[599],{"type":413,"value":600},"/**\n",{"type":408,"tag":473,"props":602,"children":603},{"class":475,"line":485},[604,609,615,621],{"type":408,"tag":473,"props":605,"children":606},{"style":597},[607],{"type":413,"value":608}," * ",{"type":408,"tag":473,"props":610,"children":612},{"style":611},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[613],{"type":413,"value":614},"@param",{"type":408,"tag":473,"props":616,"children":618},{"style":617},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[619],{"type":413,"value":620}," {number[]}",{"type":408,"tag":473,"props":622,"children":624},{"style":623},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[625],{"type":413,"value":626}," nums\n",{"type":408,"tag":473,"props":628,"children":630},{"class":475,"line":629},3,[631,635,640,645],{"type":408,"tag":473,"props":632,"children":633},{"style":597},[634],{"type":413,"value":608},{"type":408,"tag":473,"props":636,"children":637},{"style":611},[638],{"type":413,"value":639},"@return",{"type":408,"tag":473,"props":641,"children":642},{"style":617},[643],{"type":413,"value":644}," {void}",{"type":408,"tag":473,"props":646,"children":647},{"style":597},[648],{"type":413,"value":649}," Do not return anything, modify nums in-place instead.\n",{"type":408,"tag":473,"props":651,"children":653},{"class":475,"line":652},4,[654],{"type":408,"tag":473,"props":655,"children":656},{"style":597},[657],{"type":413,"value":658}," */\n",{"type":408,"tag":473,"props":660,"children":662},{"class":475,"line":661},5,[663,669,675,681,686,692,698],{"type":408,"tag":473,"props":664,"children":666},{"style":665},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[667],{"type":413,"value":668},"var",{"type":408,"tag":473,"props":670,"children":672},{"style":671},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[673],{"type":413,"value":674}," nextPermutation",{"type":408,"tag":473,"props":676,"children":678},{"style":677},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[679],{"type":413,"value":680}," =",{"type":408,"tag":473,"props":682,"children":683},{"style":665},[684],{"type":413,"value":685}," function",{"type":408,"tag":473,"props":687,"children":689},{"style":688},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[690],{"type":413,"value":691}," (",{"type":408,"tag":473,"props":693,"children":695},{"style":694},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[696],{"type":413,"value":697},"nums",{"type":408,"tag":473,"props":699,"children":700},{"style":688},[701],{"type":413,"value":702},") {\n",{"type":408,"tag":473,"props":704,"children":706},{"class":475,"line":705},6,[707],{"type":408,"tag":473,"props":708,"children":709},{"style":597},[710],{"type":413,"value":711},"  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n",{"type":408,"tag":473,"props":713,"children":715},{"class":475,"line":714},7,[716,721,727,731,736,742,747,752,758],{"type":408,"tag":473,"props":717,"children":718},{"style":665},[719],{"type":413,"value":720},"  let",{"type":408,"tag":473,"props":722,"children":724},{"style":723},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[725],{"type":413,"value":726}," i",{"type":408,"tag":473,"props":728,"children":729},{"style":677},[730],{"type":413,"value":680},{"type":408,"tag":473,"props":732,"children":733},{"style":723},[734],{"type":413,"value":735}," nums",{"type":408,"tag":473,"props":737,"children":739},{"style":738},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[740],{"type":413,"value":741},".",{"type":408,"tag":473,"props":743,"children":744},{"style":688},[745],{"type":413,"value":746},"length ",{"type":408,"tag":473,"props":748,"children":749},{"style":677},[750],{"type":413,"value":751},"-",{"type":408,"tag":473,"props":753,"children":755},{"style":754},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[756],{"type":413,"value":757}," 2",{"type":408,"tag":473,"props":759,"children":761},{"style":760},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[762],{"type":413,"value":763},";\n",{"type":408,"tag":473,"props":765,"children":767},{"class":475,"line":766},8,[768,774,778,783,788,793,798,802,807,811,816,821,825,829,833,838,843],{"type":408,"tag":473,"props":769,"children":771},{"style":770},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[772],{"type":413,"value":773},"  while",{"type":408,"tag":473,"props":775,"children":776},{"style":688},[777],{"type":413,"value":691},{"type":408,"tag":473,"props":779,"children":780},{"style":723},[781],{"type":413,"value":782},"i",{"type":408,"tag":473,"props":784,"children":785},{"style":677},[786],{"type":413,"value":787}," >=",{"type":408,"tag":473,"props":789,"children":790},{"style":754},[791],{"type":413,"value":792}," 0",{"type":408,"tag":473,"props":794,"children":795},{"style":677},[796],{"type":413,"value":797}," &&",{"type":408,"tag":473,"props":799,"children":800},{"style":723},[801],{"type":413,"value":735},{"type":408,"tag":473,"props":803,"children":804},{"style":688},[805],{"type":413,"value":806},"[",{"type":408,"tag":473,"props":808,"children":809},{"style":723},[810],{"type":413,"value":782},{"type":408,"tag":473,"props":812,"children":813},{"style":688},[814],{"type":413,"value":815},"] ",{"type":408,"tag":473,"props":817,"children":818},{"style":677},[819],{"type":413,"value":820},">=",{"type":408,"tag":473,"props":822,"children":823},{"style":723},[824],{"type":413,"value":735},{"type":408,"tag":473,"props":826,"children":827},{"style":688},[828],{"type":413,"value":806},{"type":408,"tag":473,"props":830,"children":831},{"style":723},[832],{"type":413,"value":782},{"type":408,"tag":473,"props":834,"children":835},{"style":677},[836],{"type":413,"value":837}," +",{"type":408,"tag":473,"props":839,"children":840},{"style":754},[841],{"type":413,"value":842}," 1",{"type":408,"tag":473,"props":844,"children":845},{"style":688},[846],{"type":413,"value":847},"]) {\n",{"type":408,"tag":473,"props":849,"children":851},{"class":475,"line":850},9,[852,857,862],{"type":408,"tag":473,"props":853,"children":854},{"style":723},[855],{"type":413,"value":856},"    i",{"type":408,"tag":473,"props":858,"children":859},{"style":677},[860],{"type":413,"value":861},"--",{"type":408,"tag":473,"props":863,"children":864},{"style":760},[865],{"type":413,"value":763},{"type":408,"tag":473,"props":867,"children":869},{"class":475,"line":868},10,[870],{"type":408,"tag":473,"props":871,"children":872},{"style":688},[873],{"type":413,"value":874},"  }\n",{"type":408,"tag":473,"props":876,"children":878},{"class":475,"line":877},11,[879],{"type":408,"tag":473,"props":880,"children":881},{"style":597},[882],{"type":413,"value":883},"  // i 在数组中存在，进行交换\n",{"type":408,"tag":473,"props":885,"children":887},{"class":475,"line":886},12,[888,893,897,901,905,909],{"type":408,"tag":473,"props":889,"children":890},{"style":770},[891],{"type":413,"value":892},"  if",{"type":408,"tag":473,"props":894,"children":895},{"style":688},[896],{"type":413,"value":691},{"type":408,"tag":473,"props":898,"children":899},{"style":723},[900],{"type":413,"value":782},{"type":408,"tag":473,"props":902,"children":903},{"style":677},[904],{"type":413,"value":787},{"type":408,"tag":473,"props":906,"children":907},{"style":754},[908],{"type":413,"value":792},{"type":408,"tag":473,"props":910,"children":911},{"style":688},[912],{"type":413,"value":702},{"type":408,"tag":473,"props":914,"children":916},{"class":475,"line":915},13,[917,922,927,931,935,939,943,947,951],{"type":408,"tag":473,"props":918,"children":919},{"style":665},[920],{"type":413,"value":921},"    let",{"type":408,"tag":473,"props":923,"children":924},{"style":723},[925],{"type":413,"value":926}," j",{"type":408,"tag":473,"props":928,"children":929},{"style":677},[930],{"type":413,"value":680},{"type":408,"tag":473,"props":932,"children":933},{"style":723},[934],{"type":413,"value":735},{"type":408,"tag":473,"props":936,"children":937},{"style":738},[938],{"type":413,"value":741},{"type":408,"tag":473,"props":940,"children":941},{"style":688},[942],{"type":413,"value":746},{"type":408,"tag":473,"props":944,"children":945},{"style":677},[946],{"type":413,"value":751},{"type":408,"tag":473,"props":948,"children":949},{"style":754},[950],{"type":413,"value":842},{"type":408,"tag":473,"props":952,"children":953},{"style":760},[954],{"type":413,"value":763},{"type":408,"tag":473,"props":956,"children":958},{"class":475,"line":957},14,[959,964,968,973,977,981,985,989,993,997,1001,1005,1009,1013,1017],{"type":408,"tag":473,"props":960,"children":961},{"style":770},[962],{"type":413,"value":963},"    while",{"type":408,"tag":473,"props":965,"children":966},{"style":688},[967],{"type":413,"value":691},{"type":408,"tag":473,"props":969,"children":970},{"style":723},[971],{"type":413,"value":972},"j",{"type":408,"tag":473,"props":974,"children":975},{"style":677},[976],{"type":413,"value":787},{"type":408,"tag":473,"props":978,"children":979},{"style":754},[980],{"type":413,"value":792},{"type":408,"tag":473,"props":982,"children":983},{"style":677},[984],{"type":413,"value":797},{"type":408,"tag":473,"props":986,"children":987},{"style":723},[988],{"type":413,"value":735},{"type":408,"tag":473,"props":990,"children":991},{"style":688},[992],{"type":413,"value":806},{"type":408,"tag":473,"props":994,"children":995},{"style":723},[996],{"type":413,"value":782},{"type":408,"tag":473,"props":998,"children":999},{"style":688},[1000],{"type":413,"value":815},{"type":408,"tag":473,"props":1002,"children":1003},{"style":677},[1004],{"type":413,"value":820},{"type":408,"tag":473,"props":1006,"children":1007},{"style":723},[1008],{"type":413,"value":735},{"type":408,"tag":473,"props":1010,"children":1011},{"style":688},[1012],{"type":413,"value":806},{"type":408,"tag":473,"props":1014,"children":1015},{"style":723},[1016],{"type":413,"value":972},{"type":408,"tag":473,"props":1018,"children":1019},{"style":688},[1020],{"type":413,"value":847},{"type":408,"tag":473,"props":1022,"children":1024},{"class":475,"line":1023},15,[1025,1030,1034],{"type":408,"tag":473,"props":1026,"children":1027},{"style":723},[1028],{"type":413,"value":1029},"      j",{"type":408,"tag":473,"props":1031,"children":1032},{"style":677},[1033],{"type":413,"value":861},{"type":408,"tag":473,"props":1035,"children":1036},{"style":760},[1037],{"type":413,"value":763},{"type":408,"tag":473,"props":1039,"children":1041},{"class":475,"line":1040},16,[1042],{"type":408,"tag":473,"props":1043,"children":1044},{"style":688},[1045],{"type":413,"value":1046},"    }\n",{"type":408,"tag":473,"props":1048,"children":1050},{"class":475,"line":1049},17,[1051],{"type":408,"tag":473,"props":1052,"children":1053},{"style":597},[1054],{"type":413,"value":1055},"    // 交换\n",{"type":408,"tag":473,"props":1057,"children":1059},{"class":475,"line":1058},18,[1060,1065,1069,1073,1077,1082,1087,1091,1095,1099,1104,1109,1114,1118,1122,1126,1130,1134,1138,1142,1146,1151],{"type":408,"tag":473,"props":1061,"children":1062},{"style":688},[1063],{"type":413,"value":1064},"    [",{"type":408,"tag":473,"props":1066,"children":1067},{"style":723},[1068],{"type":413,"value":697},{"type":408,"tag":473,"props":1070,"children":1071},{"style":688},[1072],{"type":413,"value":806},{"type":408,"tag":473,"props":1074,"children":1075},{"style":723},[1076],{"type":413,"value":782},{"type":408,"tag":473,"props":1078,"children":1079},{"style":688},[1080],{"type":413,"value":1081},"]",{"type":408,"tag":473,"props":1083,"children":1084},{"style":760},[1085],{"type":413,"value":1086},",",{"type":408,"tag":473,"props":1088,"children":1089},{"style":723},[1090],{"type":413,"value":735},{"type":408,"tag":473,"props":1092,"children":1093},{"style":688},[1094],{"type":413,"value":806},{"type":408,"tag":473,"props":1096,"children":1097},{"style":723},[1098],{"type":413,"value":972},{"type":408,"tag":473,"props":1100,"children":1101},{"style":688},[1102],{"type":413,"value":1103},"]] ",{"type":408,"tag":473,"props":1105,"children":1106},{"style":677},[1107],{"type":413,"value":1108},"=",{"type":408,"tag":473,"props":1110,"children":1111},{"style":688},[1112],{"type":413,"value":1113}," [",{"type":408,"tag":473,"props":1115,"children":1116},{"style":723},[1117],{"type":413,"value":697},{"type":408,"tag":473,"props":1119,"children":1120},{"style":688},[1121],{"type":413,"value":806},{"type":408,"tag":473,"props":1123,"children":1124},{"style":723},[1125],{"type":413,"value":972},{"type":408,"tag":473,"props":1127,"children":1128},{"style":688},[1129],{"type":413,"value":1081},{"type":408,"tag":473,"props":1131,"children":1132},{"style":760},[1133],{"type":413,"value":1086},{"type":408,"tag":473,"props":1135,"children":1136},{"style":723},[1137],{"type":413,"value":735},{"type":408,"tag":473,"props":1139,"children":1140},{"style":688},[1141],{"type":413,"value":806},{"type":408,"tag":473,"props":1143,"children":1144},{"style":723},[1145],{"type":413,"value":782},{"type":408,"tag":473,"props":1147,"children":1148},{"style":688},[1149],{"type":413,"value":1150},"]]",{"type":408,"tag":473,"props":1152,"children":1153},{"style":760},[1154],{"type":413,"value":763},{"type":408,"tag":473,"props":1156,"children":1158},{"class":475,"line":1157},19,[1159],{"type":408,"tag":473,"props":1160,"children":1161},{"style":688},[1162],{"type":413,"value":874},{"type":408,"tag":473,"props":1164,"children":1166},{"class":475,"line":1165},20,[1167],{"type":408,"tag":473,"props":1168,"children":1169},{"style":597},[1170],{"type":413,"value":1171},"  // i 不存在，说明是递减序列，则 i 是 -1\n",{"type":408,"tag":473,"props":1173,"children":1175},{"class":475,"line":1174},21,[1176,1180,1185,1189,1193,1197,1201],{"type":408,"tag":473,"props":1177,"children":1178},{"style":665},[1179],{"type":413,"value":720},{"type":408,"tag":473,"props":1181,"children":1182},{"style":723},[1183],{"type":413,"value":1184}," l",{"type":408,"tag":473,"props":1186,"children":1187},{"style":677},[1188],{"type":413,"value":680},{"type":408,"tag":473,"props":1190,"children":1191},{"style":723},[1192],{"type":413,"value":726},{"type":408,"tag":473,"props":1194,"children":1195},{"style":677},[1196],{"type":413,"value":837},{"type":408,"tag":473,"props":1198,"children":1199},{"style":754},[1200],{"type":413,"value":842},{"type":408,"tag":473,"props":1202,"children":1203},{"style":760},[1204],{"type":413,"value":763},{"type":408,"tag":473,"props":1206,"children":1208},{"class":475,"line":1207},22,[1209,1213,1218,1222,1226,1230,1234,1238,1242],{"type":408,"tag":473,"props":1210,"children":1211},{"style":665},[1212],{"type":413,"value":720},{"type":408,"tag":473,"props":1214,"children":1215},{"style":723},[1216],{"type":413,"value":1217}," r",{"type":408,"tag":473,"props":1219,"children":1220},{"style":677},[1221],{"type":413,"value":680},{"type":408,"tag":473,"props":1223,"children":1224},{"style":723},[1225],{"type":413,"value":735},{"type":408,"tag":473,"props":1227,"children":1228},{"style":738},[1229],{"type":413,"value":741},{"type":408,"tag":473,"props":1231,"children":1232},{"style":688},[1233],{"type":413,"value":746},{"type":408,"tag":473,"props":1235,"children":1236},{"style":677},[1237],{"type":413,"value":751},{"type":408,"tag":473,"props":1239,"children":1240},{"style":754},[1241],{"type":413,"value":842},{"type":408,"tag":473,"props":1243,"children":1244},{"style":760},[1245],{"type":413,"value":763},{"type":408,"tag":473,"props":1247,"children":1249},{"class":475,"line":1248},23,[1250,1254,1258,1263,1268,1272],{"type":408,"tag":473,"props":1251,"children":1252},{"style":770},[1253],{"type":413,"value":773},{"type":408,"tag":473,"props":1255,"children":1256},{"style":688},[1257],{"type":413,"value":691},{"type":408,"tag":473,"props":1259,"children":1260},{"style":723},[1261],{"type":413,"value":1262},"l",{"type":408,"tag":473,"props":1264,"children":1265},{"style":677},[1266],{"type":413,"value":1267}," \u003C",{"type":408,"tag":473,"props":1269,"children":1270},{"style":723},[1271],{"type":413,"value":1217},{"type":408,"tag":473,"props":1273,"children":1274},{"style":688},[1275],{"type":413,"value":702},{"type":408,"tag":473,"props":1277,"children":1279},{"class":475,"line":1278},24,[1280,1284,1288,1292,1296,1300,1304,1308,1312,1317,1321,1325,1329,1333,1337,1341,1345,1349,1353,1357,1361,1365],{"type":408,"tag":473,"props":1281,"children":1282},{"style":688},[1283],{"type":413,"value":1064},{"type":408,"tag":473,"props":1285,"children":1286},{"style":723},[1287],{"type":413,"value":697},{"type":408,"tag":473,"props":1289,"children":1290},{"style":688},[1291],{"type":413,"value":806},{"type":408,"tag":473,"props":1293,"children":1294},{"style":723},[1295],{"type":413,"value":1262},{"type":408,"tag":473,"props":1297,"children":1298},{"style":688},[1299],{"type":413,"value":1081},{"type":408,"tag":473,"props":1301,"children":1302},{"style":760},[1303],{"type":413,"value":1086},{"type":408,"tag":473,"props":1305,"children":1306},{"style":723},[1307],{"type":413,"value":735},{"type":408,"tag":473,"props":1309,"children":1310},{"style":688},[1311],{"type":413,"value":806},{"type":408,"tag":473,"props":1313,"children":1314},{"style":723},[1315],{"type":413,"value":1316},"r",{"type":408,"tag":473,"props":1318,"children":1319},{"style":688},[1320],{"type":413,"value":1103},{"type":408,"tag":473,"props":1322,"children":1323},{"style":677},[1324],{"type":413,"value":1108},{"type":408,"tag":473,"props":1326,"children":1327},{"style":688},[1328],{"type":413,"value":1113},{"type":408,"tag":473,"props":1330,"children":1331},{"style":723},[1332],{"type":413,"value":697},{"type":408,"tag":473,"props":1334,"children":1335},{"style":688},[1336],{"type":413,"value":806},{"type":408,"tag":473,"props":1338,"children":1339},{"style":723},[1340],{"type":413,"value":1316},{"type":408,"tag":473,"props":1342,"children":1343},{"style":688},[1344],{"type":413,"value":1081},{"type":408,"tag":473,"props":1346,"children":1347},{"style":760},[1348],{"type":413,"value":1086},{"type":408,"tag":473,"props":1350,"children":1351},{"style":723},[1352],{"type":413,"value":735},{"type":408,"tag":473,"props":1354,"children":1355},{"style":688},[1356],{"type":413,"value":806},{"type":408,"tag":473,"props":1358,"children":1359},{"style":723},[1360],{"type":413,"value":1262},{"type":408,"tag":473,"props":1362,"children":1363},{"style":688},[1364],{"type":413,"value":1150},{"type":408,"tag":473,"props":1366,"children":1367},{"style":760},[1368],{"type":413,"value":763},{"type":408,"tag":473,"props":1370,"children":1372},{"class":475,"line":1371},25,[1373,1378,1383],{"type":408,"tag":473,"props":1374,"children":1375},{"style":723},[1376],{"type":413,"value":1377},"    l",{"type":408,"tag":473,"props":1379,"children":1380},{"style":677},[1381],{"type":413,"value":1382},"++",{"type":408,"tag":473,"props":1384,"children":1385},{"style":760},[1386],{"type":413,"value":763},{"type":408,"tag":473,"props":1388,"children":1390},{"class":475,"line":1389},26,[1391,1396,1400],{"type":408,"tag":473,"props":1392,"children":1393},{"style":723},[1394],{"type":413,"value":1395},"    r",{"type":408,"tag":473,"props":1397,"children":1398},{"style":677},[1399],{"type":413,"value":861},{"type":408,"tag":473,"props":1401,"children":1402},{"style":760},[1403],{"type":413,"value":763},{"type":408,"tag":473,"props":1405,"children":1407},{"class":475,"line":1406},27,[1408],{"type":408,"tag":473,"props":1409,"children":1410},{"style":688},[1411],{"type":413,"value":874},{"type":408,"tag":473,"props":1413,"children":1415},{"class":475,"line":1414},28,[1416,1421],{"type":408,"tag":473,"props":1417,"children":1418},{"style":688},[1419],{"type":413,"value":1420},"}",{"type":408,"tag":473,"props":1422,"children":1423},{"style":760},[1424],{"type":413,"value":763},{"type":408,"tag":1426,"props":1427,"children":1428},"style",{},[1429],{"type":413,"value":1430},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":401,"searchDepth":661,"depth":661,"links":1432},[1433,1434],{"id":569,"depth":485,"text":569},{"id":574,"depth":485,"text":574,"children":1435},[1436],{"id":580,"depth":629,"text":580},"markdown","content:1.algorithm:3.leetcode:31.next-permutation.md","content","1.algorithm/3.leetcode/31.next-permutation.md","md",[1443,1445],{"_path":71,"title":70,"description":1444},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",{"_path":77,"title":76,"description":1446},"给你一个只包含 '(' 和 ')' 的字符串，找出最长有效（格式正确且连续）括号\n子串\n的长度。",1713153292424]