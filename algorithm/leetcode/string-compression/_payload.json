[{"data":1,"prerenderedAt":1337},["Reactive",2],{"navigation":3,"/algorithm/leetcode/string-compression":427,"/algorithm/leetcode/string-compression-surround":1332},[4,237,265,406,413],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,399],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":382,"_path":383},"随机数","/frontend-code-assessment/scene/random-number",{"title":385,"_path":386},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":388,"_path":389},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":391,"_path":392},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":394,"_path":395},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":397,"_path":398},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":400,"_path":401,"children":402},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[403],{"title":404,"_path":405},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":407,"_path":408,"children":409},"项目","/pro",[410],{"title":411,"_path":412},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":414,"_path":415,"children":416},"后端语言","/backend-languages",[417],{"title":418,"_path":419,"children":420},"Python","/backend-languages/python",[421,424],{"title":422,"_path":423},"基础","/backend-languages/python/base",{"title":425,"_path":426},"函数","/backend-languages/python/function",{"_path":206,"_dir":428,"_draft":429,"_partial":429,"_locale":430,"title":205,"description":431,"url":432,"body":433,"_type":1327,"_id":1328,"_source":1329,"_file":1330,"_extension":1331},"leetcode",false,"","给你一个字符数组 chars ，请使用下述算法压缩：","https://leetcode.cn/problems/string-compression",{"type":434,"children":435,"toc":1321},"root",[436,443,448,453,458,463,468,507,512,543,548,579,584,599,605,610,616,1315],{"type":437,"tag":438,"props":439,"children":440},"element","p",{},[441],{"type":442,"value":431},"text",{"type":437,"tag":438,"props":444,"children":445},{},[446],{"type":442,"value":447},"从一个空字符串 s 开始。对于 chars 中的每组 连续重复字符 ：",{"type":437,"tag":438,"props":449,"children":450},{},[451],{"type":442,"value":452},"如果这一组长度为 1 ，则将字符追加到 s 中。\n否则，需要向 s 追加字符，后跟这一组的长度。\n压缩后得到的字符串 s 不应该直接返回 ，需要转储到字符数组 chars 中。需要注意的是，如果组长度为 10 或 10 以上，则在 chars 数组中会被拆分为多个字符。",{"type":437,"tag":438,"props":454,"children":455},{},[456],{"type":442,"value":457},"请在 修改完输入数组后 ，返回该数组的新长度。",{"type":437,"tag":438,"props":459,"children":460},{},[461],{"type":442,"value":462},"你必须设计并实现一个只使用常量额外空间的算法来解决此问题。",{"type":437,"tag":438,"props":464,"children":465},{},[466],{"type":442,"value":467},"示例 1：",{"type":437,"tag":469,"props":470,"children":473},"pre",{"className":471,"code":472,"language":442,"meta":430,"style":430},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",[474],{"type":437,"tag":475,"props":476,"children":477},"code",{"__ignoreMap":430},[478,489,498],{"type":437,"tag":479,"props":480,"children":483},"span",{"class":481,"line":482},"line",1,[484],{"type":437,"tag":479,"props":485,"children":486},{},[487],{"type":442,"value":488},"输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n",{"type":437,"tag":479,"props":490,"children":492},{"class":481,"line":491},2,[493],{"type":437,"tag":479,"props":494,"children":495},{},[496],{"type":442,"value":497},"输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n",{"type":437,"tag":479,"props":499,"children":501},{"class":481,"line":500},3,[502],{"type":437,"tag":479,"props":503,"children":504},{},[505],{"type":442,"value":506},"解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",{"type":437,"tag":438,"props":508,"children":509},{},[510],{"type":442,"value":511},"示例 2：",{"type":437,"tag":469,"props":513,"children":515},{"className":471,"code":514,"language":442,"meta":430,"style":430},"输入：chars = [\"a\"]\n输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",[516],{"type":437,"tag":475,"props":517,"children":518},{"__ignoreMap":430},[519,527,535],{"type":437,"tag":479,"props":520,"children":521},{"class":481,"line":482},[522],{"type":437,"tag":479,"props":523,"children":524},{},[525],{"type":442,"value":526},"输入：chars = [\"a\"]\n",{"type":437,"tag":479,"props":528,"children":529},{"class":481,"line":491},[530],{"type":437,"tag":479,"props":531,"children":532},{},[533],{"type":442,"value":534},"输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n",{"type":437,"tag":479,"props":536,"children":537},{"class":481,"line":500},[538],{"type":437,"tag":479,"props":539,"children":540},{},[541],{"type":442,"value":542},"解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",{"type":437,"tag":438,"props":544,"children":545},{},[546],{"type":442,"value":547},"示例 3：",{"type":437,"tag":469,"props":549,"children":551},{"className":471,"code":550,"language":442,"meta":430,"style":430},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",[552],{"type":437,"tag":475,"props":553,"children":554},{"__ignoreMap":430},[555,563,571],{"type":437,"tag":479,"props":556,"children":557},{"class":481,"line":482},[558],{"type":437,"tag":479,"props":559,"children":560},{},[561],{"type":442,"value":562},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n",{"type":437,"tag":479,"props":564,"children":565},{"class":481,"line":491},[566],{"type":437,"tag":479,"props":567,"children":568},{},[569],{"type":442,"value":570},"输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n",{"type":437,"tag":479,"props":572,"children":573},{"class":481,"line":500},[574],{"type":437,"tag":479,"props":575,"children":576},{},[577],{"type":442,"value":578},"解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",{"type":437,"tag":438,"props":580,"children":581},{},[582],{"type":442,"value":583},"提示：",{"type":437,"tag":585,"props":586,"children":587},"ul",{},[588,594],{"type":437,"tag":589,"props":590,"children":591},"li",{},[592],{"type":442,"value":593},"1 \u003C= chars.length \u003C= 2000",{"type":437,"tag":589,"props":595,"children":596},{},[597],{"type":442,"value":598},"chars[i] 可以是小写英文字母、大写英文字母、数字或符号",{"type":437,"tag":600,"props":601,"children":603},"h2",{"id":602},"解题思路",[604],{"type":442,"value":602},{"type":437,"tag":600,"props":606,"children":608},{"id":607},"实现",[609],{"type":442,"value":607},{"type":437,"tag":611,"props":612,"children":614},"h3",{"id":613},"双指针",[615],{"type":442,"value":613},{"type":437,"tag":469,"props":617,"children":621},{"className":618,"code":619,"language":620,"meta":430,"style":430},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {character[]} chars\n * @return {number}\n */\nvar compress = function (chars) {\n  const len = chars.length;\n  let i = 0;\n  let j = i + 1;\n  let s = \"\";\n\n  while (j \u003C= len) {\n    if (chars[i] !== chars[j]) {\n      s += j - i > 1 ? `${chars[i]}${j - i}` : chars[i];\n      i = j;\n    }\n    j++;\n  }\n\n  for (let i = 0; i \u003C s.length; i++) {\n    chars[i] = s[i];\n  }\n\n  return s.length;\n};\n","js",[622],{"type":437,"tag":475,"props":623,"children":624},{"__ignoreMap":430},[625,634,660,677,686,730,771,799,834,861,871,903,957,1079,1100,1109,1127,1136,1144,1216,1262,1270,1278,1303],{"type":437,"tag":479,"props":626,"children":627},{"class":481,"line":482},[628],{"type":437,"tag":479,"props":629,"children":631},{"style":630},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[632],{"type":442,"value":633},"/**\n",{"type":437,"tag":479,"props":635,"children":636},{"class":481,"line":491},[637,642,648,654],{"type":437,"tag":479,"props":638,"children":639},{"style":630},[640],{"type":442,"value":641}," * ",{"type":437,"tag":479,"props":643,"children":645},{"style":644},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[646],{"type":442,"value":647},"@param",{"type":437,"tag":479,"props":649,"children":651},{"style":650},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[652],{"type":442,"value":653}," {character[]}",{"type":437,"tag":479,"props":655,"children":657},{"style":656},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[658],{"type":442,"value":659}," chars\n",{"type":437,"tag":479,"props":661,"children":662},{"class":481,"line":500},[663,667,672],{"type":437,"tag":479,"props":664,"children":665},{"style":630},[666],{"type":442,"value":641},{"type":437,"tag":479,"props":668,"children":669},{"style":644},[670],{"type":442,"value":671},"@return",{"type":437,"tag":479,"props":673,"children":674},{"style":650},[675],{"type":442,"value":676}," {number}\n",{"type":437,"tag":479,"props":678,"children":680},{"class":481,"line":679},4,[681],{"type":437,"tag":479,"props":682,"children":683},{"style":630},[684],{"type":442,"value":685}," */\n",{"type":437,"tag":479,"props":687,"children":689},{"class":481,"line":688},5,[690,696,702,708,713,719,725],{"type":437,"tag":479,"props":691,"children":693},{"style":692},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[694],{"type":442,"value":695},"var",{"type":437,"tag":479,"props":697,"children":699},{"style":698},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[700],{"type":442,"value":701}," compress",{"type":437,"tag":479,"props":703,"children":705},{"style":704},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[706],{"type":442,"value":707}," =",{"type":437,"tag":479,"props":709,"children":710},{"style":692},[711],{"type":442,"value":712}," function",{"type":437,"tag":479,"props":714,"children":716},{"style":715},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[717],{"type":442,"value":718}," (",{"type":437,"tag":479,"props":720,"children":722},{"style":721},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[723],{"type":442,"value":724},"chars",{"type":437,"tag":479,"props":726,"children":727},{"style":715},[728],{"type":442,"value":729},") {\n",{"type":437,"tag":479,"props":731,"children":733},{"class":481,"line":732},6,[734,739,745,749,754,760,765],{"type":437,"tag":479,"props":735,"children":736},{"style":692},[737],{"type":442,"value":738},"  const",{"type":437,"tag":479,"props":740,"children":742},{"style":741},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[743],{"type":442,"value":744}," len",{"type":437,"tag":479,"props":746,"children":747},{"style":704},[748],{"type":442,"value":707},{"type":437,"tag":479,"props":750,"children":751},{"style":741},[752],{"type":442,"value":753}," chars",{"type":437,"tag":479,"props":755,"children":757},{"style":756},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[758],{"type":442,"value":759},".",{"type":437,"tag":479,"props":761,"children":762},{"style":715},[763],{"type":442,"value":764},"length",{"type":437,"tag":479,"props":766,"children":768},{"style":767},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[769],{"type":442,"value":770},";\n",{"type":437,"tag":479,"props":772,"children":774},{"class":481,"line":773},7,[775,780,785,789,795],{"type":437,"tag":479,"props":776,"children":777},{"style":692},[778],{"type":442,"value":779},"  let",{"type":437,"tag":479,"props":781,"children":782},{"style":741},[783],{"type":442,"value":784}," i",{"type":437,"tag":479,"props":786,"children":787},{"style":704},[788],{"type":442,"value":707},{"type":437,"tag":479,"props":790,"children":792},{"style":791},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[793],{"type":442,"value":794}," 0",{"type":437,"tag":479,"props":796,"children":797},{"style":767},[798],{"type":442,"value":770},{"type":437,"tag":479,"props":800,"children":802},{"class":481,"line":801},8,[803,807,812,816,820,825,830],{"type":437,"tag":479,"props":804,"children":805},{"style":692},[806],{"type":442,"value":779},{"type":437,"tag":479,"props":808,"children":809},{"style":741},[810],{"type":442,"value":811}," j",{"type":437,"tag":479,"props":813,"children":814},{"style":704},[815],{"type":442,"value":707},{"type":437,"tag":479,"props":817,"children":818},{"style":741},[819],{"type":442,"value":784},{"type":437,"tag":479,"props":821,"children":822},{"style":704},[823],{"type":442,"value":824}," +",{"type":437,"tag":479,"props":826,"children":827},{"style":791},[828],{"type":442,"value":829}," 1",{"type":437,"tag":479,"props":831,"children":832},{"style":767},[833],{"type":442,"value":770},{"type":437,"tag":479,"props":835,"children":837},{"class":481,"line":836},9,[838,842,847,851,857],{"type":437,"tag":479,"props":839,"children":840},{"style":692},[841],{"type":442,"value":779},{"type":437,"tag":479,"props":843,"children":844},{"style":741},[845],{"type":442,"value":846}," s",{"type":437,"tag":479,"props":848,"children":849},{"style":704},[850],{"type":442,"value":707},{"type":437,"tag":479,"props":852,"children":854},{"style":853},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[855],{"type":442,"value":856}," \"\"",{"type":437,"tag":479,"props":858,"children":859},{"style":767},[860],{"type":442,"value":770},{"type":437,"tag":479,"props":862,"children":864},{"class":481,"line":863},10,[865],{"type":437,"tag":479,"props":866,"children":868},{"emptyLinePlaceholder":867},true,[869],{"type":442,"value":870},"\n",{"type":437,"tag":479,"props":872,"children":874},{"class":481,"line":873},11,[875,881,885,890,895,899],{"type":437,"tag":479,"props":876,"children":878},{"style":877},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[879],{"type":442,"value":880},"  while",{"type":437,"tag":479,"props":882,"children":883},{"style":715},[884],{"type":442,"value":718},{"type":437,"tag":479,"props":886,"children":887},{"style":741},[888],{"type":442,"value":889},"j",{"type":437,"tag":479,"props":891,"children":892},{"style":704},[893],{"type":442,"value":894}," \u003C=",{"type":437,"tag":479,"props":896,"children":897},{"style":741},[898],{"type":442,"value":744},{"type":437,"tag":479,"props":900,"children":901},{"style":715},[902],{"type":442,"value":729},{"type":437,"tag":479,"props":904,"children":906},{"class":481,"line":905},12,[907,912,916,920,925,930,935,940,944,948,952],{"type":437,"tag":479,"props":908,"children":909},{"style":877},[910],{"type":442,"value":911},"    if",{"type":437,"tag":479,"props":913,"children":914},{"style":715},[915],{"type":442,"value":718},{"type":437,"tag":479,"props":917,"children":918},{"style":741},[919],{"type":442,"value":724},{"type":437,"tag":479,"props":921,"children":922},{"style":715},[923],{"type":442,"value":924},"[",{"type":437,"tag":479,"props":926,"children":927},{"style":741},[928],{"type":442,"value":929},"i",{"type":437,"tag":479,"props":931,"children":932},{"style":715},[933],{"type":442,"value":934},"] ",{"type":437,"tag":479,"props":936,"children":937},{"style":704},[938],{"type":442,"value":939},"!==",{"type":437,"tag":479,"props":941,"children":942},{"style":741},[943],{"type":442,"value":753},{"type":437,"tag":479,"props":945,"children":946},{"style":715},[947],{"type":442,"value":924},{"type":437,"tag":479,"props":949,"children":950},{"style":741},[951],{"type":442,"value":889},{"type":437,"tag":479,"props":953,"children":954},{"style":715},[955],{"type":442,"value":956},"]) {\n",{"type":437,"tag":479,"props":958,"children":960},{"class":481,"line":959},13,[961,966,971,975,980,984,989,993,998,1003,1009,1013,1018,1022,1027,1032,1036,1040,1044,1049,1054,1059,1063,1067,1071,1075],{"type":437,"tag":479,"props":962,"children":963},{"style":741},[964],{"type":442,"value":965},"      s",{"type":437,"tag":479,"props":967,"children":968},{"style":704},[969],{"type":442,"value":970}," +=",{"type":437,"tag":479,"props":972,"children":973},{"style":741},[974],{"type":442,"value":811},{"type":437,"tag":479,"props":976,"children":977},{"style":704},[978],{"type":442,"value":979}," -",{"type":437,"tag":479,"props":981,"children":982},{"style":741},[983],{"type":442,"value":784},{"type":437,"tag":479,"props":985,"children":986},{"style":704},[987],{"type":442,"value":988}," >",{"type":437,"tag":479,"props":990,"children":991},{"style":791},[992],{"type":442,"value":829},{"type":437,"tag":479,"props":994,"children":995},{"style":704},[996],{"type":442,"value":997}," ?",{"type":437,"tag":479,"props":999,"children":1000},{"style":853},[1001],{"type":442,"value":1002}," `",{"type":437,"tag":479,"props":1004,"children":1006},{"style":1005},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#FF8F40",[1007],{"type":442,"value":1008},"${",{"type":437,"tag":479,"props":1010,"children":1011},{"style":741},[1012],{"type":442,"value":724},{"type":437,"tag":479,"props":1014,"children":1016},{"style":1015},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#BFBDB6",[1017],{"type":442,"value":924},{"type":437,"tag":479,"props":1019,"children":1020},{"style":741},[1021],{"type":442,"value":929},{"type":437,"tag":479,"props":1023,"children":1024},{"style":1015},[1025],{"type":442,"value":1026},"]",{"type":437,"tag":479,"props":1028,"children":1029},{"style":1005},[1030],{"type":442,"value":1031},"}${",{"type":437,"tag":479,"props":1033,"children":1034},{"style":741},[1035],{"type":442,"value":889},{"type":437,"tag":479,"props":1037,"children":1038},{"style":704},[1039],{"type":442,"value":979},{"type":437,"tag":479,"props":1041,"children":1042},{"style":741},[1043],{"type":442,"value":784},{"type":437,"tag":479,"props":1045,"children":1046},{"style":1005},[1047],{"type":442,"value":1048},"}",{"type":437,"tag":479,"props":1050,"children":1051},{"style":853},[1052],{"type":442,"value":1053},"`",{"type":437,"tag":479,"props":1055,"children":1056},{"style":704},[1057],{"type":442,"value":1058}," :",{"type":437,"tag":479,"props":1060,"children":1061},{"style":741},[1062],{"type":442,"value":753},{"type":437,"tag":479,"props":1064,"children":1065},{"style":715},[1066],{"type":442,"value":924},{"type":437,"tag":479,"props":1068,"children":1069},{"style":741},[1070],{"type":442,"value":929},{"type":437,"tag":479,"props":1072,"children":1073},{"style":715},[1074],{"type":442,"value":1026},{"type":437,"tag":479,"props":1076,"children":1077},{"style":767},[1078],{"type":442,"value":770},{"type":437,"tag":479,"props":1080,"children":1082},{"class":481,"line":1081},14,[1083,1088,1092,1096],{"type":437,"tag":479,"props":1084,"children":1085},{"style":741},[1086],{"type":442,"value":1087},"      i",{"type":437,"tag":479,"props":1089,"children":1090},{"style":704},[1091],{"type":442,"value":707},{"type":437,"tag":479,"props":1093,"children":1094},{"style":741},[1095],{"type":442,"value":811},{"type":437,"tag":479,"props":1097,"children":1098},{"style":767},[1099],{"type":442,"value":770},{"type":437,"tag":479,"props":1101,"children":1103},{"class":481,"line":1102},15,[1104],{"type":437,"tag":479,"props":1105,"children":1106},{"style":715},[1107],{"type":442,"value":1108},"    }\n",{"type":437,"tag":479,"props":1110,"children":1112},{"class":481,"line":1111},16,[1113,1118,1123],{"type":437,"tag":479,"props":1114,"children":1115},{"style":741},[1116],{"type":442,"value":1117},"    j",{"type":437,"tag":479,"props":1119,"children":1120},{"style":704},[1121],{"type":442,"value":1122},"++",{"type":437,"tag":479,"props":1124,"children":1125},{"style":767},[1126],{"type":442,"value":770},{"type":437,"tag":479,"props":1128,"children":1130},{"class":481,"line":1129},17,[1131],{"type":437,"tag":479,"props":1132,"children":1133},{"style":715},[1134],{"type":442,"value":1135},"  }\n",{"type":437,"tag":479,"props":1137,"children":1139},{"class":481,"line":1138},18,[1140],{"type":437,"tag":479,"props":1141,"children":1142},{"emptyLinePlaceholder":867},[1143],{"type":442,"value":870},{"type":437,"tag":479,"props":1145,"children":1147},{"class":481,"line":1146},19,[1148,1153,1157,1162,1166,1170,1174,1179,1183,1188,1192,1196,1200,1204,1208,1212],{"type":437,"tag":479,"props":1149,"children":1150},{"style":877},[1151],{"type":442,"value":1152},"  for",{"type":437,"tag":479,"props":1154,"children":1155},{"style":715},[1156],{"type":442,"value":718},{"type":437,"tag":479,"props":1158,"children":1159},{"style":692},[1160],{"type":442,"value":1161},"let",{"type":437,"tag":479,"props":1163,"children":1164},{"style":741},[1165],{"type":442,"value":784},{"type":437,"tag":479,"props":1167,"children":1168},{"style":704},[1169],{"type":442,"value":707},{"type":437,"tag":479,"props":1171,"children":1172},{"style":791},[1173],{"type":442,"value":794},{"type":437,"tag":479,"props":1175,"children":1176},{"style":767},[1177],{"type":442,"value":1178},";",{"type":437,"tag":479,"props":1180,"children":1181},{"style":741},[1182],{"type":442,"value":784},{"type":437,"tag":479,"props":1184,"children":1185},{"style":704},[1186],{"type":442,"value":1187}," \u003C",{"type":437,"tag":479,"props":1189,"children":1190},{"style":741},[1191],{"type":442,"value":846},{"type":437,"tag":479,"props":1193,"children":1194},{"style":756},[1195],{"type":442,"value":759},{"type":437,"tag":479,"props":1197,"children":1198},{"style":715},[1199],{"type":442,"value":764},{"type":437,"tag":479,"props":1201,"children":1202},{"style":767},[1203],{"type":442,"value":1178},{"type":437,"tag":479,"props":1205,"children":1206},{"style":741},[1207],{"type":442,"value":784},{"type":437,"tag":479,"props":1209,"children":1210},{"style":704},[1211],{"type":442,"value":1122},{"type":437,"tag":479,"props":1213,"children":1214},{"style":715},[1215],{"type":442,"value":729},{"type":437,"tag":479,"props":1217,"children":1219},{"class":481,"line":1218},20,[1220,1225,1229,1233,1237,1242,1246,1250,1254,1258],{"type":437,"tag":479,"props":1221,"children":1222},{"style":741},[1223],{"type":442,"value":1224},"    chars",{"type":437,"tag":479,"props":1226,"children":1227},{"style":715},[1228],{"type":442,"value":924},{"type":437,"tag":479,"props":1230,"children":1231},{"style":741},[1232],{"type":442,"value":929},{"type":437,"tag":479,"props":1234,"children":1235},{"style":715},[1236],{"type":442,"value":934},{"type":437,"tag":479,"props":1238,"children":1239},{"style":704},[1240],{"type":442,"value":1241},"=",{"type":437,"tag":479,"props":1243,"children":1244},{"style":741},[1245],{"type":442,"value":846},{"type":437,"tag":479,"props":1247,"children":1248},{"style":715},[1249],{"type":442,"value":924},{"type":437,"tag":479,"props":1251,"children":1252},{"style":741},[1253],{"type":442,"value":929},{"type":437,"tag":479,"props":1255,"children":1256},{"style":715},[1257],{"type":442,"value":1026},{"type":437,"tag":479,"props":1259,"children":1260},{"style":767},[1261],{"type":442,"value":770},{"type":437,"tag":479,"props":1263,"children":1265},{"class":481,"line":1264},21,[1266],{"type":437,"tag":479,"props":1267,"children":1268},{"style":715},[1269],{"type":442,"value":1135},{"type":437,"tag":479,"props":1271,"children":1273},{"class":481,"line":1272},22,[1274],{"type":437,"tag":479,"props":1275,"children":1276},{"emptyLinePlaceholder":867},[1277],{"type":442,"value":870},{"type":437,"tag":479,"props":1279,"children":1281},{"class":481,"line":1280},23,[1282,1287,1291,1295,1299],{"type":437,"tag":479,"props":1283,"children":1284},{"style":877},[1285],{"type":442,"value":1286},"  return",{"type":437,"tag":479,"props":1288,"children":1289},{"style":741},[1290],{"type":442,"value":846},{"type":437,"tag":479,"props":1292,"children":1293},{"style":756},[1294],{"type":442,"value":759},{"type":437,"tag":479,"props":1296,"children":1297},{"style":715},[1298],{"type":442,"value":764},{"type":437,"tag":479,"props":1300,"children":1301},{"style":767},[1302],{"type":442,"value":770},{"type":437,"tag":479,"props":1304,"children":1306},{"class":481,"line":1305},24,[1307,1311],{"type":437,"tag":479,"props":1308,"children":1309},{"style":715},[1310],{"type":442,"value":1048},{"type":437,"tag":479,"props":1312,"children":1313},{"style":767},[1314],{"type":442,"value":770},{"type":437,"tag":1316,"props":1317,"children":1318},"style",{},[1319],{"type":442,"value":1320},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":430,"searchDepth":688,"depth":688,"links":1322},[1323,1324],{"id":602,"depth":491,"text":602},{"id":607,"depth":491,"text":607,"children":1325},[1326],{"id":613,"depth":500,"text":613},"markdown","content:1.algorithm:3.leetcode:443.string-compression.md","content","1.algorithm/3.leetcode/443.string-compression.md","md",[1333,1335],{"_path":203,"title":202,"description":1334},"给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。",{"_path":209,"title":208,"description":1336},"斐波那契数 （通常用 F(n) 表示）形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：",1713426452256]