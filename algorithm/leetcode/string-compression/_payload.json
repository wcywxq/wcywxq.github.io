[{"data":1,"prerenderedAt":1334},["Reactive",2],{"navigation":3,"/algorithm/leetcode/string-compression":424,"/algorithm/leetcode/string-compression-surround":1329},[4,237,265,403,410],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,396],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"随机数","/frontend-code-assessment/scene/random-number",{"title":382,"_path":383},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":385,"_path":386},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":388,"_path":389},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":391,"_path":392},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":394,"_path":395},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":397,"_path":398,"children":399},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[400],{"title":401,"_path":402},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":404,"_path":405,"children":406},"项目","/pro",[407],{"title":408,"_path":409},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":411,"_path":412,"children":413},"后端语言","/backend-languages",[414],{"title":415,"_path":416,"children":417},"Python","/backend-languages/python",[418,421],{"title":419,"_path":420},"基础","/backend-languages/python/base",{"title":422,"_path":423},"函数","/backend-languages/python/function",{"_path":206,"_dir":425,"_draft":426,"_partial":426,"_locale":427,"title":205,"description":428,"url":429,"body":430,"_type":1324,"_id":1325,"_source":1326,"_file":1327,"_extension":1328},"leetcode",false,"","给你一个字符数组 chars ，请使用下述算法压缩：","https://leetcode.cn/problems/string-compression",{"type":431,"children":432,"toc":1318},"root",[433,440,445,450,455,460,465,504,509,540,545,576,581,596,602,607,613,1312],{"type":434,"tag":435,"props":436,"children":437},"element","p",{},[438],{"type":439,"value":428},"text",{"type":434,"tag":435,"props":441,"children":442},{},[443],{"type":439,"value":444},"从一个空字符串 s 开始。对于 chars 中的每组 连续重复字符 ：",{"type":434,"tag":435,"props":446,"children":447},{},[448],{"type":439,"value":449},"如果这一组长度为 1 ，则将字符追加到 s 中。\n否则，需要向 s 追加字符，后跟这一组的长度。\n压缩后得到的字符串 s 不应该直接返回 ，需要转储到字符数组 chars 中。需要注意的是，如果组长度为 10 或 10 以上，则在 chars 数组中会被拆分为多个字符。",{"type":434,"tag":435,"props":451,"children":452},{},[453],{"type":439,"value":454},"请在 修改完输入数组后 ，返回该数组的新长度。",{"type":434,"tag":435,"props":456,"children":457},{},[458],{"type":439,"value":459},"你必须设计并实现一个只使用常量额外空间的算法来解决此问题。",{"type":434,"tag":435,"props":461,"children":462},{},[463],{"type":439,"value":464},"示例 1：",{"type":434,"tag":466,"props":467,"children":470},"pre",{"className":468,"code":469,"language":439,"meta":427,"style":427},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",[471],{"type":434,"tag":472,"props":473,"children":474},"code",{"__ignoreMap":427},[475,486,495],{"type":434,"tag":476,"props":477,"children":480},"span",{"class":478,"line":479},"line",1,[481],{"type":434,"tag":476,"props":482,"children":483},{},[484],{"type":439,"value":485},"输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n",{"type":434,"tag":476,"props":487,"children":489},{"class":478,"line":488},2,[490],{"type":434,"tag":476,"props":491,"children":492},{},[493],{"type":439,"value":494},"输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n",{"type":434,"tag":476,"props":496,"children":498},{"class":478,"line":497},3,[499],{"type":434,"tag":476,"props":500,"children":501},{},[502],{"type":439,"value":503},"解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",{"type":434,"tag":435,"props":505,"children":506},{},[507],{"type":439,"value":508},"示例 2：",{"type":434,"tag":466,"props":510,"children":512},{"className":468,"code":511,"language":439,"meta":427,"style":427},"输入：chars = [\"a\"]\n输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",[513],{"type":434,"tag":472,"props":514,"children":515},{"__ignoreMap":427},[516,524,532],{"type":434,"tag":476,"props":517,"children":518},{"class":478,"line":479},[519],{"type":434,"tag":476,"props":520,"children":521},{},[522],{"type":439,"value":523},"输入：chars = [\"a\"]\n",{"type":434,"tag":476,"props":525,"children":526},{"class":478,"line":488},[527],{"type":434,"tag":476,"props":528,"children":529},{},[530],{"type":439,"value":531},"输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n",{"type":434,"tag":476,"props":533,"children":534},{"class":478,"line":497},[535],{"type":434,"tag":476,"props":536,"children":537},{},[538],{"type":439,"value":539},"解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",{"type":434,"tag":435,"props":541,"children":542},{},[543],{"type":439,"value":544},"示例 3：",{"type":434,"tag":466,"props":546,"children":548},{"className":468,"code":547,"language":439,"meta":427,"style":427},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",[549],{"type":434,"tag":472,"props":550,"children":551},{"__ignoreMap":427},[552,560,568],{"type":434,"tag":476,"props":553,"children":554},{"class":478,"line":479},[555],{"type":434,"tag":476,"props":556,"children":557},{},[558],{"type":439,"value":559},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n",{"type":434,"tag":476,"props":561,"children":562},{"class":478,"line":488},[563],{"type":434,"tag":476,"props":564,"children":565},{},[566],{"type":439,"value":567},"输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n",{"type":434,"tag":476,"props":569,"children":570},{"class":478,"line":497},[571],{"type":434,"tag":476,"props":572,"children":573},{},[574],{"type":439,"value":575},"解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",{"type":434,"tag":435,"props":577,"children":578},{},[579],{"type":439,"value":580},"提示：",{"type":434,"tag":582,"props":583,"children":584},"ul",{},[585,591],{"type":434,"tag":586,"props":587,"children":588},"li",{},[589],{"type":439,"value":590},"1 \u003C= chars.length \u003C= 2000",{"type":434,"tag":586,"props":592,"children":593},{},[594],{"type":439,"value":595},"chars[i] 可以是小写英文字母、大写英文字母、数字或符号",{"type":434,"tag":597,"props":598,"children":600},"h2",{"id":599},"解题思路",[601],{"type":439,"value":599},{"type":434,"tag":597,"props":603,"children":605},{"id":604},"实现",[606],{"type":439,"value":604},{"type":434,"tag":608,"props":609,"children":611},"h3",{"id":610},"双指针",[612],{"type":439,"value":610},{"type":434,"tag":466,"props":614,"children":618},{"className":615,"code":616,"language":617,"meta":427,"style":427},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {character[]} chars\n * @return {number}\n */\nvar compress = function (chars) {\n  const len = chars.length;\n  let i = 0;\n  let j = i + 1;\n  let s = \"\";\n\n  while (j \u003C= len) {\n    if (chars[i] !== chars[j]) {\n      s += j - i > 1 ? `${chars[i]}${j - i}` : chars[i];\n      i = j;\n    }\n    j++;\n  }\n\n  for (let i = 0; i \u003C s.length; i++) {\n    chars[i] = s[i];\n  }\n\n  return s.length;\n};\n","js",[619],{"type":434,"tag":472,"props":620,"children":621},{"__ignoreMap":427},[622,631,657,674,683,727,768,796,831,858,868,900,954,1076,1097,1106,1124,1133,1141,1213,1259,1267,1275,1300],{"type":434,"tag":476,"props":623,"children":624},{"class":478,"line":479},[625],{"type":434,"tag":476,"props":626,"children":628},{"style":627},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[629],{"type":439,"value":630},"/**\n",{"type":434,"tag":476,"props":632,"children":633},{"class":478,"line":488},[634,639,645,651],{"type":434,"tag":476,"props":635,"children":636},{"style":627},[637],{"type":439,"value":638}," * ",{"type":434,"tag":476,"props":640,"children":642},{"style":641},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[643],{"type":439,"value":644},"@param",{"type":434,"tag":476,"props":646,"children":648},{"style":647},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[649],{"type":439,"value":650}," {character[]}",{"type":434,"tag":476,"props":652,"children":654},{"style":653},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[655],{"type":439,"value":656}," chars\n",{"type":434,"tag":476,"props":658,"children":659},{"class":478,"line":497},[660,664,669],{"type":434,"tag":476,"props":661,"children":662},{"style":627},[663],{"type":439,"value":638},{"type":434,"tag":476,"props":665,"children":666},{"style":641},[667],{"type":439,"value":668},"@return",{"type":434,"tag":476,"props":670,"children":671},{"style":647},[672],{"type":439,"value":673}," {number}\n",{"type":434,"tag":476,"props":675,"children":677},{"class":478,"line":676},4,[678],{"type":434,"tag":476,"props":679,"children":680},{"style":627},[681],{"type":439,"value":682}," */\n",{"type":434,"tag":476,"props":684,"children":686},{"class":478,"line":685},5,[687,693,699,705,710,716,722],{"type":434,"tag":476,"props":688,"children":690},{"style":689},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[691],{"type":439,"value":692},"var",{"type":434,"tag":476,"props":694,"children":696},{"style":695},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[697],{"type":439,"value":698}," compress",{"type":434,"tag":476,"props":700,"children":702},{"style":701},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[703],{"type":439,"value":704}," =",{"type":434,"tag":476,"props":706,"children":707},{"style":689},[708],{"type":439,"value":709}," function",{"type":434,"tag":476,"props":711,"children":713},{"style":712},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[714],{"type":439,"value":715}," (",{"type":434,"tag":476,"props":717,"children":719},{"style":718},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[720],{"type":439,"value":721},"chars",{"type":434,"tag":476,"props":723,"children":724},{"style":712},[725],{"type":439,"value":726},") {\n",{"type":434,"tag":476,"props":728,"children":730},{"class":478,"line":729},6,[731,736,742,746,751,757,762],{"type":434,"tag":476,"props":732,"children":733},{"style":689},[734],{"type":439,"value":735},"  const",{"type":434,"tag":476,"props":737,"children":739},{"style":738},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[740],{"type":439,"value":741}," len",{"type":434,"tag":476,"props":743,"children":744},{"style":701},[745],{"type":439,"value":704},{"type":434,"tag":476,"props":747,"children":748},{"style":738},[749],{"type":439,"value":750}," chars",{"type":434,"tag":476,"props":752,"children":754},{"style":753},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[755],{"type":439,"value":756},".",{"type":434,"tag":476,"props":758,"children":759},{"style":712},[760],{"type":439,"value":761},"length",{"type":434,"tag":476,"props":763,"children":765},{"style":764},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[766],{"type":439,"value":767},";\n",{"type":434,"tag":476,"props":769,"children":771},{"class":478,"line":770},7,[772,777,782,786,792],{"type":434,"tag":476,"props":773,"children":774},{"style":689},[775],{"type":439,"value":776},"  let",{"type":434,"tag":476,"props":778,"children":779},{"style":738},[780],{"type":439,"value":781}," i",{"type":434,"tag":476,"props":783,"children":784},{"style":701},[785],{"type":439,"value":704},{"type":434,"tag":476,"props":787,"children":789},{"style":788},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[790],{"type":439,"value":791}," 0",{"type":434,"tag":476,"props":793,"children":794},{"style":764},[795],{"type":439,"value":767},{"type":434,"tag":476,"props":797,"children":799},{"class":478,"line":798},8,[800,804,809,813,817,822,827],{"type":434,"tag":476,"props":801,"children":802},{"style":689},[803],{"type":439,"value":776},{"type":434,"tag":476,"props":805,"children":806},{"style":738},[807],{"type":439,"value":808}," j",{"type":434,"tag":476,"props":810,"children":811},{"style":701},[812],{"type":439,"value":704},{"type":434,"tag":476,"props":814,"children":815},{"style":738},[816],{"type":439,"value":781},{"type":434,"tag":476,"props":818,"children":819},{"style":701},[820],{"type":439,"value":821}," +",{"type":434,"tag":476,"props":823,"children":824},{"style":788},[825],{"type":439,"value":826}," 1",{"type":434,"tag":476,"props":828,"children":829},{"style":764},[830],{"type":439,"value":767},{"type":434,"tag":476,"props":832,"children":834},{"class":478,"line":833},9,[835,839,844,848,854],{"type":434,"tag":476,"props":836,"children":837},{"style":689},[838],{"type":439,"value":776},{"type":434,"tag":476,"props":840,"children":841},{"style":738},[842],{"type":439,"value":843}," s",{"type":434,"tag":476,"props":845,"children":846},{"style":701},[847],{"type":439,"value":704},{"type":434,"tag":476,"props":849,"children":851},{"style":850},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[852],{"type":439,"value":853}," \"\"",{"type":434,"tag":476,"props":855,"children":856},{"style":764},[857],{"type":439,"value":767},{"type":434,"tag":476,"props":859,"children":861},{"class":478,"line":860},10,[862],{"type":434,"tag":476,"props":863,"children":865},{"emptyLinePlaceholder":864},true,[866],{"type":439,"value":867},"\n",{"type":434,"tag":476,"props":869,"children":871},{"class":478,"line":870},11,[872,878,882,887,892,896],{"type":434,"tag":476,"props":873,"children":875},{"style":874},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[876],{"type":439,"value":877},"  while",{"type":434,"tag":476,"props":879,"children":880},{"style":712},[881],{"type":439,"value":715},{"type":434,"tag":476,"props":883,"children":884},{"style":738},[885],{"type":439,"value":886},"j",{"type":434,"tag":476,"props":888,"children":889},{"style":701},[890],{"type":439,"value":891}," \u003C=",{"type":434,"tag":476,"props":893,"children":894},{"style":738},[895],{"type":439,"value":741},{"type":434,"tag":476,"props":897,"children":898},{"style":712},[899],{"type":439,"value":726},{"type":434,"tag":476,"props":901,"children":903},{"class":478,"line":902},12,[904,909,913,917,922,927,932,937,941,945,949],{"type":434,"tag":476,"props":905,"children":906},{"style":874},[907],{"type":439,"value":908},"    if",{"type":434,"tag":476,"props":910,"children":911},{"style":712},[912],{"type":439,"value":715},{"type":434,"tag":476,"props":914,"children":915},{"style":738},[916],{"type":439,"value":721},{"type":434,"tag":476,"props":918,"children":919},{"style":712},[920],{"type":439,"value":921},"[",{"type":434,"tag":476,"props":923,"children":924},{"style":738},[925],{"type":439,"value":926},"i",{"type":434,"tag":476,"props":928,"children":929},{"style":712},[930],{"type":439,"value":931},"] ",{"type":434,"tag":476,"props":933,"children":934},{"style":701},[935],{"type":439,"value":936},"!==",{"type":434,"tag":476,"props":938,"children":939},{"style":738},[940],{"type":439,"value":750},{"type":434,"tag":476,"props":942,"children":943},{"style":712},[944],{"type":439,"value":921},{"type":434,"tag":476,"props":946,"children":947},{"style":738},[948],{"type":439,"value":886},{"type":434,"tag":476,"props":950,"children":951},{"style":712},[952],{"type":439,"value":953},"]) {\n",{"type":434,"tag":476,"props":955,"children":957},{"class":478,"line":956},13,[958,963,968,972,977,981,986,990,995,1000,1006,1010,1015,1019,1024,1029,1033,1037,1041,1046,1051,1056,1060,1064,1068,1072],{"type":434,"tag":476,"props":959,"children":960},{"style":738},[961],{"type":439,"value":962},"      s",{"type":434,"tag":476,"props":964,"children":965},{"style":701},[966],{"type":439,"value":967}," +=",{"type":434,"tag":476,"props":969,"children":970},{"style":738},[971],{"type":439,"value":808},{"type":434,"tag":476,"props":973,"children":974},{"style":701},[975],{"type":439,"value":976}," -",{"type":434,"tag":476,"props":978,"children":979},{"style":738},[980],{"type":439,"value":781},{"type":434,"tag":476,"props":982,"children":983},{"style":701},[984],{"type":439,"value":985}," >",{"type":434,"tag":476,"props":987,"children":988},{"style":788},[989],{"type":439,"value":826},{"type":434,"tag":476,"props":991,"children":992},{"style":701},[993],{"type":439,"value":994}," ?",{"type":434,"tag":476,"props":996,"children":997},{"style":850},[998],{"type":439,"value":999}," `",{"type":434,"tag":476,"props":1001,"children":1003},{"style":1002},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#FF8F40",[1004],{"type":439,"value":1005},"${",{"type":434,"tag":476,"props":1007,"children":1008},{"style":738},[1009],{"type":439,"value":721},{"type":434,"tag":476,"props":1011,"children":1013},{"style":1012},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#BFBDB6",[1014],{"type":439,"value":921},{"type":434,"tag":476,"props":1016,"children":1017},{"style":738},[1018],{"type":439,"value":926},{"type":434,"tag":476,"props":1020,"children":1021},{"style":1012},[1022],{"type":439,"value":1023},"]",{"type":434,"tag":476,"props":1025,"children":1026},{"style":1002},[1027],{"type":439,"value":1028},"}${",{"type":434,"tag":476,"props":1030,"children":1031},{"style":738},[1032],{"type":439,"value":886},{"type":434,"tag":476,"props":1034,"children":1035},{"style":701},[1036],{"type":439,"value":976},{"type":434,"tag":476,"props":1038,"children":1039},{"style":738},[1040],{"type":439,"value":781},{"type":434,"tag":476,"props":1042,"children":1043},{"style":1002},[1044],{"type":439,"value":1045},"}",{"type":434,"tag":476,"props":1047,"children":1048},{"style":850},[1049],{"type":439,"value":1050},"`",{"type":434,"tag":476,"props":1052,"children":1053},{"style":701},[1054],{"type":439,"value":1055}," :",{"type":434,"tag":476,"props":1057,"children":1058},{"style":738},[1059],{"type":439,"value":750},{"type":434,"tag":476,"props":1061,"children":1062},{"style":712},[1063],{"type":439,"value":921},{"type":434,"tag":476,"props":1065,"children":1066},{"style":738},[1067],{"type":439,"value":926},{"type":434,"tag":476,"props":1069,"children":1070},{"style":712},[1071],{"type":439,"value":1023},{"type":434,"tag":476,"props":1073,"children":1074},{"style":764},[1075],{"type":439,"value":767},{"type":434,"tag":476,"props":1077,"children":1079},{"class":478,"line":1078},14,[1080,1085,1089,1093],{"type":434,"tag":476,"props":1081,"children":1082},{"style":738},[1083],{"type":439,"value":1084},"      i",{"type":434,"tag":476,"props":1086,"children":1087},{"style":701},[1088],{"type":439,"value":704},{"type":434,"tag":476,"props":1090,"children":1091},{"style":738},[1092],{"type":439,"value":808},{"type":434,"tag":476,"props":1094,"children":1095},{"style":764},[1096],{"type":439,"value":767},{"type":434,"tag":476,"props":1098,"children":1100},{"class":478,"line":1099},15,[1101],{"type":434,"tag":476,"props":1102,"children":1103},{"style":712},[1104],{"type":439,"value":1105},"    }\n",{"type":434,"tag":476,"props":1107,"children":1109},{"class":478,"line":1108},16,[1110,1115,1120],{"type":434,"tag":476,"props":1111,"children":1112},{"style":738},[1113],{"type":439,"value":1114},"    j",{"type":434,"tag":476,"props":1116,"children":1117},{"style":701},[1118],{"type":439,"value":1119},"++",{"type":434,"tag":476,"props":1121,"children":1122},{"style":764},[1123],{"type":439,"value":767},{"type":434,"tag":476,"props":1125,"children":1127},{"class":478,"line":1126},17,[1128],{"type":434,"tag":476,"props":1129,"children":1130},{"style":712},[1131],{"type":439,"value":1132},"  }\n",{"type":434,"tag":476,"props":1134,"children":1136},{"class":478,"line":1135},18,[1137],{"type":434,"tag":476,"props":1138,"children":1139},{"emptyLinePlaceholder":864},[1140],{"type":439,"value":867},{"type":434,"tag":476,"props":1142,"children":1144},{"class":478,"line":1143},19,[1145,1150,1154,1159,1163,1167,1171,1176,1180,1185,1189,1193,1197,1201,1205,1209],{"type":434,"tag":476,"props":1146,"children":1147},{"style":874},[1148],{"type":439,"value":1149},"  for",{"type":434,"tag":476,"props":1151,"children":1152},{"style":712},[1153],{"type":439,"value":715},{"type":434,"tag":476,"props":1155,"children":1156},{"style":689},[1157],{"type":439,"value":1158},"let",{"type":434,"tag":476,"props":1160,"children":1161},{"style":738},[1162],{"type":439,"value":781},{"type":434,"tag":476,"props":1164,"children":1165},{"style":701},[1166],{"type":439,"value":704},{"type":434,"tag":476,"props":1168,"children":1169},{"style":788},[1170],{"type":439,"value":791},{"type":434,"tag":476,"props":1172,"children":1173},{"style":764},[1174],{"type":439,"value":1175},";",{"type":434,"tag":476,"props":1177,"children":1178},{"style":738},[1179],{"type":439,"value":781},{"type":434,"tag":476,"props":1181,"children":1182},{"style":701},[1183],{"type":439,"value":1184}," \u003C",{"type":434,"tag":476,"props":1186,"children":1187},{"style":738},[1188],{"type":439,"value":843},{"type":434,"tag":476,"props":1190,"children":1191},{"style":753},[1192],{"type":439,"value":756},{"type":434,"tag":476,"props":1194,"children":1195},{"style":712},[1196],{"type":439,"value":761},{"type":434,"tag":476,"props":1198,"children":1199},{"style":764},[1200],{"type":439,"value":1175},{"type":434,"tag":476,"props":1202,"children":1203},{"style":738},[1204],{"type":439,"value":781},{"type":434,"tag":476,"props":1206,"children":1207},{"style":701},[1208],{"type":439,"value":1119},{"type":434,"tag":476,"props":1210,"children":1211},{"style":712},[1212],{"type":439,"value":726},{"type":434,"tag":476,"props":1214,"children":1216},{"class":478,"line":1215},20,[1217,1222,1226,1230,1234,1239,1243,1247,1251,1255],{"type":434,"tag":476,"props":1218,"children":1219},{"style":738},[1220],{"type":439,"value":1221},"    chars",{"type":434,"tag":476,"props":1223,"children":1224},{"style":712},[1225],{"type":439,"value":921},{"type":434,"tag":476,"props":1227,"children":1228},{"style":738},[1229],{"type":439,"value":926},{"type":434,"tag":476,"props":1231,"children":1232},{"style":712},[1233],{"type":439,"value":931},{"type":434,"tag":476,"props":1235,"children":1236},{"style":701},[1237],{"type":439,"value":1238},"=",{"type":434,"tag":476,"props":1240,"children":1241},{"style":738},[1242],{"type":439,"value":843},{"type":434,"tag":476,"props":1244,"children":1245},{"style":712},[1246],{"type":439,"value":921},{"type":434,"tag":476,"props":1248,"children":1249},{"style":738},[1250],{"type":439,"value":926},{"type":434,"tag":476,"props":1252,"children":1253},{"style":712},[1254],{"type":439,"value":1023},{"type":434,"tag":476,"props":1256,"children":1257},{"style":764},[1258],{"type":439,"value":767},{"type":434,"tag":476,"props":1260,"children":1262},{"class":478,"line":1261},21,[1263],{"type":434,"tag":476,"props":1264,"children":1265},{"style":712},[1266],{"type":439,"value":1132},{"type":434,"tag":476,"props":1268,"children":1270},{"class":478,"line":1269},22,[1271],{"type":434,"tag":476,"props":1272,"children":1273},{"emptyLinePlaceholder":864},[1274],{"type":439,"value":867},{"type":434,"tag":476,"props":1276,"children":1278},{"class":478,"line":1277},23,[1279,1284,1288,1292,1296],{"type":434,"tag":476,"props":1280,"children":1281},{"style":874},[1282],{"type":439,"value":1283},"  return",{"type":434,"tag":476,"props":1285,"children":1286},{"style":738},[1287],{"type":439,"value":843},{"type":434,"tag":476,"props":1289,"children":1290},{"style":753},[1291],{"type":439,"value":756},{"type":434,"tag":476,"props":1293,"children":1294},{"style":712},[1295],{"type":439,"value":761},{"type":434,"tag":476,"props":1297,"children":1298},{"style":764},[1299],{"type":439,"value":767},{"type":434,"tag":476,"props":1301,"children":1303},{"class":478,"line":1302},24,[1304,1308],{"type":434,"tag":476,"props":1305,"children":1306},{"style":712},[1307],{"type":439,"value":1045},{"type":434,"tag":476,"props":1309,"children":1310},{"style":764},[1311],{"type":439,"value":767},{"type":434,"tag":1313,"props":1314,"children":1315},"style",{},[1316],{"type":439,"value":1317},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":427,"searchDepth":685,"depth":685,"links":1319},[1320,1321],{"id":599,"depth":488,"text":599},{"id":604,"depth":488,"text":604,"children":1322},[1323],{"id":610,"depth":497,"text":610},"markdown","content:1.algorithm:3.leetcode:443.string-compression.md","content","1.algorithm/3.leetcode/443.string-compression.md","md",[1330,1332],{"_path":203,"title":202,"description":1331},"给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。",{"_path":209,"title":208,"description":1333},"斐波那契数 （通常用 F(n) 表示）形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：",1713339874197]