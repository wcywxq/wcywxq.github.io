[{"data":1,"prerenderedAt":1315},["Reactive",2],{"navigation":3,"/algorithm/leetcode/string-compression":405,"/algorithm/leetcode/string-compression-surround":1310},[4,237,265,384,391],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,377],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,347,350,353,356,359,362,365,368,371,374],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":348,"_path":349},"倒计时","/frontend-code-assessment/scene/countdown",{"title":351,"_path":352},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":354,"_path":355},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":357,"_path":358},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":360,"_path":361},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":363,"_path":364},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":366,"_path":367},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":369,"_path":370},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":372,"_path":373},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":375,"_path":376},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":378,"_path":379,"children":380},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[381],{"title":382,"_path":383},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":385,"_path":386,"children":387},"项目","/pro",[388],{"title":389,"_path":390},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":392,"_path":393,"children":394},"后端语言","/backend-languages",[395],{"title":396,"_path":397,"children":398},"Python","/backend-languages/python",[399,402],{"title":400,"_path":401},"基础","/backend-languages/python/base",{"title":403,"_path":404},"函数","/backend-languages/python/function",{"_path":206,"_dir":406,"_draft":407,"_partial":407,"_locale":408,"title":205,"description":409,"url":410,"body":411,"_type":1305,"_id":1306,"_source":1307,"_file":1308,"_extension":1309},"leetcode",false,"","给你一个字符数组 chars ，请使用下述算法压缩：","https://leetcode.cn/problems/string-compression",{"type":412,"children":413,"toc":1299},"root",[414,421,426,431,436,441,446,485,490,521,526,557,562,577,583,588,594,1293],{"type":415,"tag":416,"props":417,"children":418},"element","p",{},[419],{"type":420,"value":409},"text",{"type":415,"tag":416,"props":422,"children":423},{},[424],{"type":420,"value":425},"从一个空字符串 s 开始。对于 chars 中的每组 连续重复字符 ：",{"type":415,"tag":416,"props":427,"children":428},{},[429],{"type":420,"value":430},"如果这一组长度为 1 ，则将字符追加到 s 中。\n否则，需要向 s 追加字符，后跟这一组的长度。\n压缩后得到的字符串 s 不应该直接返回 ，需要转储到字符数组 chars 中。需要注意的是，如果组长度为 10 或 10 以上，则在 chars 数组中会被拆分为多个字符。",{"type":415,"tag":416,"props":432,"children":433},{},[434],{"type":420,"value":435},"请在 修改完输入数组后 ，返回该数组的新长度。",{"type":415,"tag":416,"props":437,"children":438},{},[439],{"type":420,"value":440},"你必须设计并实现一个只使用常量额外空间的算法来解决此问题。",{"type":415,"tag":416,"props":442,"children":443},{},[444],{"type":420,"value":445},"示例 1：",{"type":415,"tag":447,"props":448,"children":451},"pre",{"className":449,"code":450,"language":420,"meta":408,"style":408},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",[452],{"type":415,"tag":453,"props":454,"children":455},"code",{"__ignoreMap":408},[456,467,476],{"type":415,"tag":457,"props":458,"children":461},"span",{"class":459,"line":460},"line",1,[462],{"type":415,"tag":457,"props":463,"children":464},{},[465],{"type":420,"value":466},"输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n",{"type":415,"tag":457,"props":468,"children":470},{"class":459,"line":469},2,[471],{"type":415,"tag":457,"props":472,"children":473},{},[474],{"type":420,"value":475},"输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n",{"type":415,"tag":457,"props":477,"children":479},{"class":459,"line":478},3,[480],{"type":415,"tag":457,"props":481,"children":482},{},[483],{"type":420,"value":484},"解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",{"type":415,"tag":416,"props":486,"children":487},{},[488],{"type":420,"value":489},"示例 2：",{"type":415,"tag":447,"props":491,"children":493},{"className":449,"code":492,"language":420,"meta":408,"style":408},"输入：chars = [\"a\"]\n输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",[494],{"type":415,"tag":453,"props":495,"children":496},{"__ignoreMap":408},[497,505,513],{"type":415,"tag":457,"props":498,"children":499},{"class":459,"line":460},[500],{"type":415,"tag":457,"props":501,"children":502},{},[503],{"type":420,"value":504},"输入：chars = [\"a\"]\n",{"type":415,"tag":457,"props":506,"children":507},{"class":459,"line":469},[508],{"type":415,"tag":457,"props":509,"children":510},{},[511],{"type":420,"value":512},"输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n",{"type":415,"tag":457,"props":514,"children":515},{"class":459,"line":478},[516],{"type":415,"tag":457,"props":517,"children":518},{},[519],{"type":420,"value":520},"解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",{"type":415,"tag":416,"props":522,"children":523},{},[524],{"type":420,"value":525},"示例 3：",{"type":415,"tag":447,"props":527,"children":529},{"className":449,"code":528,"language":420,"meta":408,"style":408},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",[530],{"type":415,"tag":453,"props":531,"children":532},{"__ignoreMap":408},[533,541,549],{"type":415,"tag":457,"props":534,"children":535},{"class":459,"line":460},[536],{"type":415,"tag":457,"props":537,"children":538},{},[539],{"type":420,"value":540},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n",{"type":415,"tag":457,"props":542,"children":543},{"class":459,"line":469},[544],{"type":415,"tag":457,"props":545,"children":546},{},[547],{"type":420,"value":548},"输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n",{"type":415,"tag":457,"props":550,"children":551},{"class":459,"line":478},[552],{"type":415,"tag":457,"props":553,"children":554},{},[555],{"type":420,"value":556},"解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",{"type":415,"tag":416,"props":558,"children":559},{},[560],{"type":420,"value":561},"提示：",{"type":415,"tag":563,"props":564,"children":565},"ul",{},[566,572],{"type":415,"tag":567,"props":568,"children":569},"li",{},[570],{"type":420,"value":571},"1 \u003C= chars.length \u003C= 2000",{"type":415,"tag":567,"props":573,"children":574},{},[575],{"type":420,"value":576},"chars[i] 可以是小写英文字母、大写英文字母、数字或符号",{"type":415,"tag":578,"props":579,"children":581},"h2",{"id":580},"解题思路",[582],{"type":420,"value":580},{"type":415,"tag":578,"props":584,"children":586},{"id":585},"实现",[587],{"type":420,"value":585},{"type":415,"tag":589,"props":590,"children":592},"h3",{"id":591},"双指针",[593],{"type":420,"value":591},{"type":415,"tag":447,"props":595,"children":599},{"className":596,"code":597,"language":598,"meta":408,"style":408},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {character[]} chars\n * @return {number}\n */\nvar compress = function (chars) {\n  const len = chars.length;\n  let i = 0;\n  let j = i + 1;\n  let s = \"\";\n\n  while (j \u003C= len) {\n    if (chars[i] !== chars[j]) {\n      s += j - i > 1 ? `${chars[i]}${j - i}` : chars[i];\n      i = j;\n    }\n    j++;\n  }\n\n  for (let i = 0; i \u003C s.length; i++) {\n    chars[i] = s[i];\n  }\n\n  return s.length;\n};\n","js",[600],{"type":415,"tag":453,"props":601,"children":602},{"__ignoreMap":408},[603,612,638,655,664,708,749,777,812,839,849,881,935,1057,1078,1087,1105,1114,1122,1194,1240,1248,1256,1281],{"type":415,"tag":457,"props":604,"children":605},{"class":459,"line":460},[606],{"type":415,"tag":457,"props":607,"children":609},{"style":608},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[610],{"type":420,"value":611},"/**\n",{"type":415,"tag":457,"props":613,"children":614},{"class":459,"line":469},[615,620,626,632],{"type":415,"tag":457,"props":616,"children":617},{"style":608},[618],{"type":420,"value":619}," * ",{"type":415,"tag":457,"props":621,"children":623},{"style":622},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[624],{"type":420,"value":625},"@param",{"type":415,"tag":457,"props":627,"children":629},{"style":628},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[630],{"type":420,"value":631}," {character[]}",{"type":415,"tag":457,"props":633,"children":635},{"style":634},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[636],{"type":420,"value":637}," chars\n",{"type":415,"tag":457,"props":639,"children":640},{"class":459,"line":478},[641,645,650],{"type":415,"tag":457,"props":642,"children":643},{"style":608},[644],{"type":420,"value":619},{"type":415,"tag":457,"props":646,"children":647},{"style":622},[648],{"type":420,"value":649},"@return",{"type":415,"tag":457,"props":651,"children":652},{"style":628},[653],{"type":420,"value":654}," {number}\n",{"type":415,"tag":457,"props":656,"children":658},{"class":459,"line":657},4,[659],{"type":415,"tag":457,"props":660,"children":661},{"style":608},[662],{"type":420,"value":663}," */\n",{"type":415,"tag":457,"props":665,"children":667},{"class":459,"line":666},5,[668,674,680,686,691,697,703],{"type":415,"tag":457,"props":669,"children":671},{"style":670},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[672],{"type":420,"value":673},"var",{"type":415,"tag":457,"props":675,"children":677},{"style":676},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[678],{"type":420,"value":679}," compress",{"type":415,"tag":457,"props":681,"children":683},{"style":682},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[684],{"type":420,"value":685}," =",{"type":415,"tag":457,"props":687,"children":688},{"style":670},[689],{"type":420,"value":690}," function",{"type":415,"tag":457,"props":692,"children":694},{"style":693},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[695],{"type":420,"value":696}," (",{"type":415,"tag":457,"props":698,"children":700},{"style":699},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[701],{"type":420,"value":702},"chars",{"type":415,"tag":457,"props":704,"children":705},{"style":693},[706],{"type":420,"value":707},") {\n",{"type":415,"tag":457,"props":709,"children":711},{"class":459,"line":710},6,[712,717,723,727,732,738,743],{"type":415,"tag":457,"props":713,"children":714},{"style":670},[715],{"type":420,"value":716},"  const",{"type":415,"tag":457,"props":718,"children":720},{"style":719},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[721],{"type":420,"value":722}," len",{"type":415,"tag":457,"props":724,"children":725},{"style":682},[726],{"type":420,"value":685},{"type":415,"tag":457,"props":728,"children":729},{"style":719},[730],{"type":420,"value":731}," chars",{"type":415,"tag":457,"props":733,"children":735},{"style":734},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[736],{"type":420,"value":737},".",{"type":415,"tag":457,"props":739,"children":740},{"style":693},[741],{"type":420,"value":742},"length",{"type":415,"tag":457,"props":744,"children":746},{"style":745},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[747],{"type":420,"value":748},";\n",{"type":415,"tag":457,"props":750,"children":752},{"class":459,"line":751},7,[753,758,763,767,773],{"type":415,"tag":457,"props":754,"children":755},{"style":670},[756],{"type":420,"value":757},"  let",{"type":415,"tag":457,"props":759,"children":760},{"style":719},[761],{"type":420,"value":762}," i",{"type":415,"tag":457,"props":764,"children":765},{"style":682},[766],{"type":420,"value":685},{"type":415,"tag":457,"props":768,"children":770},{"style":769},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[771],{"type":420,"value":772}," 0",{"type":415,"tag":457,"props":774,"children":775},{"style":745},[776],{"type":420,"value":748},{"type":415,"tag":457,"props":778,"children":780},{"class":459,"line":779},8,[781,785,790,794,798,803,808],{"type":415,"tag":457,"props":782,"children":783},{"style":670},[784],{"type":420,"value":757},{"type":415,"tag":457,"props":786,"children":787},{"style":719},[788],{"type":420,"value":789}," j",{"type":415,"tag":457,"props":791,"children":792},{"style":682},[793],{"type":420,"value":685},{"type":415,"tag":457,"props":795,"children":796},{"style":719},[797],{"type":420,"value":762},{"type":415,"tag":457,"props":799,"children":800},{"style":682},[801],{"type":420,"value":802}," +",{"type":415,"tag":457,"props":804,"children":805},{"style":769},[806],{"type":420,"value":807}," 1",{"type":415,"tag":457,"props":809,"children":810},{"style":745},[811],{"type":420,"value":748},{"type":415,"tag":457,"props":813,"children":815},{"class":459,"line":814},9,[816,820,825,829,835],{"type":415,"tag":457,"props":817,"children":818},{"style":670},[819],{"type":420,"value":757},{"type":415,"tag":457,"props":821,"children":822},{"style":719},[823],{"type":420,"value":824}," s",{"type":415,"tag":457,"props":826,"children":827},{"style":682},[828],{"type":420,"value":685},{"type":415,"tag":457,"props":830,"children":832},{"style":831},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[833],{"type":420,"value":834}," \"\"",{"type":415,"tag":457,"props":836,"children":837},{"style":745},[838],{"type":420,"value":748},{"type":415,"tag":457,"props":840,"children":842},{"class":459,"line":841},10,[843],{"type":415,"tag":457,"props":844,"children":846},{"emptyLinePlaceholder":845},true,[847],{"type":420,"value":848},"\n",{"type":415,"tag":457,"props":850,"children":852},{"class":459,"line":851},11,[853,859,863,868,873,877],{"type":415,"tag":457,"props":854,"children":856},{"style":855},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[857],{"type":420,"value":858},"  while",{"type":415,"tag":457,"props":860,"children":861},{"style":693},[862],{"type":420,"value":696},{"type":415,"tag":457,"props":864,"children":865},{"style":719},[866],{"type":420,"value":867},"j",{"type":415,"tag":457,"props":869,"children":870},{"style":682},[871],{"type":420,"value":872}," \u003C=",{"type":415,"tag":457,"props":874,"children":875},{"style":719},[876],{"type":420,"value":722},{"type":415,"tag":457,"props":878,"children":879},{"style":693},[880],{"type":420,"value":707},{"type":415,"tag":457,"props":882,"children":884},{"class":459,"line":883},12,[885,890,894,898,903,908,913,918,922,926,930],{"type":415,"tag":457,"props":886,"children":887},{"style":855},[888],{"type":420,"value":889},"    if",{"type":415,"tag":457,"props":891,"children":892},{"style":693},[893],{"type":420,"value":696},{"type":415,"tag":457,"props":895,"children":896},{"style":719},[897],{"type":420,"value":702},{"type":415,"tag":457,"props":899,"children":900},{"style":693},[901],{"type":420,"value":902},"[",{"type":415,"tag":457,"props":904,"children":905},{"style":719},[906],{"type":420,"value":907},"i",{"type":415,"tag":457,"props":909,"children":910},{"style":693},[911],{"type":420,"value":912},"] ",{"type":415,"tag":457,"props":914,"children":915},{"style":682},[916],{"type":420,"value":917},"!==",{"type":415,"tag":457,"props":919,"children":920},{"style":719},[921],{"type":420,"value":731},{"type":415,"tag":457,"props":923,"children":924},{"style":693},[925],{"type":420,"value":902},{"type":415,"tag":457,"props":927,"children":928},{"style":719},[929],{"type":420,"value":867},{"type":415,"tag":457,"props":931,"children":932},{"style":693},[933],{"type":420,"value":934},"]) {\n",{"type":415,"tag":457,"props":936,"children":938},{"class":459,"line":937},13,[939,944,949,953,958,962,967,971,976,981,987,991,996,1000,1005,1010,1014,1018,1022,1027,1032,1037,1041,1045,1049,1053],{"type":415,"tag":457,"props":940,"children":941},{"style":719},[942],{"type":420,"value":943},"      s",{"type":415,"tag":457,"props":945,"children":946},{"style":682},[947],{"type":420,"value":948}," +=",{"type":415,"tag":457,"props":950,"children":951},{"style":719},[952],{"type":420,"value":789},{"type":415,"tag":457,"props":954,"children":955},{"style":682},[956],{"type":420,"value":957}," -",{"type":415,"tag":457,"props":959,"children":960},{"style":719},[961],{"type":420,"value":762},{"type":415,"tag":457,"props":963,"children":964},{"style":682},[965],{"type":420,"value":966}," >",{"type":415,"tag":457,"props":968,"children":969},{"style":769},[970],{"type":420,"value":807},{"type":415,"tag":457,"props":972,"children":973},{"style":682},[974],{"type":420,"value":975}," ?",{"type":415,"tag":457,"props":977,"children":978},{"style":831},[979],{"type":420,"value":980}," `",{"type":415,"tag":457,"props":982,"children":984},{"style":983},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#FF8F40",[985],{"type":420,"value":986},"${",{"type":415,"tag":457,"props":988,"children":989},{"style":719},[990],{"type":420,"value":702},{"type":415,"tag":457,"props":992,"children":994},{"style":993},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#BFBDB6",[995],{"type":420,"value":902},{"type":415,"tag":457,"props":997,"children":998},{"style":719},[999],{"type":420,"value":907},{"type":415,"tag":457,"props":1001,"children":1002},{"style":993},[1003],{"type":420,"value":1004},"]",{"type":415,"tag":457,"props":1006,"children":1007},{"style":983},[1008],{"type":420,"value":1009},"}${",{"type":415,"tag":457,"props":1011,"children":1012},{"style":719},[1013],{"type":420,"value":867},{"type":415,"tag":457,"props":1015,"children":1016},{"style":682},[1017],{"type":420,"value":957},{"type":415,"tag":457,"props":1019,"children":1020},{"style":719},[1021],{"type":420,"value":762},{"type":415,"tag":457,"props":1023,"children":1024},{"style":983},[1025],{"type":420,"value":1026},"}",{"type":415,"tag":457,"props":1028,"children":1029},{"style":831},[1030],{"type":420,"value":1031},"`",{"type":415,"tag":457,"props":1033,"children":1034},{"style":682},[1035],{"type":420,"value":1036}," :",{"type":415,"tag":457,"props":1038,"children":1039},{"style":719},[1040],{"type":420,"value":731},{"type":415,"tag":457,"props":1042,"children":1043},{"style":693},[1044],{"type":420,"value":902},{"type":415,"tag":457,"props":1046,"children":1047},{"style":719},[1048],{"type":420,"value":907},{"type":415,"tag":457,"props":1050,"children":1051},{"style":693},[1052],{"type":420,"value":1004},{"type":415,"tag":457,"props":1054,"children":1055},{"style":745},[1056],{"type":420,"value":748},{"type":415,"tag":457,"props":1058,"children":1060},{"class":459,"line":1059},14,[1061,1066,1070,1074],{"type":415,"tag":457,"props":1062,"children":1063},{"style":719},[1064],{"type":420,"value":1065},"      i",{"type":415,"tag":457,"props":1067,"children":1068},{"style":682},[1069],{"type":420,"value":685},{"type":415,"tag":457,"props":1071,"children":1072},{"style":719},[1073],{"type":420,"value":789},{"type":415,"tag":457,"props":1075,"children":1076},{"style":745},[1077],{"type":420,"value":748},{"type":415,"tag":457,"props":1079,"children":1081},{"class":459,"line":1080},15,[1082],{"type":415,"tag":457,"props":1083,"children":1084},{"style":693},[1085],{"type":420,"value":1086},"    }\n",{"type":415,"tag":457,"props":1088,"children":1090},{"class":459,"line":1089},16,[1091,1096,1101],{"type":415,"tag":457,"props":1092,"children":1093},{"style":719},[1094],{"type":420,"value":1095},"    j",{"type":415,"tag":457,"props":1097,"children":1098},{"style":682},[1099],{"type":420,"value":1100},"++",{"type":415,"tag":457,"props":1102,"children":1103},{"style":745},[1104],{"type":420,"value":748},{"type":415,"tag":457,"props":1106,"children":1108},{"class":459,"line":1107},17,[1109],{"type":415,"tag":457,"props":1110,"children":1111},{"style":693},[1112],{"type":420,"value":1113},"  }\n",{"type":415,"tag":457,"props":1115,"children":1117},{"class":459,"line":1116},18,[1118],{"type":415,"tag":457,"props":1119,"children":1120},{"emptyLinePlaceholder":845},[1121],{"type":420,"value":848},{"type":415,"tag":457,"props":1123,"children":1125},{"class":459,"line":1124},19,[1126,1131,1135,1140,1144,1148,1152,1157,1161,1166,1170,1174,1178,1182,1186,1190],{"type":415,"tag":457,"props":1127,"children":1128},{"style":855},[1129],{"type":420,"value":1130},"  for",{"type":415,"tag":457,"props":1132,"children":1133},{"style":693},[1134],{"type":420,"value":696},{"type":415,"tag":457,"props":1136,"children":1137},{"style":670},[1138],{"type":420,"value":1139},"let",{"type":415,"tag":457,"props":1141,"children":1142},{"style":719},[1143],{"type":420,"value":762},{"type":415,"tag":457,"props":1145,"children":1146},{"style":682},[1147],{"type":420,"value":685},{"type":415,"tag":457,"props":1149,"children":1150},{"style":769},[1151],{"type":420,"value":772},{"type":415,"tag":457,"props":1153,"children":1154},{"style":745},[1155],{"type":420,"value":1156},";",{"type":415,"tag":457,"props":1158,"children":1159},{"style":719},[1160],{"type":420,"value":762},{"type":415,"tag":457,"props":1162,"children":1163},{"style":682},[1164],{"type":420,"value":1165}," \u003C",{"type":415,"tag":457,"props":1167,"children":1168},{"style":719},[1169],{"type":420,"value":824},{"type":415,"tag":457,"props":1171,"children":1172},{"style":734},[1173],{"type":420,"value":737},{"type":415,"tag":457,"props":1175,"children":1176},{"style":693},[1177],{"type":420,"value":742},{"type":415,"tag":457,"props":1179,"children":1180},{"style":745},[1181],{"type":420,"value":1156},{"type":415,"tag":457,"props":1183,"children":1184},{"style":719},[1185],{"type":420,"value":762},{"type":415,"tag":457,"props":1187,"children":1188},{"style":682},[1189],{"type":420,"value":1100},{"type":415,"tag":457,"props":1191,"children":1192},{"style":693},[1193],{"type":420,"value":707},{"type":415,"tag":457,"props":1195,"children":1197},{"class":459,"line":1196},20,[1198,1203,1207,1211,1215,1220,1224,1228,1232,1236],{"type":415,"tag":457,"props":1199,"children":1200},{"style":719},[1201],{"type":420,"value":1202},"    chars",{"type":415,"tag":457,"props":1204,"children":1205},{"style":693},[1206],{"type":420,"value":902},{"type":415,"tag":457,"props":1208,"children":1209},{"style":719},[1210],{"type":420,"value":907},{"type":415,"tag":457,"props":1212,"children":1213},{"style":693},[1214],{"type":420,"value":912},{"type":415,"tag":457,"props":1216,"children":1217},{"style":682},[1218],{"type":420,"value":1219},"=",{"type":415,"tag":457,"props":1221,"children":1222},{"style":719},[1223],{"type":420,"value":824},{"type":415,"tag":457,"props":1225,"children":1226},{"style":693},[1227],{"type":420,"value":902},{"type":415,"tag":457,"props":1229,"children":1230},{"style":719},[1231],{"type":420,"value":907},{"type":415,"tag":457,"props":1233,"children":1234},{"style":693},[1235],{"type":420,"value":1004},{"type":415,"tag":457,"props":1237,"children":1238},{"style":745},[1239],{"type":420,"value":748},{"type":415,"tag":457,"props":1241,"children":1243},{"class":459,"line":1242},21,[1244],{"type":415,"tag":457,"props":1245,"children":1246},{"style":693},[1247],{"type":420,"value":1113},{"type":415,"tag":457,"props":1249,"children":1251},{"class":459,"line":1250},22,[1252],{"type":415,"tag":457,"props":1253,"children":1254},{"emptyLinePlaceholder":845},[1255],{"type":420,"value":848},{"type":415,"tag":457,"props":1257,"children":1259},{"class":459,"line":1258},23,[1260,1265,1269,1273,1277],{"type":415,"tag":457,"props":1261,"children":1262},{"style":855},[1263],{"type":420,"value":1264},"  return",{"type":415,"tag":457,"props":1266,"children":1267},{"style":719},[1268],{"type":420,"value":824},{"type":415,"tag":457,"props":1270,"children":1271},{"style":734},[1272],{"type":420,"value":737},{"type":415,"tag":457,"props":1274,"children":1275},{"style":693},[1276],{"type":420,"value":742},{"type":415,"tag":457,"props":1278,"children":1279},{"style":745},[1280],{"type":420,"value":748},{"type":415,"tag":457,"props":1282,"children":1284},{"class":459,"line":1283},24,[1285,1289],{"type":415,"tag":457,"props":1286,"children":1287},{"style":693},[1288],{"type":420,"value":1026},{"type":415,"tag":457,"props":1290,"children":1291},{"style":745},[1292],{"type":420,"value":748},{"type":415,"tag":1294,"props":1295,"children":1296},"style",{},[1297],{"type":420,"value":1298},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":408,"searchDepth":666,"depth":666,"links":1300},[1301,1302],{"id":580,"depth":469,"text":580},{"id":585,"depth":469,"text":585,"children":1303},[1304],{"id":591,"depth":478,"text":591},"markdown","content:1.algorithm:3.leetcode:443.string-compression.md","content","1.algorithm/3.leetcode/443.string-compression.md","md",[1311,1313],{"_path":203,"title":202,"description":1312},"给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。",{"_path":209,"title":208,"description":1314},"斐波那契数 （通常用 F(n) 表示）形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：",1713320364510]