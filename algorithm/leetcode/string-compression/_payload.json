[{"data":1,"prerenderedAt":1308},["Reactive",2],{"navigation":3,"/algorithm/leetcode/string-compression":398,"/algorithm/leetcode/string-compression-surround":1303},[4,237,265,384],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR 169. 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR 187. 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数相加","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,377],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,347,350,353,356,359,362,365,368,371,374],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":348,"_path":349},"倒计时","/frontend-code-assessment/scene/countdown",{"title":351,"_path":352},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":354,"_path":355},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":357,"_path":358},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":360,"_path":361},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":363,"_path":364},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":366,"_path":367},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":369,"_path":370},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":372,"_path":373},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":375,"_path":376},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":378,"_path":379,"children":380},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[381],{"title":382,"_path":383},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":385,"_path":386,"children":387},"后端语言","/backend-languages",[388],{"title":389,"_path":390,"children":391},"Python","/backend-languages/python",[392,395],{"title":393,"_path":394},"基础","/backend-languages/python/base",{"title":396,"_path":397},"函数","/backend-languages/python/function",{"_path":206,"_dir":399,"_draft":400,"_partial":400,"_locale":401,"title":205,"description":402,"url":403,"body":404,"_type":1298,"_id":1299,"_source":1300,"_file":1301,"_extension":1302},"leetcode",false,"","给你一个字符数组 chars ，请使用下述算法压缩：","https://leetcode.cn/problems/string-compression",{"type":405,"children":406,"toc":1292},"root",[407,414,419,424,429,434,439,478,483,514,519,550,555,570,576,581,587,1286],{"type":408,"tag":409,"props":410,"children":411},"element","p",{},[412],{"type":413,"value":402},"text",{"type":408,"tag":409,"props":415,"children":416},{},[417],{"type":413,"value":418},"从一个空字符串 s 开始。对于 chars 中的每组 连续重复字符 ：",{"type":408,"tag":409,"props":420,"children":421},{},[422],{"type":413,"value":423},"如果这一组长度为 1 ，则将字符追加到 s 中。\n否则，需要向 s 追加字符，后跟这一组的长度。\n压缩后得到的字符串 s 不应该直接返回 ，需要转储到字符数组 chars 中。需要注意的是，如果组长度为 10 或 10 以上，则在 chars 数组中会被拆分为多个字符。",{"type":408,"tag":409,"props":425,"children":426},{},[427],{"type":413,"value":428},"请在 修改完输入数组后 ，返回该数组的新长度。",{"type":408,"tag":409,"props":430,"children":431},{},[432],{"type":413,"value":433},"你必须设计并实现一个只使用常量额外空间的算法来解决此问题。",{"type":408,"tag":409,"props":435,"children":436},{},[437],{"type":413,"value":438},"示例 1：",{"type":408,"tag":440,"props":441,"children":444},"pre",{"className":442,"code":443,"language":413,"meta":401,"style":401},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",[445],{"type":408,"tag":446,"props":447,"children":448},"code",{"__ignoreMap":401},[449,460,469],{"type":408,"tag":450,"props":451,"children":454},"span",{"class":452,"line":453},"line",1,[455],{"type":408,"tag":450,"props":456,"children":457},{},[458],{"type":413,"value":459},"输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n",{"type":408,"tag":450,"props":461,"children":463},{"class":452,"line":462},2,[464],{"type":408,"tag":450,"props":465,"children":466},{},[467],{"type":413,"value":468},"输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n",{"type":408,"tag":450,"props":470,"children":472},{"class":452,"line":471},3,[473],{"type":408,"tag":450,"props":474,"children":475},{},[476],{"type":413,"value":477},"解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",{"type":408,"tag":409,"props":479,"children":480},{},[481],{"type":413,"value":482},"示例 2：",{"type":408,"tag":440,"props":484,"children":486},{"className":442,"code":485,"language":413,"meta":401,"style":401},"输入：chars = [\"a\"]\n输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",[487],{"type":408,"tag":446,"props":488,"children":489},{"__ignoreMap":401},[490,498,506],{"type":408,"tag":450,"props":491,"children":492},{"class":452,"line":453},[493],{"type":408,"tag":450,"props":494,"children":495},{},[496],{"type":413,"value":497},"输入：chars = [\"a\"]\n",{"type":408,"tag":450,"props":499,"children":500},{"class":452,"line":462},[501],{"type":408,"tag":450,"props":502,"children":503},{},[504],{"type":413,"value":505},"输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n",{"type":408,"tag":450,"props":507,"children":508},{"class":452,"line":471},[509],{"type":408,"tag":450,"props":510,"children":511},{},[512],{"type":413,"value":513},"解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",{"type":408,"tag":409,"props":515,"children":516},{},[517],{"type":413,"value":518},"示例 3：",{"type":408,"tag":440,"props":520,"children":522},{"className":442,"code":521,"language":413,"meta":401,"style":401},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",[523],{"type":408,"tag":446,"props":524,"children":525},{"__ignoreMap":401},[526,534,542],{"type":408,"tag":450,"props":527,"children":528},{"class":452,"line":453},[529],{"type":408,"tag":450,"props":530,"children":531},{},[532],{"type":413,"value":533},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n",{"type":408,"tag":450,"props":535,"children":536},{"class":452,"line":462},[537],{"type":408,"tag":450,"props":538,"children":539},{},[540],{"type":413,"value":541},"输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n",{"type":408,"tag":450,"props":543,"children":544},{"class":452,"line":471},[545],{"type":408,"tag":450,"props":546,"children":547},{},[548],{"type":413,"value":549},"解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",{"type":408,"tag":409,"props":551,"children":552},{},[553],{"type":413,"value":554},"提示：",{"type":408,"tag":556,"props":557,"children":558},"ul",{},[559,565],{"type":408,"tag":560,"props":561,"children":562},"li",{},[563],{"type":413,"value":564},"1 \u003C= chars.length \u003C= 2000",{"type":408,"tag":560,"props":566,"children":567},{},[568],{"type":413,"value":569},"chars[i] 可以是小写英文字母、大写英文字母、数字或符号",{"type":408,"tag":571,"props":572,"children":574},"h2",{"id":573},"解题思路",[575],{"type":413,"value":573},{"type":408,"tag":571,"props":577,"children":579},{"id":578},"实现",[580],{"type":413,"value":578},{"type":408,"tag":582,"props":583,"children":585},"h3",{"id":584},"双指针",[586],{"type":413,"value":584},{"type":408,"tag":440,"props":588,"children":592},{"className":589,"code":590,"language":591,"meta":401,"style":401},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {character[]} chars\n * @return {number}\n */\nvar compress = function (chars) {\n  const len = chars.length;\n  let i = 0;\n  let j = i + 1;\n  let s = \"\";\n\n  while (j \u003C= len) {\n    if (chars[i] !== chars[j]) {\n      s += j - i > 1 ? `${chars[i]}${j - i}` : chars[i];\n      i = j;\n    }\n    j++;\n  }\n\n  for (let i = 0; i \u003C s.length; i++) {\n    chars[i] = s[i];\n  }\n\n  return s.length;\n};\n","js",[593],{"type":408,"tag":446,"props":594,"children":595},{"__ignoreMap":401},[596,605,631,648,657,701,742,770,805,832,842,874,928,1050,1071,1080,1098,1107,1115,1187,1233,1241,1249,1274],{"type":408,"tag":450,"props":597,"children":598},{"class":452,"line":453},[599],{"type":408,"tag":450,"props":600,"children":602},{"style":601},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[603],{"type":413,"value":604},"/**\n",{"type":408,"tag":450,"props":606,"children":607},{"class":452,"line":462},[608,613,619,625],{"type":408,"tag":450,"props":609,"children":610},{"style":601},[611],{"type":413,"value":612}," * ",{"type":408,"tag":450,"props":614,"children":616},{"style":615},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[617],{"type":413,"value":618},"@param",{"type":408,"tag":450,"props":620,"children":622},{"style":621},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[623],{"type":413,"value":624}," {character[]}",{"type":408,"tag":450,"props":626,"children":628},{"style":627},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[629],{"type":413,"value":630}," chars\n",{"type":408,"tag":450,"props":632,"children":633},{"class":452,"line":471},[634,638,643],{"type":408,"tag":450,"props":635,"children":636},{"style":601},[637],{"type":413,"value":612},{"type":408,"tag":450,"props":639,"children":640},{"style":615},[641],{"type":413,"value":642},"@return",{"type":408,"tag":450,"props":644,"children":645},{"style":621},[646],{"type":413,"value":647}," {number}\n",{"type":408,"tag":450,"props":649,"children":651},{"class":452,"line":650},4,[652],{"type":408,"tag":450,"props":653,"children":654},{"style":601},[655],{"type":413,"value":656}," */\n",{"type":408,"tag":450,"props":658,"children":660},{"class":452,"line":659},5,[661,667,673,679,684,690,696],{"type":408,"tag":450,"props":662,"children":664},{"style":663},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[665],{"type":413,"value":666},"var",{"type":408,"tag":450,"props":668,"children":670},{"style":669},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[671],{"type":413,"value":672}," compress",{"type":408,"tag":450,"props":674,"children":676},{"style":675},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[677],{"type":413,"value":678}," =",{"type":408,"tag":450,"props":680,"children":681},{"style":663},[682],{"type":413,"value":683}," function",{"type":408,"tag":450,"props":685,"children":687},{"style":686},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[688],{"type":413,"value":689}," (",{"type":408,"tag":450,"props":691,"children":693},{"style":692},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[694],{"type":413,"value":695},"chars",{"type":408,"tag":450,"props":697,"children":698},{"style":686},[699],{"type":413,"value":700},") {\n",{"type":408,"tag":450,"props":702,"children":704},{"class":452,"line":703},6,[705,710,716,720,725,731,736],{"type":408,"tag":450,"props":706,"children":707},{"style":663},[708],{"type":413,"value":709},"  const",{"type":408,"tag":450,"props":711,"children":713},{"style":712},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[714],{"type":413,"value":715}," len",{"type":408,"tag":450,"props":717,"children":718},{"style":675},[719],{"type":413,"value":678},{"type":408,"tag":450,"props":721,"children":722},{"style":712},[723],{"type":413,"value":724}," chars",{"type":408,"tag":450,"props":726,"children":728},{"style":727},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[729],{"type":413,"value":730},".",{"type":408,"tag":450,"props":732,"children":733},{"style":686},[734],{"type":413,"value":735},"length",{"type":408,"tag":450,"props":737,"children":739},{"style":738},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[740],{"type":413,"value":741},";\n",{"type":408,"tag":450,"props":743,"children":745},{"class":452,"line":744},7,[746,751,756,760,766],{"type":408,"tag":450,"props":747,"children":748},{"style":663},[749],{"type":413,"value":750},"  let",{"type":408,"tag":450,"props":752,"children":753},{"style":712},[754],{"type":413,"value":755}," i",{"type":408,"tag":450,"props":757,"children":758},{"style":675},[759],{"type":413,"value":678},{"type":408,"tag":450,"props":761,"children":763},{"style":762},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[764],{"type":413,"value":765}," 0",{"type":408,"tag":450,"props":767,"children":768},{"style":738},[769],{"type":413,"value":741},{"type":408,"tag":450,"props":771,"children":773},{"class":452,"line":772},8,[774,778,783,787,791,796,801],{"type":408,"tag":450,"props":775,"children":776},{"style":663},[777],{"type":413,"value":750},{"type":408,"tag":450,"props":779,"children":780},{"style":712},[781],{"type":413,"value":782}," j",{"type":408,"tag":450,"props":784,"children":785},{"style":675},[786],{"type":413,"value":678},{"type":408,"tag":450,"props":788,"children":789},{"style":712},[790],{"type":413,"value":755},{"type":408,"tag":450,"props":792,"children":793},{"style":675},[794],{"type":413,"value":795}," +",{"type":408,"tag":450,"props":797,"children":798},{"style":762},[799],{"type":413,"value":800}," 1",{"type":408,"tag":450,"props":802,"children":803},{"style":738},[804],{"type":413,"value":741},{"type":408,"tag":450,"props":806,"children":808},{"class":452,"line":807},9,[809,813,818,822,828],{"type":408,"tag":450,"props":810,"children":811},{"style":663},[812],{"type":413,"value":750},{"type":408,"tag":450,"props":814,"children":815},{"style":712},[816],{"type":413,"value":817}," s",{"type":408,"tag":450,"props":819,"children":820},{"style":675},[821],{"type":413,"value":678},{"type":408,"tag":450,"props":823,"children":825},{"style":824},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[826],{"type":413,"value":827}," \"\"",{"type":408,"tag":450,"props":829,"children":830},{"style":738},[831],{"type":413,"value":741},{"type":408,"tag":450,"props":833,"children":835},{"class":452,"line":834},10,[836],{"type":408,"tag":450,"props":837,"children":839},{"emptyLinePlaceholder":838},true,[840],{"type":413,"value":841},"\n",{"type":408,"tag":450,"props":843,"children":845},{"class":452,"line":844},11,[846,852,856,861,866,870],{"type":408,"tag":450,"props":847,"children":849},{"style":848},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[850],{"type":413,"value":851},"  while",{"type":408,"tag":450,"props":853,"children":854},{"style":686},[855],{"type":413,"value":689},{"type":408,"tag":450,"props":857,"children":858},{"style":712},[859],{"type":413,"value":860},"j",{"type":408,"tag":450,"props":862,"children":863},{"style":675},[864],{"type":413,"value":865}," \u003C=",{"type":408,"tag":450,"props":867,"children":868},{"style":712},[869],{"type":413,"value":715},{"type":408,"tag":450,"props":871,"children":872},{"style":686},[873],{"type":413,"value":700},{"type":408,"tag":450,"props":875,"children":877},{"class":452,"line":876},12,[878,883,887,891,896,901,906,911,915,919,923],{"type":408,"tag":450,"props":879,"children":880},{"style":848},[881],{"type":413,"value":882},"    if",{"type":408,"tag":450,"props":884,"children":885},{"style":686},[886],{"type":413,"value":689},{"type":408,"tag":450,"props":888,"children":889},{"style":712},[890],{"type":413,"value":695},{"type":408,"tag":450,"props":892,"children":893},{"style":686},[894],{"type":413,"value":895},"[",{"type":408,"tag":450,"props":897,"children":898},{"style":712},[899],{"type":413,"value":900},"i",{"type":408,"tag":450,"props":902,"children":903},{"style":686},[904],{"type":413,"value":905},"] ",{"type":408,"tag":450,"props":907,"children":908},{"style":675},[909],{"type":413,"value":910},"!==",{"type":408,"tag":450,"props":912,"children":913},{"style":712},[914],{"type":413,"value":724},{"type":408,"tag":450,"props":916,"children":917},{"style":686},[918],{"type":413,"value":895},{"type":408,"tag":450,"props":920,"children":921},{"style":712},[922],{"type":413,"value":860},{"type":408,"tag":450,"props":924,"children":925},{"style":686},[926],{"type":413,"value":927},"]) {\n",{"type":408,"tag":450,"props":929,"children":931},{"class":452,"line":930},13,[932,937,942,946,951,955,960,964,969,974,980,984,989,993,998,1003,1007,1011,1015,1020,1025,1030,1034,1038,1042,1046],{"type":408,"tag":450,"props":933,"children":934},{"style":712},[935],{"type":413,"value":936},"      s",{"type":408,"tag":450,"props":938,"children":939},{"style":675},[940],{"type":413,"value":941}," +=",{"type":408,"tag":450,"props":943,"children":944},{"style":712},[945],{"type":413,"value":782},{"type":408,"tag":450,"props":947,"children":948},{"style":675},[949],{"type":413,"value":950}," -",{"type":408,"tag":450,"props":952,"children":953},{"style":712},[954],{"type":413,"value":755},{"type":408,"tag":450,"props":956,"children":957},{"style":675},[958],{"type":413,"value":959}," >",{"type":408,"tag":450,"props":961,"children":962},{"style":762},[963],{"type":413,"value":800},{"type":408,"tag":450,"props":965,"children":966},{"style":675},[967],{"type":413,"value":968}," ?",{"type":408,"tag":450,"props":970,"children":971},{"style":824},[972],{"type":413,"value":973}," `",{"type":408,"tag":450,"props":975,"children":977},{"style":976},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#FF8F40",[978],{"type":413,"value":979},"${",{"type":408,"tag":450,"props":981,"children":982},{"style":712},[983],{"type":413,"value":695},{"type":408,"tag":450,"props":985,"children":987},{"style":986},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#BFBDB6",[988],{"type":413,"value":895},{"type":408,"tag":450,"props":990,"children":991},{"style":712},[992],{"type":413,"value":900},{"type":408,"tag":450,"props":994,"children":995},{"style":986},[996],{"type":413,"value":997},"]",{"type":408,"tag":450,"props":999,"children":1000},{"style":976},[1001],{"type":413,"value":1002},"}${",{"type":408,"tag":450,"props":1004,"children":1005},{"style":712},[1006],{"type":413,"value":860},{"type":408,"tag":450,"props":1008,"children":1009},{"style":675},[1010],{"type":413,"value":950},{"type":408,"tag":450,"props":1012,"children":1013},{"style":712},[1014],{"type":413,"value":755},{"type":408,"tag":450,"props":1016,"children":1017},{"style":976},[1018],{"type":413,"value":1019},"}",{"type":408,"tag":450,"props":1021,"children":1022},{"style":824},[1023],{"type":413,"value":1024},"`",{"type":408,"tag":450,"props":1026,"children":1027},{"style":675},[1028],{"type":413,"value":1029}," :",{"type":408,"tag":450,"props":1031,"children":1032},{"style":712},[1033],{"type":413,"value":724},{"type":408,"tag":450,"props":1035,"children":1036},{"style":686},[1037],{"type":413,"value":895},{"type":408,"tag":450,"props":1039,"children":1040},{"style":712},[1041],{"type":413,"value":900},{"type":408,"tag":450,"props":1043,"children":1044},{"style":686},[1045],{"type":413,"value":997},{"type":408,"tag":450,"props":1047,"children":1048},{"style":738},[1049],{"type":413,"value":741},{"type":408,"tag":450,"props":1051,"children":1053},{"class":452,"line":1052},14,[1054,1059,1063,1067],{"type":408,"tag":450,"props":1055,"children":1056},{"style":712},[1057],{"type":413,"value":1058},"      i",{"type":408,"tag":450,"props":1060,"children":1061},{"style":675},[1062],{"type":413,"value":678},{"type":408,"tag":450,"props":1064,"children":1065},{"style":712},[1066],{"type":413,"value":782},{"type":408,"tag":450,"props":1068,"children":1069},{"style":738},[1070],{"type":413,"value":741},{"type":408,"tag":450,"props":1072,"children":1074},{"class":452,"line":1073},15,[1075],{"type":408,"tag":450,"props":1076,"children":1077},{"style":686},[1078],{"type":413,"value":1079},"    }\n",{"type":408,"tag":450,"props":1081,"children":1083},{"class":452,"line":1082},16,[1084,1089,1094],{"type":408,"tag":450,"props":1085,"children":1086},{"style":712},[1087],{"type":413,"value":1088},"    j",{"type":408,"tag":450,"props":1090,"children":1091},{"style":675},[1092],{"type":413,"value":1093},"++",{"type":408,"tag":450,"props":1095,"children":1096},{"style":738},[1097],{"type":413,"value":741},{"type":408,"tag":450,"props":1099,"children":1101},{"class":452,"line":1100},17,[1102],{"type":408,"tag":450,"props":1103,"children":1104},{"style":686},[1105],{"type":413,"value":1106},"  }\n",{"type":408,"tag":450,"props":1108,"children":1110},{"class":452,"line":1109},18,[1111],{"type":408,"tag":450,"props":1112,"children":1113},{"emptyLinePlaceholder":838},[1114],{"type":413,"value":841},{"type":408,"tag":450,"props":1116,"children":1118},{"class":452,"line":1117},19,[1119,1124,1128,1133,1137,1141,1145,1150,1154,1159,1163,1167,1171,1175,1179,1183],{"type":408,"tag":450,"props":1120,"children":1121},{"style":848},[1122],{"type":413,"value":1123},"  for",{"type":408,"tag":450,"props":1125,"children":1126},{"style":686},[1127],{"type":413,"value":689},{"type":408,"tag":450,"props":1129,"children":1130},{"style":663},[1131],{"type":413,"value":1132},"let",{"type":408,"tag":450,"props":1134,"children":1135},{"style":712},[1136],{"type":413,"value":755},{"type":408,"tag":450,"props":1138,"children":1139},{"style":675},[1140],{"type":413,"value":678},{"type":408,"tag":450,"props":1142,"children":1143},{"style":762},[1144],{"type":413,"value":765},{"type":408,"tag":450,"props":1146,"children":1147},{"style":738},[1148],{"type":413,"value":1149},";",{"type":408,"tag":450,"props":1151,"children":1152},{"style":712},[1153],{"type":413,"value":755},{"type":408,"tag":450,"props":1155,"children":1156},{"style":675},[1157],{"type":413,"value":1158}," \u003C",{"type":408,"tag":450,"props":1160,"children":1161},{"style":712},[1162],{"type":413,"value":817},{"type":408,"tag":450,"props":1164,"children":1165},{"style":727},[1166],{"type":413,"value":730},{"type":408,"tag":450,"props":1168,"children":1169},{"style":686},[1170],{"type":413,"value":735},{"type":408,"tag":450,"props":1172,"children":1173},{"style":738},[1174],{"type":413,"value":1149},{"type":408,"tag":450,"props":1176,"children":1177},{"style":712},[1178],{"type":413,"value":755},{"type":408,"tag":450,"props":1180,"children":1181},{"style":675},[1182],{"type":413,"value":1093},{"type":408,"tag":450,"props":1184,"children":1185},{"style":686},[1186],{"type":413,"value":700},{"type":408,"tag":450,"props":1188,"children":1190},{"class":452,"line":1189},20,[1191,1196,1200,1204,1208,1213,1217,1221,1225,1229],{"type":408,"tag":450,"props":1192,"children":1193},{"style":712},[1194],{"type":413,"value":1195},"    chars",{"type":408,"tag":450,"props":1197,"children":1198},{"style":686},[1199],{"type":413,"value":895},{"type":408,"tag":450,"props":1201,"children":1202},{"style":712},[1203],{"type":413,"value":900},{"type":408,"tag":450,"props":1205,"children":1206},{"style":686},[1207],{"type":413,"value":905},{"type":408,"tag":450,"props":1209,"children":1210},{"style":675},[1211],{"type":413,"value":1212},"=",{"type":408,"tag":450,"props":1214,"children":1215},{"style":712},[1216],{"type":413,"value":817},{"type":408,"tag":450,"props":1218,"children":1219},{"style":686},[1220],{"type":413,"value":895},{"type":408,"tag":450,"props":1222,"children":1223},{"style":712},[1224],{"type":413,"value":900},{"type":408,"tag":450,"props":1226,"children":1227},{"style":686},[1228],{"type":413,"value":997},{"type":408,"tag":450,"props":1230,"children":1231},{"style":738},[1232],{"type":413,"value":741},{"type":408,"tag":450,"props":1234,"children":1236},{"class":452,"line":1235},21,[1237],{"type":408,"tag":450,"props":1238,"children":1239},{"style":686},[1240],{"type":413,"value":1106},{"type":408,"tag":450,"props":1242,"children":1244},{"class":452,"line":1243},22,[1245],{"type":408,"tag":450,"props":1246,"children":1247},{"emptyLinePlaceholder":838},[1248],{"type":413,"value":841},{"type":408,"tag":450,"props":1250,"children":1252},{"class":452,"line":1251},23,[1253,1258,1262,1266,1270],{"type":408,"tag":450,"props":1254,"children":1255},{"style":848},[1256],{"type":413,"value":1257},"  return",{"type":408,"tag":450,"props":1259,"children":1260},{"style":712},[1261],{"type":413,"value":817},{"type":408,"tag":450,"props":1263,"children":1264},{"style":727},[1265],{"type":413,"value":730},{"type":408,"tag":450,"props":1267,"children":1268},{"style":686},[1269],{"type":413,"value":735},{"type":408,"tag":450,"props":1271,"children":1272},{"style":738},[1273],{"type":413,"value":741},{"type":408,"tag":450,"props":1275,"children":1277},{"class":452,"line":1276},24,[1278,1282],{"type":408,"tag":450,"props":1279,"children":1280},{"style":686},[1281],{"type":413,"value":1019},{"type":408,"tag":450,"props":1283,"children":1284},{"style":738},[1285],{"type":413,"value":741},{"type":408,"tag":1287,"props":1288,"children":1289},"style",{},[1290],{"type":413,"value":1291},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":401,"searchDepth":659,"depth":659,"links":1293},[1294,1295],{"id":573,"depth":462,"text":573},{"id":578,"depth":462,"text":578,"children":1296},[1297],{"id":584,"depth":471,"text":584},"markdown","content:1.algorithm:3.leetcode:443.string-compression.md","content","1.algorithm/3.leetcode/443.string-compression.md","md",[1304,1306],{"_path":203,"title":202,"description":1305},"给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。",{"_path":209,"title":208,"description":1307},"斐波那契数 （通常用 F(n) 表示）形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：",1713153295887]