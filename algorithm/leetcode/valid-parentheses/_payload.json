[{"data":1,"prerenderedAt":1191},["Reactive",2],{"navigation":3,"/algorithm/leetcode/valid-parentheses":424,"/algorithm/leetcode/valid-parentheses-surround":1186},[4,237,265,403,410],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,396],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"随机数","/frontend-code-assessment/scene/random-number",{"title":382,"_path":383},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":385,"_path":386},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":388,"_path":389},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":391,"_path":392},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":394,"_path":395},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":397,"_path":398,"children":399},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[400],{"title":401,"_path":402},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":404,"_path":405,"children":406},"项目","/pro",[407],{"title":408,"_path":409},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":411,"_path":412,"children":413},"后端语言","/backend-languages",[414],{"title":415,"_path":416,"children":417},"Python","/backend-languages/python",[418,421],{"title":419,"_path":420},"基础","/backend-languages/python/base",{"title":422,"_path":423},"函数","/backend-languages/python/function",{"_path":56,"_dir":425,"_draft":426,"_partial":426,"_locale":427,"title":55,"description":428,"url":429,"body":430,"_type":1181,"_id":1182,"_source":1183,"_file":1184,"_extension":1185},"leetcode",false,"","给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串 s ，判断字符串是否有效。","https://leetcode.cn/problems/valid-parentheses",{"type":431,"children":432,"toc":1175},"root",[433,440,445,465,470,500,505,527,532,555,560,574,580,585,591,1169],{"type":434,"tag":435,"props":436,"children":437},"element","p",{},[438],{"type":439,"value":428},"text",{"type":434,"tag":435,"props":441,"children":442},{},[443],{"type":439,"value":444},"有效字符串需满足：",{"type":434,"tag":446,"props":447,"children":448},"ol",{},[449,455,460],{"type":434,"tag":450,"props":451,"children":452},"li",{},[453],{"type":439,"value":454},"左括号必须用相同类型的右括号闭合。",{"type":434,"tag":450,"props":456,"children":457},{},[458],{"type":439,"value":459},"左括号必须以正确的顺序闭合。",{"type":434,"tag":450,"props":461,"children":462},{},[463],{"type":439,"value":464},"每个右括号都有一个对应的相同类型的左括号。",{"type":434,"tag":435,"props":466,"children":467},{},[468],{"type":439,"value":469},"示例 1：",{"type":434,"tag":471,"props":472,"children":475},"pre",{"className":473,"code":474,"language":439,"meta":427,"style":427},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：s = \"()\"\n输出：true\n",[476],{"type":434,"tag":477,"props":478,"children":479},"code",{"__ignoreMap":427},[480,491],{"type":434,"tag":481,"props":482,"children":485},"span",{"class":483,"line":484},"line",1,[486],{"type":434,"tag":481,"props":487,"children":488},{},[489],{"type":439,"value":490},"输入：s = \"()\"\n",{"type":434,"tag":481,"props":492,"children":494},{"class":483,"line":493},2,[495],{"type":434,"tag":481,"props":496,"children":497},{},[498],{"type":439,"value":499},"输出：true\n",{"type":434,"tag":435,"props":501,"children":502},{},[503],{"type":439,"value":504},"示例 2：",{"type":434,"tag":471,"props":506,"children":508},{"className":473,"code":507,"language":439,"meta":427,"style":427},"输入：s = \"()[]{}\"\n输出：true\n",[509],{"type":434,"tag":477,"props":510,"children":511},{"__ignoreMap":427},[512,520],{"type":434,"tag":481,"props":513,"children":514},{"class":483,"line":484},[515],{"type":434,"tag":481,"props":516,"children":517},{},[518],{"type":439,"value":519},"输入：s = \"()[]{}\"\n",{"type":434,"tag":481,"props":521,"children":522},{"class":483,"line":493},[523],{"type":434,"tag":481,"props":524,"children":525},{},[526],{"type":439,"value":499},{"type":434,"tag":435,"props":528,"children":529},{},[530],{"type":439,"value":531},"示例 3：",{"type":434,"tag":471,"props":533,"children":535},{"className":473,"code":534,"language":439,"meta":427,"style":427},"输入：s = \"(]\"\n输出：false\n",[536],{"type":434,"tag":477,"props":537,"children":538},{"__ignoreMap":427},[539,547],{"type":434,"tag":481,"props":540,"children":541},{"class":483,"line":484},[542],{"type":434,"tag":481,"props":543,"children":544},{},[545],{"type":439,"value":546},"输入：s = \"(]\"\n",{"type":434,"tag":481,"props":548,"children":549},{"class":483,"line":493},[550],{"type":434,"tag":481,"props":551,"children":552},{},[553],{"type":439,"value":554},"输出：false\n",{"type":434,"tag":435,"props":556,"children":557},{},[558],{"type":439,"value":559},"提示：",{"type":434,"tag":561,"props":562,"children":563},"ul",{},[564,569],{"type":434,"tag":450,"props":565,"children":566},{},[567],{"type":439,"value":568},"1 \u003C= s.length \u003C= 104",{"type":434,"tag":450,"props":570,"children":571},{},[572],{"type":439,"value":573},"s 仅由括号 '()[]{}' 组成",{"type":434,"tag":575,"props":576,"children":578},"h2",{"id":577},"解题思路",[579],{"type":439,"value":577},{"type":434,"tag":575,"props":581,"children":583},{"id":582},"实现",[584],{"type":439,"value":582},{"type":434,"tag":586,"props":587,"children":589},"h3",{"id":588},"栈",[590],{"type":439,"value":588},{"type":434,"tag":471,"props":592,"children":596},{"className":593,"code":594,"language":595,"meta":427,"style":427},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {string} s\n * @return {boolean}\n */\nvar isValid = function (s) {\n  let map = new Map([\n    [\"(\", \")\"],\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n  ]);\n  let stack = [];\n  for (let char of s) {\n    if (map.has(char)) {\n      stack.push(char);\n    } else if (!stack.length || map.get(stack.pop()) !== char) {\n      return false;\n    }\n  }\n  return !stack.length;\n};\n","js",[597],{"type":434,"tag":477,"props":598,"children":599},{"__ignoreMap":427},[600,609,635,653,662,706,740,776,806,836,850,876,914,958,993,1088,1107,1116,1125,1156],{"type":434,"tag":481,"props":601,"children":602},{"class":483,"line":484},[603],{"type":434,"tag":481,"props":604,"children":606},{"style":605},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[607],{"type":439,"value":608},"/**\n",{"type":434,"tag":481,"props":610,"children":611},{"class":483,"line":493},[612,617,623,629],{"type":434,"tag":481,"props":613,"children":614},{"style":605},[615],{"type":439,"value":616}," * ",{"type":434,"tag":481,"props":618,"children":620},{"style":619},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[621],{"type":439,"value":622},"@param",{"type":434,"tag":481,"props":624,"children":626},{"style":625},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[627],{"type":439,"value":628}," {string}",{"type":434,"tag":481,"props":630,"children":632},{"style":631},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[633],{"type":439,"value":634}," s\n",{"type":434,"tag":481,"props":636,"children":638},{"class":483,"line":637},3,[639,643,648],{"type":434,"tag":481,"props":640,"children":641},{"style":605},[642],{"type":439,"value":616},{"type":434,"tag":481,"props":644,"children":645},{"style":619},[646],{"type":439,"value":647},"@return",{"type":434,"tag":481,"props":649,"children":650},{"style":625},[651],{"type":439,"value":652}," {boolean}\n",{"type":434,"tag":481,"props":654,"children":656},{"class":483,"line":655},4,[657],{"type":434,"tag":481,"props":658,"children":659},{"style":605},[660],{"type":439,"value":661}," */\n",{"type":434,"tag":481,"props":663,"children":665},{"class":483,"line":664},5,[666,672,678,684,689,695,701],{"type":434,"tag":481,"props":667,"children":669},{"style":668},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[670],{"type":439,"value":671},"var",{"type":434,"tag":481,"props":673,"children":675},{"style":674},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[676],{"type":439,"value":677}," isValid",{"type":434,"tag":481,"props":679,"children":681},{"style":680},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[682],{"type":439,"value":683}," =",{"type":434,"tag":481,"props":685,"children":686},{"style":668},[687],{"type":439,"value":688}," function",{"type":434,"tag":481,"props":690,"children":692},{"style":691},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[693],{"type":439,"value":694}," (",{"type":434,"tag":481,"props":696,"children":698},{"style":697},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[699],{"type":439,"value":700},"s",{"type":434,"tag":481,"props":702,"children":703},{"style":691},[704],{"type":439,"value":705},") {\n",{"type":434,"tag":481,"props":707,"children":709},{"class":483,"line":708},6,[710,715,721,725,730,735],{"type":434,"tag":481,"props":711,"children":712},{"style":668},[713],{"type":439,"value":714},"  let",{"type":434,"tag":481,"props":716,"children":718},{"style":717},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[719],{"type":439,"value":720}," map",{"type":434,"tag":481,"props":722,"children":723},{"style":680},[724],{"type":439,"value":683},{"type":434,"tag":481,"props":726,"children":727},{"style":680},[728],{"type":439,"value":729}," new",{"type":434,"tag":481,"props":731,"children":732},{"style":674},[733],{"type":439,"value":734}," Map",{"type":434,"tag":481,"props":736,"children":737},{"style":691},[738],{"type":439,"value":739},"([\n",{"type":434,"tag":481,"props":741,"children":743},{"class":483,"line":742},7,[744,749,755,761,766,771],{"type":434,"tag":481,"props":745,"children":746},{"style":691},[747],{"type":439,"value":748},"    [",{"type":434,"tag":481,"props":750,"children":752},{"style":751},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[753],{"type":439,"value":754},"\"(\"",{"type":434,"tag":481,"props":756,"children":758},{"style":757},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[759],{"type":439,"value":760},",",{"type":434,"tag":481,"props":762,"children":763},{"style":751},[764],{"type":439,"value":765}," \")\"",{"type":434,"tag":481,"props":767,"children":768},{"style":691},[769],{"type":439,"value":770},"]",{"type":434,"tag":481,"props":772,"children":773},{"style":757},[774],{"type":439,"value":775},",\n",{"type":434,"tag":481,"props":777,"children":779},{"class":483,"line":778},8,[780,784,789,793,798,802],{"type":434,"tag":481,"props":781,"children":782},{"style":691},[783],{"type":439,"value":748},{"type":434,"tag":481,"props":785,"children":786},{"style":751},[787],{"type":439,"value":788},"\"{\"",{"type":434,"tag":481,"props":790,"children":791},{"style":757},[792],{"type":439,"value":760},{"type":434,"tag":481,"props":794,"children":795},{"style":751},[796],{"type":439,"value":797}," \"}\"",{"type":434,"tag":481,"props":799,"children":800},{"style":691},[801],{"type":439,"value":770},{"type":434,"tag":481,"props":803,"children":804},{"style":757},[805],{"type":439,"value":775},{"type":434,"tag":481,"props":807,"children":809},{"class":483,"line":808},9,[810,814,819,823,828,832],{"type":434,"tag":481,"props":811,"children":812},{"style":691},[813],{"type":439,"value":748},{"type":434,"tag":481,"props":815,"children":816},{"style":751},[817],{"type":439,"value":818},"\"[\"",{"type":434,"tag":481,"props":820,"children":821},{"style":757},[822],{"type":439,"value":760},{"type":434,"tag":481,"props":824,"children":825},{"style":751},[826],{"type":439,"value":827}," \"]\"",{"type":434,"tag":481,"props":829,"children":830},{"style":691},[831],{"type":439,"value":770},{"type":434,"tag":481,"props":833,"children":834},{"style":757},[835],{"type":439,"value":775},{"type":434,"tag":481,"props":837,"children":839},{"class":483,"line":838},10,[840,845],{"type":434,"tag":481,"props":841,"children":842},{"style":691},[843],{"type":439,"value":844},"  ])",{"type":434,"tag":481,"props":846,"children":847},{"style":757},[848],{"type":439,"value":849},";\n",{"type":434,"tag":481,"props":851,"children":853},{"class":483,"line":852},11,[854,858,863,867,872],{"type":434,"tag":481,"props":855,"children":856},{"style":668},[857],{"type":439,"value":714},{"type":434,"tag":481,"props":859,"children":860},{"style":717},[861],{"type":439,"value":862}," stack",{"type":434,"tag":481,"props":864,"children":865},{"style":680},[866],{"type":439,"value":683},{"type":434,"tag":481,"props":868,"children":869},{"style":691},[870],{"type":439,"value":871}," []",{"type":434,"tag":481,"props":873,"children":874},{"style":757},[875],{"type":439,"value":849},{"type":434,"tag":481,"props":877,"children":879},{"class":483,"line":878},12,[880,886,890,895,900,905,910],{"type":434,"tag":481,"props":881,"children":883},{"style":882},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[884],{"type":439,"value":885},"  for",{"type":434,"tag":481,"props":887,"children":888},{"style":691},[889],{"type":439,"value":694},{"type":434,"tag":481,"props":891,"children":892},{"style":668},[893],{"type":439,"value":894},"let",{"type":434,"tag":481,"props":896,"children":897},{"style":717},[898],{"type":439,"value":899}," char",{"type":434,"tag":481,"props":901,"children":902},{"style":680},[903],{"type":439,"value":904}," of",{"type":434,"tag":481,"props":906,"children":907},{"style":717},[908],{"type":439,"value":909}," s",{"type":434,"tag":481,"props":911,"children":912},{"style":691},[913],{"type":439,"value":705},{"type":434,"tag":481,"props":915,"children":917},{"class":483,"line":916},13,[918,923,927,932,938,943,948,953],{"type":434,"tag":481,"props":919,"children":920},{"style":882},[921],{"type":439,"value":922},"    if",{"type":434,"tag":481,"props":924,"children":925},{"style":691},[926],{"type":439,"value":694},{"type":434,"tag":481,"props":928,"children":929},{"style":717},[930],{"type":439,"value":931},"map",{"type":434,"tag":481,"props":933,"children":935},{"style":934},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[936],{"type":439,"value":937},".",{"type":434,"tag":481,"props":939,"children":940},{"style":674},[941],{"type":439,"value":942},"has",{"type":434,"tag":481,"props":944,"children":945},{"style":691},[946],{"type":439,"value":947},"(",{"type":434,"tag":481,"props":949,"children":950},{"style":717},[951],{"type":439,"value":952},"char",{"type":434,"tag":481,"props":954,"children":955},{"style":691},[956],{"type":439,"value":957},")) {\n",{"type":434,"tag":481,"props":959,"children":961},{"class":483,"line":960},14,[962,967,971,976,980,984,989],{"type":434,"tag":481,"props":963,"children":964},{"style":717},[965],{"type":439,"value":966},"      stack",{"type":434,"tag":481,"props":968,"children":969},{"style":934},[970],{"type":439,"value":937},{"type":434,"tag":481,"props":972,"children":973},{"style":674},[974],{"type":439,"value":975},"push",{"type":434,"tag":481,"props":977,"children":978},{"style":691},[979],{"type":439,"value":947},{"type":434,"tag":481,"props":981,"children":982},{"style":717},[983],{"type":439,"value":952},{"type":434,"tag":481,"props":985,"children":986},{"style":691},[987],{"type":439,"value":988},")",{"type":434,"tag":481,"props":990,"children":991},{"style":757},[992],{"type":439,"value":849},{"type":434,"tag":481,"props":994,"children":996},{"class":483,"line":995},15,[997,1002,1007,1012,1016,1021,1026,1030,1035,1040,1044,1048,1053,1057,1061,1065,1070,1075,1080,1084],{"type":434,"tag":481,"props":998,"children":999},{"style":691},[1000],{"type":439,"value":1001},"    } ",{"type":434,"tag":481,"props":1003,"children":1004},{"style":882},[1005],{"type":439,"value":1006},"else",{"type":434,"tag":481,"props":1008,"children":1009},{"style":882},[1010],{"type":439,"value":1011}," if",{"type":434,"tag":481,"props":1013,"children":1014},{"style":691},[1015],{"type":439,"value":694},{"type":434,"tag":481,"props":1017,"children":1018},{"style":680},[1019],{"type":439,"value":1020},"!",{"type":434,"tag":481,"props":1022,"children":1023},{"style":717},[1024],{"type":439,"value":1025},"stack",{"type":434,"tag":481,"props":1027,"children":1028},{"style":934},[1029],{"type":439,"value":937},{"type":434,"tag":481,"props":1031,"children":1032},{"style":691},[1033],{"type":439,"value":1034},"length ",{"type":434,"tag":481,"props":1036,"children":1037},{"style":680},[1038],{"type":439,"value":1039},"||",{"type":434,"tag":481,"props":1041,"children":1042},{"style":717},[1043],{"type":439,"value":720},{"type":434,"tag":481,"props":1045,"children":1046},{"style":934},[1047],{"type":439,"value":937},{"type":434,"tag":481,"props":1049,"children":1050},{"style":674},[1051],{"type":439,"value":1052},"get",{"type":434,"tag":481,"props":1054,"children":1055},{"style":691},[1056],{"type":439,"value":947},{"type":434,"tag":481,"props":1058,"children":1059},{"style":717},[1060],{"type":439,"value":1025},{"type":434,"tag":481,"props":1062,"children":1063},{"style":934},[1064],{"type":439,"value":937},{"type":434,"tag":481,"props":1066,"children":1067},{"style":674},[1068],{"type":439,"value":1069},"pop",{"type":434,"tag":481,"props":1071,"children":1072},{"style":691},[1073],{"type":439,"value":1074},"()) ",{"type":434,"tag":481,"props":1076,"children":1077},{"style":680},[1078],{"type":439,"value":1079},"!==",{"type":434,"tag":481,"props":1081,"children":1082},{"style":717},[1083],{"type":439,"value":899},{"type":434,"tag":481,"props":1085,"children":1086},{"style":691},[1087],{"type":439,"value":705},{"type":434,"tag":481,"props":1089,"children":1091},{"class":483,"line":1090},16,[1092,1097,1103],{"type":434,"tag":481,"props":1093,"children":1094},{"style":882},[1095],{"type":439,"value":1096},"      return",{"type":434,"tag":481,"props":1098,"children":1100},{"style":1099},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[1101],{"type":439,"value":1102}," false",{"type":434,"tag":481,"props":1104,"children":1105},{"style":757},[1106],{"type":439,"value":849},{"type":434,"tag":481,"props":1108,"children":1110},{"class":483,"line":1109},17,[1111],{"type":434,"tag":481,"props":1112,"children":1113},{"style":691},[1114],{"type":439,"value":1115},"    }\n",{"type":434,"tag":481,"props":1117,"children":1119},{"class":483,"line":1118},18,[1120],{"type":434,"tag":481,"props":1121,"children":1122},{"style":691},[1123],{"type":439,"value":1124},"  }\n",{"type":434,"tag":481,"props":1126,"children":1128},{"class":483,"line":1127},19,[1129,1134,1139,1143,1147,1152],{"type":434,"tag":481,"props":1130,"children":1131},{"style":882},[1132],{"type":439,"value":1133},"  return",{"type":434,"tag":481,"props":1135,"children":1136},{"style":680},[1137],{"type":439,"value":1138}," !",{"type":434,"tag":481,"props":1140,"children":1141},{"style":717},[1142],{"type":439,"value":1025},{"type":434,"tag":481,"props":1144,"children":1145},{"style":934},[1146],{"type":439,"value":937},{"type":434,"tag":481,"props":1148,"children":1149},{"style":691},[1150],{"type":439,"value":1151},"length",{"type":434,"tag":481,"props":1153,"children":1154},{"style":757},[1155],{"type":439,"value":849},{"type":434,"tag":481,"props":1157,"children":1159},{"class":483,"line":1158},20,[1160,1165],{"type":434,"tag":481,"props":1161,"children":1162},{"style":691},[1163],{"type":439,"value":1164},"}",{"type":434,"tag":481,"props":1166,"children":1167},{"style":757},[1168],{"type":439,"value":849},{"type":434,"tag":1170,"props":1171,"children":1172},"style",{},[1173],{"type":439,"value":1174},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":427,"searchDepth":664,"depth":664,"links":1176},[1177,1178],{"id":577,"depth":493,"text":577},{"id":582,"depth":493,"text":582,"children":1179},[1180],{"id":588,"depth":637,"text":588},"markdown","content:1.algorithm:3.leetcode:20.valid-parentheses.md","content","1.algorithm/3.leetcode/20.valid-parentheses.md","md",[1187,1189],{"_path":53,"title":52,"description":1188},"给你一个整数数组 nums ，判断是否存在三元组 [nums[i], nums[j], nums[k]] 满足 i != j、i != k 且 j != k ，同时还满足 nums[i] + nums[j] + nums[k] == 0 。请",{"_path":59,"title":58,"description":1190},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",1713339869089]