[{"data":1,"prerenderedAt":1574},["Reactive",2],{"navigation":3,"/algorithm/leetcode/add-two-numbers":427,"/algorithm/leetcode/add-two-numbers-surround":1569},[4,237,265,406,413],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,399],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":382,"_path":383},"随机数","/frontend-code-assessment/scene/random-number",{"title":385,"_path":386},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":388,"_path":389},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":391,"_path":392},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":394,"_path":395},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":397,"_path":398},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":400,"_path":401,"children":402},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[403],{"title":404,"_path":405},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":407,"_path":408,"children":409},"项目","/pro",[410],{"title":411,"_path":412},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":414,"_path":415,"children":416},"后端语言","/backend-languages",[417],{"title":418,"_path":419,"children":420},"Python","/backend-languages/python",[421,424],{"title":422,"_path":423},"基础","/backend-languages/python/base",{"title":425,"_path":426},"函数","/backend-languages/python/function",{"_path":32,"_dir":428,"_draft":429,"_partial":429,"_locale":430,"title":31,"description":431,"url":432,"body":433,"_type":1564,"_id":1565,"_source":1566,"_file":1567,"_extension":1568},"leetcode",false,"","给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。","https://leetcode.cn/problems/add-two-numbers",{"type":434,"children":435,"toc":1557},"root",[436,443,448,453,458,497,502,525,530,553,558,578,584,603,608,652,658,663,1551],{"type":437,"tag":438,"props":439,"children":440},"element","p",{},[441],{"type":442,"value":431},"text",{"type":437,"tag":438,"props":444,"children":445},{},[446],{"type":442,"value":447},"请你将两个数相加，并以相同形式返回一个表示和的链表。",{"type":437,"tag":438,"props":449,"children":450},{},[451],{"type":442,"value":452},"你可以假设除了数字 0 之外，这两个数都不会以 0 开头。",{"type":437,"tag":438,"props":454,"children":455},{},[456],{"type":442,"value":457},"示例 1：",{"type":437,"tag":459,"props":460,"children":463},"pre",{"className":461,"code":462,"language":442,"meta":430,"style":430},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：l1 = [2,4,3], l2 = [5,6,4]\n输出：[7,0,8]\n解释：342 + 465 = 807.\n",[464],{"type":437,"tag":465,"props":466,"children":467},"code",{"__ignoreMap":430},[468,479,488],{"type":437,"tag":469,"props":470,"children":473},"span",{"class":471,"line":472},"line",1,[474],{"type":437,"tag":469,"props":475,"children":476},{},[477],{"type":442,"value":478},"输入：l1 = [2,4,3], l2 = [5,6,4]\n",{"type":437,"tag":469,"props":480,"children":482},{"class":471,"line":481},2,[483],{"type":437,"tag":469,"props":484,"children":485},{},[486],{"type":442,"value":487},"输出：[7,0,8]\n",{"type":437,"tag":469,"props":489,"children":491},{"class":471,"line":490},3,[492],{"type":437,"tag":469,"props":493,"children":494},{},[495],{"type":442,"value":496},"解释：342 + 465 = 807.\n",{"type":437,"tag":438,"props":498,"children":499},{},[500],{"type":442,"value":501},"示例 2：",{"type":437,"tag":459,"props":503,"children":505},{"className":461,"code":504,"language":442,"meta":430,"style":430},"输入：l1 = [0], l2 = [0]\n输出：[0]\n",[506],{"type":437,"tag":465,"props":507,"children":508},{"__ignoreMap":430},[509,517],{"type":437,"tag":469,"props":510,"children":511},{"class":471,"line":472},[512],{"type":437,"tag":469,"props":513,"children":514},{},[515],{"type":442,"value":516},"输入：l1 = [0], l2 = [0]\n",{"type":437,"tag":469,"props":518,"children":519},{"class":471,"line":481},[520],{"type":437,"tag":469,"props":521,"children":522},{},[523],{"type":442,"value":524},"输出：[0]\n",{"type":437,"tag":438,"props":526,"children":527},{},[528],{"type":442,"value":529},"示例 3：",{"type":437,"tag":459,"props":531,"children":533},{"className":461,"code":532,"language":442,"meta":430,"style":430},"输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n输出：[8,9,9,9,0,0,0,1]\n",[534],{"type":437,"tag":465,"props":535,"children":536},{"__ignoreMap":430},[537,545],{"type":437,"tag":469,"props":538,"children":539},{"class":471,"line":472},[540],{"type":437,"tag":469,"props":541,"children":542},{},[543],{"type":442,"value":544},"输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n",{"type":437,"tag":469,"props":546,"children":547},{"class":471,"line":481},[548],{"type":437,"tag":469,"props":549,"children":550},{},[551],{"type":442,"value":552},"输出：[8,9,9,9,0,0,0,1]\n",{"type":437,"tag":438,"props":554,"children":555},{},[556],{"type":442,"value":557},"提示：",{"type":437,"tag":559,"props":560,"children":561},"ul",{},[562,568,573],{"type":437,"tag":563,"props":564,"children":565},"li",{},[566],{"type":442,"value":567},"每个链表中的节点数在范围 [1, 100] 内",{"type":437,"tag":563,"props":569,"children":570},{},[571],{"type":442,"value":572},"0 \u003C= Node.val \u003C= 9",{"type":437,"tag":563,"props":574,"children":575},{},[576],{"type":442,"value":577},"题目数据保证列表表示的数字不含前导零",{"type":437,"tag":579,"props":580,"children":582},"h2",{"id":581},"解题思路",[583],{"type":442,"value":581},{"type":437,"tag":585,"props":586,"children":587},"ol",{},[588,593,598],{"type":437,"tag":563,"props":589,"children":590},{},[591],{"type":442,"value":592},"将两个链表看作相同长度进行遍历，如果某个链表较短则在前方补 0",{"type":437,"tag":563,"props":594,"children":595},{},[596],{"type":442,"value":597},"因为每个节点只能存放一位数字，因此要考虑进位，计算结束后要更新进位值",{"type":437,"tag":563,"props":599,"children":600},{},[601],{"type":442,"value":602},"若两个链表全部遍历完成之后，进位位 1，则在新构建的链表最前方添加节点 1",{"type":437,"tag":579,"props":604,"children":606},{"id":605},"图解",[607],{"type":442,"value":605},{"type":437,"tag":438,"props":609,"children":610},{},[611,617,622,627,632,637,642,647],{"type":437,"tag":612,"props":613,"children":616},"img",{"alt":614,"src":615},"figure_1","/img/code_leetcode_No.2_figure_1.png",[],{"type":437,"tag":612,"props":618,"children":621},{"alt":619,"src":620},"figure_2","/img/code_leetcode_No.2_figure_2.png",[],{"type":437,"tag":612,"props":623,"children":626},{"alt":624,"src":625},"figure_3","/img/code_leetcode_No.2_figure_3.png",[],{"type":437,"tag":612,"props":628,"children":631},{"alt":629,"src":630},"figure_4","/img/code_leetcode_No.2_figure_4.png",[],{"type":437,"tag":612,"props":633,"children":636},{"alt":634,"src":635},"figure_5","/img/code_leetcode_No.2_figure_5.png",[],{"type":437,"tag":612,"props":638,"children":641},{"alt":639,"src":640},"figure_6","/img/code_leetcode_No.2_figure_6.png",[],{"type":437,"tag":612,"props":643,"children":646},{"alt":644,"src":645},"figure_7","/img/code_leetcode_No.2_figure_7.png",[],{"type":437,"tag":612,"props":648,"children":651},{"alt":649,"src":650},"figure_8","/img/code_leetcode_No.2_figure_8.png",[],{"type":437,"tag":653,"props":654,"children":656},"h3",{"id":655},"实现",[657],{"type":442,"value":655},{"type":437,"tag":653,"props":659,"children":661},{"id":660},"构造哑节点",[662],{"type":442,"value":660},{"type":437,"tag":459,"props":664,"children":668},{"className":665,"code":666,"language":667,"meta":430,"style":430},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar addTwoNumbers = function (l1, l2) {\n  const node = new ListNode(0);\n  let current = node;\n  let curry = 0;\n\n  while (l1 || l2) {\n    const n1 = l1 ? l1.val : 0;\n    const n2 = l2 ? l2.val : 0;\n    const sum = n1 + n2 + curry;\n    curry = parseInt(sum / 10);\n    current.next = new ListNode(sum % 10);\n    current = current.next;\n\n    if (l1) {\n      l1 = l1.next;\n    }\n    if (l2) {\n      l2 = l2.next;\n    }\n  }\n\n  if (curry > 0) {\n    current.next = new ListNode(curry);\n  }\n  return node.next;\n};\n","js",[669],{"type":437,"tag":465,"props":670,"children":671},{"__ignoreMap":430},[672,681,689,697,706,715,724,733,741,768,789,807,815,870,920,946,972,982,1013,1069,1118,1160,1205,1260,1288,1296,1317,1346,1355,1376,1405,1413,1422,1430,1461,1505,1513,1538],{"type":437,"tag":469,"props":673,"children":674},{"class":471,"line":472},[675],{"type":437,"tag":469,"props":676,"children":678},{"style":677},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[679],{"type":442,"value":680},"/**\n",{"type":437,"tag":469,"props":682,"children":683},{"class":471,"line":481},[684],{"type":437,"tag":469,"props":685,"children":686},{"style":677},[687],{"type":442,"value":688}," * Definition for singly-linked list.\n",{"type":437,"tag":469,"props":690,"children":691},{"class":471,"line":490},[692],{"type":437,"tag":469,"props":693,"children":694},{"style":677},[695],{"type":442,"value":696}," * function ListNode(val) {\n",{"type":437,"tag":469,"props":698,"children":700},{"class":471,"line":699},4,[701],{"type":437,"tag":469,"props":702,"children":703},{"style":677},[704],{"type":442,"value":705}," *     this.val = val;\n",{"type":437,"tag":469,"props":707,"children":709},{"class":471,"line":708},5,[710],{"type":437,"tag":469,"props":711,"children":712},{"style":677},[713],{"type":442,"value":714}," *     this.next = null;\n",{"type":437,"tag":469,"props":716,"children":718},{"class":471,"line":717},6,[719],{"type":437,"tag":469,"props":720,"children":721},{"style":677},[722],{"type":442,"value":723}," * }\n",{"type":437,"tag":469,"props":725,"children":727},{"class":471,"line":726},7,[728],{"type":437,"tag":469,"props":729,"children":730},{"style":677},[731],{"type":442,"value":732}," */\n",{"type":437,"tag":469,"props":734,"children":736},{"class":471,"line":735},8,[737],{"type":437,"tag":469,"props":738,"children":739},{"style":677},[740],{"type":442,"value":680},{"type":437,"tag":469,"props":742,"children":744},{"class":471,"line":743},9,[745,750,756,762],{"type":437,"tag":469,"props":746,"children":747},{"style":677},[748],{"type":442,"value":749}," * ",{"type":437,"tag":469,"props":751,"children":753},{"style":752},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[754],{"type":442,"value":755},"@param",{"type":437,"tag":469,"props":757,"children":759},{"style":758},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[760],{"type":442,"value":761}," {ListNode}",{"type":437,"tag":469,"props":763,"children":765},{"style":764},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[766],{"type":442,"value":767}," l1\n",{"type":437,"tag":469,"props":769,"children":771},{"class":471,"line":770},10,[772,776,780,784],{"type":437,"tag":469,"props":773,"children":774},{"style":677},[775],{"type":442,"value":749},{"type":437,"tag":469,"props":777,"children":778},{"style":752},[779],{"type":442,"value":755},{"type":437,"tag":469,"props":781,"children":782},{"style":758},[783],{"type":442,"value":761},{"type":437,"tag":469,"props":785,"children":786},{"style":764},[787],{"type":442,"value":788}," l2\n",{"type":437,"tag":469,"props":790,"children":792},{"class":471,"line":791},11,[793,797,802],{"type":437,"tag":469,"props":794,"children":795},{"style":677},[796],{"type":442,"value":749},{"type":437,"tag":469,"props":798,"children":799},{"style":752},[800],{"type":442,"value":801},"@return",{"type":437,"tag":469,"props":803,"children":804},{"style":758},[805],{"type":442,"value":806}," {ListNode}\n",{"type":437,"tag":469,"props":808,"children":810},{"class":471,"line":809},12,[811],{"type":437,"tag":469,"props":812,"children":813},{"style":677},[814],{"type":442,"value":732},{"type":437,"tag":469,"props":816,"children":818},{"class":471,"line":817},13,[819,825,831,837,842,848,854,860,865],{"type":437,"tag":469,"props":820,"children":822},{"style":821},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[823],{"type":442,"value":824},"var",{"type":437,"tag":469,"props":826,"children":828},{"style":827},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[829],{"type":442,"value":830}," addTwoNumbers",{"type":437,"tag":469,"props":832,"children":834},{"style":833},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[835],{"type":442,"value":836}," =",{"type":437,"tag":469,"props":838,"children":839},{"style":821},[840],{"type":442,"value":841}," function",{"type":437,"tag":469,"props":843,"children":845},{"style":844},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[846],{"type":442,"value":847}," (",{"type":437,"tag":469,"props":849,"children":851},{"style":850},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[852],{"type":442,"value":853},"l1",{"type":437,"tag":469,"props":855,"children":857},{"style":856},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[858],{"type":442,"value":859},",",{"type":437,"tag":469,"props":861,"children":862},{"style":850},[863],{"type":442,"value":864}," l2",{"type":437,"tag":469,"props":866,"children":867},{"style":844},[868],{"type":442,"value":869},") {\n",{"type":437,"tag":469,"props":871,"children":873},{"class":471,"line":872},14,[874,879,885,889,894,899,904,910,915],{"type":437,"tag":469,"props":875,"children":876},{"style":821},[877],{"type":442,"value":878},"  const",{"type":437,"tag":469,"props":880,"children":882},{"style":881},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[883],{"type":442,"value":884}," node",{"type":437,"tag":469,"props":886,"children":887},{"style":833},[888],{"type":442,"value":836},{"type":437,"tag":469,"props":890,"children":891},{"style":833},[892],{"type":442,"value":893}," new",{"type":437,"tag":469,"props":895,"children":896},{"style":827},[897],{"type":442,"value":898}," ListNode",{"type":437,"tag":469,"props":900,"children":901},{"style":844},[902],{"type":442,"value":903},"(",{"type":437,"tag":469,"props":905,"children":907},{"style":906},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[908],{"type":442,"value":909},"0",{"type":437,"tag":469,"props":911,"children":912},{"style":844},[913],{"type":442,"value":914},")",{"type":437,"tag":469,"props":916,"children":917},{"style":856},[918],{"type":442,"value":919},";\n",{"type":437,"tag":469,"props":921,"children":923},{"class":471,"line":922},15,[924,929,934,938,942],{"type":437,"tag":469,"props":925,"children":926},{"style":821},[927],{"type":442,"value":928},"  let",{"type":437,"tag":469,"props":930,"children":931},{"style":881},[932],{"type":442,"value":933}," current",{"type":437,"tag":469,"props":935,"children":936},{"style":833},[937],{"type":442,"value":836},{"type":437,"tag":469,"props":939,"children":940},{"style":881},[941],{"type":442,"value":884},{"type":437,"tag":469,"props":943,"children":944},{"style":856},[945],{"type":442,"value":919},{"type":437,"tag":469,"props":947,"children":949},{"class":471,"line":948},16,[950,954,959,963,968],{"type":437,"tag":469,"props":951,"children":952},{"style":821},[953],{"type":442,"value":928},{"type":437,"tag":469,"props":955,"children":956},{"style":881},[957],{"type":442,"value":958}," curry",{"type":437,"tag":469,"props":960,"children":961},{"style":833},[962],{"type":442,"value":836},{"type":437,"tag":469,"props":964,"children":965},{"style":906},[966],{"type":442,"value":967}," 0",{"type":437,"tag":469,"props":969,"children":970},{"style":856},[971],{"type":442,"value":919},{"type":437,"tag":469,"props":973,"children":975},{"class":471,"line":974},17,[976],{"type":437,"tag":469,"props":977,"children":979},{"emptyLinePlaceholder":978},true,[980],{"type":442,"value":981},"\n",{"type":437,"tag":469,"props":983,"children":985},{"class":471,"line":984},18,[986,992,996,1000,1005,1009],{"type":437,"tag":469,"props":987,"children":989},{"style":988},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[990],{"type":442,"value":991},"  while",{"type":437,"tag":469,"props":993,"children":994},{"style":844},[995],{"type":442,"value":847},{"type":437,"tag":469,"props":997,"children":998},{"style":881},[999],{"type":442,"value":853},{"type":437,"tag":469,"props":1001,"children":1002},{"style":833},[1003],{"type":442,"value":1004}," ||",{"type":437,"tag":469,"props":1006,"children":1007},{"style":881},[1008],{"type":442,"value":864},{"type":437,"tag":469,"props":1010,"children":1011},{"style":844},[1012],{"type":442,"value":869},{"type":437,"tag":469,"props":1014,"children":1016},{"class":471,"line":1015},19,[1017,1022,1027,1031,1036,1041,1045,1051,1056,1061,1065],{"type":437,"tag":469,"props":1018,"children":1019},{"style":821},[1020],{"type":442,"value":1021},"    const",{"type":437,"tag":469,"props":1023,"children":1024},{"style":881},[1025],{"type":442,"value":1026}," n1",{"type":437,"tag":469,"props":1028,"children":1029},{"style":833},[1030],{"type":442,"value":836},{"type":437,"tag":469,"props":1032,"children":1033},{"style":881},[1034],{"type":442,"value":1035}," l1",{"type":437,"tag":469,"props":1037,"children":1038},{"style":833},[1039],{"type":442,"value":1040}," ?",{"type":437,"tag":469,"props":1042,"children":1043},{"style":881},[1044],{"type":442,"value":1035},{"type":437,"tag":469,"props":1046,"children":1048},{"style":1047},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[1049],{"type":442,"value":1050},".",{"type":437,"tag":469,"props":1052,"children":1053},{"style":881},[1054],{"type":442,"value":1055},"val",{"type":437,"tag":469,"props":1057,"children":1058},{"style":833},[1059],{"type":442,"value":1060}," :",{"type":437,"tag":469,"props":1062,"children":1063},{"style":906},[1064],{"type":442,"value":967},{"type":437,"tag":469,"props":1066,"children":1067},{"style":856},[1068],{"type":442,"value":919},{"type":437,"tag":469,"props":1070,"children":1072},{"class":471,"line":1071},20,[1073,1077,1082,1086,1090,1094,1098,1102,1106,1110,1114],{"type":437,"tag":469,"props":1074,"children":1075},{"style":821},[1076],{"type":442,"value":1021},{"type":437,"tag":469,"props":1078,"children":1079},{"style":881},[1080],{"type":442,"value":1081}," n2",{"type":437,"tag":469,"props":1083,"children":1084},{"style":833},[1085],{"type":442,"value":836},{"type":437,"tag":469,"props":1087,"children":1088},{"style":881},[1089],{"type":442,"value":864},{"type":437,"tag":469,"props":1091,"children":1092},{"style":833},[1093],{"type":442,"value":1040},{"type":437,"tag":469,"props":1095,"children":1096},{"style":881},[1097],{"type":442,"value":864},{"type":437,"tag":469,"props":1099,"children":1100},{"style":1047},[1101],{"type":442,"value":1050},{"type":437,"tag":469,"props":1103,"children":1104},{"style":881},[1105],{"type":442,"value":1055},{"type":437,"tag":469,"props":1107,"children":1108},{"style":833},[1109],{"type":442,"value":1060},{"type":437,"tag":469,"props":1111,"children":1112},{"style":906},[1113],{"type":442,"value":967},{"type":437,"tag":469,"props":1115,"children":1116},{"style":856},[1117],{"type":442,"value":919},{"type":437,"tag":469,"props":1119,"children":1121},{"class":471,"line":1120},21,[1122,1126,1131,1135,1139,1144,1148,1152,1156],{"type":437,"tag":469,"props":1123,"children":1124},{"style":821},[1125],{"type":442,"value":1021},{"type":437,"tag":469,"props":1127,"children":1128},{"style":881},[1129],{"type":442,"value":1130}," sum",{"type":437,"tag":469,"props":1132,"children":1133},{"style":833},[1134],{"type":442,"value":836},{"type":437,"tag":469,"props":1136,"children":1137},{"style":881},[1138],{"type":442,"value":1026},{"type":437,"tag":469,"props":1140,"children":1141},{"style":833},[1142],{"type":442,"value":1143}," +",{"type":437,"tag":469,"props":1145,"children":1146},{"style":881},[1147],{"type":442,"value":1081},{"type":437,"tag":469,"props":1149,"children":1150},{"style":833},[1151],{"type":442,"value":1143},{"type":437,"tag":469,"props":1153,"children":1154},{"style":881},[1155],{"type":442,"value":958},{"type":437,"tag":469,"props":1157,"children":1158},{"style":856},[1159],{"type":442,"value":919},{"type":437,"tag":469,"props":1161,"children":1163},{"class":471,"line":1162},22,[1164,1169,1173,1178,1182,1187,1192,1197,1201],{"type":437,"tag":469,"props":1165,"children":1166},{"style":881},[1167],{"type":442,"value":1168},"    curry",{"type":437,"tag":469,"props":1170,"children":1171},{"style":833},[1172],{"type":442,"value":836},{"type":437,"tag":469,"props":1174,"children":1175},{"style":827},[1176],{"type":442,"value":1177}," parseInt",{"type":437,"tag":469,"props":1179,"children":1180},{"style":844},[1181],{"type":442,"value":903},{"type":437,"tag":469,"props":1183,"children":1184},{"style":881},[1185],{"type":442,"value":1186},"sum",{"type":437,"tag":469,"props":1188,"children":1189},{"style":833},[1190],{"type":442,"value":1191}," /",{"type":437,"tag":469,"props":1193,"children":1194},{"style":906},[1195],{"type":442,"value":1196}," 10",{"type":437,"tag":469,"props":1198,"children":1199},{"style":844},[1200],{"type":442,"value":914},{"type":437,"tag":469,"props":1202,"children":1203},{"style":856},[1204],{"type":442,"value":919},{"type":437,"tag":469,"props":1206,"children":1208},{"class":471,"line":1207},23,[1209,1214,1218,1223,1227,1231,1235,1239,1243,1248,1252,1256],{"type":437,"tag":469,"props":1210,"children":1211},{"style":881},[1212],{"type":442,"value":1213},"    current",{"type":437,"tag":469,"props":1215,"children":1216},{"style":1047},[1217],{"type":442,"value":1050},{"type":437,"tag":469,"props":1219,"children":1220},{"style":881},[1221],{"type":442,"value":1222},"next",{"type":437,"tag":469,"props":1224,"children":1225},{"style":833},[1226],{"type":442,"value":836},{"type":437,"tag":469,"props":1228,"children":1229},{"style":833},[1230],{"type":442,"value":893},{"type":437,"tag":469,"props":1232,"children":1233},{"style":827},[1234],{"type":442,"value":898},{"type":437,"tag":469,"props":1236,"children":1237},{"style":844},[1238],{"type":442,"value":903},{"type":437,"tag":469,"props":1240,"children":1241},{"style":881},[1242],{"type":442,"value":1186},{"type":437,"tag":469,"props":1244,"children":1245},{"style":833},[1246],{"type":442,"value":1247}," %",{"type":437,"tag":469,"props":1249,"children":1250},{"style":906},[1251],{"type":442,"value":1196},{"type":437,"tag":469,"props":1253,"children":1254},{"style":844},[1255],{"type":442,"value":914},{"type":437,"tag":469,"props":1257,"children":1258},{"style":856},[1259],{"type":442,"value":919},{"type":437,"tag":469,"props":1261,"children":1263},{"class":471,"line":1262},24,[1264,1268,1272,1276,1280,1284],{"type":437,"tag":469,"props":1265,"children":1266},{"style":881},[1267],{"type":442,"value":1213},{"type":437,"tag":469,"props":1269,"children":1270},{"style":833},[1271],{"type":442,"value":836},{"type":437,"tag":469,"props":1273,"children":1274},{"style":881},[1275],{"type":442,"value":933},{"type":437,"tag":469,"props":1277,"children":1278},{"style":1047},[1279],{"type":442,"value":1050},{"type":437,"tag":469,"props":1281,"children":1282},{"style":881},[1283],{"type":442,"value":1222},{"type":437,"tag":469,"props":1285,"children":1286},{"style":856},[1287],{"type":442,"value":919},{"type":437,"tag":469,"props":1289,"children":1291},{"class":471,"line":1290},25,[1292],{"type":437,"tag":469,"props":1293,"children":1294},{"emptyLinePlaceholder":978},[1295],{"type":442,"value":981},{"type":437,"tag":469,"props":1297,"children":1299},{"class":471,"line":1298},26,[1300,1305,1309,1313],{"type":437,"tag":469,"props":1301,"children":1302},{"style":988},[1303],{"type":442,"value":1304},"    if",{"type":437,"tag":469,"props":1306,"children":1307},{"style":844},[1308],{"type":442,"value":847},{"type":437,"tag":469,"props":1310,"children":1311},{"style":881},[1312],{"type":442,"value":853},{"type":437,"tag":469,"props":1314,"children":1315},{"style":844},[1316],{"type":442,"value":869},{"type":437,"tag":469,"props":1318,"children":1320},{"class":471,"line":1319},27,[1321,1326,1330,1334,1338,1342],{"type":437,"tag":469,"props":1322,"children":1323},{"style":881},[1324],{"type":442,"value":1325},"      l1",{"type":437,"tag":469,"props":1327,"children":1328},{"style":833},[1329],{"type":442,"value":836},{"type":437,"tag":469,"props":1331,"children":1332},{"style":881},[1333],{"type":442,"value":1035},{"type":437,"tag":469,"props":1335,"children":1336},{"style":1047},[1337],{"type":442,"value":1050},{"type":437,"tag":469,"props":1339,"children":1340},{"style":881},[1341],{"type":442,"value":1222},{"type":437,"tag":469,"props":1343,"children":1344},{"style":856},[1345],{"type":442,"value":919},{"type":437,"tag":469,"props":1347,"children":1349},{"class":471,"line":1348},28,[1350],{"type":437,"tag":469,"props":1351,"children":1352},{"style":844},[1353],{"type":442,"value":1354},"    }\n",{"type":437,"tag":469,"props":1356,"children":1358},{"class":471,"line":1357},29,[1359,1363,1367,1372],{"type":437,"tag":469,"props":1360,"children":1361},{"style":988},[1362],{"type":442,"value":1304},{"type":437,"tag":469,"props":1364,"children":1365},{"style":844},[1366],{"type":442,"value":847},{"type":437,"tag":469,"props":1368,"children":1369},{"style":881},[1370],{"type":442,"value":1371},"l2",{"type":437,"tag":469,"props":1373,"children":1374},{"style":844},[1375],{"type":442,"value":869},{"type":437,"tag":469,"props":1377,"children":1379},{"class":471,"line":1378},30,[1380,1385,1389,1393,1397,1401],{"type":437,"tag":469,"props":1381,"children":1382},{"style":881},[1383],{"type":442,"value":1384},"      l2",{"type":437,"tag":469,"props":1386,"children":1387},{"style":833},[1388],{"type":442,"value":836},{"type":437,"tag":469,"props":1390,"children":1391},{"style":881},[1392],{"type":442,"value":864},{"type":437,"tag":469,"props":1394,"children":1395},{"style":1047},[1396],{"type":442,"value":1050},{"type":437,"tag":469,"props":1398,"children":1399},{"style":881},[1400],{"type":442,"value":1222},{"type":437,"tag":469,"props":1402,"children":1403},{"style":856},[1404],{"type":442,"value":919},{"type":437,"tag":469,"props":1406,"children":1408},{"class":471,"line":1407},31,[1409],{"type":437,"tag":469,"props":1410,"children":1411},{"style":844},[1412],{"type":442,"value":1354},{"type":437,"tag":469,"props":1414,"children":1416},{"class":471,"line":1415},32,[1417],{"type":437,"tag":469,"props":1418,"children":1419},{"style":844},[1420],{"type":442,"value":1421},"  }\n",{"type":437,"tag":469,"props":1423,"children":1425},{"class":471,"line":1424},33,[1426],{"type":437,"tag":469,"props":1427,"children":1428},{"emptyLinePlaceholder":978},[1429],{"type":442,"value":981},{"type":437,"tag":469,"props":1431,"children":1433},{"class":471,"line":1432},34,[1434,1439,1443,1448,1453,1457],{"type":437,"tag":469,"props":1435,"children":1436},{"style":988},[1437],{"type":442,"value":1438},"  if",{"type":437,"tag":469,"props":1440,"children":1441},{"style":844},[1442],{"type":442,"value":847},{"type":437,"tag":469,"props":1444,"children":1445},{"style":881},[1446],{"type":442,"value":1447},"curry",{"type":437,"tag":469,"props":1449,"children":1450},{"style":833},[1451],{"type":442,"value":1452}," >",{"type":437,"tag":469,"props":1454,"children":1455},{"style":906},[1456],{"type":442,"value":967},{"type":437,"tag":469,"props":1458,"children":1459},{"style":844},[1460],{"type":442,"value":869},{"type":437,"tag":469,"props":1462,"children":1464},{"class":471,"line":1463},35,[1465,1469,1473,1477,1481,1485,1489,1493,1497,1501],{"type":437,"tag":469,"props":1466,"children":1467},{"style":881},[1468],{"type":442,"value":1213},{"type":437,"tag":469,"props":1470,"children":1471},{"style":1047},[1472],{"type":442,"value":1050},{"type":437,"tag":469,"props":1474,"children":1475},{"style":881},[1476],{"type":442,"value":1222},{"type":437,"tag":469,"props":1478,"children":1479},{"style":833},[1480],{"type":442,"value":836},{"type":437,"tag":469,"props":1482,"children":1483},{"style":833},[1484],{"type":442,"value":893},{"type":437,"tag":469,"props":1486,"children":1487},{"style":827},[1488],{"type":442,"value":898},{"type":437,"tag":469,"props":1490,"children":1491},{"style":844},[1492],{"type":442,"value":903},{"type":437,"tag":469,"props":1494,"children":1495},{"style":881},[1496],{"type":442,"value":1447},{"type":437,"tag":469,"props":1498,"children":1499},{"style":844},[1500],{"type":442,"value":914},{"type":437,"tag":469,"props":1502,"children":1503},{"style":856},[1504],{"type":442,"value":919},{"type":437,"tag":469,"props":1506,"children":1508},{"class":471,"line":1507},36,[1509],{"type":437,"tag":469,"props":1510,"children":1511},{"style":844},[1512],{"type":442,"value":1421},{"type":437,"tag":469,"props":1514,"children":1516},{"class":471,"line":1515},37,[1517,1522,1526,1530,1534],{"type":437,"tag":469,"props":1518,"children":1519},{"style":988},[1520],{"type":442,"value":1521},"  return",{"type":437,"tag":469,"props":1523,"children":1524},{"style":881},[1525],{"type":442,"value":884},{"type":437,"tag":469,"props":1527,"children":1528},{"style":1047},[1529],{"type":442,"value":1050},{"type":437,"tag":469,"props":1531,"children":1532},{"style":881},[1533],{"type":442,"value":1222},{"type":437,"tag":469,"props":1535,"children":1536},{"style":856},[1537],{"type":442,"value":919},{"type":437,"tag":469,"props":1539,"children":1541},{"class":471,"line":1540},38,[1542,1547],{"type":437,"tag":469,"props":1543,"children":1544},{"style":844},[1545],{"type":442,"value":1546},"}",{"type":437,"tag":469,"props":1548,"children":1549},{"style":856},[1550],{"type":442,"value":919},{"type":437,"tag":1552,"props":1553,"children":1554},"style",{},[1555],{"type":442,"value":1556},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":430,"searchDepth":708,"depth":708,"links":1558},[1559,1560],{"id":581,"depth":481,"text":581},{"id":605,"depth":481,"text":605,"children":1561},[1562,1563],{"id":655,"depth":490,"text":655},{"id":660,"depth":490,"text":660},"markdown","content:1.algorithm:3.leetcode:2.add-two-numbers.md","content","1.algorithm/3.leetcode/2.add-two-numbers.md","md",[1570,1572],{"_path":29,"title":28,"description":1571},"给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target 的那\"两个\"整数，并返回它们的数组下标。",{"_path":35,"title":34,"description":1573},"给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。",1713426447067]