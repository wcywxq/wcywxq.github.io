[{"data":1,"prerenderedAt":1571},["Reactive",2],{"navigation":3,"/algorithm/leetcode/add-two-numbers":424,"/algorithm/leetcode/add-two-numbers-surround":1566},[4,237,265,403,410],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,396],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"随机数","/frontend-code-assessment/scene/random-number",{"title":382,"_path":383},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":385,"_path":386},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":388,"_path":389},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":391,"_path":392},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":394,"_path":395},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":397,"_path":398,"children":399},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[400],{"title":401,"_path":402},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":404,"_path":405,"children":406},"项目","/pro",[407],{"title":408,"_path":409},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":411,"_path":412,"children":413},"后端语言","/backend-languages",[414],{"title":415,"_path":416,"children":417},"Python","/backend-languages/python",[418,421],{"title":419,"_path":420},"基础","/backend-languages/python/base",{"title":422,"_path":423},"函数","/backend-languages/python/function",{"_path":32,"_dir":425,"_draft":426,"_partial":426,"_locale":427,"title":31,"description":428,"url":429,"body":430,"_type":1561,"_id":1562,"_source":1563,"_file":1564,"_extension":1565},"leetcode",false,"","给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。","https://leetcode.cn/problems/add-two-numbers",{"type":431,"children":432,"toc":1554},"root",[433,440,445,450,455,494,499,522,527,550,555,575,581,600,605,649,655,660,1548],{"type":434,"tag":435,"props":436,"children":437},"element","p",{},[438],{"type":439,"value":428},"text",{"type":434,"tag":435,"props":441,"children":442},{},[443],{"type":439,"value":444},"请你将两个数相加，并以相同形式返回一个表示和的链表。",{"type":434,"tag":435,"props":446,"children":447},{},[448],{"type":439,"value":449},"你可以假设除了数字 0 之外，这两个数都不会以 0 开头。",{"type":434,"tag":435,"props":451,"children":452},{},[453],{"type":439,"value":454},"示例 1：",{"type":434,"tag":456,"props":457,"children":460},"pre",{"className":458,"code":459,"language":439,"meta":427,"style":427},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：l1 = [2,4,3], l2 = [5,6,4]\n输出：[7,0,8]\n解释：342 + 465 = 807.\n",[461],{"type":434,"tag":462,"props":463,"children":464},"code",{"__ignoreMap":427},[465,476,485],{"type":434,"tag":466,"props":467,"children":470},"span",{"class":468,"line":469},"line",1,[471],{"type":434,"tag":466,"props":472,"children":473},{},[474],{"type":439,"value":475},"输入：l1 = [2,4,3], l2 = [5,6,4]\n",{"type":434,"tag":466,"props":477,"children":479},{"class":468,"line":478},2,[480],{"type":434,"tag":466,"props":481,"children":482},{},[483],{"type":439,"value":484},"输出：[7,0,8]\n",{"type":434,"tag":466,"props":486,"children":488},{"class":468,"line":487},3,[489],{"type":434,"tag":466,"props":490,"children":491},{},[492],{"type":439,"value":493},"解释：342 + 465 = 807.\n",{"type":434,"tag":435,"props":495,"children":496},{},[497],{"type":439,"value":498},"示例 2：",{"type":434,"tag":456,"props":500,"children":502},{"className":458,"code":501,"language":439,"meta":427,"style":427},"输入：l1 = [0], l2 = [0]\n输出：[0]\n",[503],{"type":434,"tag":462,"props":504,"children":505},{"__ignoreMap":427},[506,514],{"type":434,"tag":466,"props":507,"children":508},{"class":468,"line":469},[509],{"type":434,"tag":466,"props":510,"children":511},{},[512],{"type":439,"value":513},"输入：l1 = [0], l2 = [0]\n",{"type":434,"tag":466,"props":515,"children":516},{"class":468,"line":478},[517],{"type":434,"tag":466,"props":518,"children":519},{},[520],{"type":439,"value":521},"输出：[0]\n",{"type":434,"tag":435,"props":523,"children":524},{},[525],{"type":439,"value":526},"示例 3：",{"type":434,"tag":456,"props":528,"children":530},{"className":458,"code":529,"language":439,"meta":427,"style":427},"输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n输出：[8,9,9,9,0,0,0,1]\n",[531],{"type":434,"tag":462,"props":532,"children":533},{"__ignoreMap":427},[534,542],{"type":434,"tag":466,"props":535,"children":536},{"class":468,"line":469},[537],{"type":434,"tag":466,"props":538,"children":539},{},[540],{"type":439,"value":541},"输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n",{"type":434,"tag":466,"props":543,"children":544},{"class":468,"line":478},[545],{"type":434,"tag":466,"props":546,"children":547},{},[548],{"type":439,"value":549},"输出：[8,9,9,9,0,0,0,1]\n",{"type":434,"tag":435,"props":551,"children":552},{},[553],{"type":439,"value":554},"提示：",{"type":434,"tag":556,"props":557,"children":558},"ul",{},[559,565,570],{"type":434,"tag":560,"props":561,"children":562},"li",{},[563],{"type":439,"value":564},"每个链表中的节点数在范围 [1, 100] 内",{"type":434,"tag":560,"props":566,"children":567},{},[568],{"type":439,"value":569},"0 \u003C= Node.val \u003C= 9",{"type":434,"tag":560,"props":571,"children":572},{},[573],{"type":439,"value":574},"题目数据保证列表表示的数字不含前导零",{"type":434,"tag":576,"props":577,"children":579},"h2",{"id":578},"解题思路",[580],{"type":439,"value":578},{"type":434,"tag":582,"props":583,"children":584},"ol",{},[585,590,595],{"type":434,"tag":560,"props":586,"children":587},{},[588],{"type":439,"value":589},"将两个链表看作相同长度进行遍历，如果某个链表较短则在前方补 0",{"type":434,"tag":560,"props":591,"children":592},{},[593],{"type":439,"value":594},"因为每个节点只能存放一位数字，因此要考虑进位，计算结束后要更新进位值",{"type":434,"tag":560,"props":596,"children":597},{},[598],{"type":439,"value":599},"若两个链表全部遍历完成之后，进位位 1，则在新构建的链表最前方添加节点 1",{"type":434,"tag":576,"props":601,"children":603},{"id":602},"图解",[604],{"type":439,"value":602},{"type":434,"tag":435,"props":606,"children":607},{},[608,614,619,624,629,634,639,644],{"type":434,"tag":609,"props":610,"children":613},"img",{"alt":611,"src":612},"figure_1","/img/code_leetcode_No.2_figure_1.png",[],{"type":434,"tag":609,"props":615,"children":618},{"alt":616,"src":617},"figure_2","/img/code_leetcode_No.2_figure_2.png",[],{"type":434,"tag":609,"props":620,"children":623},{"alt":621,"src":622},"figure_3","/img/code_leetcode_No.2_figure_3.png",[],{"type":434,"tag":609,"props":625,"children":628},{"alt":626,"src":627},"figure_4","/img/code_leetcode_No.2_figure_4.png",[],{"type":434,"tag":609,"props":630,"children":633},{"alt":631,"src":632},"figure_5","/img/code_leetcode_No.2_figure_5.png",[],{"type":434,"tag":609,"props":635,"children":638},{"alt":636,"src":637},"figure_6","/img/code_leetcode_No.2_figure_6.png",[],{"type":434,"tag":609,"props":640,"children":643},{"alt":641,"src":642},"figure_7","/img/code_leetcode_No.2_figure_7.png",[],{"type":434,"tag":609,"props":645,"children":648},{"alt":646,"src":647},"figure_8","/img/code_leetcode_No.2_figure_8.png",[],{"type":434,"tag":650,"props":651,"children":653},"h3",{"id":652},"实现",[654],{"type":439,"value":652},{"type":434,"tag":650,"props":656,"children":658},{"id":657},"构造哑节点",[659],{"type":439,"value":657},{"type":434,"tag":456,"props":661,"children":665},{"className":662,"code":663,"language":664,"meta":427,"style":427},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar addTwoNumbers = function (l1, l2) {\n  const node = new ListNode(0);\n  let current = node;\n  let curry = 0;\n\n  while (l1 || l2) {\n    const n1 = l1 ? l1.val : 0;\n    const n2 = l2 ? l2.val : 0;\n    const sum = n1 + n2 + curry;\n    curry = parseInt(sum / 10);\n    current.next = new ListNode(sum % 10);\n    current = current.next;\n\n    if (l1) {\n      l1 = l1.next;\n    }\n    if (l2) {\n      l2 = l2.next;\n    }\n  }\n\n  if (curry > 0) {\n    current.next = new ListNode(curry);\n  }\n  return node.next;\n};\n","js",[666],{"type":434,"tag":462,"props":667,"children":668},{"__ignoreMap":427},[669,678,686,694,703,712,721,730,738,765,786,804,812,867,917,943,969,979,1010,1066,1115,1157,1202,1257,1285,1293,1314,1343,1352,1373,1402,1410,1419,1427,1458,1502,1510,1535],{"type":434,"tag":466,"props":670,"children":671},{"class":468,"line":469},[672],{"type":434,"tag":466,"props":673,"children":675},{"style":674},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[676],{"type":439,"value":677},"/**\n",{"type":434,"tag":466,"props":679,"children":680},{"class":468,"line":478},[681],{"type":434,"tag":466,"props":682,"children":683},{"style":674},[684],{"type":439,"value":685}," * Definition for singly-linked list.\n",{"type":434,"tag":466,"props":687,"children":688},{"class":468,"line":487},[689],{"type":434,"tag":466,"props":690,"children":691},{"style":674},[692],{"type":439,"value":693}," * function ListNode(val) {\n",{"type":434,"tag":466,"props":695,"children":697},{"class":468,"line":696},4,[698],{"type":434,"tag":466,"props":699,"children":700},{"style":674},[701],{"type":439,"value":702}," *     this.val = val;\n",{"type":434,"tag":466,"props":704,"children":706},{"class":468,"line":705},5,[707],{"type":434,"tag":466,"props":708,"children":709},{"style":674},[710],{"type":439,"value":711}," *     this.next = null;\n",{"type":434,"tag":466,"props":713,"children":715},{"class":468,"line":714},6,[716],{"type":434,"tag":466,"props":717,"children":718},{"style":674},[719],{"type":439,"value":720}," * }\n",{"type":434,"tag":466,"props":722,"children":724},{"class":468,"line":723},7,[725],{"type":434,"tag":466,"props":726,"children":727},{"style":674},[728],{"type":439,"value":729}," */\n",{"type":434,"tag":466,"props":731,"children":733},{"class":468,"line":732},8,[734],{"type":434,"tag":466,"props":735,"children":736},{"style":674},[737],{"type":439,"value":677},{"type":434,"tag":466,"props":739,"children":741},{"class":468,"line":740},9,[742,747,753,759],{"type":434,"tag":466,"props":743,"children":744},{"style":674},[745],{"type":439,"value":746}," * ",{"type":434,"tag":466,"props":748,"children":750},{"style":749},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[751],{"type":439,"value":752},"@param",{"type":434,"tag":466,"props":754,"children":756},{"style":755},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[757],{"type":439,"value":758}," {ListNode}",{"type":434,"tag":466,"props":760,"children":762},{"style":761},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[763],{"type":439,"value":764}," l1\n",{"type":434,"tag":466,"props":766,"children":768},{"class":468,"line":767},10,[769,773,777,781],{"type":434,"tag":466,"props":770,"children":771},{"style":674},[772],{"type":439,"value":746},{"type":434,"tag":466,"props":774,"children":775},{"style":749},[776],{"type":439,"value":752},{"type":434,"tag":466,"props":778,"children":779},{"style":755},[780],{"type":439,"value":758},{"type":434,"tag":466,"props":782,"children":783},{"style":761},[784],{"type":439,"value":785}," l2\n",{"type":434,"tag":466,"props":787,"children":789},{"class":468,"line":788},11,[790,794,799],{"type":434,"tag":466,"props":791,"children":792},{"style":674},[793],{"type":439,"value":746},{"type":434,"tag":466,"props":795,"children":796},{"style":749},[797],{"type":439,"value":798},"@return",{"type":434,"tag":466,"props":800,"children":801},{"style":755},[802],{"type":439,"value":803}," {ListNode}\n",{"type":434,"tag":466,"props":805,"children":807},{"class":468,"line":806},12,[808],{"type":434,"tag":466,"props":809,"children":810},{"style":674},[811],{"type":439,"value":729},{"type":434,"tag":466,"props":813,"children":815},{"class":468,"line":814},13,[816,822,828,834,839,845,851,857,862],{"type":434,"tag":466,"props":817,"children":819},{"style":818},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[820],{"type":439,"value":821},"var",{"type":434,"tag":466,"props":823,"children":825},{"style":824},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[826],{"type":439,"value":827}," addTwoNumbers",{"type":434,"tag":466,"props":829,"children":831},{"style":830},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[832],{"type":439,"value":833}," =",{"type":434,"tag":466,"props":835,"children":836},{"style":818},[837],{"type":439,"value":838}," function",{"type":434,"tag":466,"props":840,"children":842},{"style":841},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[843],{"type":439,"value":844}," (",{"type":434,"tag":466,"props":846,"children":848},{"style":847},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[849],{"type":439,"value":850},"l1",{"type":434,"tag":466,"props":852,"children":854},{"style":853},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[855],{"type":439,"value":856},",",{"type":434,"tag":466,"props":858,"children":859},{"style":847},[860],{"type":439,"value":861}," l2",{"type":434,"tag":466,"props":863,"children":864},{"style":841},[865],{"type":439,"value":866},") {\n",{"type":434,"tag":466,"props":868,"children":870},{"class":468,"line":869},14,[871,876,882,886,891,896,901,907,912],{"type":434,"tag":466,"props":872,"children":873},{"style":818},[874],{"type":439,"value":875},"  const",{"type":434,"tag":466,"props":877,"children":879},{"style":878},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[880],{"type":439,"value":881}," node",{"type":434,"tag":466,"props":883,"children":884},{"style":830},[885],{"type":439,"value":833},{"type":434,"tag":466,"props":887,"children":888},{"style":830},[889],{"type":439,"value":890}," new",{"type":434,"tag":466,"props":892,"children":893},{"style":824},[894],{"type":439,"value":895}," ListNode",{"type":434,"tag":466,"props":897,"children":898},{"style":841},[899],{"type":439,"value":900},"(",{"type":434,"tag":466,"props":902,"children":904},{"style":903},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[905],{"type":439,"value":906},"0",{"type":434,"tag":466,"props":908,"children":909},{"style":841},[910],{"type":439,"value":911},")",{"type":434,"tag":466,"props":913,"children":914},{"style":853},[915],{"type":439,"value":916},";\n",{"type":434,"tag":466,"props":918,"children":920},{"class":468,"line":919},15,[921,926,931,935,939],{"type":434,"tag":466,"props":922,"children":923},{"style":818},[924],{"type":439,"value":925},"  let",{"type":434,"tag":466,"props":927,"children":928},{"style":878},[929],{"type":439,"value":930}," current",{"type":434,"tag":466,"props":932,"children":933},{"style":830},[934],{"type":439,"value":833},{"type":434,"tag":466,"props":936,"children":937},{"style":878},[938],{"type":439,"value":881},{"type":434,"tag":466,"props":940,"children":941},{"style":853},[942],{"type":439,"value":916},{"type":434,"tag":466,"props":944,"children":946},{"class":468,"line":945},16,[947,951,956,960,965],{"type":434,"tag":466,"props":948,"children":949},{"style":818},[950],{"type":439,"value":925},{"type":434,"tag":466,"props":952,"children":953},{"style":878},[954],{"type":439,"value":955}," curry",{"type":434,"tag":466,"props":957,"children":958},{"style":830},[959],{"type":439,"value":833},{"type":434,"tag":466,"props":961,"children":962},{"style":903},[963],{"type":439,"value":964}," 0",{"type":434,"tag":466,"props":966,"children":967},{"style":853},[968],{"type":439,"value":916},{"type":434,"tag":466,"props":970,"children":972},{"class":468,"line":971},17,[973],{"type":434,"tag":466,"props":974,"children":976},{"emptyLinePlaceholder":975},true,[977],{"type":439,"value":978},"\n",{"type":434,"tag":466,"props":980,"children":982},{"class":468,"line":981},18,[983,989,993,997,1002,1006],{"type":434,"tag":466,"props":984,"children":986},{"style":985},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[987],{"type":439,"value":988},"  while",{"type":434,"tag":466,"props":990,"children":991},{"style":841},[992],{"type":439,"value":844},{"type":434,"tag":466,"props":994,"children":995},{"style":878},[996],{"type":439,"value":850},{"type":434,"tag":466,"props":998,"children":999},{"style":830},[1000],{"type":439,"value":1001}," ||",{"type":434,"tag":466,"props":1003,"children":1004},{"style":878},[1005],{"type":439,"value":861},{"type":434,"tag":466,"props":1007,"children":1008},{"style":841},[1009],{"type":439,"value":866},{"type":434,"tag":466,"props":1011,"children":1013},{"class":468,"line":1012},19,[1014,1019,1024,1028,1033,1038,1042,1048,1053,1058,1062],{"type":434,"tag":466,"props":1015,"children":1016},{"style":818},[1017],{"type":439,"value":1018},"    const",{"type":434,"tag":466,"props":1020,"children":1021},{"style":878},[1022],{"type":439,"value":1023}," n1",{"type":434,"tag":466,"props":1025,"children":1026},{"style":830},[1027],{"type":439,"value":833},{"type":434,"tag":466,"props":1029,"children":1030},{"style":878},[1031],{"type":439,"value":1032}," l1",{"type":434,"tag":466,"props":1034,"children":1035},{"style":830},[1036],{"type":439,"value":1037}," ?",{"type":434,"tag":466,"props":1039,"children":1040},{"style":878},[1041],{"type":439,"value":1032},{"type":434,"tag":466,"props":1043,"children":1045},{"style":1044},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[1046],{"type":439,"value":1047},".",{"type":434,"tag":466,"props":1049,"children":1050},{"style":878},[1051],{"type":439,"value":1052},"val",{"type":434,"tag":466,"props":1054,"children":1055},{"style":830},[1056],{"type":439,"value":1057}," :",{"type":434,"tag":466,"props":1059,"children":1060},{"style":903},[1061],{"type":439,"value":964},{"type":434,"tag":466,"props":1063,"children":1064},{"style":853},[1065],{"type":439,"value":916},{"type":434,"tag":466,"props":1067,"children":1069},{"class":468,"line":1068},20,[1070,1074,1079,1083,1087,1091,1095,1099,1103,1107,1111],{"type":434,"tag":466,"props":1071,"children":1072},{"style":818},[1073],{"type":439,"value":1018},{"type":434,"tag":466,"props":1075,"children":1076},{"style":878},[1077],{"type":439,"value":1078}," n2",{"type":434,"tag":466,"props":1080,"children":1081},{"style":830},[1082],{"type":439,"value":833},{"type":434,"tag":466,"props":1084,"children":1085},{"style":878},[1086],{"type":439,"value":861},{"type":434,"tag":466,"props":1088,"children":1089},{"style":830},[1090],{"type":439,"value":1037},{"type":434,"tag":466,"props":1092,"children":1093},{"style":878},[1094],{"type":439,"value":861},{"type":434,"tag":466,"props":1096,"children":1097},{"style":1044},[1098],{"type":439,"value":1047},{"type":434,"tag":466,"props":1100,"children":1101},{"style":878},[1102],{"type":439,"value":1052},{"type":434,"tag":466,"props":1104,"children":1105},{"style":830},[1106],{"type":439,"value":1057},{"type":434,"tag":466,"props":1108,"children":1109},{"style":903},[1110],{"type":439,"value":964},{"type":434,"tag":466,"props":1112,"children":1113},{"style":853},[1114],{"type":439,"value":916},{"type":434,"tag":466,"props":1116,"children":1118},{"class":468,"line":1117},21,[1119,1123,1128,1132,1136,1141,1145,1149,1153],{"type":434,"tag":466,"props":1120,"children":1121},{"style":818},[1122],{"type":439,"value":1018},{"type":434,"tag":466,"props":1124,"children":1125},{"style":878},[1126],{"type":439,"value":1127}," sum",{"type":434,"tag":466,"props":1129,"children":1130},{"style":830},[1131],{"type":439,"value":833},{"type":434,"tag":466,"props":1133,"children":1134},{"style":878},[1135],{"type":439,"value":1023},{"type":434,"tag":466,"props":1137,"children":1138},{"style":830},[1139],{"type":439,"value":1140}," +",{"type":434,"tag":466,"props":1142,"children":1143},{"style":878},[1144],{"type":439,"value":1078},{"type":434,"tag":466,"props":1146,"children":1147},{"style":830},[1148],{"type":439,"value":1140},{"type":434,"tag":466,"props":1150,"children":1151},{"style":878},[1152],{"type":439,"value":955},{"type":434,"tag":466,"props":1154,"children":1155},{"style":853},[1156],{"type":439,"value":916},{"type":434,"tag":466,"props":1158,"children":1160},{"class":468,"line":1159},22,[1161,1166,1170,1175,1179,1184,1189,1194,1198],{"type":434,"tag":466,"props":1162,"children":1163},{"style":878},[1164],{"type":439,"value":1165},"    curry",{"type":434,"tag":466,"props":1167,"children":1168},{"style":830},[1169],{"type":439,"value":833},{"type":434,"tag":466,"props":1171,"children":1172},{"style":824},[1173],{"type":439,"value":1174}," parseInt",{"type":434,"tag":466,"props":1176,"children":1177},{"style":841},[1178],{"type":439,"value":900},{"type":434,"tag":466,"props":1180,"children":1181},{"style":878},[1182],{"type":439,"value":1183},"sum",{"type":434,"tag":466,"props":1185,"children":1186},{"style":830},[1187],{"type":439,"value":1188}," /",{"type":434,"tag":466,"props":1190,"children":1191},{"style":903},[1192],{"type":439,"value":1193}," 10",{"type":434,"tag":466,"props":1195,"children":1196},{"style":841},[1197],{"type":439,"value":911},{"type":434,"tag":466,"props":1199,"children":1200},{"style":853},[1201],{"type":439,"value":916},{"type":434,"tag":466,"props":1203,"children":1205},{"class":468,"line":1204},23,[1206,1211,1215,1220,1224,1228,1232,1236,1240,1245,1249,1253],{"type":434,"tag":466,"props":1207,"children":1208},{"style":878},[1209],{"type":439,"value":1210},"    current",{"type":434,"tag":466,"props":1212,"children":1213},{"style":1044},[1214],{"type":439,"value":1047},{"type":434,"tag":466,"props":1216,"children":1217},{"style":878},[1218],{"type":439,"value":1219},"next",{"type":434,"tag":466,"props":1221,"children":1222},{"style":830},[1223],{"type":439,"value":833},{"type":434,"tag":466,"props":1225,"children":1226},{"style":830},[1227],{"type":439,"value":890},{"type":434,"tag":466,"props":1229,"children":1230},{"style":824},[1231],{"type":439,"value":895},{"type":434,"tag":466,"props":1233,"children":1234},{"style":841},[1235],{"type":439,"value":900},{"type":434,"tag":466,"props":1237,"children":1238},{"style":878},[1239],{"type":439,"value":1183},{"type":434,"tag":466,"props":1241,"children":1242},{"style":830},[1243],{"type":439,"value":1244}," %",{"type":434,"tag":466,"props":1246,"children":1247},{"style":903},[1248],{"type":439,"value":1193},{"type":434,"tag":466,"props":1250,"children":1251},{"style":841},[1252],{"type":439,"value":911},{"type":434,"tag":466,"props":1254,"children":1255},{"style":853},[1256],{"type":439,"value":916},{"type":434,"tag":466,"props":1258,"children":1260},{"class":468,"line":1259},24,[1261,1265,1269,1273,1277,1281],{"type":434,"tag":466,"props":1262,"children":1263},{"style":878},[1264],{"type":439,"value":1210},{"type":434,"tag":466,"props":1266,"children":1267},{"style":830},[1268],{"type":439,"value":833},{"type":434,"tag":466,"props":1270,"children":1271},{"style":878},[1272],{"type":439,"value":930},{"type":434,"tag":466,"props":1274,"children":1275},{"style":1044},[1276],{"type":439,"value":1047},{"type":434,"tag":466,"props":1278,"children":1279},{"style":878},[1280],{"type":439,"value":1219},{"type":434,"tag":466,"props":1282,"children":1283},{"style":853},[1284],{"type":439,"value":916},{"type":434,"tag":466,"props":1286,"children":1288},{"class":468,"line":1287},25,[1289],{"type":434,"tag":466,"props":1290,"children":1291},{"emptyLinePlaceholder":975},[1292],{"type":439,"value":978},{"type":434,"tag":466,"props":1294,"children":1296},{"class":468,"line":1295},26,[1297,1302,1306,1310],{"type":434,"tag":466,"props":1298,"children":1299},{"style":985},[1300],{"type":439,"value":1301},"    if",{"type":434,"tag":466,"props":1303,"children":1304},{"style":841},[1305],{"type":439,"value":844},{"type":434,"tag":466,"props":1307,"children":1308},{"style":878},[1309],{"type":439,"value":850},{"type":434,"tag":466,"props":1311,"children":1312},{"style":841},[1313],{"type":439,"value":866},{"type":434,"tag":466,"props":1315,"children":1317},{"class":468,"line":1316},27,[1318,1323,1327,1331,1335,1339],{"type":434,"tag":466,"props":1319,"children":1320},{"style":878},[1321],{"type":439,"value":1322},"      l1",{"type":434,"tag":466,"props":1324,"children":1325},{"style":830},[1326],{"type":439,"value":833},{"type":434,"tag":466,"props":1328,"children":1329},{"style":878},[1330],{"type":439,"value":1032},{"type":434,"tag":466,"props":1332,"children":1333},{"style":1044},[1334],{"type":439,"value":1047},{"type":434,"tag":466,"props":1336,"children":1337},{"style":878},[1338],{"type":439,"value":1219},{"type":434,"tag":466,"props":1340,"children":1341},{"style":853},[1342],{"type":439,"value":916},{"type":434,"tag":466,"props":1344,"children":1346},{"class":468,"line":1345},28,[1347],{"type":434,"tag":466,"props":1348,"children":1349},{"style":841},[1350],{"type":439,"value":1351},"    }\n",{"type":434,"tag":466,"props":1353,"children":1355},{"class":468,"line":1354},29,[1356,1360,1364,1369],{"type":434,"tag":466,"props":1357,"children":1358},{"style":985},[1359],{"type":439,"value":1301},{"type":434,"tag":466,"props":1361,"children":1362},{"style":841},[1363],{"type":439,"value":844},{"type":434,"tag":466,"props":1365,"children":1366},{"style":878},[1367],{"type":439,"value":1368},"l2",{"type":434,"tag":466,"props":1370,"children":1371},{"style":841},[1372],{"type":439,"value":866},{"type":434,"tag":466,"props":1374,"children":1376},{"class":468,"line":1375},30,[1377,1382,1386,1390,1394,1398],{"type":434,"tag":466,"props":1378,"children":1379},{"style":878},[1380],{"type":439,"value":1381},"      l2",{"type":434,"tag":466,"props":1383,"children":1384},{"style":830},[1385],{"type":439,"value":833},{"type":434,"tag":466,"props":1387,"children":1388},{"style":878},[1389],{"type":439,"value":861},{"type":434,"tag":466,"props":1391,"children":1392},{"style":1044},[1393],{"type":439,"value":1047},{"type":434,"tag":466,"props":1395,"children":1396},{"style":878},[1397],{"type":439,"value":1219},{"type":434,"tag":466,"props":1399,"children":1400},{"style":853},[1401],{"type":439,"value":916},{"type":434,"tag":466,"props":1403,"children":1405},{"class":468,"line":1404},31,[1406],{"type":434,"tag":466,"props":1407,"children":1408},{"style":841},[1409],{"type":439,"value":1351},{"type":434,"tag":466,"props":1411,"children":1413},{"class":468,"line":1412},32,[1414],{"type":434,"tag":466,"props":1415,"children":1416},{"style":841},[1417],{"type":439,"value":1418},"  }\n",{"type":434,"tag":466,"props":1420,"children":1422},{"class":468,"line":1421},33,[1423],{"type":434,"tag":466,"props":1424,"children":1425},{"emptyLinePlaceholder":975},[1426],{"type":439,"value":978},{"type":434,"tag":466,"props":1428,"children":1430},{"class":468,"line":1429},34,[1431,1436,1440,1445,1450,1454],{"type":434,"tag":466,"props":1432,"children":1433},{"style":985},[1434],{"type":439,"value":1435},"  if",{"type":434,"tag":466,"props":1437,"children":1438},{"style":841},[1439],{"type":439,"value":844},{"type":434,"tag":466,"props":1441,"children":1442},{"style":878},[1443],{"type":439,"value":1444},"curry",{"type":434,"tag":466,"props":1446,"children":1447},{"style":830},[1448],{"type":439,"value":1449}," >",{"type":434,"tag":466,"props":1451,"children":1452},{"style":903},[1453],{"type":439,"value":964},{"type":434,"tag":466,"props":1455,"children":1456},{"style":841},[1457],{"type":439,"value":866},{"type":434,"tag":466,"props":1459,"children":1461},{"class":468,"line":1460},35,[1462,1466,1470,1474,1478,1482,1486,1490,1494,1498],{"type":434,"tag":466,"props":1463,"children":1464},{"style":878},[1465],{"type":439,"value":1210},{"type":434,"tag":466,"props":1467,"children":1468},{"style":1044},[1469],{"type":439,"value":1047},{"type":434,"tag":466,"props":1471,"children":1472},{"style":878},[1473],{"type":439,"value":1219},{"type":434,"tag":466,"props":1475,"children":1476},{"style":830},[1477],{"type":439,"value":833},{"type":434,"tag":466,"props":1479,"children":1480},{"style":830},[1481],{"type":439,"value":890},{"type":434,"tag":466,"props":1483,"children":1484},{"style":824},[1485],{"type":439,"value":895},{"type":434,"tag":466,"props":1487,"children":1488},{"style":841},[1489],{"type":439,"value":900},{"type":434,"tag":466,"props":1491,"children":1492},{"style":878},[1493],{"type":439,"value":1444},{"type":434,"tag":466,"props":1495,"children":1496},{"style":841},[1497],{"type":439,"value":911},{"type":434,"tag":466,"props":1499,"children":1500},{"style":853},[1501],{"type":439,"value":916},{"type":434,"tag":466,"props":1503,"children":1505},{"class":468,"line":1504},36,[1506],{"type":434,"tag":466,"props":1507,"children":1508},{"style":841},[1509],{"type":439,"value":1418},{"type":434,"tag":466,"props":1511,"children":1513},{"class":468,"line":1512},37,[1514,1519,1523,1527,1531],{"type":434,"tag":466,"props":1515,"children":1516},{"style":985},[1517],{"type":439,"value":1518},"  return",{"type":434,"tag":466,"props":1520,"children":1521},{"style":878},[1522],{"type":439,"value":881},{"type":434,"tag":466,"props":1524,"children":1525},{"style":1044},[1526],{"type":439,"value":1047},{"type":434,"tag":466,"props":1528,"children":1529},{"style":878},[1530],{"type":439,"value":1219},{"type":434,"tag":466,"props":1532,"children":1533},{"style":853},[1534],{"type":439,"value":916},{"type":434,"tag":466,"props":1536,"children":1538},{"class":468,"line":1537},38,[1539,1544],{"type":434,"tag":466,"props":1540,"children":1541},{"style":841},[1542],{"type":439,"value":1543},"}",{"type":434,"tag":466,"props":1545,"children":1546},{"style":853},[1547],{"type":439,"value":916},{"type":434,"tag":1549,"props":1550,"children":1551},"style",{},[1552],{"type":439,"value":1553},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":427,"searchDepth":705,"depth":705,"links":1555},[1556,1557],{"id":578,"depth":478,"text":578},{"id":602,"depth":478,"text":602,"children":1558},[1559,1560],{"id":652,"depth":487,"text":652},{"id":657,"depth":487,"text":657},"markdown","content:1.algorithm:3.leetcode:2.add-two-numbers.md","content","1.algorithm/3.leetcode/2.add-two-numbers.md","md",[1567,1569],{"_path":29,"title":28,"description":1568},"给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target 的那\"两个\"整数，并返回它们的数组下标。",{"_path":35,"title":34,"description":1570},"给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。",1713339869020]