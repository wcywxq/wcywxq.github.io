[{"data":1,"prerenderedAt":962},["Reactive",2],{"navigation":3,"/algorithm/leetcode/reverse-string":430,"/algorithm/leetcode/reverse-string-surround":957},[4,237,265,409,416],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,402],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396,399],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":379,"_path":380},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":382,"_path":383},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":385,"_path":386},"随机数","/frontend-code-assessment/scene/random-number",{"title":388,"_path":389},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":391,"_path":392},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":394,"_path":395},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":397,"_path":398},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":400,"_path":401},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":403,"_path":404,"children":405},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[406],{"title":407,"_path":408},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":410,"_path":411,"children":412},"项目","/pro",[413],{"title":414,"_path":415},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":417,"_path":418,"children":419},"后端语言","/backend-languages",[420],{"title":421,"_path":422,"children":423},"Python","/backend-languages/python",[424,427],{"title":425,"_path":426},"基础","/backend-languages/python/base",{"title":428,"_path":429},"函数","/backend-languages/python/function",{"_path":194,"_dir":431,"_draft":432,"_partial":432,"_locale":433,"title":193,"description":434,"url":435,"body":436,"_type":952,"_id":953,"_source":954,"_file":955,"_extension":956},"leetcode",false,"","编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。","https://leetcode.cn/problems/reverse-string",{"type":437,"children":438,"toc":946},"root",[439,446,451,456,486,491,514,519,534,540,545,551,940],{"type":440,"tag":441,"props":442,"children":443},"element","p",{},[444],{"type":445,"value":434},"text",{"type":440,"tag":441,"props":447,"children":448},{},[449],{"type":445,"value":450},"不要给另外的数组分配额外的空间，你必须原地修改输入数组、使用 O(1) 的额外空间解决这一问题。",{"type":440,"tag":441,"props":452,"children":453},{},[454],{"type":445,"value":455},"示例 1：",{"type":440,"tag":457,"props":458,"children":461},"pre",{"className":459,"code":460,"language":445,"meta":433,"style":433},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：s = [\"h\",\"e\",\"l\",\"l\",\"o\"]\n输出：[\"o\",\"l\",\"l\",\"e\",\"h\"]\n",[462],{"type":440,"tag":463,"props":464,"children":465},"code",{"__ignoreMap":433},[466,477],{"type":440,"tag":467,"props":468,"children":471},"span",{"class":469,"line":470},"line",1,[472],{"type":440,"tag":467,"props":473,"children":474},{},[475],{"type":445,"value":476},"输入：s = [\"h\",\"e\",\"l\",\"l\",\"o\"]\n",{"type":440,"tag":467,"props":478,"children":480},{"class":469,"line":479},2,[481],{"type":440,"tag":467,"props":482,"children":483},{},[484],{"type":445,"value":485},"输出：[\"o\",\"l\",\"l\",\"e\",\"h\"]\n",{"type":440,"tag":441,"props":487,"children":488},{},[489],{"type":445,"value":490},"示例 2：",{"type":440,"tag":457,"props":492,"children":494},{"className":459,"code":493,"language":445,"meta":433,"style":433},"输入：s = [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\n输出：[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]\n",[495],{"type":440,"tag":463,"props":496,"children":497},{"__ignoreMap":433},[498,506],{"type":440,"tag":467,"props":499,"children":500},{"class":469,"line":470},[501],{"type":440,"tag":467,"props":502,"children":503},{},[504],{"type":445,"value":505},"输入：s = [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\n",{"type":440,"tag":467,"props":507,"children":508},{"class":469,"line":479},[509],{"type":440,"tag":467,"props":510,"children":511},{},[512],{"type":445,"value":513},"输出：[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]\n",{"type":440,"tag":441,"props":515,"children":516},{},[517],{"type":445,"value":518},"提示：",{"type":440,"tag":520,"props":521,"children":522},"ul",{},[523,529],{"type":440,"tag":524,"props":525,"children":526},"li",{},[527],{"type":445,"value":528},"1 \u003C= s.length \u003C= 10^5",{"type":440,"tag":524,"props":530,"children":531},{},[532],{"type":445,"value":533},"s[i] 都是 ASCII 码表中的可打印字符",{"type":440,"tag":535,"props":536,"children":538},"h2",{"id":537},"解题思路",[539],{"type":445,"value":537},{"type":440,"tag":535,"props":541,"children":543},{"id":542},"实现",[544],{"type":445,"value":542},{"type":440,"tag":546,"props":547,"children":549},"h3",{"id":548},"双指针",[550],{"type":445,"value":548},{"type":440,"tag":457,"props":552,"children":556},{"className":553,"code":554,"language":555,"meta":433,"style":433},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {character[]} s\n * @return {void} Do not return anything, modify s in-place instead.\n */\nvar reverseString = function (s) {\n  let left = 0;\n  let right = s.length - 1;\n  while (left \u003C right) {\n    [s[left], s[right]] = [s[right], s[left]];\n    left++;\n    right--;\n  }\n};\n","js",[557],{"type":440,"tag":463,"props":558,"children":559},{"__ignoreMap":433},[560,569,595,618,627,671,702,749,781,882,900,918,927],{"type":440,"tag":467,"props":561,"children":562},{"class":469,"line":470},[563],{"type":440,"tag":467,"props":564,"children":566},{"style":565},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[567],{"type":445,"value":568},"/**\n",{"type":440,"tag":467,"props":570,"children":571},{"class":469,"line":479},[572,577,583,589],{"type":440,"tag":467,"props":573,"children":574},{"style":565},[575],{"type":445,"value":576}," * ",{"type":440,"tag":467,"props":578,"children":580},{"style":579},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[581],{"type":445,"value":582},"@param",{"type":440,"tag":467,"props":584,"children":586},{"style":585},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[587],{"type":445,"value":588}," {character[]}",{"type":440,"tag":467,"props":590,"children":592},{"style":591},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[593],{"type":445,"value":594}," s\n",{"type":440,"tag":467,"props":596,"children":598},{"class":469,"line":597},3,[599,603,608,613],{"type":440,"tag":467,"props":600,"children":601},{"style":565},[602],{"type":445,"value":576},{"type":440,"tag":467,"props":604,"children":605},{"style":579},[606],{"type":445,"value":607},"@return",{"type":440,"tag":467,"props":609,"children":610},{"style":585},[611],{"type":445,"value":612}," {void}",{"type":440,"tag":467,"props":614,"children":615},{"style":565},[616],{"type":445,"value":617}," Do not return anything, modify s in-place instead.\n",{"type":440,"tag":467,"props":619,"children":621},{"class":469,"line":620},4,[622],{"type":440,"tag":467,"props":623,"children":624},{"style":565},[625],{"type":445,"value":626}," */\n",{"type":440,"tag":467,"props":628,"children":630},{"class":469,"line":629},5,[631,637,643,649,654,660,666],{"type":440,"tag":467,"props":632,"children":634},{"style":633},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[635],{"type":445,"value":636},"var",{"type":440,"tag":467,"props":638,"children":640},{"style":639},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[641],{"type":445,"value":642}," reverseString",{"type":440,"tag":467,"props":644,"children":646},{"style":645},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[647],{"type":445,"value":648}," =",{"type":440,"tag":467,"props":650,"children":651},{"style":633},[652],{"type":445,"value":653}," function",{"type":440,"tag":467,"props":655,"children":657},{"style":656},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[658],{"type":445,"value":659}," (",{"type":440,"tag":467,"props":661,"children":663},{"style":662},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[664],{"type":445,"value":665},"s",{"type":440,"tag":467,"props":667,"children":668},{"style":656},[669],{"type":445,"value":670},") {\n",{"type":440,"tag":467,"props":672,"children":674},{"class":469,"line":673},6,[675,680,686,690,696],{"type":440,"tag":467,"props":676,"children":677},{"style":633},[678],{"type":445,"value":679},"  let",{"type":440,"tag":467,"props":681,"children":683},{"style":682},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[684],{"type":445,"value":685}," left",{"type":440,"tag":467,"props":687,"children":688},{"style":645},[689],{"type":445,"value":648},{"type":440,"tag":467,"props":691,"children":693},{"style":692},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[694],{"type":445,"value":695}," 0",{"type":440,"tag":467,"props":697,"children":699},{"style":698},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[700],{"type":445,"value":701},";\n",{"type":440,"tag":467,"props":703,"children":705},{"class":469,"line":704},7,[706,710,715,719,724,730,735,740,745],{"type":440,"tag":467,"props":707,"children":708},{"style":633},[709],{"type":445,"value":679},{"type":440,"tag":467,"props":711,"children":712},{"style":682},[713],{"type":445,"value":714}," right",{"type":440,"tag":467,"props":716,"children":717},{"style":645},[718],{"type":445,"value":648},{"type":440,"tag":467,"props":720,"children":721},{"style":682},[722],{"type":445,"value":723}," s",{"type":440,"tag":467,"props":725,"children":727},{"style":726},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[728],{"type":445,"value":729},".",{"type":440,"tag":467,"props":731,"children":732},{"style":656},[733],{"type":445,"value":734},"length ",{"type":440,"tag":467,"props":736,"children":737},{"style":645},[738],{"type":445,"value":739},"-",{"type":440,"tag":467,"props":741,"children":742},{"style":692},[743],{"type":445,"value":744}," 1",{"type":440,"tag":467,"props":746,"children":747},{"style":698},[748],{"type":445,"value":701},{"type":440,"tag":467,"props":750,"children":752},{"class":469,"line":751},8,[753,759,763,768,773,777],{"type":440,"tag":467,"props":754,"children":756},{"style":755},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[757],{"type":445,"value":758},"  while",{"type":440,"tag":467,"props":760,"children":761},{"style":656},[762],{"type":445,"value":659},{"type":440,"tag":467,"props":764,"children":765},{"style":682},[766],{"type":445,"value":767},"left",{"type":440,"tag":467,"props":769,"children":770},{"style":645},[771],{"type":445,"value":772}," \u003C",{"type":440,"tag":467,"props":774,"children":775},{"style":682},[776],{"type":445,"value":714},{"type":440,"tag":467,"props":778,"children":779},{"style":656},[780],{"type":445,"value":670},{"type":440,"tag":467,"props":782,"children":784},{"class":469,"line":783},9,[785,790,794,799,803,808,813,817,821,826,831,836,841,845,849,853,857,861,865,869,873,878],{"type":440,"tag":467,"props":786,"children":787},{"style":656},[788],{"type":445,"value":789},"    [",{"type":440,"tag":467,"props":791,"children":792},{"style":682},[793],{"type":445,"value":665},{"type":440,"tag":467,"props":795,"children":796},{"style":656},[797],{"type":445,"value":798},"[",{"type":440,"tag":467,"props":800,"children":801},{"style":682},[802],{"type":445,"value":767},{"type":440,"tag":467,"props":804,"children":805},{"style":656},[806],{"type":445,"value":807},"]",{"type":440,"tag":467,"props":809,"children":810},{"style":698},[811],{"type":445,"value":812},",",{"type":440,"tag":467,"props":814,"children":815},{"style":682},[816],{"type":445,"value":723},{"type":440,"tag":467,"props":818,"children":819},{"style":656},[820],{"type":445,"value":798},{"type":440,"tag":467,"props":822,"children":823},{"style":682},[824],{"type":445,"value":825},"right",{"type":440,"tag":467,"props":827,"children":828},{"style":656},[829],{"type":445,"value":830},"]] ",{"type":440,"tag":467,"props":832,"children":833},{"style":645},[834],{"type":445,"value":835},"=",{"type":440,"tag":467,"props":837,"children":838},{"style":656},[839],{"type":445,"value":840}," [",{"type":440,"tag":467,"props":842,"children":843},{"style":682},[844],{"type":445,"value":665},{"type":440,"tag":467,"props":846,"children":847},{"style":656},[848],{"type":445,"value":798},{"type":440,"tag":467,"props":850,"children":851},{"style":682},[852],{"type":445,"value":825},{"type":440,"tag":467,"props":854,"children":855},{"style":656},[856],{"type":445,"value":807},{"type":440,"tag":467,"props":858,"children":859},{"style":698},[860],{"type":445,"value":812},{"type":440,"tag":467,"props":862,"children":863},{"style":682},[864],{"type":445,"value":723},{"type":440,"tag":467,"props":866,"children":867},{"style":656},[868],{"type":445,"value":798},{"type":440,"tag":467,"props":870,"children":871},{"style":682},[872],{"type":445,"value":767},{"type":440,"tag":467,"props":874,"children":875},{"style":656},[876],{"type":445,"value":877},"]]",{"type":440,"tag":467,"props":879,"children":880},{"style":698},[881],{"type":445,"value":701},{"type":440,"tag":467,"props":883,"children":885},{"class":469,"line":884},10,[886,891,896],{"type":440,"tag":467,"props":887,"children":888},{"style":682},[889],{"type":445,"value":890},"    left",{"type":440,"tag":467,"props":892,"children":893},{"style":645},[894],{"type":445,"value":895},"++",{"type":440,"tag":467,"props":897,"children":898},{"style":698},[899],{"type":445,"value":701},{"type":440,"tag":467,"props":901,"children":903},{"class":469,"line":902},11,[904,909,914],{"type":440,"tag":467,"props":905,"children":906},{"style":682},[907],{"type":445,"value":908},"    right",{"type":440,"tag":467,"props":910,"children":911},{"style":645},[912],{"type":445,"value":913},"--",{"type":440,"tag":467,"props":915,"children":916},{"style":698},[917],{"type":445,"value":701},{"type":440,"tag":467,"props":919,"children":921},{"class":469,"line":920},12,[922],{"type":440,"tag":467,"props":923,"children":924},{"style":656},[925],{"type":445,"value":926},"  }\n",{"type":440,"tag":467,"props":928,"children":930},{"class":469,"line":929},13,[931,936],{"type":440,"tag":467,"props":932,"children":933},{"style":656},[934],{"type":445,"value":935},"}",{"type":440,"tag":467,"props":937,"children":938},{"style":698},[939],{"type":445,"value":701},{"type":440,"tag":941,"props":942,"children":943},"style",{},[944],{"type":445,"value":945},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":433,"searchDepth":629,"depth":629,"links":947},[948,949],{"id":537,"depth":479,"text":537},{"id":542,"depth":479,"text":542,"children":950},[951],{"id":548,"depth":597,"text":548},"markdown","content:1.algorithm:3.leetcode:344.reverse-string.md","content","1.algorithm/3.leetcode/344.reverse-string.md","md",[958,960],{"_path":191,"title":190,"description":959},"给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。",{"_path":197,"title":196,"description":961},"给你一个字符串 s ，仅反转字符串中的所有元音字母，并返回结果字符串。",1713426813925]