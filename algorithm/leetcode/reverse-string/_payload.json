[{"data":1,"prerenderedAt":937},["Reactive",2],{"navigation":3,"/algorithm/leetcode/reverse-string":405,"/algorithm/leetcode/reverse-string-surround":932},[4,237,265,384,391],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR 169. 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR 187. 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数相加","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,377],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,347,350,353,356,359,362,365,368,371,374],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":348,"_path":349},"倒计时","/frontend-code-assessment/scene/countdown",{"title":351,"_path":352},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":354,"_path":355},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":357,"_path":358},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":360,"_path":361},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":363,"_path":364},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":366,"_path":367},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":369,"_path":370},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":372,"_path":373},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":375,"_path":376},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":378,"_path":379,"children":380},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[381],{"title":382,"_path":383},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":385,"_path":386,"children":387},"项目","/pro",[388],{"title":389,"_path":390},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":392,"_path":393,"children":394},"后端语言","/backend-languages",[395],{"title":396,"_path":397,"children":398},"Python","/backend-languages/python",[399,402],{"title":400,"_path":401},"基础","/backend-languages/python/base",{"title":403,"_path":404},"函数","/backend-languages/python/function",{"_path":194,"_dir":406,"_draft":407,"_partial":407,"_locale":408,"title":193,"description":409,"url":410,"body":411,"_type":927,"_id":928,"_source":929,"_file":930,"_extension":931},"leetcode",false,"","编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。","https://leetcode.cn/problems/reverse-string",{"type":412,"children":413,"toc":921},"root",[414,421,426,431,461,466,489,494,509,515,520,526,915],{"type":415,"tag":416,"props":417,"children":418},"element","p",{},[419],{"type":420,"value":409},"text",{"type":415,"tag":416,"props":422,"children":423},{},[424],{"type":420,"value":425},"不要给另外的数组分配额外的空间，你必须原地修改输入数组、使用 O(1) 的额外空间解决这一问题。",{"type":415,"tag":416,"props":427,"children":428},{},[429],{"type":420,"value":430},"示例 1：",{"type":415,"tag":432,"props":433,"children":436},"pre",{"className":434,"code":435,"language":420,"meta":408,"style":408},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：s = [\"h\",\"e\",\"l\",\"l\",\"o\"]\n输出：[\"o\",\"l\",\"l\",\"e\",\"h\"]\n",[437],{"type":415,"tag":438,"props":439,"children":440},"code",{"__ignoreMap":408},[441,452],{"type":415,"tag":442,"props":443,"children":446},"span",{"class":444,"line":445},"line",1,[447],{"type":415,"tag":442,"props":448,"children":449},{},[450],{"type":420,"value":451},"输入：s = [\"h\",\"e\",\"l\",\"l\",\"o\"]\n",{"type":415,"tag":442,"props":453,"children":455},{"class":444,"line":454},2,[456],{"type":415,"tag":442,"props":457,"children":458},{},[459],{"type":420,"value":460},"输出：[\"o\",\"l\",\"l\",\"e\",\"h\"]\n",{"type":415,"tag":416,"props":462,"children":463},{},[464],{"type":420,"value":465},"示例 2：",{"type":415,"tag":432,"props":467,"children":469},{"className":434,"code":468,"language":420,"meta":408,"style":408},"输入：s = [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\n输出：[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]\n",[470],{"type":415,"tag":438,"props":471,"children":472},{"__ignoreMap":408},[473,481],{"type":415,"tag":442,"props":474,"children":475},{"class":444,"line":445},[476],{"type":415,"tag":442,"props":477,"children":478},{},[479],{"type":420,"value":480},"输入：s = [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\n",{"type":415,"tag":442,"props":482,"children":483},{"class":444,"line":454},[484],{"type":415,"tag":442,"props":485,"children":486},{},[487],{"type":420,"value":488},"输出：[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]\n",{"type":415,"tag":416,"props":490,"children":491},{},[492],{"type":420,"value":493},"提示：",{"type":415,"tag":495,"props":496,"children":497},"ul",{},[498,504],{"type":415,"tag":499,"props":500,"children":501},"li",{},[502],{"type":420,"value":503},"1 \u003C= s.length \u003C= 10^5",{"type":415,"tag":499,"props":505,"children":506},{},[507],{"type":420,"value":508},"s[i] 都是 ASCII 码表中的可打印字符",{"type":415,"tag":510,"props":511,"children":513},"h2",{"id":512},"解题思路",[514],{"type":420,"value":512},{"type":415,"tag":510,"props":516,"children":518},{"id":517},"实现",[519],{"type":420,"value":517},{"type":415,"tag":521,"props":522,"children":524},"h3",{"id":523},"双指针",[525],{"type":420,"value":523},{"type":415,"tag":432,"props":527,"children":531},{"className":528,"code":529,"language":530,"meta":408,"style":408},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {character[]} s\n * @return {void} Do not return anything, modify s in-place instead.\n */\nvar reverseString = function (s) {\n  let left = 0;\n  let right = s.length - 1;\n  while (left \u003C right) {\n    [s[left], s[right]] = [s[right], s[left]];\n    left++;\n    right--;\n  }\n};\n","js",[532],{"type":415,"tag":438,"props":533,"children":534},{"__ignoreMap":408},[535,544,570,593,602,646,677,724,756,857,875,893,902],{"type":415,"tag":442,"props":536,"children":537},{"class":444,"line":445},[538],{"type":415,"tag":442,"props":539,"children":541},{"style":540},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[542],{"type":420,"value":543},"/**\n",{"type":415,"tag":442,"props":545,"children":546},{"class":444,"line":454},[547,552,558,564],{"type":415,"tag":442,"props":548,"children":549},{"style":540},[550],{"type":420,"value":551}," * ",{"type":415,"tag":442,"props":553,"children":555},{"style":554},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[556],{"type":420,"value":557},"@param",{"type":415,"tag":442,"props":559,"children":561},{"style":560},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[562],{"type":420,"value":563}," {character[]}",{"type":415,"tag":442,"props":565,"children":567},{"style":566},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[568],{"type":420,"value":569}," s\n",{"type":415,"tag":442,"props":571,"children":573},{"class":444,"line":572},3,[574,578,583,588],{"type":415,"tag":442,"props":575,"children":576},{"style":540},[577],{"type":420,"value":551},{"type":415,"tag":442,"props":579,"children":580},{"style":554},[581],{"type":420,"value":582},"@return",{"type":415,"tag":442,"props":584,"children":585},{"style":560},[586],{"type":420,"value":587}," {void}",{"type":415,"tag":442,"props":589,"children":590},{"style":540},[591],{"type":420,"value":592}," Do not return anything, modify s in-place instead.\n",{"type":415,"tag":442,"props":594,"children":596},{"class":444,"line":595},4,[597],{"type":415,"tag":442,"props":598,"children":599},{"style":540},[600],{"type":420,"value":601}," */\n",{"type":415,"tag":442,"props":603,"children":605},{"class":444,"line":604},5,[606,612,618,624,629,635,641],{"type":415,"tag":442,"props":607,"children":609},{"style":608},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[610],{"type":420,"value":611},"var",{"type":415,"tag":442,"props":613,"children":615},{"style":614},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[616],{"type":420,"value":617}," reverseString",{"type":415,"tag":442,"props":619,"children":621},{"style":620},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[622],{"type":420,"value":623}," =",{"type":415,"tag":442,"props":625,"children":626},{"style":608},[627],{"type":420,"value":628}," function",{"type":415,"tag":442,"props":630,"children":632},{"style":631},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[633],{"type":420,"value":634}," (",{"type":415,"tag":442,"props":636,"children":638},{"style":637},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[639],{"type":420,"value":640},"s",{"type":415,"tag":442,"props":642,"children":643},{"style":631},[644],{"type":420,"value":645},") {\n",{"type":415,"tag":442,"props":647,"children":649},{"class":444,"line":648},6,[650,655,661,665,671],{"type":415,"tag":442,"props":651,"children":652},{"style":608},[653],{"type":420,"value":654},"  let",{"type":415,"tag":442,"props":656,"children":658},{"style":657},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[659],{"type":420,"value":660}," left",{"type":415,"tag":442,"props":662,"children":663},{"style":620},[664],{"type":420,"value":623},{"type":415,"tag":442,"props":666,"children":668},{"style":667},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[669],{"type":420,"value":670}," 0",{"type":415,"tag":442,"props":672,"children":674},{"style":673},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[675],{"type":420,"value":676},";\n",{"type":415,"tag":442,"props":678,"children":680},{"class":444,"line":679},7,[681,685,690,694,699,705,710,715,720],{"type":415,"tag":442,"props":682,"children":683},{"style":608},[684],{"type":420,"value":654},{"type":415,"tag":442,"props":686,"children":687},{"style":657},[688],{"type":420,"value":689}," right",{"type":415,"tag":442,"props":691,"children":692},{"style":620},[693],{"type":420,"value":623},{"type":415,"tag":442,"props":695,"children":696},{"style":657},[697],{"type":420,"value":698}," s",{"type":415,"tag":442,"props":700,"children":702},{"style":701},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[703],{"type":420,"value":704},".",{"type":415,"tag":442,"props":706,"children":707},{"style":631},[708],{"type":420,"value":709},"length ",{"type":415,"tag":442,"props":711,"children":712},{"style":620},[713],{"type":420,"value":714},"-",{"type":415,"tag":442,"props":716,"children":717},{"style":667},[718],{"type":420,"value":719}," 1",{"type":415,"tag":442,"props":721,"children":722},{"style":673},[723],{"type":420,"value":676},{"type":415,"tag":442,"props":725,"children":727},{"class":444,"line":726},8,[728,734,738,743,748,752],{"type":415,"tag":442,"props":729,"children":731},{"style":730},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[732],{"type":420,"value":733},"  while",{"type":415,"tag":442,"props":735,"children":736},{"style":631},[737],{"type":420,"value":634},{"type":415,"tag":442,"props":739,"children":740},{"style":657},[741],{"type":420,"value":742},"left",{"type":415,"tag":442,"props":744,"children":745},{"style":620},[746],{"type":420,"value":747}," \u003C",{"type":415,"tag":442,"props":749,"children":750},{"style":657},[751],{"type":420,"value":689},{"type":415,"tag":442,"props":753,"children":754},{"style":631},[755],{"type":420,"value":645},{"type":415,"tag":442,"props":757,"children":759},{"class":444,"line":758},9,[760,765,769,774,778,783,788,792,796,801,806,811,816,820,824,828,832,836,840,844,848,853],{"type":415,"tag":442,"props":761,"children":762},{"style":631},[763],{"type":420,"value":764},"    [",{"type":415,"tag":442,"props":766,"children":767},{"style":657},[768],{"type":420,"value":640},{"type":415,"tag":442,"props":770,"children":771},{"style":631},[772],{"type":420,"value":773},"[",{"type":415,"tag":442,"props":775,"children":776},{"style":657},[777],{"type":420,"value":742},{"type":415,"tag":442,"props":779,"children":780},{"style":631},[781],{"type":420,"value":782},"]",{"type":415,"tag":442,"props":784,"children":785},{"style":673},[786],{"type":420,"value":787},",",{"type":415,"tag":442,"props":789,"children":790},{"style":657},[791],{"type":420,"value":698},{"type":415,"tag":442,"props":793,"children":794},{"style":631},[795],{"type":420,"value":773},{"type":415,"tag":442,"props":797,"children":798},{"style":657},[799],{"type":420,"value":800},"right",{"type":415,"tag":442,"props":802,"children":803},{"style":631},[804],{"type":420,"value":805},"]] ",{"type":415,"tag":442,"props":807,"children":808},{"style":620},[809],{"type":420,"value":810},"=",{"type":415,"tag":442,"props":812,"children":813},{"style":631},[814],{"type":420,"value":815}," [",{"type":415,"tag":442,"props":817,"children":818},{"style":657},[819],{"type":420,"value":640},{"type":415,"tag":442,"props":821,"children":822},{"style":631},[823],{"type":420,"value":773},{"type":415,"tag":442,"props":825,"children":826},{"style":657},[827],{"type":420,"value":800},{"type":415,"tag":442,"props":829,"children":830},{"style":631},[831],{"type":420,"value":782},{"type":415,"tag":442,"props":833,"children":834},{"style":673},[835],{"type":420,"value":787},{"type":415,"tag":442,"props":837,"children":838},{"style":657},[839],{"type":420,"value":698},{"type":415,"tag":442,"props":841,"children":842},{"style":631},[843],{"type":420,"value":773},{"type":415,"tag":442,"props":845,"children":846},{"style":657},[847],{"type":420,"value":742},{"type":415,"tag":442,"props":849,"children":850},{"style":631},[851],{"type":420,"value":852},"]]",{"type":415,"tag":442,"props":854,"children":855},{"style":673},[856],{"type":420,"value":676},{"type":415,"tag":442,"props":858,"children":860},{"class":444,"line":859},10,[861,866,871],{"type":415,"tag":442,"props":862,"children":863},{"style":657},[864],{"type":420,"value":865},"    left",{"type":415,"tag":442,"props":867,"children":868},{"style":620},[869],{"type":420,"value":870},"++",{"type":415,"tag":442,"props":872,"children":873},{"style":673},[874],{"type":420,"value":676},{"type":415,"tag":442,"props":876,"children":878},{"class":444,"line":877},11,[879,884,889],{"type":415,"tag":442,"props":880,"children":881},{"style":657},[882],{"type":420,"value":883},"    right",{"type":415,"tag":442,"props":885,"children":886},{"style":620},[887],{"type":420,"value":888},"--",{"type":415,"tag":442,"props":890,"children":891},{"style":673},[892],{"type":420,"value":676},{"type":415,"tag":442,"props":894,"children":896},{"class":444,"line":895},12,[897],{"type":415,"tag":442,"props":898,"children":899},{"style":631},[900],{"type":420,"value":901},"  }\n",{"type":415,"tag":442,"props":903,"children":905},{"class":444,"line":904},13,[906,911],{"type":415,"tag":442,"props":907,"children":908},{"style":631},[909],{"type":420,"value":910},"}",{"type":415,"tag":442,"props":912,"children":913},{"style":673},[914],{"type":420,"value":676},{"type":415,"tag":916,"props":917,"children":918},"style",{},[919],{"type":420,"value":920},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":408,"searchDepth":604,"depth":604,"links":922},[923,924],{"id":512,"depth":454,"text":512},{"id":517,"depth":454,"text":517,"children":925},[926],{"id":523,"depth":572,"text":523},"markdown","content:1.algorithm:3.leetcode:344.reverse-string.md","content","1.algorithm/3.leetcode/344.reverse-string.md","md",[933,935],{"_path":191,"title":190,"description":934},"给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。",{"_path":197,"title":196,"description":936},"给你一个字符串 s ，仅反转字符串中的所有元音字母，并返回结果字符串。",1713186264735]