[{"data":1,"prerenderedAt":930},["Reactive",2],{"navigation":3,"/algorithm/leetcode/reverse-string":398,"/algorithm/leetcode/reverse-string-surround":925},[4,237,265,384],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR 169. 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR 187. 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数相加","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,377],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,347,350,353,356,359,362,365,368,371,374],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":348,"_path":349},"倒计时","/frontend-code-assessment/scene/countdown",{"title":351,"_path":352},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":354,"_path":355},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":357,"_path":358},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":360,"_path":361},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":363,"_path":364},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":366,"_path":367},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":369,"_path":370},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":372,"_path":373},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":375,"_path":376},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":378,"_path":379,"children":380},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[381],{"title":382,"_path":383},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":385,"_path":386,"children":387},"后端语言","/backend-languages",[388],{"title":389,"_path":390,"children":391},"Python","/backend-languages/python",[392,395],{"title":393,"_path":394},"基础","/backend-languages/python/base",{"title":396,"_path":397},"函数","/backend-languages/python/function",{"_path":194,"_dir":399,"_draft":400,"_partial":400,"_locale":401,"title":193,"description":402,"url":403,"body":404,"_type":920,"_id":921,"_source":922,"_file":923,"_extension":924},"leetcode",false,"","编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。","https://leetcode.cn/problems/reverse-string",{"type":405,"children":406,"toc":914},"root",[407,414,419,424,454,459,482,487,502,508,513,519,908],{"type":408,"tag":409,"props":410,"children":411},"element","p",{},[412],{"type":413,"value":402},"text",{"type":408,"tag":409,"props":415,"children":416},{},[417],{"type":413,"value":418},"不要给另外的数组分配额外的空间，你必须原地修改输入数组、使用 O(1) 的额外空间解决这一问题。",{"type":408,"tag":409,"props":420,"children":421},{},[422],{"type":413,"value":423},"示例 1：",{"type":408,"tag":425,"props":426,"children":429},"pre",{"className":427,"code":428,"language":413,"meta":401,"style":401},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：s = [\"h\",\"e\",\"l\",\"l\",\"o\"]\n输出：[\"o\",\"l\",\"l\",\"e\",\"h\"]\n",[430],{"type":408,"tag":431,"props":432,"children":433},"code",{"__ignoreMap":401},[434,445],{"type":408,"tag":435,"props":436,"children":439},"span",{"class":437,"line":438},"line",1,[440],{"type":408,"tag":435,"props":441,"children":442},{},[443],{"type":413,"value":444},"输入：s = [\"h\",\"e\",\"l\",\"l\",\"o\"]\n",{"type":408,"tag":435,"props":446,"children":448},{"class":437,"line":447},2,[449],{"type":408,"tag":435,"props":450,"children":451},{},[452],{"type":413,"value":453},"输出：[\"o\",\"l\",\"l\",\"e\",\"h\"]\n",{"type":408,"tag":409,"props":455,"children":456},{},[457],{"type":413,"value":458},"示例 2：",{"type":408,"tag":425,"props":460,"children":462},{"className":427,"code":461,"language":413,"meta":401,"style":401},"输入：s = [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\n输出：[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]\n",[463],{"type":408,"tag":431,"props":464,"children":465},{"__ignoreMap":401},[466,474],{"type":408,"tag":435,"props":467,"children":468},{"class":437,"line":438},[469],{"type":408,"tag":435,"props":470,"children":471},{},[472],{"type":413,"value":473},"输入：s = [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\n",{"type":408,"tag":435,"props":475,"children":476},{"class":437,"line":447},[477],{"type":408,"tag":435,"props":478,"children":479},{},[480],{"type":413,"value":481},"输出：[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]\n",{"type":408,"tag":409,"props":483,"children":484},{},[485],{"type":413,"value":486},"提示：",{"type":408,"tag":488,"props":489,"children":490},"ul",{},[491,497],{"type":408,"tag":492,"props":493,"children":494},"li",{},[495],{"type":413,"value":496},"1 \u003C= s.length \u003C= 10^5",{"type":408,"tag":492,"props":498,"children":499},{},[500],{"type":413,"value":501},"s[i] 都是 ASCII 码表中的可打印字符",{"type":408,"tag":503,"props":504,"children":506},"h2",{"id":505},"解题思路",[507],{"type":413,"value":505},{"type":408,"tag":503,"props":509,"children":511},{"id":510},"实现",[512],{"type":413,"value":510},{"type":408,"tag":514,"props":515,"children":517},"h3",{"id":516},"双指针",[518],{"type":413,"value":516},{"type":408,"tag":425,"props":520,"children":524},{"className":521,"code":522,"language":523,"meta":401,"style":401},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {character[]} s\n * @return {void} Do not return anything, modify s in-place instead.\n */\nvar reverseString = function (s) {\n  let left = 0;\n  let right = s.length - 1;\n  while (left \u003C right) {\n    [s[left], s[right]] = [s[right], s[left]];\n    left++;\n    right--;\n  }\n};\n","js",[525],{"type":408,"tag":431,"props":526,"children":527},{"__ignoreMap":401},[528,537,563,586,595,639,670,717,749,850,868,886,895],{"type":408,"tag":435,"props":529,"children":530},{"class":437,"line":438},[531],{"type":408,"tag":435,"props":532,"children":534},{"style":533},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[535],{"type":413,"value":536},"/**\n",{"type":408,"tag":435,"props":538,"children":539},{"class":437,"line":447},[540,545,551,557],{"type":408,"tag":435,"props":541,"children":542},{"style":533},[543],{"type":413,"value":544}," * ",{"type":408,"tag":435,"props":546,"children":548},{"style":547},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[549],{"type":413,"value":550},"@param",{"type":408,"tag":435,"props":552,"children":554},{"style":553},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[555],{"type":413,"value":556}," {character[]}",{"type":408,"tag":435,"props":558,"children":560},{"style":559},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[561],{"type":413,"value":562}," s\n",{"type":408,"tag":435,"props":564,"children":566},{"class":437,"line":565},3,[567,571,576,581],{"type":408,"tag":435,"props":568,"children":569},{"style":533},[570],{"type":413,"value":544},{"type":408,"tag":435,"props":572,"children":573},{"style":547},[574],{"type":413,"value":575},"@return",{"type":408,"tag":435,"props":577,"children":578},{"style":553},[579],{"type":413,"value":580}," {void}",{"type":408,"tag":435,"props":582,"children":583},{"style":533},[584],{"type":413,"value":585}," Do not return anything, modify s in-place instead.\n",{"type":408,"tag":435,"props":587,"children":589},{"class":437,"line":588},4,[590],{"type":408,"tag":435,"props":591,"children":592},{"style":533},[593],{"type":413,"value":594}," */\n",{"type":408,"tag":435,"props":596,"children":598},{"class":437,"line":597},5,[599,605,611,617,622,628,634],{"type":408,"tag":435,"props":600,"children":602},{"style":601},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[603],{"type":413,"value":604},"var",{"type":408,"tag":435,"props":606,"children":608},{"style":607},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[609],{"type":413,"value":610}," reverseString",{"type":408,"tag":435,"props":612,"children":614},{"style":613},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[615],{"type":413,"value":616}," =",{"type":408,"tag":435,"props":618,"children":619},{"style":601},[620],{"type":413,"value":621}," function",{"type":408,"tag":435,"props":623,"children":625},{"style":624},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[626],{"type":413,"value":627}," (",{"type":408,"tag":435,"props":629,"children":631},{"style":630},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[632],{"type":413,"value":633},"s",{"type":408,"tag":435,"props":635,"children":636},{"style":624},[637],{"type":413,"value":638},") {\n",{"type":408,"tag":435,"props":640,"children":642},{"class":437,"line":641},6,[643,648,654,658,664],{"type":408,"tag":435,"props":644,"children":645},{"style":601},[646],{"type":413,"value":647},"  let",{"type":408,"tag":435,"props":649,"children":651},{"style":650},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[652],{"type":413,"value":653}," left",{"type":408,"tag":435,"props":655,"children":656},{"style":613},[657],{"type":413,"value":616},{"type":408,"tag":435,"props":659,"children":661},{"style":660},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[662],{"type":413,"value":663}," 0",{"type":408,"tag":435,"props":665,"children":667},{"style":666},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[668],{"type":413,"value":669},";\n",{"type":408,"tag":435,"props":671,"children":673},{"class":437,"line":672},7,[674,678,683,687,692,698,703,708,713],{"type":408,"tag":435,"props":675,"children":676},{"style":601},[677],{"type":413,"value":647},{"type":408,"tag":435,"props":679,"children":680},{"style":650},[681],{"type":413,"value":682}," right",{"type":408,"tag":435,"props":684,"children":685},{"style":613},[686],{"type":413,"value":616},{"type":408,"tag":435,"props":688,"children":689},{"style":650},[690],{"type":413,"value":691}," s",{"type":408,"tag":435,"props":693,"children":695},{"style":694},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[696],{"type":413,"value":697},".",{"type":408,"tag":435,"props":699,"children":700},{"style":624},[701],{"type":413,"value":702},"length ",{"type":408,"tag":435,"props":704,"children":705},{"style":613},[706],{"type":413,"value":707},"-",{"type":408,"tag":435,"props":709,"children":710},{"style":660},[711],{"type":413,"value":712}," 1",{"type":408,"tag":435,"props":714,"children":715},{"style":666},[716],{"type":413,"value":669},{"type":408,"tag":435,"props":718,"children":720},{"class":437,"line":719},8,[721,727,731,736,741,745],{"type":408,"tag":435,"props":722,"children":724},{"style":723},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[725],{"type":413,"value":726},"  while",{"type":408,"tag":435,"props":728,"children":729},{"style":624},[730],{"type":413,"value":627},{"type":408,"tag":435,"props":732,"children":733},{"style":650},[734],{"type":413,"value":735},"left",{"type":408,"tag":435,"props":737,"children":738},{"style":613},[739],{"type":413,"value":740}," \u003C",{"type":408,"tag":435,"props":742,"children":743},{"style":650},[744],{"type":413,"value":682},{"type":408,"tag":435,"props":746,"children":747},{"style":624},[748],{"type":413,"value":638},{"type":408,"tag":435,"props":750,"children":752},{"class":437,"line":751},9,[753,758,762,767,771,776,781,785,789,794,799,804,809,813,817,821,825,829,833,837,841,846],{"type":408,"tag":435,"props":754,"children":755},{"style":624},[756],{"type":413,"value":757},"    [",{"type":408,"tag":435,"props":759,"children":760},{"style":650},[761],{"type":413,"value":633},{"type":408,"tag":435,"props":763,"children":764},{"style":624},[765],{"type":413,"value":766},"[",{"type":408,"tag":435,"props":768,"children":769},{"style":650},[770],{"type":413,"value":735},{"type":408,"tag":435,"props":772,"children":773},{"style":624},[774],{"type":413,"value":775},"]",{"type":408,"tag":435,"props":777,"children":778},{"style":666},[779],{"type":413,"value":780},",",{"type":408,"tag":435,"props":782,"children":783},{"style":650},[784],{"type":413,"value":691},{"type":408,"tag":435,"props":786,"children":787},{"style":624},[788],{"type":413,"value":766},{"type":408,"tag":435,"props":790,"children":791},{"style":650},[792],{"type":413,"value":793},"right",{"type":408,"tag":435,"props":795,"children":796},{"style":624},[797],{"type":413,"value":798},"]] ",{"type":408,"tag":435,"props":800,"children":801},{"style":613},[802],{"type":413,"value":803},"=",{"type":408,"tag":435,"props":805,"children":806},{"style":624},[807],{"type":413,"value":808}," [",{"type":408,"tag":435,"props":810,"children":811},{"style":650},[812],{"type":413,"value":633},{"type":408,"tag":435,"props":814,"children":815},{"style":624},[816],{"type":413,"value":766},{"type":408,"tag":435,"props":818,"children":819},{"style":650},[820],{"type":413,"value":793},{"type":408,"tag":435,"props":822,"children":823},{"style":624},[824],{"type":413,"value":775},{"type":408,"tag":435,"props":826,"children":827},{"style":666},[828],{"type":413,"value":780},{"type":408,"tag":435,"props":830,"children":831},{"style":650},[832],{"type":413,"value":691},{"type":408,"tag":435,"props":834,"children":835},{"style":624},[836],{"type":413,"value":766},{"type":408,"tag":435,"props":838,"children":839},{"style":650},[840],{"type":413,"value":735},{"type":408,"tag":435,"props":842,"children":843},{"style":624},[844],{"type":413,"value":845},"]]",{"type":408,"tag":435,"props":847,"children":848},{"style":666},[849],{"type":413,"value":669},{"type":408,"tag":435,"props":851,"children":853},{"class":437,"line":852},10,[854,859,864],{"type":408,"tag":435,"props":855,"children":856},{"style":650},[857],{"type":413,"value":858},"    left",{"type":408,"tag":435,"props":860,"children":861},{"style":613},[862],{"type":413,"value":863},"++",{"type":408,"tag":435,"props":865,"children":866},{"style":666},[867],{"type":413,"value":669},{"type":408,"tag":435,"props":869,"children":871},{"class":437,"line":870},11,[872,877,882],{"type":408,"tag":435,"props":873,"children":874},{"style":650},[875],{"type":413,"value":876},"    right",{"type":408,"tag":435,"props":878,"children":879},{"style":613},[880],{"type":413,"value":881},"--",{"type":408,"tag":435,"props":883,"children":884},{"style":666},[885],{"type":413,"value":669},{"type":408,"tag":435,"props":887,"children":889},{"class":437,"line":888},12,[890],{"type":408,"tag":435,"props":891,"children":892},{"style":624},[893],{"type":413,"value":894},"  }\n",{"type":408,"tag":435,"props":896,"children":898},{"class":437,"line":897},13,[899,904],{"type":408,"tag":435,"props":900,"children":901},{"style":624},[902],{"type":413,"value":903},"}",{"type":408,"tag":435,"props":905,"children":906},{"style":666},[907],{"type":413,"value":669},{"type":408,"tag":909,"props":910,"children":911},"style",{},[912],{"type":413,"value":913},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":401,"searchDepth":597,"depth":597,"links":915},[916,917],{"id":505,"depth":447,"text":505},{"id":510,"depth":447,"text":510,"children":918},[919],{"id":516,"depth":565,"text":516},"markdown","content:1.algorithm:3.leetcode:344.reverse-string.md","content","1.algorithm/3.leetcode/344.reverse-string.md","md",[926,928],{"_path":191,"title":190,"description":927},"给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。",{"_path":197,"title":196,"description":929},"给你一个字符串 s ，仅反转字符串中的所有元音字母，并返回结果字符串。",1713153295825]