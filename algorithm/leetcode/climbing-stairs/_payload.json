[{"data":1,"prerenderedAt":1050},["Reactive",2],{"navigation":3,"/algorithm/leetcode/climbing-stairs":430,"/algorithm/leetcode/climbing-stairs-surround":1045},[4,237,265,409,416],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,402],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396,399],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":379,"_path":380},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":382,"_path":383},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":385,"_path":386},"随机数","/frontend-code-assessment/scene/random-number",{"title":388,"_path":389},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":391,"_path":392},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":394,"_path":395},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":397,"_path":398},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":400,"_path":401},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":403,"_path":404,"children":405},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[406],{"title":407,"_path":408},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":410,"_path":411,"children":412},"项目","/pro",[413],{"title":414,"_path":415},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":417,"_path":418,"children":419},"后端语言","/backend-languages",[420],{"title":421,"_path":422,"children":423},"Python","/backend-languages/python",[424,427],{"title":425,"_path":426},"基础","/backend-languages/python/base",{"title":428,"_path":429},"函数","/backend-languages/python/function",{"_path":107,"_dir":431,"_draft":432,"_partial":432,"_locale":433,"title":106,"description":434,"url":435,"body":436,"_type":1040,"_id":1041,"_source":1042,"_file":1043,"_extension":1044},"leetcode",false,"","假设你正在爬楼梯。需要 n 阶你才能到达楼顶。","https://leetcode.cn/problems/climbing-stairs",{"type":437,"children":438,"toc":1034},"root",[439,446,451,456,523,528,591,596,606,612,617,623,1028],{"type":440,"tag":441,"props":442,"children":443},"element","p",{},[444],{"type":445,"value":434},"text",{"type":440,"tag":441,"props":447,"children":448},{},[449],{"type":445,"value":450},"每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？",{"type":440,"tag":441,"props":452,"children":453},{},[454],{"type":445,"value":455},"示例 1：",{"type":440,"tag":457,"props":458,"children":461},"pre",{"className":459,"code":460,"language":445,"meta":433,"style":433},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：n = 2\n输出：2\n解释：有两种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶\n2. 2 阶\n",[462],{"type":440,"tag":463,"props":464,"children":465},"code",{"__ignoreMap":433},[466,477,486,495,505,514],{"type":440,"tag":467,"props":468,"children":471},"span",{"class":469,"line":470},"line",1,[472],{"type":440,"tag":467,"props":473,"children":474},{},[475],{"type":445,"value":476},"输入：n = 2\n",{"type":440,"tag":467,"props":478,"children":480},{"class":469,"line":479},2,[481],{"type":440,"tag":467,"props":482,"children":483},{},[484],{"type":445,"value":485},"输出：2\n",{"type":440,"tag":467,"props":487,"children":489},{"class":469,"line":488},3,[490],{"type":440,"tag":467,"props":491,"children":492},{},[493],{"type":445,"value":494},"解释：有两种方法可以爬到楼顶。\n",{"type":440,"tag":467,"props":496,"children":498},{"class":469,"line":497},4,[499],{"type":440,"tag":467,"props":500,"children":502},{"emptyLinePlaceholder":501},true,[503],{"type":445,"value":504},"\n",{"type":440,"tag":467,"props":506,"children":508},{"class":469,"line":507},5,[509],{"type":440,"tag":467,"props":510,"children":511},{},[512],{"type":445,"value":513},"1. 1 阶 + 1 阶\n",{"type":440,"tag":467,"props":515,"children":517},{"class":469,"line":516},6,[518],{"type":440,"tag":467,"props":519,"children":520},{},[521],{"type":445,"value":522},"2. 2 阶\n",{"type":440,"tag":441,"props":524,"children":525},{},[526],{"type":445,"value":527},"示例 2：",{"type":440,"tag":457,"props":529,"children":531},{"className":459,"code":530,"language":445,"meta":433,"style":433},"输入：n = 3\n输出：3\n解释：有三种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶 + 1 阶\n2. 1 阶 + 2 阶\n3. 2 阶 + 1 阶\n",[532],{"type":440,"tag":463,"props":533,"children":534},{"__ignoreMap":433},[535,543,551,559,566,574,582],{"type":440,"tag":467,"props":536,"children":537},{"class":469,"line":470},[538],{"type":440,"tag":467,"props":539,"children":540},{},[541],{"type":445,"value":542},"输入：n = 3\n",{"type":440,"tag":467,"props":544,"children":545},{"class":469,"line":479},[546],{"type":440,"tag":467,"props":547,"children":548},{},[549],{"type":445,"value":550},"输出：3\n",{"type":440,"tag":467,"props":552,"children":553},{"class":469,"line":488},[554],{"type":440,"tag":467,"props":555,"children":556},{},[557],{"type":445,"value":558},"解释：有三种方法可以爬到楼顶。\n",{"type":440,"tag":467,"props":560,"children":561},{"class":469,"line":497},[562],{"type":440,"tag":467,"props":563,"children":564},{"emptyLinePlaceholder":501},[565],{"type":445,"value":504},{"type":440,"tag":467,"props":567,"children":568},{"class":469,"line":507},[569],{"type":440,"tag":467,"props":570,"children":571},{},[572],{"type":445,"value":573},"1. 1 阶 + 1 阶 + 1 阶\n",{"type":440,"tag":467,"props":575,"children":576},{"class":469,"line":516},[577],{"type":440,"tag":467,"props":578,"children":579},{},[580],{"type":445,"value":581},"2. 1 阶 + 2 阶\n",{"type":440,"tag":467,"props":583,"children":585},{"class":469,"line":584},7,[586],{"type":440,"tag":467,"props":587,"children":588},{},[589],{"type":445,"value":590},"3. 2 阶 + 1 阶\n",{"type":440,"tag":441,"props":592,"children":593},{},[594],{"type":445,"value":595},"提示：",{"type":440,"tag":597,"props":598,"children":599},"ul",{},[600],{"type":440,"tag":601,"props":602,"children":603},"li",{},[604],{"type":445,"value":605},"1 \u003C= n \u003C= 45",{"type":440,"tag":607,"props":608,"children":610},"h2",{"id":609},"解题思路",[611],{"type":445,"value":609},{"type":440,"tag":607,"props":613,"children":615},{"id":614},"实现",[616],{"type":445,"value":614},{"type":440,"tag":618,"props":619,"children":621},"h3",{"id":620},"动态规划",[622],{"type":445,"value":620},{"type":440,"tag":457,"props":624,"children":628},{"className":625,"code":626,"language":627,"meta":433,"style":433},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number} n\n * @return {number}\n */\nvar climbStairs = function (n) {\n  let dp = [];\n  dp[0] = dp[1] = 1;\n  for (let i = 2; i \u003C= n; i++) {\n    dp[i] = dp[i - 1] + dp[i - 2];\n  }\n  return dp[n];\n};\n","js",[629],{"type":440,"tag":463,"props":630,"children":631},{"__ignoreMap":433},[632,641,667,684,692,735,764,823,892,977,986,1015],{"type":440,"tag":467,"props":633,"children":634},{"class":469,"line":470},[635],{"type":440,"tag":467,"props":636,"children":638},{"style":637},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[639],{"type":445,"value":640},"/**\n",{"type":440,"tag":467,"props":642,"children":643},{"class":469,"line":479},[644,649,655,661],{"type":440,"tag":467,"props":645,"children":646},{"style":637},[647],{"type":445,"value":648}," * ",{"type":440,"tag":467,"props":650,"children":652},{"style":651},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[653],{"type":445,"value":654},"@param",{"type":440,"tag":467,"props":656,"children":658},{"style":657},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[659],{"type":445,"value":660}," {number}",{"type":440,"tag":467,"props":662,"children":664},{"style":663},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[665],{"type":445,"value":666}," n\n",{"type":440,"tag":467,"props":668,"children":669},{"class":469,"line":488},[670,674,679],{"type":440,"tag":467,"props":671,"children":672},{"style":637},[673],{"type":445,"value":648},{"type":440,"tag":467,"props":675,"children":676},{"style":651},[677],{"type":445,"value":678},"@return",{"type":440,"tag":467,"props":680,"children":681},{"style":657},[682],{"type":445,"value":683}," {number}\n",{"type":440,"tag":467,"props":685,"children":686},{"class":469,"line":497},[687],{"type":440,"tag":467,"props":688,"children":689},{"style":637},[690],{"type":445,"value":691}," */\n",{"type":440,"tag":467,"props":693,"children":694},{"class":469,"line":507},[695,701,707,713,718,724,730],{"type":440,"tag":467,"props":696,"children":698},{"style":697},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[699],{"type":445,"value":700},"var",{"type":440,"tag":467,"props":702,"children":704},{"style":703},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[705],{"type":445,"value":706}," climbStairs",{"type":440,"tag":467,"props":708,"children":710},{"style":709},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[711],{"type":445,"value":712}," =",{"type":440,"tag":467,"props":714,"children":715},{"style":697},[716],{"type":445,"value":717}," function",{"type":440,"tag":467,"props":719,"children":721},{"style":720},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[722],{"type":445,"value":723}," (",{"type":440,"tag":467,"props":725,"children":727},{"style":726},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[728],{"type":445,"value":729},"n",{"type":440,"tag":467,"props":731,"children":732},{"style":720},[733],{"type":445,"value":734},") {\n",{"type":440,"tag":467,"props":736,"children":737},{"class":469,"line":516},[738,743,749,753,758],{"type":440,"tag":467,"props":739,"children":740},{"style":697},[741],{"type":445,"value":742},"  let",{"type":440,"tag":467,"props":744,"children":746},{"style":745},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[747],{"type":445,"value":748}," dp",{"type":440,"tag":467,"props":750,"children":751},{"style":709},[752],{"type":445,"value":712},{"type":440,"tag":467,"props":754,"children":755},{"style":720},[756],{"type":445,"value":757}," []",{"type":440,"tag":467,"props":759,"children":761},{"style":760},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[762],{"type":445,"value":763},";\n",{"type":440,"tag":467,"props":765,"children":766},{"class":469,"line":584},[767,772,777,783,788,793,797,801,806,810,814,819],{"type":440,"tag":467,"props":768,"children":769},{"style":745},[770],{"type":445,"value":771},"  dp",{"type":440,"tag":467,"props":773,"children":774},{"style":720},[775],{"type":445,"value":776},"[",{"type":440,"tag":467,"props":778,"children":780},{"style":779},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[781],{"type":445,"value":782},"0",{"type":440,"tag":467,"props":784,"children":785},{"style":720},[786],{"type":445,"value":787},"] ",{"type":440,"tag":467,"props":789,"children":790},{"style":709},[791],{"type":445,"value":792},"=",{"type":440,"tag":467,"props":794,"children":795},{"style":745},[796],{"type":445,"value":748},{"type":440,"tag":467,"props":798,"children":799},{"style":720},[800],{"type":445,"value":776},{"type":440,"tag":467,"props":802,"children":803},{"style":779},[804],{"type":445,"value":805},"1",{"type":440,"tag":467,"props":807,"children":808},{"style":720},[809],{"type":445,"value":787},{"type":440,"tag":467,"props":811,"children":812},{"style":709},[813],{"type":445,"value":792},{"type":440,"tag":467,"props":815,"children":816},{"style":779},[817],{"type":445,"value":818}," 1",{"type":440,"tag":467,"props":820,"children":821},{"style":760},[822],{"type":445,"value":763},{"type":440,"tag":467,"props":824,"children":826},{"class":469,"line":825},8,[827,833,837,842,847,851,856,861,865,870,875,879,883,888],{"type":440,"tag":467,"props":828,"children":830},{"style":829},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[831],{"type":445,"value":832},"  for",{"type":440,"tag":467,"props":834,"children":835},{"style":720},[836],{"type":445,"value":723},{"type":440,"tag":467,"props":838,"children":839},{"style":697},[840],{"type":445,"value":841},"let",{"type":440,"tag":467,"props":843,"children":844},{"style":745},[845],{"type":445,"value":846}," i",{"type":440,"tag":467,"props":848,"children":849},{"style":709},[850],{"type":445,"value":712},{"type":440,"tag":467,"props":852,"children":853},{"style":779},[854],{"type":445,"value":855}," 2",{"type":440,"tag":467,"props":857,"children":858},{"style":760},[859],{"type":445,"value":860},";",{"type":440,"tag":467,"props":862,"children":863},{"style":745},[864],{"type":445,"value":846},{"type":440,"tag":467,"props":866,"children":867},{"style":709},[868],{"type":445,"value":869}," \u003C=",{"type":440,"tag":467,"props":871,"children":872},{"style":745},[873],{"type":445,"value":874}," n",{"type":440,"tag":467,"props":876,"children":877},{"style":760},[878],{"type":445,"value":860},{"type":440,"tag":467,"props":880,"children":881},{"style":745},[882],{"type":445,"value":846},{"type":440,"tag":467,"props":884,"children":885},{"style":709},[886],{"type":445,"value":887},"++",{"type":440,"tag":467,"props":889,"children":890},{"style":720},[891],{"type":445,"value":734},{"type":440,"tag":467,"props":893,"children":895},{"class":469,"line":894},9,[896,901,905,910,914,918,922,926,930,935,939,943,948,952,956,960,964,968,973],{"type":440,"tag":467,"props":897,"children":898},{"style":745},[899],{"type":445,"value":900},"    dp",{"type":440,"tag":467,"props":902,"children":903},{"style":720},[904],{"type":445,"value":776},{"type":440,"tag":467,"props":906,"children":907},{"style":745},[908],{"type":445,"value":909},"i",{"type":440,"tag":467,"props":911,"children":912},{"style":720},[913],{"type":445,"value":787},{"type":440,"tag":467,"props":915,"children":916},{"style":709},[917],{"type":445,"value":792},{"type":440,"tag":467,"props":919,"children":920},{"style":745},[921],{"type":445,"value":748},{"type":440,"tag":467,"props":923,"children":924},{"style":720},[925],{"type":445,"value":776},{"type":440,"tag":467,"props":927,"children":928},{"style":745},[929],{"type":445,"value":909},{"type":440,"tag":467,"props":931,"children":932},{"style":709},[933],{"type":445,"value":934}," -",{"type":440,"tag":467,"props":936,"children":937},{"style":779},[938],{"type":445,"value":818},{"type":440,"tag":467,"props":940,"children":941},{"style":720},[942],{"type":445,"value":787},{"type":440,"tag":467,"props":944,"children":945},{"style":709},[946],{"type":445,"value":947},"+",{"type":440,"tag":467,"props":949,"children":950},{"style":745},[951],{"type":445,"value":748},{"type":440,"tag":467,"props":953,"children":954},{"style":720},[955],{"type":445,"value":776},{"type":440,"tag":467,"props":957,"children":958},{"style":745},[959],{"type":445,"value":909},{"type":440,"tag":467,"props":961,"children":962},{"style":709},[963],{"type":445,"value":934},{"type":440,"tag":467,"props":965,"children":966},{"style":779},[967],{"type":445,"value":855},{"type":440,"tag":467,"props":969,"children":970},{"style":720},[971],{"type":445,"value":972},"]",{"type":440,"tag":467,"props":974,"children":975},{"style":760},[976],{"type":445,"value":763},{"type":440,"tag":467,"props":978,"children":980},{"class":469,"line":979},10,[981],{"type":440,"tag":467,"props":982,"children":983},{"style":720},[984],{"type":445,"value":985},"  }\n",{"type":440,"tag":467,"props":987,"children":989},{"class":469,"line":988},11,[990,995,999,1003,1007,1011],{"type":440,"tag":467,"props":991,"children":992},{"style":829},[993],{"type":445,"value":994},"  return",{"type":440,"tag":467,"props":996,"children":997},{"style":745},[998],{"type":445,"value":748},{"type":440,"tag":467,"props":1000,"children":1001},{"style":720},[1002],{"type":445,"value":776},{"type":440,"tag":467,"props":1004,"children":1005},{"style":745},[1006],{"type":445,"value":729},{"type":440,"tag":467,"props":1008,"children":1009},{"style":720},[1010],{"type":445,"value":972},{"type":440,"tag":467,"props":1012,"children":1013},{"style":760},[1014],{"type":445,"value":763},{"type":440,"tag":467,"props":1016,"children":1018},{"class":469,"line":1017},12,[1019,1024],{"type":440,"tag":467,"props":1020,"children":1021},{"style":720},[1022],{"type":445,"value":1023},"}",{"type":440,"tag":467,"props":1025,"children":1026},{"style":760},[1027],{"type":445,"value":763},{"type":440,"tag":1029,"props":1030,"children":1031},"style",{},[1032],{"type":445,"value":1033},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":433,"searchDepth":507,"depth":507,"links":1035},[1036,1037],{"id":609,"depth":479,"text":609},{"id":614,"depth":479,"text":614,"children":1038},[1039],{"id":620,"depth":488,"text":620},"markdown","content:1.algorithm:3.leetcode:70.climbing-stairs.md","content","1.algorithm/3.leetcode/70.climbing-stairs.md","md",[1046,1048],{"_path":104,"title":103,"description":1047},"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。",{"_path":110,"title":109,"description":1049},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",1713426810477]