[{"data":1,"prerenderedAt":1047},["Reactive",2],{"navigation":3,"/algorithm/leetcode/climbing-stairs":427,"/algorithm/leetcode/climbing-stairs-surround":1042},[4,237,265,406,413],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,399],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":382,"_path":383},"随机数","/frontend-code-assessment/scene/random-number",{"title":385,"_path":386},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":388,"_path":389},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":391,"_path":392},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":394,"_path":395},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":397,"_path":398},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":400,"_path":401,"children":402},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[403],{"title":404,"_path":405},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":407,"_path":408,"children":409},"项目","/pro",[410],{"title":411,"_path":412},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":414,"_path":415,"children":416},"后端语言","/backend-languages",[417],{"title":418,"_path":419,"children":420},"Python","/backend-languages/python",[421,424],{"title":422,"_path":423},"基础","/backend-languages/python/base",{"title":425,"_path":426},"函数","/backend-languages/python/function",{"_path":107,"_dir":428,"_draft":429,"_partial":429,"_locale":430,"title":106,"description":431,"url":432,"body":433,"_type":1037,"_id":1038,"_source":1039,"_file":1040,"_extension":1041},"leetcode",false,"","假设你正在爬楼梯。需要 n 阶你才能到达楼顶。","https://leetcode.cn/problems/climbing-stairs",{"type":434,"children":435,"toc":1031},"root",[436,443,448,453,520,525,588,593,603,609,614,620,1025],{"type":437,"tag":438,"props":439,"children":440},"element","p",{},[441],{"type":442,"value":431},"text",{"type":437,"tag":438,"props":444,"children":445},{},[446],{"type":442,"value":447},"每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？",{"type":437,"tag":438,"props":449,"children":450},{},[451],{"type":442,"value":452},"示例 1：",{"type":437,"tag":454,"props":455,"children":458},"pre",{"className":456,"code":457,"language":442,"meta":430,"style":430},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：n = 2\n输出：2\n解释：有两种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶\n2. 2 阶\n",[459],{"type":437,"tag":460,"props":461,"children":462},"code",{"__ignoreMap":430},[463,474,483,492,502,511],{"type":437,"tag":464,"props":465,"children":468},"span",{"class":466,"line":467},"line",1,[469],{"type":437,"tag":464,"props":470,"children":471},{},[472],{"type":442,"value":473},"输入：n = 2\n",{"type":437,"tag":464,"props":475,"children":477},{"class":466,"line":476},2,[478],{"type":437,"tag":464,"props":479,"children":480},{},[481],{"type":442,"value":482},"输出：2\n",{"type":437,"tag":464,"props":484,"children":486},{"class":466,"line":485},3,[487],{"type":437,"tag":464,"props":488,"children":489},{},[490],{"type":442,"value":491},"解释：有两种方法可以爬到楼顶。\n",{"type":437,"tag":464,"props":493,"children":495},{"class":466,"line":494},4,[496],{"type":437,"tag":464,"props":497,"children":499},{"emptyLinePlaceholder":498},true,[500],{"type":442,"value":501},"\n",{"type":437,"tag":464,"props":503,"children":505},{"class":466,"line":504},5,[506],{"type":437,"tag":464,"props":507,"children":508},{},[509],{"type":442,"value":510},"1. 1 阶 + 1 阶\n",{"type":437,"tag":464,"props":512,"children":514},{"class":466,"line":513},6,[515],{"type":437,"tag":464,"props":516,"children":517},{},[518],{"type":442,"value":519},"2. 2 阶\n",{"type":437,"tag":438,"props":521,"children":522},{},[523],{"type":442,"value":524},"示例 2：",{"type":437,"tag":454,"props":526,"children":528},{"className":456,"code":527,"language":442,"meta":430,"style":430},"输入：n = 3\n输出：3\n解释：有三种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶 + 1 阶\n2. 1 阶 + 2 阶\n3. 2 阶 + 1 阶\n",[529],{"type":437,"tag":460,"props":530,"children":531},{"__ignoreMap":430},[532,540,548,556,563,571,579],{"type":437,"tag":464,"props":533,"children":534},{"class":466,"line":467},[535],{"type":437,"tag":464,"props":536,"children":537},{},[538],{"type":442,"value":539},"输入：n = 3\n",{"type":437,"tag":464,"props":541,"children":542},{"class":466,"line":476},[543],{"type":437,"tag":464,"props":544,"children":545},{},[546],{"type":442,"value":547},"输出：3\n",{"type":437,"tag":464,"props":549,"children":550},{"class":466,"line":485},[551],{"type":437,"tag":464,"props":552,"children":553},{},[554],{"type":442,"value":555},"解释：有三种方法可以爬到楼顶。\n",{"type":437,"tag":464,"props":557,"children":558},{"class":466,"line":494},[559],{"type":437,"tag":464,"props":560,"children":561},{"emptyLinePlaceholder":498},[562],{"type":442,"value":501},{"type":437,"tag":464,"props":564,"children":565},{"class":466,"line":504},[566],{"type":437,"tag":464,"props":567,"children":568},{},[569],{"type":442,"value":570},"1. 1 阶 + 1 阶 + 1 阶\n",{"type":437,"tag":464,"props":572,"children":573},{"class":466,"line":513},[574],{"type":437,"tag":464,"props":575,"children":576},{},[577],{"type":442,"value":578},"2. 1 阶 + 2 阶\n",{"type":437,"tag":464,"props":580,"children":582},{"class":466,"line":581},7,[583],{"type":437,"tag":464,"props":584,"children":585},{},[586],{"type":442,"value":587},"3. 2 阶 + 1 阶\n",{"type":437,"tag":438,"props":589,"children":590},{},[591],{"type":442,"value":592},"提示：",{"type":437,"tag":594,"props":595,"children":596},"ul",{},[597],{"type":437,"tag":598,"props":599,"children":600},"li",{},[601],{"type":442,"value":602},"1 \u003C= n \u003C= 45",{"type":437,"tag":604,"props":605,"children":607},"h2",{"id":606},"解题思路",[608],{"type":442,"value":606},{"type":437,"tag":604,"props":610,"children":612},{"id":611},"实现",[613],{"type":442,"value":611},{"type":437,"tag":615,"props":616,"children":618},"h3",{"id":617},"动态规划",[619],{"type":442,"value":617},{"type":437,"tag":454,"props":621,"children":625},{"className":622,"code":623,"language":624,"meta":430,"style":430},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number} n\n * @return {number}\n */\nvar climbStairs = function (n) {\n  let dp = [];\n  dp[0] = dp[1] = 1;\n  for (let i = 2; i \u003C= n; i++) {\n    dp[i] = dp[i - 1] + dp[i - 2];\n  }\n  return dp[n];\n};\n","js",[626],{"type":437,"tag":460,"props":627,"children":628},{"__ignoreMap":430},[629,638,664,681,689,732,761,820,889,974,983,1012],{"type":437,"tag":464,"props":630,"children":631},{"class":466,"line":467},[632],{"type":437,"tag":464,"props":633,"children":635},{"style":634},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[636],{"type":442,"value":637},"/**\n",{"type":437,"tag":464,"props":639,"children":640},{"class":466,"line":476},[641,646,652,658],{"type":437,"tag":464,"props":642,"children":643},{"style":634},[644],{"type":442,"value":645}," * ",{"type":437,"tag":464,"props":647,"children":649},{"style":648},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[650],{"type":442,"value":651},"@param",{"type":437,"tag":464,"props":653,"children":655},{"style":654},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[656],{"type":442,"value":657}," {number}",{"type":437,"tag":464,"props":659,"children":661},{"style":660},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[662],{"type":442,"value":663}," n\n",{"type":437,"tag":464,"props":665,"children":666},{"class":466,"line":485},[667,671,676],{"type":437,"tag":464,"props":668,"children":669},{"style":634},[670],{"type":442,"value":645},{"type":437,"tag":464,"props":672,"children":673},{"style":648},[674],{"type":442,"value":675},"@return",{"type":437,"tag":464,"props":677,"children":678},{"style":654},[679],{"type":442,"value":680}," {number}\n",{"type":437,"tag":464,"props":682,"children":683},{"class":466,"line":494},[684],{"type":437,"tag":464,"props":685,"children":686},{"style":634},[687],{"type":442,"value":688}," */\n",{"type":437,"tag":464,"props":690,"children":691},{"class":466,"line":504},[692,698,704,710,715,721,727],{"type":437,"tag":464,"props":693,"children":695},{"style":694},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[696],{"type":442,"value":697},"var",{"type":437,"tag":464,"props":699,"children":701},{"style":700},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[702],{"type":442,"value":703}," climbStairs",{"type":437,"tag":464,"props":705,"children":707},{"style":706},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[708],{"type":442,"value":709}," =",{"type":437,"tag":464,"props":711,"children":712},{"style":694},[713],{"type":442,"value":714}," function",{"type":437,"tag":464,"props":716,"children":718},{"style":717},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[719],{"type":442,"value":720}," (",{"type":437,"tag":464,"props":722,"children":724},{"style":723},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[725],{"type":442,"value":726},"n",{"type":437,"tag":464,"props":728,"children":729},{"style":717},[730],{"type":442,"value":731},") {\n",{"type":437,"tag":464,"props":733,"children":734},{"class":466,"line":513},[735,740,746,750,755],{"type":437,"tag":464,"props":736,"children":737},{"style":694},[738],{"type":442,"value":739},"  let",{"type":437,"tag":464,"props":741,"children":743},{"style":742},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[744],{"type":442,"value":745}," dp",{"type":437,"tag":464,"props":747,"children":748},{"style":706},[749],{"type":442,"value":709},{"type":437,"tag":464,"props":751,"children":752},{"style":717},[753],{"type":442,"value":754}," []",{"type":437,"tag":464,"props":756,"children":758},{"style":757},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[759],{"type":442,"value":760},";\n",{"type":437,"tag":464,"props":762,"children":763},{"class":466,"line":581},[764,769,774,780,785,790,794,798,803,807,811,816],{"type":437,"tag":464,"props":765,"children":766},{"style":742},[767],{"type":442,"value":768},"  dp",{"type":437,"tag":464,"props":770,"children":771},{"style":717},[772],{"type":442,"value":773},"[",{"type":437,"tag":464,"props":775,"children":777},{"style":776},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[778],{"type":442,"value":779},"0",{"type":437,"tag":464,"props":781,"children":782},{"style":717},[783],{"type":442,"value":784},"] ",{"type":437,"tag":464,"props":786,"children":787},{"style":706},[788],{"type":442,"value":789},"=",{"type":437,"tag":464,"props":791,"children":792},{"style":742},[793],{"type":442,"value":745},{"type":437,"tag":464,"props":795,"children":796},{"style":717},[797],{"type":442,"value":773},{"type":437,"tag":464,"props":799,"children":800},{"style":776},[801],{"type":442,"value":802},"1",{"type":437,"tag":464,"props":804,"children":805},{"style":717},[806],{"type":442,"value":784},{"type":437,"tag":464,"props":808,"children":809},{"style":706},[810],{"type":442,"value":789},{"type":437,"tag":464,"props":812,"children":813},{"style":776},[814],{"type":442,"value":815}," 1",{"type":437,"tag":464,"props":817,"children":818},{"style":757},[819],{"type":442,"value":760},{"type":437,"tag":464,"props":821,"children":823},{"class":466,"line":822},8,[824,830,834,839,844,848,853,858,862,867,872,876,880,885],{"type":437,"tag":464,"props":825,"children":827},{"style":826},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[828],{"type":442,"value":829},"  for",{"type":437,"tag":464,"props":831,"children":832},{"style":717},[833],{"type":442,"value":720},{"type":437,"tag":464,"props":835,"children":836},{"style":694},[837],{"type":442,"value":838},"let",{"type":437,"tag":464,"props":840,"children":841},{"style":742},[842],{"type":442,"value":843}," i",{"type":437,"tag":464,"props":845,"children":846},{"style":706},[847],{"type":442,"value":709},{"type":437,"tag":464,"props":849,"children":850},{"style":776},[851],{"type":442,"value":852}," 2",{"type":437,"tag":464,"props":854,"children":855},{"style":757},[856],{"type":442,"value":857},";",{"type":437,"tag":464,"props":859,"children":860},{"style":742},[861],{"type":442,"value":843},{"type":437,"tag":464,"props":863,"children":864},{"style":706},[865],{"type":442,"value":866}," \u003C=",{"type":437,"tag":464,"props":868,"children":869},{"style":742},[870],{"type":442,"value":871}," n",{"type":437,"tag":464,"props":873,"children":874},{"style":757},[875],{"type":442,"value":857},{"type":437,"tag":464,"props":877,"children":878},{"style":742},[879],{"type":442,"value":843},{"type":437,"tag":464,"props":881,"children":882},{"style":706},[883],{"type":442,"value":884},"++",{"type":437,"tag":464,"props":886,"children":887},{"style":717},[888],{"type":442,"value":731},{"type":437,"tag":464,"props":890,"children":892},{"class":466,"line":891},9,[893,898,902,907,911,915,919,923,927,932,936,940,945,949,953,957,961,965,970],{"type":437,"tag":464,"props":894,"children":895},{"style":742},[896],{"type":442,"value":897},"    dp",{"type":437,"tag":464,"props":899,"children":900},{"style":717},[901],{"type":442,"value":773},{"type":437,"tag":464,"props":903,"children":904},{"style":742},[905],{"type":442,"value":906},"i",{"type":437,"tag":464,"props":908,"children":909},{"style":717},[910],{"type":442,"value":784},{"type":437,"tag":464,"props":912,"children":913},{"style":706},[914],{"type":442,"value":789},{"type":437,"tag":464,"props":916,"children":917},{"style":742},[918],{"type":442,"value":745},{"type":437,"tag":464,"props":920,"children":921},{"style":717},[922],{"type":442,"value":773},{"type":437,"tag":464,"props":924,"children":925},{"style":742},[926],{"type":442,"value":906},{"type":437,"tag":464,"props":928,"children":929},{"style":706},[930],{"type":442,"value":931}," -",{"type":437,"tag":464,"props":933,"children":934},{"style":776},[935],{"type":442,"value":815},{"type":437,"tag":464,"props":937,"children":938},{"style":717},[939],{"type":442,"value":784},{"type":437,"tag":464,"props":941,"children":942},{"style":706},[943],{"type":442,"value":944},"+",{"type":437,"tag":464,"props":946,"children":947},{"style":742},[948],{"type":442,"value":745},{"type":437,"tag":464,"props":950,"children":951},{"style":717},[952],{"type":442,"value":773},{"type":437,"tag":464,"props":954,"children":955},{"style":742},[956],{"type":442,"value":906},{"type":437,"tag":464,"props":958,"children":959},{"style":706},[960],{"type":442,"value":931},{"type":437,"tag":464,"props":962,"children":963},{"style":776},[964],{"type":442,"value":852},{"type":437,"tag":464,"props":966,"children":967},{"style":717},[968],{"type":442,"value":969},"]",{"type":437,"tag":464,"props":971,"children":972},{"style":757},[973],{"type":442,"value":760},{"type":437,"tag":464,"props":975,"children":977},{"class":466,"line":976},10,[978],{"type":437,"tag":464,"props":979,"children":980},{"style":717},[981],{"type":442,"value":982},"  }\n",{"type":437,"tag":464,"props":984,"children":986},{"class":466,"line":985},11,[987,992,996,1000,1004,1008],{"type":437,"tag":464,"props":988,"children":989},{"style":826},[990],{"type":442,"value":991},"  return",{"type":437,"tag":464,"props":993,"children":994},{"style":742},[995],{"type":442,"value":745},{"type":437,"tag":464,"props":997,"children":998},{"style":717},[999],{"type":442,"value":773},{"type":437,"tag":464,"props":1001,"children":1002},{"style":742},[1003],{"type":442,"value":726},{"type":437,"tag":464,"props":1005,"children":1006},{"style":717},[1007],{"type":442,"value":969},{"type":437,"tag":464,"props":1009,"children":1010},{"style":757},[1011],{"type":442,"value":760},{"type":437,"tag":464,"props":1013,"children":1015},{"class":466,"line":1014},12,[1016,1021],{"type":437,"tag":464,"props":1017,"children":1018},{"style":717},[1019],{"type":442,"value":1020},"}",{"type":437,"tag":464,"props":1022,"children":1023},{"style":757},[1024],{"type":442,"value":760},{"type":437,"tag":1026,"props":1027,"children":1028},"style",{},[1029],{"type":442,"value":1030},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":430,"searchDepth":504,"depth":504,"links":1032},[1033,1034],{"id":606,"depth":476,"text":606},{"id":611,"depth":476,"text":611,"children":1035},[1036],{"id":617,"depth":485,"text":617},"markdown","content:1.algorithm:3.leetcode:70.climbing-stairs.md","content","1.algorithm/3.leetcode/70.climbing-stairs.md","md",[1043,1045],{"_path":104,"title":103,"description":1044},"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。",{"_path":110,"title":109,"description":1046},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",1713426448933]