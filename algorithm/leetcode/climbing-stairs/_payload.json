[{"data":1,"prerenderedAt":1025},["Reactive",2],{"navigation":3,"/algorithm/leetcode/climbing-stairs":405,"/algorithm/leetcode/climbing-stairs-surround":1020},[4,237,265,384,391],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR 169. 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR 187. 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数相加","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,377],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,347,350,353,356,359,362,365,368,371,374],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":348,"_path":349},"倒计时","/frontend-code-assessment/scene/countdown",{"title":351,"_path":352},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":354,"_path":355},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":357,"_path":358},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":360,"_path":361},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":363,"_path":364},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":366,"_path":367},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":369,"_path":370},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":372,"_path":373},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":375,"_path":376},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":378,"_path":379,"children":380},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[381],{"title":382,"_path":383},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":385,"_path":386,"children":387},"项目","/pro",[388],{"title":389,"_path":390},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":392,"_path":393,"children":394},"后端语言","/backend-languages",[395],{"title":396,"_path":397,"children":398},"Python","/backend-languages/python",[399,402],{"title":400,"_path":401},"基础","/backend-languages/python/base",{"title":403,"_path":404},"函数","/backend-languages/python/function",{"_path":107,"_dir":406,"_draft":407,"_partial":407,"_locale":408,"title":106,"description":409,"url":410,"body":411,"_type":1015,"_id":1016,"_source":1017,"_file":1018,"_extension":1019},"leetcode",false,"","假设你正在爬楼梯。需要 n 阶你才能到达楼顶。","https://leetcode.cn/problems/climbing-stairs",{"type":412,"children":413,"toc":1009},"root",[414,421,426,431,498,503,566,571,581,587,592,598,1003],{"type":415,"tag":416,"props":417,"children":418},"element","p",{},[419],{"type":420,"value":409},"text",{"type":415,"tag":416,"props":422,"children":423},{},[424],{"type":420,"value":425},"每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？",{"type":415,"tag":416,"props":427,"children":428},{},[429],{"type":420,"value":430},"示例 1：",{"type":415,"tag":432,"props":433,"children":436},"pre",{"className":434,"code":435,"language":420,"meta":408,"style":408},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：n = 2\n输出：2\n解释：有两种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶\n2. 2 阶\n",[437],{"type":415,"tag":438,"props":439,"children":440},"code",{"__ignoreMap":408},[441,452,461,470,480,489],{"type":415,"tag":442,"props":443,"children":446},"span",{"class":444,"line":445},"line",1,[447],{"type":415,"tag":442,"props":448,"children":449},{},[450],{"type":420,"value":451},"输入：n = 2\n",{"type":415,"tag":442,"props":453,"children":455},{"class":444,"line":454},2,[456],{"type":415,"tag":442,"props":457,"children":458},{},[459],{"type":420,"value":460},"输出：2\n",{"type":415,"tag":442,"props":462,"children":464},{"class":444,"line":463},3,[465],{"type":415,"tag":442,"props":466,"children":467},{},[468],{"type":420,"value":469},"解释：有两种方法可以爬到楼顶。\n",{"type":415,"tag":442,"props":471,"children":473},{"class":444,"line":472},4,[474],{"type":415,"tag":442,"props":475,"children":477},{"emptyLinePlaceholder":476},true,[478],{"type":420,"value":479},"\n",{"type":415,"tag":442,"props":481,"children":483},{"class":444,"line":482},5,[484],{"type":415,"tag":442,"props":485,"children":486},{},[487],{"type":420,"value":488},"1. 1 阶 + 1 阶\n",{"type":415,"tag":442,"props":490,"children":492},{"class":444,"line":491},6,[493],{"type":415,"tag":442,"props":494,"children":495},{},[496],{"type":420,"value":497},"2. 2 阶\n",{"type":415,"tag":416,"props":499,"children":500},{},[501],{"type":420,"value":502},"示例 2：",{"type":415,"tag":432,"props":504,"children":506},{"className":434,"code":505,"language":420,"meta":408,"style":408},"输入：n = 3\n输出：3\n解释：有三种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶 + 1 阶\n2. 1 阶 + 2 阶\n3. 2 阶 + 1 阶\n",[507],{"type":415,"tag":438,"props":508,"children":509},{"__ignoreMap":408},[510,518,526,534,541,549,557],{"type":415,"tag":442,"props":511,"children":512},{"class":444,"line":445},[513],{"type":415,"tag":442,"props":514,"children":515},{},[516],{"type":420,"value":517},"输入：n = 3\n",{"type":415,"tag":442,"props":519,"children":520},{"class":444,"line":454},[521],{"type":415,"tag":442,"props":522,"children":523},{},[524],{"type":420,"value":525},"输出：3\n",{"type":415,"tag":442,"props":527,"children":528},{"class":444,"line":463},[529],{"type":415,"tag":442,"props":530,"children":531},{},[532],{"type":420,"value":533},"解释：有三种方法可以爬到楼顶。\n",{"type":415,"tag":442,"props":535,"children":536},{"class":444,"line":472},[537],{"type":415,"tag":442,"props":538,"children":539},{"emptyLinePlaceholder":476},[540],{"type":420,"value":479},{"type":415,"tag":442,"props":542,"children":543},{"class":444,"line":482},[544],{"type":415,"tag":442,"props":545,"children":546},{},[547],{"type":420,"value":548},"1. 1 阶 + 1 阶 + 1 阶\n",{"type":415,"tag":442,"props":550,"children":551},{"class":444,"line":491},[552],{"type":415,"tag":442,"props":553,"children":554},{},[555],{"type":420,"value":556},"2. 1 阶 + 2 阶\n",{"type":415,"tag":442,"props":558,"children":560},{"class":444,"line":559},7,[561],{"type":415,"tag":442,"props":562,"children":563},{},[564],{"type":420,"value":565},"3. 2 阶 + 1 阶\n",{"type":415,"tag":416,"props":567,"children":568},{},[569],{"type":420,"value":570},"提示：",{"type":415,"tag":572,"props":573,"children":574},"ul",{},[575],{"type":415,"tag":576,"props":577,"children":578},"li",{},[579],{"type":420,"value":580},"1 \u003C= n \u003C= 45",{"type":415,"tag":582,"props":583,"children":585},"h2",{"id":584},"解题思路",[586],{"type":420,"value":584},{"type":415,"tag":582,"props":588,"children":590},{"id":589},"实现",[591],{"type":420,"value":589},{"type":415,"tag":593,"props":594,"children":596},"h3",{"id":595},"动态规划",[597],{"type":420,"value":595},{"type":415,"tag":432,"props":599,"children":603},{"className":600,"code":601,"language":602,"meta":408,"style":408},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number} n\n * @return {number}\n */\nvar climbStairs = function (n) {\n  let dp = [];\n  dp[0] = dp[1] = 1;\n  for (let i = 2; i \u003C= n; i++) {\n    dp[i] = dp[i - 1] + dp[i - 2];\n  }\n  return dp[n];\n};\n","js",[604],{"type":415,"tag":438,"props":605,"children":606},{"__ignoreMap":408},[607,616,642,659,667,710,739,798,867,952,961,990],{"type":415,"tag":442,"props":608,"children":609},{"class":444,"line":445},[610],{"type":415,"tag":442,"props":611,"children":613},{"style":612},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[614],{"type":420,"value":615},"/**\n",{"type":415,"tag":442,"props":617,"children":618},{"class":444,"line":454},[619,624,630,636],{"type":415,"tag":442,"props":620,"children":621},{"style":612},[622],{"type":420,"value":623}," * ",{"type":415,"tag":442,"props":625,"children":627},{"style":626},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[628],{"type":420,"value":629},"@param",{"type":415,"tag":442,"props":631,"children":633},{"style":632},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[634],{"type":420,"value":635}," {number}",{"type":415,"tag":442,"props":637,"children":639},{"style":638},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[640],{"type":420,"value":641}," n\n",{"type":415,"tag":442,"props":643,"children":644},{"class":444,"line":463},[645,649,654],{"type":415,"tag":442,"props":646,"children":647},{"style":612},[648],{"type":420,"value":623},{"type":415,"tag":442,"props":650,"children":651},{"style":626},[652],{"type":420,"value":653},"@return",{"type":415,"tag":442,"props":655,"children":656},{"style":632},[657],{"type":420,"value":658}," {number}\n",{"type":415,"tag":442,"props":660,"children":661},{"class":444,"line":472},[662],{"type":415,"tag":442,"props":663,"children":664},{"style":612},[665],{"type":420,"value":666}," */\n",{"type":415,"tag":442,"props":668,"children":669},{"class":444,"line":482},[670,676,682,688,693,699,705],{"type":415,"tag":442,"props":671,"children":673},{"style":672},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[674],{"type":420,"value":675},"var",{"type":415,"tag":442,"props":677,"children":679},{"style":678},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[680],{"type":420,"value":681}," climbStairs",{"type":415,"tag":442,"props":683,"children":685},{"style":684},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[686],{"type":420,"value":687}," =",{"type":415,"tag":442,"props":689,"children":690},{"style":672},[691],{"type":420,"value":692}," function",{"type":415,"tag":442,"props":694,"children":696},{"style":695},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[697],{"type":420,"value":698}," (",{"type":415,"tag":442,"props":700,"children":702},{"style":701},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[703],{"type":420,"value":704},"n",{"type":415,"tag":442,"props":706,"children":707},{"style":695},[708],{"type":420,"value":709},") {\n",{"type":415,"tag":442,"props":711,"children":712},{"class":444,"line":491},[713,718,724,728,733],{"type":415,"tag":442,"props":714,"children":715},{"style":672},[716],{"type":420,"value":717},"  let",{"type":415,"tag":442,"props":719,"children":721},{"style":720},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[722],{"type":420,"value":723}," dp",{"type":415,"tag":442,"props":725,"children":726},{"style":684},[727],{"type":420,"value":687},{"type":415,"tag":442,"props":729,"children":730},{"style":695},[731],{"type":420,"value":732}," []",{"type":415,"tag":442,"props":734,"children":736},{"style":735},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[737],{"type":420,"value":738},";\n",{"type":415,"tag":442,"props":740,"children":741},{"class":444,"line":559},[742,747,752,758,763,768,772,776,781,785,789,794],{"type":415,"tag":442,"props":743,"children":744},{"style":720},[745],{"type":420,"value":746},"  dp",{"type":415,"tag":442,"props":748,"children":749},{"style":695},[750],{"type":420,"value":751},"[",{"type":415,"tag":442,"props":753,"children":755},{"style":754},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[756],{"type":420,"value":757},"0",{"type":415,"tag":442,"props":759,"children":760},{"style":695},[761],{"type":420,"value":762},"] ",{"type":415,"tag":442,"props":764,"children":765},{"style":684},[766],{"type":420,"value":767},"=",{"type":415,"tag":442,"props":769,"children":770},{"style":720},[771],{"type":420,"value":723},{"type":415,"tag":442,"props":773,"children":774},{"style":695},[775],{"type":420,"value":751},{"type":415,"tag":442,"props":777,"children":778},{"style":754},[779],{"type":420,"value":780},"1",{"type":415,"tag":442,"props":782,"children":783},{"style":695},[784],{"type":420,"value":762},{"type":415,"tag":442,"props":786,"children":787},{"style":684},[788],{"type":420,"value":767},{"type":415,"tag":442,"props":790,"children":791},{"style":754},[792],{"type":420,"value":793}," 1",{"type":415,"tag":442,"props":795,"children":796},{"style":735},[797],{"type":420,"value":738},{"type":415,"tag":442,"props":799,"children":801},{"class":444,"line":800},8,[802,808,812,817,822,826,831,836,840,845,850,854,858,863],{"type":415,"tag":442,"props":803,"children":805},{"style":804},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[806],{"type":420,"value":807},"  for",{"type":415,"tag":442,"props":809,"children":810},{"style":695},[811],{"type":420,"value":698},{"type":415,"tag":442,"props":813,"children":814},{"style":672},[815],{"type":420,"value":816},"let",{"type":415,"tag":442,"props":818,"children":819},{"style":720},[820],{"type":420,"value":821}," i",{"type":415,"tag":442,"props":823,"children":824},{"style":684},[825],{"type":420,"value":687},{"type":415,"tag":442,"props":827,"children":828},{"style":754},[829],{"type":420,"value":830}," 2",{"type":415,"tag":442,"props":832,"children":833},{"style":735},[834],{"type":420,"value":835},";",{"type":415,"tag":442,"props":837,"children":838},{"style":720},[839],{"type":420,"value":821},{"type":415,"tag":442,"props":841,"children":842},{"style":684},[843],{"type":420,"value":844}," \u003C=",{"type":415,"tag":442,"props":846,"children":847},{"style":720},[848],{"type":420,"value":849}," n",{"type":415,"tag":442,"props":851,"children":852},{"style":735},[853],{"type":420,"value":835},{"type":415,"tag":442,"props":855,"children":856},{"style":720},[857],{"type":420,"value":821},{"type":415,"tag":442,"props":859,"children":860},{"style":684},[861],{"type":420,"value":862},"++",{"type":415,"tag":442,"props":864,"children":865},{"style":695},[866],{"type":420,"value":709},{"type":415,"tag":442,"props":868,"children":870},{"class":444,"line":869},9,[871,876,880,885,889,893,897,901,905,910,914,918,923,927,931,935,939,943,948],{"type":415,"tag":442,"props":872,"children":873},{"style":720},[874],{"type":420,"value":875},"    dp",{"type":415,"tag":442,"props":877,"children":878},{"style":695},[879],{"type":420,"value":751},{"type":415,"tag":442,"props":881,"children":882},{"style":720},[883],{"type":420,"value":884},"i",{"type":415,"tag":442,"props":886,"children":887},{"style":695},[888],{"type":420,"value":762},{"type":415,"tag":442,"props":890,"children":891},{"style":684},[892],{"type":420,"value":767},{"type":415,"tag":442,"props":894,"children":895},{"style":720},[896],{"type":420,"value":723},{"type":415,"tag":442,"props":898,"children":899},{"style":695},[900],{"type":420,"value":751},{"type":415,"tag":442,"props":902,"children":903},{"style":720},[904],{"type":420,"value":884},{"type":415,"tag":442,"props":906,"children":907},{"style":684},[908],{"type":420,"value":909}," -",{"type":415,"tag":442,"props":911,"children":912},{"style":754},[913],{"type":420,"value":793},{"type":415,"tag":442,"props":915,"children":916},{"style":695},[917],{"type":420,"value":762},{"type":415,"tag":442,"props":919,"children":920},{"style":684},[921],{"type":420,"value":922},"+",{"type":415,"tag":442,"props":924,"children":925},{"style":720},[926],{"type":420,"value":723},{"type":415,"tag":442,"props":928,"children":929},{"style":695},[930],{"type":420,"value":751},{"type":415,"tag":442,"props":932,"children":933},{"style":720},[934],{"type":420,"value":884},{"type":415,"tag":442,"props":936,"children":937},{"style":684},[938],{"type":420,"value":909},{"type":415,"tag":442,"props":940,"children":941},{"style":754},[942],{"type":420,"value":830},{"type":415,"tag":442,"props":944,"children":945},{"style":695},[946],{"type":420,"value":947},"]",{"type":415,"tag":442,"props":949,"children":950},{"style":735},[951],{"type":420,"value":738},{"type":415,"tag":442,"props":953,"children":955},{"class":444,"line":954},10,[956],{"type":415,"tag":442,"props":957,"children":958},{"style":695},[959],{"type":420,"value":960},"  }\n",{"type":415,"tag":442,"props":962,"children":964},{"class":444,"line":963},11,[965,970,974,978,982,986],{"type":415,"tag":442,"props":966,"children":967},{"style":804},[968],{"type":420,"value":969},"  return",{"type":415,"tag":442,"props":971,"children":972},{"style":720},[973],{"type":420,"value":723},{"type":415,"tag":442,"props":975,"children":976},{"style":695},[977],{"type":420,"value":751},{"type":415,"tag":442,"props":979,"children":980},{"style":720},[981],{"type":420,"value":704},{"type":415,"tag":442,"props":983,"children":984},{"style":695},[985],{"type":420,"value":947},{"type":415,"tag":442,"props":987,"children":988},{"style":735},[989],{"type":420,"value":738},{"type":415,"tag":442,"props":991,"children":993},{"class":444,"line":992},12,[994,999],{"type":415,"tag":442,"props":995,"children":996},{"style":695},[997],{"type":420,"value":998},"}",{"type":415,"tag":442,"props":1000,"children":1001},{"style":735},[1002],{"type":420,"value":738},{"type":415,"tag":1004,"props":1005,"children":1006},"style",{},[1007],{"type":420,"value":1008},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":408,"searchDepth":482,"depth":482,"links":1010},[1011,1012],{"id":584,"depth":454,"text":584},{"id":589,"depth":454,"text":589,"children":1013},[1014],{"id":595,"depth":463,"text":595},"markdown","content:1.algorithm:3.leetcode:70.climbing-stairs.md","content","1.algorithm/3.leetcode/70.climbing-stairs.md","md",[1021,1023],{"_path":104,"title":103,"description":1022},"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。",{"_path":110,"title":109,"description":1024},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",1713186261443]