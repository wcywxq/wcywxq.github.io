[{"data":1,"prerenderedAt":1018},["Reactive",2],{"navigation":3,"/algorithm/leetcode/climbing-stairs":398,"/algorithm/leetcode/climbing-stairs-surround":1013},[4,237,265,384],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR 169. 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR 187. 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数相加","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,377],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,347,350,353,356,359,362,365,368,371,374],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":348,"_path":349},"倒计时","/frontend-code-assessment/scene/countdown",{"title":351,"_path":352},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":354,"_path":355},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":357,"_path":358},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":360,"_path":361},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":363,"_path":364},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":366,"_path":367},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":369,"_path":370},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":372,"_path":373},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":375,"_path":376},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":378,"_path":379,"children":380},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[381],{"title":382,"_path":383},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":385,"_path":386,"children":387},"后端语言","/backend-languages",[388],{"title":389,"_path":390,"children":391},"Python","/backend-languages/python",[392,395],{"title":393,"_path":394},"基础","/backend-languages/python/base",{"title":396,"_path":397},"函数","/backend-languages/python/function",{"_path":107,"_dir":399,"_draft":400,"_partial":400,"_locale":401,"title":106,"description":402,"url":403,"body":404,"_type":1008,"_id":1009,"_source":1010,"_file":1011,"_extension":1012},"leetcode",false,"","假设你正在爬楼梯。需要 n 阶你才能到达楼顶。","https://leetcode.cn/problems/climbing-stairs",{"type":405,"children":406,"toc":1002},"root",[407,414,419,424,491,496,559,564,574,580,585,591,996],{"type":408,"tag":409,"props":410,"children":411},"element","p",{},[412],{"type":413,"value":402},"text",{"type":408,"tag":409,"props":415,"children":416},{},[417],{"type":413,"value":418},"每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？",{"type":408,"tag":409,"props":420,"children":421},{},[422],{"type":413,"value":423},"示例 1：",{"type":408,"tag":425,"props":426,"children":429},"pre",{"className":427,"code":428,"language":413,"meta":401,"style":401},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：n = 2\n输出：2\n解释：有两种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶\n2. 2 阶\n",[430],{"type":408,"tag":431,"props":432,"children":433},"code",{"__ignoreMap":401},[434,445,454,463,473,482],{"type":408,"tag":435,"props":436,"children":439},"span",{"class":437,"line":438},"line",1,[440],{"type":408,"tag":435,"props":441,"children":442},{},[443],{"type":413,"value":444},"输入：n = 2\n",{"type":408,"tag":435,"props":446,"children":448},{"class":437,"line":447},2,[449],{"type":408,"tag":435,"props":450,"children":451},{},[452],{"type":413,"value":453},"输出：2\n",{"type":408,"tag":435,"props":455,"children":457},{"class":437,"line":456},3,[458],{"type":408,"tag":435,"props":459,"children":460},{},[461],{"type":413,"value":462},"解释：有两种方法可以爬到楼顶。\n",{"type":408,"tag":435,"props":464,"children":466},{"class":437,"line":465},4,[467],{"type":408,"tag":435,"props":468,"children":470},{"emptyLinePlaceholder":469},true,[471],{"type":413,"value":472},"\n",{"type":408,"tag":435,"props":474,"children":476},{"class":437,"line":475},5,[477],{"type":408,"tag":435,"props":478,"children":479},{},[480],{"type":413,"value":481},"1. 1 阶 + 1 阶\n",{"type":408,"tag":435,"props":483,"children":485},{"class":437,"line":484},6,[486],{"type":408,"tag":435,"props":487,"children":488},{},[489],{"type":413,"value":490},"2. 2 阶\n",{"type":408,"tag":409,"props":492,"children":493},{},[494],{"type":413,"value":495},"示例 2：",{"type":408,"tag":425,"props":497,"children":499},{"className":427,"code":498,"language":413,"meta":401,"style":401},"输入：n = 3\n输出：3\n解释：有三种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶 + 1 阶\n2. 1 阶 + 2 阶\n3. 2 阶 + 1 阶\n",[500],{"type":408,"tag":431,"props":501,"children":502},{"__ignoreMap":401},[503,511,519,527,534,542,550],{"type":408,"tag":435,"props":504,"children":505},{"class":437,"line":438},[506],{"type":408,"tag":435,"props":507,"children":508},{},[509],{"type":413,"value":510},"输入：n = 3\n",{"type":408,"tag":435,"props":512,"children":513},{"class":437,"line":447},[514],{"type":408,"tag":435,"props":515,"children":516},{},[517],{"type":413,"value":518},"输出：3\n",{"type":408,"tag":435,"props":520,"children":521},{"class":437,"line":456},[522],{"type":408,"tag":435,"props":523,"children":524},{},[525],{"type":413,"value":526},"解释：有三种方法可以爬到楼顶。\n",{"type":408,"tag":435,"props":528,"children":529},{"class":437,"line":465},[530],{"type":408,"tag":435,"props":531,"children":532},{"emptyLinePlaceholder":469},[533],{"type":413,"value":472},{"type":408,"tag":435,"props":535,"children":536},{"class":437,"line":475},[537],{"type":408,"tag":435,"props":538,"children":539},{},[540],{"type":413,"value":541},"1. 1 阶 + 1 阶 + 1 阶\n",{"type":408,"tag":435,"props":543,"children":544},{"class":437,"line":484},[545],{"type":408,"tag":435,"props":546,"children":547},{},[548],{"type":413,"value":549},"2. 1 阶 + 2 阶\n",{"type":408,"tag":435,"props":551,"children":553},{"class":437,"line":552},7,[554],{"type":408,"tag":435,"props":555,"children":556},{},[557],{"type":413,"value":558},"3. 2 阶 + 1 阶\n",{"type":408,"tag":409,"props":560,"children":561},{},[562],{"type":413,"value":563},"提示：",{"type":408,"tag":565,"props":566,"children":567},"ul",{},[568],{"type":408,"tag":569,"props":570,"children":571},"li",{},[572],{"type":413,"value":573},"1 \u003C= n \u003C= 45",{"type":408,"tag":575,"props":576,"children":578},"h2",{"id":577},"解题思路",[579],{"type":413,"value":577},{"type":408,"tag":575,"props":581,"children":583},{"id":582},"实现",[584],{"type":413,"value":582},{"type":408,"tag":586,"props":587,"children":589},"h3",{"id":588},"动态规划",[590],{"type":413,"value":588},{"type":408,"tag":425,"props":592,"children":596},{"className":593,"code":594,"language":595,"meta":401,"style":401},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number} n\n * @return {number}\n */\nvar climbStairs = function (n) {\n  let dp = [];\n  dp[0] = dp[1] = 1;\n  for (let i = 2; i \u003C= n; i++) {\n    dp[i] = dp[i - 1] + dp[i - 2];\n  }\n  return dp[n];\n};\n","js",[597],{"type":408,"tag":431,"props":598,"children":599},{"__ignoreMap":401},[600,609,635,652,660,703,732,791,860,945,954,983],{"type":408,"tag":435,"props":601,"children":602},{"class":437,"line":438},[603],{"type":408,"tag":435,"props":604,"children":606},{"style":605},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[607],{"type":413,"value":608},"/**\n",{"type":408,"tag":435,"props":610,"children":611},{"class":437,"line":447},[612,617,623,629],{"type":408,"tag":435,"props":613,"children":614},{"style":605},[615],{"type":413,"value":616}," * ",{"type":408,"tag":435,"props":618,"children":620},{"style":619},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[621],{"type":413,"value":622},"@param",{"type":408,"tag":435,"props":624,"children":626},{"style":625},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[627],{"type":413,"value":628}," {number}",{"type":408,"tag":435,"props":630,"children":632},{"style":631},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[633],{"type":413,"value":634}," n\n",{"type":408,"tag":435,"props":636,"children":637},{"class":437,"line":456},[638,642,647],{"type":408,"tag":435,"props":639,"children":640},{"style":605},[641],{"type":413,"value":616},{"type":408,"tag":435,"props":643,"children":644},{"style":619},[645],{"type":413,"value":646},"@return",{"type":408,"tag":435,"props":648,"children":649},{"style":625},[650],{"type":413,"value":651}," {number}\n",{"type":408,"tag":435,"props":653,"children":654},{"class":437,"line":465},[655],{"type":408,"tag":435,"props":656,"children":657},{"style":605},[658],{"type":413,"value":659}," */\n",{"type":408,"tag":435,"props":661,"children":662},{"class":437,"line":475},[663,669,675,681,686,692,698],{"type":408,"tag":435,"props":664,"children":666},{"style":665},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[667],{"type":413,"value":668},"var",{"type":408,"tag":435,"props":670,"children":672},{"style":671},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[673],{"type":413,"value":674}," climbStairs",{"type":408,"tag":435,"props":676,"children":678},{"style":677},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[679],{"type":413,"value":680}," =",{"type":408,"tag":435,"props":682,"children":683},{"style":665},[684],{"type":413,"value":685}," function",{"type":408,"tag":435,"props":687,"children":689},{"style":688},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[690],{"type":413,"value":691}," (",{"type":408,"tag":435,"props":693,"children":695},{"style":694},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[696],{"type":413,"value":697},"n",{"type":408,"tag":435,"props":699,"children":700},{"style":688},[701],{"type":413,"value":702},") {\n",{"type":408,"tag":435,"props":704,"children":705},{"class":437,"line":484},[706,711,717,721,726],{"type":408,"tag":435,"props":707,"children":708},{"style":665},[709],{"type":413,"value":710},"  let",{"type":408,"tag":435,"props":712,"children":714},{"style":713},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[715],{"type":413,"value":716}," dp",{"type":408,"tag":435,"props":718,"children":719},{"style":677},[720],{"type":413,"value":680},{"type":408,"tag":435,"props":722,"children":723},{"style":688},[724],{"type":413,"value":725}," []",{"type":408,"tag":435,"props":727,"children":729},{"style":728},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[730],{"type":413,"value":731},";\n",{"type":408,"tag":435,"props":733,"children":734},{"class":437,"line":552},[735,740,745,751,756,761,765,769,774,778,782,787],{"type":408,"tag":435,"props":736,"children":737},{"style":713},[738],{"type":413,"value":739},"  dp",{"type":408,"tag":435,"props":741,"children":742},{"style":688},[743],{"type":413,"value":744},"[",{"type":408,"tag":435,"props":746,"children":748},{"style":747},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[749],{"type":413,"value":750},"0",{"type":408,"tag":435,"props":752,"children":753},{"style":688},[754],{"type":413,"value":755},"] ",{"type":408,"tag":435,"props":757,"children":758},{"style":677},[759],{"type":413,"value":760},"=",{"type":408,"tag":435,"props":762,"children":763},{"style":713},[764],{"type":413,"value":716},{"type":408,"tag":435,"props":766,"children":767},{"style":688},[768],{"type":413,"value":744},{"type":408,"tag":435,"props":770,"children":771},{"style":747},[772],{"type":413,"value":773},"1",{"type":408,"tag":435,"props":775,"children":776},{"style":688},[777],{"type":413,"value":755},{"type":408,"tag":435,"props":779,"children":780},{"style":677},[781],{"type":413,"value":760},{"type":408,"tag":435,"props":783,"children":784},{"style":747},[785],{"type":413,"value":786}," 1",{"type":408,"tag":435,"props":788,"children":789},{"style":728},[790],{"type":413,"value":731},{"type":408,"tag":435,"props":792,"children":794},{"class":437,"line":793},8,[795,801,805,810,815,819,824,829,833,838,843,847,851,856],{"type":408,"tag":435,"props":796,"children":798},{"style":797},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[799],{"type":413,"value":800},"  for",{"type":408,"tag":435,"props":802,"children":803},{"style":688},[804],{"type":413,"value":691},{"type":408,"tag":435,"props":806,"children":807},{"style":665},[808],{"type":413,"value":809},"let",{"type":408,"tag":435,"props":811,"children":812},{"style":713},[813],{"type":413,"value":814}," i",{"type":408,"tag":435,"props":816,"children":817},{"style":677},[818],{"type":413,"value":680},{"type":408,"tag":435,"props":820,"children":821},{"style":747},[822],{"type":413,"value":823}," 2",{"type":408,"tag":435,"props":825,"children":826},{"style":728},[827],{"type":413,"value":828},";",{"type":408,"tag":435,"props":830,"children":831},{"style":713},[832],{"type":413,"value":814},{"type":408,"tag":435,"props":834,"children":835},{"style":677},[836],{"type":413,"value":837}," \u003C=",{"type":408,"tag":435,"props":839,"children":840},{"style":713},[841],{"type":413,"value":842}," n",{"type":408,"tag":435,"props":844,"children":845},{"style":728},[846],{"type":413,"value":828},{"type":408,"tag":435,"props":848,"children":849},{"style":713},[850],{"type":413,"value":814},{"type":408,"tag":435,"props":852,"children":853},{"style":677},[854],{"type":413,"value":855},"++",{"type":408,"tag":435,"props":857,"children":858},{"style":688},[859],{"type":413,"value":702},{"type":408,"tag":435,"props":861,"children":863},{"class":437,"line":862},9,[864,869,873,878,882,886,890,894,898,903,907,911,916,920,924,928,932,936,941],{"type":408,"tag":435,"props":865,"children":866},{"style":713},[867],{"type":413,"value":868},"    dp",{"type":408,"tag":435,"props":870,"children":871},{"style":688},[872],{"type":413,"value":744},{"type":408,"tag":435,"props":874,"children":875},{"style":713},[876],{"type":413,"value":877},"i",{"type":408,"tag":435,"props":879,"children":880},{"style":688},[881],{"type":413,"value":755},{"type":408,"tag":435,"props":883,"children":884},{"style":677},[885],{"type":413,"value":760},{"type":408,"tag":435,"props":887,"children":888},{"style":713},[889],{"type":413,"value":716},{"type":408,"tag":435,"props":891,"children":892},{"style":688},[893],{"type":413,"value":744},{"type":408,"tag":435,"props":895,"children":896},{"style":713},[897],{"type":413,"value":877},{"type":408,"tag":435,"props":899,"children":900},{"style":677},[901],{"type":413,"value":902}," -",{"type":408,"tag":435,"props":904,"children":905},{"style":747},[906],{"type":413,"value":786},{"type":408,"tag":435,"props":908,"children":909},{"style":688},[910],{"type":413,"value":755},{"type":408,"tag":435,"props":912,"children":913},{"style":677},[914],{"type":413,"value":915},"+",{"type":408,"tag":435,"props":917,"children":918},{"style":713},[919],{"type":413,"value":716},{"type":408,"tag":435,"props":921,"children":922},{"style":688},[923],{"type":413,"value":744},{"type":408,"tag":435,"props":925,"children":926},{"style":713},[927],{"type":413,"value":877},{"type":408,"tag":435,"props":929,"children":930},{"style":677},[931],{"type":413,"value":902},{"type":408,"tag":435,"props":933,"children":934},{"style":747},[935],{"type":413,"value":823},{"type":408,"tag":435,"props":937,"children":938},{"style":688},[939],{"type":413,"value":940},"]",{"type":408,"tag":435,"props":942,"children":943},{"style":728},[944],{"type":413,"value":731},{"type":408,"tag":435,"props":946,"children":948},{"class":437,"line":947},10,[949],{"type":408,"tag":435,"props":950,"children":951},{"style":688},[952],{"type":413,"value":953},"  }\n",{"type":408,"tag":435,"props":955,"children":957},{"class":437,"line":956},11,[958,963,967,971,975,979],{"type":408,"tag":435,"props":959,"children":960},{"style":797},[961],{"type":413,"value":962},"  return",{"type":408,"tag":435,"props":964,"children":965},{"style":713},[966],{"type":413,"value":716},{"type":408,"tag":435,"props":968,"children":969},{"style":688},[970],{"type":413,"value":744},{"type":408,"tag":435,"props":972,"children":973},{"style":713},[974],{"type":413,"value":697},{"type":408,"tag":435,"props":976,"children":977},{"style":688},[978],{"type":413,"value":940},{"type":408,"tag":435,"props":980,"children":981},{"style":728},[982],{"type":413,"value":731},{"type":408,"tag":435,"props":984,"children":986},{"class":437,"line":985},12,[987,992],{"type":408,"tag":435,"props":988,"children":989},{"style":688},[990],{"type":413,"value":991},"}",{"type":408,"tag":435,"props":993,"children":994},{"style":728},[995],{"type":413,"value":731},{"type":408,"tag":997,"props":998,"children":999},"style",{},[1000],{"type":413,"value":1001},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":401,"searchDepth":475,"depth":475,"links":1003},[1004,1005],{"id":577,"depth":447,"text":577},{"id":582,"depth":447,"text":582,"children":1006},[1007],{"id":588,"depth":456,"text":588},"markdown","content:1.algorithm:3.leetcode:70.climbing-stairs.md","content","1.algorithm/3.leetcode/70.climbing-stairs.md","md",[1014,1016],{"_path":104,"title":103,"description":1015},"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。",{"_path":110,"title":109,"description":1017},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",1713153292504]