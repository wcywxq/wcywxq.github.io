[{"data":1,"prerenderedAt":1044},["Reactive",2],{"navigation":3,"/algorithm/leetcode/climbing-stairs":424,"/algorithm/leetcode/climbing-stairs-surround":1039},[4,237,265,403,410],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,396],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"随机数","/frontend-code-assessment/scene/random-number",{"title":382,"_path":383},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":385,"_path":386},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":388,"_path":389},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":391,"_path":392},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":394,"_path":395},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":397,"_path":398,"children":399},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[400],{"title":401,"_path":402},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":404,"_path":405,"children":406},"项目","/pro",[407],{"title":408,"_path":409},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":411,"_path":412,"children":413},"后端语言","/backend-languages",[414],{"title":415,"_path":416,"children":417},"Python","/backend-languages/python",[418,421],{"title":419,"_path":420},"基础","/backend-languages/python/base",{"title":422,"_path":423},"函数","/backend-languages/python/function",{"_path":107,"_dir":425,"_draft":426,"_partial":426,"_locale":427,"title":106,"description":428,"url":429,"body":430,"_type":1034,"_id":1035,"_source":1036,"_file":1037,"_extension":1038},"leetcode",false,"","假设你正在爬楼梯。需要 n 阶你才能到达楼顶。","https://leetcode.cn/problems/climbing-stairs",{"type":431,"children":432,"toc":1028},"root",[433,440,445,450,517,522,585,590,600,606,611,617,1022],{"type":434,"tag":435,"props":436,"children":437},"element","p",{},[438],{"type":439,"value":428},"text",{"type":434,"tag":435,"props":441,"children":442},{},[443],{"type":439,"value":444},"每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？",{"type":434,"tag":435,"props":446,"children":447},{},[448],{"type":439,"value":449},"示例 1：",{"type":434,"tag":451,"props":452,"children":455},"pre",{"className":453,"code":454,"language":439,"meta":427,"style":427},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：n = 2\n输出：2\n解释：有两种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶\n2. 2 阶\n",[456],{"type":434,"tag":457,"props":458,"children":459},"code",{"__ignoreMap":427},[460,471,480,489,499,508],{"type":434,"tag":461,"props":462,"children":465},"span",{"class":463,"line":464},"line",1,[466],{"type":434,"tag":461,"props":467,"children":468},{},[469],{"type":439,"value":470},"输入：n = 2\n",{"type":434,"tag":461,"props":472,"children":474},{"class":463,"line":473},2,[475],{"type":434,"tag":461,"props":476,"children":477},{},[478],{"type":439,"value":479},"输出：2\n",{"type":434,"tag":461,"props":481,"children":483},{"class":463,"line":482},3,[484],{"type":434,"tag":461,"props":485,"children":486},{},[487],{"type":439,"value":488},"解释：有两种方法可以爬到楼顶。\n",{"type":434,"tag":461,"props":490,"children":492},{"class":463,"line":491},4,[493],{"type":434,"tag":461,"props":494,"children":496},{"emptyLinePlaceholder":495},true,[497],{"type":439,"value":498},"\n",{"type":434,"tag":461,"props":500,"children":502},{"class":463,"line":501},5,[503],{"type":434,"tag":461,"props":504,"children":505},{},[506],{"type":439,"value":507},"1. 1 阶 + 1 阶\n",{"type":434,"tag":461,"props":509,"children":511},{"class":463,"line":510},6,[512],{"type":434,"tag":461,"props":513,"children":514},{},[515],{"type":439,"value":516},"2. 2 阶\n",{"type":434,"tag":435,"props":518,"children":519},{},[520],{"type":439,"value":521},"示例 2：",{"type":434,"tag":451,"props":523,"children":525},{"className":453,"code":524,"language":439,"meta":427,"style":427},"输入：n = 3\n输出：3\n解释：有三种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶 + 1 阶\n2. 1 阶 + 2 阶\n3. 2 阶 + 1 阶\n",[526],{"type":434,"tag":457,"props":527,"children":528},{"__ignoreMap":427},[529,537,545,553,560,568,576],{"type":434,"tag":461,"props":530,"children":531},{"class":463,"line":464},[532],{"type":434,"tag":461,"props":533,"children":534},{},[535],{"type":439,"value":536},"输入：n = 3\n",{"type":434,"tag":461,"props":538,"children":539},{"class":463,"line":473},[540],{"type":434,"tag":461,"props":541,"children":542},{},[543],{"type":439,"value":544},"输出：3\n",{"type":434,"tag":461,"props":546,"children":547},{"class":463,"line":482},[548],{"type":434,"tag":461,"props":549,"children":550},{},[551],{"type":439,"value":552},"解释：有三种方法可以爬到楼顶。\n",{"type":434,"tag":461,"props":554,"children":555},{"class":463,"line":491},[556],{"type":434,"tag":461,"props":557,"children":558},{"emptyLinePlaceholder":495},[559],{"type":439,"value":498},{"type":434,"tag":461,"props":561,"children":562},{"class":463,"line":501},[563],{"type":434,"tag":461,"props":564,"children":565},{},[566],{"type":439,"value":567},"1. 1 阶 + 1 阶 + 1 阶\n",{"type":434,"tag":461,"props":569,"children":570},{"class":463,"line":510},[571],{"type":434,"tag":461,"props":572,"children":573},{},[574],{"type":439,"value":575},"2. 1 阶 + 2 阶\n",{"type":434,"tag":461,"props":577,"children":579},{"class":463,"line":578},7,[580],{"type":434,"tag":461,"props":581,"children":582},{},[583],{"type":439,"value":584},"3. 2 阶 + 1 阶\n",{"type":434,"tag":435,"props":586,"children":587},{},[588],{"type":439,"value":589},"提示：",{"type":434,"tag":591,"props":592,"children":593},"ul",{},[594],{"type":434,"tag":595,"props":596,"children":597},"li",{},[598],{"type":439,"value":599},"1 \u003C= n \u003C= 45",{"type":434,"tag":601,"props":602,"children":604},"h2",{"id":603},"解题思路",[605],{"type":439,"value":603},{"type":434,"tag":601,"props":607,"children":609},{"id":608},"实现",[610],{"type":439,"value":608},{"type":434,"tag":612,"props":613,"children":615},"h3",{"id":614},"动态规划",[616],{"type":439,"value":614},{"type":434,"tag":451,"props":618,"children":622},{"className":619,"code":620,"language":621,"meta":427,"style":427},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number} n\n * @return {number}\n */\nvar climbStairs = function (n) {\n  let dp = [];\n  dp[0] = dp[1] = 1;\n  for (let i = 2; i \u003C= n; i++) {\n    dp[i] = dp[i - 1] + dp[i - 2];\n  }\n  return dp[n];\n};\n","js",[623],{"type":434,"tag":457,"props":624,"children":625},{"__ignoreMap":427},[626,635,661,678,686,729,758,817,886,971,980,1009],{"type":434,"tag":461,"props":627,"children":628},{"class":463,"line":464},[629],{"type":434,"tag":461,"props":630,"children":632},{"style":631},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[633],{"type":439,"value":634},"/**\n",{"type":434,"tag":461,"props":636,"children":637},{"class":463,"line":473},[638,643,649,655],{"type":434,"tag":461,"props":639,"children":640},{"style":631},[641],{"type":439,"value":642}," * ",{"type":434,"tag":461,"props":644,"children":646},{"style":645},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[647],{"type":439,"value":648},"@param",{"type":434,"tag":461,"props":650,"children":652},{"style":651},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[653],{"type":439,"value":654}," {number}",{"type":434,"tag":461,"props":656,"children":658},{"style":657},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[659],{"type":439,"value":660}," n\n",{"type":434,"tag":461,"props":662,"children":663},{"class":463,"line":482},[664,668,673],{"type":434,"tag":461,"props":665,"children":666},{"style":631},[667],{"type":439,"value":642},{"type":434,"tag":461,"props":669,"children":670},{"style":645},[671],{"type":439,"value":672},"@return",{"type":434,"tag":461,"props":674,"children":675},{"style":651},[676],{"type":439,"value":677}," {number}\n",{"type":434,"tag":461,"props":679,"children":680},{"class":463,"line":491},[681],{"type":434,"tag":461,"props":682,"children":683},{"style":631},[684],{"type":439,"value":685}," */\n",{"type":434,"tag":461,"props":687,"children":688},{"class":463,"line":501},[689,695,701,707,712,718,724],{"type":434,"tag":461,"props":690,"children":692},{"style":691},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[693],{"type":439,"value":694},"var",{"type":434,"tag":461,"props":696,"children":698},{"style":697},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[699],{"type":439,"value":700}," climbStairs",{"type":434,"tag":461,"props":702,"children":704},{"style":703},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[705],{"type":439,"value":706}," =",{"type":434,"tag":461,"props":708,"children":709},{"style":691},[710],{"type":439,"value":711}," function",{"type":434,"tag":461,"props":713,"children":715},{"style":714},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[716],{"type":439,"value":717}," (",{"type":434,"tag":461,"props":719,"children":721},{"style":720},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[722],{"type":439,"value":723},"n",{"type":434,"tag":461,"props":725,"children":726},{"style":714},[727],{"type":439,"value":728},") {\n",{"type":434,"tag":461,"props":730,"children":731},{"class":463,"line":510},[732,737,743,747,752],{"type":434,"tag":461,"props":733,"children":734},{"style":691},[735],{"type":439,"value":736},"  let",{"type":434,"tag":461,"props":738,"children":740},{"style":739},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[741],{"type":439,"value":742}," dp",{"type":434,"tag":461,"props":744,"children":745},{"style":703},[746],{"type":439,"value":706},{"type":434,"tag":461,"props":748,"children":749},{"style":714},[750],{"type":439,"value":751}," []",{"type":434,"tag":461,"props":753,"children":755},{"style":754},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[756],{"type":439,"value":757},";\n",{"type":434,"tag":461,"props":759,"children":760},{"class":463,"line":578},[761,766,771,777,782,787,791,795,800,804,808,813],{"type":434,"tag":461,"props":762,"children":763},{"style":739},[764],{"type":439,"value":765},"  dp",{"type":434,"tag":461,"props":767,"children":768},{"style":714},[769],{"type":439,"value":770},"[",{"type":434,"tag":461,"props":772,"children":774},{"style":773},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[775],{"type":439,"value":776},"0",{"type":434,"tag":461,"props":778,"children":779},{"style":714},[780],{"type":439,"value":781},"] ",{"type":434,"tag":461,"props":783,"children":784},{"style":703},[785],{"type":439,"value":786},"=",{"type":434,"tag":461,"props":788,"children":789},{"style":739},[790],{"type":439,"value":742},{"type":434,"tag":461,"props":792,"children":793},{"style":714},[794],{"type":439,"value":770},{"type":434,"tag":461,"props":796,"children":797},{"style":773},[798],{"type":439,"value":799},"1",{"type":434,"tag":461,"props":801,"children":802},{"style":714},[803],{"type":439,"value":781},{"type":434,"tag":461,"props":805,"children":806},{"style":703},[807],{"type":439,"value":786},{"type":434,"tag":461,"props":809,"children":810},{"style":773},[811],{"type":439,"value":812}," 1",{"type":434,"tag":461,"props":814,"children":815},{"style":754},[816],{"type":439,"value":757},{"type":434,"tag":461,"props":818,"children":820},{"class":463,"line":819},8,[821,827,831,836,841,845,850,855,859,864,869,873,877,882],{"type":434,"tag":461,"props":822,"children":824},{"style":823},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[825],{"type":439,"value":826},"  for",{"type":434,"tag":461,"props":828,"children":829},{"style":714},[830],{"type":439,"value":717},{"type":434,"tag":461,"props":832,"children":833},{"style":691},[834],{"type":439,"value":835},"let",{"type":434,"tag":461,"props":837,"children":838},{"style":739},[839],{"type":439,"value":840}," i",{"type":434,"tag":461,"props":842,"children":843},{"style":703},[844],{"type":439,"value":706},{"type":434,"tag":461,"props":846,"children":847},{"style":773},[848],{"type":439,"value":849}," 2",{"type":434,"tag":461,"props":851,"children":852},{"style":754},[853],{"type":439,"value":854},";",{"type":434,"tag":461,"props":856,"children":857},{"style":739},[858],{"type":439,"value":840},{"type":434,"tag":461,"props":860,"children":861},{"style":703},[862],{"type":439,"value":863}," \u003C=",{"type":434,"tag":461,"props":865,"children":866},{"style":739},[867],{"type":439,"value":868}," n",{"type":434,"tag":461,"props":870,"children":871},{"style":754},[872],{"type":439,"value":854},{"type":434,"tag":461,"props":874,"children":875},{"style":739},[876],{"type":439,"value":840},{"type":434,"tag":461,"props":878,"children":879},{"style":703},[880],{"type":439,"value":881},"++",{"type":434,"tag":461,"props":883,"children":884},{"style":714},[885],{"type":439,"value":728},{"type":434,"tag":461,"props":887,"children":889},{"class":463,"line":888},9,[890,895,899,904,908,912,916,920,924,929,933,937,942,946,950,954,958,962,967],{"type":434,"tag":461,"props":891,"children":892},{"style":739},[893],{"type":439,"value":894},"    dp",{"type":434,"tag":461,"props":896,"children":897},{"style":714},[898],{"type":439,"value":770},{"type":434,"tag":461,"props":900,"children":901},{"style":739},[902],{"type":439,"value":903},"i",{"type":434,"tag":461,"props":905,"children":906},{"style":714},[907],{"type":439,"value":781},{"type":434,"tag":461,"props":909,"children":910},{"style":703},[911],{"type":439,"value":786},{"type":434,"tag":461,"props":913,"children":914},{"style":739},[915],{"type":439,"value":742},{"type":434,"tag":461,"props":917,"children":918},{"style":714},[919],{"type":439,"value":770},{"type":434,"tag":461,"props":921,"children":922},{"style":739},[923],{"type":439,"value":903},{"type":434,"tag":461,"props":925,"children":926},{"style":703},[927],{"type":439,"value":928}," -",{"type":434,"tag":461,"props":930,"children":931},{"style":773},[932],{"type":439,"value":812},{"type":434,"tag":461,"props":934,"children":935},{"style":714},[936],{"type":439,"value":781},{"type":434,"tag":461,"props":938,"children":939},{"style":703},[940],{"type":439,"value":941},"+",{"type":434,"tag":461,"props":943,"children":944},{"style":739},[945],{"type":439,"value":742},{"type":434,"tag":461,"props":947,"children":948},{"style":714},[949],{"type":439,"value":770},{"type":434,"tag":461,"props":951,"children":952},{"style":739},[953],{"type":439,"value":903},{"type":434,"tag":461,"props":955,"children":956},{"style":703},[957],{"type":439,"value":928},{"type":434,"tag":461,"props":959,"children":960},{"style":773},[961],{"type":439,"value":849},{"type":434,"tag":461,"props":963,"children":964},{"style":714},[965],{"type":439,"value":966},"]",{"type":434,"tag":461,"props":968,"children":969},{"style":754},[970],{"type":439,"value":757},{"type":434,"tag":461,"props":972,"children":974},{"class":463,"line":973},10,[975],{"type":434,"tag":461,"props":976,"children":977},{"style":714},[978],{"type":439,"value":979},"  }\n",{"type":434,"tag":461,"props":981,"children":983},{"class":463,"line":982},11,[984,989,993,997,1001,1005],{"type":434,"tag":461,"props":985,"children":986},{"style":823},[987],{"type":439,"value":988},"  return",{"type":434,"tag":461,"props":990,"children":991},{"style":739},[992],{"type":439,"value":742},{"type":434,"tag":461,"props":994,"children":995},{"style":714},[996],{"type":439,"value":770},{"type":434,"tag":461,"props":998,"children":999},{"style":739},[1000],{"type":439,"value":723},{"type":434,"tag":461,"props":1002,"children":1003},{"style":714},[1004],{"type":439,"value":966},{"type":434,"tag":461,"props":1006,"children":1007},{"style":754},[1008],{"type":439,"value":757},{"type":434,"tag":461,"props":1010,"children":1012},{"class":463,"line":1011},12,[1013,1018],{"type":434,"tag":461,"props":1014,"children":1015},{"style":714},[1016],{"type":439,"value":1017},"}",{"type":434,"tag":461,"props":1019,"children":1020},{"style":754},[1021],{"type":439,"value":757},{"type":434,"tag":1023,"props":1024,"children":1025},"style",{},[1026],{"type":439,"value":1027},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":427,"searchDepth":501,"depth":501,"links":1029},[1030,1031],{"id":603,"depth":473,"text":603},{"id":608,"depth":473,"text":608,"children":1032},[1033],{"id":614,"depth":482,"text":614},"markdown","content:1.algorithm:3.leetcode:70.climbing-stairs.md","content","1.algorithm/3.leetcode/70.climbing-stairs.md","md",[1040,1042],{"_path":104,"title":103,"description":1041},"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。",{"_path":110,"title":109,"description":1043},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",1713339870912]