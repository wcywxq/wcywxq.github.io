[{"data":1,"prerenderedAt":1445},["Reactive",2],{"navigation":3,"/algorithm/leetcode/reverse-words-in-a-string":405,"/algorithm/leetcode/reverse-words-in-a-string-surround":1440},[4,237,265,384,391],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,377],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,347,350,353,356,359,362,365,368,371,374],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":348,"_path":349},"倒计时","/frontend-code-assessment/scene/countdown",{"title":351,"_path":352},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":354,"_path":355},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":357,"_path":358},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":360,"_path":361},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":363,"_path":364},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":366,"_path":367},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":369,"_path":370},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":372,"_path":373},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":375,"_path":376},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":378,"_path":379,"children":380},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[381],{"title":382,"_path":383},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":385,"_path":386,"children":387},"项目","/pro",[388],{"title":389,"_path":390},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":392,"_path":393,"children":394},"后端语言","/backend-languages",[395],{"title":396,"_path":397,"children":398},"Python","/backend-languages/python",[399,402],{"title":400,"_path":401},"基础","/backend-languages/python/base",{"title":403,"_path":404},"函数","/backend-languages/python/function",{"_path":149,"_dir":406,"_draft":407,"_partial":407,"_locale":408,"title":148,"description":409,"url":410,"body":411,"_type":1435,"_id":1436,"_source":1437,"_file":1438,"_extension":1439},"leetcode",false,"","给你一个字符串 s ，请你反转字符串中 单词 的顺序。","https://leetcode.cn/problems/reverse-words-in-a-string",{"type":412,"children":413,"toc":1428},"root",[414,421,426,431,436,441,471,476,508,513,544,549,569,574,580,585,591,824,829,1422],{"type":415,"tag":416,"props":417,"children":418},"element","p",{},[419],{"type":420,"value":409},"text",{"type":415,"tag":416,"props":422,"children":423},{},[424],{"type":420,"value":425},"单词 是由非空格字符组成的字符串。s 中使用至少一个空格将字符串中的 单词 分隔开。",{"type":415,"tag":416,"props":427,"children":428},{},[429],{"type":420,"value":430},"返回 单词 顺序颠倒且 单词 之间用单个空格连接的结果字符串。",{"type":415,"tag":416,"props":432,"children":433},{},[434],{"type":420,"value":435},"注意：输入字符串 s 中可能会存在前导空格、尾随空格或者单词间的多个空格。返回的结果字符串中，单词间应当仅用单个空格分隔，且不包含任何额外的空格。",{"type":415,"tag":416,"props":437,"children":438},{},[439],{"type":420,"value":440},"示例 1：",{"type":415,"tag":442,"props":443,"children":446},"pre",{"className":444,"code":445,"language":420,"meta":408,"style":408},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：s = \"the sky is blue\"\n输出：\"blue is sky the\"\n",[447],{"type":415,"tag":448,"props":449,"children":450},"code",{"__ignoreMap":408},[451,462],{"type":415,"tag":452,"props":453,"children":456},"span",{"class":454,"line":455},"line",1,[457],{"type":415,"tag":452,"props":458,"children":459},{},[460],{"type":420,"value":461},"输入：s = \"the sky is blue\"\n",{"type":415,"tag":452,"props":463,"children":465},{"class":454,"line":464},2,[466],{"type":415,"tag":452,"props":467,"children":468},{},[469],{"type":420,"value":470},"输出：\"blue is sky the\"\n",{"type":415,"tag":416,"props":472,"children":473},{},[474],{"type":420,"value":475},"示例 2：",{"type":415,"tag":442,"props":477,"children":479},{"className":444,"code":478,"language":420,"meta":408,"style":408},"输入：s = \" hello world \"\n输出：\"world hello\"\n解释：反转后的字符串中不能存在前导空格和尾随空格。\n",[480],{"type":415,"tag":448,"props":481,"children":482},{"__ignoreMap":408},[483,491,499],{"type":415,"tag":452,"props":484,"children":485},{"class":454,"line":455},[486],{"type":415,"tag":452,"props":487,"children":488},{},[489],{"type":420,"value":490},"输入：s = \" hello world \"\n",{"type":415,"tag":452,"props":492,"children":493},{"class":454,"line":464},[494],{"type":415,"tag":452,"props":495,"children":496},{},[497],{"type":420,"value":498},"输出：\"world hello\"\n",{"type":415,"tag":452,"props":500,"children":502},{"class":454,"line":501},3,[503],{"type":415,"tag":452,"props":504,"children":505},{},[506],{"type":420,"value":507},"解释：反转后的字符串中不能存在前导空格和尾随空格。\n",{"type":415,"tag":416,"props":509,"children":510},{},[511],{"type":420,"value":512},"示例 3：",{"type":415,"tag":442,"props":514,"children":516},{"className":444,"code":515,"language":420,"meta":408,"style":408},"输入：s = \"a good example\"\n输出：\"example good a\"\n解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",[517],{"type":415,"tag":448,"props":518,"children":519},{"__ignoreMap":408},[520,528,536],{"type":415,"tag":452,"props":521,"children":522},{"class":454,"line":455},[523],{"type":415,"tag":452,"props":524,"children":525},{},[526],{"type":420,"value":527},"输入：s = \"a good example\"\n",{"type":415,"tag":452,"props":529,"children":530},{"class":454,"line":464},[531],{"type":415,"tag":452,"props":532,"children":533},{},[534],{"type":420,"value":535},"输出：\"example good a\"\n",{"type":415,"tag":452,"props":537,"children":538},{"class":454,"line":501},[539],{"type":415,"tag":452,"props":540,"children":541},{},[542],{"type":420,"value":543},"解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",{"type":415,"tag":416,"props":545,"children":546},{},[547],{"type":420,"value":548},"提示：",{"type":415,"tag":550,"props":551,"children":552},"ul",{},[553,559,564],{"type":415,"tag":554,"props":555,"children":556},"li",{},[557],{"type":420,"value":558},"1 \u003C= s.length \u003C= 10^4",{"type":415,"tag":554,"props":560,"children":561},{},[562],{"type":420,"value":563},"s 包含英文大小写字母、数字和空格 ' '",{"type":415,"tag":554,"props":565,"children":566},{},[567],{"type":420,"value":568},"s 中 至少存在一个 单词",{"type":415,"tag":416,"props":570,"children":571},{},[572],{"type":420,"value":573},"进阶：如果字符串在你使用的编程语言中是一种可变数据类型，请尝试使用 O(1) 额外空间复杂度的 原地 解法。",{"type":415,"tag":575,"props":576,"children":578},"h2",{"id":577},"解题思路",[579],{"type":420,"value":577},{"type":415,"tag":575,"props":581,"children":583},{"id":582},"实现",[584],{"type":420,"value":582},{"type":415,"tag":586,"props":587,"children":589},"h3",{"id":588},"语言特性",[590],{"type":420,"value":588},{"type":415,"tag":442,"props":592,"children":596},{"className":593,"code":594,"language":595,"meta":408,"style":408},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  return s.split(\" \").filter(Boolean).reverse().join(\" \");\n};\n","js",[597],{"type":415,"tag":448,"props":598,"children":599},{"__ignoreMap":408},[600,609,635,652,661,705,811],{"type":415,"tag":452,"props":601,"children":602},{"class":454,"line":455},[603],{"type":415,"tag":452,"props":604,"children":606},{"style":605},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[607],{"type":420,"value":608},"/**\n",{"type":415,"tag":452,"props":610,"children":611},{"class":454,"line":464},[612,617,623,629],{"type":415,"tag":452,"props":613,"children":614},{"style":605},[615],{"type":420,"value":616}," * ",{"type":415,"tag":452,"props":618,"children":620},{"style":619},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[621],{"type":420,"value":622},"@param",{"type":415,"tag":452,"props":624,"children":626},{"style":625},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[627],{"type":420,"value":628}," {string}",{"type":415,"tag":452,"props":630,"children":632},{"style":631},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[633],{"type":420,"value":634}," s\n",{"type":415,"tag":452,"props":636,"children":637},{"class":454,"line":501},[638,642,647],{"type":415,"tag":452,"props":639,"children":640},{"style":605},[641],{"type":420,"value":616},{"type":415,"tag":452,"props":643,"children":644},{"style":619},[645],{"type":420,"value":646},"@return",{"type":415,"tag":452,"props":648,"children":649},{"style":625},[650],{"type":420,"value":651}," {string}\n",{"type":415,"tag":452,"props":653,"children":655},{"class":454,"line":654},4,[656],{"type":415,"tag":452,"props":657,"children":658},{"style":605},[659],{"type":420,"value":660}," */\n",{"type":415,"tag":452,"props":662,"children":664},{"class":454,"line":663},5,[665,671,677,683,688,694,700],{"type":415,"tag":452,"props":666,"children":668},{"style":667},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[669],{"type":420,"value":670},"var",{"type":415,"tag":452,"props":672,"children":674},{"style":673},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[675],{"type":420,"value":676}," reverseWords",{"type":415,"tag":452,"props":678,"children":680},{"style":679},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[681],{"type":420,"value":682}," =",{"type":415,"tag":452,"props":684,"children":685},{"style":667},[686],{"type":420,"value":687}," function",{"type":415,"tag":452,"props":689,"children":691},{"style":690},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[692],{"type":420,"value":693}," (",{"type":415,"tag":452,"props":695,"children":697},{"style":696},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[698],{"type":420,"value":699},"s",{"type":415,"tag":452,"props":701,"children":702},{"style":690},[703],{"type":420,"value":704},") {\n",{"type":415,"tag":452,"props":706,"children":708},{"class":454,"line":707},6,[709,715,721,727,732,737,743,748,752,757,761,766,770,774,779,784,788,793,797,801,805],{"type":415,"tag":452,"props":710,"children":712},{"style":711},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[713],{"type":420,"value":714},"  return",{"type":415,"tag":452,"props":716,"children":718},{"style":717},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[719],{"type":420,"value":720}," s",{"type":415,"tag":452,"props":722,"children":724},{"style":723},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[725],{"type":420,"value":726},".",{"type":415,"tag":452,"props":728,"children":729},{"style":673},[730],{"type":420,"value":731},"split",{"type":415,"tag":452,"props":733,"children":734},{"style":690},[735],{"type":420,"value":736},"(",{"type":415,"tag":452,"props":738,"children":740},{"style":739},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[741],{"type":420,"value":742},"\" \"",{"type":415,"tag":452,"props":744,"children":745},{"style":690},[746],{"type":420,"value":747},")",{"type":415,"tag":452,"props":749,"children":750},{"style":723},[751],{"type":420,"value":726},{"type":415,"tag":452,"props":753,"children":754},{"style":673},[755],{"type":420,"value":756},"filter",{"type":415,"tag":452,"props":758,"children":759},{"style":690},[760],{"type":420,"value":736},{"type":415,"tag":452,"props":762,"children":763},{"style":717},[764],{"type":420,"value":765},"Boolean",{"type":415,"tag":452,"props":767,"children":768},{"style":690},[769],{"type":420,"value":747},{"type":415,"tag":452,"props":771,"children":772},{"style":723},[773],{"type":420,"value":726},{"type":415,"tag":452,"props":775,"children":776},{"style":673},[777],{"type":420,"value":778},"reverse",{"type":415,"tag":452,"props":780,"children":781},{"style":690},[782],{"type":420,"value":783},"()",{"type":415,"tag":452,"props":785,"children":786},{"style":723},[787],{"type":420,"value":726},{"type":415,"tag":452,"props":789,"children":790},{"style":673},[791],{"type":420,"value":792},"join",{"type":415,"tag":452,"props":794,"children":795},{"style":690},[796],{"type":420,"value":736},{"type":415,"tag":452,"props":798,"children":799},{"style":739},[800],{"type":420,"value":742},{"type":415,"tag":452,"props":802,"children":803},{"style":690},[804],{"type":420,"value":747},{"type":415,"tag":452,"props":806,"children":808},{"style":807},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[809],{"type":420,"value":810},";\n",{"type":415,"tag":452,"props":812,"children":814},{"class":454,"line":813},7,[815,820],{"type":415,"tag":452,"props":816,"children":817},{"style":690},[818],{"type":420,"value":819},"}",{"type":415,"tag":452,"props":821,"children":822},{"style":807},[823],{"type":420,"value":810},{"type":415,"tag":586,"props":825,"children":827},{"id":826},"双指针",[828],{"type":420,"value":826},{"type":415,"tag":442,"props":830,"children":832},{"className":593,"code":831,"language":595,"meta":408,"style":408},"/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  // 倒序遍历字符串\n  // 1. 索引 i 从右向左搜索首个空格\n  // 2. 添加单词 s[i + 1, j + 1] 到 res\n  // 3. 索引 i 绕过两个单词间所有空格\n  // 4. 执行 j = i\n  let res = [];\n  let i = s.length - 1;\n  let j = i;\n  while (i >= 0) {\n    while (i >= 0 && s[i] !== \" \") i--; // 搜索首个空格\n    res.push(s.substring(i + 1, j + 1)); // 添加单词\n    while (i >= 0 && s[i] === \" \") i--; // 跳过单词间空格\n    j = i; // 指针移动，指向下个单词的尾字符\n  }\n  return res.join(\" \").trim();\n};\n",[833],{"type":415,"tag":448,"props":834,"children":835},{"__ignoreMap":408},[836,843,862,877,884,915,923,931,940,949,958,985,1030,1055,1087,1169,1252,1326,1352,1361,1410],{"type":415,"tag":452,"props":837,"children":838},{"class":454,"line":455},[839],{"type":415,"tag":452,"props":840,"children":841},{"style":605},[842],{"type":420,"value":608},{"type":415,"tag":452,"props":844,"children":845},{"class":454,"line":464},[846,850,854,858],{"type":415,"tag":452,"props":847,"children":848},{"style":605},[849],{"type":420,"value":616},{"type":415,"tag":452,"props":851,"children":852},{"style":619},[853],{"type":420,"value":622},{"type":415,"tag":452,"props":855,"children":856},{"style":625},[857],{"type":420,"value":628},{"type":415,"tag":452,"props":859,"children":860},{"style":631},[861],{"type":420,"value":634},{"type":415,"tag":452,"props":863,"children":864},{"class":454,"line":501},[865,869,873],{"type":415,"tag":452,"props":866,"children":867},{"style":605},[868],{"type":420,"value":616},{"type":415,"tag":452,"props":870,"children":871},{"style":619},[872],{"type":420,"value":646},{"type":415,"tag":452,"props":874,"children":875},{"style":625},[876],{"type":420,"value":651},{"type":415,"tag":452,"props":878,"children":879},{"class":454,"line":654},[880],{"type":415,"tag":452,"props":881,"children":882},{"style":605},[883],{"type":420,"value":660},{"type":415,"tag":452,"props":885,"children":886},{"class":454,"line":663},[887,891,895,899,903,907,911],{"type":415,"tag":452,"props":888,"children":889},{"style":667},[890],{"type":420,"value":670},{"type":415,"tag":452,"props":892,"children":893},{"style":673},[894],{"type":420,"value":676},{"type":415,"tag":452,"props":896,"children":897},{"style":679},[898],{"type":420,"value":682},{"type":415,"tag":452,"props":900,"children":901},{"style":667},[902],{"type":420,"value":687},{"type":415,"tag":452,"props":904,"children":905},{"style":690},[906],{"type":420,"value":693},{"type":415,"tag":452,"props":908,"children":909},{"style":696},[910],{"type":420,"value":699},{"type":415,"tag":452,"props":912,"children":913},{"style":690},[914],{"type":420,"value":704},{"type":415,"tag":452,"props":916,"children":917},{"class":454,"line":707},[918],{"type":415,"tag":452,"props":919,"children":920},{"style":605},[921],{"type":420,"value":922},"  // 倒序遍历字符串\n",{"type":415,"tag":452,"props":924,"children":925},{"class":454,"line":813},[926],{"type":415,"tag":452,"props":927,"children":928},{"style":605},[929],{"type":420,"value":930},"  // 1. 索引 i 从右向左搜索首个空格\n",{"type":415,"tag":452,"props":932,"children":934},{"class":454,"line":933},8,[935],{"type":415,"tag":452,"props":936,"children":937},{"style":605},[938],{"type":420,"value":939},"  // 2. 添加单词 s[i + 1, j + 1] 到 res\n",{"type":415,"tag":452,"props":941,"children":943},{"class":454,"line":942},9,[944],{"type":415,"tag":452,"props":945,"children":946},{"style":605},[947],{"type":420,"value":948},"  // 3. 索引 i 绕过两个单词间所有空格\n",{"type":415,"tag":452,"props":950,"children":952},{"class":454,"line":951},10,[953],{"type":415,"tag":452,"props":954,"children":955},{"style":605},[956],{"type":420,"value":957},"  // 4. 执行 j = i\n",{"type":415,"tag":452,"props":959,"children":961},{"class":454,"line":960},11,[962,967,972,976,981],{"type":415,"tag":452,"props":963,"children":964},{"style":667},[965],{"type":420,"value":966},"  let",{"type":415,"tag":452,"props":968,"children":969},{"style":717},[970],{"type":420,"value":971}," res",{"type":415,"tag":452,"props":973,"children":974},{"style":679},[975],{"type":420,"value":682},{"type":415,"tag":452,"props":977,"children":978},{"style":690},[979],{"type":420,"value":980}," []",{"type":415,"tag":452,"props":982,"children":983},{"style":807},[984],{"type":420,"value":810},{"type":415,"tag":452,"props":986,"children":988},{"class":454,"line":987},12,[989,993,998,1002,1006,1010,1015,1020,1026],{"type":415,"tag":452,"props":990,"children":991},{"style":667},[992],{"type":420,"value":966},{"type":415,"tag":452,"props":994,"children":995},{"style":717},[996],{"type":420,"value":997}," i",{"type":415,"tag":452,"props":999,"children":1000},{"style":679},[1001],{"type":420,"value":682},{"type":415,"tag":452,"props":1003,"children":1004},{"style":717},[1005],{"type":420,"value":720},{"type":415,"tag":452,"props":1007,"children":1008},{"style":723},[1009],{"type":420,"value":726},{"type":415,"tag":452,"props":1011,"children":1012},{"style":690},[1013],{"type":420,"value":1014},"length ",{"type":415,"tag":452,"props":1016,"children":1017},{"style":679},[1018],{"type":420,"value":1019},"-",{"type":415,"tag":452,"props":1021,"children":1023},{"style":1022},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[1024],{"type":420,"value":1025}," 1",{"type":415,"tag":452,"props":1027,"children":1028},{"style":807},[1029],{"type":420,"value":810},{"type":415,"tag":452,"props":1031,"children":1033},{"class":454,"line":1032},13,[1034,1038,1043,1047,1051],{"type":415,"tag":452,"props":1035,"children":1036},{"style":667},[1037],{"type":420,"value":966},{"type":415,"tag":452,"props":1039,"children":1040},{"style":717},[1041],{"type":420,"value":1042}," j",{"type":415,"tag":452,"props":1044,"children":1045},{"style":679},[1046],{"type":420,"value":682},{"type":415,"tag":452,"props":1048,"children":1049},{"style":717},[1050],{"type":420,"value":997},{"type":415,"tag":452,"props":1052,"children":1053},{"style":807},[1054],{"type":420,"value":810},{"type":415,"tag":452,"props":1056,"children":1058},{"class":454,"line":1057},14,[1059,1064,1068,1073,1078,1083],{"type":415,"tag":452,"props":1060,"children":1061},{"style":711},[1062],{"type":420,"value":1063},"  while",{"type":415,"tag":452,"props":1065,"children":1066},{"style":690},[1067],{"type":420,"value":693},{"type":415,"tag":452,"props":1069,"children":1070},{"style":717},[1071],{"type":420,"value":1072},"i",{"type":415,"tag":452,"props":1074,"children":1075},{"style":679},[1076],{"type":420,"value":1077}," >=",{"type":415,"tag":452,"props":1079,"children":1080},{"style":1022},[1081],{"type":420,"value":1082}," 0",{"type":415,"tag":452,"props":1084,"children":1085},{"style":690},[1086],{"type":420,"value":704},{"type":415,"tag":452,"props":1088,"children":1090},{"class":454,"line":1089},15,[1091,1096,1100,1104,1108,1112,1117,1121,1126,1130,1135,1140,1145,1150,1154,1159,1164],{"type":415,"tag":452,"props":1092,"children":1093},{"style":711},[1094],{"type":420,"value":1095},"    while",{"type":415,"tag":452,"props":1097,"children":1098},{"style":690},[1099],{"type":420,"value":693},{"type":415,"tag":452,"props":1101,"children":1102},{"style":717},[1103],{"type":420,"value":1072},{"type":415,"tag":452,"props":1105,"children":1106},{"style":679},[1107],{"type":420,"value":1077},{"type":415,"tag":452,"props":1109,"children":1110},{"style":1022},[1111],{"type":420,"value":1082},{"type":415,"tag":452,"props":1113,"children":1114},{"style":679},[1115],{"type":420,"value":1116}," &&",{"type":415,"tag":452,"props":1118,"children":1119},{"style":717},[1120],{"type":420,"value":720},{"type":415,"tag":452,"props":1122,"children":1123},{"style":690},[1124],{"type":420,"value":1125},"[",{"type":415,"tag":452,"props":1127,"children":1128},{"style":717},[1129],{"type":420,"value":1072},{"type":415,"tag":452,"props":1131,"children":1132},{"style":690},[1133],{"type":420,"value":1134},"] ",{"type":415,"tag":452,"props":1136,"children":1137},{"style":679},[1138],{"type":420,"value":1139},"!==",{"type":415,"tag":452,"props":1141,"children":1142},{"style":739},[1143],{"type":420,"value":1144}," \" \"",{"type":415,"tag":452,"props":1146,"children":1147},{"style":690},[1148],{"type":420,"value":1149},") ",{"type":415,"tag":452,"props":1151,"children":1152},{"style":717},[1153],{"type":420,"value":1072},{"type":415,"tag":452,"props":1155,"children":1156},{"style":679},[1157],{"type":420,"value":1158},"--",{"type":415,"tag":452,"props":1160,"children":1161},{"style":807},[1162],{"type":420,"value":1163},";",{"type":415,"tag":452,"props":1165,"children":1166},{"style":605},[1167],{"type":420,"value":1168}," // 搜索首个空格\n",{"type":415,"tag":452,"props":1170,"children":1172},{"class":454,"line":1171},16,[1173,1178,1182,1187,1191,1195,1199,1204,1208,1212,1217,1221,1226,1230,1234,1238,1243,1247],{"type":415,"tag":452,"props":1174,"children":1175},{"style":717},[1176],{"type":420,"value":1177},"    res",{"type":415,"tag":452,"props":1179,"children":1180},{"style":723},[1181],{"type":420,"value":726},{"type":415,"tag":452,"props":1183,"children":1184},{"style":673},[1185],{"type":420,"value":1186},"push",{"type":415,"tag":452,"props":1188,"children":1189},{"style":690},[1190],{"type":420,"value":736},{"type":415,"tag":452,"props":1192,"children":1193},{"style":717},[1194],{"type":420,"value":699},{"type":415,"tag":452,"props":1196,"children":1197},{"style":723},[1198],{"type":420,"value":726},{"type":415,"tag":452,"props":1200,"children":1201},{"style":673},[1202],{"type":420,"value":1203},"substring",{"type":415,"tag":452,"props":1205,"children":1206},{"style":690},[1207],{"type":420,"value":736},{"type":415,"tag":452,"props":1209,"children":1210},{"style":717},[1211],{"type":420,"value":1072},{"type":415,"tag":452,"props":1213,"children":1214},{"style":679},[1215],{"type":420,"value":1216}," +",{"type":415,"tag":452,"props":1218,"children":1219},{"style":1022},[1220],{"type":420,"value":1025},{"type":415,"tag":452,"props":1222,"children":1223},{"style":807},[1224],{"type":420,"value":1225},",",{"type":415,"tag":452,"props":1227,"children":1228},{"style":717},[1229],{"type":420,"value":1042},{"type":415,"tag":452,"props":1231,"children":1232},{"style":679},[1233],{"type":420,"value":1216},{"type":415,"tag":452,"props":1235,"children":1236},{"style":1022},[1237],{"type":420,"value":1025},{"type":415,"tag":452,"props":1239,"children":1240},{"style":690},[1241],{"type":420,"value":1242},"))",{"type":415,"tag":452,"props":1244,"children":1245},{"style":807},[1246],{"type":420,"value":1163},{"type":415,"tag":452,"props":1248,"children":1249},{"style":605},[1250],{"type":420,"value":1251}," // 添加单词\n",{"type":415,"tag":452,"props":1253,"children":1255},{"class":454,"line":1254},17,[1256,1260,1264,1268,1272,1276,1280,1284,1288,1292,1296,1301,1305,1309,1313,1317,1321],{"type":415,"tag":452,"props":1257,"children":1258},{"style":711},[1259],{"type":420,"value":1095},{"type":415,"tag":452,"props":1261,"children":1262},{"style":690},[1263],{"type":420,"value":693},{"type":415,"tag":452,"props":1265,"children":1266},{"style":717},[1267],{"type":420,"value":1072},{"type":415,"tag":452,"props":1269,"children":1270},{"style":679},[1271],{"type":420,"value":1077},{"type":415,"tag":452,"props":1273,"children":1274},{"style":1022},[1275],{"type":420,"value":1082},{"type":415,"tag":452,"props":1277,"children":1278},{"style":679},[1279],{"type":420,"value":1116},{"type":415,"tag":452,"props":1281,"children":1282},{"style":717},[1283],{"type":420,"value":720},{"type":415,"tag":452,"props":1285,"children":1286},{"style":690},[1287],{"type":420,"value":1125},{"type":415,"tag":452,"props":1289,"children":1290},{"style":717},[1291],{"type":420,"value":1072},{"type":415,"tag":452,"props":1293,"children":1294},{"style":690},[1295],{"type":420,"value":1134},{"type":415,"tag":452,"props":1297,"children":1298},{"style":679},[1299],{"type":420,"value":1300},"===",{"type":415,"tag":452,"props":1302,"children":1303},{"style":739},[1304],{"type":420,"value":1144},{"type":415,"tag":452,"props":1306,"children":1307},{"style":690},[1308],{"type":420,"value":1149},{"type":415,"tag":452,"props":1310,"children":1311},{"style":717},[1312],{"type":420,"value":1072},{"type":415,"tag":452,"props":1314,"children":1315},{"style":679},[1316],{"type":420,"value":1158},{"type":415,"tag":452,"props":1318,"children":1319},{"style":807},[1320],{"type":420,"value":1163},{"type":415,"tag":452,"props":1322,"children":1323},{"style":605},[1324],{"type":420,"value":1325}," // 跳过单词间空格\n",{"type":415,"tag":452,"props":1327,"children":1329},{"class":454,"line":1328},18,[1330,1335,1339,1343,1347],{"type":415,"tag":452,"props":1331,"children":1332},{"style":717},[1333],{"type":420,"value":1334},"    j",{"type":415,"tag":452,"props":1336,"children":1337},{"style":679},[1338],{"type":420,"value":682},{"type":415,"tag":452,"props":1340,"children":1341},{"style":717},[1342],{"type":420,"value":997},{"type":415,"tag":452,"props":1344,"children":1345},{"style":807},[1346],{"type":420,"value":1163},{"type":415,"tag":452,"props":1348,"children":1349},{"style":605},[1350],{"type":420,"value":1351}," // 指针移动，指向下个单词的尾字符\n",{"type":415,"tag":452,"props":1353,"children":1355},{"class":454,"line":1354},19,[1356],{"type":415,"tag":452,"props":1357,"children":1358},{"style":690},[1359],{"type":420,"value":1360},"  }\n",{"type":415,"tag":452,"props":1362,"children":1364},{"class":454,"line":1363},20,[1365,1369,1373,1377,1381,1385,1389,1393,1397,1402,1406],{"type":415,"tag":452,"props":1366,"children":1367},{"style":711},[1368],{"type":420,"value":714},{"type":415,"tag":452,"props":1370,"children":1371},{"style":717},[1372],{"type":420,"value":971},{"type":415,"tag":452,"props":1374,"children":1375},{"style":723},[1376],{"type":420,"value":726},{"type":415,"tag":452,"props":1378,"children":1379},{"style":673},[1380],{"type":420,"value":792},{"type":415,"tag":452,"props":1382,"children":1383},{"style":690},[1384],{"type":420,"value":736},{"type":415,"tag":452,"props":1386,"children":1387},{"style":739},[1388],{"type":420,"value":742},{"type":415,"tag":452,"props":1390,"children":1391},{"style":690},[1392],{"type":420,"value":747},{"type":415,"tag":452,"props":1394,"children":1395},{"style":723},[1396],{"type":420,"value":726},{"type":415,"tag":452,"props":1398,"children":1399},{"style":673},[1400],{"type":420,"value":1401},"trim",{"type":415,"tag":452,"props":1403,"children":1404},{"style":690},[1405],{"type":420,"value":783},{"type":415,"tag":452,"props":1407,"children":1408},{"style":807},[1409],{"type":420,"value":810},{"type":415,"tag":452,"props":1411,"children":1413},{"class":454,"line":1412},21,[1414,1418],{"type":415,"tag":452,"props":1415,"children":1416},{"style":690},[1417],{"type":420,"value":819},{"type":415,"tag":452,"props":1419,"children":1420},{"style":807},[1421],{"type":420,"value":810},{"type":415,"tag":1423,"props":1424,"children":1425},"style",{},[1426],{"type":420,"value":1427},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":408,"searchDepth":663,"depth":663,"links":1429},[1430,1431],{"id":577,"depth":464,"text":577},{"id":582,"depth":464,"text":582,"children":1432},[1433,1434],{"id":588,"depth":501,"text":588},{"id":826,"depth":501,"text":826},"markdown","content:1.algorithm:3.leetcode:151.reverse-words-in-a-string.md","content","1.algorithm/3.leetcode/151.reverse-words-in-a-string.md","md",[1441,1443],{"_path":146,"title":145,"description":1442},"请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：",{"_path":152,"title":151,"description":1444},"已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：",1713320362746]