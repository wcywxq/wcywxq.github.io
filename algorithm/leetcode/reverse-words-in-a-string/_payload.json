[{"data":1,"prerenderedAt":1438},["Reactive",2],{"navigation":3,"/algorithm/leetcode/reverse-words-in-a-string":398,"/algorithm/leetcode/reverse-words-in-a-string-surround":1433},[4,237,265,384],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR 169. 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR 187. 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数相加","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,377],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,347,350,353,356,359,362,365,368,371,374],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":348,"_path":349},"倒计时","/frontend-code-assessment/scene/countdown",{"title":351,"_path":352},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":354,"_path":355},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":357,"_path":358},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":360,"_path":361},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":363,"_path":364},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":366,"_path":367},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":369,"_path":370},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":372,"_path":373},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":375,"_path":376},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":378,"_path":379,"children":380},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[381],{"title":382,"_path":383},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":385,"_path":386,"children":387},"后端语言","/backend-languages",[388],{"title":389,"_path":390,"children":391},"Python","/backend-languages/python",[392,395],{"title":393,"_path":394},"基础","/backend-languages/python/base",{"title":396,"_path":397},"函数","/backend-languages/python/function",{"_path":149,"_dir":399,"_draft":400,"_partial":400,"_locale":401,"title":148,"description":402,"url":403,"body":404,"_type":1428,"_id":1429,"_source":1430,"_file":1431,"_extension":1432},"leetcode",false,"","给你一个字符串 s ，请你反转字符串中 单词 的顺序。","https://leetcode.cn/problems/reverse-words-in-a-string",{"type":405,"children":406,"toc":1421},"root",[407,414,419,424,429,434,464,469,501,506,537,542,562,567,573,578,584,817,822,1415],{"type":408,"tag":409,"props":410,"children":411},"element","p",{},[412],{"type":413,"value":402},"text",{"type":408,"tag":409,"props":415,"children":416},{},[417],{"type":413,"value":418},"单词 是由非空格字符组成的字符串。s 中使用至少一个空格将字符串中的 单词 分隔开。",{"type":408,"tag":409,"props":420,"children":421},{},[422],{"type":413,"value":423},"返回 单词 顺序颠倒且 单词 之间用单个空格连接的结果字符串。",{"type":408,"tag":409,"props":425,"children":426},{},[427],{"type":413,"value":428},"注意：输入字符串 s 中可能会存在前导空格、尾随空格或者单词间的多个空格。返回的结果字符串中，单词间应当仅用单个空格分隔，且不包含任何额外的空格。",{"type":408,"tag":409,"props":430,"children":431},{},[432],{"type":413,"value":433},"示例 1：",{"type":408,"tag":435,"props":436,"children":439},"pre",{"className":437,"code":438,"language":413,"meta":401,"style":401},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：s = \"the sky is blue\"\n输出：\"blue is sky the\"\n",[440],{"type":408,"tag":441,"props":442,"children":443},"code",{"__ignoreMap":401},[444,455],{"type":408,"tag":445,"props":446,"children":449},"span",{"class":447,"line":448},"line",1,[450],{"type":408,"tag":445,"props":451,"children":452},{},[453],{"type":413,"value":454},"输入：s = \"the sky is blue\"\n",{"type":408,"tag":445,"props":456,"children":458},{"class":447,"line":457},2,[459],{"type":408,"tag":445,"props":460,"children":461},{},[462],{"type":413,"value":463},"输出：\"blue is sky the\"\n",{"type":408,"tag":409,"props":465,"children":466},{},[467],{"type":413,"value":468},"示例 2：",{"type":408,"tag":435,"props":470,"children":472},{"className":437,"code":471,"language":413,"meta":401,"style":401},"输入：s = \" hello world \"\n输出：\"world hello\"\n解释：反转后的字符串中不能存在前导空格和尾随空格。\n",[473],{"type":408,"tag":441,"props":474,"children":475},{"__ignoreMap":401},[476,484,492],{"type":408,"tag":445,"props":477,"children":478},{"class":447,"line":448},[479],{"type":408,"tag":445,"props":480,"children":481},{},[482],{"type":413,"value":483},"输入：s = \" hello world \"\n",{"type":408,"tag":445,"props":485,"children":486},{"class":447,"line":457},[487],{"type":408,"tag":445,"props":488,"children":489},{},[490],{"type":413,"value":491},"输出：\"world hello\"\n",{"type":408,"tag":445,"props":493,"children":495},{"class":447,"line":494},3,[496],{"type":408,"tag":445,"props":497,"children":498},{},[499],{"type":413,"value":500},"解释：反转后的字符串中不能存在前导空格和尾随空格。\n",{"type":408,"tag":409,"props":502,"children":503},{},[504],{"type":413,"value":505},"示例 3：",{"type":408,"tag":435,"props":507,"children":509},{"className":437,"code":508,"language":413,"meta":401,"style":401},"输入：s = \"a good example\"\n输出：\"example good a\"\n解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",[510],{"type":408,"tag":441,"props":511,"children":512},{"__ignoreMap":401},[513,521,529],{"type":408,"tag":445,"props":514,"children":515},{"class":447,"line":448},[516],{"type":408,"tag":445,"props":517,"children":518},{},[519],{"type":413,"value":520},"输入：s = \"a good example\"\n",{"type":408,"tag":445,"props":522,"children":523},{"class":447,"line":457},[524],{"type":408,"tag":445,"props":525,"children":526},{},[527],{"type":413,"value":528},"输出：\"example good a\"\n",{"type":408,"tag":445,"props":530,"children":531},{"class":447,"line":494},[532],{"type":408,"tag":445,"props":533,"children":534},{},[535],{"type":413,"value":536},"解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",{"type":408,"tag":409,"props":538,"children":539},{},[540],{"type":413,"value":541},"提示：",{"type":408,"tag":543,"props":544,"children":545},"ul",{},[546,552,557],{"type":408,"tag":547,"props":548,"children":549},"li",{},[550],{"type":413,"value":551},"1 \u003C= s.length \u003C= 10^4",{"type":408,"tag":547,"props":553,"children":554},{},[555],{"type":413,"value":556},"s 包含英文大小写字母、数字和空格 ' '",{"type":408,"tag":547,"props":558,"children":559},{},[560],{"type":413,"value":561},"s 中 至少存在一个 单词",{"type":408,"tag":409,"props":563,"children":564},{},[565],{"type":413,"value":566},"进阶：如果字符串在你使用的编程语言中是一种可变数据类型，请尝试使用 O(1) 额外空间复杂度的 原地 解法。",{"type":408,"tag":568,"props":569,"children":571},"h2",{"id":570},"解题思路",[572],{"type":413,"value":570},{"type":408,"tag":568,"props":574,"children":576},{"id":575},"实现",[577],{"type":413,"value":575},{"type":408,"tag":579,"props":580,"children":582},"h3",{"id":581},"语言特性",[583],{"type":413,"value":581},{"type":408,"tag":435,"props":585,"children":589},{"className":586,"code":587,"language":588,"meta":401,"style":401},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  return s.split(\" \").filter(Boolean).reverse().join(\" \");\n};\n","js",[590],{"type":408,"tag":441,"props":591,"children":592},{"__ignoreMap":401},[593,602,628,645,654,698,804],{"type":408,"tag":445,"props":594,"children":595},{"class":447,"line":448},[596],{"type":408,"tag":445,"props":597,"children":599},{"style":598},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[600],{"type":413,"value":601},"/**\n",{"type":408,"tag":445,"props":603,"children":604},{"class":447,"line":457},[605,610,616,622],{"type":408,"tag":445,"props":606,"children":607},{"style":598},[608],{"type":413,"value":609}," * ",{"type":408,"tag":445,"props":611,"children":613},{"style":612},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[614],{"type":413,"value":615},"@param",{"type":408,"tag":445,"props":617,"children":619},{"style":618},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[620],{"type":413,"value":621}," {string}",{"type":408,"tag":445,"props":623,"children":625},{"style":624},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[626],{"type":413,"value":627}," s\n",{"type":408,"tag":445,"props":629,"children":630},{"class":447,"line":494},[631,635,640],{"type":408,"tag":445,"props":632,"children":633},{"style":598},[634],{"type":413,"value":609},{"type":408,"tag":445,"props":636,"children":637},{"style":612},[638],{"type":413,"value":639},"@return",{"type":408,"tag":445,"props":641,"children":642},{"style":618},[643],{"type":413,"value":644}," {string}\n",{"type":408,"tag":445,"props":646,"children":648},{"class":447,"line":647},4,[649],{"type":408,"tag":445,"props":650,"children":651},{"style":598},[652],{"type":413,"value":653}," */\n",{"type":408,"tag":445,"props":655,"children":657},{"class":447,"line":656},5,[658,664,670,676,681,687,693],{"type":408,"tag":445,"props":659,"children":661},{"style":660},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[662],{"type":413,"value":663},"var",{"type":408,"tag":445,"props":665,"children":667},{"style":666},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[668],{"type":413,"value":669}," reverseWords",{"type":408,"tag":445,"props":671,"children":673},{"style":672},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[674],{"type":413,"value":675}," =",{"type":408,"tag":445,"props":677,"children":678},{"style":660},[679],{"type":413,"value":680}," function",{"type":408,"tag":445,"props":682,"children":684},{"style":683},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[685],{"type":413,"value":686}," (",{"type":408,"tag":445,"props":688,"children":690},{"style":689},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[691],{"type":413,"value":692},"s",{"type":408,"tag":445,"props":694,"children":695},{"style":683},[696],{"type":413,"value":697},") {\n",{"type":408,"tag":445,"props":699,"children":701},{"class":447,"line":700},6,[702,708,714,720,725,730,736,741,745,750,754,759,763,767,772,777,781,786,790,794,798],{"type":408,"tag":445,"props":703,"children":705},{"style":704},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[706],{"type":413,"value":707},"  return",{"type":408,"tag":445,"props":709,"children":711},{"style":710},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[712],{"type":413,"value":713}," s",{"type":408,"tag":445,"props":715,"children":717},{"style":716},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[718],{"type":413,"value":719},".",{"type":408,"tag":445,"props":721,"children":722},{"style":666},[723],{"type":413,"value":724},"split",{"type":408,"tag":445,"props":726,"children":727},{"style":683},[728],{"type":413,"value":729},"(",{"type":408,"tag":445,"props":731,"children":733},{"style":732},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[734],{"type":413,"value":735},"\" \"",{"type":408,"tag":445,"props":737,"children":738},{"style":683},[739],{"type":413,"value":740},")",{"type":408,"tag":445,"props":742,"children":743},{"style":716},[744],{"type":413,"value":719},{"type":408,"tag":445,"props":746,"children":747},{"style":666},[748],{"type":413,"value":749},"filter",{"type":408,"tag":445,"props":751,"children":752},{"style":683},[753],{"type":413,"value":729},{"type":408,"tag":445,"props":755,"children":756},{"style":710},[757],{"type":413,"value":758},"Boolean",{"type":408,"tag":445,"props":760,"children":761},{"style":683},[762],{"type":413,"value":740},{"type":408,"tag":445,"props":764,"children":765},{"style":716},[766],{"type":413,"value":719},{"type":408,"tag":445,"props":768,"children":769},{"style":666},[770],{"type":413,"value":771},"reverse",{"type":408,"tag":445,"props":773,"children":774},{"style":683},[775],{"type":413,"value":776},"()",{"type":408,"tag":445,"props":778,"children":779},{"style":716},[780],{"type":413,"value":719},{"type":408,"tag":445,"props":782,"children":783},{"style":666},[784],{"type":413,"value":785},"join",{"type":408,"tag":445,"props":787,"children":788},{"style":683},[789],{"type":413,"value":729},{"type":408,"tag":445,"props":791,"children":792},{"style":732},[793],{"type":413,"value":735},{"type":408,"tag":445,"props":795,"children":796},{"style":683},[797],{"type":413,"value":740},{"type":408,"tag":445,"props":799,"children":801},{"style":800},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[802],{"type":413,"value":803},";\n",{"type":408,"tag":445,"props":805,"children":807},{"class":447,"line":806},7,[808,813],{"type":408,"tag":445,"props":809,"children":810},{"style":683},[811],{"type":413,"value":812},"}",{"type":408,"tag":445,"props":814,"children":815},{"style":800},[816],{"type":413,"value":803},{"type":408,"tag":579,"props":818,"children":820},{"id":819},"双指针",[821],{"type":413,"value":819},{"type":408,"tag":435,"props":823,"children":825},{"className":586,"code":824,"language":588,"meta":401,"style":401},"/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  // 倒序遍历字符串\n  // 1. 索引 i 从右向左搜索首个空格\n  // 2. 添加单词 s[i + 1, j + 1] 到 res\n  // 3. 索引 i 绕过两个单词间所有空格\n  // 4. 执行 j = i\n  let res = [];\n  let i = s.length - 1;\n  let j = i;\n  while (i >= 0) {\n    while (i >= 0 && s[i] !== \" \") i--; // 搜索首个空格\n    res.push(s.substring(i + 1, j + 1)); // 添加单词\n    while (i >= 0 && s[i] === \" \") i--; // 跳过单词间空格\n    j = i; // 指针移动，指向下个单词的尾字符\n  }\n  return res.join(\" \").trim();\n};\n",[826],{"type":408,"tag":441,"props":827,"children":828},{"__ignoreMap":401},[829,836,855,870,877,908,916,924,933,942,951,978,1023,1048,1080,1162,1245,1319,1345,1354,1403],{"type":408,"tag":445,"props":830,"children":831},{"class":447,"line":448},[832],{"type":408,"tag":445,"props":833,"children":834},{"style":598},[835],{"type":413,"value":601},{"type":408,"tag":445,"props":837,"children":838},{"class":447,"line":457},[839,843,847,851],{"type":408,"tag":445,"props":840,"children":841},{"style":598},[842],{"type":413,"value":609},{"type":408,"tag":445,"props":844,"children":845},{"style":612},[846],{"type":413,"value":615},{"type":408,"tag":445,"props":848,"children":849},{"style":618},[850],{"type":413,"value":621},{"type":408,"tag":445,"props":852,"children":853},{"style":624},[854],{"type":413,"value":627},{"type":408,"tag":445,"props":856,"children":857},{"class":447,"line":494},[858,862,866],{"type":408,"tag":445,"props":859,"children":860},{"style":598},[861],{"type":413,"value":609},{"type":408,"tag":445,"props":863,"children":864},{"style":612},[865],{"type":413,"value":639},{"type":408,"tag":445,"props":867,"children":868},{"style":618},[869],{"type":413,"value":644},{"type":408,"tag":445,"props":871,"children":872},{"class":447,"line":647},[873],{"type":408,"tag":445,"props":874,"children":875},{"style":598},[876],{"type":413,"value":653},{"type":408,"tag":445,"props":878,"children":879},{"class":447,"line":656},[880,884,888,892,896,900,904],{"type":408,"tag":445,"props":881,"children":882},{"style":660},[883],{"type":413,"value":663},{"type":408,"tag":445,"props":885,"children":886},{"style":666},[887],{"type":413,"value":669},{"type":408,"tag":445,"props":889,"children":890},{"style":672},[891],{"type":413,"value":675},{"type":408,"tag":445,"props":893,"children":894},{"style":660},[895],{"type":413,"value":680},{"type":408,"tag":445,"props":897,"children":898},{"style":683},[899],{"type":413,"value":686},{"type":408,"tag":445,"props":901,"children":902},{"style":689},[903],{"type":413,"value":692},{"type":408,"tag":445,"props":905,"children":906},{"style":683},[907],{"type":413,"value":697},{"type":408,"tag":445,"props":909,"children":910},{"class":447,"line":700},[911],{"type":408,"tag":445,"props":912,"children":913},{"style":598},[914],{"type":413,"value":915},"  // 倒序遍历字符串\n",{"type":408,"tag":445,"props":917,"children":918},{"class":447,"line":806},[919],{"type":408,"tag":445,"props":920,"children":921},{"style":598},[922],{"type":413,"value":923},"  // 1. 索引 i 从右向左搜索首个空格\n",{"type":408,"tag":445,"props":925,"children":927},{"class":447,"line":926},8,[928],{"type":408,"tag":445,"props":929,"children":930},{"style":598},[931],{"type":413,"value":932},"  // 2. 添加单词 s[i + 1, j + 1] 到 res\n",{"type":408,"tag":445,"props":934,"children":936},{"class":447,"line":935},9,[937],{"type":408,"tag":445,"props":938,"children":939},{"style":598},[940],{"type":413,"value":941},"  // 3. 索引 i 绕过两个单词间所有空格\n",{"type":408,"tag":445,"props":943,"children":945},{"class":447,"line":944},10,[946],{"type":408,"tag":445,"props":947,"children":948},{"style":598},[949],{"type":413,"value":950},"  // 4. 执行 j = i\n",{"type":408,"tag":445,"props":952,"children":954},{"class":447,"line":953},11,[955,960,965,969,974],{"type":408,"tag":445,"props":956,"children":957},{"style":660},[958],{"type":413,"value":959},"  let",{"type":408,"tag":445,"props":961,"children":962},{"style":710},[963],{"type":413,"value":964}," res",{"type":408,"tag":445,"props":966,"children":967},{"style":672},[968],{"type":413,"value":675},{"type":408,"tag":445,"props":970,"children":971},{"style":683},[972],{"type":413,"value":973}," []",{"type":408,"tag":445,"props":975,"children":976},{"style":800},[977],{"type":413,"value":803},{"type":408,"tag":445,"props":979,"children":981},{"class":447,"line":980},12,[982,986,991,995,999,1003,1008,1013,1019],{"type":408,"tag":445,"props":983,"children":984},{"style":660},[985],{"type":413,"value":959},{"type":408,"tag":445,"props":987,"children":988},{"style":710},[989],{"type":413,"value":990}," i",{"type":408,"tag":445,"props":992,"children":993},{"style":672},[994],{"type":413,"value":675},{"type":408,"tag":445,"props":996,"children":997},{"style":710},[998],{"type":413,"value":713},{"type":408,"tag":445,"props":1000,"children":1001},{"style":716},[1002],{"type":413,"value":719},{"type":408,"tag":445,"props":1004,"children":1005},{"style":683},[1006],{"type":413,"value":1007},"length ",{"type":408,"tag":445,"props":1009,"children":1010},{"style":672},[1011],{"type":413,"value":1012},"-",{"type":408,"tag":445,"props":1014,"children":1016},{"style":1015},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[1017],{"type":413,"value":1018}," 1",{"type":408,"tag":445,"props":1020,"children":1021},{"style":800},[1022],{"type":413,"value":803},{"type":408,"tag":445,"props":1024,"children":1026},{"class":447,"line":1025},13,[1027,1031,1036,1040,1044],{"type":408,"tag":445,"props":1028,"children":1029},{"style":660},[1030],{"type":413,"value":959},{"type":408,"tag":445,"props":1032,"children":1033},{"style":710},[1034],{"type":413,"value":1035}," j",{"type":408,"tag":445,"props":1037,"children":1038},{"style":672},[1039],{"type":413,"value":675},{"type":408,"tag":445,"props":1041,"children":1042},{"style":710},[1043],{"type":413,"value":990},{"type":408,"tag":445,"props":1045,"children":1046},{"style":800},[1047],{"type":413,"value":803},{"type":408,"tag":445,"props":1049,"children":1051},{"class":447,"line":1050},14,[1052,1057,1061,1066,1071,1076],{"type":408,"tag":445,"props":1053,"children":1054},{"style":704},[1055],{"type":413,"value":1056},"  while",{"type":408,"tag":445,"props":1058,"children":1059},{"style":683},[1060],{"type":413,"value":686},{"type":408,"tag":445,"props":1062,"children":1063},{"style":710},[1064],{"type":413,"value":1065},"i",{"type":408,"tag":445,"props":1067,"children":1068},{"style":672},[1069],{"type":413,"value":1070}," >=",{"type":408,"tag":445,"props":1072,"children":1073},{"style":1015},[1074],{"type":413,"value":1075}," 0",{"type":408,"tag":445,"props":1077,"children":1078},{"style":683},[1079],{"type":413,"value":697},{"type":408,"tag":445,"props":1081,"children":1083},{"class":447,"line":1082},15,[1084,1089,1093,1097,1101,1105,1110,1114,1119,1123,1128,1133,1138,1143,1147,1152,1157],{"type":408,"tag":445,"props":1085,"children":1086},{"style":704},[1087],{"type":413,"value":1088},"    while",{"type":408,"tag":445,"props":1090,"children":1091},{"style":683},[1092],{"type":413,"value":686},{"type":408,"tag":445,"props":1094,"children":1095},{"style":710},[1096],{"type":413,"value":1065},{"type":408,"tag":445,"props":1098,"children":1099},{"style":672},[1100],{"type":413,"value":1070},{"type":408,"tag":445,"props":1102,"children":1103},{"style":1015},[1104],{"type":413,"value":1075},{"type":408,"tag":445,"props":1106,"children":1107},{"style":672},[1108],{"type":413,"value":1109}," &&",{"type":408,"tag":445,"props":1111,"children":1112},{"style":710},[1113],{"type":413,"value":713},{"type":408,"tag":445,"props":1115,"children":1116},{"style":683},[1117],{"type":413,"value":1118},"[",{"type":408,"tag":445,"props":1120,"children":1121},{"style":710},[1122],{"type":413,"value":1065},{"type":408,"tag":445,"props":1124,"children":1125},{"style":683},[1126],{"type":413,"value":1127},"] ",{"type":408,"tag":445,"props":1129,"children":1130},{"style":672},[1131],{"type":413,"value":1132},"!==",{"type":408,"tag":445,"props":1134,"children":1135},{"style":732},[1136],{"type":413,"value":1137}," \" \"",{"type":408,"tag":445,"props":1139,"children":1140},{"style":683},[1141],{"type":413,"value":1142},") ",{"type":408,"tag":445,"props":1144,"children":1145},{"style":710},[1146],{"type":413,"value":1065},{"type":408,"tag":445,"props":1148,"children":1149},{"style":672},[1150],{"type":413,"value":1151},"--",{"type":408,"tag":445,"props":1153,"children":1154},{"style":800},[1155],{"type":413,"value":1156},";",{"type":408,"tag":445,"props":1158,"children":1159},{"style":598},[1160],{"type":413,"value":1161}," // 搜索首个空格\n",{"type":408,"tag":445,"props":1163,"children":1165},{"class":447,"line":1164},16,[1166,1171,1175,1180,1184,1188,1192,1197,1201,1205,1210,1214,1219,1223,1227,1231,1236,1240],{"type":408,"tag":445,"props":1167,"children":1168},{"style":710},[1169],{"type":413,"value":1170},"    res",{"type":408,"tag":445,"props":1172,"children":1173},{"style":716},[1174],{"type":413,"value":719},{"type":408,"tag":445,"props":1176,"children":1177},{"style":666},[1178],{"type":413,"value":1179},"push",{"type":408,"tag":445,"props":1181,"children":1182},{"style":683},[1183],{"type":413,"value":729},{"type":408,"tag":445,"props":1185,"children":1186},{"style":710},[1187],{"type":413,"value":692},{"type":408,"tag":445,"props":1189,"children":1190},{"style":716},[1191],{"type":413,"value":719},{"type":408,"tag":445,"props":1193,"children":1194},{"style":666},[1195],{"type":413,"value":1196},"substring",{"type":408,"tag":445,"props":1198,"children":1199},{"style":683},[1200],{"type":413,"value":729},{"type":408,"tag":445,"props":1202,"children":1203},{"style":710},[1204],{"type":413,"value":1065},{"type":408,"tag":445,"props":1206,"children":1207},{"style":672},[1208],{"type":413,"value":1209}," +",{"type":408,"tag":445,"props":1211,"children":1212},{"style":1015},[1213],{"type":413,"value":1018},{"type":408,"tag":445,"props":1215,"children":1216},{"style":800},[1217],{"type":413,"value":1218},",",{"type":408,"tag":445,"props":1220,"children":1221},{"style":710},[1222],{"type":413,"value":1035},{"type":408,"tag":445,"props":1224,"children":1225},{"style":672},[1226],{"type":413,"value":1209},{"type":408,"tag":445,"props":1228,"children":1229},{"style":1015},[1230],{"type":413,"value":1018},{"type":408,"tag":445,"props":1232,"children":1233},{"style":683},[1234],{"type":413,"value":1235},"))",{"type":408,"tag":445,"props":1237,"children":1238},{"style":800},[1239],{"type":413,"value":1156},{"type":408,"tag":445,"props":1241,"children":1242},{"style":598},[1243],{"type":413,"value":1244}," // 添加单词\n",{"type":408,"tag":445,"props":1246,"children":1248},{"class":447,"line":1247},17,[1249,1253,1257,1261,1265,1269,1273,1277,1281,1285,1289,1294,1298,1302,1306,1310,1314],{"type":408,"tag":445,"props":1250,"children":1251},{"style":704},[1252],{"type":413,"value":1088},{"type":408,"tag":445,"props":1254,"children":1255},{"style":683},[1256],{"type":413,"value":686},{"type":408,"tag":445,"props":1258,"children":1259},{"style":710},[1260],{"type":413,"value":1065},{"type":408,"tag":445,"props":1262,"children":1263},{"style":672},[1264],{"type":413,"value":1070},{"type":408,"tag":445,"props":1266,"children":1267},{"style":1015},[1268],{"type":413,"value":1075},{"type":408,"tag":445,"props":1270,"children":1271},{"style":672},[1272],{"type":413,"value":1109},{"type":408,"tag":445,"props":1274,"children":1275},{"style":710},[1276],{"type":413,"value":713},{"type":408,"tag":445,"props":1278,"children":1279},{"style":683},[1280],{"type":413,"value":1118},{"type":408,"tag":445,"props":1282,"children":1283},{"style":710},[1284],{"type":413,"value":1065},{"type":408,"tag":445,"props":1286,"children":1287},{"style":683},[1288],{"type":413,"value":1127},{"type":408,"tag":445,"props":1290,"children":1291},{"style":672},[1292],{"type":413,"value":1293},"===",{"type":408,"tag":445,"props":1295,"children":1296},{"style":732},[1297],{"type":413,"value":1137},{"type":408,"tag":445,"props":1299,"children":1300},{"style":683},[1301],{"type":413,"value":1142},{"type":408,"tag":445,"props":1303,"children":1304},{"style":710},[1305],{"type":413,"value":1065},{"type":408,"tag":445,"props":1307,"children":1308},{"style":672},[1309],{"type":413,"value":1151},{"type":408,"tag":445,"props":1311,"children":1312},{"style":800},[1313],{"type":413,"value":1156},{"type":408,"tag":445,"props":1315,"children":1316},{"style":598},[1317],{"type":413,"value":1318}," // 跳过单词间空格\n",{"type":408,"tag":445,"props":1320,"children":1322},{"class":447,"line":1321},18,[1323,1328,1332,1336,1340],{"type":408,"tag":445,"props":1324,"children":1325},{"style":710},[1326],{"type":413,"value":1327},"    j",{"type":408,"tag":445,"props":1329,"children":1330},{"style":672},[1331],{"type":413,"value":675},{"type":408,"tag":445,"props":1333,"children":1334},{"style":710},[1335],{"type":413,"value":990},{"type":408,"tag":445,"props":1337,"children":1338},{"style":800},[1339],{"type":413,"value":1156},{"type":408,"tag":445,"props":1341,"children":1342},{"style":598},[1343],{"type":413,"value":1344}," // 指针移动，指向下个单词的尾字符\n",{"type":408,"tag":445,"props":1346,"children":1348},{"class":447,"line":1347},19,[1349],{"type":408,"tag":445,"props":1350,"children":1351},{"style":683},[1352],{"type":413,"value":1353},"  }\n",{"type":408,"tag":445,"props":1355,"children":1357},{"class":447,"line":1356},20,[1358,1362,1366,1370,1374,1378,1382,1386,1390,1395,1399],{"type":408,"tag":445,"props":1359,"children":1360},{"style":704},[1361],{"type":413,"value":707},{"type":408,"tag":445,"props":1363,"children":1364},{"style":710},[1365],{"type":413,"value":964},{"type":408,"tag":445,"props":1367,"children":1368},{"style":716},[1369],{"type":413,"value":719},{"type":408,"tag":445,"props":1371,"children":1372},{"style":666},[1373],{"type":413,"value":785},{"type":408,"tag":445,"props":1375,"children":1376},{"style":683},[1377],{"type":413,"value":729},{"type":408,"tag":445,"props":1379,"children":1380},{"style":732},[1381],{"type":413,"value":735},{"type":408,"tag":445,"props":1383,"children":1384},{"style":683},[1385],{"type":413,"value":740},{"type":408,"tag":445,"props":1387,"children":1388},{"style":716},[1389],{"type":413,"value":719},{"type":408,"tag":445,"props":1391,"children":1392},{"style":666},[1393],{"type":413,"value":1394},"trim",{"type":408,"tag":445,"props":1396,"children":1397},{"style":683},[1398],{"type":413,"value":776},{"type":408,"tag":445,"props":1400,"children":1401},{"style":800},[1402],{"type":413,"value":803},{"type":408,"tag":445,"props":1404,"children":1406},{"class":447,"line":1405},21,[1407,1411],{"type":408,"tag":445,"props":1408,"children":1409},{"style":683},[1410],{"type":413,"value":812},{"type":408,"tag":445,"props":1412,"children":1413},{"style":800},[1414],{"type":413,"value":803},{"type":408,"tag":1416,"props":1417,"children":1418},"style",{},[1419],{"type":413,"value":1420},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":401,"searchDepth":656,"depth":656,"links":1422},[1423,1424],{"id":570,"depth":457,"text":570},{"id":575,"depth":457,"text":575,"children":1425},[1426,1427],{"id":581,"depth":494,"text":581},{"id":819,"depth":494,"text":819},"markdown","content:1.algorithm:3.leetcode:151.reverse-words-in-a-string.md","content","1.algorithm/3.leetcode/151.reverse-words-in-a-string.md","md",[1434,1436],{"_path":146,"title":145,"description":1435},"请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：",{"_path":152,"title":151,"description":1437},"已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：",1713153294173]