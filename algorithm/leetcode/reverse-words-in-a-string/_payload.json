[{"data":1,"prerenderedAt":1464},["Reactive",2],{"navigation":3,"/algorithm/leetcode/reverse-words-in-a-string":424,"/algorithm/leetcode/reverse-words-in-a-string-surround":1459},[4,237,265,403,410],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,396],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"随机数","/frontend-code-assessment/scene/random-number",{"title":382,"_path":383},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":385,"_path":386},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":388,"_path":389},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":391,"_path":392},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":394,"_path":395},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":397,"_path":398,"children":399},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[400],{"title":401,"_path":402},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":404,"_path":405,"children":406},"项目","/pro",[407],{"title":408,"_path":409},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":411,"_path":412,"children":413},"后端语言","/backend-languages",[414],{"title":415,"_path":416,"children":417},"Python","/backend-languages/python",[418,421],{"title":419,"_path":420},"基础","/backend-languages/python/base",{"title":422,"_path":423},"函数","/backend-languages/python/function",{"_path":149,"_dir":425,"_draft":426,"_partial":426,"_locale":427,"title":148,"description":428,"url":429,"body":430,"_type":1454,"_id":1455,"_source":1456,"_file":1457,"_extension":1458},"leetcode",false,"","给你一个字符串 s ，请你反转字符串中 单词 的顺序。","https://leetcode.cn/problems/reverse-words-in-a-string",{"type":431,"children":432,"toc":1447},"root",[433,440,445,450,455,460,490,495,527,532,563,568,588,593,599,604,610,843,848,1441],{"type":434,"tag":435,"props":436,"children":437},"element","p",{},[438],{"type":439,"value":428},"text",{"type":434,"tag":435,"props":441,"children":442},{},[443],{"type":439,"value":444},"单词 是由非空格字符组成的字符串。s 中使用至少一个空格将字符串中的 单词 分隔开。",{"type":434,"tag":435,"props":446,"children":447},{},[448],{"type":439,"value":449},"返回 单词 顺序颠倒且 单词 之间用单个空格连接的结果字符串。",{"type":434,"tag":435,"props":451,"children":452},{},[453],{"type":439,"value":454},"注意：输入字符串 s 中可能会存在前导空格、尾随空格或者单词间的多个空格。返回的结果字符串中，单词间应当仅用单个空格分隔，且不包含任何额外的空格。",{"type":434,"tag":435,"props":456,"children":457},{},[458],{"type":439,"value":459},"示例 1：",{"type":434,"tag":461,"props":462,"children":465},"pre",{"className":463,"code":464,"language":439,"meta":427,"style":427},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：s = \"the sky is blue\"\n输出：\"blue is sky the\"\n",[466],{"type":434,"tag":467,"props":468,"children":469},"code",{"__ignoreMap":427},[470,481],{"type":434,"tag":471,"props":472,"children":475},"span",{"class":473,"line":474},"line",1,[476],{"type":434,"tag":471,"props":477,"children":478},{},[479],{"type":439,"value":480},"输入：s = \"the sky is blue\"\n",{"type":434,"tag":471,"props":482,"children":484},{"class":473,"line":483},2,[485],{"type":434,"tag":471,"props":486,"children":487},{},[488],{"type":439,"value":489},"输出：\"blue is sky the\"\n",{"type":434,"tag":435,"props":491,"children":492},{},[493],{"type":439,"value":494},"示例 2：",{"type":434,"tag":461,"props":496,"children":498},{"className":463,"code":497,"language":439,"meta":427,"style":427},"输入：s = \" hello world \"\n输出：\"world hello\"\n解释：反转后的字符串中不能存在前导空格和尾随空格。\n",[499],{"type":434,"tag":467,"props":500,"children":501},{"__ignoreMap":427},[502,510,518],{"type":434,"tag":471,"props":503,"children":504},{"class":473,"line":474},[505],{"type":434,"tag":471,"props":506,"children":507},{},[508],{"type":439,"value":509},"输入：s = \" hello world \"\n",{"type":434,"tag":471,"props":511,"children":512},{"class":473,"line":483},[513],{"type":434,"tag":471,"props":514,"children":515},{},[516],{"type":439,"value":517},"输出：\"world hello\"\n",{"type":434,"tag":471,"props":519,"children":521},{"class":473,"line":520},3,[522],{"type":434,"tag":471,"props":523,"children":524},{},[525],{"type":439,"value":526},"解释：反转后的字符串中不能存在前导空格和尾随空格。\n",{"type":434,"tag":435,"props":528,"children":529},{},[530],{"type":439,"value":531},"示例 3：",{"type":434,"tag":461,"props":533,"children":535},{"className":463,"code":534,"language":439,"meta":427,"style":427},"输入：s = \"a good example\"\n输出：\"example good a\"\n解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",[536],{"type":434,"tag":467,"props":537,"children":538},{"__ignoreMap":427},[539,547,555],{"type":434,"tag":471,"props":540,"children":541},{"class":473,"line":474},[542],{"type":434,"tag":471,"props":543,"children":544},{},[545],{"type":439,"value":546},"输入：s = \"a good example\"\n",{"type":434,"tag":471,"props":548,"children":549},{"class":473,"line":483},[550],{"type":434,"tag":471,"props":551,"children":552},{},[553],{"type":439,"value":554},"输出：\"example good a\"\n",{"type":434,"tag":471,"props":556,"children":557},{"class":473,"line":520},[558],{"type":434,"tag":471,"props":559,"children":560},{},[561],{"type":439,"value":562},"解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",{"type":434,"tag":435,"props":564,"children":565},{},[566],{"type":439,"value":567},"提示：",{"type":434,"tag":569,"props":570,"children":571},"ul",{},[572,578,583],{"type":434,"tag":573,"props":574,"children":575},"li",{},[576],{"type":439,"value":577},"1 \u003C= s.length \u003C= 10^4",{"type":434,"tag":573,"props":579,"children":580},{},[581],{"type":439,"value":582},"s 包含英文大小写字母、数字和空格 ' '",{"type":434,"tag":573,"props":584,"children":585},{},[586],{"type":439,"value":587},"s 中 至少存在一个 单词",{"type":434,"tag":435,"props":589,"children":590},{},[591],{"type":439,"value":592},"进阶：如果字符串在你使用的编程语言中是一种可变数据类型，请尝试使用 O(1) 额外空间复杂度的 原地 解法。",{"type":434,"tag":594,"props":595,"children":597},"h2",{"id":596},"解题思路",[598],{"type":439,"value":596},{"type":434,"tag":594,"props":600,"children":602},{"id":601},"实现",[603],{"type":439,"value":601},{"type":434,"tag":605,"props":606,"children":608},"h3",{"id":607},"语言特性",[609],{"type":439,"value":607},{"type":434,"tag":461,"props":611,"children":615},{"className":612,"code":613,"language":614,"meta":427,"style":427},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  return s.split(\" \").filter(Boolean).reverse().join(\" \");\n};\n","js",[616],{"type":434,"tag":467,"props":617,"children":618},{"__ignoreMap":427},[619,628,654,671,680,724,830],{"type":434,"tag":471,"props":620,"children":621},{"class":473,"line":474},[622],{"type":434,"tag":471,"props":623,"children":625},{"style":624},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[626],{"type":439,"value":627},"/**\n",{"type":434,"tag":471,"props":629,"children":630},{"class":473,"line":483},[631,636,642,648],{"type":434,"tag":471,"props":632,"children":633},{"style":624},[634],{"type":439,"value":635}," * ",{"type":434,"tag":471,"props":637,"children":639},{"style":638},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[640],{"type":439,"value":641},"@param",{"type":434,"tag":471,"props":643,"children":645},{"style":644},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[646],{"type":439,"value":647}," {string}",{"type":434,"tag":471,"props":649,"children":651},{"style":650},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[652],{"type":439,"value":653}," s\n",{"type":434,"tag":471,"props":655,"children":656},{"class":473,"line":520},[657,661,666],{"type":434,"tag":471,"props":658,"children":659},{"style":624},[660],{"type":439,"value":635},{"type":434,"tag":471,"props":662,"children":663},{"style":638},[664],{"type":439,"value":665},"@return",{"type":434,"tag":471,"props":667,"children":668},{"style":644},[669],{"type":439,"value":670}," {string}\n",{"type":434,"tag":471,"props":672,"children":674},{"class":473,"line":673},4,[675],{"type":434,"tag":471,"props":676,"children":677},{"style":624},[678],{"type":439,"value":679}," */\n",{"type":434,"tag":471,"props":681,"children":683},{"class":473,"line":682},5,[684,690,696,702,707,713,719],{"type":434,"tag":471,"props":685,"children":687},{"style":686},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[688],{"type":439,"value":689},"var",{"type":434,"tag":471,"props":691,"children":693},{"style":692},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[694],{"type":439,"value":695}," reverseWords",{"type":434,"tag":471,"props":697,"children":699},{"style":698},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[700],{"type":439,"value":701}," =",{"type":434,"tag":471,"props":703,"children":704},{"style":686},[705],{"type":439,"value":706}," function",{"type":434,"tag":471,"props":708,"children":710},{"style":709},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[711],{"type":439,"value":712}," (",{"type":434,"tag":471,"props":714,"children":716},{"style":715},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[717],{"type":439,"value":718},"s",{"type":434,"tag":471,"props":720,"children":721},{"style":709},[722],{"type":439,"value":723},") {\n",{"type":434,"tag":471,"props":725,"children":727},{"class":473,"line":726},6,[728,734,740,746,751,756,762,767,771,776,780,785,789,793,798,803,807,812,816,820,824],{"type":434,"tag":471,"props":729,"children":731},{"style":730},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[732],{"type":439,"value":733},"  return",{"type":434,"tag":471,"props":735,"children":737},{"style":736},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[738],{"type":439,"value":739}," s",{"type":434,"tag":471,"props":741,"children":743},{"style":742},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[744],{"type":439,"value":745},".",{"type":434,"tag":471,"props":747,"children":748},{"style":692},[749],{"type":439,"value":750},"split",{"type":434,"tag":471,"props":752,"children":753},{"style":709},[754],{"type":439,"value":755},"(",{"type":434,"tag":471,"props":757,"children":759},{"style":758},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[760],{"type":439,"value":761},"\" \"",{"type":434,"tag":471,"props":763,"children":764},{"style":709},[765],{"type":439,"value":766},")",{"type":434,"tag":471,"props":768,"children":769},{"style":742},[770],{"type":439,"value":745},{"type":434,"tag":471,"props":772,"children":773},{"style":692},[774],{"type":439,"value":775},"filter",{"type":434,"tag":471,"props":777,"children":778},{"style":709},[779],{"type":439,"value":755},{"type":434,"tag":471,"props":781,"children":782},{"style":736},[783],{"type":439,"value":784},"Boolean",{"type":434,"tag":471,"props":786,"children":787},{"style":709},[788],{"type":439,"value":766},{"type":434,"tag":471,"props":790,"children":791},{"style":742},[792],{"type":439,"value":745},{"type":434,"tag":471,"props":794,"children":795},{"style":692},[796],{"type":439,"value":797},"reverse",{"type":434,"tag":471,"props":799,"children":800},{"style":709},[801],{"type":439,"value":802},"()",{"type":434,"tag":471,"props":804,"children":805},{"style":742},[806],{"type":439,"value":745},{"type":434,"tag":471,"props":808,"children":809},{"style":692},[810],{"type":439,"value":811},"join",{"type":434,"tag":471,"props":813,"children":814},{"style":709},[815],{"type":439,"value":755},{"type":434,"tag":471,"props":817,"children":818},{"style":758},[819],{"type":439,"value":761},{"type":434,"tag":471,"props":821,"children":822},{"style":709},[823],{"type":439,"value":766},{"type":434,"tag":471,"props":825,"children":827},{"style":826},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[828],{"type":439,"value":829},";\n",{"type":434,"tag":471,"props":831,"children":833},{"class":473,"line":832},7,[834,839],{"type":434,"tag":471,"props":835,"children":836},{"style":709},[837],{"type":439,"value":838},"}",{"type":434,"tag":471,"props":840,"children":841},{"style":826},[842],{"type":439,"value":829},{"type":434,"tag":605,"props":844,"children":846},{"id":845},"双指针",[847],{"type":439,"value":845},{"type":434,"tag":461,"props":849,"children":851},{"className":612,"code":850,"language":614,"meta":427,"style":427},"/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  // 倒序遍历字符串\n  // 1. 索引 i 从右向左搜索首个空格\n  // 2. 添加单词 s[i + 1, j + 1] 到 res\n  // 3. 索引 i 绕过两个单词间所有空格\n  // 4. 执行 j = i\n  let res = [];\n  let i = s.length - 1;\n  let j = i;\n  while (i >= 0) {\n    while (i >= 0 && s[i] !== \" \") i--; // 搜索首个空格\n    res.push(s.substring(i + 1, j + 1)); // 添加单词\n    while (i >= 0 && s[i] === \" \") i--; // 跳过单词间空格\n    j = i; // 指针移动，指向下个单词的尾字符\n  }\n  return res.join(\" \").trim();\n};\n",[852],{"type":434,"tag":467,"props":853,"children":854},{"__ignoreMap":427},[855,862,881,896,903,934,942,950,959,968,977,1004,1049,1074,1106,1188,1271,1345,1371,1380,1429],{"type":434,"tag":471,"props":856,"children":857},{"class":473,"line":474},[858],{"type":434,"tag":471,"props":859,"children":860},{"style":624},[861],{"type":439,"value":627},{"type":434,"tag":471,"props":863,"children":864},{"class":473,"line":483},[865,869,873,877],{"type":434,"tag":471,"props":866,"children":867},{"style":624},[868],{"type":439,"value":635},{"type":434,"tag":471,"props":870,"children":871},{"style":638},[872],{"type":439,"value":641},{"type":434,"tag":471,"props":874,"children":875},{"style":644},[876],{"type":439,"value":647},{"type":434,"tag":471,"props":878,"children":879},{"style":650},[880],{"type":439,"value":653},{"type":434,"tag":471,"props":882,"children":883},{"class":473,"line":520},[884,888,892],{"type":434,"tag":471,"props":885,"children":886},{"style":624},[887],{"type":439,"value":635},{"type":434,"tag":471,"props":889,"children":890},{"style":638},[891],{"type":439,"value":665},{"type":434,"tag":471,"props":893,"children":894},{"style":644},[895],{"type":439,"value":670},{"type":434,"tag":471,"props":897,"children":898},{"class":473,"line":673},[899],{"type":434,"tag":471,"props":900,"children":901},{"style":624},[902],{"type":439,"value":679},{"type":434,"tag":471,"props":904,"children":905},{"class":473,"line":682},[906,910,914,918,922,926,930],{"type":434,"tag":471,"props":907,"children":908},{"style":686},[909],{"type":439,"value":689},{"type":434,"tag":471,"props":911,"children":912},{"style":692},[913],{"type":439,"value":695},{"type":434,"tag":471,"props":915,"children":916},{"style":698},[917],{"type":439,"value":701},{"type":434,"tag":471,"props":919,"children":920},{"style":686},[921],{"type":439,"value":706},{"type":434,"tag":471,"props":923,"children":924},{"style":709},[925],{"type":439,"value":712},{"type":434,"tag":471,"props":927,"children":928},{"style":715},[929],{"type":439,"value":718},{"type":434,"tag":471,"props":931,"children":932},{"style":709},[933],{"type":439,"value":723},{"type":434,"tag":471,"props":935,"children":936},{"class":473,"line":726},[937],{"type":434,"tag":471,"props":938,"children":939},{"style":624},[940],{"type":439,"value":941},"  // 倒序遍历字符串\n",{"type":434,"tag":471,"props":943,"children":944},{"class":473,"line":832},[945],{"type":434,"tag":471,"props":946,"children":947},{"style":624},[948],{"type":439,"value":949},"  // 1. 索引 i 从右向左搜索首个空格\n",{"type":434,"tag":471,"props":951,"children":953},{"class":473,"line":952},8,[954],{"type":434,"tag":471,"props":955,"children":956},{"style":624},[957],{"type":439,"value":958},"  // 2. 添加单词 s[i + 1, j + 1] 到 res\n",{"type":434,"tag":471,"props":960,"children":962},{"class":473,"line":961},9,[963],{"type":434,"tag":471,"props":964,"children":965},{"style":624},[966],{"type":439,"value":967},"  // 3. 索引 i 绕过两个单词间所有空格\n",{"type":434,"tag":471,"props":969,"children":971},{"class":473,"line":970},10,[972],{"type":434,"tag":471,"props":973,"children":974},{"style":624},[975],{"type":439,"value":976},"  // 4. 执行 j = i\n",{"type":434,"tag":471,"props":978,"children":980},{"class":473,"line":979},11,[981,986,991,995,1000],{"type":434,"tag":471,"props":982,"children":983},{"style":686},[984],{"type":439,"value":985},"  let",{"type":434,"tag":471,"props":987,"children":988},{"style":736},[989],{"type":439,"value":990}," res",{"type":434,"tag":471,"props":992,"children":993},{"style":698},[994],{"type":439,"value":701},{"type":434,"tag":471,"props":996,"children":997},{"style":709},[998],{"type":439,"value":999}," []",{"type":434,"tag":471,"props":1001,"children":1002},{"style":826},[1003],{"type":439,"value":829},{"type":434,"tag":471,"props":1005,"children":1007},{"class":473,"line":1006},12,[1008,1012,1017,1021,1025,1029,1034,1039,1045],{"type":434,"tag":471,"props":1009,"children":1010},{"style":686},[1011],{"type":439,"value":985},{"type":434,"tag":471,"props":1013,"children":1014},{"style":736},[1015],{"type":439,"value":1016}," i",{"type":434,"tag":471,"props":1018,"children":1019},{"style":698},[1020],{"type":439,"value":701},{"type":434,"tag":471,"props":1022,"children":1023},{"style":736},[1024],{"type":439,"value":739},{"type":434,"tag":471,"props":1026,"children":1027},{"style":742},[1028],{"type":439,"value":745},{"type":434,"tag":471,"props":1030,"children":1031},{"style":709},[1032],{"type":439,"value":1033},"length ",{"type":434,"tag":471,"props":1035,"children":1036},{"style":698},[1037],{"type":439,"value":1038},"-",{"type":434,"tag":471,"props":1040,"children":1042},{"style":1041},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[1043],{"type":439,"value":1044}," 1",{"type":434,"tag":471,"props":1046,"children":1047},{"style":826},[1048],{"type":439,"value":829},{"type":434,"tag":471,"props":1050,"children":1052},{"class":473,"line":1051},13,[1053,1057,1062,1066,1070],{"type":434,"tag":471,"props":1054,"children":1055},{"style":686},[1056],{"type":439,"value":985},{"type":434,"tag":471,"props":1058,"children":1059},{"style":736},[1060],{"type":439,"value":1061}," j",{"type":434,"tag":471,"props":1063,"children":1064},{"style":698},[1065],{"type":439,"value":701},{"type":434,"tag":471,"props":1067,"children":1068},{"style":736},[1069],{"type":439,"value":1016},{"type":434,"tag":471,"props":1071,"children":1072},{"style":826},[1073],{"type":439,"value":829},{"type":434,"tag":471,"props":1075,"children":1077},{"class":473,"line":1076},14,[1078,1083,1087,1092,1097,1102],{"type":434,"tag":471,"props":1079,"children":1080},{"style":730},[1081],{"type":439,"value":1082},"  while",{"type":434,"tag":471,"props":1084,"children":1085},{"style":709},[1086],{"type":439,"value":712},{"type":434,"tag":471,"props":1088,"children":1089},{"style":736},[1090],{"type":439,"value":1091},"i",{"type":434,"tag":471,"props":1093,"children":1094},{"style":698},[1095],{"type":439,"value":1096}," >=",{"type":434,"tag":471,"props":1098,"children":1099},{"style":1041},[1100],{"type":439,"value":1101}," 0",{"type":434,"tag":471,"props":1103,"children":1104},{"style":709},[1105],{"type":439,"value":723},{"type":434,"tag":471,"props":1107,"children":1109},{"class":473,"line":1108},15,[1110,1115,1119,1123,1127,1131,1136,1140,1145,1149,1154,1159,1164,1169,1173,1178,1183],{"type":434,"tag":471,"props":1111,"children":1112},{"style":730},[1113],{"type":439,"value":1114},"    while",{"type":434,"tag":471,"props":1116,"children":1117},{"style":709},[1118],{"type":439,"value":712},{"type":434,"tag":471,"props":1120,"children":1121},{"style":736},[1122],{"type":439,"value":1091},{"type":434,"tag":471,"props":1124,"children":1125},{"style":698},[1126],{"type":439,"value":1096},{"type":434,"tag":471,"props":1128,"children":1129},{"style":1041},[1130],{"type":439,"value":1101},{"type":434,"tag":471,"props":1132,"children":1133},{"style":698},[1134],{"type":439,"value":1135}," &&",{"type":434,"tag":471,"props":1137,"children":1138},{"style":736},[1139],{"type":439,"value":739},{"type":434,"tag":471,"props":1141,"children":1142},{"style":709},[1143],{"type":439,"value":1144},"[",{"type":434,"tag":471,"props":1146,"children":1147},{"style":736},[1148],{"type":439,"value":1091},{"type":434,"tag":471,"props":1150,"children":1151},{"style":709},[1152],{"type":439,"value":1153},"] ",{"type":434,"tag":471,"props":1155,"children":1156},{"style":698},[1157],{"type":439,"value":1158},"!==",{"type":434,"tag":471,"props":1160,"children":1161},{"style":758},[1162],{"type":439,"value":1163}," \" \"",{"type":434,"tag":471,"props":1165,"children":1166},{"style":709},[1167],{"type":439,"value":1168},") ",{"type":434,"tag":471,"props":1170,"children":1171},{"style":736},[1172],{"type":439,"value":1091},{"type":434,"tag":471,"props":1174,"children":1175},{"style":698},[1176],{"type":439,"value":1177},"--",{"type":434,"tag":471,"props":1179,"children":1180},{"style":826},[1181],{"type":439,"value":1182},";",{"type":434,"tag":471,"props":1184,"children":1185},{"style":624},[1186],{"type":439,"value":1187}," // 搜索首个空格\n",{"type":434,"tag":471,"props":1189,"children":1191},{"class":473,"line":1190},16,[1192,1197,1201,1206,1210,1214,1218,1223,1227,1231,1236,1240,1245,1249,1253,1257,1262,1266],{"type":434,"tag":471,"props":1193,"children":1194},{"style":736},[1195],{"type":439,"value":1196},"    res",{"type":434,"tag":471,"props":1198,"children":1199},{"style":742},[1200],{"type":439,"value":745},{"type":434,"tag":471,"props":1202,"children":1203},{"style":692},[1204],{"type":439,"value":1205},"push",{"type":434,"tag":471,"props":1207,"children":1208},{"style":709},[1209],{"type":439,"value":755},{"type":434,"tag":471,"props":1211,"children":1212},{"style":736},[1213],{"type":439,"value":718},{"type":434,"tag":471,"props":1215,"children":1216},{"style":742},[1217],{"type":439,"value":745},{"type":434,"tag":471,"props":1219,"children":1220},{"style":692},[1221],{"type":439,"value":1222},"substring",{"type":434,"tag":471,"props":1224,"children":1225},{"style":709},[1226],{"type":439,"value":755},{"type":434,"tag":471,"props":1228,"children":1229},{"style":736},[1230],{"type":439,"value":1091},{"type":434,"tag":471,"props":1232,"children":1233},{"style":698},[1234],{"type":439,"value":1235}," +",{"type":434,"tag":471,"props":1237,"children":1238},{"style":1041},[1239],{"type":439,"value":1044},{"type":434,"tag":471,"props":1241,"children":1242},{"style":826},[1243],{"type":439,"value":1244},",",{"type":434,"tag":471,"props":1246,"children":1247},{"style":736},[1248],{"type":439,"value":1061},{"type":434,"tag":471,"props":1250,"children":1251},{"style":698},[1252],{"type":439,"value":1235},{"type":434,"tag":471,"props":1254,"children":1255},{"style":1041},[1256],{"type":439,"value":1044},{"type":434,"tag":471,"props":1258,"children":1259},{"style":709},[1260],{"type":439,"value":1261},"))",{"type":434,"tag":471,"props":1263,"children":1264},{"style":826},[1265],{"type":439,"value":1182},{"type":434,"tag":471,"props":1267,"children":1268},{"style":624},[1269],{"type":439,"value":1270}," // 添加单词\n",{"type":434,"tag":471,"props":1272,"children":1274},{"class":473,"line":1273},17,[1275,1279,1283,1287,1291,1295,1299,1303,1307,1311,1315,1320,1324,1328,1332,1336,1340],{"type":434,"tag":471,"props":1276,"children":1277},{"style":730},[1278],{"type":439,"value":1114},{"type":434,"tag":471,"props":1280,"children":1281},{"style":709},[1282],{"type":439,"value":712},{"type":434,"tag":471,"props":1284,"children":1285},{"style":736},[1286],{"type":439,"value":1091},{"type":434,"tag":471,"props":1288,"children":1289},{"style":698},[1290],{"type":439,"value":1096},{"type":434,"tag":471,"props":1292,"children":1293},{"style":1041},[1294],{"type":439,"value":1101},{"type":434,"tag":471,"props":1296,"children":1297},{"style":698},[1298],{"type":439,"value":1135},{"type":434,"tag":471,"props":1300,"children":1301},{"style":736},[1302],{"type":439,"value":739},{"type":434,"tag":471,"props":1304,"children":1305},{"style":709},[1306],{"type":439,"value":1144},{"type":434,"tag":471,"props":1308,"children":1309},{"style":736},[1310],{"type":439,"value":1091},{"type":434,"tag":471,"props":1312,"children":1313},{"style":709},[1314],{"type":439,"value":1153},{"type":434,"tag":471,"props":1316,"children":1317},{"style":698},[1318],{"type":439,"value":1319},"===",{"type":434,"tag":471,"props":1321,"children":1322},{"style":758},[1323],{"type":439,"value":1163},{"type":434,"tag":471,"props":1325,"children":1326},{"style":709},[1327],{"type":439,"value":1168},{"type":434,"tag":471,"props":1329,"children":1330},{"style":736},[1331],{"type":439,"value":1091},{"type":434,"tag":471,"props":1333,"children":1334},{"style":698},[1335],{"type":439,"value":1177},{"type":434,"tag":471,"props":1337,"children":1338},{"style":826},[1339],{"type":439,"value":1182},{"type":434,"tag":471,"props":1341,"children":1342},{"style":624},[1343],{"type":439,"value":1344}," // 跳过单词间空格\n",{"type":434,"tag":471,"props":1346,"children":1348},{"class":473,"line":1347},18,[1349,1354,1358,1362,1366],{"type":434,"tag":471,"props":1350,"children":1351},{"style":736},[1352],{"type":439,"value":1353},"    j",{"type":434,"tag":471,"props":1355,"children":1356},{"style":698},[1357],{"type":439,"value":701},{"type":434,"tag":471,"props":1359,"children":1360},{"style":736},[1361],{"type":439,"value":1016},{"type":434,"tag":471,"props":1363,"children":1364},{"style":826},[1365],{"type":439,"value":1182},{"type":434,"tag":471,"props":1367,"children":1368},{"style":624},[1369],{"type":439,"value":1370}," // 指针移动，指向下个单词的尾字符\n",{"type":434,"tag":471,"props":1372,"children":1374},{"class":473,"line":1373},19,[1375],{"type":434,"tag":471,"props":1376,"children":1377},{"style":709},[1378],{"type":439,"value":1379},"  }\n",{"type":434,"tag":471,"props":1381,"children":1383},{"class":473,"line":1382},20,[1384,1388,1392,1396,1400,1404,1408,1412,1416,1421,1425],{"type":434,"tag":471,"props":1385,"children":1386},{"style":730},[1387],{"type":439,"value":733},{"type":434,"tag":471,"props":1389,"children":1390},{"style":736},[1391],{"type":439,"value":990},{"type":434,"tag":471,"props":1393,"children":1394},{"style":742},[1395],{"type":439,"value":745},{"type":434,"tag":471,"props":1397,"children":1398},{"style":692},[1399],{"type":439,"value":811},{"type":434,"tag":471,"props":1401,"children":1402},{"style":709},[1403],{"type":439,"value":755},{"type":434,"tag":471,"props":1405,"children":1406},{"style":758},[1407],{"type":439,"value":761},{"type":434,"tag":471,"props":1409,"children":1410},{"style":709},[1411],{"type":439,"value":766},{"type":434,"tag":471,"props":1413,"children":1414},{"style":742},[1415],{"type":439,"value":745},{"type":434,"tag":471,"props":1417,"children":1418},{"style":692},[1419],{"type":439,"value":1420},"trim",{"type":434,"tag":471,"props":1422,"children":1423},{"style":709},[1424],{"type":439,"value":802},{"type":434,"tag":471,"props":1426,"children":1427},{"style":826},[1428],{"type":439,"value":829},{"type":434,"tag":471,"props":1430,"children":1432},{"class":473,"line":1431},21,[1433,1437],{"type":434,"tag":471,"props":1434,"children":1435},{"style":709},[1436],{"type":439,"value":838},{"type":434,"tag":471,"props":1438,"children":1439},{"style":826},[1440],{"type":439,"value":829},{"type":434,"tag":1442,"props":1443,"children":1444},"style",{},[1445],{"type":439,"value":1446},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":427,"searchDepth":682,"depth":682,"links":1448},[1449,1450],{"id":596,"depth":483,"text":596},{"id":601,"depth":483,"text":601,"children":1451},[1452,1453],{"id":607,"depth":520,"text":607},{"id":845,"depth":520,"text":845},"markdown","content:1.algorithm:3.leetcode:151.reverse-words-in-a-string.md","content","1.algorithm/3.leetcode/151.reverse-words-in-a-string.md","md",[1460,1462],{"_path":146,"title":145,"description":1461},"请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：",{"_path":152,"title":151,"description":1463},"已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：",1713339872537]