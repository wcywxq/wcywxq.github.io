[{"data":1,"prerenderedAt":1821},["Reactive",2],{"navigation":3,"/algorithm/leetcode/lru-cache":424,"/algorithm/leetcode/lru-cache-surround":1816},[4,237,265,403,410],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,396],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"随机数","/frontend-code-assessment/scene/random-number",{"title":382,"_path":383},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":385,"_path":386},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":388,"_path":389},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":391,"_path":392},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":394,"_path":395},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":397,"_path":398,"children":399},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[400],{"title":401,"_path":402},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":404,"_path":405,"children":406},"项目","/pro",[407],{"title":408,"_path":409},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":411,"_path":412,"children":413},"后端语言","/backend-languages",[414],{"title":415,"_path":416,"children":417},"Python","/backend-languages/python",[418,421],{"title":419,"_path":420},"基础","/backend-languages/python/base",{"title":422,"_path":423},"函数","/backend-languages/python/function",{"_path":146,"_dir":425,"_draft":426,"_partial":426,"_locale":427,"title":145,"description":428,"url":429,"body":430,"_type":1811,"_id":1812,"_source":1813,"_file":1814,"_extension":1815},"leetcode",false,"","请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：","https://leetcode.cn/problems/lru-cache",{"type":431,"children":432,"toc":1805},"root",[433,440,460,465,470,636,641,664,670,675,680,687,1799],{"type":434,"tag":435,"props":436,"children":437},"element","p",{},[438],{"type":439,"value":428},"text",{"type":434,"tag":441,"props":442,"children":443},"ul",{},[444,450,455],{"type":434,"tag":445,"props":446,"children":447},"li",{},[448],{"type":439,"value":449},"LRUCache(int capacity) 以 正整数 作为容量 capacity 初始化 LRU 缓存",{"type":434,"tag":445,"props":451,"children":452},{},[453],{"type":439,"value":454},"int get(int key) 如果关键字 key 存在于缓存中，则返回关键字的值，否则返回 -1 。",{"type":434,"tag":445,"props":456,"children":457},{},[458],{"type":439,"value":459},"void put(int key, int value) 如果关键字 key 已经存在，则变更其数据值 value ；如果不存在，则向缓存中插入该组 key-value 。如果插入操作导致关键字数量超过 capacity ，则应该 逐出 最久未使用的关键字。",{"type":434,"tag":435,"props":461,"children":462},{},[463],{"type":439,"value":464},"函数 get 和 put 必须以 O(1) 的平均时间复杂度运行。",{"type":434,"tag":435,"props":466,"children":467},{},[468],{"type":439,"value":469},"示例：",{"type":434,"tag":471,"props":472,"children":475},"pre",{"className":473,"code":474,"language":439,"meta":427,"style":427},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入\n[\"LRUCache\", \"put\", \"put\", \"get\", \"put\", \"get\", \"put\", \"get\", \"get\", \"get\"]\n[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]\n输出\n[null, null, null, 1, null, -1, null, -1, 3, 4]\n\n解释\nLRUCache lRUCache = new LRUCache(2);\nlRUCache.put(1, 1); // 缓存是 {1=1}\nlRUCache.put(2, 2); // 缓存是 {1=1, 2=2}\nlRUCache.get(1); // 返回 1\nlRUCache.put(3, 3); // 该操作会使得关键字 2 作废，缓存是 {1=1, 3=3}\nlRUCache.get(2); // 返回 -1 (未找到)\nlRUCache.put(4, 4); // 该操作会使得关键字 1 作废，缓存是 {4=4, 3=3}\nlRUCache.get(1); // 返回 -1 (未找到)\nlRUCache.get(3); // 返回 3\nlRUCache.get(4); // 返回 4\n",[476],{"type":434,"tag":477,"props":478,"children":479},"code",{"__ignoreMap":427},[480,491,500,509,518,527,537,546,555,564,573,582,591,600,609,618,627],{"type":434,"tag":481,"props":482,"children":485},"span",{"class":483,"line":484},"line",1,[486],{"type":434,"tag":481,"props":487,"children":488},{},[489],{"type":439,"value":490},"输入\n",{"type":434,"tag":481,"props":492,"children":494},{"class":483,"line":493},2,[495],{"type":434,"tag":481,"props":496,"children":497},{},[498],{"type":439,"value":499},"[\"LRUCache\", \"put\", \"put\", \"get\", \"put\", \"get\", \"put\", \"get\", \"get\", \"get\"]\n",{"type":434,"tag":481,"props":501,"children":503},{"class":483,"line":502},3,[504],{"type":434,"tag":481,"props":505,"children":506},{},[507],{"type":439,"value":508},"[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]\n",{"type":434,"tag":481,"props":510,"children":512},{"class":483,"line":511},4,[513],{"type":434,"tag":481,"props":514,"children":515},{},[516],{"type":439,"value":517},"输出\n",{"type":434,"tag":481,"props":519,"children":521},{"class":483,"line":520},5,[522],{"type":434,"tag":481,"props":523,"children":524},{},[525],{"type":439,"value":526},"[null, null, null, 1, null, -1, null, -1, 3, 4]\n",{"type":434,"tag":481,"props":528,"children":530},{"class":483,"line":529},6,[531],{"type":434,"tag":481,"props":532,"children":534},{"emptyLinePlaceholder":533},true,[535],{"type":439,"value":536},"\n",{"type":434,"tag":481,"props":538,"children":540},{"class":483,"line":539},7,[541],{"type":434,"tag":481,"props":542,"children":543},{},[544],{"type":439,"value":545},"解释\n",{"type":434,"tag":481,"props":547,"children":549},{"class":483,"line":548},8,[550],{"type":434,"tag":481,"props":551,"children":552},{},[553],{"type":439,"value":554},"LRUCache lRUCache = new LRUCache(2);\n",{"type":434,"tag":481,"props":556,"children":558},{"class":483,"line":557},9,[559],{"type":434,"tag":481,"props":560,"children":561},{},[562],{"type":439,"value":563},"lRUCache.put(1, 1); // 缓存是 {1=1}\n",{"type":434,"tag":481,"props":565,"children":567},{"class":483,"line":566},10,[568],{"type":434,"tag":481,"props":569,"children":570},{},[571],{"type":439,"value":572},"lRUCache.put(2, 2); // 缓存是 {1=1, 2=2}\n",{"type":434,"tag":481,"props":574,"children":576},{"class":483,"line":575},11,[577],{"type":434,"tag":481,"props":578,"children":579},{},[580],{"type":439,"value":581},"lRUCache.get(1); // 返回 1\n",{"type":434,"tag":481,"props":583,"children":585},{"class":483,"line":584},12,[586],{"type":434,"tag":481,"props":587,"children":588},{},[589],{"type":439,"value":590},"lRUCache.put(3, 3); // 该操作会使得关键字 2 作废，缓存是 {1=1, 3=3}\n",{"type":434,"tag":481,"props":592,"children":594},{"class":483,"line":593},13,[595],{"type":434,"tag":481,"props":596,"children":597},{},[598],{"type":439,"value":599},"lRUCache.get(2); // 返回 -1 (未找到)\n",{"type":434,"tag":481,"props":601,"children":603},{"class":483,"line":602},14,[604],{"type":434,"tag":481,"props":605,"children":606},{},[607],{"type":439,"value":608},"lRUCache.put(4, 4); // 该操作会使得关键字 1 作废，缓存是 {4=4, 3=3}\n",{"type":434,"tag":481,"props":610,"children":612},{"class":483,"line":611},15,[613],{"type":434,"tag":481,"props":614,"children":615},{},[616],{"type":439,"value":617},"lRUCache.get(1); // 返回 -1 (未找到)\n",{"type":434,"tag":481,"props":619,"children":621},{"class":483,"line":620},16,[622],{"type":434,"tag":481,"props":623,"children":624},{},[625],{"type":439,"value":626},"lRUCache.get(3); // 返回 3\n",{"type":434,"tag":481,"props":628,"children":630},{"class":483,"line":629},17,[631],{"type":434,"tag":481,"props":632,"children":633},{},[634],{"type":439,"value":635},"lRUCache.get(4); // 返回 4\n",{"type":434,"tag":435,"props":637,"children":638},{},[639],{"type":439,"value":640},"提示：",{"type":434,"tag":441,"props":642,"children":643},{},[644,649,654,659],{"type":434,"tag":445,"props":645,"children":646},{},[647],{"type":439,"value":648},"1 \u003C= capacity \u003C= 3000",{"type":434,"tag":445,"props":650,"children":651},{},[652],{"type":439,"value":653},"0 \u003C= key \u003C= 10000",{"type":434,"tag":445,"props":655,"children":656},{},[657],{"type":439,"value":658},"0 \u003C= value \u003C= 105",{"type":434,"tag":445,"props":660,"children":661},{},[662],{"type":439,"value":663},"最多调用 2 * 10^5 次 get 和 put",{"type":434,"tag":665,"props":666,"children":668},"h2",{"id":667},"解题思路",[669],{"type":439,"value":667},{"type":434,"tag":435,"props":671,"children":672},{},[673],{"type":439,"value":674},"题目要求的 1 和 2 相对简单，主要是条件 3，当缓存容量达到上限时，它应该在写入新数据之前删除最久未使用的数据值",{"type":434,"tag":665,"props":676,"children":678},{"id":677},"实现",[679],{"type":439,"value":677},{"type":434,"tag":681,"props":682,"children":684},"h3",{"id":683},"map-方案",[685],{"type":439,"value":686},"Map 方案",{"type":434,"tag":471,"props":688,"children":692},{"className":689,"code":690,"language":691,"meta":427,"style":427},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number} capacity\n */\nvar LRUCache = function (capacity) {\n  this.cache = new Map();\n  this.capacity = capacity;\n};\n\n/**\n * @param {number} key\n * @return {number}\n */\nLRUCache.prototype.get = function (key) {\n  if (this.cache.has(key)) {\n    const val = this.cache.get(key);\n    // 更新位置\n    this.cache.delete(key);\n    this.cache.set(key, val);\n    return val;\n  }\n  return -1;\n};\n\n/**\n * @param {number} key\n * @param {number} value\n * @return {void}\n */\nLRUCache.prototype.put = function (key, value) {\n  // 已经存在的情况下，更新其位置到”最新“即可\n  // 先删除，后插入\n  if (this.cache.has(key)) {\n    this.cache.delete(key);\n  } else {\n    // 插入数据前先判断，size 是否符合 capacity\n    // 已经 >= capacity，需要把最开始插入的数据删除掉\n    // keys() 方法得到一个可遍历对象,执行 next( )拿到一个形如 { value: 'xxx', done: false } 的对象\n    if (this.cache.size >= this.capacity) {\n      this.cache.delete(this.cache.keys().next().value);\n    }\n  }\n  this.cache.set(key, value);\n};\n\n/**\n * Your LRUCache object will be instantiated and called as such:\n * var obj = new LRUCache(capacity)\n * var param_1 = obj.get(key)\n * obj.put(key,value)\n */\n","js",[693],{"type":434,"tag":477,"props":694,"children":695},{"__ignoreMap":427},[696,705,731,739,782,828,856,868,875,882,902,919,926,974,1023,1078,1086,1127,1177,1194,1203,1227,1239,1247,1255,1275,1296,1313,1321,1375,1384,1393,1437,1477,1496,1505,1514,1523,1578,1662,1671,1679,1727,1739,1747,1755,1764,1773,1782,1791],{"type":434,"tag":481,"props":697,"children":698},{"class":483,"line":484},[699],{"type":434,"tag":481,"props":700,"children":702},{"style":701},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[703],{"type":439,"value":704},"/**\n",{"type":434,"tag":481,"props":706,"children":707},{"class":483,"line":493},[708,713,719,725],{"type":434,"tag":481,"props":709,"children":710},{"style":701},[711],{"type":439,"value":712}," * ",{"type":434,"tag":481,"props":714,"children":716},{"style":715},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[717],{"type":439,"value":718},"@param",{"type":434,"tag":481,"props":720,"children":722},{"style":721},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[723],{"type":439,"value":724}," {number}",{"type":434,"tag":481,"props":726,"children":728},{"style":727},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[729],{"type":439,"value":730}," capacity\n",{"type":434,"tag":481,"props":732,"children":733},{"class":483,"line":502},[734],{"type":434,"tag":481,"props":735,"children":736},{"style":701},[737],{"type":439,"value":738}," */\n",{"type":434,"tag":481,"props":740,"children":741},{"class":483,"line":511},[742,748,754,760,765,771,777],{"type":434,"tag":481,"props":743,"children":745},{"style":744},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[746],{"type":439,"value":747},"var",{"type":434,"tag":481,"props":749,"children":751},{"style":750},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[752],{"type":439,"value":753}," LRUCache",{"type":434,"tag":481,"props":755,"children":757},{"style":756},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[758],{"type":439,"value":759}," =",{"type":434,"tag":481,"props":761,"children":762},{"style":744},[763],{"type":439,"value":764}," function",{"type":434,"tag":481,"props":766,"children":768},{"style":767},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[769],{"type":439,"value":770}," (",{"type":434,"tag":481,"props":772,"children":774},{"style":773},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[775],{"type":439,"value":776},"capacity",{"type":434,"tag":481,"props":778,"children":779},{"style":767},[780],{"type":439,"value":781},") {\n",{"type":434,"tag":481,"props":783,"children":784},{"class":483,"line":520},[785,791,797,803,807,812,817,822],{"type":434,"tag":481,"props":786,"children":788},{"style":787},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[789],{"type":439,"value":790},"  this",{"type":434,"tag":481,"props":792,"children":794},{"style":793},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[795],{"type":439,"value":796},".",{"type":434,"tag":481,"props":798,"children":800},{"style":799},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[801],{"type":439,"value":802},"cache",{"type":434,"tag":481,"props":804,"children":805},{"style":756},[806],{"type":439,"value":759},{"type":434,"tag":481,"props":808,"children":809},{"style":756},[810],{"type":439,"value":811}," new",{"type":434,"tag":481,"props":813,"children":814},{"style":750},[815],{"type":439,"value":816}," Map",{"type":434,"tag":481,"props":818,"children":819},{"style":767},[820],{"type":439,"value":821},"()",{"type":434,"tag":481,"props":823,"children":825},{"style":824},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[826],{"type":439,"value":827},";\n",{"type":434,"tag":481,"props":829,"children":830},{"class":483,"line":529},[831,835,839,843,847,852],{"type":434,"tag":481,"props":832,"children":833},{"style":787},[834],{"type":439,"value":790},{"type":434,"tag":481,"props":836,"children":837},{"style":793},[838],{"type":439,"value":796},{"type":434,"tag":481,"props":840,"children":841},{"style":799},[842],{"type":439,"value":776},{"type":434,"tag":481,"props":844,"children":845},{"style":756},[846],{"type":439,"value":759},{"type":434,"tag":481,"props":848,"children":849},{"style":799},[850],{"type":439,"value":851}," capacity",{"type":434,"tag":481,"props":853,"children":854},{"style":824},[855],{"type":439,"value":827},{"type":434,"tag":481,"props":857,"children":858},{"class":483,"line":539},[859,864],{"type":434,"tag":481,"props":860,"children":861},{"style":767},[862],{"type":439,"value":863},"}",{"type":434,"tag":481,"props":865,"children":866},{"style":824},[867],{"type":439,"value":827},{"type":434,"tag":481,"props":869,"children":870},{"class":483,"line":548},[871],{"type":434,"tag":481,"props":872,"children":873},{"emptyLinePlaceholder":533},[874],{"type":439,"value":536},{"type":434,"tag":481,"props":876,"children":877},{"class":483,"line":557},[878],{"type":434,"tag":481,"props":879,"children":880},{"style":701},[881],{"type":439,"value":704},{"type":434,"tag":481,"props":883,"children":884},{"class":483,"line":566},[885,889,893,897],{"type":434,"tag":481,"props":886,"children":887},{"style":701},[888],{"type":439,"value":712},{"type":434,"tag":481,"props":890,"children":891},{"style":715},[892],{"type":439,"value":718},{"type":434,"tag":481,"props":894,"children":895},{"style":721},[896],{"type":439,"value":724},{"type":434,"tag":481,"props":898,"children":899},{"style":727},[900],{"type":439,"value":901}," key\n",{"type":434,"tag":481,"props":903,"children":904},{"class":483,"line":575},[905,909,914],{"type":434,"tag":481,"props":906,"children":907},{"style":701},[908],{"type":439,"value":712},{"type":434,"tag":481,"props":910,"children":911},{"style":715},[912],{"type":439,"value":913},"@return",{"type":434,"tag":481,"props":915,"children":916},{"style":721},[917],{"type":439,"value":918}," {number}\n",{"type":434,"tag":481,"props":920,"children":921},{"class":483,"line":584},[922],{"type":434,"tag":481,"props":923,"children":924},{"style":701},[925],{"type":439,"value":738},{"type":434,"tag":481,"props":927,"children":928},{"class":483,"line":593},[929,935,939,944,948,953,957,961,965,970],{"type":434,"tag":481,"props":930,"children":932},{"style":931},"--shiki-light:#DC3EB7;--shiki-default:#DC3EB7;--shiki-dark:#39BAE6",[933],{"type":439,"value":934},"LRUCache",{"type":434,"tag":481,"props":936,"children":937},{"style":793},[938],{"type":439,"value":796},{"type":434,"tag":481,"props":940,"children":941},{"style":767},[942],{"type":439,"value":943},"prototype",{"type":434,"tag":481,"props":945,"children":946},{"style":793},[947],{"type":439,"value":796},{"type":434,"tag":481,"props":949,"children":950},{"style":750},[951],{"type":439,"value":952},"get",{"type":434,"tag":481,"props":954,"children":955},{"style":756},[956],{"type":439,"value":759},{"type":434,"tag":481,"props":958,"children":959},{"style":744},[960],{"type":439,"value":764},{"type":434,"tag":481,"props":962,"children":963},{"style":767},[964],{"type":439,"value":770},{"type":434,"tag":481,"props":966,"children":967},{"style":773},[968],{"type":439,"value":969},"key",{"type":434,"tag":481,"props":971,"children":972},{"style":767},[973],{"type":439,"value":781},{"type":434,"tag":481,"props":975,"children":976},{"class":483,"line":602},[977,983,987,992,996,1000,1004,1009,1014,1018],{"type":434,"tag":481,"props":978,"children":980},{"style":979},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[981],{"type":439,"value":982},"  if",{"type":434,"tag":481,"props":984,"children":985},{"style":767},[986],{"type":439,"value":770},{"type":434,"tag":481,"props":988,"children":989},{"style":787},[990],{"type":439,"value":991},"this",{"type":434,"tag":481,"props":993,"children":994},{"style":793},[995],{"type":439,"value":796},{"type":434,"tag":481,"props":997,"children":998},{"style":799},[999],{"type":439,"value":802},{"type":434,"tag":481,"props":1001,"children":1002},{"style":793},[1003],{"type":439,"value":796},{"type":434,"tag":481,"props":1005,"children":1006},{"style":750},[1007],{"type":439,"value":1008},"has",{"type":434,"tag":481,"props":1010,"children":1011},{"style":767},[1012],{"type":439,"value":1013},"(",{"type":434,"tag":481,"props":1015,"children":1016},{"style":799},[1017],{"type":439,"value":969},{"type":434,"tag":481,"props":1019,"children":1020},{"style":767},[1021],{"type":439,"value":1022},")) {\n",{"type":434,"tag":481,"props":1024,"children":1025},{"class":483,"line":611},[1026,1031,1036,1040,1045,1049,1053,1057,1061,1065,1069,1074],{"type":434,"tag":481,"props":1027,"children":1028},{"style":744},[1029],{"type":439,"value":1030},"    const",{"type":434,"tag":481,"props":1032,"children":1033},{"style":799},[1034],{"type":439,"value":1035}," val",{"type":434,"tag":481,"props":1037,"children":1038},{"style":756},[1039],{"type":439,"value":759},{"type":434,"tag":481,"props":1041,"children":1042},{"style":787},[1043],{"type":439,"value":1044}," this",{"type":434,"tag":481,"props":1046,"children":1047},{"style":793},[1048],{"type":439,"value":796},{"type":434,"tag":481,"props":1050,"children":1051},{"style":799},[1052],{"type":439,"value":802},{"type":434,"tag":481,"props":1054,"children":1055},{"style":793},[1056],{"type":439,"value":796},{"type":434,"tag":481,"props":1058,"children":1059},{"style":750},[1060],{"type":439,"value":952},{"type":434,"tag":481,"props":1062,"children":1063},{"style":767},[1064],{"type":439,"value":1013},{"type":434,"tag":481,"props":1066,"children":1067},{"style":799},[1068],{"type":439,"value":969},{"type":434,"tag":481,"props":1070,"children":1071},{"style":767},[1072],{"type":439,"value":1073},")",{"type":434,"tag":481,"props":1075,"children":1076},{"style":824},[1077],{"type":439,"value":827},{"type":434,"tag":481,"props":1079,"children":1080},{"class":483,"line":620},[1081],{"type":434,"tag":481,"props":1082,"children":1083},{"style":701},[1084],{"type":439,"value":1085},"    // 更新位置\n",{"type":434,"tag":481,"props":1087,"children":1088},{"class":483,"line":629},[1089,1094,1098,1102,1106,1111,1115,1119,1123],{"type":434,"tag":481,"props":1090,"children":1091},{"style":787},[1092],{"type":439,"value":1093},"    this",{"type":434,"tag":481,"props":1095,"children":1096},{"style":793},[1097],{"type":439,"value":796},{"type":434,"tag":481,"props":1099,"children":1100},{"style":799},[1101],{"type":439,"value":802},{"type":434,"tag":481,"props":1103,"children":1104},{"style":793},[1105],{"type":439,"value":796},{"type":434,"tag":481,"props":1107,"children":1108},{"style":750},[1109],{"type":439,"value":1110},"delete",{"type":434,"tag":481,"props":1112,"children":1113},{"style":767},[1114],{"type":439,"value":1013},{"type":434,"tag":481,"props":1116,"children":1117},{"style":799},[1118],{"type":439,"value":969},{"type":434,"tag":481,"props":1120,"children":1121},{"style":767},[1122],{"type":439,"value":1073},{"type":434,"tag":481,"props":1124,"children":1125},{"style":824},[1126],{"type":439,"value":827},{"type":434,"tag":481,"props":1128,"children":1130},{"class":483,"line":1129},18,[1131,1135,1139,1143,1147,1152,1156,1160,1165,1169,1173],{"type":434,"tag":481,"props":1132,"children":1133},{"style":787},[1134],{"type":439,"value":1093},{"type":434,"tag":481,"props":1136,"children":1137},{"style":793},[1138],{"type":439,"value":796},{"type":434,"tag":481,"props":1140,"children":1141},{"style":799},[1142],{"type":439,"value":802},{"type":434,"tag":481,"props":1144,"children":1145},{"style":793},[1146],{"type":439,"value":796},{"type":434,"tag":481,"props":1148,"children":1149},{"style":750},[1150],{"type":439,"value":1151},"set",{"type":434,"tag":481,"props":1153,"children":1154},{"style":767},[1155],{"type":439,"value":1013},{"type":434,"tag":481,"props":1157,"children":1158},{"style":799},[1159],{"type":439,"value":969},{"type":434,"tag":481,"props":1161,"children":1162},{"style":824},[1163],{"type":439,"value":1164},",",{"type":434,"tag":481,"props":1166,"children":1167},{"style":799},[1168],{"type":439,"value":1035},{"type":434,"tag":481,"props":1170,"children":1171},{"style":767},[1172],{"type":439,"value":1073},{"type":434,"tag":481,"props":1174,"children":1175},{"style":824},[1176],{"type":439,"value":827},{"type":434,"tag":481,"props":1178,"children":1180},{"class":483,"line":1179},19,[1181,1186,1190],{"type":434,"tag":481,"props":1182,"children":1183},{"style":979},[1184],{"type":439,"value":1185},"    return",{"type":434,"tag":481,"props":1187,"children":1188},{"style":799},[1189],{"type":439,"value":1035},{"type":434,"tag":481,"props":1191,"children":1192},{"style":824},[1193],{"type":439,"value":827},{"type":434,"tag":481,"props":1195,"children":1197},{"class":483,"line":1196},20,[1198],{"type":434,"tag":481,"props":1199,"children":1200},{"style":767},[1201],{"type":439,"value":1202},"  }\n",{"type":434,"tag":481,"props":1204,"children":1206},{"class":483,"line":1205},21,[1207,1212,1217,1223],{"type":434,"tag":481,"props":1208,"children":1209},{"style":979},[1210],{"type":439,"value":1211},"  return",{"type":434,"tag":481,"props":1213,"children":1214},{"style":756},[1215],{"type":439,"value":1216}," -",{"type":434,"tag":481,"props":1218,"children":1220},{"style":1219},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[1221],{"type":439,"value":1222},"1",{"type":434,"tag":481,"props":1224,"children":1225},{"style":824},[1226],{"type":439,"value":827},{"type":434,"tag":481,"props":1228,"children":1230},{"class":483,"line":1229},22,[1231,1235],{"type":434,"tag":481,"props":1232,"children":1233},{"style":767},[1234],{"type":439,"value":863},{"type":434,"tag":481,"props":1236,"children":1237},{"style":824},[1238],{"type":439,"value":827},{"type":434,"tag":481,"props":1240,"children":1242},{"class":483,"line":1241},23,[1243],{"type":434,"tag":481,"props":1244,"children":1245},{"emptyLinePlaceholder":533},[1246],{"type":439,"value":536},{"type":434,"tag":481,"props":1248,"children":1250},{"class":483,"line":1249},24,[1251],{"type":434,"tag":481,"props":1252,"children":1253},{"style":701},[1254],{"type":439,"value":704},{"type":434,"tag":481,"props":1256,"children":1258},{"class":483,"line":1257},25,[1259,1263,1267,1271],{"type":434,"tag":481,"props":1260,"children":1261},{"style":701},[1262],{"type":439,"value":712},{"type":434,"tag":481,"props":1264,"children":1265},{"style":715},[1266],{"type":439,"value":718},{"type":434,"tag":481,"props":1268,"children":1269},{"style":721},[1270],{"type":439,"value":724},{"type":434,"tag":481,"props":1272,"children":1273},{"style":727},[1274],{"type":439,"value":901},{"type":434,"tag":481,"props":1276,"children":1278},{"class":483,"line":1277},26,[1279,1283,1287,1291],{"type":434,"tag":481,"props":1280,"children":1281},{"style":701},[1282],{"type":439,"value":712},{"type":434,"tag":481,"props":1284,"children":1285},{"style":715},[1286],{"type":439,"value":718},{"type":434,"tag":481,"props":1288,"children":1289},{"style":721},[1290],{"type":439,"value":724},{"type":434,"tag":481,"props":1292,"children":1293},{"style":727},[1294],{"type":439,"value":1295}," value\n",{"type":434,"tag":481,"props":1297,"children":1299},{"class":483,"line":1298},27,[1300,1304,1308],{"type":434,"tag":481,"props":1301,"children":1302},{"style":701},[1303],{"type":439,"value":712},{"type":434,"tag":481,"props":1305,"children":1306},{"style":715},[1307],{"type":439,"value":913},{"type":434,"tag":481,"props":1309,"children":1310},{"style":721},[1311],{"type":439,"value":1312}," {void}\n",{"type":434,"tag":481,"props":1314,"children":1316},{"class":483,"line":1315},28,[1317],{"type":434,"tag":481,"props":1318,"children":1319},{"style":701},[1320],{"type":439,"value":738},{"type":434,"tag":481,"props":1322,"children":1324},{"class":483,"line":1323},29,[1325,1329,1333,1337,1341,1346,1350,1354,1358,1362,1366,1371],{"type":434,"tag":481,"props":1326,"children":1327},{"style":931},[1328],{"type":439,"value":934},{"type":434,"tag":481,"props":1330,"children":1331},{"style":793},[1332],{"type":439,"value":796},{"type":434,"tag":481,"props":1334,"children":1335},{"style":767},[1336],{"type":439,"value":943},{"type":434,"tag":481,"props":1338,"children":1339},{"style":793},[1340],{"type":439,"value":796},{"type":434,"tag":481,"props":1342,"children":1343},{"style":750},[1344],{"type":439,"value":1345},"put",{"type":434,"tag":481,"props":1347,"children":1348},{"style":756},[1349],{"type":439,"value":759},{"type":434,"tag":481,"props":1351,"children":1352},{"style":744},[1353],{"type":439,"value":764},{"type":434,"tag":481,"props":1355,"children":1356},{"style":767},[1357],{"type":439,"value":770},{"type":434,"tag":481,"props":1359,"children":1360},{"style":773},[1361],{"type":439,"value":969},{"type":434,"tag":481,"props":1363,"children":1364},{"style":824},[1365],{"type":439,"value":1164},{"type":434,"tag":481,"props":1367,"children":1368},{"style":773},[1369],{"type":439,"value":1370}," value",{"type":434,"tag":481,"props":1372,"children":1373},{"style":767},[1374],{"type":439,"value":781},{"type":434,"tag":481,"props":1376,"children":1378},{"class":483,"line":1377},30,[1379],{"type":434,"tag":481,"props":1380,"children":1381},{"style":701},[1382],{"type":439,"value":1383},"  // 已经存在的情况下，更新其位置到”最新“即可\n",{"type":434,"tag":481,"props":1385,"children":1387},{"class":483,"line":1386},31,[1388],{"type":434,"tag":481,"props":1389,"children":1390},{"style":701},[1391],{"type":439,"value":1392},"  // 先删除，后插入\n",{"type":434,"tag":481,"props":1394,"children":1396},{"class":483,"line":1395},32,[1397,1401,1405,1409,1413,1417,1421,1425,1429,1433],{"type":434,"tag":481,"props":1398,"children":1399},{"style":979},[1400],{"type":439,"value":982},{"type":434,"tag":481,"props":1402,"children":1403},{"style":767},[1404],{"type":439,"value":770},{"type":434,"tag":481,"props":1406,"children":1407},{"style":787},[1408],{"type":439,"value":991},{"type":434,"tag":481,"props":1410,"children":1411},{"style":793},[1412],{"type":439,"value":796},{"type":434,"tag":481,"props":1414,"children":1415},{"style":799},[1416],{"type":439,"value":802},{"type":434,"tag":481,"props":1418,"children":1419},{"style":793},[1420],{"type":439,"value":796},{"type":434,"tag":481,"props":1422,"children":1423},{"style":750},[1424],{"type":439,"value":1008},{"type":434,"tag":481,"props":1426,"children":1427},{"style":767},[1428],{"type":439,"value":1013},{"type":434,"tag":481,"props":1430,"children":1431},{"style":799},[1432],{"type":439,"value":969},{"type":434,"tag":481,"props":1434,"children":1435},{"style":767},[1436],{"type":439,"value":1022},{"type":434,"tag":481,"props":1438,"children":1440},{"class":483,"line":1439},33,[1441,1445,1449,1453,1457,1461,1465,1469,1473],{"type":434,"tag":481,"props":1442,"children":1443},{"style":787},[1444],{"type":439,"value":1093},{"type":434,"tag":481,"props":1446,"children":1447},{"style":793},[1448],{"type":439,"value":796},{"type":434,"tag":481,"props":1450,"children":1451},{"style":799},[1452],{"type":439,"value":802},{"type":434,"tag":481,"props":1454,"children":1455},{"style":793},[1456],{"type":439,"value":796},{"type":434,"tag":481,"props":1458,"children":1459},{"style":750},[1460],{"type":439,"value":1110},{"type":434,"tag":481,"props":1462,"children":1463},{"style":767},[1464],{"type":439,"value":1013},{"type":434,"tag":481,"props":1466,"children":1467},{"style":799},[1468],{"type":439,"value":969},{"type":434,"tag":481,"props":1470,"children":1471},{"style":767},[1472],{"type":439,"value":1073},{"type":434,"tag":481,"props":1474,"children":1475},{"style":824},[1476],{"type":439,"value":827},{"type":434,"tag":481,"props":1478,"children":1480},{"class":483,"line":1479},34,[1481,1486,1491],{"type":434,"tag":481,"props":1482,"children":1483},{"style":767},[1484],{"type":439,"value":1485},"  } ",{"type":434,"tag":481,"props":1487,"children":1488},{"style":979},[1489],{"type":439,"value":1490},"else",{"type":434,"tag":481,"props":1492,"children":1493},{"style":767},[1494],{"type":439,"value":1495}," {\n",{"type":434,"tag":481,"props":1497,"children":1499},{"class":483,"line":1498},35,[1500],{"type":434,"tag":481,"props":1501,"children":1502},{"style":701},[1503],{"type":439,"value":1504},"    // 插入数据前先判断，size 是否符合 capacity\n",{"type":434,"tag":481,"props":1506,"children":1508},{"class":483,"line":1507},36,[1509],{"type":434,"tag":481,"props":1510,"children":1511},{"style":701},[1512],{"type":439,"value":1513},"    // 已经 >= capacity，需要把最开始插入的数据删除掉\n",{"type":434,"tag":481,"props":1515,"children":1517},{"class":483,"line":1516},37,[1518],{"type":434,"tag":481,"props":1519,"children":1520},{"style":701},[1521],{"type":439,"value":1522},"    // keys() 方法得到一个可遍历对象,执行 next( )拿到一个形如 { value: 'xxx', done: false } 的对象\n",{"type":434,"tag":481,"props":1524,"children":1526},{"class":483,"line":1525},38,[1527,1532,1536,1540,1544,1548,1552,1557,1562,1566,1570,1574],{"type":434,"tag":481,"props":1528,"children":1529},{"style":979},[1530],{"type":439,"value":1531},"    if",{"type":434,"tag":481,"props":1533,"children":1534},{"style":767},[1535],{"type":439,"value":770},{"type":434,"tag":481,"props":1537,"children":1538},{"style":787},[1539],{"type":439,"value":991},{"type":434,"tag":481,"props":1541,"children":1542},{"style":793},[1543],{"type":439,"value":796},{"type":434,"tag":481,"props":1545,"children":1546},{"style":799},[1547],{"type":439,"value":802},{"type":434,"tag":481,"props":1549,"children":1550},{"style":793},[1551],{"type":439,"value":796},{"type":434,"tag":481,"props":1553,"children":1554},{"style":799},[1555],{"type":439,"value":1556},"size",{"type":434,"tag":481,"props":1558,"children":1559},{"style":756},[1560],{"type":439,"value":1561}," >=",{"type":434,"tag":481,"props":1563,"children":1564},{"style":787},[1565],{"type":439,"value":1044},{"type":434,"tag":481,"props":1567,"children":1568},{"style":793},[1569],{"type":439,"value":796},{"type":434,"tag":481,"props":1571,"children":1572},{"style":799},[1573],{"type":439,"value":776},{"type":434,"tag":481,"props":1575,"children":1576},{"style":767},[1577],{"type":439,"value":781},{"type":434,"tag":481,"props":1579,"children":1581},{"class":483,"line":1580},39,[1582,1587,1591,1595,1599,1603,1607,1611,1615,1619,1623,1628,1632,1636,1641,1645,1649,1654,1658],{"type":434,"tag":481,"props":1583,"children":1584},{"style":787},[1585],{"type":439,"value":1586},"      this",{"type":434,"tag":481,"props":1588,"children":1589},{"style":793},[1590],{"type":439,"value":796},{"type":434,"tag":481,"props":1592,"children":1593},{"style":799},[1594],{"type":439,"value":802},{"type":434,"tag":481,"props":1596,"children":1597},{"style":793},[1598],{"type":439,"value":796},{"type":434,"tag":481,"props":1600,"children":1601},{"style":750},[1602],{"type":439,"value":1110},{"type":434,"tag":481,"props":1604,"children":1605},{"style":767},[1606],{"type":439,"value":1013},{"type":434,"tag":481,"props":1608,"children":1609},{"style":787},[1610],{"type":439,"value":991},{"type":434,"tag":481,"props":1612,"children":1613},{"style":793},[1614],{"type":439,"value":796},{"type":434,"tag":481,"props":1616,"children":1617},{"style":799},[1618],{"type":439,"value":802},{"type":434,"tag":481,"props":1620,"children":1621},{"style":793},[1622],{"type":439,"value":796},{"type":434,"tag":481,"props":1624,"children":1625},{"style":750},[1626],{"type":439,"value":1627},"keys",{"type":434,"tag":481,"props":1629,"children":1630},{"style":767},[1631],{"type":439,"value":821},{"type":434,"tag":481,"props":1633,"children":1634},{"style":793},[1635],{"type":439,"value":796},{"type":434,"tag":481,"props":1637,"children":1638},{"style":750},[1639],{"type":439,"value":1640},"next",{"type":434,"tag":481,"props":1642,"children":1643},{"style":767},[1644],{"type":439,"value":821},{"type":434,"tag":481,"props":1646,"children":1647},{"style":793},[1648],{"type":439,"value":796},{"type":434,"tag":481,"props":1650,"children":1651},{"style":799},[1652],{"type":439,"value":1653},"value",{"type":434,"tag":481,"props":1655,"children":1656},{"style":767},[1657],{"type":439,"value":1073},{"type":434,"tag":481,"props":1659,"children":1660},{"style":824},[1661],{"type":439,"value":827},{"type":434,"tag":481,"props":1663,"children":1665},{"class":483,"line":1664},40,[1666],{"type":434,"tag":481,"props":1667,"children":1668},{"style":767},[1669],{"type":439,"value":1670},"    }\n",{"type":434,"tag":481,"props":1672,"children":1674},{"class":483,"line":1673},41,[1675],{"type":434,"tag":481,"props":1676,"children":1677},{"style":767},[1678],{"type":439,"value":1202},{"type":434,"tag":481,"props":1680,"children":1682},{"class":483,"line":1681},42,[1683,1687,1691,1695,1699,1703,1707,1711,1715,1719,1723],{"type":434,"tag":481,"props":1684,"children":1685},{"style":787},[1686],{"type":439,"value":790},{"type":434,"tag":481,"props":1688,"children":1689},{"style":793},[1690],{"type":439,"value":796},{"type":434,"tag":481,"props":1692,"children":1693},{"style":799},[1694],{"type":439,"value":802},{"type":434,"tag":481,"props":1696,"children":1697},{"style":793},[1698],{"type":439,"value":796},{"type":434,"tag":481,"props":1700,"children":1701},{"style":750},[1702],{"type":439,"value":1151},{"type":434,"tag":481,"props":1704,"children":1705},{"style":767},[1706],{"type":439,"value":1013},{"type":434,"tag":481,"props":1708,"children":1709},{"style":799},[1710],{"type":439,"value":969},{"type":434,"tag":481,"props":1712,"children":1713},{"style":824},[1714],{"type":439,"value":1164},{"type":434,"tag":481,"props":1716,"children":1717},{"style":799},[1718],{"type":439,"value":1370},{"type":434,"tag":481,"props":1720,"children":1721},{"style":767},[1722],{"type":439,"value":1073},{"type":434,"tag":481,"props":1724,"children":1725},{"style":824},[1726],{"type":439,"value":827},{"type":434,"tag":481,"props":1728,"children":1730},{"class":483,"line":1729},43,[1731,1735],{"type":434,"tag":481,"props":1732,"children":1733},{"style":767},[1734],{"type":439,"value":863},{"type":434,"tag":481,"props":1736,"children":1737},{"style":824},[1738],{"type":439,"value":827},{"type":434,"tag":481,"props":1740,"children":1742},{"class":483,"line":1741},44,[1743],{"type":434,"tag":481,"props":1744,"children":1745},{"emptyLinePlaceholder":533},[1746],{"type":439,"value":536},{"type":434,"tag":481,"props":1748,"children":1750},{"class":483,"line":1749},45,[1751],{"type":434,"tag":481,"props":1752,"children":1753},{"style":701},[1754],{"type":439,"value":704},{"type":434,"tag":481,"props":1756,"children":1758},{"class":483,"line":1757},46,[1759],{"type":434,"tag":481,"props":1760,"children":1761},{"style":701},[1762],{"type":439,"value":1763}," * Your LRUCache object will be instantiated and called as such:\n",{"type":434,"tag":481,"props":1765,"children":1767},{"class":483,"line":1766},47,[1768],{"type":434,"tag":481,"props":1769,"children":1770},{"style":701},[1771],{"type":439,"value":1772}," * var obj = new LRUCache(capacity)\n",{"type":434,"tag":481,"props":1774,"children":1776},{"class":483,"line":1775},48,[1777],{"type":434,"tag":481,"props":1778,"children":1779},{"style":701},[1780],{"type":439,"value":1781}," * var param_1 = obj.get(key)\n",{"type":434,"tag":481,"props":1783,"children":1785},{"class":483,"line":1784},49,[1786],{"type":434,"tag":481,"props":1787,"children":1788},{"style":701},[1789],{"type":439,"value":1790}," * obj.put(key,value)\n",{"type":434,"tag":481,"props":1792,"children":1794},{"class":483,"line":1793},50,[1795],{"type":434,"tag":481,"props":1796,"children":1797},{"style":701},[1798],{"type":439,"value":738},{"type":434,"tag":1800,"props":1801,"children":1802},"style",{},[1803],{"type":439,"value":1804},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":427,"searchDepth":520,"depth":520,"links":1806},[1807,1808],{"id":667,"depth":493,"text":667},{"id":677,"depth":493,"text":677,"children":1809},[1810],{"id":683,"depth":502,"text":686},"markdown","content:1.algorithm:3.leetcode:146.lru-cache.md","content","1.algorithm/3.leetcode/146.lru-cache.md","md",[1817,1819],{"_path":143,"title":142,"description":1818},"给你一个链表的头节点 head ，判断链表中是否有环。",{"_path":149,"title":148,"description":1820},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",1713339872504]