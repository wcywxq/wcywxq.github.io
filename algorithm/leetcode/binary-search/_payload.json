[{"data":1,"prerenderedAt":1156},["Reactive",2],{"navigation":3,"/algorithm/leetcode/binary-search":427,"/algorithm/leetcode/binary-search-surround":1151},[4,237,265,406,413],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,399],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":382,"_path":383},"随机数","/frontend-code-assessment/scene/random-number",{"title":385,"_path":386},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":388,"_path":389},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":391,"_path":392},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":394,"_path":395},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":397,"_path":398},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":400,"_path":401,"children":402},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[403],{"title":404,"_path":405},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":407,"_path":408,"children":409},"项目","/pro",[410],{"title":411,"_path":412},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":414,"_path":415,"children":416},"后端语言","/backend-languages",[417],{"title":418,"_path":419,"children":420},"Python","/backend-languages/python",[421,424],{"title":422,"_path":423},"基础","/backend-languages/python/base",{"title":425,"_path":426},"函数","/backend-languages/python/function",{"_path":221,"_dir":428,"_draft":429,"_partial":429,"_locale":430,"title":220,"description":431,"url":432,"body":433,"_type":1146,"_id":1147,"_source":1148,"_file":1149,"_extension":1150},"leetcode",false,"","给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target ，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1。","https://leetcode.cn/problems/binary-search",{"type":434,"children":435,"toc":1142},"root",[436,443,448,487,492,523,528,548,554,559,1136],{"type":437,"tag":438,"props":439,"children":440},"element","p",{},[441],{"type":442,"value":431},"text",{"type":437,"tag":438,"props":444,"children":445},{},[446],{"type":442,"value":447},"示例 1:",{"type":437,"tag":449,"props":450,"children":453},"pre",{"className":451,"code":452,"language":442,"meta":430,"style":430},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入: nums = [-1,0,3,5,9,12], target = 9\n输出: 4\n解释: 9 出现在 nums 中并且下标为 4\n",[454],{"type":437,"tag":455,"props":456,"children":457},"code",{"__ignoreMap":430},[458,469,478],{"type":437,"tag":459,"props":460,"children":463},"span",{"class":461,"line":462},"line",1,[464],{"type":437,"tag":459,"props":465,"children":466},{},[467],{"type":442,"value":468},"输入: nums = [-1,0,3,5,9,12], target = 9\n",{"type":437,"tag":459,"props":470,"children":472},{"class":461,"line":471},2,[473],{"type":437,"tag":459,"props":474,"children":475},{},[476],{"type":442,"value":477},"输出: 4\n",{"type":437,"tag":459,"props":479,"children":481},{"class":461,"line":480},3,[482],{"type":437,"tag":459,"props":483,"children":484},{},[485],{"type":442,"value":486},"解释: 9 出现在 nums 中并且下标为 4\n",{"type":437,"tag":438,"props":488,"children":489},{},[490],{"type":442,"value":491},"示例 2:",{"type":437,"tag":449,"props":493,"children":495},{"className":451,"code":494,"language":442,"meta":430,"style":430},"输入: nums = [-1,0,3,5,9,12], target = 2\n输出: -1\n解释: 2 不存在 nums 中因此返回 -1\n",[496],{"type":437,"tag":455,"props":497,"children":498},{"__ignoreMap":430},[499,507,515],{"type":437,"tag":459,"props":500,"children":501},{"class":461,"line":462},[502],{"type":437,"tag":459,"props":503,"children":504},{},[505],{"type":442,"value":506},"输入: nums = [-1,0,3,5,9,12], target = 2\n",{"type":437,"tag":459,"props":508,"children":509},{"class":461,"line":471},[510],{"type":437,"tag":459,"props":511,"children":512},{},[513],{"type":442,"value":514},"输出: -1\n",{"type":437,"tag":459,"props":516,"children":517},{"class":461,"line":480},[518],{"type":437,"tag":459,"props":519,"children":520},{},[521],{"type":442,"value":522},"解释: 2 不存在 nums 中因此返回 -1\n",{"type":437,"tag":438,"props":524,"children":525},{},[526],{"type":442,"value":527},"提示：",{"type":437,"tag":529,"props":530,"children":531},"ul",{},[532,538,543],{"type":437,"tag":533,"props":534,"children":535},"li",{},[536],{"type":442,"value":537},"你可以假设 nums 中的所有元素是不重复的。",{"type":437,"tag":533,"props":539,"children":540},{},[541],{"type":442,"value":542},"n 将在 [1, 10000] 之间。",{"type":437,"tag":533,"props":544,"children":545},{},[546],{"type":442,"value":547},"nums 的每个元素都将在 [-9999, 9999] 之间。",{"type":437,"tag":549,"props":550,"children":552},"h2",{"id":551},"解题思路",[553],{"type":442,"value":551},{"type":437,"tag":549,"props":555,"children":557},{"id":556},"实现",[558],{"type":442,"value":556},{"type":437,"tag":449,"props":560,"children":564},{"className":561,"code":562,"language":563,"meta":430,"style":430},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */\nvar search = function (nums, target) {\n  let length = nums.length;\n  let i = 0;\n  let j = length - 1;\n  while (i \u003C= j) {\n    let middleIndex = (i + j) >> 1;\n    let middle = nums[middleIndex];\n    if (middle === target) return middleIndex;\n    if (middle \u003C target) {\n      i = middleIndex + 1;\n    } else {\n      j = middleIndex - 1;\n    }\n  }\n  return -1;\n};\n","js",[565],{"type":437,"tag":455,"props":566,"children":567},{"__ignoreMap":430},[568,577,603,624,642,651,706,746,773,808,840,893,933,977,1006,1035,1054,1083,1092,1101,1123],{"type":437,"tag":459,"props":569,"children":570},{"class":461,"line":462},[571],{"type":437,"tag":459,"props":572,"children":574},{"style":573},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[575],{"type":442,"value":576},"/**\n",{"type":437,"tag":459,"props":578,"children":579},{"class":461,"line":471},[580,585,591,597],{"type":437,"tag":459,"props":581,"children":582},{"style":573},[583],{"type":442,"value":584}," * ",{"type":437,"tag":459,"props":586,"children":588},{"style":587},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[589],{"type":442,"value":590},"@param",{"type":437,"tag":459,"props":592,"children":594},{"style":593},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[595],{"type":442,"value":596}," {number[]}",{"type":437,"tag":459,"props":598,"children":600},{"style":599},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[601],{"type":442,"value":602}," nums\n",{"type":437,"tag":459,"props":604,"children":605},{"class":461,"line":480},[606,610,614,619],{"type":437,"tag":459,"props":607,"children":608},{"style":573},[609],{"type":442,"value":584},{"type":437,"tag":459,"props":611,"children":612},{"style":587},[613],{"type":442,"value":590},{"type":437,"tag":459,"props":615,"children":616},{"style":593},[617],{"type":442,"value":618}," {number}",{"type":437,"tag":459,"props":620,"children":621},{"style":599},[622],{"type":442,"value":623}," target\n",{"type":437,"tag":459,"props":625,"children":627},{"class":461,"line":626},4,[628,632,637],{"type":437,"tag":459,"props":629,"children":630},{"style":573},[631],{"type":442,"value":584},{"type":437,"tag":459,"props":633,"children":634},{"style":587},[635],{"type":442,"value":636},"@return",{"type":437,"tag":459,"props":638,"children":639},{"style":593},[640],{"type":442,"value":641}," {number}\n",{"type":437,"tag":459,"props":643,"children":645},{"class":461,"line":644},5,[646],{"type":437,"tag":459,"props":647,"children":648},{"style":573},[649],{"type":442,"value":650}," */\n",{"type":437,"tag":459,"props":652,"children":654},{"class":461,"line":653},6,[655,661,667,673,678,684,690,696,701],{"type":437,"tag":459,"props":656,"children":658},{"style":657},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[659],{"type":442,"value":660},"var",{"type":437,"tag":459,"props":662,"children":664},{"style":663},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[665],{"type":442,"value":666}," search",{"type":437,"tag":459,"props":668,"children":670},{"style":669},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[671],{"type":442,"value":672}," =",{"type":437,"tag":459,"props":674,"children":675},{"style":657},[676],{"type":442,"value":677}," function",{"type":437,"tag":459,"props":679,"children":681},{"style":680},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[682],{"type":442,"value":683}," (",{"type":437,"tag":459,"props":685,"children":687},{"style":686},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[688],{"type":442,"value":689},"nums",{"type":437,"tag":459,"props":691,"children":693},{"style":692},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[694],{"type":442,"value":695},",",{"type":437,"tag":459,"props":697,"children":698},{"style":686},[699],{"type":442,"value":700}," target",{"type":437,"tag":459,"props":702,"children":703},{"style":680},[704],{"type":442,"value":705},") {\n",{"type":437,"tag":459,"props":707,"children":709},{"class":461,"line":708},7,[710,715,721,725,730,736,741],{"type":437,"tag":459,"props":711,"children":712},{"style":657},[713],{"type":442,"value":714},"  let",{"type":437,"tag":459,"props":716,"children":718},{"style":717},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[719],{"type":442,"value":720}," length",{"type":437,"tag":459,"props":722,"children":723},{"style":669},[724],{"type":442,"value":672},{"type":437,"tag":459,"props":726,"children":727},{"style":717},[728],{"type":442,"value":729}," nums",{"type":437,"tag":459,"props":731,"children":733},{"style":732},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[734],{"type":442,"value":735},".",{"type":437,"tag":459,"props":737,"children":738},{"style":680},[739],{"type":442,"value":740},"length",{"type":437,"tag":459,"props":742,"children":743},{"style":692},[744],{"type":442,"value":745},";\n",{"type":437,"tag":459,"props":747,"children":749},{"class":461,"line":748},8,[750,754,759,763,769],{"type":437,"tag":459,"props":751,"children":752},{"style":657},[753],{"type":442,"value":714},{"type":437,"tag":459,"props":755,"children":756},{"style":717},[757],{"type":442,"value":758}," i",{"type":437,"tag":459,"props":760,"children":761},{"style":669},[762],{"type":442,"value":672},{"type":437,"tag":459,"props":764,"children":766},{"style":765},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[767],{"type":442,"value":768}," 0",{"type":437,"tag":459,"props":770,"children":771},{"style":692},[772],{"type":442,"value":745},{"type":437,"tag":459,"props":774,"children":776},{"class":461,"line":775},9,[777,781,786,790,794,799,804],{"type":437,"tag":459,"props":778,"children":779},{"style":657},[780],{"type":442,"value":714},{"type":437,"tag":459,"props":782,"children":783},{"style":717},[784],{"type":442,"value":785}," j",{"type":437,"tag":459,"props":787,"children":788},{"style":669},[789],{"type":442,"value":672},{"type":437,"tag":459,"props":791,"children":792},{"style":717},[793],{"type":442,"value":720},{"type":437,"tag":459,"props":795,"children":796},{"style":669},[797],{"type":442,"value":798}," -",{"type":437,"tag":459,"props":800,"children":801},{"style":765},[802],{"type":442,"value":803}," 1",{"type":437,"tag":459,"props":805,"children":806},{"style":692},[807],{"type":442,"value":745},{"type":437,"tag":459,"props":809,"children":811},{"class":461,"line":810},10,[812,818,822,827,832,836],{"type":437,"tag":459,"props":813,"children":815},{"style":814},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[816],{"type":442,"value":817},"  while",{"type":437,"tag":459,"props":819,"children":820},{"style":680},[821],{"type":442,"value":683},{"type":437,"tag":459,"props":823,"children":824},{"style":717},[825],{"type":442,"value":826},"i",{"type":437,"tag":459,"props":828,"children":829},{"style":669},[830],{"type":442,"value":831}," \u003C=",{"type":437,"tag":459,"props":833,"children":834},{"style":717},[835],{"type":442,"value":785},{"type":437,"tag":459,"props":837,"children":838},{"style":680},[839],{"type":442,"value":705},{"type":437,"tag":459,"props":841,"children":843},{"class":461,"line":842},11,[844,849,854,858,862,866,871,875,880,885,889],{"type":437,"tag":459,"props":845,"children":846},{"style":657},[847],{"type":442,"value":848},"    let",{"type":437,"tag":459,"props":850,"children":851},{"style":717},[852],{"type":442,"value":853}," middleIndex",{"type":437,"tag":459,"props":855,"children":856},{"style":669},[857],{"type":442,"value":672},{"type":437,"tag":459,"props":859,"children":860},{"style":680},[861],{"type":442,"value":683},{"type":437,"tag":459,"props":863,"children":864},{"style":717},[865],{"type":442,"value":826},{"type":437,"tag":459,"props":867,"children":868},{"style":669},[869],{"type":442,"value":870}," +",{"type":437,"tag":459,"props":872,"children":873},{"style":717},[874],{"type":442,"value":785},{"type":437,"tag":459,"props":876,"children":877},{"style":680},[878],{"type":442,"value":879},") ",{"type":437,"tag":459,"props":881,"children":882},{"style":669},[883],{"type":442,"value":884},">>",{"type":437,"tag":459,"props":886,"children":887},{"style":765},[888],{"type":442,"value":803},{"type":437,"tag":459,"props":890,"children":891},{"style":692},[892],{"type":442,"value":745},{"type":437,"tag":459,"props":894,"children":896},{"class":461,"line":895},12,[897,901,906,910,914,919,924,929],{"type":437,"tag":459,"props":898,"children":899},{"style":657},[900],{"type":442,"value":848},{"type":437,"tag":459,"props":902,"children":903},{"style":717},[904],{"type":442,"value":905}," middle",{"type":437,"tag":459,"props":907,"children":908},{"style":669},[909],{"type":442,"value":672},{"type":437,"tag":459,"props":911,"children":912},{"style":717},[913],{"type":442,"value":729},{"type":437,"tag":459,"props":915,"children":916},{"style":680},[917],{"type":442,"value":918},"[",{"type":437,"tag":459,"props":920,"children":921},{"style":717},[922],{"type":442,"value":923},"middleIndex",{"type":437,"tag":459,"props":925,"children":926},{"style":680},[927],{"type":442,"value":928},"]",{"type":437,"tag":459,"props":930,"children":931},{"style":692},[932],{"type":442,"value":745},{"type":437,"tag":459,"props":934,"children":936},{"class":461,"line":935},13,[937,942,946,951,956,960,964,969,973],{"type":437,"tag":459,"props":938,"children":939},{"style":814},[940],{"type":442,"value":941},"    if",{"type":437,"tag":459,"props":943,"children":944},{"style":680},[945],{"type":442,"value":683},{"type":437,"tag":459,"props":947,"children":948},{"style":717},[949],{"type":442,"value":950},"middle",{"type":437,"tag":459,"props":952,"children":953},{"style":669},[954],{"type":442,"value":955}," ===",{"type":437,"tag":459,"props":957,"children":958},{"style":717},[959],{"type":442,"value":700},{"type":437,"tag":459,"props":961,"children":962},{"style":680},[963],{"type":442,"value":879},{"type":437,"tag":459,"props":965,"children":966},{"style":814},[967],{"type":442,"value":968},"return",{"type":437,"tag":459,"props":970,"children":971},{"style":717},[972],{"type":442,"value":853},{"type":437,"tag":459,"props":974,"children":975},{"style":692},[976],{"type":442,"value":745},{"type":437,"tag":459,"props":978,"children":980},{"class":461,"line":979},14,[981,985,989,993,998,1002],{"type":437,"tag":459,"props":982,"children":983},{"style":814},[984],{"type":442,"value":941},{"type":437,"tag":459,"props":986,"children":987},{"style":680},[988],{"type":442,"value":683},{"type":437,"tag":459,"props":990,"children":991},{"style":717},[992],{"type":442,"value":950},{"type":437,"tag":459,"props":994,"children":995},{"style":669},[996],{"type":442,"value":997}," \u003C",{"type":437,"tag":459,"props":999,"children":1000},{"style":717},[1001],{"type":442,"value":700},{"type":437,"tag":459,"props":1003,"children":1004},{"style":680},[1005],{"type":442,"value":705},{"type":437,"tag":459,"props":1007,"children":1009},{"class":461,"line":1008},15,[1010,1015,1019,1023,1027,1031],{"type":437,"tag":459,"props":1011,"children":1012},{"style":717},[1013],{"type":442,"value":1014},"      i",{"type":437,"tag":459,"props":1016,"children":1017},{"style":669},[1018],{"type":442,"value":672},{"type":437,"tag":459,"props":1020,"children":1021},{"style":717},[1022],{"type":442,"value":853},{"type":437,"tag":459,"props":1024,"children":1025},{"style":669},[1026],{"type":442,"value":870},{"type":437,"tag":459,"props":1028,"children":1029},{"style":765},[1030],{"type":442,"value":803},{"type":437,"tag":459,"props":1032,"children":1033},{"style":692},[1034],{"type":442,"value":745},{"type":437,"tag":459,"props":1036,"children":1038},{"class":461,"line":1037},16,[1039,1044,1049],{"type":437,"tag":459,"props":1040,"children":1041},{"style":680},[1042],{"type":442,"value":1043},"    } ",{"type":437,"tag":459,"props":1045,"children":1046},{"style":814},[1047],{"type":442,"value":1048},"else",{"type":437,"tag":459,"props":1050,"children":1051},{"style":680},[1052],{"type":442,"value":1053}," {\n",{"type":437,"tag":459,"props":1055,"children":1057},{"class":461,"line":1056},17,[1058,1063,1067,1071,1075,1079],{"type":437,"tag":459,"props":1059,"children":1060},{"style":717},[1061],{"type":442,"value":1062},"      j",{"type":437,"tag":459,"props":1064,"children":1065},{"style":669},[1066],{"type":442,"value":672},{"type":437,"tag":459,"props":1068,"children":1069},{"style":717},[1070],{"type":442,"value":853},{"type":437,"tag":459,"props":1072,"children":1073},{"style":669},[1074],{"type":442,"value":798},{"type":437,"tag":459,"props":1076,"children":1077},{"style":765},[1078],{"type":442,"value":803},{"type":437,"tag":459,"props":1080,"children":1081},{"style":692},[1082],{"type":442,"value":745},{"type":437,"tag":459,"props":1084,"children":1086},{"class":461,"line":1085},18,[1087],{"type":437,"tag":459,"props":1088,"children":1089},{"style":680},[1090],{"type":442,"value":1091},"    }\n",{"type":437,"tag":459,"props":1093,"children":1095},{"class":461,"line":1094},19,[1096],{"type":437,"tag":459,"props":1097,"children":1098},{"style":680},[1099],{"type":442,"value":1100},"  }\n",{"type":437,"tag":459,"props":1102,"children":1104},{"class":461,"line":1103},20,[1105,1110,1114,1119],{"type":437,"tag":459,"props":1106,"children":1107},{"style":814},[1108],{"type":442,"value":1109},"  return",{"type":437,"tag":459,"props":1111,"children":1112},{"style":669},[1113],{"type":442,"value":798},{"type":437,"tag":459,"props":1115,"children":1116},{"style":765},[1117],{"type":442,"value":1118},"1",{"type":437,"tag":459,"props":1120,"children":1121},{"style":692},[1122],{"type":442,"value":745},{"type":437,"tag":459,"props":1124,"children":1126},{"class":461,"line":1125},21,[1127,1132],{"type":437,"tag":459,"props":1128,"children":1129},{"style":680},[1130],{"type":442,"value":1131},"}",{"type":437,"tag":459,"props":1133,"children":1134},{"style":692},[1135],{"type":442,"value":745},{"type":437,"tag":1137,"props":1138,"children":1139},"style",{},[1140],{"type":442,"value":1141},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":430,"searchDepth":644,"depth":644,"links":1143},[1144,1145],{"id":551,"depth":471,"text":551},{"id":556,"depth":471,"text":556},"markdown","content:1.algorithm:3.leetcode:704.binary-search.md","content","1.algorithm/3.leetcode/704.binary-search.md","md",[1152,1154],{"_path":218,"title":217,"description":1153},"给你一个只包含三种字符的字符串，支持的字符类型分别是 '('、')' 和 '*'。请你检验这个字符串是否为有效字符串，如果是有效字符串返回 true 。",{"_path":224,"title":223,"description":1155},"给你一个整数数组 nums，请你将该数组升序排列。",1713426453740]