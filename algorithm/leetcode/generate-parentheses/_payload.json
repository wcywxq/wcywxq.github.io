[{"data":1,"prerenderedAt":1317},["Reactive",2],{"navigation":3,"/algorithm/leetcode/generate-parentheses":424,"/algorithm/leetcode/generate-parentheses-surround":1312},[4,237,265,403,410],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,396],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"随机数","/frontend-code-assessment/scene/random-number",{"title":382,"_path":383},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":385,"_path":386},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":388,"_path":389},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":391,"_path":392},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":394,"_path":395},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":397,"_path":398,"children":399},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[400],{"title":401,"_path":402},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":404,"_path":405,"children":406},"项目","/pro",[407],{"title":408,"_path":409},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":411,"_path":412,"children":413},"后端语言","/backend-languages",[414],{"title":415,"_path":416,"children":417},"Python","/backend-languages/python",[418,421],{"title":419,"_path":420},"基础","/backend-languages/python/base",{"title":422,"_path":423},"函数","/backend-languages/python/function",{"_path":62,"_dir":425,"_draft":426,"_partial":426,"_locale":427,"title":61,"description":428,"url":429,"body":430,"_type":1307,"_id":1308,"_source":1309,"_file":1310,"_extension":1311},"leetcode",false,"","数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。","https://leetcode.cn/problems/generate-parentheses",{"type":431,"children":432,"toc":1301},"root",[433,440,445,475,480,503,508,518,524,529,542,547,553,1295],{"type":434,"tag":435,"props":436,"children":437},"element","p",{},[438],{"type":439,"value":428},"text",{"type":434,"tag":435,"props":441,"children":442},{},[443],{"type":439,"value":444},"示例 1：",{"type":434,"tag":446,"props":447,"children":450},"pre",{"className":448,"code":449,"language":439,"meta":427,"style":427},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：n = 3\n输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",[451],{"type":434,"tag":452,"props":453,"children":454},"code",{"__ignoreMap":427},[455,466],{"type":434,"tag":456,"props":457,"children":460},"span",{"class":458,"line":459},"line",1,[461],{"type":434,"tag":456,"props":462,"children":463},{},[464],{"type":439,"value":465},"输入：n = 3\n",{"type":434,"tag":456,"props":467,"children":469},{"class":458,"line":468},2,[470],{"type":434,"tag":456,"props":471,"children":472},{},[473],{"type":439,"value":474},"输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",{"type":434,"tag":435,"props":476,"children":477},{},[478],{"type":439,"value":479},"示例 2：",{"type":434,"tag":446,"props":481,"children":483},{"className":448,"code":482,"language":439,"meta":427,"style":427},"输入：n = 1\n输出：[\"()\"]\n",[484],{"type":434,"tag":452,"props":485,"children":486},{"__ignoreMap":427},[487,495],{"type":434,"tag":456,"props":488,"children":489},{"class":458,"line":459},[490],{"type":434,"tag":456,"props":491,"children":492},{},[493],{"type":439,"value":494},"输入：n = 1\n",{"type":434,"tag":456,"props":496,"children":497},{"class":458,"line":468},[498],{"type":434,"tag":456,"props":499,"children":500},{},[501],{"type":439,"value":502},"输出：[\"()\"]\n",{"type":434,"tag":435,"props":504,"children":505},{},[506],{"type":439,"value":507},"提示：",{"type":434,"tag":509,"props":510,"children":511},"ul",{},[512],{"type":434,"tag":513,"props":514,"children":515},"li",{},[516],{"type":439,"value":517},"1 \u003C= n \u003C= 8",{"type":434,"tag":519,"props":520,"children":522},"h2",{"id":521},"解题思路",[523],{"type":439,"value":521},{"type":434,"tag":435,"props":525,"children":526},{},[527],{"type":439,"value":528},"由于需要求解所有的可能，因此回溯就不难想到，回溯的思路和写法相对比较固定，并且回溯的优化手段大多是剪枝。\n不难想到，如果左括号的数据小于右括号，我们可以提前退出，这就是这道题的剪枝。例如：())...，后面就不用看了，直接退出即可。回溯的退出条件也不难想到：",{"type":434,"tag":509,"props":530,"children":531},{},[532,537],{"type":434,"tag":513,"props":533,"children":534},{},[535],{"type":439,"value":536},"左括号数目 = 右括号数目",{"type":434,"tag":513,"props":538,"children":539},{},[540],{"type":439,"value":541},"左括号数据 + 右括号数据 = 2 * n\n因此这道题可以使用深度优先搜索（回溯思想），从空字符串开始构造，做加法，即 dfs(左括号数目，右括号数据，路径)，我们从 dfs(0, 0, \"\") 开始",{"type":434,"tag":519,"props":543,"children":545},{"id":544},"实现",[546],{"type":439,"value":544},{"type":434,"tag":548,"props":549,"children":551},"h3",{"id":550},"回溯",[552],{"type":439,"value":550},{"type":434,"tag":446,"props":554,"children":558},{"className":555,"code":556,"language":557,"meta":427,"style":427},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number} n\n * @return {string[]}\n */\nvar generateParenthesis = function (n) {\n  const res = [];\n\n  /**\n   * @param l 左侧括号已经用了几个\n   * @param r 右侧括号已经用了几个\n   * @param str 当前递归得到的拼接字符串结果\n   */\n  function dfs(l, r, str) {\n    if (l === n && r === n) {\n      return res.push(str);\n    }\n    // l \u003C r 时不满足条件，剪枝\n    if (l \u003C r) return;\n    // l \u003C n 时可插入左括号，最多可以插入 n 个\n    if (l \u003C n) {\n      dfs(l + 1, r, str + \"(\");\n    }\n    // r \u003C l 时，可以插入右括号\n    if (r \u003C l) {\n      dfs(l, r + 1, str + \")\");\n    }\n  }\n\n  dfs(0, 0, \"\");\n\n  return res;\n};\n","js",[559],{"type":434,"tag":452,"props":560,"children":561},{"__ignoreMap":427},[562,571,597,615,624,668,698,708,717,740,762,784,793,838,887,929,938,947,986,995,1023,1085,1093,1102,1131,1188,1196,1205,1213,1257,1265,1282],{"type":434,"tag":456,"props":563,"children":564},{"class":458,"line":459},[565],{"type":434,"tag":456,"props":566,"children":568},{"style":567},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[569],{"type":439,"value":570},"/**\n",{"type":434,"tag":456,"props":572,"children":573},{"class":458,"line":468},[574,579,585,591],{"type":434,"tag":456,"props":575,"children":576},{"style":567},[577],{"type":439,"value":578}," * ",{"type":434,"tag":456,"props":580,"children":582},{"style":581},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[583],{"type":439,"value":584},"@param",{"type":434,"tag":456,"props":586,"children":588},{"style":587},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[589],{"type":439,"value":590}," {number}",{"type":434,"tag":456,"props":592,"children":594},{"style":593},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[595],{"type":439,"value":596}," n\n",{"type":434,"tag":456,"props":598,"children":600},{"class":458,"line":599},3,[601,605,610],{"type":434,"tag":456,"props":602,"children":603},{"style":567},[604],{"type":439,"value":578},{"type":434,"tag":456,"props":606,"children":607},{"style":581},[608],{"type":439,"value":609},"@return",{"type":434,"tag":456,"props":611,"children":612},{"style":587},[613],{"type":439,"value":614}," {string[]}\n",{"type":434,"tag":456,"props":616,"children":618},{"class":458,"line":617},4,[619],{"type":434,"tag":456,"props":620,"children":621},{"style":567},[622],{"type":439,"value":623}," */\n",{"type":434,"tag":456,"props":625,"children":627},{"class":458,"line":626},5,[628,634,640,646,651,657,663],{"type":434,"tag":456,"props":629,"children":631},{"style":630},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[632],{"type":439,"value":633},"var",{"type":434,"tag":456,"props":635,"children":637},{"style":636},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[638],{"type":439,"value":639}," generateParenthesis",{"type":434,"tag":456,"props":641,"children":643},{"style":642},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[644],{"type":439,"value":645}," =",{"type":434,"tag":456,"props":647,"children":648},{"style":630},[649],{"type":439,"value":650}," function",{"type":434,"tag":456,"props":652,"children":654},{"style":653},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[655],{"type":439,"value":656}," (",{"type":434,"tag":456,"props":658,"children":660},{"style":659},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[661],{"type":439,"value":662},"n",{"type":434,"tag":456,"props":664,"children":665},{"style":653},[666],{"type":439,"value":667},") {\n",{"type":434,"tag":456,"props":669,"children":671},{"class":458,"line":670},6,[672,677,683,687,692],{"type":434,"tag":456,"props":673,"children":674},{"style":630},[675],{"type":439,"value":676},"  const",{"type":434,"tag":456,"props":678,"children":680},{"style":679},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[681],{"type":439,"value":682}," res",{"type":434,"tag":456,"props":684,"children":685},{"style":642},[686],{"type":439,"value":645},{"type":434,"tag":456,"props":688,"children":689},{"style":653},[690],{"type":439,"value":691}," []",{"type":434,"tag":456,"props":693,"children":695},{"style":694},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[696],{"type":439,"value":697},";\n",{"type":434,"tag":456,"props":699,"children":701},{"class":458,"line":700},7,[702],{"type":434,"tag":456,"props":703,"children":705},{"emptyLinePlaceholder":704},true,[706],{"type":439,"value":707},"\n",{"type":434,"tag":456,"props":709,"children":711},{"class":458,"line":710},8,[712],{"type":434,"tag":456,"props":713,"children":714},{"style":567},[715],{"type":439,"value":716},"  /**\n",{"type":434,"tag":456,"props":718,"children":720},{"class":458,"line":719},9,[721,726,730,735],{"type":434,"tag":456,"props":722,"children":723},{"style":567},[724],{"type":439,"value":725},"   * ",{"type":434,"tag":456,"props":727,"children":728},{"style":581},[729],{"type":439,"value":584},{"type":434,"tag":456,"props":731,"children":732},{"style":593},[733],{"type":439,"value":734}," l",{"type":434,"tag":456,"props":736,"children":737},{"style":567},[738],{"type":439,"value":739}," 左侧括号已经用了几个\n",{"type":434,"tag":456,"props":741,"children":743},{"class":458,"line":742},10,[744,748,752,757],{"type":434,"tag":456,"props":745,"children":746},{"style":567},[747],{"type":439,"value":725},{"type":434,"tag":456,"props":749,"children":750},{"style":581},[751],{"type":439,"value":584},{"type":434,"tag":456,"props":753,"children":754},{"style":593},[755],{"type":439,"value":756}," r",{"type":434,"tag":456,"props":758,"children":759},{"style":567},[760],{"type":439,"value":761}," 右侧括号已经用了几个\n",{"type":434,"tag":456,"props":763,"children":765},{"class":458,"line":764},11,[766,770,774,779],{"type":434,"tag":456,"props":767,"children":768},{"style":567},[769],{"type":439,"value":725},{"type":434,"tag":456,"props":771,"children":772},{"style":581},[773],{"type":439,"value":584},{"type":434,"tag":456,"props":775,"children":776},{"style":593},[777],{"type":439,"value":778}," str",{"type":434,"tag":456,"props":780,"children":781},{"style":567},[782],{"type":439,"value":783}," 当前递归得到的拼接字符串结果\n",{"type":434,"tag":456,"props":785,"children":787},{"class":458,"line":786},12,[788],{"type":434,"tag":456,"props":789,"children":790},{"style":567},[791],{"type":439,"value":792},"   */\n",{"type":434,"tag":456,"props":794,"children":796},{"class":458,"line":795},13,[797,802,807,812,817,822,826,830,834],{"type":434,"tag":456,"props":798,"children":799},{"style":630},[800],{"type":439,"value":801},"  function",{"type":434,"tag":456,"props":803,"children":804},{"style":636},[805],{"type":439,"value":806}," dfs",{"type":434,"tag":456,"props":808,"children":809},{"style":653},[810],{"type":439,"value":811},"(",{"type":434,"tag":456,"props":813,"children":814},{"style":659},[815],{"type":439,"value":816},"l",{"type":434,"tag":456,"props":818,"children":819},{"style":694},[820],{"type":439,"value":821},",",{"type":434,"tag":456,"props":823,"children":824},{"style":659},[825],{"type":439,"value":756},{"type":434,"tag":456,"props":827,"children":828},{"style":694},[829],{"type":439,"value":821},{"type":434,"tag":456,"props":831,"children":832},{"style":659},[833],{"type":439,"value":778},{"type":434,"tag":456,"props":835,"children":836},{"style":653},[837],{"type":439,"value":667},{"type":434,"tag":456,"props":839,"children":841},{"class":458,"line":840},14,[842,848,852,856,861,866,871,875,879,883],{"type":434,"tag":456,"props":843,"children":845},{"style":844},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[846],{"type":439,"value":847},"    if",{"type":434,"tag":456,"props":849,"children":850},{"style":653},[851],{"type":439,"value":656},{"type":434,"tag":456,"props":853,"children":854},{"style":679},[855],{"type":439,"value":816},{"type":434,"tag":456,"props":857,"children":858},{"style":642},[859],{"type":439,"value":860}," ===",{"type":434,"tag":456,"props":862,"children":863},{"style":679},[864],{"type":439,"value":865}," n",{"type":434,"tag":456,"props":867,"children":868},{"style":642},[869],{"type":439,"value":870}," &&",{"type":434,"tag":456,"props":872,"children":873},{"style":679},[874],{"type":439,"value":756},{"type":434,"tag":456,"props":876,"children":877},{"style":642},[878],{"type":439,"value":860},{"type":434,"tag":456,"props":880,"children":881},{"style":679},[882],{"type":439,"value":865},{"type":434,"tag":456,"props":884,"children":885},{"style":653},[886],{"type":439,"value":667},{"type":434,"tag":456,"props":888,"children":890},{"class":458,"line":889},15,[891,896,900,906,911,915,920,925],{"type":434,"tag":456,"props":892,"children":893},{"style":844},[894],{"type":439,"value":895},"      return",{"type":434,"tag":456,"props":897,"children":898},{"style":679},[899],{"type":439,"value":682},{"type":434,"tag":456,"props":901,"children":903},{"style":902},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[904],{"type":439,"value":905},".",{"type":434,"tag":456,"props":907,"children":908},{"style":636},[909],{"type":439,"value":910},"push",{"type":434,"tag":456,"props":912,"children":913},{"style":653},[914],{"type":439,"value":811},{"type":434,"tag":456,"props":916,"children":917},{"style":679},[918],{"type":439,"value":919},"str",{"type":434,"tag":456,"props":921,"children":922},{"style":653},[923],{"type":439,"value":924},")",{"type":434,"tag":456,"props":926,"children":927},{"style":694},[928],{"type":439,"value":697},{"type":434,"tag":456,"props":930,"children":932},{"class":458,"line":931},16,[933],{"type":434,"tag":456,"props":934,"children":935},{"style":653},[936],{"type":439,"value":937},"    }\n",{"type":434,"tag":456,"props":939,"children":941},{"class":458,"line":940},17,[942],{"type":434,"tag":456,"props":943,"children":944},{"style":567},[945],{"type":439,"value":946},"    // l \u003C r 时不满足条件，剪枝\n",{"type":434,"tag":456,"props":948,"children":950},{"class":458,"line":949},18,[951,955,959,963,968,972,977,982],{"type":434,"tag":456,"props":952,"children":953},{"style":844},[954],{"type":439,"value":847},{"type":434,"tag":456,"props":956,"children":957},{"style":653},[958],{"type":439,"value":656},{"type":434,"tag":456,"props":960,"children":961},{"style":679},[962],{"type":439,"value":816},{"type":434,"tag":456,"props":964,"children":965},{"style":642},[966],{"type":439,"value":967}," \u003C",{"type":434,"tag":456,"props":969,"children":970},{"style":679},[971],{"type":439,"value":756},{"type":434,"tag":456,"props":973,"children":974},{"style":653},[975],{"type":439,"value":976},") ",{"type":434,"tag":456,"props":978,"children":979},{"style":844},[980],{"type":439,"value":981},"return",{"type":434,"tag":456,"props":983,"children":984},{"style":694},[985],{"type":439,"value":697},{"type":434,"tag":456,"props":987,"children":989},{"class":458,"line":988},19,[990],{"type":434,"tag":456,"props":991,"children":992},{"style":567},[993],{"type":439,"value":994},"    // l \u003C n 时可插入左括号，最多可以插入 n 个\n",{"type":434,"tag":456,"props":996,"children":998},{"class":458,"line":997},20,[999,1003,1007,1011,1015,1019],{"type":434,"tag":456,"props":1000,"children":1001},{"style":844},[1002],{"type":439,"value":847},{"type":434,"tag":456,"props":1004,"children":1005},{"style":653},[1006],{"type":439,"value":656},{"type":434,"tag":456,"props":1008,"children":1009},{"style":679},[1010],{"type":439,"value":816},{"type":434,"tag":456,"props":1012,"children":1013},{"style":642},[1014],{"type":439,"value":967},{"type":434,"tag":456,"props":1016,"children":1017},{"style":679},[1018],{"type":439,"value":865},{"type":434,"tag":456,"props":1020,"children":1021},{"style":653},[1022],{"type":439,"value":667},{"type":434,"tag":456,"props":1024,"children":1026},{"class":458,"line":1025},21,[1027,1032,1036,1040,1045,1051,1055,1059,1063,1067,1071,1077,1081],{"type":434,"tag":456,"props":1028,"children":1029},{"style":636},[1030],{"type":439,"value":1031},"      dfs",{"type":434,"tag":456,"props":1033,"children":1034},{"style":653},[1035],{"type":439,"value":811},{"type":434,"tag":456,"props":1037,"children":1038},{"style":679},[1039],{"type":439,"value":816},{"type":434,"tag":456,"props":1041,"children":1042},{"style":642},[1043],{"type":439,"value":1044}," +",{"type":434,"tag":456,"props":1046,"children":1048},{"style":1047},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[1049],{"type":439,"value":1050}," 1",{"type":434,"tag":456,"props":1052,"children":1053},{"style":694},[1054],{"type":439,"value":821},{"type":434,"tag":456,"props":1056,"children":1057},{"style":679},[1058],{"type":439,"value":756},{"type":434,"tag":456,"props":1060,"children":1061},{"style":694},[1062],{"type":439,"value":821},{"type":434,"tag":456,"props":1064,"children":1065},{"style":679},[1066],{"type":439,"value":778},{"type":434,"tag":456,"props":1068,"children":1069},{"style":642},[1070],{"type":439,"value":1044},{"type":434,"tag":456,"props":1072,"children":1074},{"style":1073},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[1075],{"type":439,"value":1076}," \"(\"",{"type":434,"tag":456,"props":1078,"children":1079},{"style":653},[1080],{"type":439,"value":924},{"type":434,"tag":456,"props":1082,"children":1083},{"style":694},[1084],{"type":439,"value":697},{"type":434,"tag":456,"props":1086,"children":1088},{"class":458,"line":1087},22,[1089],{"type":434,"tag":456,"props":1090,"children":1091},{"style":653},[1092],{"type":439,"value":937},{"type":434,"tag":456,"props":1094,"children":1096},{"class":458,"line":1095},23,[1097],{"type":434,"tag":456,"props":1098,"children":1099},{"style":567},[1100],{"type":439,"value":1101},"    // r \u003C l 时，可以插入右括号\n",{"type":434,"tag":456,"props":1103,"children":1105},{"class":458,"line":1104},24,[1106,1110,1114,1119,1123,1127],{"type":434,"tag":456,"props":1107,"children":1108},{"style":844},[1109],{"type":439,"value":847},{"type":434,"tag":456,"props":1111,"children":1112},{"style":653},[1113],{"type":439,"value":656},{"type":434,"tag":456,"props":1115,"children":1116},{"style":679},[1117],{"type":439,"value":1118},"r",{"type":434,"tag":456,"props":1120,"children":1121},{"style":642},[1122],{"type":439,"value":967},{"type":434,"tag":456,"props":1124,"children":1125},{"style":679},[1126],{"type":439,"value":734},{"type":434,"tag":456,"props":1128,"children":1129},{"style":653},[1130],{"type":439,"value":667},{"type":434,"tag":456,"props":1132,"children":1134},{"class":458,"line":1133},25,[1135,1139,1143,1147,1151,1155,1159,1163,1167,1171,1175,1180,1184],{"type":434,"tag":456,"props":1136,"children":1137},{"style":636},[1138],{"type":439,"value":1031},{"type":434,"tag":456,"props":1140,"children":1141},{"style":653},[1142],{"type":439,"value":811},{"type":434,"tag":456,"props":1144,"children":1145},{"style":679},[1146],{"type":439,"value":816},{"type":434,"tag":456,"props":1148,"children":1149},{"style":694},[1150],{"type":439,"value":821},{"type":434,"tag":456,"props":1152,"children":1153},{"style":679},[1154],{"type":439,"value":756},{"type":434,"tag":456,"props":1156,"children":1157},{"style":642},[1158],{"type":439,"value":1044},{"type":434,"tag":456,"props":1160,"children":1161},{"style":1047},[1162],{"type":439,"value":1050},{"type":434,"tag":456,"props":1164,"children":1165},{"style":694},[1166],{"type":439,"value":821},{"type":434,"tag":456,"props":1168,"children":1169},{"style":679},[1170],{"type":439,"value":778},{"type":434,"tag":456,"props":1172,"children":1173},{"style":642},[1174],{"type":439,"value":1044},{"type":434,"tag":456,"props":1176,"children":1177},{"style":1073},[1178],{"type":439,"value":1179}," \")\"",{"type":434,"tag":456,"props":1181,"children":1182},{"style":653},[1183],{"type":439,"value":924},{"type":434,"tag":456,"props":1185,"children":1186},{"style":694},[1187],{"type":439,"value":697},{"type":434,"tag":456,"props":1189,"children":1191},{"class":458,"line":1190},26,[1192],{"type":434,"tag":456,"props":1193,"children":1194},{"style":653},[1195],{"type":439,"value":937},{"type":434,"tag":456,"props":1197,"children":1199},{"class":458,"line":1198},27,[1200],{"type":434,"tag":456,"props":1201,"children":1202},{"style":653},[1203],{"type":439,"value":1204},"  }\n",{"type":434,"tag":456,"props":1206,"children":1208},{"class":458,"line":1207},28,[1209],{"type":434,"tag":456,"props":1210,"children":1211},{"emptyLinePlaceholder":704},[1212],{"type":439,"value":707},{"type":434,"tag":456,"props":1214,"children":1216},{"class":458,"line":1215},29,[1217,1222,1226,1231,1235,1240,1244,1249,1253],{"type":434,"tag":456,"props":1218,"children":1219},{"style":636},[1220],{"type":439,"value":1221},"  dfs",{"type":434,"tag":456,"props":1223,"children":1224},{"style":653},[1225],{"type":439,"value":811},{"type":434,"tag":456,"props":1227,"children":1228},{"style":1047},[1229],{"type":439,"value":1230},"0",{"type":434,"tag":456,"props":1232,"children":1233},{"style":694},[1234],{"type":439,"value":821},{"type":434,"tag":456,"props":1236,"children":1237},{"style":1047},[1238],{"type":439,"value":1239}," 0",{"type":434,"tag":456,"props":1241,"children":1242},{"style":694},[1243],{"type":439,"value":821},{"type":434,"tag":456,"props":1245,"children":1246},{"style":1073},[1247],{"type":439,"value":1248}," \"\"",{"type":434,"tag":456,"props":1250,"children":1251},{"style":653},[1252],{"type":439,"value":924},{"type":434,"tag":456,"props":1254,"children":1255},{"style":694},[1256],{"type":439,"value":697},{"type":434,"tag":456,"props":1258,"children":1260},{"class":458,"line":1259},30,[1261],{"type":434,"tag":456,"props":1262,"children":1263},{"emptyLinePlaceholder":704},[1264],{"type":439,"value":707},{"type":434,"tag":456,"props":1266,"children":1268},{"class":458,"line":1267},31,[1269,1274,1278],{"type":434,"tag":456,"props":1270,"children":1271},{"style":844},[1272],{"type":439,"value":1273},"  return",{"type":434,"tag":456,"props":1275,"children":1276},{"style":679},[1277],{"type":439,"value":682},{"type":434,"tag":456,"props":1279,"children":1280},{"style":694},[1281],{"type":439,"value":697},{"type":434,"tag":456,"props":1283,"children":1285},{"class":458,"line":1284},32,[1286,1291],{"type":434,"tag":456,"props":1287,"children":1288},{"style":653},[1289],{"type":439,"value":1290},"}",{"type":434,"tag":456,"props":1292,"children":1293},{"style":694},[1294],{"type":439,"value":697},{"type":434,"tag":1296,"props":1297,"children":1298},"style",{},[1299],{"type":439,"value":1300},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":427,"searchDepth":626,"depth":626,"links":1302},[1303,1304],{"id":521,"depth":468,"text":521},{"id":544,"depth":468,"text":544,"children":1305},[1306],{"id":550,"depth":599,"text":550},"markdown","content:1.algorithm:3.leetcode:22.generate-parentheses.md","content","1.algorithm/3.leetcode/22.generate-parentheses.md","md",[1313,1315],{"_path":59,"title":58,"description":1314},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",{"_path":65,"title":64,"description":1316},"给你一个链表数组，每个链表都已经按升序排列。",1713339869104]