[{"data":1,"prerenderedAt":1320},["Reactive",2],{"navigation":3,"/algorithm/leetcode/generate-parentheses":427,"/algorithm/leetcode/generate-parentheses-surround":1315},[4,237,265,406,413],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,399],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":382,"_path":383},"随机数","/frontend-code-assessment/scene/random-number",{"title":385,"_path":386},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":388,"_path":389},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":391,"_path":392},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":394,"_path":395},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":397,"_path":398},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":400,"_path":401,"children":402},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[403],{"title":404,"_path":405},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":407,"_path":408,"children":409},"项目","/pro",[410],{"title":411,"_path":412},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":414,"_path":415,"children":416},"后端语言","/backend-languages",[417],{"title":418,"_path":419,"children":420},"Python","/backend-languages/python",[421,424],{"title":422,"_path":423},"基础","/backend-languages/python/base",{"title":425,"_path":426},"函数","/backend-languages/python/function",{"_path":62,"_dir":428,"_draft":429,"_partial":429,"_locale":430,"title":61,"description":431,"url":432,"body":433,"_type":1310,"_id":1311,"_source":1312,"_file":1313,"_extension":1314},"leetcode",false,"","数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。","https://leetcode.cn/problems/generate-parentheses",{"type":434,"children":435,"toc":1304},"root",[436,443,448,478,483,506,511,521,527,532,545,550,556,1298],{"type":437,"tag":438,"props":439,"children":440},"element","p",{},[441],{"type":442,"value":431},"text",{"type":437,"tag":438,"props":444,"children":445},{},[446],{"type":442,"value":447},"示例 1：",{"type":437,"tag":449,"props":450,"children":453},"pre",{"className":451,"code":452,"language":442,"meta":430,"style":430},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：n = 3\n输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",[454],{"type":437,"tag":455,"props":456,"children":457},"code",{"__ignoreMap":430},[458,469],{"type":437,"tag":459,"props":460,"children":463},"span",{"class":461,"line":462},"line",1,[464],{"type":437,"tag":459,"props":465,"children":466},{},[467],{"type":442,"value":468},"输入：n = 3\n",{"type":437,"tag":459,"props":470,"children":472},{"class":461,"line":471},2,[473],{"type":437,"tag":459,"props":474,"children":475},{},[476],{"type":442,"value":477},"输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",{"type":437,"tag":438,"props":479,"children":480},{},[481],{"type":442,"value":482},"示例 2：",{"type":437,"tag":449,"props":484,"children":486},{"className":451,"code":485,"language":442,"meta":430,"style":430},"输入：n = 1\n输出：[\"()\"]\n",[487],{"type":437,"tag":455,"props":488,"children":489},{"__ignoreMap":430},[490,498],{"type":437,"tag":459,"props":491,"children":492},{"class":461,"line":462},[493],{"type":437,"tag":459,"props":494,"children":495},{},[496],{"type":442,"value":497},"输入：n = 1\n",{"type":437,"tag":459,"props":499,"children":500},{"class":461,"line":471},[501],{"type":437,"tag":459,"props":502,"children":503},{},[504],{"type":442,"value":505},"输出：[\"()\"]\n",{"type":437,"tag":438,"props":507,"children":508},{},[509],{"type":442,"value":510},"提示：",{"type":437,"tag":512,"props":513,"children":514},"ul",{},[515],{"type":437,"tag":516,"props":517,"children":518},"li",{},[519],{"type":442,"value":520},"1 \u003C= n \u003C= 8",{"type":437,"tag":522,"props":523,"children":525},"h2",{"id":524},"解题思路",[526],{"type":442,"value":524},{"type":437,"tag":438,"props":528,"children":529},{},[530],{"type":442,"value":531},"由于需要求解所有的可能，因此回溯就不难想到，回溯的思路和写法相对比较固定，并且回溯的优化手段大多是剪枝。\n不难想到，如果左括号的数据小于右括号，我们可以提前退出，这就是这道题的剪枝。例如：())...，后面就不用看了，直接退出即可。回溯的退出条件也不难想到：",{"type":437,"tag":512,"props":533,"children":534},{},[535,540],{"type":437,"tag":516,"props":536,"children":537},{},[538],{"type":442,"value":539},"左括号数目 = 右括号数目",{"type":437,"tag":516,"props":541,"children":542},{},[543],{"type":442,"value":544},"左括号数据 + 右括号数据 = 2 * n\n因此这道题可以使用深度优先搜索（回溯思想），从空字符串开始构造，做加法，即 dfs(左括号数目，右括号数据，路径)，我们从 dfs(0, 0, \"\") 开始",{"type":437,"tag":522,"props":546,"children":548},{"id":547},"实现",[549],{"type":442,"value":547},{"type":437,"tag":551,"props":552,"children":554},"h3",{"id":553},"回溯",[555],{"type":442,"value":553},{"type":437,"tag":449,"props":557,"children":561},{"className":558,"code":559,"language":560,"meta":430,"style":430},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number} n\n * @return {string[]}\n */\nvar generateParenthesis = function (n) {\n  const res = [];\n\n  /**\n   * @param l 左侧括号已经用了几个\n   * @param r 右侧括号已经用了几个\n   * @param str 当前递归得到的拼接字符串结果\n   */\n  function dfs(l, r, str) {\n    if (l === n && r === n) {\n      return res.push(str);\n    }\n    // l \u003C r 时不满足条件，剪枝\n    if (l \u003C r) return;\n    // l \u003C n 时可插入左括号，最多可以插入 n 个\n    if (l \u003C n) {\n      dfs(l + 1, r, str + \"(\");\n    }\n    // r \u003C l 时，可以插入右括号\n    if (r \u003C l) {\n      dfs(l, r + 1, str + \")\");\n    }\n  }\n\n  dfs(0, 0, \"\");\n\n  return res;\n};\n","js",[562],{"type":437,"tag":455,"props":563,"children":564},{"__ignoreMap":430},[565,574,600,618,627,671,701,711,720,743,765,787,796,841,890,932,941,950,989,998,1026,1088,1096,1105,1134,1191,1199,1208,1216,1260,1268,1285],{"type":437,"tag":459,"props":566,"children":567},{"class":461,"line":462},[568],{"type":437,"tag":459,"props":569,"children":571},{"style":570},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[572],{"type":442,"value":573},"/**\n",{"type":437,"tag":459,"props":575,"children":576},{"class":461,"line":471},[577,582,588,594],{"type":437,"tag":459,"props":578,"children":579},{"style":570},[580],{"type":442,"value":581}," * ",{"type":437,"tag":459,"props":583,"children":585},{"style":584},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[586],{"type":442,"value":587},"@param",{"type":437,"tag":459,"props":589,"children":591},{"style":590},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[592],{"type":442,"value":593}," {number}",{"type":437,"tag":459,"props":595,"children":597},{"style":596},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[598],{"type":442,"value":599}," n\n",{"type":437,"tag":459,"props":601,"children":603},{"class":461,"line":602},3,[604,608,613],{"type":437,"tag":459,"props":605,"children":606},{"style":570},[607],{"type":442,"value":581},{"type":437,"tag":459,"props":609,"children":610},{"style":584},[611],{"type":442,"value":612},"@return",{"type":437,"tag":459,"props":614,"children":615},{"style":590},[616],{"type":442,"value":617}," {string[]}\n",{"type":437,"tag":459,"props":619,"children":621},{"class":461,"line":620},4,[622],{"type":437,"tag":459,"props":623,"children":624},{"style":570},[625],{"type":442,"value":626}," */\n",{"type":437,"tag":459,"props":628,"children":630},{"class":461,"line":629},5,[631,637,643,649,654,660,666],{"type":437,"tag":459,"props":632,"children":634},{"style":633},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[635],{"type":442,"value":636},"var",{"type":437,"tag":459,"props":638,"children":640},{"style":639},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[641],{"type":442,"value":642}," generateParenthesis",{"type":437,"tag":459,"props":644,"children":646},{"style":645},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[647],{"type":442,"value":648}," =",{"type":437,"tag":459,"props":650,"children":651},{"style":633},[652],{"type":442,"value":653}," function",{"type":437,"tag":459,"props":655,"children":657},{"style":656},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[658],{"type":442,"value":659}," (",{"type":437,"tag":459,"props":661,"children":663},{"style":662},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[664],{"type":442,"value":665},"n",{"type":437,"tag":459,"props":667,"children":668},{"style":656},[669],{"type":442,"value":670},") {\n",{"type":437,"tag":459,"props":672,"children":674},{"class":461,"line":673},6,[675,680,686,690,695],{"type":437,"tag":459,"props":676,"children":677},{"style":633},[678],{"type":442,"value":679},"  const",{"type":437,"tag":459,"props":681,"children":683},{"style":682},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[684],{"type":442,"value":685}," res",{"type":437,"tag":459,"props":687,"children":688},{"style":645},[689],{"type":442,"value":648},{"type":437,"tag":459,"props":691,"children":692},{"style":656},[693],{"type":442,"value":694}," []",{"type":437,"tag":459,"props":696,"children":698},{"style":697},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[699],{"type":442,"value":700},";\n",{"type":437,"tag":459,"props":702,"children":704},{"class":461,"line":703},7,[705],{"type":437,"tag":459,"props":706,"children":708},{"emptyLinePlaceholder":707},true,[709],{"type":442,"value":710},"\n",{"type":437,"tag":459,"props":712,"children":714},{"class":461,"line":713},8,[715],{"type":437,"tag":459,"props":716,"children":717},{"style":570},[718],{"type":442,"value":719},"  /**\n",{"type":437,"tag":459,"props":721,"children":723},{"class":461,"line":722},9,[724,729,733,738],{"type":437,"tag":459,"props":725,"children":726},{"style":570},[727],{"type":442,"value":728},"   * ",{"type":437,"tag":459,"props":730,"children":731},{"style":584},[732],{"type":442,"value":587},{"type":437,"tag":459,"props":734,"children":735},{"style":596},[736],{"type":442,"value":737}," l",{"type":437,"tag":459,"props":739,"children":740},{"style":570},[741],{"type":442,"value":742}," 左侧括号已经用了几个\n",{"type":437,"tag":459,"props":744,"children":746},{"class":461,"line":745},10,[747,751,755,760],{"type":437,"tag":459,"props":748,"children":749},{"style":570},[750],{"type":442,"value":728},{"type":437,"tag":459,"props":752,"children":753},{"style":584},[754],{"type":442,"value":587},{"type":437,"tag":459,"props":756,"children":757},{"style":596},[758],{"type":442,"value":759}," r",{"type":437,"tag":459,"props":761,"children":762},{"style":570},[763],{"type":442,"value":764}," 右侧括号已经用了几个\n",{"type":437,"tag":459,"props":766,"children":768},{"class":461,"line":767},11,[769,773,777,782],{"type":437,"tag":459,"props":770,"children":771},{"style":570},[772],{"type":442,"value":728},{"type":437,"tag":459,"props":774,"children":775},{"style":584},[776],{"type":442,"value":587},{"type":437,"tag":459,"props":778,"children":779},{"style":596},[780],{"type":442,"value":781}," str",{"type":437,"tag":459,"props":783,"children":784},{"style":570},[785],{"type":442,"value":786}," 当前递归得到的拼接字符串结果\n",{"type":437,"tag":459,"props":788,"children":790},{"class":461,"line":789},12,[791],{"type":437,"tag":459,"props":792,"children":793},{"style":570},[794],{"type":442,"value":795},"   */\n",{"type":437,"tag":459,"props":797,"children":799},{"class":461,"line":798},13,[800,805,810,815,820,825,829,833,837],{"type":437,"tag":459,"props":801,"children":802},{"style":633},[803],{"type":442,"value":804},"  function",{"type":437,"tag":459,"props":806,"children":807},{"style":639},[808],{"type":442,"value":809}," dfs",{"type":437,"tag":459,"props":811,"children":812},{"style":656},[813],{"type":442,"value":814},"(",{"type":437,"tag":459,"props":816,"children":817},{"style":662},[818],{"type":442,"value":819},"l",{"type":437,"tag":459,"props":821,"children":822},{"style":697},[823],{"type":442,"value":824},",",{"type":437,"tag":459,"props":826,"children":827},{"style":662},[828],{"type":442,"value":759},{"type":437,"tag":459,"props":830,"children":831},{"style":697},[832],{"type":442,"value":824},{"type":437,"tag":459,"props":834,"children":835},{"style":662},[836],{"type":442,"value":781},{"type":437,"tag":459,"props":838,"children":839},{"style":656},[840],{"type":442,"value":670},{"type":437,"tag":459,"props":842,"children":844},{"class":461,"line":843},14,[845,851,855,859,864,869,874,878,882,886],{"type":437,"tag":459,"props":846,"children":848},{"style":847},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[849],{"type":442,"value":850},"    if",{"type":437,"tag":459,"props":852,"children":853},{"style":656},[854],{"type":442,"value":659},{"type":437,"tag":459,"props":856,"children":857},{"style":682},[858],{"type":442,"value":819},{"type":437,"tag":459,"props":860,"children":861},{"style":645},[862],{"type":442,"value":863}," ===",{"type":437,"tag":459,"props":865,"children":866},{"style":682},[867],{"type":442,"value":868}," n",{"type":437,"tag":459,"props":870,"children":871},{"style":645},[872],{"type":442,"value":873}," &&",{"type":437,"tag":459,"props":875,"children":876},{"style":682},[877],{"type":442,"value":759},{"type":437,"tag":459,"props":879,"children":880},{"style":645},[881],{"type":442,"value":863},{"type":437,"tag":459,"props":883,"children":884},{"style":682},[885],{"type":442,"value":868},{"type":437,"tag":459,"props":887,"children":888},{"style":656},[889],{"type":442,"value":670},{"type":437,"tag":459,"props":891,"children":893},{"class":461,"line":892},15,[894,899,903,909,914,918,923,928],{"type":437,"tag":459,"props":895,"children":896},{"style":847},[897],{"type":442,"value":898},"      return",{"type":437,"tag":459,"props":900,"children":901},{"style":682},[902],{"type":442,"value":685},{"type":437,"tag":459,"props":904,"children":906},{"style":905},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[907],{"type":442,"value":908},".",{"type":437,"tag":459,"props":910,"children":911},{"style":639},[912],{"type":442,"value":913},"push",{"type":437,"tag":459,"props":915,"children":916},{"style":656},[917],{"type":442,"value":814},{"type":437,"tag":459,"props":919,"children":920},{"style":682},[921],{"type":442,"value":922},"str",{"type":437,"tag":459,"props":924,"children":925},{"style":656},[926],{"type":442,"value":927},")",{"type":437,"tag":459,"props":929,"children":930},{"style":697},[931],{"type":442,"value":700},{"type":437,"tag":459,"props":933,"children":935},{"class":461,"line":934},16,[936],{"type":437,"tag":459,"props":937,"children":938},{"style":656},[939],{"type":442,"value":940},"    }\n",{"type":437,"tag":459,"props":942,"children":944},{"class":461,"line":943},17,[945],{"type":437,"tag":459,"props":946,"children":947},{"style":570},[948],{"type":442,"value":949},"    // l \u003C r 时不满足条件，剪枝\n",{"type":437,"tag":459,"props":951,"children":953},{"class":461,"line":952},18,[954,958,962,966,971,975,980,985],{"type":437,"tag":459,"props":955,"children":956},{"style":847},[957],{"type":442,"value":850},{"type":437,"tag":459,"props":959,"children":960},{"style":656},[961],{"type":442,"value":659},{"type":437,"tag":459,"props":963,"children":964},{"style":682},[965],{"type":442,"value":819},{"type":437,"tag":459,"props":967,"children":968},{"style":645},[969],{"type":442,"value":970}," \u003C",{"type":437,"tag":459,"props":972,"children":973},{"style":682},[974],{"type":442,"value":759},{"type":437,"tag":459,"props":976,"children":977},{"style":656},[978],{"type":442,"value":979},") ",{"type":437,"tag":459,"props":981,"children":982},{"style":847},[983],{"type":442,"value":984},"return",{"type":437,"tag":459,"props":986,"children":987},{"style":697},[988],{"type":442,"value":700},{"type":437,"tag":459,"props":990,"children":992},{"class":461,"line":991},19,[993],{"type":437,"tag":459,"props":994,"children":995},{"style":570},[996],{"type":442,"value":997},"    // l \u003C n 时可插入左括号，最多可以插入 n 个\n",{"type":437,"tag":459,"props":999,"children":1001},{"class":461,"line":1000},20,[1002,1006,1010,1014,1018,1022],{"type":437,"tag":459,"props":1003,"children":1004},{"style":847},[1005],{"type":442,"value":850},{"type":437,"tag":459,"props":1007,"children":1008},{"style":656},[1009],{"type":442,"value":659},{"type":437,"tag":459,"props":1011,"children":1012},{"style":682},[1013],{"type":442,"value":819},{"type":437,"tag":459,"props":1015,"children":1016},{"style":645},[1017],{"type":442,"value":970},{"type":437,"tag":459,"props":1019,"children":1020},{"style":682},[1021],{"type":442,"value":868},{"type":437,"tag":459,"props":1023,"children":1024},{"style":656},[1025],{"type":442,"value":670},{"type":437,"tag":459,"props":1027,"children":1029},{"class":461,"line":1028},21,[1030,1035,1039,1043,1048,1054,1058,1062,1066,1070,1074,1080,1084],{"type":437,"tag":459,"props":1031,"children":1032},{"style":639},[1033],{"type":442,"value":1034},"      dfs",{"type":437,"tag":459,"props":1036,"children":1037},{"style":656},[1038],{"type":442,"value":814},{"type":437,"tag":459,"props":1040,"children":1041},{"style":682},[1042],{"type":442,"value":819},{"type":437,"tag":459,"props":1044,"children":1045},{"style":645},[1046],{"type":442,"value":1047}," +",{"type":437,"tag":459,"props":1049,"children":1051},{"style":1050},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[1052],{"type":442,"value":1053}," 1",{"type":437,"tag":459,"props":1055,"children":1056},{"style":697},[1057],{"type":442,"value":824},{"type":437,"tag":459,"props":1059,"children":1060},{"style":682},[1061],{"type":442,"value":759},{"type":437,"tag":459,"props":1063,"children":1064},{"style":697},[1065],{"type":442,"value":824},{"type":437,"tag":459,"props":1067,"children":1068},{"style":682},[1069],{"type":442,"value":781},{"type":437,"tag":459,"props":1071,"children":1072},{"style":645},[1073],{"type":442,"value":1047},{"type":437,"tag":459,"props":1075,"children":1077},{"style":1076},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[1078],{"type":442,"value":1079}," \"(\"",{"type":437,"tag":459,"props":1081,"children":1082},{"style":656},[1083],{"type":442,"value":927},{"type":437,"tag":459,"props":1085,"children":1086},{"style":697},[1087],{"type":442,"value":700},{"type":437,"tag":459,"props":1089,"children":1091},{"class":461,"line":1090},22,[1092],{"type":437,"tag":459,"props":1093,"children":1094},{"style":656},[1095],{"type":442,"value":940},{"type":437,"tag":459,"props":1097,"children":1099},{"class":461,"line":1098},23,[1100],{"type":437,"tag":459,"props":1101,"children":1102},{"style":570},[1103],{"type":442,"value":1104},"    // r \u003C l 时，可以插入右括号\n",{"type":437,"tag":459,"props":1106,"children":1108},{"class":461,"line":1107},24,[1109,1113,1117,1122,1126,1130],{"type":437,"tag":459,"props":1110,"children":1111},{"style":847},[1112],{"type":442,"value":850},{"type":437,"tag":459,"props":1114,"children":1115},{"style":656},[1116],{"type":442,"value":659},{"type":437,"tag":459,"props":1118,"children":1119},{"style":682},[1120],{"type":442,"value":1121},"r",{"type":437,"tag":459,"props":1123,"children":1124},{"style":645},[1125],{"type":442,"value":970},{"type":437,"tag":459,"props":1127,"children":1128},{"style":682},[1129],{"type":442,"value":737},{"type":437,"tag":459,"props":1131,"children":1132},{"style":656},[1133],{"type":442,"value":670},{"type":437,"tag":459,"props":1135,"children":1137},{"class":461,"line":1136},25,[1138,1142,1146,1150,1154,1158,1162,1166,1170,1174,1178,1183,1187],{"type":437,"tag":459,"props":1139,"children":1140},{"style":639},[1141],{"type":442,"value":1034},{"type":437,"tag":459,"props":1143,"children":1144},{"style":656},[1145],{"type":442,"value":814},{"type":437,"tag":459,"props":1147,"children":1148},{"style":682},[1149],{"type":442,"value":819},{"type":437,"tag":459,"props":1151,"children":1152},{"style":697},[1153],{"type":442,"value":824},{"type":437,"tag":459,"props":1155,"children":1156},{"style":682},[1157],{"type":442,"value":759},{"type":437,"tag":459,"props":1159,"children":1160},{"style":645},[1161],{"type":442,"value":1047},{"type":437,"tag":459,"props":1163,"children":1164},{"style":1050},[1165],{"type":442,"value":1053},{"type":437,"tag":459,"props":1167,"children":1168},{"style":697},[1169],{"type":442,"value":824},{"type":437,"tag":459,"props":1171,"children":1172},{"style":682},[1173],{"type":442,"value":781},{"type":437,"tag":459,"props":1175,"children":1176},{"style":645},[1177],{"type":442,"value":1047},{"type":437,"tag":459,"props":1179,"children":1180},{"style":1076},[1181],{"type":442,"value":1182}," \")\"",{"type":437,"tag":459,"props":1184,"children":1185},{"style":656},[1186],{"type":442,"value":927},{"type":437,"tag":459,"props":1188,"children":1189},{"style":697},[1190],{"type":442,"value":700},{"type":437,"tag":459,"props":1192,"children":1194},{"class":461,"line":1193},26,[1195],{"type":437,"tag":459,"props":1196,"children":1197},{"style":656},[1198],{"type":442,"value":940},{"type":437,"tag":459,"props":1200,"children":1202},{"class":461,"line":1201},27,[1203],{"type":437,"tag":459,"props":1204,"children":1205},{"style":656},[1206],{"type":442,"value":1207},"  }\n",{"type":437,"tag":459,"props":1209,"children":1211},{"class":461,"line":1210},28,[1212],{"type":437,"tag":459,"props":1213,"children":1214},{"emptyLinePlaceholder":707},[1215],{"type":442,"value":710},{"type":437,"tag":459,"props":1217,"children":1219},{"class":461,"line":1218},29,[1220,1225,1229,1234,1238,1243,1247,1252,1256],{"type":437,"tag":459,"props":1221,"children":1222},{"style":639},[1223],{"type":442,"value":1224},"  dfs",{"type":437,"tag":459,"props":1226,"children":1227},{"style":656},[1228],{"type":442,"value":814},{"type":437,"tag":459,"props":1230,"children":1231},{"style":1050},[1232],{"type":442,"value":1233},"0",{"type":437,"tag":459,"props":1235,"children":1236},{"style":697},[1237],{"type":442,"value":824},{"type":437,"tag":459,"props":1239,"children":1240},{"style":1050},[1241],{"type":442,"value":1242}," 0",{"type":437,"tag":459,"props":1244,"children":1245},{"style":697},[1246],{"type":442,"value":824},{"type":437,"tag":459,"props":1248,"children":1249},{"style":1076},[1250],{"type":442,"value":1251}," \"\"",{"type":437,"tag":459,"props":1253,"children":1254},{"style":656},[1255],{"type":442,"value":927},{"type":437,"tag":459,"props":1257,"children":1258},{"style":697},[1259],{"type":442,"value":700},{"type":437,"tag":459,"props":1261,"children":1263},{"class":461,"line":1262},30,[1264],{"type":437,"tag":459,"props":1265,"children":1266},{"emptyLinePlaceholder":707},[1267],{"type":442,"value":710},{"type":437,"tag":459,"props":1269,"children":1271},{"class":461,"line":1270},31,[1272,1277,1281],{"type":437,"tag":459,"props":1273,"children":1274},{"style":847},[1275],{"type":442,"value":1276},"  return",{"type":437,"tag":459,"props":1278,"children":1279},{"style":682},[1280],{"type":442,"value":685},{"type":437,"tag":459,"props":1282,"children":1283},{"style":697},[1284],{"type":442,"value":700},{"type":437,"tag":459,"props":1286,"children":1288},{"class":461,"line":1287},32,[1289,1294],{"type":437,"tag":459,"props":1290,"children":1291},{"style":656},[1292],{"type":442,"value":1293},"}",{"type":437,"tag":459,"props":1295,"children":1296},{"style":697},[1297],{"type":442,"value":700},{"type":437,"tag":1299,"props":1300,"children":1301},"style",{},[1302],{"type":442,"value":1303},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":430,"searchDepth":629,"depth":629,"links":1305},[1306,1307],{"id":524,"depth":471,"text":524},{"id":547,"depth":471,"text":547,"children":1308},[1309],{"id":553,"depth":602,"text":553},"markdown","content:1.algorithm:3.leetcode:22.generate-parentheses.md","content","1.algorithm/3.leetcode/22.generate-parentheses.md","md",[1316,1318],{"_path":59,"title":58,"description":1317},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",{"_path":65,"title":64,"description":1319},"给你一个链表数组，每个链表都已经按升序排列。",1713426447150]