[{"data":1,"prerenderedAt":1323},["Reactive",2],{"navigation":3,"/algorithm/leetcode/generate-parentheses":430,"/algorithm/leetcode/generate-parentheses-surround":1318},[4,237,265,409,416],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,402],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396,399],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":379,"_path":380},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":382,"_path":383},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":385,"_path":386},"随机数","/frontend-code-assessment/scene/random-number",{"title":388,"_path":389},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":391,"_path":392},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":394,"_path":395},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":397,"_path":398},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":400,"_path":401},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":403,"_path":404,"children":405},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[406],{"title":407,"_path":408},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":410,"_path":411,"children":412},"项目","/pro",[413],{"title":414,"_path":415},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":417,"_path":418,"children":419},"后端语言","/backend-languages",[420],{"title":421,"_path":422,"children":423},"Python","/backend-languages/python",[424,427],{"title":425,"_path":426},"基础","/backend-languages/python/base",{"title":428,"_path":429},"函数","/backend-languages/python/function",{"_path":62,"_dir":431,"_draft":432,"_partial":432,"_locale":433,"title":61,"description":434,"url":435,"body":436,"_type":1313,"_id":1314,"_source":1315,"_file":1316,"_extension":1317},"leetcode",false,"","数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。","https://leetcode.cn/problems/generate-parentheses",{"type":437,"children":438,"toc":1307},"root",[439,446,451,481,486,509,514,524,530,535,548,553,559,1301],{"type":440,"tag":441,"props":442,"children":443},"element","p",{},[444],{"type":445,"value":434},"text",{"type":440,"tag":441,"props":447,"children":448},{},[449],{"type":445,"value":450},"示例 1：",{"type":440,"tag":452,"props":453,"children":456},"pre",{"className":454,"code":455,"language":445,"meta":433,"style":433},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：n = 3\n输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",[457],{"type":440,"tag":458,"props":459,"children":460},"code",{"__ignoreMap":433},[461,472],{"type":440,"tag":462,"props":463,"children":466},"span",{"class":464,"line":465},"line",1,[467],{"type":440,"tag":462,"props":468,"children":469},{},[470],{"type":445,"value":471},"输入：n = 3\n",{"type":440,"tag":462,"props":473,"children":475},{"class":464,"line":474},2,[476],{"type":440,"tag":462,"props":477,"children":478},{},[479],{"type":445,"value":480},"输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",{"type":440,"tag":441,"props":482,"children":483},{},[484],{"type":445,"value":485},"示例 2：",{"type":440,"tag":452,"props":487,"children":489},{"className":454,"code":488,"language":445,"meta":433,"style":433},"输入：n = 1\n输出：[\"()\"]\n",[490],{"type":440,"tag":458,"props":491,"children":492},{"__ignoreMap":433},[493,501],{"type":440,"tag":462,"props":494,"children":495},{"class":464,"line":465},[496],{"type":440,"tag":462,"props":497,"children":498},{},[499],{"type":445,"value":500},"输入：n = 1\n",{"type":440,"tag":462,"props":502,"children":503},{"class":464,"line":474},[504],{"type":440,"tag":462,"props":505,"children":506},{},[507],{"type":445,"value":508},"输出：[\"()\"]\n",{"type":440,"tag":441,"props":510,"children":511},{},[512],{"type":445,"value":513},"提示：",{"type":440,"tag":515,"props":516,"children":517},"ul",{},[518],{"type":440,"tag":519,"props":520,"children":521},"li",{},[522],{"type":445,"value":523},"1 \u003C= n \u003C= 8",{"type":440,"tag":525,"props":526,"children":528},"h2",{"id":527},"解题思路",[529],{"type":445,"value":527},{"type":440,"tag":441,"props":531,"children":532},{},[533],{"type":445,"value":534},"由于需要求解所有的可能，因此回溯就不难想到，回溯的思路和写法相对比较固定，并且回溯的优化手段大多是剪枝。\n不难想到，如果左括号的数据小于右括号，我们可以提前退出，这就是这道题的剪枝。例如：())...，后面就不用看了，直接退出即可。回溯的退出条件也不难想到：",{"type":440,"tag":515,"props":536,"children":537},{},[538,543],{"type":440,"tag":519,"props":539,"children":540},{},[541],{"type":445,"value":542},"左括号数目 = 右括号数目",{"type":440,"tag":519,"props":544,"children":545},{},[546],{"type":445,"value":547},"左括号数据 + 右括号数据 = 2 * n\n因此这道题可以使用深度优先搜索（回溯思想），从空字符串开始构造，做加法，即 dfs(左括号数目，右括号数据，路径)，我们从 dfs(0, 0, \"\") 开始",{"type":440,"tag":525,"props":549,"children":551},{"id":550},"实现",[552],{"type":445,"value":550},{"type":440,"tag":554,"props":555,"children":557},"h3",{"id":556},"回溯",[558],{"type":445,"value":556},{"type":440,"tag":452,"props":560,"children":564},{"className":561,"code":562,"language":563,"meta":433,"style":433},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number} n\n * @return {string[]}\n */\nvar generateParenthesis = function (n) {\n  const res = [];\n\n  /**\n   * @param l 左侧括号已经用了几个\n   * @param r 右侧括号已经用了几个\n   * @param str 当前递归得到的拼接字符串结果\n   */\n  function dfs(l, r, str) {\n    if (l === n && r === n) {\n      return res.push(str);\n    }\n    // l \u003C r 时不满足条件，剪枝\n    if (l \u003C r) return;\n    // l \u003C n 时可插入左括号，最多可以插入 n 个\n    if (l \u003C n) {\n      dfs(l + 1, r, str + \"(\");\n    }\n    // r \u003C l 时，可以插入右括号\n    if (r \u003C l) {\n      dfs(l, r + 1, str + \")\");\n    }\n  }\n\n  dfs(0, 0, \"\");\n\n  return res;\n};\n","js",[565],{"type":440,"tag":458,"props":566,"children":567},{"__ignoreMap":433},[568,577,603,621,630,674,704,714,723,746,768,790,799,844,893,935,944,953,992,1001,1029,1091,1099,1108,1137,1194,1202,1211,1219,1263,1271,1288],{"type":440,"tag":462,"props":569,"children":570},{"class":464,"line":465},[571],{"type":440,"tag":462,"props":572,"children":574},{"style":573},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[575],{"type":445,"value":576},"/**\n",{"type":440,"tag":462,"props":578,"children":579},{"class":464,"line":474},[580,585,591,597],{"type":440,"tag":462,"props":581,"children":582},{"style":573},[583],{"type":445,"value":584}," * ",{"type":440,"tag":462,"props":586,"children":588},{"style":587},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[589],{"type":445,"value":590},"@param",{"type":440,"tag":462,"props":592,"children":594},{"style":593},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[595],{"type":445,"value":596}," {number}",{"type":440,"tag":462,"props":598,"children":600},{"style":599},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[601],{"type":445,"value":602}," n\n",{"type":440,"tag":462,"props":604,"children":606},{"class":464,"line":605},3,[607,611,616],{"type":440,"tag":462,"props":608,"children":609},{"style":573},[610],{"type":445,"value":584},{"type":440,"tag":462,"props":612,"children":613},{"style":587},[614],{"type":445,"value":615},"@return",{"type":440,"tag":462,"props":617,"children":618},{"style":593},[619],{"type":445,"value":620}," {string[]}\n",{"type":440,"tag":462,"props":622,"children":624},{"class":464,"line":623},4,[625],{"type":440,"tag":462,"props":626,"children":627},{"style":573},[628],{"type":445,"value":629}," */\n",{"type":440,"tag":462,"props":631,"children":633},{"class":464,"line":632},5,[634,640,646,652,657,663,669],{"type":440,"tag":462,"props":635,"children":637},{"style":636},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[638],{"type":445,"value":639},"var",{"type":440,"tag":462,"props":641,"children":643},{"style":642},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[644],{"type":445,"value":645}," generateParenthesis",{"type":440,"tag":462,"props":647,"children":649},{"style":648},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[650],{"type":445,"value":651}," =",{"type":440,"tag":462,"props":653,"children":654},{"style":636},[655],{"type":445,"value":656}," function",{"type":440,"tag":462,"props":658,"children":660},{"style":659},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[661],{"type":445,"value":662}," (",{"type":440,"tag":462,"props":664,"children":666},{"style":665},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[667],{"type":445,"value":668},"n",{"type":440,"tag":462,"props":670,"children":671},{"style":659},[672],{"type":445,"value":673},") {\n",{"type":440,"tag":462,"props":675,"children":677},{"class":464,"line":676},6,[678,683,689,693,698],{"type":440,"tag":462,"props":679,"children":680},{"style":636},[681],{"type":445,"value":682},"  const",{"type":440,"tag":462,"props":684,"children":686},{"style":685},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[687],{"type":445,"value":688}," res",{"type":440,"tag":462,"props":690,"children":691},{"style":648},[692],{"type":445,"value":651},{"type":440,"tag":462,"props":694,"children":695},{"style":659},[696],{"type":445,"value":697}," []",{"type":440,"tag":462,"props":699,"children":701},{"style":700},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[702],{"type":445,"value":703},";\n",{"type":440,"tag":462,"props":705,"children":707},{"class":464,"line":706},7,[708],{"type":440,"tag":462,"props":709,"children":711},{"emptyLinePlaceholder":710},true,[712],{"type":445,"value":713},"\n",{"type":440,"tag":462,"props":715,"children":717},{"class":464,"line":716},8,[718],{"type":440,"tag":462,"props":719,"children":720},{"style":573},[721],{"type":445,"value":722},"  /**\n",{"type":440,"tag":462,"props":724,"children":726},{"class":464,"line":725},9,[727,732,736,741],{"type":440,"tag":462,"props":728,"children":729},{"style":573},[730],{"type":445,"value":731},"   * ",{"type":440,"tag":462,"props":733,"children":734},{"style":587},[735],{"type":445,"value":590},{"type":440,"tag":462,"props":737,"children":738},{"style":599},[739],{"type":445,"value":740}," l",{"type":440,"tag":462,"props":742,"children":743},{"style":573},[744],{"type":445,"value":745}," 左侧括号已经用了几个\n",{"type":440,"tag":462,"props":747,"children":749},{"class":464,"line":748},10,[750,754,758,763],{"type":440,"tag":462,"props":751,"children":752},{"style":573},[753],{"type":445,"value":731},{"type":440,"tag":462,"props":755,"children":756},{"style":587},[757],{"type":445,"value":590},{"type":440,"tag":462,"props":759,"children":760},{"style":599},[761],{"type":445,"value":762}," r",{"type":440,"tag":462,"props":764,"children":765},{"style":573},[766],{"type":445,"value":767}," 右侧括号已经用了几个\n",{"type":440,"tag":462,"props":769,"children":771},{"class":464,"line":770},11,[772,776,780,785],{"type":440,"tag":462,"props":773,"children":774},{"style":573},[775],{"type":445,"value":731},{"type":440,"tag":462,"props":777,"children":778},{"style":587},[779],{"type":445,"value":590},{"type":440,"tag":462,"props":781,"children":782},{"style":599},[783],{"type":445,"value":784}," str",{"type":440,"tag":462,"props":786,"children":787},{"style":573},[788],{"type":445,"value":789}," 当前递归得到的拼接字符串结果\n",{"type":440,"tag":462,"props":791,"children":793},{"class":464,"line":792},12,[794],{"type":440,"tag":462,"props":795,"children":796},{"style":573},[797],{"type":445,"value":798},"   */\n",{"type":440,"tag":462,"props":800,"children":802},{"class":464,"line":801},13,[803,808,813,818,823,828,832,836,840],{"type":440,"tag":462,"props":804,"children":805},{"style":636},[806],{"type":445,"value":807},"  function",{"type":440,"tag":462,"props":809,"children":810},{"style":642},[811],{"type":445,"value":812}," dfs",{"type":440,"tag":462,"props":814,"children":815},{"style":659},[816],{"type":445,"value":817},"(",{"type":440,"tag":462,"props":819,"children":820},{"style":665},[821],{"type":445,"value":822},"l",{"type":440,"tag":462,"props":824,"children":825},{"style":700},[826],{"type":445,"value":827},",",{"type":440,"tag":462,"props":829,"children":830},{"style":665},[831],{"type":445,"value":762},{"type":440,"tag":462,"props":833,"children":834},{"style":700},[835],{"type":445,"value":827},{"type":440,"tag":462,"props":837,"children":838},{"style":665},[839],{"type":445,"value":784},{"type":440,"tag":462,"props":841,"children":842},{"style":659},[843],{"type":445,"value":673},{"type":440,"tag":462,"props":845,"children":847},{"class":464,"line":846},14,[848,854,858,862,867,872,877,881,885,889],{"type":440,"tag":462,"props":849,"children":851},{"style":850},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[852],{"type":445,"value":853},"    if",{"type":440,"tag":462,"props":855,"children":856},{"style":659},[857],{"type":445,"value":662},{"type":440,"tag":462,"props":859,"children":860},{"style":685},[861],{"type":445,"value":822},{"type":440,"tag":462,"props":863,"children":864},{"style":648},[865],{"type":445,"value":866}," ===",{"type":440,"tag":462,"props":868,"children":869},{"style":685},[870],{"type":445,"value":871}," n",{"type":440,"tag":462,"props":873,"children":874},{"style":648},[875],{"type":445,"value":876}," &&",{"type":440,"tag":462,"props":878,"children":879},{"style":685},[880],{"type":445,"value":762},{"type":440,"tag":462,"props":882,"children":883},{"style":648},[884],{"type":445,"value":866},{"type":440,"tag":462,"props":886,"children":887},{"style":685},[888],{"type":445,"value":871},{"type":440,"tag":462,"props":890,"children":891},{"style":659},[892],{"type":445,"value":673},{"type":440,"tag":462,"props":894,"children":896},{"class":464,"line":895},15,[897,902,906,912,917,921,926,931],{"type":440,"tag":462,"props":898,"children":899},{"style":850},[900],{"type":445,"value":901},"      return",{"type":440,"tag":462,"props":903,"children":904},{"style":685},[905],{"type":445,"value":688},{"type":440,"tag":462,"props":907,"children":909},{"style":908},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[910],{"type":445,"value":911},".",{"type":440,"tag":462,"props":913,"children":914},{"style":642},[915],{"type":445,"value":916},"push",{"type":440,"tag":462,"props":918,"children":919},{"style":659},[920],{"type":445,"value":817},{"type":440,"tag":462,"props":922,"children":923},{"style":685},[924],{"type":445,"value":925},"str",{"type":440,"tag":462,"props":927,"children":928},{"style":659},[929],{"type":445,"value":930},")",{"type":440,"tag":462,"props":932,"children":933},{"style":700},[934],{"type":445,"value":703},{"type":440,"tag":462,"props":936,"children":938},{"class":464,"line":937},16,[939],{"type":440,"tag":462,"props":940,"children":941},{"style":659},[942],{"type":445,"value":943},"    }\n",{"type":440,"tag":462,"props":945,"children":947},{"class":464,"line":946},17,[948],{"type":440,"tag":462,"props":949,"children":950},{"style":573},[951],{"type":445,"value":952},"    // l \u003C r 时不满足条件，剪枝\n",{"type":440,"tag":462,"props":954,"children":956},{"class":464,"line":955},18,[957,961,965,969,974,978,983,988],{"type":440,"tag":462,"props":958,"children":959},{"style":850},[960],{"type":445,"value":853},{"type":440,"tag":462,"props":962,"children":963},{"style":659},[964],{"type":445,"value":662},{"type":440,"tag":462,"props":966,"children":967},{"style":685},[968],{"type":445,"value":822},{"type":440,"tag":462,"props":970,"children":971},{"style":648},[972],{"type":445,"value":973}," \u003C",{"type":440,"tag":462,"props":975,"children":976},{"style":685},[977],{"type":445,"value":762},{"type":440,"tag":462,"props":979,"children":980},{"style":659},[981],{"type":445,"value":982},") ",{"type":440,"tag":462,"props":984,"children":985},{"style":850},[986],{"type":445,"value":987},"return",{"type":440,"tag":462,"props":989,"children":990},{"style":700},[991],{"type":445,"value":703},{"type":440,"tag":462,"props":993,"children":995},{"class":464,"line":994},19,[996],{"type":440,"tag":462,"props":997,"children":998},{"style":573},[999],{"type":445,"value":1000},"    // l \u003C n 时可插入左括号，最多可以插入 n 个\n",{"type":440,"tag":462,"props":1002,"children":1004},{"class":464,"line":1003},20,[1005,1009,1013,1017,1021,1025],{"type":440,"tag":462,"props":1006,"children":1007},{"style":850},[1008],{"type":445,"value":853},{"type":440,"tag":462,"props":1010,"children":1011},{"style":659},[1012],{"type":445,"value":662},{"type":440,"tag":462,"props":1014,"children":1015},{"style":685},[1016],{"type":445,"value":822},{"type":440,"tag":462,"props":1018,"children":1019},{"style":648},[1020],{"type":445,"value":973},{"type":440,"tag":462,"props":1022,"children":1023},{"style":685},[1024],{"type":445,"value":871},{"type":440,"tag":462,"props":1026,"children":1027},{"style":659},[1028],{"type":445,"value":673},{"type":440,"tag":462,"props":1030,"children":1032},{"class":464,"line":1031},21,[1033,1038,1042,1046,1051,1057,1061,1065,1069,1073,1077,1083,1087],{"type":440,"tag":462,"props":1034,"children":1035},{"style":642},[1036],{"type":445,"value":1037},"      dfs",{"type":440,"tag":462,"props":1039,"children":1040},{"style":659},[1041],{"type":445,"value":817},{"type":440,"tag":462,"props":1043,"children":1044},{"style":685},[1045],{"type":445,"value":822},{"type":440,"tag":462,"props":1047,"children":1048},{"style":648},[1049],{"type":445,"value":1050}," +",{"type":440,"tag":462,"props":1052,"children":1054},{"style":1053},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[1055],{"type":445,"value":1056}," 1",{"type":440,"tag":462,"props":1058,"children":1059},{"style":700},[1060],{"type":445,"value":827},{"type":440,"tag":462,"props":1062,"children":1063},{"style":685},[1064],{"type":445,"value":762},{"type":440,"tag":462,"props":1066,"children":1067},{"style":700},[1068],{"type":445,"value":827},{"type":440,"tag":462,"props":1070,"children":1071},{"style":685},[1072],{"type":445,"value":784},{"type":440,"tag":462,"props":1074,"children":1075},{"style":648},[1076],{"type":445,"value":1050},{"type":440,"tag":462,"props":1078,"children":1080},{"style":1079},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[1081],{"type":445,"value":1082}," \"(\"",{"type":440,"tag":462,"props":1084,"children":1085},{"style":659},[1086],{"type":445,"value":930},{"type":440,"tag":462,"props":1088,"children":1089},{"style":700},[1090],{"type":445,"value":703},{"type":440,"tag":462,"props":1092,"children":1094},{"class":464,"line":1093},22,[1095],{"type":440,"tag":462,"props":1096,"children":1097},{"style":659},[1098],{"type":445,"value":943},{"type":440,"tag":462,"props":1100,"children":1102},{"class":464,"line":1101},23,[1103],{"type":440,"tag":462,"props":1104,"children":1105},{"style":573},[1106],{"type":445,"value":1107},"    // r \u003C l 时，可以插入右括号\n",{"type":440,"tag":462,"props":1109,"children":1111},{"class":464,"line":1110},24,[1112,1116,1120,1125,1129,1133],{"type":440,"tag":462,"props":1113,"children":1114},{"style":850},[1115],{"type":445,"value":853},{"type":440,"tag":462,"props":1117,"children":1118},{"style":659},[1119],{"type":445,"value":662},{"type":440,"tag":462,"props":1121,"children":1122},{"style":685},[1123],{"type":445,"value":1124},"r",{"type":440,"tag":462,"props":1126,"children":1127},{"style":648},[1128],{"type":445,"value":973},{"type":440,"tag":462,"props":1130,"children":1131},{"style":685},[1132],{"type":445,"value":740},{"type":440,"tag":462,"props":1134,"children":1135},{"style":659},[1136],{"type":445,"value":673},{"type":440,"tag":462,"props":1138,"children":1140},{"class":464,"line":1139},25,[1141,1145,1149,1153,1157,1161,1165,1169,1173,1177,1181,1186,1190],{"type":440,"tag":462,"props":1142,"children":1143},{"style":642},[1144],{"type":445,"value":1037},{"type":440,"tag":462,"props":1146,"children":1147},{"style":659},[1148],{"type":445,"value":817},{"type":440,"tag":462,"props":1150,"children":1151},{"style":685},[1152],{"type":445,"value":822},{"type":440,"tag":462,"props":1154,"children":1155},{"style":700},[1156],{"type":445,"value":827},{"type":440,"tag":462,"props":1158,"children":1159},{"style":685},[1160],{"type":445,"value":762},{"type":440,"tag":462,"props":1162,"children":1163},{"style":648},[1164],{"type":445,"value":1050},{"type":440,"tag":462,"props":1166,"children":1167},{"style":1053},[1168],{"type":445,"value":1056},{"type":440,"tag":462,"props":1170,"children":1171},{"style":700},[1172],{"type":445,"value":827},{"type":440,"tag":462,"props":1174,"children":1175},{"style":685},[1176],{"type":445,"value":784},{"type":440,"tag":462,"props":1178,"children":1179},{"style":648},[1180],{"type":445,"value":1050},{"type":440,"tag":462,"props":1182,"children":1183},{"style":1079},[1184],{"type":445,"value":1185}," \")\"",{"type":440,"tag":462,"props":1187,"children":1188},{"style":659},[1189],{"type":445,"value":930},{"type":440,"tag":462,"props":1191,"children":1192},{"style":700},[1193],{"type":445,"value":703},{"type":440,"tag":462,"props":1195,"children":1197},{"class":464,"line":1196},26,[1198],{"type":440,"tag":462,"props":1199,"children":1200},{"style":659},[1201],{"type":445,"value":943},{"type":440,"tag":462,"props":1203,"children":1205},{"class":464,"line":1204},27,[1206],{"type":440,"tag":462,"props":1207,"children":1208},{"style":659},[1209],{"type":445,"value":1210},"  }\n",{"type":440,"tag":462,"props":1212,"children":1214},{"class":464,"line":1213},28,[1215],{"type":440,"tag":462,"props":1216,"children":1217},{"emptyLinePlaceholder":710},[1218],{"type":445,"value":713},{"type":440,"tag":462,"props":1220,"children":1222},{"class":464,"line":1221},29,[1223,1228,1232,1237,1241,1246,1250,1255,1259],{"type":440,"tag":462,"props":1224,"children":1225},{"style":642},[1226],{"type":445,"value":1227},"  dfs",{"type":440,"tag":462,"props":1229,"children":1230},{"style":659},[1231],{"type":445,"value":817},{"type":440,"tag":462,"props":1233,"children":1234},{"style":1053},[1235],{"type":445,"value":1236},"0",{"type":440,"tag":462,"props":1238,"children":1239},{"style":700},[1240],{"type":445,"value":827},{"type":440,"tag":462,"props":1242,"children":1243},{"style":1053},[1244],{"type":445,"value":1245}," 0",{"type":440,"tag":462,"props":1247,"children":1248},{"style":700},[1249],{"type":445,"value":827},{"type":440,"tag":462,"props":1251,"children":1252},{"style":1079},[1253],{"type":445,"value":1254}," \"\"",{"type":440,"tag":462,"props":1256,"children":1257},{"style":659},[1258],{"type":445,"value":930},{"type":440,"tag":462,"props":1260,"children":1261},{"style":700},[1262],{"type":445,"value":703},{"type":440,"tag":462,"props":1264,"children":1266},{"class":464,"line":1265},30,[1267],{"type":440,"tag":462,"props":1268,"children":1269},{"emptyLinePlaceholder":710},[1270],{"type":445,"value":713},{"type":440,"tag":462,"props":1272,"children":1274},{"class":464,"line":1273},31,[1275,1280,1284],{"type":440,"tag":462,"props":1276,"children":1277},{"style":850},[1278],{"type":445,"value":1279},"  return",{"type":440,"tag":462,"props":1281,"children":1282},{"style":685},[1283],{"type":445,"value":688},{"type":440,"tag":462,"props":1285,"children":1286},{"style":700},[1287],{"type":445,"value":703},{"type":440,"tag":462,"props":1289,"children":1291},{"class":464,"line":1290},32,[1292,1297],{"type":440,"tag":462,"props":1293,"children":1294},{"style":659},[1295],{"type":445,"value":1296},"}",{"type":440,"tag":462,"props":1298,"children":1299},{"style":700},[1300],{"type":445,"value":703},{"type":440,"tag":1302,"props":1303,"children":1304},"style",{},[1305],{"type":445,"value":1306},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":433,"searchDepth":632,"depth":632,"links":1308},[1309,1310],{"id":527,"depth":474,"text":527},{"id":550,"depth":474,"text":550,"children":1311},[1312],{"id":556,"depth":605,"text":556},"markdown","content:1.algorithm:3.leetcode:22.generate-parentheses.md","content","1.algorithm/3.leetcode/22.generate-parentheses.md","md",[1319,1321],{"_path":59,"title":58,"description":1320},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",{"_path":65,"title":64,"description":1322},"给你一个链表数组，每个链表都已经按升序排列。",1713426808638]