[{"data":1,"prerenderedAt":1107},["Reactive",2],{"navigation":3,"/algorithm/leetcode/kids-with-the-greatest-number-of-candies":430,"/algorithm/leetcode/kids-with-the-greatest-number-of-candies-surround":1102},[4,237,265,409,416],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,402],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396,399],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":379,"_path":380},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":382,"_path":383},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":385,"_path":386},"随机数","/frontend-code-assessment/scene/random-number",{"title":388,"_path":389},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":391,"_path":392},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":394,"_path":395},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":397,"_path":398},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":400,"_path":401},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":403,"_path":404,"children":405},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[406],{"title":407,"_path":408},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":410,"_path":411,"children":412},"项目","/pro",[413],{"title":414,"_path":415},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":417,"_path":418,"children":419},"后端语言","/backend-languages",[420],{"title":421,"_path":422,"children":423},"Python","/backend-languages/python",[424,427],{"title":425,"_path":426},"基础","/backend-languages/python/base",{"title":428,"_path":429},"函数","/backend-languages/python/function",{"_path":233,"_dir":431,"_draft":432,"_partial":432,"_locale":433,"title":232,"description":434,"url":435,"body":436,"_type":1097,"_id":1098,"_source":1099,"_file":1100,"_extension":1101},"leetcode",false,"","给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。","https://leetcode.cn/problems/kids-with-the-greatest-number-of-candies",{"type":437,"children":438,"toc":1093},"root",[439,446,451,456,540,545,576,581,604,609,629,635,640,1087],{"type":440,"tag":441,"props":442,"children":443},"element","p",{},[444],{"type":445,"value":434},"text",{"type":440,"tag":441,"props":447,"children":448},{},[449],{"type":445,"value":450},"对每一个孩子，检查是否存在一种方案，将额外的 extraCandies 个糖果分配给孩子们之后，此孩子有 最多 的糖果。注意，允许有多个孩子同时拥有 最多 的糖果数目。",{"type":440,"tag":441,"props":452,"children":453},{},[454],{"type":445,"value":455},"示例 1：",{"type":440,"tag":457,"props":458,"children":461},"pre",{"className":459,"code":460,"language":445,"meta":433,"style":433},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：candies = [2,3,5,1,3], extraCandies = 3\n输出：[true,true,true,false,true]\n解释：\n孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",[462],{"type":440,"tag":463,"props":464,"children":465},"code",{"__ignoreMap":433},[466,477,486,495,504,513,522,531],{"type":440,"tag":467,"props":468,"children":471},"span",{"class":469,"line":470},"line",1,[472],{"type":440,"tag":467,"props":473,"children":474},{},[475],{"type":445,"value":476},"输入：candies = [2,3,5,1,3], extraCandies = 3\n",{"type":440,"tag":467,"props":478,"children":480},{"class":469,"line":479},2,[481],{"type":440,"tag":467,"props":482,"children":483},{},[484],{"type":445,"value":485},"输出：[true,true,true,false,true]\n",{"type":440,"tag":467,"props":487,"children":489},{"class":469,"line":488},3,[490],{"type":440,"tag":467,"props":491,"children":492},{},[493],{"type":445,"value":494},"解释：\n",{"type":440,"tag":467,"props":496,"children":498},{"class":469,"line":497},4,[499],{"type":440,"tag":467,"props":500,"children":501},{},[502],{"type":445,"value":503},"孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n",{"type":440,"tag":467,"props":505,"children":507},{"class":469,"line":506},5,[508],{"type":440,"tag":467,"props":509,"children":510},{},[511],{"type":445,"value":512},"孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":440,"tag":467,"props":514,"children":516},{"class":469,"line":515},6,[517],{"type":440,"tag":467,"props":518,"children":519},{},[520],{"type":445,"value":521},"孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n",{"type":440,"tag":467,"props":523,"children":525},{"class":469,"line":524},7,[526],{"type":440,"tag":467,"props":527,"children":528},{},[529],{"type":445,"value":530},"孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n",{"type":440,"tag":467,"props":532,"children":534},{"class":469,"line":533},8,[535],{"type":440,"tag":467,"props":536,"children":537},{},[538],{"type":445,"value":539},"孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":440,"tag":441,"props":541,"children":542},{},[543],{"type":445,"value":544},"示例 2：",{"type":440,"tag":457,"props":546,"children":548},{"className":459,"code":547,"language":445,"meta":433,"style":433},"输入：candies = [4,2,1,1,2], extraCandies = 1\n输出：[true,false,false,false,false]\n解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",[549],{"type":440,"tag":463,"props":550,"children":551},{"__ignoreMap":433},[552,560,568],{"type":440,"tag":467,"props":553,"children":554},{"class":469,"line":470},[555],{"type":440,"tag":467,"props":556,"children":557},{},[558],{"type":445,"value":559},"输入：candies = [4,2,1,1,2], extraCandies = 1\n",{"type":440,"tag":467,"props":561,"children":562},{"class":469,"line":479},[563],{"type":440,"tag":467,"props":564,"children":565},{},[566],{"type":445,"value":567},"输出：[true,false,false,false,false]\n",{"type":440,"tag":467,"props":569,"children":570},{"class":469,"line":488},[571],{"type":440,"tag":467,"props":572,"children":573},{},[574],{"type":445,"value":575},"解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",{"type":440,"tag":441,"props":577,"children":578},{},[579],{"type":445,"value":580},"示例 3：",{"type":440,"tag":457,"props":582,"children":584},{"className":459,"code":583,"language":445,"meta":433,"style":433},"输入：candies = [12,1,12], extraCandies = 10\n输出：[true,false,true]\n",[585],{"type":440,"tag":463,"props":586,"children":587},{"__ignoreMap":433},[588,596],{"type":440,"tag":467,"props":589,"children":590},{"class":469,"line":470},[591],{"type":440,"tag":467,"props":592,"children":593},{},[594],{"type":445,"value":595},"输入：candies = [12,1,12], extraCandies = 10\n",{"type":440,"tag":467,"props":597,"children":598},{"class":469,"line":479},[599],{"type":440,"tag":467,"props":600,"children":601},{},[602],{"type":445,"value":603},"输出：[true,false,true]\n",{"type":440,"tag":441,"props":605,"children":606},{},[607],{"type":445,"value":608},"提示：",{"type":440,"tag":610,"props":611,"children":612},"ul",{},[613,619,624],{"type":440,"tag":614,"props":615,"children":616},"li",{},[617],{"type":445,"value":618},"2 \u003C= candies.length \u003C= 100",{"type":440,"tag":614,"props":620,"children":621},{},[622],{"type":445,"value":623},"1 \u003C= candies[i] \u003C= 100",{"type":440,"tag":614,"props":625,"children":626},{},[627],{"type":445,"value":628},"1 \u003C= extraCandies \u003C= 50",{"type":440,"tag":630,"props":631,"children":633},"h2",{"id":632},"解题思路",[634],{"type":445,"value":632},{"type":440,"tag":630,"props":636,"children":638},{"id":637},"实现",[639],{"type":445,"value":637},{"type":440,"tag":457,"props":641,"children":645},{"className":642,"code":643,"language":644,"meta":433,"style":433},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} candies\n * @param {number} extraCandies\n * @return {boolean[]}\n */\nvar kidsWithCandies = function (candies, extraCandies) {\n  const max = Math.max.apply([], candies);\n  let res = [];\n  for (let i = 0; i \u003C candies.length; i++) {\n    let currentMax = candies[i] + extraCandies;\n    res[i] = currentMax >= max;\n  }\n  return res;\n};\n","js",[646],{"type":440,"tag":463,"props":647,"children":648},{"__ignoreMap":433},[649,658,684,705,722,730,784,851,877,955,1005,1048,1057,1074],{"type":440,"tag":467,"props":650,"children":651},{"class":469,"line":470},[652],{"type":440,"tag":467,"props":653,"children":655},{"style":654},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[656],{"type":445,"value":657},"/**\n",{"type":440,"tag":467,"props":659,"children":660},{"class":469,"line":479},[661,666,672,678],{"type":440,"tag":467,"props":662,"children":663},{"style":654},[664],{"type":445,"value":665}," * ",{"type":440,"tag":467,"props":667,"children":669},{"style":668},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[670],{"type":445,"value":671},"@param",{"type":440,"tag":467,"props":673,"children":675},{"style":674},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[676],{"type":445,"value":677}," {number[]}",{"type":440,"tag":467,"props":679,"children":681},{"style":680},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[682],{"type":445,"value":683}," candies\n",{"type":440,"tag":467,"props":685,"children":686},{"class":469,"line":488},[687,691,695,700],{"type":440,"tag":467,"props":688,"children":689},{"style":654},[690],{"type":445,"value":665},{"type":440,"tag":467,"props":692,"children":693},{"style":668},[694],{"type":445,"value":671},{"type":440,"tag":467,"props":696,"children":697},{"style":674},[698],{"type":445,"value":699}," {number}",{"type":440,"tag":467,"props":701,"children":702},{"style":680},[703],{"type":445,"value":704}," extraCandies\n",{"type":440,"tag":467,"props":706,"children":707},{"class":469,"line":497},[708,712,717],{"type":440,"tag":467,"props":709,"children":710},{"style":654},[711],{"type":445,"value":665},{"type":440,"tag":467,"props":713,"children":714},{"style":668},[715],{"type":445,"value":716},"@return",{"type":440,"tag":467,"props":718,"children":719},{"style":674},[720],{"type":445,"value":721}," {boolean[]}\n",{"type":440,"tag":467,"props":723,"children":724},{"class":469,"line":506},[725],{"type":440,"tag":467,"props":726,"children":727},{"style":654},[728],{"type":445,"value":729}," */\n",{"type":440,"tag":467,"props":731,"children":732},{"class":469,"line":515},[733,739,745,751,756,762,768,774,779],{"type":440,"tag":467,"props":734,"children":736},{"style":735},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[737],{"type":445,"value":738},"var",{"type":440,"tag":467,"props":740,"children":742},{"style":741},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[743],{"type":445,"value":744}," kidsWithCandies",{"type":440,"tag":467,"props":746,"children":748},{"style":747},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[749],{"type":445,"value":750}," =",{"type":440,"tag":467,"props":752,"children":753},{"style":735},[754],{"type":445,"value":755}," function",{"type":440,"tag":467,"props":757,"children":759},{"style":758},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[760],{"type":445,"value":761}," (",{"type":440,"tag":467,"props":763,"children":765},{"style":764},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[766],{"type":445,"value":767},"candies",{"type":440,"tag":467,"props":769,"children":771},{"style":770},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[772],{"type":445,"value":773},",",{"type":440,"tag":467,"props":775,"children":776},{"style":764},[777],{"type":445,"value":778}," extraCandies",{"type":440,"tag":467,"props":780,"children":781},{"style":758},[782],{"type":445,"value":783},") {\n",{"type":440,"tag":467,"props":785,"children":786},{"class":469,"line":524},[787,792,798,802,807,813,818,822,827,832,836,841,846],{"type":440,"tag":467,"props":788,"children":789},{"style":735},[790],{"type":445,"value":791},"  const",{"type":440,"tag":467,"props":793,"children":795},{"style":794},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[796],{"type":445,"value":797}," max",{"type":440,"tag":467,"props":799,"children":800},{"style":747},[801],{"type":445,"value":750},{"type":440,"tag":467,"props":803,"children":804},{"style":794},[805],{"type":445,"value":806}," Math",{"type":440,"tag":467,"props":808,"children":810},{"style":809},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[811],{"type":445,"value":812},".",{"type":440,"tag":467,"props":814,"children":815},{"style":794},[816],{"type":445,"value":817},"max",{"type":440,"tag":467,"props":819,"children":820},{"style":809},[821],{"type":445,"value":812},{"type":440,"tag":467,"props":823,"children":824},{"style":741},[825],{"type":445,"value":826},"apply",{"type":440,"tag":467,"props":828,"children":829},{"style":758},[830],{"type":445,"value":831},"([]",{"type":440,"tag":467,"props":833,"children":834},{"style":770},[835],{"type":445,"value":773},{"type":440,"tag":467,"props":837,"children":838},{"style":794},[839],{"type":445,"value":840}," candies",{"type":440,"tag":467,"props":842,"children":843},{"style":758},[844],{"type":445,"value":845},")",{"type":440,"tag":467,"props":847,"children":848},{"style":770},[849],{"type":445,"value":850},";\n",{"type":440,"tag":467,"props":852,"children":853},{"class":469,"line":533},[854,859,864,868,873],{"type":440,"tag":467,"props":855,"children":856},{"style":735},[857],{"type":445,"value":858},"  let",{"type":440,"tag":467,"props":860,"children":861},{"style":794},[862],{"type":445,"value":863}," res",{"type":440,"tag":467,"props":865,"children":866},{"style":747},[867],{"type":445,"value":750},{"type":440,"tag":467,"props":869,"children":870},{"style":758},[871],{"type":445,"value":872}," []",{"type":440,"tag":467,"props":874,"children":875},{"style":770},[876],{"type":445,"value":850},{"type":440,"tag":467,"props":878,"children":880},{"class":469,"line":879},9,[881,887,891,896,901,905,911,916,920,925,929,933,938,942,946,951],{"type":440,"tag":467,"props":882,"children":884},{"style":883},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[885],{"type":445,"value":886},"  for",{"type":440,"tag":467,"props":888,"children":889},{"style":758},[890],{"type":445,"value":761},{"type":440,"tag":467,"props":892,"children":893},{"style":735},[894],{"type":445,"value":895},"let",{"type":440,"tag":467,"props":897,"children":898},{"style":794},[899],{"type":445,"value":900}," i",{"type":440,"tag":467,"props":902,"children":903},{"style":747},[904],{"type":445,"value":750},{"type":440,"tag":467,"props":906,"children":908},{"style":907},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[909],{"type":445,"value":910}," 0",{"type":440,"tag":467,"props":912,"children":913},{"style":770},[914],{"type":445,"value":915},";",{"type":440,"tag":467,"props":917,"children":918},{"style":794},[919],{"type":445,"value":900},{"type":440,"tag":467,"props":921,"children":922},{"style":747},[923],{"type":445,"value":924}," \u003C",{"type":440,"tag":467,"props":926,"children":927},{"style":794},[928],{"type":445,"value":840},{"type":440,"tag":467,"props":930,"children":931},{"style":809},[932],{"type":445,"value":812},{"type":440,"tag":467,"props":934,"children":935},{"style":758},[936],{"type":445,"value":937},"length",{"type":440,"tag":467,"props":939,"children":940},{"style":770},[941],{"type":445,"value":915},{"type":440,"tag":467,"props":943,"children":944},{"style":794},[945],{"type":445,"value":900},{"type":440,"tag":467,"props":947,"children":948},{"style":747},[949],{"type":445,"value":950},"++",{"type":440,"tag":467,"props":952,"children":953},{"style":758},[954],{"type":445,"value":783},{"type":440,"tag":467,"props":956,"children":958},{"class":469,"line":957},10,[959,964,969,973,977,982,987,992,997,1001],{"type":440,"tag":467,"props":960,"children":961},{"style":735},[962],{"type":445,"value":963},"    let",{"type":440,"tag":467,"props":965,"children":966},{"style":794},[967],{"type":445,"value":968}," currentMax",{"type":440,"tag":467,"props":970,"children":971},{"style":747},[972],{"type":445,"value":750},{"type":440,"tag":467,"props":974,"children":975},{"style":794},[976],{"type":445,"value":840},{"type":440,"tag":467,"props":978,"children":979},{"style":758},[980],{"type":445,"value":981},"[",{"type":440,"tag":467,"props":983,"children":984},{"style":794},[985],{"type":445,"value":986},"i",{"type":440,"tag":467,"props":988,"children":989},{"style":758},[990],{"type":445,"value":991},"] ",{"type":440,"tag":467,"props":993,"children":994},{"style":747},[995],{"type":445,"value":996},"+",{"type":440,"tag":467,"props":998,"children":999},{"style":794},[1000],{"type":445,"value":778},{"type":440,"tag":467,"props":1002,"children":1003},{"style":770},[1004],{"type":445,"value":850},{"type":440,"tag":467,"props":1006,"children":1008},{"class":469,"line":1007},11,[1009,1014,1018,1022,1026,1031,1035,1040,1044],{"type":440,"tag":467,"props":1010,"children":1011},{"style":794},[1012],{"type":445,"value":1013},"    res",{"type":440,"tag":467,"props":1015,"children":1016},{"style":758},[1017],{"type":445,"value":981},{"type":440,"tag":467,"props":1019,"children":1020},{"style":794},[1021],{"type":445,"value":986},{"type":440,"tag":467,"props":1023,"children":1024},{"style":758},[1025],{"type":445,"value":991},{"type":440,"tag":467,"props":1027,"children":1028},{"style":747},[1029],{"type":445,"value":1030},"=",{"type":440,"tag":467,"props":1032,"children":1033},{"style":794},[1034],{"type":445,"value":968},{"type":440,"tag":467,"props":1036,"children":1037},{"style":747},[1038],{"type":445,"value":1039}," >=",{"type":440,"tag":467,"props":1041,"children":1042},{"style":794},[1043],{"type":445,"value":797},{"type":440,"tag":467,"props":1045,"children":1046},{"style":770},[1047],{"type":445,"value":850},{"type":440,"tag":467,"props":1049,"children":1051},{"class":469,"line":1050},12,[1052],{"type":440,"tag":467,"props":1053,"children":1054},{"style":758},[1055],{"type":445,"value":1056},"  }\n",{"type":440,"tag":467,"props":1058,"children":1060},{"class":469,"line":1059},13,[1061,1066,1070],{"type":440,"tag":467,"props":1062,"children":1063},{"style":883},[1064],{"type":445,"value":1065},"  return",{"type":440,"tag":467,"props":1067,"children":1068},{"style":794},[1069],{"type":445,"value":863},{"type":440,"tag":467,"props":1071,"children":1072},{"style":770},[1073],{"type":445,"value":850},{"type":440,"tag":467,"props":1075,"children":1077},{"class":469,"line":1076},14,[1078,1083],{"type":440,"tag":467,"props":1079,"children":1080},{"style":758},[1081],{"type":445,"value":1082},"}",{"type":440,"tag":467,"props":1084,"children":1085},{"style":770},[1086],{"type":445,"value":850},{"type":440,"tag":1088,"props":1089,"children":1090},"style",{},[1091],{"type":445,"value":1092},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":433,"searchDepth":506,"depth":506,"links":1094},[1095,1096],{"id":632,"depth":479,"text":632},{"id":637,"depth":479,"text":637},"markdown","content:1.algorithm:3.leetcode:1431.kids-with-the-greatest-number-of-candies.md","content","1.algorithm/3.leetcode/1431.kids-with-the-greatest-number-of-candies.md","md",[1103,1105],{"_path":230,"title":229,"description":1104},"给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。",{"_path":236,"title":235,"description":1106},"给你两个字符串 word1 和 word2 。请你从 word1 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。",1713426815627]