[{"data":1,"prerenderedAt":1082},["Reactive",2],{"navigation":3,"/algorithm/leetcode/kids-with-the-greatest-number-of-candies":405,"/algorithm/leetcode/kids-with-the-greatest-number-of-candies-surround":1077},[4,237,265,384,391],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,377],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,347,350,353,356,359,362,365,368,371,374],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":348,"_path":349},"倒计时","/frontend-code-assessment/scene/countdown",{"title":351,"_path":352},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":354,"_path":355},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":357,"_path":358},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":360,"_path":361},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":363,"_path":364},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":366,"_path":367},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":369,"_path":370},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":372,"_path":373},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":375,"_path":376},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":378,"_path":379,"children":380},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[381],{"title":382,"_path":383},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":385,"_path":386,"children":387},"项目","/pro",[388],{"title":389,"_path":390},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":392,"_path":393,"children":394},"后端语言","/backend-languages",[395],{"title":396,"_path":397,"children":398},"Python","/backend-languages/python",[399,402],{"title":400,"_path":401},"基础","/backend-languages/python/base",{"title":403,"_path":404},"函数","/backend-languages/python/function",{"_path":233,"_dir":406,"_draft":407,"_partial":407,"_locale":408,"title":232,"description":409,"url":410,"body":411,"_type":1072,"_id":1073,"_source":1074,"_file":1075,"_extension":1076},"leetcode",false,"","给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。","https://leetcode.cn/problems/kids-with-the-greatest-number-of-candies",{"type":412,"children":413,"toc":1068},"root",[414,421,426,431,515,520,551,556,579,584,604,610,615,1062],{"type":415,"tag":416,"props":417,"children":418},"element","p",{},[419],{"type":420,"value":409},"text",{"type":415,"tag":416,"props":422,"children":423},{},[424],{"type":420,"value":425},"对每一个孩子，检查是否存在一种方案，将额外的 extraCandies 个糖果分配给孩子们之后，此孩子有 最多 的糖果。注意，允许有多个孩子同时拥有 最多 的糖果数目。",{"type":415,"tag":416,"props":427,"children":428},{},[429],{"type":420,"value":430},"示例 1：",{"type":415,"tag":432,"props":433,"children":436},"pre",{"className":434,"code":435,"language":420,"meta":408,"style":408},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：candies = [2,3,5,1,3], extraCandies = 3\n输出：[true,true,true,false,true]\n解释：\n孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",[437],{"type":415,"tag":438,"props":439,"children":440},"code",{"__ignoreMap":408},[441,452,461,470,479,488,497,506],{"type":415,"tag":442,"props":443,"children":446},"span",{"class":444,"line":445},"line",1,[447],{"type":415,"tag":442,"props":448,"children":449},{},[450],{"type":420,"value":451},"输入：candies = [2,3,5,1,3], extraCandies = 3\n",{"type":415,"tag":442,"props":453,"children":455},{"class":444,"line":454},2,[456],{"type":415,"tag":442,"props":457,"children":458},{},[459],{"type":420,"value":460},"输出：[true,true,true,false,true]\n",{"type":415,"tag":442,"props":462,"children":464},{"class":444,"line":463},3,[465],{"type":415,"tag":442,"props":466,"children":467},{},[468],{"type":420,"value":469},"解释：\n",{"type":415,"tag":442,"props":471,"children":473},{"class":444,"line":472},4,[474],{"type":415,"tag":442,"props":475,"children":476},{},[477],{"type":420,"value":478},"孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n",{"type":415,"tag":442,"props":480,"children":482},{"class":444,"line":481},5,[483],{"type":415,"tag":442,"props":484,"children":485},{},[486],{"type":420,"value":487},"孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":415,"tag":442,"props":489,"children":491},{"class":444,"line":490},6,[492],{"type":415,"tag":442,"props":493,"children":494},{},[495],{"type":420,"value":496},"孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n",{"type":415,"tag":442,"props":498,"children":500},{"class":444,"line":499},7,[501],{"type":415,"tag":442,"props":502,"children":503},{},[504],{"type":420,"value":505},"孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n",{"type":415,"tag":442,"props":507,"children":509},{"class":444,"line":508},8,[510],{"type":415,"tag":442,"props":511,"children":512},{},[513],{"type":420,"value":514},"孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":415,"tag":416,"props":516,"children":517},{},[518],{"type":420,"value":519},"示例 2：",{"type":415,"tag":432,"props":521,"children":523},{"className":434,"code":522,"language":420,"meta":408,"style":408},"输入：candies = [4,2,1,1,2], extraCandies = 1\n输出：[true,false,false,false,false]\n解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",[524],{"type":415,"tag":438,"props":525,"children":526},{"__ignoreMap":408},[527,535,543],{"type":415,"tag":442,"props":528,"children":529},{"class":444,"line":445},[530],{"type":415,"tag":442,"props":531,"children":532},{},[533],{"type":420,"value":534},"输入：candies = [4,2,1,1,2], extraCandies = 1\n",{"type":415,"tag":442,"props":536,"children":537},{"class":444,"line":454},[538],{"type":415,"tag":442,"props":539,"children":540},{},[541],{"type":420,"value":542},"输出：[true,false,false,false,false]\n",{"type":415,"tag":442,"props":544,"children":545},{"class":444,"line":463},[546],{"type":415,"tag":442,"props":547,"children":548},{},[549],{"type":420,"value":550},"解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",{"type":415,"tag":416,"props":552,"children":553},{},[554],{"type":420,"value":555},"示例 3：",{"type":415,"tag":432,"props":557,"children":559},{"className":434,"code":558,"language":420,"meta":408,"style":408},"输入：candies = [12,1,12], extraCandies = 10\n输出：[true,false,true]\n",[560],{"type":415,"tag":438,"props":561,"children":562},{"__ignoreMap":408},[563,571],{"type":415,"tag":442,"props":564,"children":565},{"class":444,"line":445},[566],{"type":415,"tag":442,"props":567,"children":568},{},[569],{"type":420,"value":570},"输入：candies = [12,1,12], extraCandies = 10\n",{"type":415,"tag":442,"props":572,"children":573},{"class":444,"line":454},[574],{"type":415,"tag":442,"props":575,"children":576},{},[577],{"type":420,"value":578},"输出：[true,false,true]\n",{"type":415,"tag":416,"props":580,"children":581},{},[582],{"type":420,"value":583},"提示：",{"type":415,"tag":585,"props":586,"children":587},"ul",{},[588,594,599],{"type":415,"tag":589,"props":590,"children":591},"li",{},[592],{"type":420,"value":593},"2 \u003C= candies.length \u003C= 100",{"type":415,"tag":589,"props":595,"children":596},{},[597],{"type":420,"value":598},"1 \u003C= candies[i] \u003C= 100",{"type":415,"tag":589,"props":600,"children":601},{},[602],{"type":420,"value":603},"1 \u003C= extraCandies \u003C= 50",{"type":415,"tag":605,"props":606,"children":608},"h2",{"id":607},"解题思路",[609],{"type":420,"value":607},{"type":415,"tag":605,"props":611,"children":613},{"id":612},"实现",[614],{"type":420,"value":612},{"type":415,"tag":432,"props":616,"children":620},{"className":617,"code":618,"language":619,"meta":408,"style":408},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} candies\n * @param {number} extraCandies\n * @return {boolean[]}\n */\nvar kidsWithCandies = function (candies, extraCandies) {\n  const max = Math.max.apply([], candies);\n  let res = [];\n  for (let i = 0; i \u003C candies.length; i++) {\n    let currentMax = candies[i] + extraCandies;\n    res[i] = currentMax >= max;\n  }\n  return res;\n};\n","js",[621],{"type":415,"tag":438,"props":622,"children":623},{"__ignoreMap":408},[624,633,659,680,697,705,759,826,852,930,980,1023,1032,1049],{"type":415,"tag":442,"props":625,"children":626},{"class":444,"line":445},[627],{"type":415,"tag":442,"props":628,"children":630},{"style":629},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[631],{"type":420,"value":632},"/**\n",{"type":415,"tag":442,"props":634,"children":635},{"class":444,"line":454},[636,641,647,653],{"type":415,"tag":442,"props":637,"children":638},{"style":629},[639],{"type":420,"value":640}," * ",{"type":415,"tag":442,"props":642,"children":644},{"style":643},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[645],{"type":420,"value":646},"@param",{"type":415,"tag":442,"props":648,"children":650},{"style":649},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[651],{"type":420,"value":652}," {number[]}",{"type":415,"tag":442,"props":654,"children":656},{"style":655},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[657],{"type":420,"value":658}," candies\n",{"type":415,"tag":442,"props":660,"children":661},{"class":444,"line":463},[662,666,670,675],{"type":415,"tag":442,"props":663,"children":664},{"style":629},[665],{"type":420,"value":640},{"type":415,"tag":442,"props":667,"children":668},{"style":643},[669],{"type":420,"value":646},{"type":415,"tag":442,"props":671,"children":672},{"style":649},[673],{"type":420,"value":674}," {number}",{"type":415,"tag":442,"props":676,"children":677},{"style":655},[678],{"type":420,"value":679}," extraCandies\n",{"type":415,"tag":442,"props":681,"children":682},{"class":444,"line":472},[683,687,692],{"type":415,"tag":442,"props":684,"children":685},{"style":629},[686],{"type":420,"value":640},{"type":415,"tag":442,"props":688,"children":689},{"style":643},[690],{"type":420,"value":691},"@return",{"type":415,"tag":442,"props":693,"children":694},{"style":649},[695],{"type":420,"value":696}," {boolean[]}\n",{"type":415,"tag":442,"props":698,"children":699},{"class":444,"line":481},[700],{"type":415,"tag":442,"props":701,"children":702},{"style":629},[703],{"type":420,"value":704}," */\n",{"type":415,"tag":442,"props":706,"children":707},{"class":444,"line":490},[708,714,720,726,731,737,743,749,754],{"type":415,"tag":442,"props":709,"children":711},{"style":710},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[712],{"type":420,"value":713},"var",{"type":415,"tag":442,"props":715,"children":717},{"style":716},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[718],{"type":420,"value":719}," kidsWithCandies",{"type":415,"tag":442,"props":721,"children":723},{"style":722},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[724],{"type":420,"value":725}," =",{"type":415,"tag":442,"props":727,"children":728},{"style":710},[729],{"type":420,"value":730}," function",{"type":415,"tag":442,"props":732,"children":734},{"style":733},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[735],{"type":420,"value":736}," (",{"type":415,"tag":442,"props":738,"children":740},{"style":739},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[741],{"type":420,"value":742},"candies",{"type":415,"tag":442,"props":744,"children":746},{"style":745},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[747],{"type":420,"value":748},",",{"type":415,"tag":442,"props":750,"children":751},{"style":739},[752],{"type":420,"value":753}," extraCandies",{"type":415,"tag":442,"props":755,"children":756},{"style":733},[757],{"type":420,"value":758},") {\n",{"type":415,"tag":442,"props":760,"children":761},{"class":444,"line":499},[762,767,773,777,782,788,793,797,802,807,811,816,821],{"type":415,"tag":442,"props":763,"children":764},{"style":710},[765],{"type":420,"value":766},"  const",{"type":415,"tag":442,"props":768,"children":770},{"style":769},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[771],{"type":420,"value":772}," max",{"type":415,"tag":442,"props":774,"children":775},{"style":722},[776],{"type":420,"value":725},{"type":415,"tag":442,"props":778,"children":779},{"style":769},[780],{"type":420,"value":781}," Math",{"type":415,"tag":442,"props":783,"children":785},{"style":784},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[786],{"type":420,"value":787},".",{"type":415,"tag":442,"props":789,"children":790},{"style":769},[791],{"type":420,"value":792},"max",{"type":415,"tag":442,"props":794,"children":795},{"style":784},[796],{"type":420,"value":787},{"type":415,"tag":442,"props":798,"children":799},{"style":716},[800],{"type":420,"value":801},"apply",{"type":415,"tag":442,"props":803,"children":804},{"style":733},[805],{"type":420,"value":806},"([]",{"type":415,"tag":442,"props":808,"children":809},{"style":745},[810],{"type":420,"value":748},{"type":415,"tag":442,"props":812,"children":813},{"style":769},[814],{"type":420,"value":815}," candies",{"type":415,"tag":442,"props":817,"children":818},{"style":733},[819],{"type":420,"value":820},")",{"type":415,"tag":442,"props":822,"children":823},{"style":745},[824],{"type":420,"value":825},";\n",{"type":415,"tag":442,"props":827,"children":828},{"class":444,"line":508},[829,834,839,843,848],{"type":415,"tag":442,"props":830,"children":831},{"style":710},[832],{"type":420,"value":833},"  let",{"type":415,"tag":442,"props":835,"children":836},{"style":769},[837],{"type":420,"value":838}," res",{"type":415,"tag":442,"props":840,"children":841},{"style":722},[842],{"type":420,"value":725},{"type":415,"tag":442,"props":844,"children":845},{"style":733},[846],{"type":420,"value":847}," []",{"type":415,"tag":442,"props":849,"children":850},{"style":745},[851],{"type":420,"value":825},{"type":415,"tag":442,"props":853,"children":855},{"class":444,"line":854},9,[856,862,866,871,876,880,886,891,895,900,904,908,913,917,921,926],{"type":415,"tag":442,"props":857,"children":859},{"style":858},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[860],{"type":420,"value":861},"  for",{"type":415,"tag":442,"props":863,"children":864},{"style":733},[865],{"type":420,"value":736},{"type":415,"tag":442,"props":867,"children":868},{"style":710},[869],{"type":420,"value":870},"let",{"type":415,"tag":442,"props":872,"children":873},{"style":769},[874],{"type":420,"value":875}," i",{"type":415,"tag":442,"props":877,"children":878},{"style":722},[879],{"type":420,"value":725},{"type":415,"tag":442,"props":881,"children":883},{"style":882},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[884],{"type":420,"value":885}," 0",{"type":415,"tag":442,"props":887,"children":888},{"style":745},[889],{"type":420,"value":890},";",{"type":415,"tag":442,"props":892,"children":893},{"style":769},[894],{"type":420,"value":875},{"type":415,"tag":442,"props":896,"children":897},{"style":722},[898],{"type":420,"value":899}," \u003C",{"type":415,"tag":442,"props":901,"children":902},{"style":769},[903],{"type":420,"value":815},{"type":415,"tag":442,"props":905,"children":906},{"style":784},[907],{"type":420,"value":787},{"type":415,"tag":442,"props":909,"children":910},{"style":733},[911],{"type":420,"value":912},"length",{"type":415,"tag":442,"props":914,"children":915},{"style":745},[916],{"type":420,"value":890},{"type":415,"tag":442,"props":918,"children":919},{"style":769},[920],{"type":420,"value":875},{"type":415,"tag":442,"props":922,"children":923},{"style":722},[924],{"type":420,"value":925},"++",{"type":415,"tag":442,"props":927,"children":928},{"style":733},[929],{"type":420,"value":758},{"type":415,"tag":442,"props":931,"children":933},{"class":444,"line":932},10,[934,939,944,948,952,957,962,967,972,976],{"type":415,"tag":442,"props":935,"children":936},{"style":710},[937],{"type":420,"value":938},"    let",{"type":415,"tag":442,"props":940,"children":941},{"style":769},[942],{"type":420,"value":943}," currentMax",{"type":415,"tag":442,"props":945,"children":946},{"style":722},[947],{"type":420,"value":725},{"type":415,"tag":442,"props":949,"children":950},{"style":769},[951],{"type":420,"value":815},{"type":415,"tag":442,"props":953,"children":954},{"style":733},[955],{"type":420,"value":956},"[",{"type":415,"tag":442,"props":958,"children":959},{"style":769},[960],{"type":420,"value":961},"i",{"type":415,"tag":442,"props":963,"children":964},{"style":733},[965],{"type":420,"value":966},"] ",{"type":415,"tag":442,"props":968,"children":969},{"style":722},[970],{"type":420,"value":971},"+",{"type":415,"tag":442,"props":973,"children":974},{"style":769},[975],{"type":420,"value":753},{"type":415,"tag":442,"props":977,"children":978},{"style":745},[979],{"type":420,"value":825},{"type":415,"tag":442,"props":981,"children":983},{"class":444,"line":982},11,[984,989,993,997,1001,1006,1010,1015,1019],{"type":415,"tag":442,"props":985,"children":986},{"style":769},[987],{"type":420,"value":988},"    res",{"type":415,"tag":442,"props":990,"children":991},{"style":733},[992],{"type":420,"value":956},{"type":415,"tag":442,"props":994,"children":995},{"style":769},[996],{"type":420,"value":961},{"type":415,"tag":442,"props":998,"children":999},{"style":733},[1000],{"type":420,"value":966},{"type":415,"tag":442,"props":1002,"children":1003},{"style":722},[1004],{"type":420,"value":1005},"=",{"type":415,"tag":442,"props":1007,"children":1008},{"style":769},[1009],{"type":420,"value":943},{"type":415,"tag":442,"props":1011,"children":1012},{"style":722},[1013],{"type":420,"value":1014}," >=",{"type":415,"tag":442,"props":1016,"children":1017},{"style":769},[1018],{"type":420,"value":772},{"type":415,"tag":442,"props":1020,"children":1021},{"style":745},[1022],{"type":420,"value":825},{"type":415,"tag":442,"props":1024,"children":1026},{"class":444,"line":1025},12,[1027],{"type":415,"tag":442,"props":1028,"children":1029},{"style":733},[1030],{"type":420,"value":1031},"  }\n",{"type":415,"tag":442,"props":1033,"children":1035},{"class":444,"line":1034},13,[1036,1041,1045],{"type":415,"tag":442,"props":1037,"children":1038},{"style":858},[1039],{"type":420,"value":1040},"  return",{"type":415,"tag":442,"props":1042,"children":1043},{"style":769},[1044],{"type":420,"value":838},{"type":415,"tag":442,"props":1046,"children":1047},{"style":745},[1048],{"type":420,"value":825},{"type":415,"tag":442,"props":1050,"children":1052},{"class":444,"line":1051},14,[1053,1058],{"type":415,"tag":442,"props":1054,"children":1055},{"style":733},[1056],{"type":420,"value":1057},"}",{"type":415,"tag":442,"props":1059,"children":1060},{"style":745},[1061],{"type":420,"value":825},{"type":415,"tag":1063,"props":1064,"children":1065},"style",{},[1066],{"type":420,"value":1067},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":408,"searchDepth":481,"depth":481,"links":1069},[1070,1071],{"id":607,"depth":454,"text":607},{"id":612,"depth":454,"text":612},"markdown","content:1.algorithm:3.leetcode:1431.kids-with-the-greatest-number-of-candies.md","content","1.algorithm/3.leetcode/1431.kids-with-the-greatest-number-of-candies.md","md",[1078,1080],{"_path":230,"title":229,"description":1079},"给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。",{"_path":236,"title":235,"description":1081},"给你两个字符串 word1 和 word2 。请你从 word1 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。",1713320366155]