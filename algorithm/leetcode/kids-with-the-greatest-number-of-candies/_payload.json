[{"data":1,"prerenderedAt":1075},["Reactive",2],{"navigation":3,"/algorithm/leetcode/kids-with-the-greatest-number-of-candies":398,"/algorithm/leetcode/kids-with-the-greatest-number-of-candies-surround":1070},[4,237,265,384],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR 169. 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR 187. 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数相加","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,377],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,347,350,353,356,359,362,365,368,371,374],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":348,"_path":349},"倒计时","/frontend-code-assessment/scene/countdown",{"title":351,"_path":352},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":354,"_path":355},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":357,"_path":358},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":360,"_path":361},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":363,"_path":364},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":366,"_path":367},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":369,"_path":370},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":372,"_path":373},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":375,"_path":376},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":378,"_path":379,"children":380},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[381],{"title":382,"_path":383},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":385,"_path":386,"children":387},"后端语言","/backend-languages",[388],{"title":389,"_path":390,"children":391},"Python","/backend-languages/python",[392,395],{"title":393,"_path":394},"基础","/backend-languages/python/base",{"title":396,"_path":397},"函数","/backend-languages/python/function",{"_path":233,"_dir":399,"_draft":400,"_partial":400,"_locale":401,"title":232,"description":402,"url":403,"body":404,"_type":1065,"_id":1066,"_source":1067,"_file":1068,"_extension":1069},"leetcode",false,"","给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。","https://leetcode.cn/problems/kids-with-the-greatest-number-of-candies",{"type":405,"children":406,"toc":1061},"root",[407,414,419,424,508,513,544,549,572,577,597,603,608,1055],{"type":408,"tag":409,"props":410,"children":411},"element","p",{},[412],{"type":413,"value":402},"text",{"type":408,"tag":409,"props":415,"children":416},{},[417],{"type":413,"value":418},"对每一个孩子，检查是否存在一种方案，将额外的 extraCandies 个糖果分配给孩子们之后，此孩子有 最多 的糖果。注意，允许有多个孩子同时拥有 最多 的糖果数目。",{"type":408,"tag":409,"props":420,"children":421},{},[422],{"type":413,"value":423},"示例 1：",{"type":408,"tag":425,"props":426,"children":429},"pre",{"className":427,"code":428,"language":413,"meta":401,"style":401},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：candies = [2,3,5,1,3], extraCandies = 3\n输出：[true,true,true,false,true]\n解释：\n孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",[430],{"type":408,"tag":431,"props":432,"children":433},"code",{"__ignoreMap":401},[434,445,454,463,472,481,490,499],{"type":408,"tag":435,"props":436,"children":439},"span",{"class":437,"line":438},"line",1,[440],{"type":408,"tag":435,"props":441,"children":442},{},[443],{"type":413,"value":444},"输入：candies = [2,3,5,1,3], extraCandies = 3\n",{"type":408,"tag":435,"props":446,"children":448},{"class":437,"line":447},2,[449],{"type":408,"tag":435,"props":450,"children":451},{},[452],{"type":413,"value":453},"输出：[true,true,true,false,true]\n",{"type":408,"tag":435,"props":455,"children":457},{"class":437,"line":456},3,[458],{"type":408,"tag":435,"props":459,"children":460},{},[461],{"type":413,"value":462},"解释：\n",{"type":408,"tag":435,"props":464,"children":466},{"class":437,"line":465},4,[467],{"type":408,"tag":435,"props":468,"children":469},{},[470],{"type":413,"value":471},"孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n",{"type":408,"tag":435,"props":473,"children":475},{"class":437,"line":474},5,[476],{"type":408,"tag":435,"props":477,"children":478},{},[479],{"type":413,"value":480},"孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":408,"tag":435,"props":482,"children":484},{"class":437,"line":483},6,[485],{"type":408,"tag":435,"props":486,"children":487},{},[488],{"type":413,"value":489},"孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n",{"type":408,"tag":435,"props":491,"children":493},{"class":437,"line":492},7,[494],{"type":408,"tag":435,"props":495,"children":496},{},[497],{"type":413,"value":498},"孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n",{"type":408,"tag":435,"props":500,"children":502},{"class":437,"line":501},8,[503],{"type":408,"tag":435,"props":504,"children":505},{},[506],{"type":413,"value":507},"孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":408,"tag":409,"props":509,"children":510},{},[511],{"type":413,"value":512},"示例 2：",{"type":408,"tag":425,"props":514,"children":516},{"className":427,"code":515,"language":413,"meta":401,"style":401},"输入：candies = [4,2,1,1,2], extraCandies = 1\n输出：[true,false,false,false,false]\n解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",[517],{"type":408,"tag":431,"props":518,"children":519},{"__ignoreMap":401},[520,528,536],{"type":408,"tag":435,"props":521,"children":522},{"class":437,"line":438},[523],{"type":408,"tag":435,"props":524,"children":525},{},[526],{"type":413,"value":527},"输入：candies = [4,2,1,1,2], extraCandies = 1\n",{"type":408,"tag":435,"props":529,"children":530},{"class":437,"line":447},[531],{"type":408,"tag":435,"props":532,"children":533},{},[534],{"type":413,"value":535},"输出：[true,false,false,false,false]\n",{"type":408,"tag":435,"props":537,"children":538},{"class":437,"line":456},[539],{"type":408,"tag":435,"props":540,"children":541},{},[542],{"type":413,"value":543},"解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",{"type":408,"tag":409,"props":545,"children":546},{},[547],{"type":413,"value":548},"示例 3：",{"type":408,"tag":425,"props":550,"children":552},{"className":427,"code":551,"language":413,"meta":401,"style":401},"输入：candies = [12,1,12], extraCandies = 10\n输出：[true,false,true]\n",[553],{"type":408,"tag":431,"props":554,"children":555},{"__ignoreMap":401},[556,564],{"type":408,"tag":435,"props":557,"children":558},{"class":437,"line":438},[559],{"type":408,"tag":435,"props":560,"children":561},{},[562],{"type":413,"value":563},"输入：candies = [12,1,12], extraCandies = 10\n",{"type":408,"tag":435,"props":565,"children":566},{"class":437,"line":447},[567],{"type":408,"tag":435,"props":568,"children":569},{},[570],{"type":413,"value":571},"输出：[true,false,true]\n",{"type":408,"tag":409,"props":573,"children":574},{},[575],{"type":413,"value":576},"提示：",{"type":408,"tag":578,"props":579,"children":580},"ul",{},[581,587,592],{"type":408,"tag":582,"props":583,"children":584},"li",{},[585],{"type":413,"value":586},"2 \u003C= candies.length \u003C= 100",{"type":408,"tag":582,"props":588,"children":589},{},[590],{"type":413,"value":591},"1 \u003C= candies[i] \u003C= 100",{"type":408,"tag":582,"props":593,"children":594},{},[595],{"type":413,"value":596},"1 \u003C= extraCandies \u003C= 50",{"type":408,"tag":598,"props":599,"children":601},"h2",{"id":600},"解题思路",[602],{"type":413,"value":600},{"type":408,"tag":598,"props":604,"children":606},{"id":605},"实现",[607],{"type":413,"value":605},{"type":408,"tag":425,"props":609,"children":613},{"className":610,"code":611,"language":612,"meta":401,"style":401},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} candies\n * @param {number} extraCandies\n * @return {boolean[]}\n */\nvar kidsWithCandies = function (candies, extraCandies) {\n  const max = Math.max.apply([], candies);\n  let res = [];\n  for (let i = 0; i \u003C candies.length; i++) {\n    let currentMax = candies[i] + extraCandies;\n    res[i] = currentMax >= max;\n  }\n  return res;\n};\n","js",[614],{"type":408,"tag":431,"props":615,"children":616},{"__ignoreMap":401},[617,626,652,673,690,698,752,819,845,923,973,1016,1025,1042],{"type":408,"tag":435,"props":618,"children":619},{"class":437,"line":438},[620],{"type":408,"tag":435,"props":621,"children":623},{"style":622},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[624],{"type":413,"value":625},"/**\n",{"type":408,"tag":435,"props":627,"children":628},{"class":437,"line":447},[629,634,640,646],{"type":408,"tag":435,"props":630,"children":631},{"style":622},[632],{"type":413,"value":633}," * ",{"type":408,"tag":435,"props":635,"children":637},{"style":636},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[638],{"type":413,"value":639},"@param",{"type":408,"tag":435,"props":641,"children":643},{"style":642},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[644],{"type":413,"value":645}," {number[]}",{"type":408,"tag":435,"props":647,"children":649},{"style":648},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[650],{"type":413,"value":651}," candies\n",{"type":408,"tag":435,"props":653,"children":654},{"class":437,"line":456},[655,659,663,668],{"type":408,"tag":435,"props":656,"children":657},{"style":622},[658],{"type":413,"value":633},{"type":408,"tag":435,"props":660,"children":661},{"style":636},[662],{"type":413,"value":639},{"type":408,"tag":435,"props":664,"children":665},{"style":642},[666],{"type":413,"value":667}," {number}",{"type":408,"tag":435,"props":669,"children":670},{"style":648},[671],{"type":413,"value":672}," extraCandies\n",{"type":408,"tag":435,"props":674,"children":675},{"class":437,"line":465},[676,680,685],{"type":408,"tag":435,"props":677,"children":678},{"style":622},[679],{"type":413,"value":633},{"type":408,"tag":435,"props":681,"children":682},{"style":636},[683],{"type":413,"value":684},"@return",{"type":408,"tag":435,"props":686,"children":687},{"style":642},[688],{"type":413,"value":689}," {boolean[]}\n",{"type":408,"tag":435,"props":691,"children":692},{"class":437,"line":474},[693],{"type":408,"tag":435,"props":694,"children":695},{"style":622},[696],{"type":413,"value":697}," */\n",{"type":408,"tag":435,"props":699,"children":700},{"class":437,"line":483},[701,707,713,719,724,730,736,742,747],{"type":408,"tag":435,"props":702,"children":704},{"style":703},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[705],{"type":413,"value":706},"var",{"type":408,"tag":435,"props":708,"children":710},{"style":709},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[711],{"type":413,"value":712}," kidsWithCandies",{"type":408,"tag":435,"props":714,"children":716},{"style":715},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[717],{"type":413,"value":718}," =",{"type":408,"tag":435,"props":720,"children":721},{"style":703},[722],{"type":413,"value":723}," function",{"type":408,"tag":435,"props":725,"children":727},{"style":726},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[728],{"type":413,"value":729}," (",{"type":408,"tag":435,"props":731,"children":733},{"style":732},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[734],{"type":413,"value":735},"candies",{"type":408,"tag":435,"props":737,"children":739},{"style":738},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[740],{"type":413,"value":741},",",{"type":408,"tag":435,"props":743,"children":744},{"style":732},[745],{"type":413,"value":746}," extraCandies",{"type":408,"tag":435,"props":748,"children":749},{"style":726},[750],{"type":413,"value":751},") {\n",{"type":408,"tag":435,"props":753,"children":754},{"class":437,"line":492},[755,760,766,770,775,781,786,790,795,800,804,809,814],{"type":408,"tag":435,"props":756,"children":757},{"style":703},[758],{"type":413,"value":759},"  const",{"type":408,"tag":435,"props":761,"children":763},{"style":762},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[764],{"type":413,"value":765}," max",{"type":408,"tag":435,"props":767,"children":768},{"style":715},[769],{"type":413,"value":718},{"type":408,"tag":435,"props":771,"children":772},{"style":762},[773],{"type":413,"value":774}," Math",{"type":408,"tag":435,"props":776,"children":778},{"style":777},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[779],{"type":413,"value":780},".",{"type":408,"tag":435,"props":782,"children":783},{"style":762},[784],{"type":413,"value":785},"max",{"type":408,"tag":435,"props":787,"children":788},{"style":777},[789],{"type":413,"value":780},{"type":408,"tag":435,"props":791,"children":792},{"style":709},[793],{"type":413,"value":794},"apply",{"type":408,"tag":435,"props":796,"children":797},{"style":726},[798],{"type":413,"value":799},"([]",{"type":408,"tag":435,"props":801,"children":802},{"style":738},[803],{"type":413,"value":741},{"type":408,"tag":435,"props":805,"children":806},{"style":762},[807],{"type":413,"value":808}," candies",{"type":408,"tag":435,"props":810,"children":811},{"style":726},[812],{"type":413,"value":813},")",{"type":408,"tag":435,"props":815,"children":816},{"style":738},[817],{"type":413,"value":818},";\n",{"type":408,"tag":435,"props":820,"children":821},{"class":437,"line":501},[822,827,832,836,841],{"type":408,"tag":435,"props":823,"children":824},{"style":703},[825],{"type":413,"value":826},"  let",{"type":408,"tag":435,"props":828,"children":829},{"style":762},[830],{"type":413,"value":831}," res",{"type":408,"tag":435,"props":833,"children":834},{"style":715},[835],{"type":413,"value":718},{"type":408,"tag":435,"props":837,"children":838},{"style":726},[839],{"type":413,"value":840}," []",{"type":408,"tag":435,"props":842,"children":843},{"style":738},[844],{"type":413,"value":818},{"type":408,"tag":435,"props":846,"children":848},{"class":437,"line":847},9,[849,855,859,864,869,873,879,884,888,893,897,901,906,910,914,919],{"type":408,"tag":435,"props":850,"children":852},{"style":851},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[853],{"type":413,"value":854},"  for",{"type":408,"tag":435,"props":856,"children":857},{"style":726},[858],{"type":413,"value":729},{"type":408,"tag":435,"props":860,"children":861},{"style":703},[862],{"type":413,"value":863},"let",{"type":408,"tag":435,"props":865,"children":866},{"style":762},[867],{"type":413,"value":868}," i",{"type":408,"tag":435,"props":870,"children":871},{"style":715},[872],{"type":413,"value":718},{"type":408,"tag":435,"props":874,"children":876},{"style":875},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[877],{"type":413,"value":878}," 0",{"type":408,"tag":435,"props":880,"children":881},{"style":738},[882],{"type":413,"value":883},";",{"type":408,"tag":435,"props":885,"children":886},{"style":762},[887],{"type":413,"value":868},{"type":408,"tag":435,"props":889,"children":890},{"style":715},[891],{"type":413,"value":892}," \u003C",{"type":408,"tag":435,"props":894,"children":895},{"style":762},[896],{"type":413,"value":808},{"type":408,"tag":435,"props":898,"children":899},{"style":777},[900],{"type":413,"value":780},{"type":408,"tag":435,"props":902,"children":903},{"style":726},[904],{"type":413,"value":905},"length",{"type":408,"tag":435,"props":907,"children":908},{"style":738},[909],{"type":413,"value":883},{"type":408,"tag":435,"props":911,"children":912},{"style":762},[913],{"type":413,"value":868},{"type":408,"tag":435,"props":915,"children":916},{"style":715},[917],{"type":413,"value":918},"++",{"type":408,"tag":435,"props":920,"children":921},{"style":726},[922],{"type":413,"value":751},{"type":408,"tag":435,"props":924,"children":926},{"class":437,"line":925},10,[927,932,937,941,945,950,955,960,965,969],{"type":408,"tag":435,"props":928,"children":929},{"style":703},[930],{"type":413,"value":931},"    let",{"type":408,"tag":435,"props":933,"children":934},{"style":762},[935],{"type":413,"value":936}," currentMax",{"type":408,"tag":435,"props":938,"children":939},{"style":715},[940],{"type":413,"value":718},{"type":408,"tag":435,"props":942,"children":943},{"style":762},[944],{"type":413,"value":808},{"type":408,"tag":435,"props":946,"children":947},{"style":726},[948],{"type":413,"value":949},"[",{"type":408,"tag":435,"props":951,"children":952},{"style":762},[953],{"type":413,"value":954},"i",{"type":408,"tag":435,"props":956,"children":957},{"style":726},[958],{"type":413,"value":959},"] ",{"type":408,"tag":435,"props":961,"children":962},{"style":715},[963],{"type":413,"value":964},"+",{"type":408,"tag":435,"props":966,"children":967},{"style":762},[968],{"type":413,"value":746},{"type":408,"tag":435,"props":970,"children":971},{"style":738},[972],{"type":413,"value":818},{"type":408,"tag":435,"props":974,"children":976},{"class":437,"line":975},11,[977,982,986,990,994,999,1003,1008,1012],{"type":408,"tag":435,"props":978,"children":979},{"style":762},[980],{"type":413,"value":981},"    res",{"type":408,"tag":435,"props":983,"children":984},{"style":726},[985],{"type":413,"value":949},{"type":408,"tag":435,"props":987,"children":988},{"style":762},[989],{"type":413,"value":954},{"type":408,"tag":435,"props":991,"children":992},{"style":726},[993],{"type":413,"value":959},{"type":408,"tag":435,"props":995,"children":996},{"style":715},[997],{"type":413,"value":998},"=",{"type":408,"tag":435,"props":1000,"children":1001},{"style":762},[1002],{"type":413,"value":936},{"type":408,"tag":435,"props":1004,"children":1005},{"style":715},[1006],{"type":413,"value":1007}," >=",{"type":408,"tag":435,"props":1009,"children":1010},{"style":762},[1011],{"type":413,"value":765},{"type":408,"tag":435,"props":1013,"children":1014},{"style":738},[1015],{"type":413,"value":818},{"type":408,"tag":435,"props":1017,"children":1019},{"class":437,"line":1018},12,[1020],{"type":408,"tag":435,"props":1021,"children":1022},{"style":726},[1023],{"type":413,"value":1024},"  }\n",{"type":408,"tag":435,"props":1026,"children":1028},{"class":437,"line":1027},13,[1029,1034,1038],{"type":408,"tag":435,"props":1030,"children":1031},{"style":851},[1032],{"type":413,"value":1033},"  return",{"type":408,"tag":435,"props":1035,"children":1036},{"style":762},[1037],{"type":413,"value":831},{"type":408,"tag":435,"props":1039,"children":1040},{"style":738},[1041],{"type":413,"value":818},{"type":408,"tag":435,"props":1043,"children":1045},{"class":437,"line":1044},14,[1046,1051],{"type":408,"tag":435,"props":1047,"children":1048},{"style":726},[1049],{"type":413,"value":1050},"}",{"type":408,"tag":435,"props":1052,"children":1053},{"style":738},[1054],{"type":413,"value":818},{"type":408,"tag":1056,"props":1057,"children":1058},"style",{},[1059],{"type":413,"value":1060},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":401,"searchDepth":474,"depth":474,"links":1062},[1063,1064],{"id":600,"depth":447,"text":600},{"id":605,"depth":447,"text":605},"markdown","content:1.algorithm:3.leetcode:1431.kids-with-the-greatest-number-of-candies.md","content","1.algorithm/3.leetcode/1431.kids-with-the-greatest-number-of-candies.md","md",[1071,1073],{"_path":230,"title":229,"description":1072},"给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。",{"_path":236,"title":235,"description":1074},"给你两个字符串 word1 和 word2 。请你从 word1 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。",1713153297479]