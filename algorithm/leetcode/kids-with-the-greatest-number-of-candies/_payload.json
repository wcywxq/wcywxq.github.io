[{"data":1,"prerenderedAt":1104},["Reactive",2],{"navigation":3,"/algorithm/leetcode/kids-with-the-greatest-number-of-candies":427,"/algorithm/leetcode/kids-with-the-greatest-number-of-candies-surround":1099},[4,237,265,406,413],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,399],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":382,"_path":383},"随机数","/frontend-code-assessment/scene/random-number",{"title":385,"_path":386},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":388,"_path":389},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":391,"_path":392},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":394,"_path":395},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":397,"_path":398},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":400,"_path":401,"children":402},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[403],{"title":404,"_path":405},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":407,"_path":408,"children":409},"项目","/pro",[410],{"title":411,"_path":412},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":414,"_path":415,"children":416},"后端语言","/backend-languages",[417],{"title":418,"_path":419,"children":420},"Python","/backend-languages/python",[421,424],{"title":422,"_path":423},"基础","/backend-languages/python/base",{"title":425,"_path":426},"函数","/backend-languages/python/function",{"_path":233,"_dir":428,"_draft":429,"_partial":429,"_locale":430,"title":232,"description":431,"url":432,"body":433,"_type":1094,"_id":1095,"_source":1096,"_file":1097,"_extension":1098},"leetcode",false,"","给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。","https://leetcode.cn/problems/kids-with-the-greatest-number-of-candies",{"type":434,"children":435,"toc":1090},"root",[436,443,448,453,537,542,573,578,601,606,626,632,637,1084],{"type":437,"tag":438,"props":439,"children":440},"element","p",{},[441],{"type":442,"value":431},"text",{"type":437,"tag":438,"props":444,"children":445},{},[446],{"type":442,"value":447},"对每一个孩子，检查是否存在一种方案，将额外的 extraCandies 个糖果分配给孩子们之后，此孩子有 最多 的糖果。注意，允许有多个孩子同时拥有 最多 的糖果数目。",{"type":437,"tag":438,"props":449,"children":450},{},[451],{"type":442,"value":452},"示例 1：",{"type":437,"tag":454,"props":455,"children":458},"pre",{"className":456,"code":457,"language":442,"meta":430,"style":430},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：candies = [2,3,5,1,3], extraCandies = 3\n输出：[true,true,true,false,true]\n解释：\n孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",[459],{"type":437,"tag":460,"props":461,"children":462},"code",{"__ignoreMap":430},[463,474,483,492,501,510,519,528],{"type":437,"tag":464,"props":465,"children":468},"span",{"class":466,"line":467},"line",1,[469],{"type":437,"tag":464,"props":470,"children":471},{},[472],{"type":442,"value":473},"输入：candies = [2,3,5,1,3], extraCandies = 3\n",{"type":437,"tag":464,"props":475,"children":477},{"class":466,"line":476},2,[478],{"type":437,"tag":464,"props":479,"children":480},{},[481],{"type":442,"value":482},"输出：[true,true,true,false,true]\n",{"type":437,"tag":464,"props":484,"children":486},{"class":466,"line":485},3,[487],{"type":437,"tag":464,"props":488,"children":489},{},[490],{"type":442,"value":491},"解释：\n",{"type":437,"tag":464,"props":493,"children":495},{"class":466,"line":494},4,[496],{"type":437,"tag":464,"props":497,"children":498},{},[499],{"type":442,"value":500},"孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n",{"type":437,"tag":464,"props":502,"children":504},{"class":466,"line":503},5,[505],{"type":437,"tag":464,"props":506,"children":507},{},[508],{"type":442,"value":509},"孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":437,"tag":464,"props":511,"children":513},{"class":466,"line":512},6,[514],{"type":437,"tag":464,"props":515,"children":516},{},[517],{"type":442,"value":518},"孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n",{"type":437,"tag":464,"props":520,"children":522},{"class":466,"line":521},7,[523],{"type":437,"tag":464,"props":524,"children":525},{},[526],{"type":442,"value":527},"孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n",{"type":437,"tag":464,"props":529,"children":531},{"class":466,"line":530},8,[532],{"type":437,"tag":464,"props":533,"children":534},{},[535],{"type":442,"value":536},"孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":437,"tag":438,"props":538,"children":539},{},[540],{"type":442,"value":541},"示例 2：",{"type":437,"tag":454,"props":543,"children":545},{"className":456,"code":544,"language":442,"meta":430,"style":430},"输入：candies = [4,2,1,1,2], extraCandies = 1\n输出：[true,false,false,false,false]\n解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",[546],{"type":437,"tag":460,"props":547,"children":548},{"__ignoreMap":430},[549,557,565],{"type":437,"tag":464,"props":550,"children":551},{"class":466,"line":467},[552],{"type":437,"tag":464,"props":553,"children":554},{},[555],{"type":442,"value":556},"输入：candies = [4,2,1,1,2], extraCandies = 1\n",{"type":437,"tag":464,"props":558,"children":559},{"class":466,"line":476},[560],{"type":437,"tag":464,"props":561,"children":562},{},[563],{"type":442,"value":564},"输出：[true,false,false,false,false]\n",{"type":437,"tag":464,"props":566,"children":567},{"class":466,"line":485},[568],{"type":437,"tag":464,"props":569,"children":570},{},[571],{"type":442,"value":572},"解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",{"type":437,"tag":438,"props":574,"children":575},{},[576],{"type":442,"value":577},"示例 3：",{"type":437,"tag":454,"props":579,"children":581},{"className":456,"code":580,"language":442,"meta":430,"style":430},"输入：candies = [12,1,12], extraCandies = 10\n输出：[true,false,true]\n",[582],{"type":437,"tag":460,"props":583,"children":584},{"__ignoreMap":430},[585,593],{"type":437,"tag":464,"props":586,"children":587},{"class":466,"line":467},[588],{"type":437,"tag":464,"props":589,"children":590},{},[591],{"type":442,"value":592},"输入：candies = [12,1,12], extraCandies = 10\n",{"type":437,"tag":464,"props":594,"children":595},{"class":466,"line":476},[596],{"type":437,"tag":464,"props":597,"children":598},{},[599],{"type":442,"value":600},"输出：[true,false,true]\n",{"type":437,"tag":438,"props":602,"children":603},{},[604],{"type":442,"value":605},"提示：",{"type":437,"tag":607,"props":608,"children":609},"ul",{},[610,616,621],{"type":437,"tag":611,"props":612,"children":613},"li",{},[614],{"type":442,"value":615},"2 \u003C= candies.length \u003C= 100",{"type":437,"tag":611,"props":617,"children":618},{},[619],{"type":442,"value":620},"1 \u003C= candies[i] \u003C= 100",{"type":437,"tag":611,"props":622,"children":623},{},[624],{"type":442,"value":625},"1 \u003C= extraCandies \u003C= 50",{"type":437,"tag":627,"props":628,"children":630},"h2",{"id":629},"解题思路",[631],{"type":442,"value":629},{"type":437,"tag":627,"props":633,"children":635},{"id":634},"实现",[636],{"type":442,"value":634},{"type":437,"tag":454,"props":638,"children":642},{"className":639,"code":640,"language":641,"meta":430,"style":430},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} candies\n * @param {number} extraCandies\n * @return {boolean[]}\n */\nvar kidsWithCandies = function (candies, extraCandies) {\n  const max = Math.max.apply([], candies);\n  let res = [];\n  for (let i = 0; i \u003C candies.length; i++) {\n    let currentMax = candies[i] + extraCandies;\n    res[i] = currentMax >= max;\n  }\n  return res;\n};\n","js",[643],{"type":437,"tag":460,"props":644,"children":645},{"__ignoreMap":430},[646,655,681,702,719,727,781,848,874,952,1002,1045,1054,1071],{"type":437,"tag":464,"props":647,"children":648},{"class":466,"line":467},[649],{"type":437,"tag":464,"props":650,"children":652},{"style":651},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[653],{"type":442,"value":654},"/**\n",{"type":437,"tag":464,"props":656,"children":657},{"class":466,"line":476},[658,663,669,675],{"type":437,"tag":464,"props":659,"children":660},{"style":651},[661],{"type":442,"value":662}," * ",{"type":437,"tag":464,"props":664,"children":666},{"style":665},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[667],{"type":442,"value":668},"@param",{"type":437,"tag":464,"props":670,"children":672},{"style":671},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[673],{"type":442,"value":674}," {number[]}",{"type":437,"tag":464,"props":676,"children":678},{"style":677},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[679],{"type":442,"value":680}," candies\n",{"type":437,"tag":464,"props":682,"children":683},{"class":466,"line":485},[684,688,692,697],{"type":437,"tag":464,"props":685,"children":686},{"style":651},[687],{"type":442,"value":662},{"type":437,"tag":464,"props":689,"children":690},{"style":665},[691],{"type":442,"value":668},{"type":437,"tag":464,"props":693,"children":694},{"style":671},[695],{"type":442,"value":696}," {number}",{"type":437,"tag":464,"props":698,"children":699},{"style":677},[700],{"type":442,"value":701}," extraCandies\n",{"type":437,"tag":464,"props":703,"children":704},{"class":466,"line":494},[705,709,714],{"type":437,"tag":464,"props":706,"children":707},{"style":651},[708],{"type":442,"value":662},{"type":437,"tag":464,"props":710,"children":711},{"style":665},[712],{"type":442,"value":713},"@return",{"type":437,"tag":464,"props":715,"children":716},{"style":671},[717],{"type":442,"value":718}," {boolean[]}\n",{"type":437,"tag":464,"props":720,"children":721},{"class":466,"line":503},[722],{"type":437,"tag":464,"props":723,"children":724},{"style":651},[725],{"type":442,"value":726}," */\n",{"type":437,"tag":464,"props":728,"children":729},{"class":466,"line":512},[730,736,742,748,753,759,765,771,776],{"type":437,"tag":464,"props":731,"children":733},{"style":732},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[734],{"type":442,"value":735},"var",{"type":437,"tag":464,"props":737,"children":739},{"style":738},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[740],{"type":442,"value":741}," kidsWithCandies",{"type":437,"tag":464,"props":743,"children":745},{"style":744},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[746],{"type":442,"value":747}," =",{"type":437,"tag":464,"props":749,"children":750},{"style":732},[751],{"type":442,"value":752}," function",{"type":437,"tag":464,"props":754,"children":756},{"style":755},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[757],{"type":442,"value":758}," (",{"type":437,"tag":464,"props":760,"children":762},{"style":761},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[763],{"type":442,"value":764},"candies",{"type":437,"tag":464,"props":766,"children":768},{"style":767},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[769],{"type":442,"value":770},",",{"type":437,"tag":464,"props":772,"children":773},{"style":761},[774],{"type":442,"value":775}," extraCandies",{"type":437,"tag":464,"props":777,"children":778},{"style":755},[779],{"type":442,"value":780},") {\n",{"type":437,"tag":464,"props":782,"children":783},{"class":466,"line":521},[784,789,795,799,804,810,815,819,824,829,833,838,843],{"type":437,"tag":464,"props":785,"children":786},{"style":732},[787],{"type":442,"value":788},"  const",{"type":437,"tag":464,"props":790,"children":792},{"style":791},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[793],{"type":442,"value":794}," max",{"type":437,"tag":464,"props":796,"children":797},{"style":744},[798],{"type":442,"value":747},{"type":437,"tag":464,"props":800,"children":801},{"style":791},[802],{"type":442,"value":803}," Math",{"type":437,"tag":464,"props":805,"children":807},{"style":806},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[808],{"type":442,"value":809},".",{"type":437,"tag":464,"props":811,"children":812},{"style":791},[813],{"type":442,"value":814},"max",{"type":437,"tag":464,"props":816,"children":817},{"style":806},[818],{"type":442,"value":809},{"type":437,"tag":464,"props":820,"children":821},{"style":738},[822],{"type":442,"value":823},"apply",{"type":437,"tag":464,"props":825,"children":826},{"style":755},[827],{"type":442,"value":828},"([]",{"type":437,"tag":464,"props":830,"children":831},{"style":767},[832],{"type":442,"value":770},{"type":437,"tag":464,"props":834,"children":835},{"style":791},[836],{"type":442,"value":837}," candies",{"type":437,"tag":464,"props":839,"children":840},{"style":755},[841],{"type":442,"value":842},")",{"type":437,"tag":464,"props":844,"children":845},{"style":767},[846],{"type":442,"value":847},";\n",{"type":437,"tag":464,"props":849,"children":850},{"class":466,"line":530},[851,856,861,865,870],{"type":437,"tag":464,"props":852,"children":853},{"style":732},[854],{"type":442,"value":855},"  let",{"type":437,"tag":464,"props":857,"children":858},{"style":791},[859],{"type":442,"value":860}," res",{"type":437,"tag":464,"props":862,"children":863},{"style":744},[864],{"type":442,"value":747},{"type":437,"tag":464,"props":866,"children":867},{"style":755},[868],{"type":442,"value":869}," []",{"type":437,"tag":464,"props":871,"children":872},{"style":767},[873],{"type":442,"value":847},{"type":437,"tag":464,"props":875,"children":877},{"class":466,"line":876},9,[878,884,888,893,898,902,908,913,917,922,926,930,935,939,943,948],{"type":437,"tag":464,"props":879,"children":881},{"style":880},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[882],{"type":442,"value":883},"  for",{"type":437,"tag":464,"props":885,"children":886},{"style":755},[887],{"type":442,"value":758},{"type":437,"tag":464,"props":889,"children":890},{"style":732},[891],{"type":442,"value":892},"let",{"type":437,"tag":464,"props":894,"children":895},{"style":791},[896],{"type":442,"value":897}," i",{"type":437,"tag":464,"props":899,"children":900},{"style":744},[901],{"type":442,"value":747},{"type":437,"tag":464,"props":903,"children":905},{"style":904},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[906],{"type":442,"value":907}," 0",{"type":437,"tag":464,"props":909,"children":910},{"style":767},[911],{"type":442,"value":912},";",{"type":437,"tag":464,"props":914,"children":915},{"style":791},[916],{"type":442,"value":897},{"type":437,"tag":464,"props":918,"children":919},{"style":744},[920],{"type":442,"value":921}," \u003C",{"type":437,"tag":464,"props":923,"children":924},{"style":791},[925],{"type":442,"value":837},{"type":437,"tag":464,"props":927,"children":928},{"style":806},[929],{"type":442,"value":809},{"type":437,"tag":464,"props":931,"children":932},{"style":755},[933],{"type":442,"value":934},"length",{"type":437,"tag":464,"props":936,"children":937},{"style":767},[938],{"type":442,"value":912},{"type":437,"tag":464,"props":940,"children":941},{"style":791},[942],{"type":442,"value":897},{"type":437,"tag":464,"props":944,"children":945},{"style":744},[946],{"type":442,"value":947},"++",{"type":437,"tag":464,"props":949,"children":950},{"style":755},[951],{"type":442,"value":780},{"type":437,"tag":464,"props":953,"children":955},{"class":466,"line":954},10,[956,961,966,970,974,979,984,989,994,998],{"type":437,"tag":464,"props":957,"children":958},{"style":732},[959],{"type":442,"value":960},"    let",{"type":437,"tag":464,"props":962,"children":963},{"style":791},[964],{"type":442,"value":965}," currentMax",{"type":437,"tag":464,"props":967,"children":968},{"style":744},[969],{"type":442,"value":747},{"type":437,"tag":464,"props":971,"children":972},{"style":791},[973],{"type":442,"value":837},{"type":437,"tag":464,"props":975,"children":976},{"style":755},[977],{"type":442,"value":978},"[",{"type":437,"tag":464,"props":980,"children":981},{"style":791},[982],{"type":442,"value":983},"i",{"type":437,"tag":464,"props":985,"children":986},{"style":755},[987],{"type":442,"value":988},"] ",{"type":437,"tag":464,"props":990,"children":991},{"style":744},[992],{"type":442,"value":993},"+",{"type":437,"tag":464,"props":995,"children":996},{"style":791},[997],{"type":442,"value":775},{"type":437,"tag":464,"props":999,"children":1000},{"style":767},[1001],{"type":442,"value":847},{"type":437,"tag":464,"props":1003,"children":1005},{"class":466,"line":1004},11,[1006,1011,1015,1019,1023,1028,1032,1037,1041],{"type":437,"tag":464,"props":1007,"children":1008},{"style":791},[1009],{"type":442,"value":1010},"    res",{"type":437,"tag":464,"props":1012,"children":1013},{"style":755},[1014],{"type":442,"value":978},{"type":437,"tag":464,"props":1016,"children":1017},{"style":791},[1018],{"type":442,"value":983},{"type":437,"tag":464,"props":1020,"children":1021},{"style":755},[1022],{"type":442,"value":988},{"type":437,"tag":464,"props":1024,"children":1025},{"style":744},[1026],{"type":442,"value":1027},"=",{"type":437,"tag":464,"props":1029,"children":1030},{"style":791},[1031],{"type":442,"value":965},{"type":437,"tag":464,"props":1033,"children":1034},{"style":744},[1035],{"type":442,"value":1036}," >=",{"type":437,"tag":464,"props":1038,"children":1039},{"style":791},[1040],{"type":442,"value":794},{"type":437,"tag":464,"props":1042,"children":1043},{"style":767},[1044],{"type":442,"value":847},{"type":437,"tag":464,"props":1046,"children":1048},{"class":466,"line":1047},12,[1049],{"type":437,"tag":464,"props":1050,"children":1051},{"style":755},[1052],{"type":442,"value":1053},"  }\n",{"type":437,"tag":464,"props":1055,"children":1057},{"class":466,"line":1056},13,[1058,1063,1067],{"type":437,"tag":464,"props":1059,"children":1060},{"style":880},[1061],{"type":442,"value":1062},"  return",{"type":437,"tag":464,"props":1064,"children":1065},{"style":791},[1066],{"type":442,"value":860},{"type":437,"tag":464,"props":1068,"children":1069},{"style":767},[1070],{"type":442,"value":847},{"type":437,"tag":464,"props":1072,"children":1074},{"class":466,"line":1073},14,[1075,1080],{"type":437,"tag":464,"props":1076,"children":1077},{"style":755},[1078],{"type":442,"value":1079},"}",{"type":437,"tag":464,"props":1081,"children":1082},{"style":767},[1083],{"type":442,"value":847},{"type":437,"tag":1085,"props":1086,"children":1087},"style",{},[1088],{"type":442,"value":1089},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":430,"searchDepth":503,"depth":503,"links":1091},[1092,1093],{"id":629,"depth":476,"text":629},{"id":634,"depth":476,"text":634},"markdown","content:1.algorithm:3.leetcode:1431.kids-with-the-greatest-number-of-candies.md","content","1.algorithm/3.leetcode/1431.kids-with-the-greatest-number-of-candies.md","md",[1100,1102],{"_path":230,"title":229,"description":1101},"给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。",{"_path":236,"title":235,"description":1103},"给你两个字符串 word1 和 word2 。请你从 word1 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。",1713426453807]