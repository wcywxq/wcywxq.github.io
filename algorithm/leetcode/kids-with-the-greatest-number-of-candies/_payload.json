[{"data":1,"prerenderedAt":1101},["Reactive",2],{"navigation":3,"/algorithm/leetcode/kids-with-the-greatest-number-of-candies":424,"/algorithm/leetcode/kids-with-the-greatest-number-of-candies-surround":1096},[4,237,265,403,410],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,396],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"随机数","/frontend-code-assessment/scene/random-number",{"title":382,"_path":383},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":385,"_path":386},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":388,"_path":389},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":391,"_path":392},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":394,"_path":395},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":397,"_path":398,"children":399},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[400],{"title":401,"_path":402},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":404,"_path":405,"children":406},"项目","/pro",[407],{"title":408,"_path":409},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":411,"_path":412,"children":413},"后端语言","/backend-languages",[414],{"title":415,"_path":416,"children":417},"Python","/backend-languages/python",[418,421],{"title":419,"_path":420},"基础","/backend-languages/python/base",{"title":422,"_path":423},"函数","/backend-languages/python/function",{"_path":233,"_dir":425,"_draft":426,"_partial":426,"_locale":427,"title":232,"description":428,"url":429,"body":430,"_type":1091,"_id":1092,"_source":1093,"_file":1094,"_extension":1095},"leetcode",false,"","给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。","https://leetcode.cn/problems/kids-with-the-greatest-number-of-candies",{"type":431,"children":432,"toc":1087},"root",[433,440,445,450,534,539,570,575,598,603,623,629,634,1081],{"type":434,"tag":435,"props":436,"children":437},"element","p",{},[438],{"type":439,"value":428},"text",{"type":434,"tag":435,"props":441,"children":442},{},[443],{"type":439,"value":444},"对每一个孩子，检查是否存在一种方案，将额外的 extraCandies 个糖果分配给孩子们之后，此孩子有 最多 的糖果。注意，允许有多个孩子同时拥有 最多 的糖果数目。",{"type":434,"tag":435,"props":446,"children":447},{},[448],{"type":439,"value":449},"示例 1：",{"type":434,"tag":451,"props":452,"children":455},"pre",{"className":453,"code":454,"language":439,"meta":427,"style":427},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：candies = [2,3,5,1,3], extraCandies = 3\n输出：[true,true,true,false,true]\n解释：\n孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",[456],{"type":434,"tag":457,"props":458,"children":459},"code",{"__ignoreMap":427},[460,471,480,489,498,507,516,525],{"type":434,"tag":461,"props":462,"children":465},"span",{"class":463,"line":464},"line",1,[466],{"type":434,"tag":461,"props":467,"children":468},{},[469],{"type":439,"value":470},"输入：candies = [2,3,5,1,3], extraCandies = 3\n",{"type":434,"tag":461,"props":472,"children":474},{"class":463,"line":473},2,[475],{"type":434,"tag":461,"props":476,"children":477},{},[478],{"type":439,"value":479},"输出：[true,true,true,false,true]\n",{"type":434,"tag":461,"props":481,"children":483},{"class":463,"line":482},3,[484],{"type":434,"tag":461,"props":485,"children":486},{},[487],{"type":439,"value":488},"解释：\n",{"type":434,"tag":461,"props":490,"children":492},{"class":463,"line":491},4,[493],{"type":434,"tag":461,"props":494,"children":495},{},[496],{"type":439,"value":497},"孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n",{"type":434,"tag":461,"props":499,"children":501},{"class":463,"line":500},5,[502],{"type":434,"tag":461,"props":503,"children":504},{},[505],{"type":439,"value":506},"孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":434,"tag":461,"props":508,"children":510},{"class":463,"line":509},6,[511],{"type":434,"tag":461,"props":512,"children":513},{},[514],{"type":439,"value":515},"孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n",{"type":434,"tag":461,"props":517,"children":519},{"class":463,"line":518},7,[520],{"type":434,"tag":461,"props":521,"children":522},{},[523],{"type":439,"value":524},"孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n",{"type":434,"tag":461,"props":526,"children":528},{"class":463,"line":527},8,[529],{"type":434,"tag":461,"props":530,"children":531},{},[532],{"type":439,"value":533},"孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":434,"tag":435,"props":535,"children":536},{},[537],{"type":439,"value":538},"示例 2：",{"type":434,"tag":451,"props":540,"children":542},{"className":453,"code":541,"language":439,"meta":427,"style":427},"输入：candies = [4,2,1,1,2], extraCandies = 1\n输出：[true,false,false,false,false]\n解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",[543],{"type":434,"tag":457,"props":544,"children":545},{"__ignoreMap":427},[546,554,562],{"type":434,"tag":461,"props":547,"children":548},{"class":463,"line":464},[549],{"type":434,"tag":461,"props":550,"children":551},{},[552],{"type":439,"value":553},"输入：candies = [4,2,1,1,2], extraCandies = 1\n",{"type":434,"tag":461,"props":555,"children":556},{"class":463,"line":473},[557],{"type":434,"tag":461,"props":558,"children":559},{},[560],{"type":439,"value":561},"输出：[true,false,false,false,false]\n",{"type":434,"tag":461,"props":563,"children":564},{"class":463,"line":482},[565],{"type":434,"tag":461,"props":566,"children":567},{},[568],{"type":439,"value":569},"解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",{"type":434,"tag":435,"props":571,"children":572},{},[573],{"type":439,"value":574},"示例 3：",{"type":434,"tag":451,"props":576,"children":578},{"className":453,"code":577,"language":439,"meta":427,"style":427},"输入：candies = [12,1,12], extraCandies = 10\n输出：[true,false,true]\n",[579],{"type":434,"tag":457,"props":580,"children":581},{"__ignoreMap":427},[582,590],{"type":434,"tag":461,"props":583,"children":584},{"class":463,"line":464},[585],{"type":434,"tag":461,"props":586,"children":587},{},[588],{"type":439,"value":589},"输入：candies = [12,1,12], extraCandies = 10\n",{"type":434,"tag":461,"props":591,"children":592},{"class":463,"line":473},[593],{"type":434,"tag":461,"props":594,"children":595},{},[596],{"type":439,"value":597},"输出：[true,false,true]\n",{"type":434,"tag":435,"props":599,"children":600},{},[601],{"type":439,"value":602},"提示：",{"type":434,"tag":604,"props":605,"children":606},"ul",{},[607,613,618],{"type":434,"tag":608,"props":609,"children":610},"li",{},[611],{"type":439,"value":612},"2 \u003C= candies.length \u003C= 100",{"type":434,"tag":608,"props":614,"children":615},{},[616],{"type":439,"value":617},"1 \u003C= candies[i] \u003C= 100",{"type":434,"tag":608,"props":619,"children":620},{},[621],{"type":439,"value":622},"1 \u003C= extraCandies \u003C= 50",{"type":434,"tag":624,"props":625,"children":627},"h2",{"id":626},"解题思路",[628],{"type":439,"value":626},{"type":434,"tag":624,"props":630,"children":632},{"id":631},"实现",[633],{"type":439,"value":631},{"type":434,"tag":451,"props":635,"children":639},{"className":636,"code":637,"language":638,"meta":427,"style":427},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} candies\n * @param {number} extraCandies\n * @return {boolean[]}\n */\nvar kidsWithCandies = function (candies, extraCandies) {\n  const max = Math.max.apply([], candies);\n  let res = [];\n  for (let i = 0; i \u003C candies.length; i++) {\n    let currentMax = candies[i] + extraCandies;\n    res[i] = currentMax >= max;\n  }\n  return res;\n};\n","js",[640],{"type":434,"tag":457,"props":641,"children":642},{"__ignoreMap":427},[643,652,678,699,716,724,778,845,871,949,999,1042,1051,1068],{"type":434,"tag":461,"props":644,"children":645},{"class":463,"line":464},[646],{"type":434,"tag":461,"props":647,"children":649},{"style":648},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[650],{"type":439,"value":651},"/**\n",{"type":434,"tag":461,"props":653,"children":654},{"class":463,"line":473},[655,660,666,672],{"type":434,"tag":461,"props":656,"children":657},{"style":648},[658],{"type":439,"value":659}," * ",{"type":434,"tag":461,"props":661,"children":663},{"style":662},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[664],{"type":439,"value":665},"@param",{"type":434,"tag":461,"props":667,"children":669},{"style":668},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[670],{"type":439,"value":671}," {number[]}",{"type":434,"tag":461,"props":673,"children":675},{"style":674},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[676],{"type":439,"value":677}," candies\n",{"type":434,"tag":461,"props":679,"children":680},{"class":463,"line":482},[681,685,689,694],{"type":434,"tag":461,"props":682,"children":683},{"style":648},[684],{"type":439,"value":659},{"type":434,"tag":461,"props":686,"children":687},{"style":662},[688],{"type":439,"value":665},{"type":434,"tag":461,"props":690,"children":691},{"style":668},[692],{"type":439,"value":693}," {number}",{"type":434,"tag":461,"props":695,"children":696},{"style":674},[697],{"type":439,"value":698}," extraCandies\n",{"type":434,"tag":461,"props":700,"children":701},{"class":463,"line":491},[702,706,711],{"type":434,"tag":461,"props":703,"children":704},{"style":648},[705],{"type":439,"value":659},{"type":434,"tag":461,"props":707,"children":708},{"style":662},[709],{"type":439,"value":710},"@return",{"type":434,"tag":461,"props":712,"children":713},{"style":668},[714],{"type":439,"value":715}," {boolean[]}\n",{"type":434,"tag":461,"props":717,"children":718},{"class":463,"line":500},[719],{"type":434,"tag":461,"props":720,"children":721},{"style":648},[722],{"type":439,"value":723}," */\n",{"type":434,"tag":461,"props":725,"children":726},{"class":463,"line":509},[727,733,739,745,750,756,762,768,773],{"type":434,"tag":461,"props":728,"children":730},{"style":729},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[731],{"type":439,"value":732},"var",{"type":434,"tag":461,"props":734,"children":736},{"style":735},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[737],{"type":439,"value":738}," kidsWithCandies",{"type":434,"tag":461,"props":740,"children":742},{"style":741},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[743],{"type":439,"value":744}," =",{"type":434,"tag":461,"props":746,"children":747},{"style":729},[748],{"type":439,"value":749}," function",{"type":434,"tag":461,"props":751,"children":753},{"style":752},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[754],{"type":439,"value":755}," (",{"type":434,"tag":461,"props":757,"children":759},{"style":758},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[760],{"type":439,"value":761},"candies",{"type":434,"tag":461,"props":763,"children":765},{"style":764},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[766],{"type":439,"value":767},",",{"type":434,"tag":461,"props":769,"children":770},{"style":758},[771],{"type":439,"value":772}," extraCandies",{"type":434,"tag":461,"props":774,"children":775},{"style":752},[776],{"type":439,"value":777},") {\n",{"type":434,"tag":461,"props":779,"children":780},{"class":463,"line":518},[781,786,792,796,801,807,812,816,821,826,830,835,840],{"type":434,"tag":461,"props":782,"children":783},{"style":729},[784],{"type":439,"value":785},"  const",{"type":434,"tag":461,"props":787,"children":789},{"style":788},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[790],{"type":439,"value":791}," max",{"type":434,"tag":461,"props":793,"children":794},{"style":741},[795],{"type":439,"value":744},{"type":434,"tag":461,"props":797,"children":798},{"style":788},[799],{"type":439,"value":800}," Math",{"type":434,"tag":461,"props":802,"children":804},{"style":803},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[805],{"type":439,"value":806},".",{"type":434,"tag":461,"props":808,"children":809},{"style":788},[810],{"type":439,"value":811},"max",{"type":434,"tag":461,"props":813,"children":814},{"style":803},[815],{"type":439,"value":806},{"type":434,"tag":461,"props":817,"children":818},{"style":735},[819],{"type":439,"value":820},"apply",{"type":434,"tag":461,"props":822,"children":823},{"style":752},[824],{"type":439,"value":825},"([]",{"type":434,"tag":461,"props":827,"children":828},{"style":764},[829],{"type":439,"value":767},{"type":434,"tag":461,"props":831,"children":832},{"style":788},[833],{"type":439,"value":834}," candies",{"type":434,"tag":461,"props":836,"children":837},{"style":752},[838],{"type":439,"value":839},")",{"type":434,"tag":461,"props":841,"children":842},{"style":764},[843],{"type":439,"value":844},";\n",{"type":434,"tag":461,"props":846,"children":847},{"class":463,"line":527},[848,853,858,862,867],{"type":434,"tag":461,"props":849,"children":850},{"style":729},[851],{"type":439,"value":852},"  let",{"type":434,"tag":461,"props":854,"children":855},{"style":788},[856],{"type":439,"value":857}," res",{"type":434,"tag":461,"props":859,"children":860},{"style":741},[861],{"type":439,"value":744},{"type":434,"tag":461,"props":863,"children":864},{"style":752},[865],{"type":439,"value":866}," []",{"type":434,"tag":461,"props":868,"children":869},{"style":764},[870],{"type":439,"value":844},{"type":434,"tag":461,"props":872,"children":874},{"class":463,"line":873},9,[875,881,885,890,895,899,905,910,914,919,923,927,932,936,940,945],{"type":434,"tag":461,"props":876,"children":878},{"style":877},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[879],{"type":439,"value":880},"  for",{"type":434,"tag":461,"props":882,"children":883},{"style":752},[884],{"type":439,"value":755},{"type":434,"tag":461,"props":886,"children":887},{"style":729},[888],{"type":439,"value":889},"let",{"type":434,"tag":461,"props":891,"children":892},{"style":788},[893],{"type":439,"value":894}," i",{"type":434,"tag":461,"props":896,"children":897},{"style":741},[898],{"type":439,"value":744},{"type":434,"tag":461,"props":900,"children":902},{"style":901},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[903],{"type":439,"value":904}," 0",{"type":434,"tag":461,"props":906,"children":907},{"style":764},[908],{"type":439,"value":909},";",{"type":434,"tag":461,"props":911,"children":912},{"style":788},[913],{"type":439,"value":894},{"type":434,"tag":461,"props":915,"children":916},{"style":741},[917],{"type":439,"value":918}," \u003C",{"type":434,"tag":461,"props":920,"children":921},{"style":788},[922],{"type":439,"value":834},{"type":434,"tag":461,"props":924,"children":925},{"style":803},[926],{"type":439,"value":806},{"type":434,"tag":461,"props":928,"children":929},{"style":752},[930],{"type":439,"value":931},"length",{"type":434,"tag":461,"props":933,"children":934},{"style":764},[935],{"type":439,"value":909},{"type":434,"tag":461,"props":937,"children":938},{"style":788},[939],{"type":439,"value":894},{"type":434,"tag":461,"props":941,"children":942},{"style":741},[943],{"type":439,"value":944},"++",{"type":434,"tag":461,"props":946,"children":947},{"style":752},[948],{"type":439,"value":777},{"type":434,"tag":461,"props":950,"children":952},{"class":463,"line":951},10,[953,958,963,967,971,976,981,986,991,995],{"type":434,"tag":461,"props":954,"children":955},{"style":729},[956],{"type":439,"value":957},"    let",{"type":434,"tag":461,"props":959,"children":960},{"style":788},[961],{"type":439,"value":962}," currentMax",{"type":434,"tag":461,"props":964,"children":965},{"style":741},[966],{"type":439,"value":744},{"type":434,"tag":461,"props":968,"children":969},{"style":788},[970],{"type":439,"value":834},{"type":434,"tag":461,"props":972,"children":973},{"style":752},[974],{"type":439,"value":975},"[",{"type":434,"tag":461,"props":977,"children":978},{"style":788},[979],{"type":439,"value":980},"i",{"type":434,"tag":461,"props":982,"children":983},{"style":752},[984],{"type":439,"value":985},"] ",{"type":434,"tag":461,"props":987,"children":988},{"style":741},[989],{"type":439,"value":990},"+",{"type":434,"tag":461,"props":992,"children":993},{"style":788},[994],{"type":439,"value":772},{"type":434,"tag":461,"props":996,"children":997},{"style":764},[998],{"type":439,"value":844},{"type":434,"tag":461,"props":1000,"children":1002},{"class":463,"line":1001},11,[1003,1008,1012,1016,1020,1025,1029,1034,1038],{"type":434,"tag":461,"props":1004,"children":1005},{"style":788},[1006],{"type":439,"value":1007},"    res",{"type":434,"tag":461,"props":1009,"children":1010},{"style":752},[1011],{"type":439,"value":975},{"type":434,"tag":461,"props":1013,"children":1014},{"style":788},[1015],{"type":439,"value":980},{"type":434,"tag":461,"props":1017,"children":1018},{"style":752},[1019],{"type":439,"value":985},{"type":434,"tag":461,"props":1021,"children":1022},{"style":741},[1023],{"type":439,"value":1024},"=",{"type":434,"tag":461,"props":1026,"children":1027},{"style":788},[1028],{"type":439,"value":962},{"type":434,"tag":461,"props":1030,"children":1031},{"style":741},[1032],{"type":439,"value":1033}," >=",{"type":434,"tag":461,"props":1035,"children":1036},{"style":788},[1037],{"type":439,"value":791},{"type":434,"tag":461,"props":1039,"children":1040},{"style":764},[1041],{"type":439,"value":844},{"type":434,"tag":461,"props":1043,"children":1045},{"class":463,"line":1044},12,[1046],{"type":434,"tag":461,"props":1047,"children":1048},{"style":752},[1049],{"type":439,"value":1050},"  }\n",{"type":434,"tag":461,"props":1052,"children":1054},{"class":463,"line":1053},13,[1055,1060,1064],{"type":434,"tag":461,"props":1056,"children":1057},{"style":877},[1058],{"type":439,"value":1059},"  return",{"type":434,"tag":461,"props":1061,"children":1062},{"style":788},[1063],{"type":439,"value":857},{"type":434,"tag":461,"props":1065,"children":1066},{"style":764},[1067],{"type":439,"value":844},{"type":434,"tag":461,"props":1069,"children":1071},{"class":463,"line":1070},14,[1072,1077],{"type":434,"tag":461,"props":1073,"children":1074},{"style":752},[1075],{"type":439,"value":1076},"}",{"type":434,"tag":461,"props":1078,"children":1079},{"style":764},[1080],{"type":439,"value":844},{"type":434,"tag":1082,"props":1083,"children":1084},"style",{},[1085],{"type":439,"value":1086},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":427,"searchDepth":500,"depth":500,"links":1088},[1089,1090],{"id":626,"depth":473,"text":626},{"id":631,"depth":473,"text":631},"markdown","content:1.algorithm:3.leetcode:1431.kids-with-the-greatest-number-of-candies.md","content","1.algorithm/3.leetcode/1431.kids-with-the-greatest-number-of-candies.md","md",[1097,1099],{"_path":230,"title":229,"description":1098},"给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。",{"_path":236,"title":235,"description":1100},"给你两个字符串 word1 和 word2 。请你从 word1 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。",1713339875725]