[{"data":1,"prerenderedAt":1335},["Reactive",2],{"navigation":3,"/algorithm/leetcode/path-sum":398,"/algorithm/leetcode/path-sum-surround":1330},[4,237,265,384],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR 169. 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR 187. 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数相加","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,377],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,347,350,353,356,359,362,365,368,371,374],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":348,"_path":349},"倒计时","/frontend-code-assessment/scene/countdown",{"title":351,"_path":352},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":354,"_path":355},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":357,"_path":358},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":360,"_path":361},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":363,"_path":364},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":366,"_path":367},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":369,"_path":370},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":372,"_path":373},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":375,"_path":376},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":378,"_path":379,"children":380},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[381],{"title":382,"_path":383},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":385,"_path":386,"children":387},"后端语言","/backend-languages",[388],{"title":389,"_path":390,"children":391},"Python","/backend-languages/python",[392,395],{"title":393,"_path":394},"基础","/backend-languages/python/base",{"title":396,"_path":397},"函数","/backend-languages/python/function",{"_path":131,"_dir":399,"_draft":400,"_partial":400,"_locale":401,"title":130,"description":402,"url":403,"body":404,"_type":1325,"_id":1326,"_source":1327,"_file":1328,"_extension":1329},"leetcode",false,"","给你二叉树的根节点 root 和一个表示目标和的整数 targetSum 。判断该树中是否存在 根节点到叶子节点 的路径，这条路径上所有节点值相加等于目标和 targetSum 。如果存在，返回 true ；否则，返回 false 。","https://leetcode.cn/problems/path-sum",{"type":405,"children":406,"toc":1319},"root",[407,414,419,424,433,472,477,485,543,548,578,583,603,609,614,621,1313],{"type":408,"tag":409,"props":410,"children":411},"element","p",{},[412],{"type":413,"value":402},"text",{"type":408,"tag":409,"props":415,"children":416},{},[417],{"type":413,"value":418},"叶子节点 是指没有子节点的节点。",{"type":408,"tag":409,"props":420,"children":421},{},[422],{"type":413,"value":423},"示例 1：",{"type":408,"tag":409,"props":425,"children":426},{},[427],{"type":408,"tag":428,"props":429,"children":432},"img",{"alt":430,"src":431},"pathsum1","/img/code_leetcode_No.112_pathsum1.png",[],{"type":408,"tag":434,"props":435,"children":438},"pre",{"className":436,"code":437,"language":413,"meta":401,"style":401},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n输出：true\n解释：等于目标和的根节点到叶节点路径如上图所示。\n",[439],{"type":408,"tag":440,"props":441,"children":442},"code",{"__ignoreMap":401},[443,454,463],{"type":408,"tag":444,"props":445,"children":448},"span",{"class":446,"line":447},"line",1,[449],{"type":408,"tag":444,"props":450,"children":451},{},[452],{"type":413,"value":453},"输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n",{"type":408,"tag":444,"props":455,"children":457},{"class":446,"line":456},2,[458],{"type":408,"tag":444,"props":459,"children":460},{},[461],{"type":413,"value":462},"输出：true\n",{"type":408,"tag":444,"props":464,"children":466},{"class":446,"line":465},3,[467],{"type":408,"tag":444,"props":468,"children":469},{},[470],{"type":413,"value":471},"解释：等于目标和的根节点到叶节点路径如上图所示。\n",{"type":408,"tag":409,"props":473,"children":474},{},[475],{"type":413,"value":476},"示例 2：",{"type":408,"tag":409,"props":478,"children":479},{},[480],{"type":408,"tag":428,"props":481,"children":484},{"alt":482,"src":483},"pathsum2","/img/code_leetcode_No.112_pathsum2.png",[],{"type":408,"tag":434,"props":486,"children":488},{"className":436,"code":487,"language":413,"meta":401,"style":401},"输入：root = [1,2,3], targetSum = 5\n输出：false\n解释：树中存在两条根节点到叶子节点的路径：\n(1 --> 2): 和为 3\n(1 --> 3): 和为 4\n不存在 sum = 5 的根节点到叶子节点的路径。\n",[489],{"type":408,"tag":440,"props":490,"children":491},{"__ignoreMap":401},[492,500,508,516,525,534],{"type":408,"tag":444,"props":493,"children":494},{"class":446,"line":447},[495],{"type":408,"tag":444,"props":496,"children":497},{},[498],{"type":413,"value":499},"输入：root = [1,2,3], targetSum = 5\n",{"type":408,"tag":444,"props":501,"children":502},{"class":446,"line":456},[503],{"type":408,"tag":444,"props":504,"children":505},{},[506],{"type":413,"value":507},"输出：false\n",{"type":408,"tag":444,"props":509,"children":510},{"class":446,"line":465},[511],{"type":408,"tag":444,"props":512,"children":513},{},[514],{"type":413,"value":515},"解释：树中存在两条根节点到叶子节点的路径：\n",{"type":408,"tag":444,"props":517,"children":519},{"class":446,"line":518},4,[520],{"type":408,"tag":444,"props":521,"children":522},{},[523],{"type":413,"value":524},"(1 --> 2): 和为 3\n",{"type":408,"tag":444,"props":526,"children":528},{"class":446,"line":527},5,[529],{"type":408,"tag":444,"props":530,"children":531},{},[532],{"type":413,"value":533},"(1 --> 3): 和为 4\n",{"type":408,"tag":444,"props":535,"children":537},{"class":446,"line":536},6,[538],{"type":408,"tag":444,"props":539,"children":540},{},[541],{"type":413,"value":542},"不存在 sum = 5 的根节点到叶子节点的路径。\n",{"type":408,"tag":409,"props":544,"children":545},{},[546],{"type":413,"value":547},"示例 3：",{"type":408,"tag":434,"props":549,"children":551},{"className":436,"code":550,"language":413,"meta":401,"style":401},"输入：root = [], targetSum = 0\n输出：false\n解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",[552],{"type":408,"tag":440,"props":553,"children":554},{"__ignoreMap":401},[555,563,570],{"type":408,"tag":444,"props":556,"children":557},{"class":446,"line":447},[558],{"type":408,"tag":444,"props":559,"children":560},{},[561],{"type":413,"value":562},"输入：root = [], targetSum = 0\n",{"type":408,"tag":444,"props":564,"children":565},{"class":446,"line":456},[566],{"type":408,"tag":444,"props":567,"children":568},{},[569],{"type":413,"value":507},{"type":408,"tag":444,"props":571,"children":572},{"class":446,"line":465},[573],{"type":408,"tag":444,"props":574,"children":575},{},[576],{"type":413,"value":577},"解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",{"type":408,"tag":409,"props":579,"children":580},{},[581],{"type":413,"value":582},"提示：",{"type":408,"tag":584,"props":585,"children":586},"ul",{},[587,593,598],{"type":408,"tag":588,"props":589,"children":590},"li",{},[591],{"type":413,"value":592},"树中节点的数目在范围 [0, 5000] 内",{"type":408,"tag":588,"props":594,"children":595},{},[596],{"type":413,"value":597},"-1000 \u003C= Node.val \u003C= 1000",{"type":408,"tag":588,"props":599,"children":600},{},[601],{"type":413,"value":602},"-1000 \u003C= targetSum \u003C= 1000",{"type":408,"tag":604,"props":605,"children":607},"h2",{"id":606},"解题思路",[608],{"type":413,"value":606},{"type":408,"tag":604,"props":610,"children":612},{"id":611},"实现",[613],{"type":413,"value":611},{"type":408,"tag":615,"props":616,"children":618},"h3",{"id":617},"深度优先搜索-dfs",[619],{"type":413,"value":620},"深度优先搜索 - dfs",{"type":408,"tag":434,"props":622,"children":626},{"className":623,"code":624,"language":625,"meta":401,"style":401},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {boolean}\n */\nvar hasPathSum = function (root, targetSum) {\n  if (root === null) return false;\n  if (root.left === null && root.right === null) return root.val === targetSum;\n  return (\n    hasPathSum(root.left, targetSum - root.val) ||\n    hasPathSum(root.right, targetSum - root.val)\n  );\n};\n","js",[627],{"type":408,"tag":440,"props":628,"children":629},{"__ignoreMap":401},[630,639,647,655,707,773,826,879,888,898,906,933,955,973,981,1026,1071,1161,1175,1234,1287,1300],{"type":408,"tag":444,"props":631,"children":632},{"class":446,"line":447},[633],{"type":408,"tag":444,"props":634,"children":636},{"style":635},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[637],{"type":413,"value":638},"/**\n",{"type":408,"tag":444,"props":640,"children":641},{"class":446,"line":456},[642],{"type":408,"tag":444,"props":643,"children":644},{"style":635},[645],{"type":413,"value":646}," * Definition for a binary tree node.\n",{"type":408,"tag":444,"props":648,"children":649},{"class":446,"line":465},[650],{"type":408,"tag":444,"props":651,"children":652},{"style":635},[653],{"type":413,"value":654}," */\n",{"type":408,"tag":444,"props":656,"children":657},{"class":446,"line":518},[658,664,670,676,682,688,693,697,702],{"type":408,"tag":444,"props":659,"children":661},{"style":660},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[662],{"type":413,"value":663},"function",{"type":408,"tag":444,"props":665,"children":667},{"style":666},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[668],{"type":413,"value":669}," TreeNode",{"type":408,"tag":444,"props":671,"children":673},{"style":672},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[674],{"type":413,"value":675},"(",{"type":408,"tag":444,"props":677,"children":679},{"style":678},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[680],{"type":413,"value":681},"val",{"type":408,"tag":444,"props":683,"children":685},{"style":684},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[686],{"type":413,"value":687},",",{"type":408,"tag":444,"props":689,"children":690},{"style":678},[691],{"type":413,"value":692}," left",{"type":408,"tag":444,"props":694,"children":695},{"style":684},[696],{"type":413,"value":687},{"type":408,"tag":444,"props":698,"children":699},{"style":678},[700],{"type":413,"value":701}," right",{"type":408,"tag":444,"props":703,"children":704},{"style":672},[705],{"type":413,"value":706},") {\n",{"type":408,"tag":444,"props":708,"children":709},{"class":446,"line":527},[710,716,722,727,733,738,743,749,754,759,764,768],{"type":408,"tag":444,"props":711,"children":713},{"style":712},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[714],{"type":413,"value":715},"  this",{"type":408,"tag":444,"props":717,"children":719},{"style":718},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[720],{"type":413,"value":721},".",{"type":408,"tag":444,"props":723,"children":725},{"style":724},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[726],{"type":413,"value":681},{"type":408,"tag":444,"props":728,"children":730},{"style":729},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[731],{"type":413,"value":732}," =",{"type":408,"tag":444,"props":734,"children":735},{"style":724},[736],{"type":413,"value":737}," val",{"type":408,"tag":444,"props":739,"children":740},{"style":729},[741],{"type":413,"value":742}," ===",{"type":408,"tag":444,"props":744,"children":746},{"style":745},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[747],{"type":413,"value":748}," undefined",{"type":408,"tag":444,"props":750,"children":751},{"style":729},[752],{"type":413,"value":753}," ?",{"type":408,"tag":444,"props":755,"children":756},{"style":745},[757],{"type":413,"value":758}," 0",{"type":408,"tag":444,"props":760,"children":761},{"style":729},[762],{"type":413,"value":763}," :",{"type":408,"tag":444,"props":765,"children":766},{"style":724},[767],{"type":413,"value":737},{"type":408,"tag":444,"props":769,"children":770},{"style":684},[771],{"type":413,"value":772},";\n",{"type":408,"tag":444,"props":774,"children":775},{"class":446,"line":536},[776,780,784,789,793,797,801,805,809,814,818,822],{"type":408,"tag":444,"props":777,"children":778},{"style":712},[779],{"type":413,"value":715},{"type":408,"tag":444,"props":781,"children":782},{"style":718},[783],{"type":413,"value":721},{"type":408,"tag":444,"props":785,"children":786},{"style":724},[787],{"type":413,"value":788},"left",{"type":408,"tag":444,"props":790,"children":791},{"style":729},[792],{"type":413,"value":732},{"type":408,"tag":444,"props":794,"children":795},{"style":724},[796],{"type":413,"value":692},{"type":408,"tag":444,"props":798,"children":799},{"style":729},[800],{"type":413,"value":742},{"type":408,"tag":444,"props":802,"children":803},{"style":745},[804],{"type":413,"value":748},{"type":408,"tag":444,"props":806,"children":807},{"style":729},[808],{"type":413,"value":753},{"type":408,"tag":444,"props":810,"children":811},{"style":745},[812],{"type":413,"value":813}," null",{"type":408,"tag":444,"props":815,"children":816},{"style":729},[817],{"type":413,"value":763},{"type":408,"tag":444,"props":819,"children":820},{"style":724},[821],{"type":413,"value":692},{"type":408,"tag":444,"props":823,"children":824},{"style":684},[825],{"type":413,"value":772},{"type":408,"tag":444,"props":827,"children":829},{"class":446,"line":828},7,[830,834,838,843,847,851,855,859,863,867,871,875],{"type":408,"tag":444,"props":831,"children":832},{"style":712},[833],{"type":413,"value":715},{"type":408,"tag":444,"props":835,"children":836},{"style":718},[837],{"type":413,"value":721},{"type":408,"tag":444,"props":839,"children":840},{"style":724},[841],{"type":413,"value":842},"right",{"type":408,"tag":444,"props":844,"children":845},{"style":729},[846],{"type":413,"value":732},{"type":408,"tag":444,"props":848,"children":849},{"style":724},[850],{"type":413,"value":701},{"type":408,"tag":444,"props":852,"children":853},{"style":729},[854],{"type":413,"value":742},{"type":408,"tag":444,"props":856,"children":857},{"style":745},[858],{"type":413,"value":748},{"type":408,"tag":444,"props":860,"children":861},{"style":729},[862],{"type":413,"value":753},{"type":408,"tag":444,"props":864,"children":865},{"style":745},[866],{"type":413,"value":813},{"type":408,"tag":444,"props":868,"children":869},{"style":729},[870],{"type":413,"value":763},{"type":408,"tag":444,"props":872,"children":873},{"style":724},[874],{"type":413,"value":701},{"type":408,"tag":444,"props":876,"children":877},{"style":684},[878],{"type":413,"value":772},{"type":408,"tag":444,"props":880,"children":882},{"class":446,"line":881},8,[883],{"type":408,"tag":444,"props":884,"children":885},{"style":672},[886],{"type":413,"value":887},"}\n",{"type":408,"tag":444,"props":889,"children":891},{"class":446,"line":890},9,[892],{"type":408,"tag":444,"props":893,"children":895},{"emptyLinePlaceholder":894},true,[896],{"type":413,"value":897},"\n",{"type":408,"tag":444,"props":899,"children":901},{"class":446,"line":900},10,[902],{"type":408,"tag":444,"props":903,"children":904},{"style":635},[905],{"type":413,"value":638},{"type":408,"tag":444,"props":907,"children":909},{"class":446,"line":908},11,[910,915,921,927],{"type":408,"tag":444,"props":911,"children":912},{"style":635},[913],{"type":413,"value":914}," * ",{"type":408,"tag":444,"props":916,"children":918},{"style":917},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[919],{"type":413,"value":920},"@param",{"type":408,"tag":444,"props":922,"children":924},{"style":923},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[925],{"type":413,"value":926}," {TreeNode}",{"type":408,"tag":444,"props":928,"children":930},{"style":929},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[931],{"type":413,"value":932}," root\n",{"type":408,"tag":444,"props":934,"children":936},{"class":446,"line":935},12,[937,941,945,950],{"type":408,"tag":444,"props":938,"children":939},{"style":635},[940],{"type":413,"value":914},{"type":408,"tag":444,"props":942,"children":943},{"style":917},[944],{"type":413,"value":920},{"type":408,"tag":444,"props":946,"children":947},{"style":923},[948],{"type":413,"value":949}," {number}",{"type":408,"tag":444,"props":951,"children":952},{"style":929},[953],{"type":413,"value":954}," targetSum\n",{"type":408,"tag":444,"props":956,"children":958},{"class":446,"line":957},13,[959,963,968],{"type":408,"tag":444,"props":960,"children":961},{"style":635},[962],{"type":413,"value":914},{"type":408,"tag":444,"props":964,"children":965},{"style":917},[966],{"type":413,"value":967},"@return",{"type":408,"tag":444,"props":969,"children":970},{"style":923},[971],{"type":413,"value":972}," {boolean}\n",{"type":408,"tag":444,"props":974,"children":976},{"class":446,"line":975},14,[977],{"type":408,"tag":444,"props":978,"children":979},{"style":635},[980],{"type":413,"value":654},{"type":408,"tag":444,"props":982,"children":984},{"class":446,"line":983},15,[985,990,995,999,1004,1009,1013,1017,1022],{"type":408,"tag":444,"props":986,"children":987},{"style":660},[988],{"type":413,"value":989},"var",{"type":408,"tag":444,"props":991,"children":992},{"style":666},[993],{"type":413,"value":994}," hasPathSum",{"type":408,"tag":444,"props":996,"children":997},{"style":729},[998],{"type":413,"value":732},{"type":408,"tag":444,"props":1000,"children":1001},{"style":660},[1002],{"type":413,"value":1003}," function",{"type":408,"tag":444,"props":1005,"children":1006},{"style":672},[1007],{"type":413,"value":1008}," (",{"type":408,"tag":444,"props":1010,"children":1011},{"style":678},[1012],{"type":413,"value":405},{"type":408,"tag":444,"props":1014,"children":1015},{"style":684},[1016],{"type":413,"value":687},{"type":408,"tag":444,"props":1018,"children":1019},{"style":678},[1020],{"type":413,"value":1021}," targetSum",{"type":408,"tag":444,"props":1023,"children":1024},{"style":672},[1025],{"type":413,"value":706},{"type":408,"tag":444,"props":1027,"children":1029},{"class":446,"line":1028},16,[1030,1036,1040,1044,1048,1052,1057,1062,1067],{"type":408,"tag":444,"props":1031,"children":1033},{"style":1032},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[1034],{"type":413,"value":1035},"  if",{"type":408,"tag":444,"props":1037,"children":1038},{"style":672},[1039],{"type":413,"value":1008},{"type":408,"tag":444,"props":1041,"children":1042},{"style":724},[1043],{"type":413,"value":405},{"type":408,"tag":444,"props":1045,"children":1046},{"style":729},[1047],{"type":413,"value":742},{"type":408,"tag":444,"props":1049,"children":1050},{"style":745},[1051],{"type":413,"value":813},{"type":408,"tag":444,"props":1053,"children":1054},{"style":672},[1055],{"type":413,"value":1056},") ",{"type":408,"tag":444,"props":1058,"children":1059},{"style":1032},[1060],{"type":413,"value":1061},"return",{"type":408,"tag":444,"props":1063,"children":1064},{"style":745},[1065],{"type":413,"value":1066}," false",{"type":408,"tag":444,"props":1068,"children":1069},{"style":684},[1070],{"type":413,"value":772},{"type":408,"tag":444,"props":1072,"children":1074},{"class":446,"line":1073},17,[1075,1079,1083,1087,1091,1095,1099,1103,1108,1113,1117,1121,1125,1129,1133,1137,1141,1145,1149,1153,1157],{"type":408,"tag":444,"props":1076,"children":1077},{"style":1032},[1078],{"type":413,"value":1035},{"type":408,"tag":444,"props":1080,"children":1081},{"style":672},[1082],{"type":413,"value":1008},{"type":408,"tag":444,"props":1084,"children":1085},{"style":724},[1086],{"type":413,"value":405},{"type":408,"tag":444,"props":1088,"children":1089},{"style":718},[1090],{"type":413,"value":721},{"type":408,"tag":444,"props":1092,"children":1093},{"style":724},[1094],{"type":413,"value":788},{"type":408,"tag":444,"props":1096,"children":1097},{"style":729},[1098],{"type":413,"value":742},{"type":408,"tag":444,"props":1100,"children":1101},{"style":745},[1102],{"type":413,"value":813},{"type":408,"tag":444,"props":1104,"children":1105},{"style":729},[1106],{"type":413,"value":1107}," &&",{"type":408,"tag":444,"props":1109,"children":1110},{"style":724},[1111],{"type":413,"value":1112}," root",{"type":408,"tag":444,"props":1114,"children":1115},{"style":718},[1116],{"type":413,"value":721},{"type":408,"tag":444,"props":1118,"children":1119},{"style":724},[1120],{"type":413,"value":842},{"type":408,"tag":444,"props":1122,"children":1123},{"style":729},[1124],{"type":413,"value":742},{"type":408,"tag":444,"props":1126,"children":1127},{"style":745},[1128],{"type":413,"value":813},{"type":408,"tag":444,"props":1130,"children":1131},{"style":672},[1132],{"type":413,"value":1056},{"type":408,"tag":444,"props":1134,"children":1135},{"style":1032},[1136],{"type":413,"value":1061},{"type":408,"tag":444,"props":1138,"children":1139},{"style":724},[1140],{"type":413,"value":1112},{"type":408,"tag":444,"props":1142,"children":1143},{"style":718},[1144],{"type":413,"value":721},{"type":408,"tag":444,"props":1146,"children":1147},{"style":724},[1148],{"type":413,"value":681},{"type":408,"tag":444,"props":1150,"children":1151},{"style":729},[1152],{"type":413,"value":742},{"type":408,"tag":444,"props":1154,"children":1155},{"style":724},[1156],{"type":413,"value":1021},{"type":408,"tag":444,"props":1158,"children":1159},{"style":684},[1160],{"type":413,"value":772},{"type":408,"tag":444,"props":1162,"children":1164},{"class":446,"line":1163},18,[1165,1170],{"type":408,"tag":444,"props":1166,"children":1167},{"style":1032},[1168],{"type":413,"value":1169},"  return",{"type":408,"tag":444,"props":1171,"children":1172},{"style":672},[1173],{"type":413,"value":1174}," (\n",{"type":408,"tag":444,"props":1176,"children":1178},{"class":446,"line":1177},19,[1179,1184,1188,1192,1196,1200,1204,1208,1213,1217,1221,1225,1229],{"type":408,"tag":444,"props":1180,"children":1181},{"style":666},[1182],{"type":413,"value":1183},"    hasPathSum",{"type":408,"tag":444,"props":1185,"children":1186},{"style":672},[1187],{"type":413,"value":675},{"type":408,"tag":444,"props":1189,"children":1190},{"style":724},[1191],{"type":413,"value":405},{"type":408,"tag":444,"props":1193,"children":1194},{"style":718},[1195],{"type":413,"value":721},{"type":408,"tag":444,"props":1197,"children":1198},{"style":724},[1199],{"type":413,"value":788},{"type":408,"tag":444,"props":1201,"children":1202},{"style":684},[1203],{"type":413,"value":687},{"type":408,"tag":444,"props":1205,"children":1206},{"style":724},[1207],{"type":413,"value":1021},{"type":408,"tag":444,"props":1209,"children":1210},{"style":729},[1211],{"type":413,"value":1212}," -",{"type":408,"tag":444,"props":1214,"children":1215},{"style":724},[1216],{"type":413,"value":1112},{"type":408,"tag":444,"props":1218,"children":1219},{"style":718},[1220],{"type":413,"value":721},{"type":408,"tag":444,"props":1222,"children":1223},{"style":724},[1224],{"type":413,"value":681},{"type":408,"tag":444,"props":1226,"children":1227},{"style":672},[1228],{"type":413,"value":1056},{"type":408,"tag":444,"props":1230,"children":1231},{"style":729},[1232],{"type":413,"value":1233},"||\n",{"type":408,"tag":444,"props":1235,"children":1237},{"class":446,"line":1236},20,[1238,1242,1246,1250,1254,1258,1262,1266,1270,1274,1278,1282],{"type":408,"tag":444,"props":1239,"children":1240},{"style":666},[1241],{"type":413,"value":1183},{"type":408,"tag":444,"props":1243,"children":1244},{"style":672},[1245],{"type":413,"value":675},{"type":408,"tag":444,"props":1247,"children":1248},{"style":724},[1249],{"type":413,"value":405},{"type":408,"tag":444,"props":1251,"children":1252},{"style":718},[1253],{"type":413,"value":721},{"type":408,"tag":444,"props":1255,"children":1256},{"style":724},[1257],{"type":413,"value":842},{"type":408,"tag":444,"props":1259,"children":1260},{"style":684},[1261],{"type":413,"value":687},{"type":408,"tag":444,"props":1263,"children":1264},{"style":724},[1265],{"type":413,"value":1021},{"type":408,"tag":444,"props":1267,"children":1268},{"style":729},[1269],{"type":413,"value":1212},{"type":408,"tag":444,"props":1271,"children":1272},{"style":724},[1273],{"type":413,"value":1112},{"type":408,"tag":444,"props":1275,"children":1276},{"style":718},[1277],{"type":413,"value":721},{"type":408,"tag":444,"props":1279,"children":1280},{"style":724},[1281],{"type":413,"value":681},{"type":408,"tag":444,"props":1283,"children":1284},{"style":672},[1285],{"type":413,"value":1286},")\n",{"type":408,"tag":444,"props":1288,"children":1290},{"class":446,"line":1289},21,[1291,1296],{"type":408,"tag":444,"props":1292,"children":1293},{"style":672},[1294],{"type":413,"value":1295},"  )",{"type":408,"tag":444,"props":1297,"children":1298},{"style":684},[1299],{"type":413,"value":772},{"type":408,"tag":444,"props":1301,"children":1303},{"class":446,"line":1302},22,[1304,1309],{"type":408,"tag":444,"props":1305,"children":1306},{"style":672},[1307],{"type":413,"value":1308},"}",{"type":408,"tag":444,"props":1310,"children":1311},{"style":684},[1312],{"type":413,"value":772},{"type":408,"tag":1314,"props":1315,"children":1316},"style",{},[1317],{"type":413,"value":1318},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":401,"searchDepth":527,"depth":527,"links":1320},[1321,1322],{"id":606,"depth":456,"text":606},{"id":611,"depth":456,"text":611,"children":1323},[1324],{"id":617,"depth":465,"text":620},"markdown","content:1.algorithm:3.leetcode:112.path-sum.md","content","1.algorithm/3.leetcode/112.path-sum.md","md",[1331,1333],{"_path":128,"title":127,"description":1332},"给定一个二叉树，找出其最小深度。",{"_path":134,"title":133,"description":1334},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",1713153294116]