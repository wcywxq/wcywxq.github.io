[{"data":1,"prerenderedAt":1342},["Reactive",2],{"navigation":3,"/algorithm/leetcode/path-sum":405,"/algorithm/leetcode/path-sum-surround":1337},[4,237,265,384,391],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR 169. 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR 187. 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数相加","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,377],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,347,350,353,356,359,362,365,368,371,374],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":348,"_path":349},"倒计时","/frontend-code-assessment/scene/countdown",{"title":351,"_path":352},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":354,"_path":355},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":357,"_path":358},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":360,"_path":361},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":363,"_path":364},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":366,"_path":367},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":369,"_path":370},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":372,"_path":373},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":375,"_path":376},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":378,"_path":379,"children":380},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[381],{"title":382,"_path":383},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":385,"_path":386,"children":387},"项目","/pro",[388],{"title":389,"_path":390},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":392,"_path":393,"children":394},"后端语言","/backend-languages",[395],{"title":396,"_path":397,"children":398},"Python","/backend-languages/python",[399,402],{"title":400,"_path":401},"基础","/backend-languages/python/base",{"title":403,"_path":404},"函数","/backend-languages/python/function",{"_path":131,"_dir":406,"_draft":407,"_partial":407,"_locale":408,"title":130,"description":409,"url":410,"body":411,"_type":1332,"_id":1333,"_source":1334,"_file":1335,"_extension":1336},"leetcode",false,"","给你二叉树的根节点 root 和一个表示目标和的整数 targetSum 。判断该树中是否存在 根节点到叶子节点 的路径，这条路径上所有节点值相加等于目标和 targetSum 。如果存在，返回 true ；否则，返回 false 。","https://leetcode.cn/problems/path-sum",{"type":412,"children":413,"toc":1326},"root",[414,421,426,431,440,479,484,492,550,555,585,590,610,616,621,628,1320],{"type":415,"tag":416,"props":417,"children":418},"element","p",{},[419],{"type":420,"value":409},"text",{"type":415,"tag":416,"props":422,"children":423},{},[424],{"type":420,"value":425},"叶子节点 是指没有子节点的节点。",{"type":415,"tag":416,"props":427,"children":428},{},[429],{"type":420,"value":430},"示例 1：",{"type":415,"tag":416,"props":432,"children":433},{},[434],{"type":415,"tag":435,"props":436,"children":439},"img",{"alt":437,"src":438},"pathsum1","/img/code_leetcode_No.112_pathsum1.png",[],{"type":415,"tag":441,"props":442,"children":445},"pre",{"className":443,"code":444,"language":420,"meta":408,"style":408},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n输出：true\n解释：等于目标和的根节点到叶节点路径如上图所示。\n",[446],{"type":415,"tag":447,"props":448,"children":449},"code",{"__ignoreMap":408},[450,461,470],{"type":415,"tag":451,"props":452,"children":455},"span",{"class":453,"line":454},"line",1,[456],{"type":415,"tag":451,"props":457,"children":458},{},[459],{"type":420,"value":460},"输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n",{"type":415,"tag":451,"props":462,"children":464},{"class":453,"line":463},2,[465],{"type":415,"tag":451,"props":466,"children":467},{},[468],{"type":420,"value":469},"输出：true\n",{"type":415,"tag":451,"props":471,"children":473},{"class":453,"line":472},3,[474],{"type":415,"tag":451,"props":475,"children":476},{},[477],{"type":420,"value":478},"解释：等于目标和的根节点到叶节点路径如上图所示。\n",{"type":415,"tag":416,"props":480,"children":481},{},[482],{"type":420,"value":483},"示例 2：",{"type":415,"tag":416,"props":485,"children":486},{},[487],{"type":415,"tag":435,"props":488,"children":491},{"alt":489,"src":490},"pathsum2","/img/code_leetcode_No.112_pathsum2.png",[],{"type":415,"tag":441,"props":493,"children":495},{"className":443,"code":494,"language":420,"meta":408,"style":408},"输入：root = [1,2,3], targetSum = 5\n输出：false\n解释：树中存在两条根节点到叶子节点的路径：\n(1 --> 2): 和为 3\n(1 --> 3): 和为 4\n不存在 sum = 5 的根节点到叶子节点的路径。\n",[496],{"type":415,"tag":447,"props":497,"children":498},{"__ignoreMap":408},[499,507,515,523,532,541],{"type":415,"tag":451,"props":500,"children":501},{"class":453,"line":454},[502],{"type":415,"tag":451,"props":503,"children":504},{},[505],{"type":420,"value":506},"输入：root = [1,2,3], targetSum = 5\n",{"type":415,"tag":451,"props":508,"children":509},{"class":453,"line":463},[510],{"type":415,"tag":451,"props":511,"children":512},{},[513],{"type":420,"value":514},"输出：false\n",{"type":415,"tag":451,"props":516,"children":517},{"class":453,"line":472},[518],{"type":415,"tag":451,"props":519,"children":520},{},[521],{"type":420,"value":522},"解释：树中存在两条根节点到叶子节点的路径：\n",{"type":415,"tag":451,"props":524,"children":526},{"class":453,"line":525},4,[527],{"type":415,"tag":451,"props":528,"children":529},{},[530],{"type":420,"value":531},"(1 --> 2): 和为 3\n",{"type":415,"tag":451,"props":533,"children":535},{"class":453,"line":534},5,[536],{"type":415,"tag":451,"props":537,"children":538},{},[539],{"type":420,"value":540},"(1 --> 3): 和为 4\n",{"type":415,"tag":451,"props":542,"children":544},{"class":453,"line":543},6,[545],{"type":415,"tag":451,"props":546,"children":547},{},[548],{"type":420,"value":549},"不存在 sum = 5 的根节点到叶子节点的路径。\n",{"type":415,"tag":416,"props":551,"children":552},{},[553],{"type":420,"value":554},"示例 3：",{"type":415,"tag":441,"props":556,"children":558},{"className":443,"code":557,"language":420,"meta":408,"style":408},"输入：root = [], targetSum = 0\n输出：false\n解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",[559],{"type":415,"tag":447,"props":560,"children":561},{"__ignoreMap":408},[562,570,577],{"type":415,"tag":451,"props":563,"children":564},{"class":453,"line":454},[565],{"type":415,"tag":451,"props":566,"children":567},{},[568],{"type":420,"value":569},"输入：root = [], targetSum = 0\n",{"type":415,"tag":451,"props":571,"children":572},{"class":453,"line":463},[573],{"type":415,"tag":451,"props":574,"children":575},{},[576],{"type":420,"value":514},{"type":415,"tag":451,"props":578,"children":579},{"class":453,"line":472},[580],{"type":415,"tag":451,"props":581,"children":582},{},[583],{"type":420,"value":584},"解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",{"type":415,"tag":416,"props":586,"children":587},{},[588],{"type":420,"value":589},"提示：",{"type":415,"tag":591,"props":592,"children":593},"ul",{},[594,600,605],{"type":415,"tag":595,"props":596,"children":597},"li",{},[598],{"type":420,"value":599},"树中节点的数目在范围 [0, 5000] 内",{"type":415,"tag":595,"props":601,"children":602},{},[603],{"type":420,"value":604},"-1000 \u003C= Node.val \u003C= 1000",{"type":415,"tag":595,"props":606,"children":607},{},[608],{"type":420,"value":609},"-1000 \u003C= targetSum \u003C= 1000",{"type":415,"tag":611,"props":612,"children":614},"h2",{"id":613},"解题思路",[615],{"type":420,"value":613},{"type":415,"tag":611,"props":617,"children":619},{"id":618},"实现",[620],{"type":420,"value":618},{"type":415,"tag":622,"props":623,"children":625},"h3",{"id":624},"深度优先搜索-dfs",[626],{"type":420,"value":627},"深度优先搜索 - dfs",{"type":415,"tag":441,"props":629,"children":633},{"className":630,"code":631,"language":632,"meta":408,"style":408},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {boolean}\n */\nvar hasPathSum = function (root, targetSum) {\n  if (root === null) return false;\n  if (root.left === null && root.right === null) return root.val === targetSum;\n  return (\n    hasPathSum(root.left, targetSum - root.val) ||\n    hasPathSum(root.right, targetSum - root.val)\n  );\n};\n","js",[634],{"type":415,"tag":447,"props":635,"children":636},{"__ignoreMap":408},[637,646,654,662,714,780,833,886,895,905,913,940,962,980,988,1033,1078,1168,1182,1241,1294,1307],{"type":415,"tag":451,"props":638,"children":639},{"class":453,"line":454},[640],{"type":415,"tag":451,"props":641,"children":643},{"style":642},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[644],{"type":420,"value":645},"/**\n",{"type":415,"tag":451,"props":647,"children":648},{"class":453,"line":463},[649],{"type":415,"tag":451,"props":650,"children":651},{"style":642},[652],{"type":420,"value":653}," * Definition for a binary tree node.\n",{"type":415,"tag":451,"props":655,"children":656},{"class":453,"line":472},[657],{"type":415,"tag":451,"props":658,"children":659},{"style":642},[660],{"type":420,"value":661}," */\n",{"type":415,"tag":451,"props":663,"children":664},{"class":453,"line":525},[665,671,677,683,689,695,700,704,709],{"type":415,"tag":451,"props":666,"children":668},{"style":667},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[669],{"type":420,"value":670},"function",{"type":415,"tag":451,"props":672,"children":674},{"style":673},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[675],{"type":420,"value":676}," TreeNode",{"type":415,"tag":451,"props":678,"children":680},{"style":679},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[681],{"type":420,"value":682},"(",{"type":415,"tag":451,"props":684,"children":686},{"style":685},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[687],{"type":420,"value":688},"val",{"type":415,"tag":451,"props":690,"children":692},{"style":691},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[693],{"type":420,"value":694},",",{"type":415,"tag":451,"props":696,"children":697},{"style":685},[698],{"type":420,"value":699}," left",{"type":415,"tag":451,"props":701,"children":702},{"style":691},[703],{"type":420,"value":694},{"type":415,"tag":451,"props":705,"children":706},{"style":685},[707],{"type":420,"value":708}," right",{"type":415,"tag":451,"props":710,"children":711},{"style":679},[712],{"type":420,"value":713},") {\n",{"type":415,"tag":451,"props":715,"children":716},{"class":453,"line":534},[717,723,729,734,740,745,750,756,761,766,771,775],{"type":415,"tag":451,"props":718,"children":720},{"style":719},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[721],{"type":420,"value":722},"  this",{"type":415,"tag":451,"props":724,"children":726},{"style":725},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[727],{"type":420,"value":728},".",{"type":415,"tag":451,"props":730,"children":732},{"style":731},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[733],{"type":420,"value":688},{"type":415,"tag":451,"props":735,"children":737},{"style":736},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[738],{"type":420,"value":739}," =",{"type":415,"tag":451,"props":741,"children":742},{"style":731},[743],{"type":420,"value":744}," val",{"type":415,"tag":451,"props":746,"children":747},{"style":736},[748],{"type":420,"value":749}," ===",{"type":415,"tag":451,"props":751,"children":753},{"style":752},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[754],{"type":420,"value":755}," undefined",{"type":415,"tag":451,"props":757,"children":758},{"style":736},[759],{"type":420,"value":760}," ?",{"type":415,"tag":451,"props":762,"children":763},{"style":752},[764],{"type":420,"value":765}," 0",{"type":415,"tag":451,"props":767,"children":768},{"style":736},[769],{"type":420,"value":770}," :",{"type":415,"tag":451,"props":772,"children":773},{"style":731},[774],{"type":420,"value":744},{"type":415,"tag":451,"props":776,"children":777},{"style":691},[778],{"type":420,"value":779},";\n",{"type":415,"tag":451,"props":781,"children":782},{"class":453,"line":543},[783,787,791,796,800,804,808,812,816,821,825,829],{"type":415,"tag":451,"props":784,"children":785},{"style":719},[786],{"type":420,"value":722},{"type":415,"tag":451,"props":788,"children":789},{"style":725},[790],{"type":420,"value":728},{"type":415,"tag":451,"props":792,"children":793},{"style":731},[794],{"type":420,"value":795},"left",{"type":415,"tag":451,"props":797,"children":798},{"style":736},[799],{"type":420,"value":739},{"type":415,"tag":451,"props":801,"children":802},{"style":731},[803],{"type":420,"value":699},{"type":415,"tag":451,"props":805,"children":806},{"style":736},[807],{"type":420,"value":749},{"type":415,"tag":451,"props":809,"children":810},{"style":752},[811],{"type":420,"value":755},{"type":415,"tag":451,"props":813,"children":814},{"style":736},[815],{"type":420,"value":760},{"type":415,"tag":451,"props":817,"children":818},{"style":752},[819],{"type":420,"value":820}," null",{"type":415,"tag":451,"props":822,"children":823},{"style":736},[824],{"type":420,"value":770},{"type":415,"tag":451,"props":826,"children":827},{"style":731},[828],{"type":420,"value":699},{"type":415,"tag":451,"props":830,"children":831},{"style":691},[832],{"type":420,"value":779},{"type":415,"tag":451,"props":834,"children":836},{"class":453,"line":835},7,[837,841,845,850,854,858,862,866,870,874,878,882],{"type":415,"tag":451,"props":838,"children":839},{"style":719},[840],{"type":420,"value":722},{"type":415,"tag":451,"props":842,"children":843},{"style":725},[844],{"type":420,"value":728},{"type":415,"tag":451,"props":846,"children":847},{"style":731},[848],{"type":420,"value":849},"right",{"type":415,"tag":451,"props":851,"children":852},{"style":736},[853],{"type":420,"value":739},{"type":415,"tag":451,"props":855,"children":856},{"style":731},[857],{"type":420,"value":708},{"type":415,"tag":451,"props":859,"children":860},{"style":736},[861],{"type":420,"value":749},{"type":415,"tag":451,"props":863,"children":864},{"style":752},[865],{"type":420,"value":755},{"type":415,"tag":451,"props":867,"children":868},{"style":736},[869],{"type":420,"value":760},{"type":415,"tag":451,"props":871,"children":872},{"style":752},[873],{"type":420,"value":820},{"type":415,"tag":451,"props":875,"children":876},{"style":736},[877],{"type":420,"value":770},{"type":415,"tag":451,"props":879,"children":880},{"style":731},[881],{"type":420,"value":708},{"type":415,"tag":451,"props":883,"children":884},{"style":691},[885],{"type":420,"value":779},{"type":415,"tag":451,"props":887,"children":889},{"class":453,"line":888},8,[890],{"type":415,"tag":451,"props":891,"children":892},{"style":679},[893],{"type":420,"value":894},"}\n",{"type":415,"tag":451,"props":896,"children":898},{"class":453,"line":897},9,[899],{"type":415,"tag":451,"props":900,"children":902},{"emptyLinePlaceholder":901},true,[903],{"type":420,"value":904},"\n",{"type":415,"tag":451,"props":906,"children":908},{"class":453,"line":907},10,[909],{"type":415,"tag":451,"props":910,"children":911},{"style":642},[912],{"type":420,"value":645},{"type":415,"tag":451,"props":914,"children":916},{"class":453,"line":915},11,[917,922,928,934],{"type":415,"tag":451,"props":918,"children":919},{"style":642},[920],{"type":420,"value":921}," * ",{"type":415,"tag":451,"props":923,"children":925},{"style":924},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[926],{"type":420,"value":927},"@param",{"type":415,"tag":451,"props":929,"children":931},{"style":930},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[932],{"type":420,"value":933}," {TreeNode}",{"type":415,"tag":451,"props":935,"children":937},{"style":936},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[938],{"type":420,"value":939}," root\n",{"type":415,"tag":451,"props":941,"children":943},{"class":453,"line":942},12,[944,948,952,957],{"type":415,"tag":451,"props":945,"children":946},{"style":642},[947],{"type":420,"value":921},{"type":415,"tag":451,"props":949,"children":950},{"style":924},[951],{"type":420,"value":927},{"type":415,"tag":451,"props":953,"children":954},{"style":930},[955],{"type":420,"value":956}," {number}",{"type":415,"tag":451,"props":958,"children":959},{"style":936},[960],{"type":420,"value":961}," targetSum\n",{"type":415,"tag":451,"props":963,"children":965},{"class":453,"line":964},13,[966,970,975],{"type":415,"tag":451,"props":967,"children":968},{"style":642},[969],{"type":420,"value":921},{"type":415,"tag":451,"props":971,"children":972},{"style":924},[973],{"type":420,"value":974},"@return",{"type":415,"tag":451,"props":976,"children":977},{"style":930},[978],{"type":420,"value":979}," {boolean}\n",{"type":415,"tag":451,"props":981,"children":983},{"class":453,"line":982},14,[984],{"type":415,"tag":451,"props":985,"children":986},{"style":642},[987],{"type":420,"value":661},{"type":415,"tag":451,"props":989,"children":991},{"class":453,"line":990},15,[992,997,1002,1006,1011,1016,1020,1024,1029],{"type":415,"tag":451,"props":993,"children":994},{"style":667},[995],{"type":420,"value":996},"var",{"type":415,"tag":451,"props":998,"children":999},{"style":673},[1000],{"type":420,"value":1001}," hasPathSum",{"type":415,"tag":451,"props":1003,"children":1004},{"style":736},[1005],{"type":420,"value":739},{"type":415,"tag":451,"props":1007,"children":1008},{"style":667},[1009],{"type":420,"value":1010}," function",{"type":415,"tag":451,"props":1012,"children":1013},{"style":679},[1014],{"type":420,"value":1015}," (",{"type":415,"tag":451,"props":1017,"children":1018},{"style":685},[1019],{"type":420,"value":412},{"type":415,"tag":451,"props":1021,"children":1022},{"style":691},[1023],{"type":420,"value":694},{"type":415,"tag":451,"props":1025,"children":1026},{"style":685},[1027],{"type":420,"value":1028}," targetSum",{"type":415,"tag":451,"props":1030,"children":1031},{"style":679},[1032],{"type":420,"value":713},{"type":415,"tag":451,"props":1034,"children":1036},{"class":453,"line":1035},16,[1037,1043,1047,1051,1055,1059,1064,1069,1074],{"type":415,"tag":451,"props":1038,"children":1040},{"style":1039},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[1041],{"type":420,"value":1042},"  if",{"type":415,"tag":451,"props":1044,"children":1045},{"style":679},[1046],{"type":420,"value":1015},{"type":415,"tag":451,"props":1048,"children":1049},{"style":731},[1050],{"type":420,"value":412},{"type":415,"tag":451,"props":1052,"children":1053},{"style":736},[1054],{"type":420,"value":749},{"type":415,"tag":451,"props":1056,"children":1057},{"style":752},[1058],{"type":420,"value":820},{"type":415,"tag":451,"props":1060,"children":1061},{"style":679},[1062],{"type":420,"value":1063},") ",{"type":415,"tag":451,"props":1065,"children":1066},{"style":1039},[1067],{"type":420,"value":1068},"return",{"type":415,"tag":451,"props":1070,"children":1071},{"style":752},[1072],{"type":420,"value":1073}," false",{"type":415,"tag":451,"props":1075,"children":1076},{"style":691},[1077],{"type":420,"value":779},{"type":415,"tag":451,"props":1079,"children":1081},{"class":453,"line":1080},17,[1082,1086,1090,1094,1098,1102,1106,1110,1115,1120,1124,1128,1132,1136,1140,1144,1148,1152,1156,1160,1164],{"type":415,"tag":451,"props":1083,"children":1084},{"style":1039},[1085],{"type":420,"value":1042},{"type":415,"tag":451,"props":1087,"children":1088},{"style":679},[1089],{"type":420,"value":1015},{"type":415,"tag":451,"props":1091,"children":1092},{"style":731},[1093],{"type":420,"value":412},{"type":415,"tag":451,"props":1095,"children":1096},{"style":725},[1097],{"type":420,"value":728},{"type":415,"tag":451,"props":1099,"children":1100},{"style":731},[1101],{"type":420,"value":795},{"type":415,"tag":451,"props":1103,"children":1104},{"style":736},[1105],{"type":420,"value":749},{"type":415,"tag":451,"props":1107,"children":1108},{"style":752},[1109],{"type":420,"value":820},{"type":415,"tag":451,"props":1111,"children":1112},{"style":736},[1113],{"type":420,"value":1114}," &&",{"type":415,"tag":451,"props":1116,"children":1117},{"style":731},[1118],{"type":420,"value":1119}," root",{"type":415,"tag":451,"props":1121,"children":1122},{"style":725},[1123],{"type":420,"value":728},{"type":415,"tag":451,"props":1125,"children":1126},{"style":731},[1127],{"type":420,"value":849},{"type":415,"tag":451,"props":1129,"children":1130},{"style":736},[1131],{"type":420,"value":749},{"type":415,"tag":451,"props":1133,"children":1134},{"style":752},[1135],{"type":420,"value":820},{"type":415,"tag":451,"props":1137,"children":1138},{"style":679},[1139],{"type":420,"value":1063},{"type":415,"tag":451,"props":1141,"children":1142},{"style":1039},[1143],{"type":420,"value":1068},{"type":415,"tag":451,"props":1145,"children":1146},{"style":731},[1147],{"type":420,"value":1119},{"type":415,"tag":451,"props":1149,"children":1150},{"style":725},[1151],{"type":420,"value":728},{"type":415,"tag":451,"props":1153,"children":1154},{"style":731},[1155],{"type":420,"value":688},{"type":415,"tag":451,"props":1157,"children":1158},{"style":736},[1159],{"type":420,"value":749},{"type":415,"tag":451,"props":1161,"children":1162},{"style":731},[1163],{"type":420,"value":1028},{"type":415,"tag":451,"props":1165,"children":1166},{"style":691},[1167],{"type":420,"value":779},{"type":415,"tag":451,"props":1169,"children":1171},{"class":453,"line":1170},18,[1172,1177],{"type":415,"tag":451,"props":1173,"children":1174},{"style":1039},[1175],{"type":420,"value":1176},"  return",{"type":415,"tag":451,"props":1178,"children":1179},{"style":679},[1180],{"type":420,"value":1181}," (\n",{"type":415,"tag":451,"props":1183,"children":1185},{"class":453,"line":1184},19,[1186,1191,1195,1199,1203,1207,1211,1215,1220,1224,1228,1232,1236],{"type":415,"tag":451,"props":1187,"children":1188},{"style":673},[1189],{"type":420,"value":1190},"    hasPathSum",{"type":415,"tag":451,"props":1192,"children":1193},{"style":679},[1194],{"type":420,"value":682},{"type":415,"tag":451,"props":1196,"children":1197},{"style":731},[1198],{"type":420,"value":412},{"type":415,"tag":451,"props":1200,"children":1201},{"style":725},[1202],{"type":420,"value":728},{"type":415,"tag":451,"props":1204,"children":1205},{"style":731},[1206],{"type":420,"value":795},{"type":415,"tag":451,"props":1208,"children":1209},{"style":691},[1210],{"type":420,"value":694},{"type":415,"tag":451,"props":1212,"children":1213},{"style":731},[1214],{"type":420,"value":1028},{"type":415,"tag":451,"props":1216,"children":1217},{"style":736},[1218],{"type":420,"value":1219}," -",{"type":415,"tag":451,"props":1221,"children":1222},{"style":731},[1223],{"type":420,"value":1119},{"type":415,"tag":451,"props":1225,"children":1226},{"style":725},[1227],{"type":420,"value":728},{"type":415,"tag":451,"props":1229,"children":1230},{"style":731},[1231],{"type":420,"value":688},{"type":415,"tag":451,"props":1233,"children":1234},{"style":679},[1235],{"type":420,"value":1063},{"type":415,"tag":451,"props":1237,"children":1238},{"style":736},[1239],{"type":420,"value":1240},"||\n",{"type":415,"tag":451,"props":1242,"children":1244},{"class":453,"line":1243},20,[1245,1249,1253,1257,1261,1265,1269,1273,1277,1281,1285,1289],{"type":415,"tag":451,"props":1246,"children":1247},{"style":673},[1248],{"type":420,"value":1190},{"type":415,"tag":451,"props":1250,"children":1251},{"style":679},[1252],{"type":420,"value":682},{"type":415,"tag":451,"props":1254,"children":1255},{"style":731},[1256],{"type":420,"value":412},{"type":415,"tag":451,"props":1258,"children":1259},{"style":725},[1260],{"type":420,"value":728},{"type":415,"tag":451,"props":1262,"children":1263},{"style":731},[1264],{"type":420,"value":849},{"type":415,"tag":451,"props":1266,"children":1267},{"style":691},[1268],{"type":420,"value":694},{"type":415,"tag":451,"props":1270,"children":1271},{"style":731},[1272],{"type":420,"value":1028},{"type":415,"tag":451,"props":1274,"children":1275},{"style":736},[1276],{"type":420,"value":1219},{"type":415,"tag":451,"props":1278,"children":1279},{"style":731},[1280],{"type":420,"value":1119},{"type":415,"tag":451,"props":1282,"children":1283},{"style":725},[1284],{"type":420,"value":728},{"type":415,"tag":451,"props":1286,"children":1287},{"style":731},[1288],{"type":420,"value":688},{"type":415,"tag":451,"props":1290,"children":1291},{"style":679},[1292],{"type":420,"value":1293},")\n",{"type":415,"tag":451,"props":1295,"children":1297},{"class":453,"line":1296},21,[1298,1303],{"type":415,"tag":451,"props":1299,"children":1300},{"style":679},[1301],{"type":420,"value":1302},"  )",{"type":415,"tag":451,"props":1304,"children":1305},{"style":691},[1306],{"type":420,"value":779},{"type":415,"tag":451,"props":1308,"children":1310},{"class":453,"line":1309},22,[1311,1316],{"type":415,"tag":451,"props":1312,"children":1313},{"style":679},[1314],{"type":420,"value":1315},"}",{"type":415,"tag":451,"props":1317,"children":1318},{"style":691},[1319],{"type":420,"value":779},{"type":415,"tag":1321,"props":1322,"children":1323},"style",{},[1324],{"type":420,"value":1325},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":408,"searchDepth":534,"depth":534,"links":1327},[1328,1329],{"id":613,"depth":463,"text":613},{"id":618,"depth":463,"text":618,"children":1330},[1331],{"id":624,"depth":472,"text":627},"markdown","content:1.algorithm:3.leetcode:112.path-sum.md","content","1.algorithm/3.leetcode/112.path-sum.md","md",[1338,1340],{"_path":128,"title":127,"description":1339},"给定一个二叉树，找出其最小深度。",{"_path":134,"title":133,"description":1341},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",1713186263029]