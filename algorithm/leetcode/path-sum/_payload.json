[{"data":1,"prerenderedAt":1367},["Reactive",2],{"navigation":3,"/algorithm/leetcode/path-sum":430,"/algorithm/leetcode/path-sum-surround":1362},[4,237,265,409,416],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,402],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396,399],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":379,"_path":380},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":382,"_path":383},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":385,"_path":386},"随机数","/frontend-code-assessment/scene/random-number",{"title":388,"_path":389},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":391,"_path":392},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":394,"_path":395},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":397,"_path":398},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":400,"_path":401},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":403,"_path":404,"children":405},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[406],{"title":407,"_path":408},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":410,"_path":411,"children":412},"项目","/pro",[413],{"title":414,"_path":415},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":417,"_path":418,"children":419},"后端语言","/backend-languages",[420],{"title":421,"_path":422,"children":423},"Python","/backend-languages/python",[424,427],{"title":425,"_path":426},"基础","/backend-languages/python/base",{"title":428,"_path":429},"函数","/backend-languages/python/function",{"_path":131,"_dir":431,"_draft":432,"_partial":432,"_locale":433,"title":130,"description":434,"url":435,"body":436,"_type":1357,"_id":1358,"_source":1359,"_file":1360,"_extension":1361},"leetcode",false,"","给你二叉树的根节点 root 和一个表示目标和的整数 targetSum 。判断该树中是否存在 根节点到叶子节点 的路径，这条路径上所有节点值相加等于目标和 targetSum 。如果存在，返回 true ；否则，返回 false 。","https://leetcode.cn/problems/path-sum",{"type":437,"children":438,"toc":1351},"root",[439,446,451,456,465,504,509,517,575,580,610,615,635,641,646,653,1345],{"type":440,"tag":441,"props":442,"children":443},"element","p",{},[444],{"type":445,"value":434},"text",{"type":440,"tag":441,"props":447,"children":448},{},[449],{"type":445,"value":450},"叶子节点 是指没有子节点的节点。",{"type":440,"tag":441,"props":452,"children":453},{},[454],{"type":445,"value":455},"示例 1：",{"type":440,"tag":441,"props":457,"children":458},{},[459],{"type":440,"tag":460,"props":461,"children":464},"img",{"alt":462,"src":463},"pathsum1","/img/code_leetcode_No.112_pathsum1.png",[],{"type":440,"tag":466,"props":467,"children":470},"pre",{"className":468,"code":469,"language":445,"meta":433,"style":433},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n输出：true\n解释：等于目标和的根节点到叶节点路径如上图所示。\n",[471],{"type":440,"tag":472,"props":473,"children":474},"code",{"__ignoreMap":433},[475,486,495],{"type":440,"tag":476,"props":477,"children":480},"span",{"class":478,"line":479},"line",1,[481],{"type":440,"tag":476,"props":482,"children":483},{},[484],{"type":445,"value":485},"输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n",{"type":440,"tag":476,"props":487,"children":489},{"class":478,"line":488},2,[490],{"type":440,"tag":476,"props":491,"children":492},{},[493],{"type":445,"value":494},"输出：true\n",{"type":440,"tag":476,"props":496,"children":498},{"class":478,"line":497},3,[499],{"type":440,"tag":476,"props":500,"children":501},{},[502],{"type":445,"value":503},"解释：等于目标和的根节点到叶节点路径如上图所示。\n",{"type":440,"tag":441,"props":505,"children":506},{},[507],{"type":445,"value":508},"示例 2：",{"type":440,"tag":441,"props":510,"children":511},{},[512],{"type":440,"tag":460,"props":513,"children":516},{"alt":514,"src":515},"pathsum2","/img/code_leetcode_No.112_pathsum2.png",[],{"type":440,"tag":466,"props":518,"children":520},{"className":468,"code":519,"language":445,"meta":433,"style":433},"输入：root = [1,2,3], targetSum = 5\n输出：false\n解释：树中存在两条根节点到叶子节点的路径：\n(1 --> 2): 和为 3\n(1 --> 3): 和为 4\n不存在 sum = 5 的根节点到叶子节点的路径。\n",[521],{"type":440,"tag":472,"props":522,"children":523},{"__ignoreMap":433},[524,532,540,548,557,566],{"type":440,"tag":476,"props":525,"children":526},{"class":478,"line":479},[527],{"type":440,"tag":476,"props":528,"children":529},{},[530],{"type":445,"value":531},"输入：root = [1,2,3], targetSum = 5\n",{"type":440,"tag":476,"props":533,"children":534},{"class":478,"line":488},[535],{"type":440,"tag":476,"props":536,"children":537},{},[538],{"type":445,"value":539},"输出：false\n",{"type":440,"tag":476,"props":541,"children":542},{"class":478,"line":497},[543],{"type":440,"tag":476,"props":544,"children":545},{},[546],{"type":445,"value":547},"解释：树中存在两条根节点到叶子节点的路径：\n",{"type":440,"tag":476,"props":549,"children":551},{"class":478,"line":550},4,[552],{"type":440,"tag":476,"props":553,"children":554},{},[555],{"type":445,"value":556},"(1 --> 2): 和为 3\n",{"type":440,"tag":476,"props":558,"children":560},{"class":478,"line":559},5,[561],{"type":440,"tag":476,"props":562,"children":563},{},[564],{"type":445,"value":565},"(1 --> 3): 和为 4\n",{"type":440,"tag":476,"props":567,"children":569},{"class":478,"line":568},6,[570],{"type":440,"tag":476,"props":571,"children":572},{},[573],{"type":445,"value":574},"不存在 sum = 5 的根节点到叶子节点的路径。\n",{"type":440,"tag":441,"props":576,"children":577},{},[578],{"type":445,"value":579},"示例 3：",{"type":440,"tag":466,"props":581,"children":583},{"className":468,"code":582,"language":445,"meta":433,"style":433},"输入：root = [], targetSum = 0\n输出：false\n解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",[584],{"type":440,"tag":472,"props":585,"children":586},{"__ignoreMap":433},[587,595,602],{"type":440,"tag":476,"props":588,"children":589},{"class":478,"line":479},[590],{"type":440,"tag":476,"props":591,"children":592},{},[593],{"type":445,"value":594},"输入：root = [], targetSum = 0\n",{"type":440,"tag":476,"props":596,"children":597},{"class":478,"line":488},[598],{"type":440,"tag":476,"props":599,"children":600},{},[601],{"type":445,"value":539},{"type":440,"tag":476,"props":603,"children":604},{"class":478,"line":497},[605],{"type":440,"tag":476,"props":606,"children":607},{},[608],{"type":445,"value":609},"解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",{"type":440,"tag":441,"props":611,"children":612},{},[613],{"type":445,"value":614},"提示：",{"type":440,"tag":616,"props":617,"children":618},"ul",{},[619,625,630],{"type":440,"tag":620,"props":621,"children":622},"li",{},[623],{"type":445,"value":624},"树中节点的数目在范围 [0, 5000] 内",{"type":440,"tag":620,"props":626,"children":627},{},[628],{"type":445,"value":629},"-1000 \u003C= Node.val \u003C= 1000",{"type":440,"tag":620,"props":631,"children":632},{},[633],{"type":445,"value":634},"-1000 \u003C= targetSum \u003C= 1000",{"type":440,"tag":636,"props":637,"children":639},"h2",{"id":638},"解题思路",[640],{"type":445,"value":638},{"type":440,"tag":636,"props":642,"children":644},{"id":643},"实现",[645],{"type":445,"value":643},{"type":440,"tag":647,"props":648,"children":650},"h3",{"id":649},"深度优先搜索-dfs",[651],{"type":445,"value":652},"深度优先搜索 - dfs",{"type":440,"tag":466,"props":654,"children":658},{"className":655,"code":656,"language":657,"meta":433,"style":433},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {boolean}\n */\nvar hasPathSum = function (root, targetSum) {\n  if (root === null) return false;\n  if (root.left === null && root.right === null) return root.val === targetSum;\n  return (\n    hasPathSum(root.left, targetSum - root.val) ||\n    hasPathSum(root.right, targetSum - root.val)\n  );\n};\n","js",[659],{"type":440,"tag":472,"props":660,"children":661},{"__ignoreMap":433},[662,671,679,687,739,805,858,911,920,930,938,965,987,1005,1013,1058,1103,1193,1207,1266,1319,1332],{"type":440,"tag":476,"props":663,"children":664},{"class":478,"line":479},[665],{"type":440,"tag":476,"props":666,"children":668},{"style":667},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[669],{"type":445,"value":670},"/**\n",{"type":440,"tag":476,"props":672,"children":673},{"class":478,"line":488},[674],{"type":440,"tag":476,"props":675,"children":676},{"style":667},[677],{"type":445,"value":678}," * Definition for a binary tree node.\n",{"type":440,"tag":476,"props":680,"children":681},{"class":478,"line":497},[682],{"type":440,"tag":476,"props":683,"children":684},{"style":667},[685],{"type":445,"value":686}," */\n",{"type":440,"tag":476,"props":688,"children":689},{"class":478,"line":550},[690,696,702,708,714,720,725,729,734],{"type":440,"tag":476,"props":691,"children":693},{"style":692},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[694],{"type":445,"value":695},"function",{"type":440,"tag":476,"props":697,"children":699},{"style":698},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[700],{"type":445,"value":701}," TreeNode",{"type":440,"tag":476,"props":703,"children":705},{"style":704},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[706],{"type":445,"value":707},"(",{"type":440,"tag":476,"props":709,"children":711},{"style":710},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[712],{"type":445,"value":713},"val",{"type":440,"tag":476,"props":715,"children":717},{"style":716},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[718],{"type":445,"value":719},",",{"type":440,"tag":476,"props":721,"children":722},{"style":710},[723],{"type":445,"value":724}," left",{"type":440,"tag":476,"props":726,"children":727},{"style":716},[728],{"type":445,"value":719},{"type":440,"tag":476,"props":730,"children":731},{"style":710},[732],{"type":445,"value":733}," right",{"type":440,"tag":476,"props":735,"children":736},{"style":704},[737],{"type":445,"value":738},") {\n",{"type":440,"tag":476,"props":740,"children":741},{"class":478,"line":559},[742,748,754,759,765,770,775,781,786,791,796,800],{"type":440,"tag":476,"props":743,"children":745},{"style":744},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[746],{"type":445,"value":747},"  this",{"type":440,"tag":476,"props":749,"children":751},{"style":750},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[752],{"type":445,"value":753},".",{"type":440,"tag":476,"props":755,"children":757},{"style":756},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[758],{"type":445,"value":713},{"type":440,"tag":476,"props":760,"children":762},{"style":761},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[763],{"type":445,"value":764}," =",{"type":440,"tag":476,"props":766,"children":767},{"style":756},[768],{"type":445,"value":769}," val",{"type":440,"tag":476,"props":771,"children":772},{"style":761},[773],{"type":445,"value":774}," ===",{"type":440,"tag":476,"props":776,"children":778},{"style":777},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[779],{"type":445,"value":780}," undefined",{"type":440,"tag":476,"props":782,"children":783},{"style":761},[784],{"type":445,"value":785}," ?",{"type":440,"tag":476,"props":787,"children":788},{"style":777},[789],{"type":445,"value":790}," 0",{"type":440,"tag":476,"props":792,"children":793},{"style":761},[794],{"type":445,"value":795}," :",{"type":440,"tag":476,"props":797,"children":798},{"style":756},[799],{"type":445,"value":769},{"type":440,"tag":476,"props":801,"children":802},{"style":716},[803],{"type":445,"value":804},";\n",{"type":440,"tag":476,"props":806,"children":807},{"class":478,"line":568},[808,812,816,821,825,829,833,837,841,846,850,854],{"type":440,"tag":476,"props":809,"children":810},{"style":744},[811],{"type":445,"value":747},{"type":440,"tag":476,"props":813,"children":814},{"style":750},[815],{"type":445,"value":753},{"type":440,"tag":476,"props":817,"children":818},{"style":756},[819],{"type":445,"value":820},"left",{"type":440,"tag":476,"props":822,"children":823},{"style":761},[824],{"type":445,"value":764},{"type":440,"tag":476,"props":826,"children":827},{"style":756},[828],{"type":445,"value":724},{"type":440,"tag":476,"props":830,"children":831},{"style":761},[832],{"type":445,"value":774},{"type":440,"tag":476,"props":834,"children":835},{"style":777},[836],{"type":445,"value":780},{"type":440,"tag":476,"props":838,"children":839},{"style":761},[840],{"type":445,"value":785},{"type":440,"tag":476,"props":842,"children":843},{"style":777},[844],{"type":445,"value":845}," null",{"type":440,"tag":476,"props":847,"children":848},{"style":761},[849],{"type":445,"value":795},{"type":440,"tag":476,"props":851,"children":852},{"style":756},[853],{"type":445,"value":724},{"type":440,"tag":476,"props":855,"children":856},{"style":716},[857],{"type":445,"value":804},{"type":440,"tag":476,"props":859,"children":861},{"class":478,"line":860},7,[862,866,870,875,879,883,887,891,895,899,903,907],{"type":440,"tag":476,"props":863,"children":864},{"style":744},[865],{"type":445,"value":747},{"type":440,"tag":476,"props":867,"children":868},{"style":750},[869],{"type":445,"value":753},{"type":440,"tag":476,"props":871,"children":872},{"style":756},[873],{"type":445,"value":874},"right",{"type":440,"tag":476,"props":876,"children":877},{"style":761},[878],{"type":445,"value":764},{"type":440,"tag":476,"props":880,"children":881},{"style":756},[882],{"type":445,"value":733},{"type":440,"tag":476,"props":884,"children":885},{"style":761},[886],{"type":445,"value":774},{"type":440,"tag":476,"props":888,"children":889},{"style":777},[890],{"type":445,"value":780},{"type":440,"tag":476,"props":892,"children":893},{"style":761},[894],{"type":445,"value":785},{"type":440,"tag":476,"props":896,"children":897},{"style":777},[898],{"type":445,"value":845},{"type":440,"tag":476,"props":900,"children":901},{"style":761},[902],{"type":445,"value":795},{"type":440,"tag":476,"props":904,"children":905},{"style":756},[906],{"type":445,"value":733},{"type":440,"tag":476,"props":908,"children":909},{"style":716},[910],{"type":445,"value":804},{"type":440,"tag":476,"props":912,"children":914},{"class":478,"line":913},8,[915],{"type":440,"tag":476,"props":916,"children":917},{"style":704},[918],{"type":445,"value":919},"}\n",{"type":440,"tag":476,"props":921,"children":923},{"class":478,"line":922},9,[924],{"type":440,"tag":476,"props":925,"children":927},{"emptyLinePlaceholder":926},true,[928],{"type":445,"value":929},"\n",{"type":440,"tag":476,"props":931,"children":933},{"class":478,"line":932},10,[934],{"type":440,"tag":476,"props":935,"children":936},{"style":667},[937],{"type":445,"value":670},{"type":440,"tag":476,"props":939,"children":941},{"class":478,"line":940},11,[942,947,953,959],{"type":440,"tag":476,"props":943,"children":944},{"style":667},[945],{"type":445,"value":946}," * ",{"type":440,"tag":476,"props":948,"children":950},{"style":949},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[951],{"type":445,"value":952},"@param",{"type":440,"tag":476,"props":954,"children":956},{"style":955},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[957],{"type":445,"value":958}," {TreeNode}",{"type":440,"tag":476,"props":960,"children":962},{"style":961},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[963],{"type":445,"value":964}," root\n",{"type":440,"tag":476,"props":966,"children":968},{"class":478,"line":967},12,[969,973,977,982],{"type":440,"tag":476,"props":970,"children":971},{"style":667},[972],{"type":445,"value":946},{"type":440,"tag":476,"props":974,"children":975},{"style":949},[976],{"type":445,"value":952},{"type":440,"tag":476,"props":978,"children":979},{"style":955},[980],{"type":445,"value":981}," {number}",{"type":440,"tag":476,"props":983,"children":984},{"style":961},[985],{"type":445,"value":986}," targetSum\n",{"type":440,"tag":476,"props":988,"children":990},{"class":478,"line":989},13,[991,995,1000],{"type":440,"tag":476,"props":992,"children":993},{"style":667},[994],{"type":445,"value":946},{"type":440,"tag":476,"props":996,"children":997},{"style":949},[998],{"type":445,"value":999},"@return",{"type":440,"tag":476,"props":1001,"children":1002},{"style":955},[1003],{"type":445,"value":1004}," {boolean}\n",{"type":440,"tag":476,"props":1006,"children":1008},{"class":478,"line":1007},14,[1009],{"type":440,"tag":476,"props":1010,"children":1011},{"style":667},[1012],{"type":445,"value":686},{"type":440,"tag":476,"props":1014,"children":1016},{"class":478,"line":1015},15,[1017,1022,1027,1031,1036,1041,1045,1049,1054],{"type":440,"tag":476,"props":1018,"children":1019},{"style":692},[1020],{"type":445,"value":1021},"var",{"type":440,"tag":476,"props":1023,"children":1024},{"style":698},[1025],{"type":445,"value":1026}," hasPathSum",{"type":440,"tag":476,"props":1028,"children":1029},{"style":761},[1030],{"type":445,"value":764},{"type":440,"tag":476,"props":1032,"children":1033},{"style":692},[1034],{"type":445,"value":1035}," function",{"type":440,"tag":476,"props":1037,"children":1038},{"style":704},[1039],{"type":445,"value":1040}," (",{"type":440,"tag":476,"props":1042,"children":1043},{"style":710},[1044],{"type":445,"value":437},{"type":440,"tag":476,"props":1046,"children":1047},{"style":716},[1048],{"type":445,"value":719},{"type":440,"tag":476,"props":1050,"children":1051},{"style":710},[1052],{"type":445,"value":1053}," targetSum",{"type":440,"tag":476,"props":1055,"children":1056},{"style":704},[1057],{"type":445,"value":738},{"type":440,"tag":476,"props":1059,"children":1061},{"class":478,"line":1060},16,[1062,1068,1072,1076,1080,1084,1089,1094,1099],{"type":440,"tag":476,"props":1063,"children":1065},{"style":1064},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[1066],{"type":445,"value":1067},"  if",{"type":440,"tag":476,"props":1069,"children":1070},{"style":704},[1071],{"type":445,"value":1040},{"type":440,"tag":476,"props":1073,"children":1074},{"style":756},[1075],{"type":445,"value":437},{"type":440,"tag":476,"props":1077,"children":1078},{"style":761},[1079],{"type":445,"value":774},{"type":440,"tag":476,"props":1081,"children":1082},{"style":777},[1083],{"type":445,"value":845},{"type":440,"tag":476,"props":1085,"children":1086},{"style":704},[1087],{"type":445,"value":1088},") ",{"type":440,"tag":476,"props":1090,"children":1091},{"style":1064},[1092],{"type":445,"value":1093},"return",{"type":440,"tag":476,"props":1095,"children":1096},{"style":777},[1097],{"type":445,"value":1098}," false",{"type":440,"tag":476,"props":1100,"children":1101},{"style":716},[1102],{"type":445,"value":804},{"type":440,"tag":476,"props":1104,"children":1106},{"class":478,"line":1105},17,[1107,1111,1115,1119,1123,1127,1131,1135,1140,1145,1149,1153,1157,1161,1165,1169,1173,1177,1181,1185,1189],{"type":440,"tag":476,"props":1108,"children":1109},{"style":1064},[1110],{"type":445,"value":1067},{"type":440,"tag":476,"props":1112,"children":1113},{"style":704},[1114],{"type":445,"value":1040},{"type":440,"tag":476,"props":1116,"children":1117},{"style":756},[1118],{"type":445,"value":437},{"type":440,"tag":476,"props":1120,"children":1121},{"style":750},[1122],{"type":445,"value":753},{"type":440,"tag":476,"props":1124,"children":1125},{"style":756},[1126],{"type":445,"value":820},{"type":440,"tag":476,"props":1128,"children":1129},{"style":761},[1130],{"type":445,"value":774},{"type":440,"tag":476,"props":1132,"children":1133},{"style":777},[1134],{"type":445,"value":845},{"type":440,"tag":476,"props":1136,"children":1137},{"style":761},[1138],{"type":445,"value":1139}," &&",{"type":440,"tag":476,"props":1141,"children":1142},{"style":756},[1143],{"type":445,"value":1144}," root",{"type":440,"tag":476,"props":1146,"children":1147},{"style":750},[1148],{"type":445,"value":753},{"type":440,"tag":476,"props":1150,"children":1151},{"style":756},[1152],{"type":445,"value":874},{"type":440,"tag":476,"props":1154,"children":1155},{"style":761},[1156],{"type":445,"value":774},{"type":440,"tag":476,"props":1158,"children":1159},{"style":777},[1160],{"type":445,"value":845},{"type":440,"tag":476,"props":1162,"children":1163},{"style":704},[1164],{"type":445,"value":1088},{"type":440,"tag":476,"props":1166,"children":1167},{"style":1064},[1168],{"type":445,"value":1093},{"type":440,"tag":476,"props":1170,"children":1171},{"style":756},[1172],{"type":445,"value":1144},{"type":440,"tag":476,"props":1174,"children":1175},{"style":750},[1176],{"type":445,"value":753},{"type":440,"tag":476,"props":1178,"children":1179},{"style":756},[1180],{"type":445,"value":713},{"type":440,"tag":476,"props":1182,"children":1183},{"style":761},[1184],{"type":445,"value":774},{"type":440,"tag":476,"props":1186,"children":1187},{"style":756},[1188],{"type":445,"value":1053},{"type":440,"tag":476,"props":1190,"children":1191},{"style":716},[1192],{"type":445,"value":804},{"type":440,"tag":476,"props":1194,"children":1196},{"class":478,"line":1195},18,[1197,1202],{"type":440,"tag":476,"props":1198,"children":1199},{"style":1064},[1200],{"type":445,"value":1201},"  return",{"type":440,"tag":476,"props":1203,"children":1204},{"style":704},[1205],{"type":445,"value":1206}," (\n",{"type":440,"tag":476,"props":1208,"children":1210},{"class":478,"line":1209},19,[1211,1216,1220,1224,1228,1232,1236,1240,1245,1249,1253,1257,1261],{"type":440,"tag":476,"props":1212,"children":1213},{"style":698},[1214],{"type":445,"value":1215},"    hasPathSum",{"type":440,"tag":476,"props":1217,"children":1218},{"style":704},[1219],{"type":445,"value":707},{"type":440,"tag":476,"props":1221,"children":1222},{"style":756},[1223],{"type":445,"value":437},{"type":440,"tag":476,"props":1225,"children":1226},{"style":750},[1227],{"type":445,"value":753},{"type":440,"tag":476,"props":1229,"children":1230},{"style":756},[1231],{"type":445,"value":820},{"type":440,"tag":476,"props":1233,"children":1234},{"style":716},[1235],{"type":445,"value":719},{"type":440,"tag":476,"props":1237,"children":1238},{"style":756},[1239],{"type":445,"value":1053},{"type":440,"tag":476,"props":1241,"children":1242},{"style":761},[1243],{"type":445,"value":1244}," -",{"type":440,"tag":476,"props":1246,"children":1247},{"style":756},[1248],{"type":445,"value":1144},{"type":440,"tag":476,"props":1250,"children":1251},{"style":750},[1252],{"type":445,"value":753},{"type":440,"tag":476,"props":1254,"children":1255},{"style":756},[1256],{"type":445,"value":713},{"type":440,"tag":476,"props":1258,"children":1259},{"style":704},[1260],{"type":445,"value":1088},{"type":440,"tag":476,"props":1262,"children":1263},{"style":761},[1264],{"type":445,"value":1265},"||\n",{"type":440,"tag":476,"props":1267,"children":1269},{"class":478,"line":1268},20,[1270,1274,1278,1282,1286,1290,1294,1298,1302,1306,1310,1314],{"type":440,"tag":476,"props":1271,"children":1272},{"style":698},[1273],{"type":445,"value":1215},{"type":440,"tag":476,"props":1275,"children":1276},{"style":704},[1277],{"type":445,"value":707},{"type":440,"tag":476,"props":1279,"children":1280},{"style":756},[1281],{"type":445,"value":437},{"type":440,"tag":476,"props":1283,"children":1284},{"style":750},[1285],{"type":445,"value":753},{"type":440,"tag":476,"props":1287,"children":1288},{"style":756},[1289],{"type":445,"value":874},{"type":440,"tag":476,"props":1291,"children":1292},{"style":716},[1293],{"type":445,"value":719},{"type":440,"tag":476,"props":1295,"children":1296},{"style":756},[1297],{"type":445,"value":1053},{"type":440,"tag":476,"props":1299,"children":1300},{"style":761},[1301],{"type":445,"value":1244},{"type":440,"tag":476,"props":1303,"children":1304},{"style":756},[1305],{"type":445,"value":1144},{"type":440,"tag":476,"props":1307,"children":1308},{"style":750},[1309],{"type":445,"value":753},{"type":440,"tag":476,"props":1311,"children":1312},{"style":756},[1313],{"type":445,"value":713},{"type":440,"tag":476,"props":1315,"children":1316},{"style":704},[1317],{"type":445,"value":1318},")\n",{"type":440,"tag":476,"props":1320,"children":1322},{"class":478,"line":1321},21,[1323,1328],{"type":440,"tag":476,"props":1324,"children":1325},{"style":704},[1326],{"type":445,"value":1327},"  )",{"type":440,"tag":476,"props":1329,"children":1330},{"style":716},[1331],{"type":445,"value":804},{"type":440,"tag":476,"props":1333,"children":1335},{"class":478,"line":1334},22,[1336,1341],{"type":440,"tag":476,"props":1337,"children":1338},{"style":704},[1339],{"type":445,"value":1340},"}",{"type":440,"tag":476,"props":1342,"children":1343},{"style":716},[1344],{"type":445,"value":804},{"type":440,"tag":1346,"props":1347,"children":1348},"style",{},[1349],{"type":445,"value":1350},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":433,"searchDepth":559,"depth":559,"links":1352},[1353,1354],{"id":638,"depth":488,"text":638},{"id":643,"depth":488,"text":643,"children":1355},[1356],{"id":649,"depth":497,"text":652},"markdown","content:1.algorithm:3.leetcode:112.path-sum.md","content","1.algorithm/3.leetcode/112.path-sum.md","md",[1363,1365],{"_path":128,"title":127,"description":1364},"给定一个二叉树，找出其最小深度。",{"_path":134,"title":133,"description":1366},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",1713426812145]