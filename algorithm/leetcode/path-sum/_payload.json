[{"data":1,"prerenderedAt":1361},["Reactive",2],{"navigation":3,"/algorithm/leetcode/path-sum":424,"/algorithm/leetcode/path-sum-surround":1356},[4,237,265,403,410],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,396],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"随机数","/frontend-code-assessment/scene/random-number",{"title":382,"_path":383},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":385,"_path":386},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":388,"_path":389},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":391,"_path":392},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":394,"_path":395},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":397,"_path":398,"children":399},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[400],{"title":401,"_path":402},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":404,"_path":405,"children":406},"项目","/pro",[407],{"title":408,"_path":409},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":411,"_path":412,"children":413},"后端语言","/backend-languages",[414],{"title":415,"_path":416,"children":417},"Python","/backend-languages/python",[418,421],{"title":419,"_path":420},"基础","/backend-languages/python/base",{"title":422,"_path":423},"函数","/backend-languages/python/function",{"_path":131,"_dir":425,"_draft":426,"_partial":426,"_locale":427,"title":130,"description":428,"url":429,"body":430,"_type":1351,"_id":1352,"_source":1353,"_file":1354,"_extension":1355},"leetcode",false,"","给你二叉树的根节点 root 和一个表示目标和的整数 targetSum 。判断该树中是否存在 根节点到叶子节点 的路径，这条路径上所有节点值相加等于目标和 targetSum 。如果存在，返回 true ；否则，返回 false 。","https://leetcode.cn/problems/path-sum",{"type":431,"children":432,"toc":1345},"root",[433,440,445,450,459,498,503,511,569,574,604,609,629,635,640,647,1339],{"type":434,"tag":435,"props":436,"children":437},"element","p",{},[438],{"type":439,"value":428},"text",{"type":434,"tag":435,"props":441,"children":442},{},[443],{"type":439,"value":444},"叶子节点 是指没有子节点的节点。",{"type":434,"tag":435,"props":446,"children":447},{},[448],{"type":439,"value":449},"示例 1：",{"type":434,"tag":435,"props":451,"children":452},{},[453],{"type":434,"tag":454,"props":455,"children":458},"img",{"alt":456,"src":457},"pathsum1","/img/code_leetcode_No.112_pathsum1.png",[],{"type":434,"tag":460,"props":461,"children":464},"pre",{"className":462,"code":463,"language":439,"meta":427,"style":427},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n输出：true\n解释：等于目标和的根节点到叶节点路径如上图所示。\n",[465],{"type":434,"tag":466,"props":467,"children":468},"code",{"__ignoreMap":427},[469,480,489],{"type":434,"tag":470,"props":471,"children":474},"span",{"class":472,"line":473},"line",1,[475],{"type":434,"tag":470,"props":476,"children":477},{},[478],{"type":439,"value":479},"输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n",{"type":434,"tag":470,"props":481,"children":483},{"class":472,"line":482},2,[484],{"type":434,"tag":470,"props":485,"children":486},{},[487],{"type":439,"value":488},"输出：true\n",{"type":434,"tag":470,"props":490,"children":492},{"class":472,"line":491},3,[493],{"type":434,"tag":470,"props":494,"children":495},{},[496],{"type":439,"value":497},"解释：等于目标和的根节点到叶节点路径如上图所示。\n",{"type":434,"tag":435,"props":499,"children":500},{},[501],{"type":439,"value":502},"示例 2：",{"type":434,"tag":435,"props":504,"children":505},{},[506],{"type":434,"tag":454,"props":507,"children":510},{"alt":508,"src":509},"pathsum2","/img/code_leetcode_No.112_pathsum2.png",[],{"type":434,"tag":460,"props":512,"children":514},{"className":462,"code":513,"language":439,"meta":427,"style":427},"输入：root = [1,2,3], targetSum = 5\n输出：false\n解释：树中存在两条根节点到叶子节点的路径：\n(1 --> 2): 和为 3\n(1 --> 3): 和为 4\n不存在 sum = 5 的根节点到叶子节点的路径。\n",[515],{"type":434,"tag":466,"props":516,"children":517},{"__ignoreMap":427},[518,526,534,542,551,560],{"type":434,"tag":470,"props":519,"children":520},{"class":472,"line":473},[521],{"type":434,"tag":470,"props":522,"children":523},{},[524],{"type":439,"value":525},"输入：root = [1,2,3], targetSum = 5\n",{"type":434,"tag":470,"props":527,"children":528},{"class":472,"line":482},[529],{"type":434,"tag":470,"props":530,"children":531},{},[532],{"type":439,"value":533},"输出：false\n",{"type":434,"tag":470,"props":535,"children":536},{"class":472,"line":491},[537],{"type":434,"tag":470,"props":538,"children":539},{},[540],{"type":439,"value":541},"解释：树中存在两条根节点到叶子节点的路径：\n",{"type":434,"tag":470,"props":543,"children":545},{"class":472,"line":544},4,[546],{"type":434,"tag":470,"props":547,"children":548},{},[549],{"type":439,"value":550},"(1 --> 2): 和为 3\n",{"type":434,"tag":470,"props":552,"children":554},{"class":472,"line":553},5,[555],{"type":434,"tag":470,"props":556,"children":557},{},[558],{"type":439,"value":559},"(1 --> 3): 和为 4\n",{"type":434,"tag":470,"props":561,"children":563},{"class":472,"line":562},6,[564],{"type":434,"tag":470,"props":565,"children":566},{},[567],{"type":439,"value":568},"不存在 sum = 5 的根节点到叶子节点的路径。\n",{"type":434,"tag":435,"props":570,"children":571},{},[572],{"type":439,"value":573},"示例 3：",{"type":434,"tag":460,"props":575,"children":577},{"className":462,"code":576,"language":439,"meta":427,"style":427},"输入：root = [], targetSum = 0\n输出：false\n解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",[578],{"type":434,"tag":466,"props":579,"children":580},{"__ignoreMap":427},[581,589,596],{"type":434,"tag":470,"props":582,"children":583},{"class":472,"line":473},[584],{"type":434,"tag":470,"props":585,"children":586},{},[587],{"type":439,"value":588},"输入：root = [], targetSum = 0\n",{"type":434,"tag":470,"props":590,"children":591},{"class":472,"line":482},[592],{"type":434,"tag":470,"props":593,"children":594},{},[595],{"type":439,"value":533},{"type":434,"tag":470,"props":597,"children":598},{"class":472,"line":491},[599],{"type":434,"tag":470,"props":600,"children":601},{},[602],{"type":439,"value":603},"解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",{"type":434,"tag":435,"props":605,"children":606},{},[607],{"type":439,"value":608},"提示：",{"type":434,"tag":610,"props":611,"children":612},"ul",{},[613,619,624],{"type":434,"tag":614,"props":615,"children":616},"li",{},[617],{"type":439,"value":618},"树中节点的数目在范围 [0, 5000] 内",{"type":434,"tag":614,"props":620,"children":621},{},[622],{"type":439,"value":623},"-1000 \u003C= Node.val \u003C= 1000",{"type":434,"tag":614,"props":625,"children":626},{},[627],{"type":439,"value":628},"-1000 \u003C= targetSum \u003C= 1000",{"type":434,"tag":630,"props":631,"children":633},"h2",{"id":632},"解题思路",[634],{"type":439,"value":632},{"type":434,"tag":630,"props":636,"children":638},{"id":637},"实现",[639],{"type":439,"value":637},{"type":434,"tag":641,"props":642,"children":644},"h3",{"id":643},"深度优先搜索-dfs",[645],{"type":439,"value":646},"深度优先搜索 - dfs",{"type":434,"tag":460,"props":648,"children":652},{"className":649,"code":650,"language":651,"meta":427,"style":427},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {boolean}\n */\nvar hasPathSum = function (root, targetSum) {\n  if (root === null) return false;\n  if (root.left === null && root.right === null) return root.val === targetSum;\n  return (\n    hasPathSum(root.left, targetSum - root.val) ||\n    hasPathSum(root.right, targetSum - root.val)\n  );\n};\n","js",[653],{"type":434,"tag":466,"props":654,"children":655},{"__ignoreMap":427},[656,665,673,681,733,799,852,905,914,924,932,959,981,999,1007,1052,1097,1187,1201,1260,1313,1326],{"type":434,"tag":470,"props":657,"children":658},{"class":472,"line":473},[659],{"type":434,"tag":470,"props":660,"children":662},{"style":661},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[663],{"type":439,"value":664},"/**\n",{"type":434,"tag":470,"props":666,"children":667},{"class":472,"line":482},[668],{"type":434,"tag":470,"props":669,"children":670},{"style":661},[671],{"type":439,"value":672}," * Definition for a binary tree node.\n",{"type":434,"tag":470,"props":674,"children":675},{"class":472,"line":491},[676],{"type":434,"tag":470,"props":677,"children":678},{"style":661},[679],{"type":439,"value":680}," */\n",{"type":434,"tag":470,"props":682,"children":683},{"class":472,"line":544},[684,690,696,702,708,714,719,723,728],{"type":434,"tag":470,"props":685,"children":687},{"style":686},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[688],{"type":439,"value":689},"function",{"type":434,"tag":470,"props":691,"children":693},{"style":692},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[694],{"type":439,"value":695}," TreeNode",{"type":434,"tag":470,"props":697,"children":699},{"style":698},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[700],{"type":439,"value":701},"(",{"type":434,"tag":470,"props":703,"children":705},{"style":704},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[706],{"type":439,"value":707},"val",{"type":434,"tag":470,"props":709,"children":711},{"style":710},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[712],{"type":439,"value":713},",",{"type":434,"tag":470,"props":715,"children":716},{"style":704},[717],{"type":439,"value":718}," left",{"type":434,"tag":470,"props":720,"children":721},{"style":710},[722],{"type":439,"value":713},{"type":434,"tag":470,"props":724,"children":725},{"style":704},[726],{"type":439,"value":727}," right",{"type":434,"tag":470,"props":729,"children":730},{"style":698},[731],{"type":439,"value":732},") {\n",{"type":434,"tag":470,"props":734,"children":735},{"class":472,"line":553},[736,742,748,753,759,764,769,775,780,785,790,794],{"type":434,"tag":470,"props":737,"children":739},{"style":738},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[740],{"type":439,"value":741},"  this",{"type":434,"tag":470,"props":743,"children":745},{"style":744},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[746],{"type":439,"value":747},".",{"type":434,"tag":470,"props":749,"children":751},{"style":750},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[752],{"type":439,"value":707},{"type":434,"tag":470,"props":754,"children":756},{"style":755},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[757],{"type":439,"value":758}," =",{"type":434,"tag":470,"props":760,"children":761},{"style":750},[762],{"type":439,"value":763}," val",{"type":434,"tag":470,"props":765,"children":766},{"style":755},[767],{"type":439,"value":768}," ===",{"type":434,"tag":470,"props":770,"children":772},{"style":771},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[773],{"type":439,"value":774}," undefined",{"type":434,"tag":470,"props":776,"children":777},{"style":755},[778],{"type":439,"value":779}," ?",{"type":434,"tag":470,"props":781,"children":782},{"style":771},[783],{"type":439,"value":784}," 0",{"type":434,"tag":470,"props":786,"children":787},{"style":755},[788],{"type":439,"value":789}," :",{"type":434,"tag":470,"props":791,"children":792},{"style":750},[793],{"type":439,"value":763},{"type":434,"tag":470,"props":795,"children":796},{"style":710},[797],{"type":439,"value":798},";\n",{"type":434,"tag":470,"props":800,"children":801},{"class":472,"line":562},[802,806,810,815,819,823,827,831,835,840,844,848],{"type":434,"tag":470,"props":803,"children":804},{"style":738},[805],{"type":439,"value":741},{"type":434,"tag":470,"props":807,"children":808},{"style":744},[809],{"type":439,"value":747},{"type":434,"tag":470,"props":811,"children":812},{"style":750},[813],{"type":439,"value":814},"left",{"type":434,"tag":470,"props":816,"children":817},{"style":755},[818],{"type":439,"value":758},{"type":434,"tag":470,"props":820,"children":821},{"style":750},[822],{"type":439,"value":718},{"type":434,"tag":470,"props":824,"children":825},{"style":755},[826],{"type":439,"value":768},{"type":434,"tag":470,"props":828,"children":829},{"style":771},[830],{"type":439,"value":774},{"type":434,"tag":470,"props":832,"children":833},{"style":755},[834],{"type":439,"value":779},{"type":434,"tag":470,"props":836,"children":837},{"style":771},[838],{"type":439,"value":839}," null",{"type":434,"tag":470,"props":841,"children":842},{"style":755},[843],{"type":439,"value":789},{"type":434,"tag":470,"props":845,"children":846},{"style":750},[847],{"type":439,"value":718},{"type":434,"tag":470,"props":849,"children":850},{"style":710},[851],{"type":439,"value":798},{"type":434,"tag":470,"props":853,"children":855},{"class":472,"line":854},7,[856,860,864,869,873,877,881,885,889,893,897,901],{"type":434,"tag":470,"props":857,"children":858},{"style":738},[859],{"type":439,"value":741},{"type":434,"tag":470,"props":861,"children":862},{"style":744},[863],{"type":439,"value":747},{"type":434,"tag":470,"props":865,"children":866},{"style":750},[867],{"type":439,"value":868},"right",{"type":434,"tag":470,"props":870,"children":871},{"style":755},[872],{"type":439,"value":758},{"type":434,"tag":470,"props":874,"children":875},{"style":750},[876],{"type":439,"value":727},{"type":434,"tag":470,"props":878,"children":879},{"style":755},[880],{"type":439,"value":768},{"type":434,"tag":470,"props":882,"children":883},{"style":771},[884],{"type":439,"value":774},{"type":434,"tag":470,"props":886,"children":887},{"style":755},[888],{"type":439,"value":779},{"type":434,"tag":470,"props":890,"children":891},{"style":771},[892],{"type":439,"value":839},{"type":434,"tag":470,"props":894,"children":895},{"style":755},[896],{"type":439,"value":789},{"type":434,"tag":470,"props":898,"children":899},{"style":750},[900],{"type":439,"value":727},{"type":434,"tag":470,"props":902,"children":903},{"style":710},[904],{"type":439,"value":798},{"type":434,"tag":470,"props":906,"children":908},{"class":472,"line":907},8,[909],{"type":434,"tag":470,"props":910,"children":911},{"style":698},[912],{"type":439,"value":913},"}\n",{"type":434,"tag":470,"props":915,"children":917},{"class":472,"line":916},9,[918],{"type":434,"tag":470,"props":919,"children":921},{"emptyLinePlaceholder":920},true,[922],{"type":439,"value":923},"\n",{"type":434,"tag":470,"props":925,"children":927},{"class":472,"line":926},10,[928],{"type":434,"tag":470,"props":929,"children":930},{"style":661},[931],{"type":439,"value":664},{"type":434,"tag":470,"props":933,"children":935},{"class":472,"line":934},11,[936,941,947,953],{"type":434,"tag":470,"props":937,"children":938},{"style":661},[939],{"type":439,"value":940}," * ",{"type":434,"tag":470,"props":942,"children":944},{"style":943},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[945],{"type":439,"value":946},"@param",{"type":434,"tag":470,"props":948,"children":950},{"style":949},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[951],{"type":439,"value":952}," {TreeNode}",{"type":434,"tag":470,"props":954,"children":956},{"style":955},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[957],{"type":439,"value":958}," root\n",{"type":434,"tag":470,"props":960,"children":962},{"class":472,"line":961},12,[963,967,971,976],{"type":434,"tag":470,"props":964,"children":965},{"style":661},[966],{"type":439,"value":940},{"type":434,"tag":470,"props":968,"children":969},{"style":943},[970],{"type":439,"value":946},{"type":434,"tag":470,"props":972,"children":973},{"style":949},[974],{"type":439,"value":975}," {number}",{"type":434,"tag":470,"props":977,"children":978},{"style":955},[979],{"type":439,"value":980}," targetSum\n",{"type":434,"tag":470,"props":982,"children":984},{"class":472,"line":983},13,[985,989,994],{"type":434,"tag":470,"props":986,"children":987},{"style":661},[988],{"type":439,"value":940},{"type":434,"tag":470,"props":990,"children":991},{"style":943},[992],{"type":439,"value":993},"@return",{"type":434,"tag":470,"props":995,"children":996},{"style":949},[997],{"type":439,"value":998}," {boolean}\n",{"type":434,"tag":470,"props":1000,"children":1002},{"class":472,"line":1001},14,[1003],{"type":434,"tag":470,"props":1004,"children":1005},{"style":661},[1006],{"type":439,"value":680},{"type":434,"tag":470,"props":1008,"children":1010},{"class":472,"line":1009},15,[1011,1016,1021,1025,1030,1035,1039,1043,1048],{"type":434,"tag":470,"props":1012,"children":1013},{"style":686},[1014],{"type":439,"value":1015},"var",{"type":434,"tag":470,"props":1017,"children":1018},{"style":692},[1019],{"type":439,"value":1020}," hasPathSum",{"type":434,"tag":470,"props":1022,"children":1023},{"style":755},[1024],{"type":439,"value":758},{"type":434,"tag":470,"props":1026,"children":1027},{"style":686},[1028],{"type":439,"value":1029}," function",{"type":434,"tag":470,"props":1031,"children":1032},{"style":698},[1033],{"type":439,"value":1034}," (",{"type":434,"tag":470,"props":1036,"children":1037},{"style":704},[1038],{"type":439,"value":431},{"type":434,"tag":470,"props":1040,"children":1041},{"style":710},[1042],{"type":439,"value":713},{"type":434,"tag":470,"props":1044,"children":1045},{"style":704},[1046],{"type":439,"value":1047}," targetSum",{"type":434,"tag":470,"props":1049,"children":1050},{"style":698},[1051],{"type":439,"value":732},{"type":434,"tag":470,"props":1053,"children":1055},{"class":472,"line":1054},16,[1056,1062,1066,1070,1074,1078,1083,1088,1093],{"type":434,"tag":470,"props":1057,"children":1059},{"style":1058},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[1060],{"type":439,"value":1061},"  if",{"type":434,"tag":470,"props":1063,"children":1064},{"style":698},[1065],{"type":439,"value":1034},{"type":434,"tag":470,"props":1067,"children":1068},{"style":750},[1069],{"type":439,"value":431},{"type":434,"tag":470,"props":1071,"children":1072},{"style":755},[1073],{"type":439,"value":768},{"type":434,"tag":470,"props":1075,"children":1076},{"style":771},[1077],{"type":439,"value":839},{"type":434,"tag":470,"props":1079,"children":1080},{"style":698},[1081],{"type":439,"value":1082},") ",{"type":434,"tag":470,"props":1084,"children":1085},{"style":1058},[1086],{"type":439,"value":1087},"return",{"type":434,"tag":470,"props":1089,"children":1090},{"style":771},[1091],{"type":439,"value":1092}," false",{"type":434,"tag":470,"props":1094,"children":1095},{"style":710},[1096],{"type":439,"value":798},{"type":434,"tag":470,"props":1098,"children":1100},{"class":472,"line":1099},17,[1101,1105,1109,1113,1117,1121,1125,1129,1134,1139,1143,1147,1151,1155,1159,1163,1167,1171,1175,1179,1183],{"type":434,"tag":470,"props":1102,"children":1103},{"style":1058},[1104],{"type":439,"value":1061},{"type":434,"tag":470,"props":1106,"children":1107},{"style":698},[1108],{"type":439,"value":1034},{"type":434,"tag":470,"props":1110,"children":1111},{"style":750},[1112],{"type":439,"value":431},{"type":434,"tag":470,"props":1114,"children":1115},{"style":744},[1116],{"type":439,"value":747},{"type":434,"tag":470,"props":1118,"children":1119},{"style":750},[1120],{"type":439,"value":814},{"type":434,"tag":470,"props":1122,"children":1123},{"style":755},[1124],{"type":439,"value":768},{"type":434,"tag":470,"props":1126,"children":1127},{"style":771},[1128],{"type":439,"value":839},{"type":434,"tag":470,"props":1130,"children":1131},{"style":755},[1132],{"type":439,"value":1133}," &&",{"type":434,"tag":470,"props":1135,"children":1136},{"style":750},[1137],{"type":439,"value":1138}," root",{"type":434,"tag":470,"props":1140,"children":1141},{"style":744},[1142],{"type":439,"value":747},{"type":434,"tag":470,"props":1144,"children":1145},{"style":750},[1146],{"type":439,"value":868},{"type":434,"tag":470,"props":1148,"children":1149},{"style":755},[1150],{"type":439,"value":768},{"type":434,"tag":470,"props":1152,"children":1153},{"style":771},[1154],{"type":439,"value":839},{"type":434,"tag":470,"props":1156,"children":1157},{"style":698},[1158],{"type":439,"value":1082},{"type":434,"tag":470,"props":1160,"children":1161},{"style":1058},[1162],{"type":439,"value":1087},{"type":434,"tag":470,"props":1164,"children":1165},{"style":750},[1166],{"type":439,"value":1138},{"type":434,"tag":470,"props":1168,"children":1169},{"style":744},[1170],{"type":439,"value":747},{"type":434,"tag":470,"props":1172,"children":1173},{"style":750},[1174],{"type":439,"value":707},{"type":434,"tag":470,"props":1176,"children":1177},{"style":755},[1178],{"type":439,"value":768},{"type":434,"tag":470,"props":1180,"children":1181},{"style":750},[1182],{"type":439,"value":1047},{"type":434,"tag":470,"props":1184,"children":1185},{"style":710},[1186],{"type":439,"value":798},{"type":434,"tag":470,"props":1188,"children":1190},{"class":472,"line":1189},18,[1191,1196],{"type":434,"tag":470,"props":1192,"children":1193},{"style":1058},[1194],{"type":439,"value":1195},"  return",{"type":434,"tag":470,"props":1197,"children":1198},{"style":698},[1199],{"type":439,"value":1200}," (\n",{"type":434,"tag":470,"props":1202,"children":1204},{"class":472,"line":1203},19,[1205,1210,1214,1218,1222,1226,1230,1234,1239,1243,1247,1251,1255],{"type":434,"tag":470,"props":1206,"children":1207},{"style":692},[1208],{"type":439,"value":1209},"    hasPathSum",{"type":434,"tag":470,"props":1211,"children":1212},{"style":698},[1213],{"type":439,"value":701},{"type":434,"tag":470,"props":1215,"children":1216},{"style":750},[1217],{"type":439,"value":431},{"type":434,"tag":470,"props":1219,"children":1220},{"style":744},[1221],{"type":439,"value":747},{"type":434,"tag":470,"props":1223,"children":1224},{"style":750},[1225],{"type":439,"value":814},{"type":434,"tag":470,"props":1227,"children":1228},{"style":710},[1229],{"type":439,"value":713},{"type":434,"tag":470,"props":1231,"children":1232},{"style":750},[1233],{"type":439,"value":1047},{"type":434,"tag":470,"props":1235,"children":1236},{"style":755},[1237],{"type":439,"value":1238}," -",{"type":434,"tag":470,"props":1240,"children":1241},{"style":750},[1242],{"type":439,"value":1138},{"type":434,"tag":470,"props":1244,"children":1245},{"style":744},[1246],{"type":439,"value":747},{"type":434,"tag":470,"props":1248,"children":1249},{"style":750},[1250],{"type":439,"value":707},{"type":434,"tag":470,"props":1252,"children":1253},{"style":698},[1254],{"type":439,"value":1082},{"type":434,"tag":470,"props":1256,"children":1257},{"style":755},[1258],{"type":439,"value":1259},"||\n",{"type":434,"tag":470,"props":1261,"children":1263},{"class":472,"line":1262},20,[1264,1268,1272,1276,1280,1284,1288,1292,1296,1300,1304,1308],{"type":434,"tag":470,"props":1265,"children":1266},{"style":692},[1267],{"type":439,"value":1209},{"type":434,"tag":470,"props":1269,"children":1270},{"style":698},[1271],{"type":439,"value":701},{"type":434,"tag":470,"props":1273,"children":1274},{"style":750},[1275],{"type":439,"value":431},{"type":434,"tag":470,"props":1277,"children":1278},{"style":744},[1279],{"type":439,"value":747},{"type":434,"tag":470,"props":1281,"children":1282},{"style":750},[1283],{"type":439,"value":868},{"type":434,"tag":470,"props":1285,"children":1286},{"style":710},[1287],{"type":439,"value":713},{"type":434,"tag":470,"props":1289,"children":1290},{"style":750},[1291],{"type":439,"value":1047},{"type":434,"tag":470,"props":1293,"children":1294},{"style":755},[1295],{"type":439,"value":1238},{"type":434,"tag":470,"props":1297,"children":1298},{"style":750},[1299],{"type":439,"value":1138},{"type":434,"tag":470,"props":1301,"children":1302},{"style":744},[1303],{"type":439,"value":747},{"type":434,"tag":470,"props":1305,"children":1306},{"style":750},[1307],{"type":439,"value":707},{"type":434,"tag":470,"props":1309,"children":1310},{"style":698},[1311],{"type":439,"value":1312},")\n",{"type":434,"tag":470,"props":1314,"children":1316},{"class":472,"line":1315},21,[1317,1322],{"type":434,"tag":470,"props":1318,"children":1319},{"style":698},[1320],{"type":439,"value":1321},"  )",{"type":434,"tag":470,"props":1323,"children":1324},{"style":710},[1325],{"type":439,"value":798},{"type":434,"tag":470,"props":1327,"children":1329},{"class":472,"line":1328},22,[1330,1335],{"type":434,"tag":470,"props":1331,"children":1332},{"style":698},[1333],{"type":439,"value":1334},"}",{"type":434,"tag":470,"props":1336,"children":1337},{"style":710},[1338],{"type":439,"value":798},{"type":434,"tag":1340,"props":1341,"children":1342},"style",{},[1343],{"type":439,"value":1344},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":427,"searchDepth":553,"depth":553,"links":1346},[1347,1348],{"id":632,"depth":482,"text":632},{"id":637,"depth":482,"text":637,"children":1349},[1350],{"id":643,"depth":491,"text":646},"markdown","content:1.algorithm:3.leetcode:112.path-sum.md","content","1.algorithm/3.leetcode/112.path-sum.md","md",[1357,1359],{"_path":128,"title":127,"description":1358},"给定一个二叉树，找出其最小深度。",{"_path":134,"title":133,"description":1360},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",1713339872434]