[{"data":1,"prerenderedAt":1364},["Reactive",2],{"navigation":3,"/algorithm/leetcode/path-sum":427,"/algorithm/leetcode/path-sum-surround":1359},[4,237,265,406,413],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,399],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":382,"_path":383},"随机数","/frontend-code-assessment/scene/random-number",{"title":385,"_path":386},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":388,"_path":389},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":391,"_path":392},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":394,"_path":395},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":397,"_path":398},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":400,"_path":401,"children":402},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[403],{"title":404,"_path":405},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":407,"_path":408,"children":409},"项目","/pro",[410],{"title":411,"_path":412},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":414,"_path":415,"children":416},"后端语言","/backend-languages",[417],{"title":418,"_path":419,"children":420},"Python","/backend-languages/python",[421,424],{"title":422,"_path":423},"基础","/backend-languages/python/base",{"title":425,"_path":426},"函数","/backend-languages/python/function",{"_path":131,"_dir":428,"_draft":429,"_partial":429,"_locale":430,"title":130,"description":431,"url":432,"body":433,"_type":1354,"_id":1355,"_source":1356,"_file":1357,"_extension":1358},"leetcode",false,"","给你二叉树的根节点 root 和一个表示目标和的整数 targetSum 。判断该树中是否存在 根节点到叶子节点 的路径，这条路径上所有节点值相加等于目标和 targetSum 。如果存在，返回 true ；否则，返回 false 。","https://leetcode.cn/problems/path-sum",{"type":434,"children":435,"toc":1348},"root",[436,443,448,453,462,501,506,514,572,577,607,612,632,638,643,650,1342],{"type":437,"tag":438,"props":439,"children":440},"element","p",{},[441],{"type":442,"value":431},"text",{"type":437,"tag":438,"props":444,"children":445},{},[446],{"type":442,"value":447},"叶子节点 是指没有子节点的节点。",{"type":437,"tag":438,"props":449,"children":450},{},[451],{"type":442,"value":452},"示例 1：",{"type":437,"tag":438,"props":454,"children":455},{},[456],{"type":437,"tag":457,"props":458,"children":461},"img",{"alt":459,"src":460},"pathsum1","/img/code_leetcode_No.112_pathsum1.png",[],{"type":437,"tag":463,"props":464,"children":467},"pre",{"className":465,"code":466,"language":442,"meta":430,"style":430},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n输出：true\n解释：等于目标和的根节点到叶节点路径如上图所示。\n",[468],{"type":437,"tag":469,"props":470,"children":471},"code",{"__ignoreMap":430},[472,483,492],{"type":437,"tag":473,"props":474,"children":477},"span",{"class":475,"line":476},"line",1,[478],{"type":437,"tag":473,"props":479,"children":480},{},[481],{"type":442,"value":482},"输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n",{"type":437,"tag":473,"props":484,"children":486},{"class":475,"line":485},2,[487],{"type":437,"tag":473,"props":488,"children":489},{},[490],{"type":442,"value":491},"输出：true\n",{"type":437,"tag":473,"props":493,"children":495},{"class":475,"line":494},3,[496],{"type":437,"tag":473,"props":497,"children":498},{},[499],{"type":442,"value":500},"解释：等于目标和的根节点到叶节点路径如上图所示。\n",{"type":437,"tag":438,"props":502,"children":503},{},[504],{"type":442,"value":505},"示例 2：",{"type":437,"tag":438,"props":507,"children":508},{},[509],{"type":437,"tag":457,"props":510,"children":513},{"alt":511,"src":512},"pathsum2","/img/code_leetcode_No.112_pathsum2.png",[],{"type":437,"tag":463,"props":515,"children":517},{"className":465,"code":516,"language":442,"meta":430,"style":430},"输入：root = [1,2,3], targetSum = 5\n输出：false\n解释：树中存在两条根节点到叶子节点的路径：\n(1 --> 2): 和为 3\n(1 --> 3): 和为 4\n不存在 sum = 5 的根节点到叶子节点的路径。\n",[518],{"type":437,"tag":469,"props":519,"children":520},{"__ignoreMap":430},[521,529,537,545,554,563],{"type":437,"tag":473,"props":522,"children":523},{"class":475,"line":476},[524],{"type":437,"tag":473,"props":525,"children":526},{},[527],{"type":442,"value":528},"输入：root = [1,2,3], targetSum = 5\n",{"type":437,"tag":473,"props":530,"children":531},{"class":475,"line":485},[532],{"type":437,"tag":473,"props":533,"children":534},{},[535],{"type":442,"value":536},"输出：false\n",{"type":437,"tag":473,"props":538,"children":539},{"class":475,"line":494},[540],{"type":437,"tag":473,"props":541,"children":542},{},[543],{"type":442,"value":544},"解释：树中存在两条根节点到叶子节点的路径：\n",{"type":437,"tag":473,"props":546,"children":548},{"class":475,"line":547},4,[549],{"type":437,"tag":473,"props":550,"children":551},{},[552],{"type":442,"value":553},"(1 --> 2): 和为 3\n",{"type":437,"tag":473,"props":555,"children":557},{"class":475,"line":556},5,[558],{"type":437,"tag":473,"props":559,"children":560},{},[561],{"type":442,"value":562},"(1 --> 3): 和为 4\n",{"type":437,"tag":473,"props":564,"children":566},{"class":475,"line":565},6,[567],{"type":437,"tag":473,"props":568,"children":569},{},[570],{"type":442,"value":571},"不存在 sum = 5 的根节点到叶子节点的路径。\n",{"type":437,"tag":438,"props":573,"children":574},{},[575],{"type":442,"value":576},"示例 3：",{"type":437,"tag":463,"props":578,"children":580},{"className":465,"code":579,"language":442,"meta":430,"style":430},"输入：root = [], targetSum = 0\n输出：false\n解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",[581],{"type":437,"tag":469,"props":582,"children":583},{"__ignoreMap":430},[584,592,599],{"type":437,"tag":473,"props":585,"children":586},{"class":475,"line":476},[587],{"type":437,"tag":473,"props":588,"children":589},{},[590],{"type":442,"value":591},"输入：root = [], targetSum = 0\n",{"type":437,"tag":473,"props":593,"children":594},{"class":475,"line":485},[595],{"type":437,"tag":473,"props":596,"children":597},{},[598],{"type":442,"value":536},{"type":437,"tag":473,"props":600,"children":601},{"class":475,"line":494},[602],{"type":437,"tag":473,"props":603,"children":604},{},[605],{"type":442,"value":606},"解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",{"type":437,"tag":438,"props":608,"children":609},{},[610],{"type":442,"value":611},"提示：",{"type":437,"tag":613,"props":614,"children":615},"ul",{},[616,622,627],{"type":437,"tag":617,"props":618,"children":619},"li",{},[620],{"type":442,"value":621},"树中节点的数目在范围 [0, 5000] 内",{"type":437,"tag":617,"props":623,"children":624},{},[625],{"type":442,"value":626},"-1000 \u003C= Node.val \u003C= 1000",{"type":437,"tag":617,"props":628,"children":629},{},[630],{"type":442,"value":631},"-1000 \u003C= targetSum \u003C= 1000",{"type":437,"tag":633,"props":634,"children":636},"h2",{"id":635},"解题思路",[637],{"type":442,"value":635},{"type":437,"tag":633,"props":639,"children":641},{"id":640},"实现",[642],{"type":442,"value":640},{"type":437,"tag":644,"props":645,"children":647},"h3",{"id":646},"深度优先搜索-dfs",[648],{"type":442,"value":649},"深度优先搜索 - dfs",{"type":437,"tag":463,"props":651,"children":655},{"className":652,"code":653,"language":654,"meta":430,"style":430},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {boolean}\n */\nvar hasPathSum = function (root, targetSum) {\n  if (root === null) return false;\n  if (root.left === null && root.right === null) return root.val === targetSum;\n  return (\n    hasPathSum(root.left, targetSum - root.val) ||\n    hasPathSum(root.right, targetSum - root.val)\n  );\n};\n","js",[656],{"type":437,"tag":469,"props":657,"children":658},{"__ignoreMap":430},[659,668,676,684,736,802,855,908,917,927,935,962,984,1002,1010,1055,1100,1190,1204,1263,1316,1329],{"type":437,"tag":473,"props":660,"children":661},{"class":475,"line":476},[662],{"type":437,"tag":473,"props":663,"children":665},{"style":664},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[666],{"type":442,"value":667},"/**\n",{"type":437,"tag":473,"props":669,"children":670},{"class":475,"line":485},[671],{"type":437,"tag":473,"props":672,"children":673},{"style":664},[674],{"type":442,"value":675}," * Definition for a binary tree node.\n",{"type":437,"tag":473,"props":677,"children":678},{"class":475,"line":494},[679],{"type":437,"tag":473,"props":680,"children":681},{"style":664},[682],{"type":442,"value":683}," */\n",{"type":437,"tag":473,"props":685,"children":686},{"class":475,"line":547},[687,693,699,705,711,717,722,726,731],{"type":437,"tag":473,"props":688,"children":690},{"style":689},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[691],{"type":442,"value":692},"function",{"type":437,"tag":473,"props":694,"children":696},{"style":695},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[697],{"type":442,"value":698}," TreeNode",{"type":437,"tag":473,"props":700,"children":702},{"style":701},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[703],{"type":442,"value":704},"(",{"type":437,"tag":473,"props":706,"children":708},{"style":707},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[709],{"type":442,"value":710},"val",{"type":437,"tag":473,"props":712,"children":714},{"style":713},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[715],{"type":442,"value":716},",",{"type":437,"tag":473,"props":718,"children":719},{"style":707},[720],{"type":442,"value":721}," left",{"type":437,"tag":473,"props":723,"children":724},{"style":713},[725],{"type":442,"value":716},{"type":437,"tag":473,"props":727,"children":728},{"style":707},[729],{"type":442,"value":730}," right",{"type":437,"tag":473,"props":732,"children":733},{"style":701},[734],{"type":442,"value":735},") {\n",{"type":437,"tag":473,"props":737,"children":738},{"class":475,"line":556},[739,745,751,756,762,767,772,778,783,788,793,797],{"type":437,"tag":473,"props":740,"children":742},{"style":741},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[743],{"type":442,"value":744},"  this",{"type":437,"tag":473,"props":746,"children":748},{"style":747},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[749],{"type":442,"value":750},".",{"type":437,"tag":473,"props":752,"children":754},{"style":753},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[755],{"type":442,"value":710},{"type":437,"tag":473,"props":757,"children":759},{"style":758},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[760],{"type":442,"value":761}," =",{"type":437,"tag":473,"props":763,"children":764},{"style":753},[765],{"type":442,"value":766}," val",{"type":437,"tag":473,"props":768,"children":769},{"style":758},[770],{"type":442,"value":771}," ===",{"type":437,"tag":473,"props":773,"children":775},{"style":774},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[776],{"type":442,"value":777}," undefined",{"type":437,"tag":473,"props":779,"children":780},{"style":758},[781],{"type":442,"value":782}," ?",{"type":437,"tag":473,"props":784,"children":785},{"style":774},[786],{"type":442,"value":787}," 0",{"type":437,"tag":473,"props":789,"children":790},{"style":758},[791],{"type":442,"value":792}," :",{"type":437,"tag":473,"props":794,"children":795},{"style":753},[796],{"type":442,"value":766},{"type":437,"tag":473,"props":798,"children":799},{"style":713},[800],{"type":442,"value":801},";\n",{"type":437,"tag":473,"props":803,"children":804},{"class":475,"line":565},[805,809,813,818,822,826,830,834,838,843,847,851],{"type":437,"tag":473,"props":806,"children":807},{"style":741},[808],{"type":442,"value":744},{"type":437,"tag":473,"props":810,"children":811},{"style":747},[812],{"type":442,"value":750},{"type":437,"tag":473,"props":814,"children":815},{"style":753},[816],{"type":442,"value":817},"left",{"type":437,"tag":473,"props":819,"children":820},{"style":758},[821],{"type":442,"value":761},{"type":437,"tag":473,"props":823,"children":824},{"style":753},[825],{"type":442,"value":721},{"type":437,"tag":473,"props":827,"children":828},{"style":758},[829],{"type":442,"value":771},{"type":437,"tag":473,"props":831,"children":832},{"style":774},[833],{"type":442,"value":777},{"type":437,"tag":473,"props":835,"children":836},{"style":758},[837],{"type":442,"value":782},{"type":437,"tag":473,"props":839,"children":840},{"style":774},[841],{"type":442,"value":842}," null",{"type":437,"tag":473,"props":844,"children":845},{"style":758},[846],{"type":442,"value":792},{"type":437,"tag":473,"props":848,"children":849},{"style":753},[850],{"type":442,"value":721},{"type":437,"tag":473,"props":852,"children":853},{"style":713},[854],{"type":442,"value":801},{"type":437,"tag":473,"props":856,"children":858},{"class":475,"line":857},7,[859,863,867,872,876,880,884,888,892,896,900,904],{"type":437,"tag":473,"props":860,"children":861},{"style":741},[862],{"type":442,"value":744},{"type":437,"tag":473,"props":864,"children":865},{"style":747},[866],{"type":442,"value":750},{"type":437,"tag":473,"props":868,"children":869},{"style":753},[870],{"type":442,"value":871},"right",{"type":437,"tag":473,"props":873,"children":874},{"style":758},[875],{"type":442,"value":761},{"type":437,"tag":473,"props":877,"children":878},{"style":753},[879],{"type":442,"value":730},{"type":437,"tag":473,"props":881,"children":882},{"style":758},[883],{"type":442,"value":771},{"type":437,"tag":473,"props":885,"children":886},{"style":774},[887],{"type":442,"value":777},{"type":437,"tag":473,"props":889,"children":890},{"style":758},[891],{"type":442,"value":782},{"type":437,"tag":473,"props":893,"children":894},{"style":774},[895],{"type":442,"value":842},{"type":437,"tag":473,"props":897,"children":898},{"style":758},[899],{"type":442,"value":792},{"type":437,"tag":473,"props":901,"children":902},{"style":753},[903],{"type":442,"value":730},{"type":437,"tag":473,"props":905,"children":906},{"style":713},[907],{"type":442,"value":801},{"type":437,"tag":473,"props":909,"children":911},{"class":475,"line":910},8,[912],{"type":437,"tag":473,"props":913,"children":914},{"style":701},[915],{"type":442,"value":916},"}\n",{"type":437,"tag":473,"props":918,"children":920},{"class":475,"line":919},9,[921],{"type":437,"tag":473,"props":922,"children":924},{"emptyLinePlaceholder":923},true,[925],{"type":442,"value":926},"\n",{"type":437,"tag":473,"props":928,"children":930},{"class":475,"line":929},10,[931],{"type":437,"tag":473,"props":932,"children":933},{"style":664},[934],{"type":442,"value":667},{"type":437,"tag":473,"props":936,"children":938},{"class":475,"line":937},11,[939,944,950,956],{"type":437,"tag":473,"props":940,"children":941},{"style":664},[942],{"type":442,"value":943}," * ",{"type":437,"tag":473,"props":945,"children":947},{"style":946},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[948],{"type":442,"value":949},"@param",{"type":437,"tag":473,"props":951,"children":953},{"style":952},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[954],{"type":442,"value":955}," {TreeNode}",{"type":437,"tag":473,"props":957,"children":959},{"style":958},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[960],{"type":442,"value":961}," root\n",{"type":437,"tag":473,"props":963,"children":965},{"class":475,"line":964},12,[966,970,974,979],{"type":437,"tag":473,"props":967,"children":968},{"style":664},[969],{"type":442,"value":943},{"type":437,"tag":473,"props":971,"children":972},{"style":946},[973],{"type":442,"value":949},{"type":437,"tag":473,"props":975,"children":976},{"style":952},[977],{"type":442,"value":978}," {number}",{"type":437,"tag":473,"props":980,"children":981},{"style":958},[982],{"type":442,"value":983}," targetSum\n",{"type":437,"tag":473,"props":985,"children":987},{"class":475,"line":986},13,[988,992,997],{"type":437,"tag":473,"props":989,"children":990},{"style":664},[991],{"type":442,"value":943},{"type":437,"tag":473,"props":993,"children":994},{"style":946},[995],{"type":442,"value":996},"@return",{"type":437,"tag":473,"props":998,"children":999},{"style":952},[1000],{"type":442,"value":1001}," {boolean}\n",{"type":437,"tag":473,"props":1003,"children":1005},{"class":475,"line":1004},14,[1006],{"type":437,"tag":473,"props":1007,"children":1008},{"style":664},[1009],{"type":442,"value":683},{"type":437,"tag":473,"props":1011,"children":1013},{"class":475,"line":1012},15,[1014,1019,1024,1028,1033,1038,1042,1046,1051],{"type":437,"tag":473,"props":1015,"children":1016},{"style":689},[1017],{"type":442,"value":1018},"var",{"type":437,"tag":473,"props":1020,"children":1021},{"style":695},[1022],{"type":442,"value":1023}," hasPathSum",{"type":437,"tag":473,"props":1025,"children":1026},{"style":758},[1027],{"type":442,"value":761},{"type":437,"tag":473,"props":1029,"children":1030},{"style":689},[1031],{"type":442,"value":1032}," function",{"type":437,"tag":473,"props":1034,"children":1035},{"style":701},[1036],{"type":442,"value":1037}," (",{"type":437,"tag":473,"props":1039,"children":1040},{"style":707},[1041],{"type":442,"value":434},{"type":437,"tag":473,"props":1043,"children":1044},{"style":713},[1045],{"type":442,"value":716},{"type":437,"tag":473,"props":1047,"children":1048},{"style":707},[1049],{"type":442,"value":1050}," targetSum",{"type":437,"tag":473,"props":1052,"children":1053},{"style":701},[1054],{"type":442,"value":735},{"type":437,"tag":473,"props":1056,"children":1058},{"class":475,"line":1057},16,[1059,1065,1069,1073,1077,1081,1086,1091,1096],{"type":437,"tag":473,"props":1060,"children":1062},{"style":1061},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[1063],{"type":442,"value":1064},"  if",{"type":437,"tag":473,"props":1066,"children":1067},{"style":701},[1068],{"type":442,"value":1037},{"type":437,"tag":473,"props":1070,"children":1071},{"style":753},[1072],{"type":442,"value":434},{"type":437,"tag":473,"props":1074,"children":1075},{"style":758},[1076],{"type":442,"value":771},{"type":437,"tag":473,"props":1078,"children":1079},{"style":774},[1080],{"type":442,"value":842},{"type":437,"tag":473,"props":1082,"children":1083},{"style":701},[1084],{"type":442,"value":1085},") ",{"type":437,"tag":473,"props":1087,"children":1088},{"style":1061},[1089],{"type":442,"value":1090},"return",{"type":437,"tag":473,"props":1092,"children":1093},{"style":774},[1094],{"type":442,"value":1095}," false",{"type":437,"tag":473,"props":1097,"children":1098},{"style":713},[1099],{"type":442,"value":801},{"type":437,"tag":473,"props":1101,"children":1103},{"class":475,"line":1102},17,[1104,1108,1112,1116,1120,1124,1128,1132,1137,1142,1146,1150,1154,1158,1162,1166,1170,1174,1178,1182,1186],{"type":437,"tag":473,"props":1105,"children":1106},{"style":1061},[1107],{"type":442,"value":1064},{"type":437,"tag":473,"props":1109,"children":1110},{"style":701},[1111],{"type":442,"value":1037},{"type":437,"tag":473,"props":1113,"children":1114},{"style":753},[1115],{"type":442,"value":434},{"type":437,"tag":473,"props":1117,"children":1118},{"style":747},[1119],{"type":442,"value":750},{"type":437,"tag":473,"props":1121,"children":1122},{"style":753},[1123],{"type":442,"value":817},{"type":437,"tag":473,"props":1125,"children":1126},{"style":758},[1127],{"type":442,"value":771},{"type":437,"tag":473,"props":1129,"children":1130},{"style":774},[1131],{"type":442,"value":842},{"type":437,"tag":473,"props":1133,"children":1134},{"style":758},[1135],{"type":442,"value":1136}," &&",{"type":437,"tag":473,"props":1138,"children":1139},{"style":753},[1140],{"type":442,"value":1141}," root",{"type":437,"tag":473,"props":1143,"children":1144},{"style":747},[1145],{"type":442,"value":750},{"type":437,"tag":473,"props":1147,"children":1148},{"style":753},[1149],{"type":442,"value":871},{"type":437,"tag":473,"props":1151,"children":1152},{"style":758},[1153],{"type":442,"value":771},{"type":437,"tag":473,"props":1155,"children":1156},{"style":774},[1157],{"type":442,"value":842},{"type":437,"tag":473,"props":1159,"children":1160},{"style":701},[1161],{"type":442,"value":1085},{"type":437,"tag":473,"props":1163,"children":1164},{"style":1061},[1165],{"type":442,"value":1090},{"type":437,"tag":473,"props":1167,"children":1168},{"style":753},[1169],{"type":442,"value":1141},{"type":437,"tag":473,"props":1171,"children":1172},{"style":747},[1173],{"type":442,"value":750},{"type":437,"tag":473,"props":1175,"children":1176},{"style":753},[1177],{"type":442,"value":710},{"type":437,"tag":473,"props":1179,"children":1180},{"style":758},[1181],{"type":442,"value":771},{"type":437,"tag":473,"props":1183,"children":1184},{"style":753},[1185],{"type":442,"value":1050},{"type":437,"tag":473,"props":1187,"children":1188},{"style":713},[1189],{"type":442,"value":801},{"type":437,"tag":473,"props":1191,"children":1193},{"class":475,"line":1192},18,[1194,1199],{"type":437,"tag":473,"props":1195,"children":1196},{"style":1061},[1197],{"type":442,"value":1198},"  return",{"type":437,"tag":473,"props":1200,"children":1201},{"style":701},[1202],{"type":442,"value":1203}," (\n",{"type":437,"tag":473,"props":1205,"children":1207},{"class":475,"line":1206},19,[1208,1213,1217,1221,1225,1229,1233,1237,1242,1246,1250,1254,1258],{"type":437,"tag":473,"props":1209,"children":1210},{"style":695},[1211],{"type":442,"value":1212},"    hasPathSum",{"type":437,"tag":473,"props":1214,"children":1215},{"style":701},[1216],{"type":442,"value":704},{"type":437,"tag":473,"props":1218,"children":1219},{"style":753},[1220],{"type":442,"value":434},{"type":437,"tag":473,"props":1222,"children":1223},{"style":747},[1224],{"type":442,"value":750},{"type":437,"tag":473,"props":1226,"children":1227},{"style":753},[1228],{"type":442,"value":817},{"type":437,"tag":473,"props":1230,"children":1231},{"style":713},[1232],{"type":442,"value":716},{"type":437,"tag":473,"props":1234,"children":1235},{"style":753},[1236],{"type":442,"value":1050},{"type":437,"tag":473,"props":1238,"children":1239},{"style":758},[1240],{"type":442,"value":1241}," -",{"type":437,"tag":473,"props":1243,"children":1244},{"style":753},[1245],{"type":442,"value":1141},{"type":437,"tag":473,"props":1247,"children":1248},{"style":747},[1249],{"type":442,"value":750},{"type":437,"tag":473,"props":1251,"children":1252},{"style":753},[1253],{"type":442,"value":710},{"type":437,"tag":473,"props":1255,"children":1256},{"style":701},[1257],{"type":442,"value":1085},{"type":437,"tag":473,"props":1259,"children":1260},{"style":758},[1261],{"type":442,"value":1262},"||\n",{"type":437,"tag":473,"props":1264,"children":1266},{"class":475,"line":1265},20,[1267,1271,1275,1279,1283,1287,1291,1295,1299,1303,1307,1311],{"type":437,"tag":473,"props":1268,"children":1269},{"style":695},[1270],{"type":442,"value":1212},{"type":437,"tag":473,"props":1272,"children":1273},{"style":701},[1274],{"type":442,"value":704},{"type":437,"tag":473,"props":1276,"children":1277},{"style":753},[1278],{"type":442,"value":434},{"type":437,"tag":473,"props":1280,"children":1281},{"style":747},[1282],{"type":442,"value":750},{"type":437,"tag":473,"props":1284,"children":1285},{"style":753},[1286],{"type":442,"value":871},{"type":437,"tag":473,"props":1288,"children":1289},{"style":713},[1290],{"type":442,"value":716},{"type":437,"tag":473,"props":1292,"children":1293},{"style":753},[1294],{"type":442,"value":1050},{"type":437,"tag":473,"props":1296,"children":1297},{"style":758},[1298],{"type":442,"value":1241},{"type":437,"tag":473,"props":1300,"children":1301},{"style":753},[1302],{"type":442,"value":1141},{"type":437,"tag":473,"props":1304,"children":1305},{"style":747},[1306],{"type":442,"value":750},{"type":437,"tag":473,"props":1308,"children":1309},{"style":753},[1310],{"type":442,"value":710},{"type":437,"tag":473,"props":1312,"children":1313},{"style":701},[1314],{"type":442,"value":1315},")\n",{"type":437,"tag":473,"props":1317,"children":1319},{"class":475,"line":1318},21,[1320,1325],{"type":437,"tag":473,"props":1321,"children":1322},{"style":701},[1323],{"type":442,"value":1324},"  )",{"type":437,"tag":473,"props":1326,"children":1327},{"style":713},[1328],{"type":442,"value":801},{"type":437,"tag":473,"props":1330,"children":1332},{"class":475,"line":1331},22,[1333,1338],{"type":437,"tag":473,"props":1334,"children":1335},{"style":701},[1336],{"type":442,"value":1337},"}",{"type":437,"tag":473,"props":1339,"children":1340},{"style":713},[1341],{"type":442,"value":801},{"type":437,"tag":1343,"props":1344,"children":1345},"style",{},[1346],{"type":442,"value":1347},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":430,"searchDepth":556,"depth":556,"links":1349},[1350,1351],{"id":635,"depth":485,"text":635},{"id":640,"depth":485,"text":640,"children":1352},[1353],{"id":646,"depth":494,"text":649},"markdown","content:1.algorithm:3.leetcode:112.path-sum.md","content","1.algorithm/3.leetcode/112.path-sum.md","md",[1360,1362],{"_path":128,"title":127,"description":1361},"给定一个二叉树，找出其最小深度。",{"_path":134,"title":133,"description":1363},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",1713426450528]