[{"data":1,"prerenderedAt":1069},["Reactive",2],{"navigation":3,"/algorithm/leetcode/sqrtx":430,"/algorithm/leetcode/sqrtx-surround":1064},[4,237,265,409,416],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,402],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396,399],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":379,"_path":380},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":382,"_path":383},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":385,"_path":386},"随机数","/frontend-code-assessment/scene/random-number",{"title":388,"_path":389},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":391,"_path":392},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":394,"_path":395},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":397,"_path":398},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":400,"_path":401},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":403,"_path":404,"children":405},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[406],{"title":407,"_path":408},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":410,"_path":411,"children":412},"项目","/pro",[413],{"title":414,"_path":415},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":417,"_path":418,"children":419},"后端语言","/backend-languages",[420],{"title":421,"_path":422,"children":423},"Python","/backend-languages/python",[424,427],{"title":425,"_path":426},"基础","/backend-languages/python/base",{"title":428,"_path":429},"函数","/backend-languages/python/function",{"_path":104,"_dir":431,"_draft":432,"_partial":432,"_locale":433,"title":103,"description":434,"url":435,"body":436,"_type":1059,"_id":1060,"_source":1061,"_file":1062,"_extension":1063},"leetcode",false,"","给你一个非负整数 x ，计算并返回 x 的 算术平方根 。","https://leetcode.cn/problems/sqrtx",{"type":437,"children":438,"toc":1053},"root",[439,446,451,456,461,491,496,527,532,542,548,553,559,1047],{"type":440,"tag":441,"props":442,"children":443},"element","p",{},[444],{"type":445,"value":434},"text",{"type":440,"tag":441,"props":447,"children":448},{},[449],{"type":445,"value":450},"由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。",{"type":440,"tag":441,"props":452,"children":453},{},[454],{"type":445,"value":455},"注意：不允许使用任何内置指数函数和算符，例如 pow(x, 0.5) 或者 x ** 0.5 。",{"type":440,"tag":441,"props":457,"children":458},{},[459],{"type":445,"value":460},"示例 1：",{"type":440,"tag":462,"props":463,"children":466},"pre",{"className":464,"code":465,"language":445,"meta":433,"style":433},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：x = 4\n输出：2\n",[467],{"type":440,"tag":468,"props":469,"children":470},"code",{"__ignoreMap":433},[471,482],{"type":440,"tag":472,"props":473,"children":476},"span",{"class":474,"line":475},"line",1,[477],{"type":440,"tag":472,"props":478,"children":479},{},[480],{"type":445,"value":481},"输入：x = 4\n",{"type":440,"tag":472,"props":483,"children":485},{"class":474,"line":484},2,[486],{"type":440,"tag":472,"props":487,"children":488},{},[489],{"type":445,"value":490},"输出：2\n",{"type":440,"tag":441,"props":492,"children":493},{},[494],{"type":445,"value":495},"示例 2：",{"type":440,"tag":462,"props":497,"children":499},{"className":464,"code":498,"language":445,"meta":433,"style":433},"输入：x = 8\n输出：2\n解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。\n",[500],{"type":440,"tag":468,"props":501,"children":502},{"__ignoreMap":433},[503,511,518],{"type":440,"tag":472,"props":504,"children":505},{"class":474,"line":475},[506],{"type":440,"tag":472,"props":507,"children":508},{},[509],{"type":445,"value":510},"输入：x = 8\n",{"type":440,"tag":472,"props":512,"children":513},{"class":474,"line":484},[514],{"type":440,"tag":472,"props":515,"children":516},{},[517],{"type":445,"value":490},{"type":440,"tag":472,"props":519,"children":521},{"class":474,"line":520},3,[522],{"type":440,"tag":472,"props":523,"children":524},{},[525],{"type":445,"value":526},"解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。\n",{"type":440,"tag":441,"props":528,"children":529},{},[530],{"type":445,"value":531},"提示：",{"type":440,"tag":533,"props":534,"children":535},"ul",{},[536],{"type":440,"tag":537,"props":538,"children":539},"li",{},[540],{"type":445,"value":541},"0 \u003C= x \u003C= 2^31 - 1",{"type":440,"tag":543,"props":544,"children":546},"h2",{"id":545},"解题思路",[547],{"type":445,"value":545},{"type":440,"tag":543,"props":549,"children":551},{"id":550},"实现",[552],{"type":445,"value":550},{"type":440,"tag":554,"props":555,"children":557},"h3",{"id":556},"二分查找",[558],{"type":445,"value":556},{"type":440,"tag":462,"props":560,"children":564},{"className":561,"code":562,"language":563,"meta":433,"style":433},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number} x\n * @return {number}\n */\nvar mySqrt = function (x) {\n  let left = 0;\n  let right = x;\n  let answer = -1;\n  while (left \u003C= right) {\n    let middle = left + ((right - left) >> 1);\n    if (middle * middle \u003C= x) {\n      answer = middle;\n      left = middle + 1;\n    } else {\n      right = middle - 1;\n    }\n  }\n  return answer;\n};\n","js",[565],{"type":440,"tag":468,"props":566,"children":567},{"__ignoreMap":433},[568,577,603,620,629,673,704,730,761,793,862,901,922,951,970,999,1008,1017,1034],{"type":440,"tag":472,"props":569,"children":570},{"class":474,"line":475},[571],{"type":440,"tag":472,"props":572,"children":574},{"style":573},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[575],{"type":445,"value":576},"/**\n",{"type":440,"tag":472,"props":578,"children":579},{"class":474,"line":484},[580,585,591,597],{"type":440,"tag":472,"props":581,"children":582},{"style":573},[583],{"type":445,"value":584}," * ",{"type":440,"tag":472,"props":586,"children":588},{"style":587},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[589],{"type":445,"value":590},"@param",{"type":440,"tag":472,"props":592,"children":594},{"style":593},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[595],{"type":445,"value":596}," {number}",{"type":440,"tag":472,"props":598,"children":600},{"style":599},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[601],{"type":445,"value":602}," x\n",{"type":440,"tag":472,"props":604,"children":605},{"class":474,"line":520},[606,610,615],{"type":440,"tag":472,"props":607,"children":608},{"style":573},[609],{"type":445,"value":584},{"type":440,"tag":472,"props":611,"children":612},{"style":587},[613],{"type":445,"value":614},"@return",{"type":440,"tag":472,"props":616,"children":617},{"style":593},[618],{"type":445,"value":619}," {number}\n",{"type":440,"tag":472,"props":621,"children":623},{"class":474,"line":622},4,[624],{"type":440,"tag":472,"props":625,"children":626},{"style":573},[627],{"type":445,"value":628}," */\n",{"type":440,"tag":472,"props":630,"children":632},{"class":474,"line":631},5,[633,639,645,651,656,662,668],{"type":440,"tag":472,"props":634,"children":636},{"style":635},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[637],{"type":445,"value":638},"var",{"type":440,"tag":472,"props":640,"children":642},{"style":641},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[643],{"type":445,"value":644}," mySqrt",{"type":440,"tag":472,"props":646,"children":648},{"style":647},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[649],{"type":445,"value":650}," =",{"type":440,"tag":472,"props":652,"children":653},{"style":635},[654],{"type":445,"value":655}," function",{"type":440,"tag":472,"props":657,"children":659},{"style":658},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[660],{"type":445,"value":661}," (",{"type":440,"tag":472,"props":663,"children":665},{"style":664},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[666],{"type":445,"value":667},"x",{"type":440,"tag":472,"props":669,"children":670},{"style":658},[671],{"type":445,"value":672},") {\n",{"type":440,"tag":472,"props":674,"children":676},{"class":474,"line":675},6,[677,682,688,692,698],{"type":440,"tag":472,"props":678,"children":679},{"style":635},[680],{"type":445,"value":681},"  let",{"type":440,"tag":472,"props":683,"children":685},{"style":684},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[686],{"type":445,"value":687}," left",{"type":440,"tag":472,"props":689,"children":690},{"style":647},[691],{"type":445,"value":650},{"type":440,"tag":472,"props":693,"children":695},{"style":694},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[696],{"type":445,"value":697}," 0",{"type":440,"tag":472,"props":699,"children":701},{"style":700},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[702],{"type":445,"value":703},";\n",{"type":440,"tag":472,"props":705,"children":707},{"class":474,"line":706},7,[708,712,717,721,726],{"type":440,"tag":472,"props":709,"children":710},{"style":635},[711],{"type":445,"value":681},{"type":440,"tag":472,"props":713,"children":714},{"style":684},[715],{"type":445,"value":716}," right",{"type":440,"tag":472,"props":718,"children":719},{"style":647},[720],{"type":445,"value":650},{"type":440,"tag":472,"props":722,"children":723},{"style":684},[724],{"type":445,"value":725}," x",{"type":440,"tag":472,"props":727,"children":728},{"style":700},[729],{"type":445,"value":703},{"type":440,"tag":472,"props":731,"children":733},{"class":474,"line":732},8,[734,738,743,747,752,757],{"type":440,"tag":472,"props":735,"children":736},{"style":635},[737],{"type":445,"value":681},{"type":440,"tag":472,"props":739,"children":740},{"style":684},[741],{"type":445,"value":742}," answer",{"type":440,"tag":472,"props":744,"children":745},{"style":647},[746],{"type":445,"value":650},{"type":440,"tag":472,"props":748,"children":749},{"style":647},[750],{"type":445,"value":751}," -",{"type":440,"tag":472,"props":753,"children":754},{"style":694},[755],{"type":445,"value":756},"1",{"type":440,"tag":472,"props":758,"children":759},{"style":700},[760],{"type":445,"value":703},{"type":440,"tag":472,"props":762,"children":764},{"class":474,"line":763},9,[765,771,775,780,785,789],{"type":440,"tag":472,"props":766,"children":768},{"style":767},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[769],{"type":445,"value":770},"  while",{"type":440,"tag":472,"props":772,"children":773},{"style":658},[774],{"type":445,"value":661},{"type":440,"tag":472,"props":776,"children":777},{"style":684},[778],{"type":445,"value":779},"left",{"type":440,"tag":472,"props":781,"children":782},{"style":647},[783],{"type":445,"value":784}," \u003C=",{"type":440,"tag":472,"props":786,"children":787},{"style":684},[788],{"type":445,"value":716},{"type":440,"tag":472,"props":790,"children":791},{"style":658},[792],{"type":445,"value":672},{"type":440,"tag":472,"props":794,"children":796},{"class":474,"line":795},10,[797,802,807,811,815,820,825,830,834,838,843,848,853,858],{"type":440,"tag":472,"props":798,"children":799},{"style":635},[800],{"type":445,"value":801},"    let",{"type":440,"tag":472,"props":803,"children":804},{"style":684},[805],{"type":445,"value":806}," middle",{"type":440,"tag":472,"props":808,"children":809},{"style":647},[810],{"type":445,"value":650},{"type":440,"tag":472,"props":812,"children":813},{"style":684},[814],{"type":445,"value":687},{"type":440,"tag":472,"props":816,"children":817},{"style":647},[818],{"type":445,"value":819}," +",{"type":440,"tag":472,"props":821,"children":822},{"style":658},[823],{"type":445,"value":824}," ((",{"type":440,"tag":472,"props":826,"children":827},{"style":684},[828],{"type":445,"value":829},"right",{"type":440,"tag":472,"props":831,"children":832},{"style":647},[833],{"type":445,"value":751},{"type":440,"tag":472,"props":835,"children":836},{"style":684},[837],{"type":445,"value":687},{"type":440,"tag":472,"props":839,"children":840},{"style":658},[841],{"type":445,"value":842},") ",{"type":440,"tag":472,"props":844,"children":845},{"style":647},[846],{"type":445,"value":847},">>",{"type":440,"tag":472,"props":849,"children":850},{"style":694},[851],{"type":445,"value":852}," 1",{"type":440,"tag":472,"props":854,"children":855},{"style":658},[856],{"type":445,"value":857},")",{"type":440,"tag":472,"props":859,"children":860},{"style":700},[861],{"type":445,"value":703},{"type":440,"tag":472,"props":863,"children":865},{"class":474,"line":864},11,[866,871,875,880,885,889,893,897],{"type":440,"tag":472,"props":867,"children":868},{"style":767},[869],{"type":445,"value":870},"    if",{"type":440,"tag":472,"props":872,"children":873},{"style":658},[874],{"type":445,"value":661},{"type":440,"tag":472,"props":876,"children":877},{"style":684},[878],{"type":445,"value":879},"middle",{"type":440,"tag":472,"props":881,"children":882},{"style":647},[883],{"type":445,"value":884}," *",{"type":440,"tag":472,"props":886,"children":887},{"style":684},[888],{"type":445,"value":806},{"type":440,"tag":472,"props":890,"children":891},{"style":647},[892],{"type":445,"value":784},{"type":440,"tag":472,"props":894,"children":895},{"style":684},[896],{"type":445,"value":725},{"type":440,"tag":472,"props":898,"children":899},{"style":658},[900],{"type":445,"value":672},{"type":440,"tag":472,"props":902,"children":904},{"class":474,"line":903},12,[905,910,914,918],{"type":440,"tag":472,"props":906,"children":907},{"style":684},[908],{"type":445,"value":909},"      answer",{"type":440,"tag":472,"props":911,"children":912},{"style":647},[913],{"type":445,"value":650},{"type":440,"tag":472,"props":915,"children":916},{"style":684},[917],{"type":445,"value":806},{"type":440,"tag":472,"props":919,"children":920},{"style":700},[921],{"type":445,"value":703},{"type":440,"tag":472,"props":923,"children":925},{"class":474,"line":924},13,[926,931,935,939,943,947],{"type":440,"tag":472,"props":927,"children":928},{"style":684},[929],{"type":445,"value":930},"      left",{"type":440,"tag":472,"props":932,"children":933},{"style":647},[934],{"type":445,"value":650},{"type":440,"tag":472,"props":936,"children":937},{"style":684},[938],{"type":445,"value":806},{"type":440,"tag":472,"props":940,"children":941},{"style":647},[942],{"type":445,"value":819},{"type":440,"tag":472,"props":944,"children":945},{"style":694},[946],{"type":445,"value":852},{"type":440,"tag":472,"props":948,"children":949},{"style":700},[950],{"type":445,"value":703},{"type":440,"tag":472,"props":952,"children":954},{"class":474,"line":953},14,[955,960,965],{"type":440,"tag":472,"props":956,"children":957},{"style":658},[958],{"type":445,"value":959},"    } ",{"type":440,"tag":472,"props":961,"children":962},{"style":767},[963],{"type":445,"value":964},"else",{"type":440,"tag":472,"props":966,"children":967},{"style":658},[968],{"type":445,"value":969}," {\n",{"type":440,"tag":472,"props":971,"children":973},{"class":474,"line":972},15,[974,979,983,987,991,995],{"type":440,"tag":472,"props":975,"children":976},{"style":684},[977],{"type":445,"value":978},"      right",{"type":440,"tag":472,"props":980,"children":981},{"style":647},[982],{"type":445,"value":650},{"type":440,"tag":472,"props":984,"children":985},{"style":684},[986],{"type":445,"value":806},{"type":440,"tag":472,"props":988,"children":989},{"style":647},[990],{"type":445,"value":751},{"type":440,"tag":472,"props":992,"children":993},{"style":694},[994],{"type":445,"value":852},{"type":440,"tag":472,"props":996,"children":997},{"style":700},[998],{"type":445,"value":703},{"type":440,"tag":472,"props":1000,"children":1002},{"class":474,"line":1001},16,[1003],{"type":440,"tag":472,"props":1004,"children":1005},{"style":658},[1006],{"type":445,"value":1007},"    }\n",{"type":440,"tag":472,"props":1009,"children":1011},{"class":474,"line":1010},17,[1012],{"type":440,"tag":472,"props":1013,"children":1014},{"style":658},[1015],{"type":445,"value":1016},"  }\n",{"type":440,"tag":472,"props":1018,"children":1020},{"class":474,"line":1019},18,[1021,1026,1030],{"type":440,"tag":472,"props":1022,"children":1023},{"style":767},[1024],{"type":445,"value":1025},"  return",{"type":440,"tag":472,"props":1027,"children":1028},{"style":684},[1029],{"type":445,"value":742},{"type":440,"tag":472,"props":1031,"children":1032},{"style":700},[1033],{"type":445,"value":703},{"type":440,"tag":472,"props":1035,"children":1037},{"class":474,"line":1036},19,[1038,1043],{"type":440,"tag":472,"props":1039,"children":1040},{"style":658},[1041],{"type":445,"value":1042},"}",{"type":440,"tag":472,"props":1044,"children":1045},{"style":700},[1046],{"type":445,"value":703},{"type":440,"tag":1048,"props":1049,"children":1050},"style",{},[1051],{"type":445,"value":1052},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":433,"searchDepth":631,"depth":631,"links":1054},[1055,1056],{"id":545,"depth":484,"text":545},{"id":550,"depth":484,"text":550,"children":1057},[1058],{"id":556,"depth":520,"text":556},"markdown","content:1.algorithm:3.leetcode:69.sqrtx.md","content","1.algorithm/3.leetcode/69.sqrtx.md","md",[1065,1067],{"_path":101,"title":100,"description":1066},"给你两个二进制字符串 a 和 b ，以二进制字符串的形式返回它们的和。",{"_path":107,"title":106,"description":1068},"假设你正在爬楼梯。需要 n 阶你才能到达楼顶。",1713426810467]