[{"data":1,"prerenderedAt":1703},["Reactive",2],{"navigation":3,"/algorithm/leetcode/linked-list-cycle":424,"/algorithm/leetcode/linked-list-cycle-surround":1698},[4,237,265,403,410],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,10,23],{"title":9,"_path":6},"刷题索引",{"title":11,"_path":12,"children":13},"剑指 offer","/algorithm/sword-ofter",[14,17,20],{"title":15,"_path":16},"LCR.140 训练计划 II","/algorithm/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":18,"_path":19},"LCR.169 招式拆解 II","/algorithm/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":21,"_path":22},"LCR.187 破冰游戏","/algorithm/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":24,"_path":25,"children":26},"力扣 leetCode","/algorithm/leetcode",[27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234],{"title":28,"_path":29},"No.1 两数之和","/algorithm/leetcode/two-sum",{"title":31,"_path":32},"No.2 两数相加","/algorithm/leetcode/add-two-numbers",{"title":34,"_path":35},"No.3 无重复字符的最长子串","/algorithm/leetcode/longest-substring-without-repeating-characters",{"title":37,"_path":38},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/median-of-two-sorted-arrays",{"title":40,"_path":41},"No.5 最长回文子串","/algorithm/leetcode/longest-palindromic-substring",{"title":43,"_path":44},"No.7 整数反转","/algorithm/leetcode/reverse-integer",{"title":46,"_path":47},"No.9 回文数","/algorithm/leetcode/palindrome-number",{"title":49,"_path":50},"No.14 最长公共前缀","/algorithm/leetcode/longest-common-prefix",{"title":52,"_path":53},"No.15 三数之和","/algorithm/leetcode/3sum",{"title":55,"_path":56},"No.20 有效的括号","/algorithm/leetcode/valid-parentheses",{"title":58,"_path":59},"No.21 合并两个有序链表","/algorithm/leetcode/merge-two-sorted-lists",{"title":61,"_path":62},"No.22 括号生成","/algorithm/leetcode/generate-parentheses",{"title":64,"_path":65},"No.23 合并 K 个升序链表","/algorithm/leetcode/merge-k-sorted-lists",{"title":67,"_path":68},"No.24 两两交换链表中的节点","/algorithm/leetcode/swap-nodes-in-pairs",{"title":70,"_path":71},"No.25 K 个一组翻转链表","/algorithm/leetcode/reverse-nodes-in-k-group",{"title":73,"_path":74},"No.31 下一个排列","/algorithm/leetcode/next-permutation",{"title":76,"_path":77},"No.32 最长有效括号","/algorithm/leetcode/longest-valid-parentheses",{"title":79,"_path":80},"No.33 搜索旋转排序数组","/algorithm/leetcode/search-in-rotated-sorted-array",{"title":82,"_path":83},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/find-first-and-last-position-of-element-in-sorted-array",{"title":85,"_path":86},"No.39 组合求和","/algorithm/leetcode/combination-sum",{"title":88,"_path":89},"No.42 接雨水","/algorithm/leetcode/trapping-rain-water",{"title":91,"_path":92},"No.46 全排列","/algorithm/leetcode/permutations",{"title":94,"_path":95},"No.53 最大子序和","/algorithm/leetcode/maximum-subarray",{"title":97,"_path":98},"No.56 合并区间","/algorithm/leetcode/merge-intervals",{"title":100,"_path":101},"No.67 二进制求和","/algorithm/leetcode/add-binary",{"title":103,"_path":104},"No.69 x 的平方根","/algorithm/leetcode/sqrtx",{"title":106,"_path":107},"No.70 爬楼梯","/algorithm/leetcode/climbing-stairs",{"title":109,"_path":110},"No.88 合并两个有序数组","/algorithm/leetcode/merge-sorted-array",{"title":112,"_path":113},"No.92 反转链表 II","/algorithm/leetcode/reverse-linked-list-ii",{"title":115,"_path":116},"No.94 二叉树的中序遍历","/algorithm/leetcode/binary-tree-inorder-traversal",{"title":118,"_path":119},"No.101 对称二叉树","/algorithm/leetcode/symmetric-tree",{"title":121,"_path":122},"No.102 二叉树的层序遍历","/algorithm/leetcode/binary-tree-level-order-traversal",{"title":124,"_path":125},"No.104 二叉树的最大深度","/algorithm/leetcode/maximum-depth-of-binary-tree",{"title":127,"_path":128},"No.111 二叉树的最小深度","/algorithm/leetcode/minimum-depth-of-binary-tree",{"title":130,"_path":131},"No.112 路径总和","/algorithm/leetcode/path-sum",{"title":133,"_path":134},"No.121 买股票的最佳时机","/algorithm/leetcode/best-time-to-buy-and-sell-stock",{"title":136,"_path":137},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/sum-root-to-leaf-numbers",{"title":139,"_path":140},"No.136 只出现一次的数字","/algorithm/leetcode/single-number",{"title":142,"_path":143},"No.141 环型链表","/algorithm/leetcode/linked-list-cycle",{"title":145,"_path":146},"No.146 LRU 缓存","/algorithm/leetcode/lru-cache",{"title":148,"_path":149},"No.151 反转字符串中的单词","/algorithm/leetcode/reverse-words-in-a-string",{"title":151,"_path":152},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/find-minimum-in-rotated-sorted-array",{"title":154,"_path":155},"No.155 最小栈","/algorithm/leetcode/min-stack",{"title":157,"_path":158},"No.160 相交链表","/algorithm/leetcode/intersection-of-two-linked-lists",{"title":160,"_path":161},"No.162 寻找峰值","/algorithm/leetcode/find-peak-element",{"title":163,"_path":164},"No.165 比较版本号","/algorithm/leetcode/compare-version-numbers",{"title":166,"_path":167},"No.169 多数元素","/algorithm/leetcode/majority-element",{"title":169,"_path":170},"No.200 岛屿数量","/algorithm/leetcode/number-of-islands",{"title":172,"_path":173},"No.206 反转链表","/algorithm/leetcode/reverse-linked-list",{"title":175,"_path":176},"No.209 长度最小的子数组","/algorithm/leetcode/minimum-size-subarray-sum",{"title":178,"_path":179},"No.215 数组中的第K个最大元素","/algorithm/leetcode/kth-largest-element-in-an-array",{"title":181,"_path":182},"No.226 翻转二叉树","/algorithm/leetcode/invert-binary-tree",{"title":184,"_path":185},"No.238 除自身以外数组的乘积","/algorithm/leetcode/product-of-array-except-self",{"title":187,"_path":188},"No.322 零钱兑换","/algorithm/leetcode/coin-change",{"title":190,"_path":191},"No.334 递增的三元子序列","/algorithm/leetcode/increasing-triplet-subsequence",{"title":193,"_path":194},"No.344 反转字符串","/algorithm/leetcode/reverse-string",{"title":196,"_path":197},"No.345 反转字符串中的元音字母","/algorithm/leetcode/reverse-vowels-of-a-string",{"title":199,"_path":200},"No.384 打乱数组","/algorithm/leetcode/shuffle-an-array",{"title":202,"_path":203},"No.415 字符串相加","/algorithm/leetcode/add-strings",{"title":205,"_path":206},"No.443 压缩字符串","/algorithm/leetcode/string-compression",{"title":208,"_path":209},"No.509 斐波那契数","/algorithm/leetcode/fibonacci-number",{"title":211,"_path":212},"No.605 种花问题","/algorithm/leetcode/can-place-flowers",{"title":214,"_path":215},"No.617 合并二叉树","/algorithm/leetcode/merge-two-binary-trees",{"title":217,"_path":218},"No.678 有效的括号字符串","/algorithm/leetcode/valid-parenthesis-string",{"title":220,"_path":221},"No.704 二分查找","/algorithm/leetcode/binary-search",{"title":223,"_path":224},"No.912 排序数组","/algorithm/leetcode/sort-an-array",{"title":226,"_path":227},"No.1071 字符串的最大公因子","/algorithm/leetcode/greatest-common-divisor-of-strings",{"title":229,"_path":230},"No.1143 最长公共子序列","/algorithm/leetcode/longest-common-subsequence",{"title":232,"_path":233},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/kids-with-the-greatest-number-of-candies",{"title":235,"_path":236},"No.1768 交替合并字符串","/algorithm/leetcode/merge-strings-alternately",{"title":238,"_path":239,"children":240},"前端八股文","/frontend-endorsement",[241,252],{"title":242,"_path":243,"children":244},"构建工具","/frontend-endorsement/build-tools",[245],{"title":246,"_path":247,"children":248},"Webpack","/frontend-endorsement/build-tools/webpack",[249],{"title":250,"_path":251},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":253,"_path":254,"children":255},"Html","/frontend-endorsement/html",[256,259,262],{"title":257,"_path":258},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":260,"_path":261},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":263,"_path":264},"离线存储","/frontend-endorsement/html/offline-storage",{"title":266,"_path":267,"children":268},"前端代码考核","/frontend-code-assessment",[269,318,396],{"title":270,"_path":271,"children":272},"源码实现","/frontend-code-assessment/source",[273,298,311],{"title":274,"_path":275,"children":276},"原生 api","/frontend-code-assessment/source/native-api",[277,280,283,286,289,292,295],{"title":278,"_path":279},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":281,"_path":282},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":284,"_path":285},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":287,"_path":288},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":290,"_path":291},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":293,"_path":294},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":296,"_path":297},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":299,"_path":300,"children":301},"数组 Array","/frontend-code-assessment/source/array",[302,305,308],{"title":303,"_path":304},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":306,"_path":307},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":309,"_path":310},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":312,"_path":313,"children":314},"字符串 String","/frontend-code-assessment/source/string",[315],{"title":316,"_path":317},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":319,"_path":320,"children":321},"业务场景","/frontend-code-assessment/scene",[322,344,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393],{"title":323,"_path":324,"children":325},"Promise","/frontend-code-assessment/scene/promise",[326,329,332,335,338,341],{"title":327,"_path":328},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":330,"_path":331},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":333,"_path":334},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":336,"_path":337},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":339,"_path":340},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":342,"_path":343},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":345,"_path":346,"children":347},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[348],{"title":349,"_path":350},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":352,"_path":353},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":355,"_path":356},"倒计时","/frontend-code-assessment/scene/countdown",{"title":358,"_path":359},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":361,"_path":362},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":364,"_path":365},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":367,"_path":368},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":370,"_path":371},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":373,"_path":374},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":376,"_path":377},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":379,"_path":380},"随机数","/frontend-code-assessment/scene/random-number",{"title":382,"_path":383},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":385,"_path":386},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":388,"_path":389},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":391,"_path":392},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":394,"_path":395},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":397,"_path":398,"children":399},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[400],{"title":401,"_path":402},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":404,"_path":405,"children":406},"项目","/pro",[407],{"title":408,"_path":409},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":411,"_path":412,"children":413},"后端语言","/backend-languages",[414],{"title":415,"_path":416,"children":417},"Python","/backend-languages/python",[418,421],{"title":419,"_path":420},"基础","/backend-languages/python/base",{"title":422,"_path":423},"函数","/backend-languages/python/function",{"_path":143,"_dir":425,"_draft":426,"_partial":426,"_locale":427,"title":142,"description":428,"url":429,"body":430,"_type":1693,"_id":1694,"_source":1695,"_file":1696,"_extension":1697},"leetcode",false,"","给你一个链表的头节点 head ，判断链表中是否有环。","https://leetcode.cn/problems/linked-list-cycle",{"type":431,"children":432,"toc":1686},"root",[433,440,445,454,459,464,473,512,517,525,555,560,568,599,604,624,629,635,640,647,1240,1245,1680],{"type":434,"tag":435,"props":436,"children":437},"element","p",{},[438],{"type":439,"value":428},"text",{"type":434,"tag":435,"props":441,"children":442},{},[443],{"type":439,"value":444},"如果链表中有某个节点，可以通过连续跟踪 next 指针再次到达，则链表中存在环。 为了表示给定链表中的环，评测系统内部使用整数 pos 来表示链表尾连接到链表中的位置（索引从 0 开始）。",{"type":434,"tag":446,"props":447,"children":448},"blockquote",{},[449],{"type":434,"tag":435,"props":450,"children":451},{},[452],{"type":439,"value":453},"注意：pos 不作为参数进行传递 。仅仅是为了标识链表的实际情况。",{"type":434,"tag":435,"props":455,"children":456},{},[457],{"type":439,"value":458},"如果链表中存在环 ，则返回 true 。 否则，返回 false 。",{"type":434,"tag":435,"props":460,"children":461},{},[462],{"type":439,"value":463},"示例 1：",{"type":434,"tag":435,"props":465,"children":466},{},[467],{"type":434,"tag":468,"props":469,"children":472},"img",{"alt":470,"src":471},"circularlinkedlist","/img/code_leetcode_No.141_circularlinkedlist.png",[],{"type":434,"tag":474,"props":475,"children":478},"pre",{"className":476,"code":477,"language":439,"meta":427,"style":427},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：head = [3,2,0,-4], pos = 1\n输出：true\n解释：链表中有一个环，其尾部连接到第二个节点。\n",[479],{"type":434,"tag":480,"props":481,"children":482},"code",{"__ignoreMap":427},[483,494,503],{"type":434,"tag":484,"props":485,"children":488},"span",{"class":486,"line":487},"line",1,[489],{"type":434,"tag":484,"props":490,"children":491},{},[492],{"type":439,"value":493},"输入：head = [3,2,0,-4], pos = 1\n",{"type":434,"tag":484,"props":495,"children":497},{"class":486,"line":496},2,[498],{"type":434,"tag":484,"props":499,"children":500},{},[501],{"type":439,"value":502},"输出：true\n",{"type":434,"tag":484,"props":504,"children":506},{"class":486,"line":505},3,[507],{"type":434,"tag":484,"props":508,"children":509},{},[510],{"type":439,"value":511},"解释：链表中有一个环，其尾部连接到第二个节点。\n",{"type":434,"tag":435,"props":513,"children":514},{},[515],{"type":439,"value":516},"示例 2：",{"type":434,"tag":435,"props":518,"children":519},{},[520],{"type":434,"tag":468,"props":521,"children":524},{"alt":522,"src":523},"circularlinkedlist_test2","/img/code_leetcode_No.141_circularlinkedlist_test2.png",[],{"type":434,"tag":474,"props":526,"children":528},{"className":476,"code":527,"language":439,"meta":427,"style":427},"输入：head = [1,2], pos = 0\n输出：true\n解释：链表中有一个环，其尾部连接到第一个节点。\n",[529],{"type":434,"tag":480,"props":530,"children":531},{"__ignoreMap":427},[532,540,547],{"type":434,"tag":484,"props":533,"children":534},{"class":486,"line":487},[535],{"type":434,"tag":484,"props":536,"children":537},{},[538],{"type":439,"value":539},"输入：head = [1,2], pos = 0\n",{"type":434,"tag":484,"props":541,"children":542},{"class":486,"line":496},[543],{"type":434,"tag":484,"props":544,"children":545},{},[546],{"type":439,"value":502},{"type":434,"tag":484,"props":548,"children":549},{"class":486,"line":505},[550],{"type":434,"tag":484,"props":551,"children":552},{},[553],{"type":439,"value":554},"解释：链表中有一个环，其尾部连接到第一个节点。\n",{"type":434,"tag":435,"props":556,"children":557},{},[558],{"type":439,"value":559},"示例 3：",{"type":434,"tag":435,"props":561,"children":562},{},[563],{"type":434,"tag":468,"props":564,"children":567},{"alt":565,"src":566},"circularlinkedlist_test3","/img/code_leetcode_No.141_circularlinkedlist_test3.png",[],{"type":434,"tag":474,"props":569,"children":571},{"className":476,"code":570,"language":439,"meta":427,"style":427},"输入：head = [1], pos = -1\n输出：false\n解释：链表中没有环。\n",[572],{"type":434,"tag":480,"props":573,"children":574},{"__ignoreMap":427},[575,583,591],{"type":434,"tag":484,"props":576,"children":577},{"class":486,"line":487},[578],{"type":434,"tag":484,"props":579,"children":580},{},[581],{"type":439,"value":582},"输入：head = [1], pos = -1\n",{"type":434,"tag":484,"props":584,"children":585},{"class":486,"line":496},[586],{"type":434,"tag":484,"props":587,"children":588},{},[589],{"type":439,"value":590},"输出：false\n",{"type":434,"tag":484,"props":592,"children":593},{"class":486,"line":505},[594],{"type":434,"tag":484,"props":595,"children":596},{},[597],{"type":439,"value":598},"解释：链表中没有环。\n",{"type":434,"tag":435,"props":600,"children":601},{},[602],{"type":439,"value":603},"提示：",{"type":434,"tag":605,"props":606,"children":607},"ul",{},[608,614,619],{"type":434,"tag":609,"props":610,"children":611},"li",{},[612],{"type":439,"value":613},"链表中节点的数目范围是 [0, 10^4]",{"type":434,"tag":609,"props":615,"children":616},{},[617],{"type":439,"value":618},"-10^5 \u003C= Node.val \u003C= 10^5",{"type":434,"tag":609,"props":620,"children":621},{},[622],{"type":439,"value":623},"pos 为 -1 或者链表中的一个 有效索引 。",{"type":434,"tag":435,"props":625,"children":626},{},[627],{"type":439,"value":628},"进阶：你能用 O(1)（即，常量）内存解决此问题吗？",{"type":434,"tag":630,"props":631,"children":633},"h2",{"id":632},"解题思路",[634],{"type":439,"value":632},{"type":434,"tag":630,"props":636,"children":638},{"id":637},"实现",[639],{"type":439,"value":637},{"type":434,"tag":641,"props":642,"children":644},"h3",{"id":643},"双指针-快慢指针",[645],{"type":439,"value":646},"双指针 - 快慢指针",{"type":434,"tag":474,"props":648,"children":652},{"className":649,"code":650,"language":651,"meta":427,"style":427},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\nfunction ListNode(val) {\n  this.val = val;\n  this.next = null;\n}\n\n/**\n * @param {ListNode} head\n * @return {boolean}\n */\nvar hasCycle = function (head) {\n  if (!head || !head.next) return false;\n  let slow = head;\n  let fast = head.next;\n  while (slow) {\n    if (slow === fast) return true;\n    slow = slow.next;\n    fast = fast && fast.next?.next;\n  }\n  return false;\n};\n","js",[653],{"type":434,"tag":480,"props":654,"children":655},{"__ignoreMap":427},[656,665,673,681,690,699,708,717,750,788,819,828,838,846,873,891,899,936,1000,1027,1060,1082,1125,1154,1201,1210,1227],{"type":434,"tag":484,"props":657,"children":658},{"class":486,"line":487},[659],{"type":434,"tag":484,"props":660,"children":662},{"style":661},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[663],{"type":439,"value":664},"/**\n",{"type":434,"tag":484,"props":666,"children":667},{"class":486,"line":496},[668],{"type":434,"tag":484,"props":669,"children":670},{"style":661},[671],{"type":439,"value":672}," * Definition for singly-linked list.\n",{"type":434,"tag":484,"props":674,"children":675},{"class":486,"line":505},[676],{"type":434,"tag":484,"props":677,"children":678},{"style":661},[679],{"type":439,"value":680}," * function ListNode(val) {\n",{"type":434,"tag":484,"props":682,"children":684},{"class":486,"line":683},4,[685],{"type":434,"tag":484,"props":686,"children":687},{"style":661},[688],{"type":439,"value":689}," *     this.val = val;\n",{"type":434,"tag":484,"props":691,"children":693},{"class":486,"line":692},5,[694],{"type":434,"tag":484,"props":695,"children":696},{"style":661},[697],{"type":439,"value":698}," *     this.next = null;\n",{"type":434,"tag":484,"props":700,"children":702},{"class":486,"line":701},6,[703],{"type":434,"tag":484,"props":704,"children":705},{"style":661},[706],{"type":439,"value":707}," * }\n",{"type":434,"tag":484,"props":709,"children":711},{"class":486,"line":710},7,[712],{"type":434,"tag":484,"props":713,"children":714},{"style":661},[715],{"type":439,"value":716}," */\n",{"type":434,"tag":484,"props":718,"children":720},{"class":486,"line":719},8,[721,727,733,739,745],{"type":434,"tag":484,"props":722,"children":724},{"style":723},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[725],{"type":439,"value":726},"function",{"type":434,"tag":484,"props":728,"children":730},{"style":729},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[731],{"type":439,"value":732}," ListNode",{"type":434,"tag":484,"props":734,"children":736},{"style":735},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[737],{"type":439,"value":738},"(",{"type":434,"tag":484,"props":740,"children":742},{"style":741},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[743],{"type":439,"value":744},"val",{"type":434,"tag":484,"props":746,"children":747},{"style":735},[748],{"type":439,"value":749},") {\n",{"type":434,"tag":484,"props":751,"children":753},{"class":486,"line":752},9,[754,760,766,771,777,782],{"type":434,"tag":484,"props":755,"children":757},{"style":756},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[758],{"type":439,"value":759},"  this",{"type":434,"tag":484,"props":761,"children":763},{"style":762},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[764],{"type":439,"value":765},".",{"type":434,"tag":484,"props":767,"children":769},{"style":768},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[770],{"type":439,"value":744},{"type":434,"tag":484,"props":772,"children":774},{"style":773},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[775],{"type":439,"value":776}," =",{"type":434,"tag":484,"props":778,"children":779},{"style":768},[780],{"type":439,"value":781}," val",{"type":434,"tag":484,"props":783,"children":785},{"style":784},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[786],{"type":439,"value":787},";\n",{"type":434,"tag":484,"props":789,"children":791},{"class":486,"line":790},10,[792,796,800,805,809,815],{"type":434,"tag":484,"props":793,"children":794},{"style":756},[795],{"type":439,"value":759},{"type":434,"tag":484,"props":797,"children":798},{"style":762},[799],{"type":439,"value":765},{"type":434,"tag":484,"props":801,"children":802},{"style":768},[803],{"type":439,"value":804},"next",{"type":434,"tag":484,"props":806,"children":807},{"style":773},[808],{"type":439,"value":776},{"type":434,"tag":484,"props":810,"children":812},{"style":811},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[813],{"type":439,"value":814}," null",{"type":434,"tag":484,"props":816,"children":817},{"style":784},[818],{"type":439,"value":787},{"type":434,"tag":484,"props":820,"children":822},{"class":486,"line":821},11,[823],{"type":434,"tag":484,"props":824,"children":825},{"style":735},[826],{"type":439,"value":827},"}\n",{"type":434,"tag":484,"props":829,"children":831},{"class":486,"line":830},12,[832],{"type":434,"tag":484,"props":833,"children":835},{"emptyLinePlaceholder":834},true,[836],{"type":439,"value":837},"\n",{"type":434,"tag":484,"props":839,"children":841},{"class":486,"line":840},13,[842],{"type":434,"tag":484,"props":843,"children":844},{"style":661},[845],{"type":439,"value":664},{"type":434,"tag":484,"props":847,"children":849},{"class":486,"line":848},14,[850,855,861,867],{"type":434,"tag":484,"props":851,"children":852},{"style":661},[853],{"type":439,"value":854}," * ",{"type":434,"tag":484,"props":856,"children":858},{"style":857},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[859],{"type":439,"value":860},"@param",{"type":434,"tag":484,"props":862,"children":864},{"style":863},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[865],{"type":439,"value":866}," {ListNode}",{"type":434,"tag":484,"props":868,"children":870},{"style":869},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[871],{"type":439,"value":872}," head\n",{"type":434,"tag":484,"props":874,"children":876},{"class":486,"line":875},15,[877,881,886],{"type":434,"tag":484,"props":878,"children":879},{"style":661},[880],{"type":439,"value":854},{"type":434,"tag":484,"props":882,"children":883},{"style":857},[884],{"type":439,"value":885},"@return",{"type":434,"tag":484,"props":887,"children":888},{"style":863},[889],{"type":439,"value":890}," {boolean}\n",{"type":434,"tag":484,"props":892,"children":894},{"class":486,"line":893},16,[895],{"type":434,"tag":484,"props":896,"children":897},{"style":661},[898],{"type":439,"value":716},{"type":434,"tag":484,"props":900,"children":902},{"class":486,"line":901},17,[903,908,913,917,922,927,932],{"type":434,"tag":484,"props":904,"children":905},{"style":723},[906],{"type":439,"value":907},"var",{"type":434,"tag":484,"props":909,"children":910},{"style":729},[911],{"type":439,"value":912}," hasCycle",{"type":434,"tag":484,"props":914,"children":915},{"style":773},[916],{"type":439,"value":776},{"type":434,"tag":484,"props":918,"children":919},{"style":723},[920],{"type":439,"value":921}," function",{"type":434,"tag":484,"props":923,"children":924},{"style":735},[925],{"type":439,"value":926}," (",{"type":434,"tag":484,"props":928,"children":929},{"style":741},[930],{"type":439,"value":931},"head",{"type":434,"tag":484,"props":933,"children":934},{"style":735},[935],{"type":439,"value":749},{"type":434,"tag":484,"props":937,"children":939},{"class":486,"line":938},18,[940,946,950,955,959,964,969,973,977,981,986,991,996],{"type":434,"tag":484,"props":941,"children":943},{"style":942},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[944],{"type":439,"value":945},"  if",{"type":434,"tag":484,"props":947,"children":948},{"style":735},[949],{"type":439,"value":926},{"type":434,"tag":484,"props":951,"children":952},{"style":773},[953],{"type":439,"value":954},"!",{"type":434,"tag":484,"props":956,"children":957},{"style":768},[958],{"type":439,"value":931},{"type":434,"tag":484,"props":960,"children":961},{"style":773},[962],{"type":439,"value":963}," ||",{"type":434,"tag":484,"props":965,"children":966},{"style":773},[967],{"type":439,"value":968}," !",{"type":434,"tag":484,"props":970,"children":971},{"style":768},[972],{"type":439,"value":931},{"type":434,"tag":484,"props":974,"children":975},{"style":762},[976],{"type":439,"value":765},{"type":434,"tag":484,"props":978,"children":979},{"style":768},[980],{"type":439,"value":804},{"type":434,"tag":484,"props":982,"children":983},{"style":735},[984],{"type":439,"value":985},") ",{"type":434,"tag":484,"props":987,"children":988},{"style":942},[989],{"type":439,"value":990},"return",{"type":434,"tag":484,"props":992,"children":993},{"style":811},[994],{"type":439,"value":995}," false",{"type":434,"tag":484,"props":997,"children":998},{"style":784},[999],{"type":439,"value":787},{"type":434,"tag":484,"props":1001,"children":1003},{"class":486,"line":1002},19,[1004,1009,1014,1018,1023],{"type":434,"tag":484,"props":1005,"children":1006},{"style":723},[1007],{"type":439,"value":1008},"  let",{"type":434,"tag":484,"props":1010,"children":1011},{"style":768},[1012],{"type":439,"value":1013}," slow",{"type":434,"tag":484,"props":1015,"children":1016},{"style":773},[1017],{"type":439,"value":776},{"type":434,"tag":484,"props":1019,"children":1020},{"style":768},[1021],{"type":439,"value":1022}," head",{"type":434,"tag":484,"props":1024,"children":1025},{"style":784},[1026],{"type":439,"value":787},{"type":434,"tag":484,"props":1028,"children":1030},{"class":486,"line":1029},20,[1031,1035,1040,1044,1048,1052,1056],{"type":434,"tag":484,"props":1032,"children":1033},{"style":723},[1034],{"type":439,"value":1008},{"type":434,"tag":484,"props":1036,"children":1037},{"style":768},[1038],{"type":439,"value":1039}," fast",{"type":434,"tag":484,"props":1041,"children":1042},{"style":773},[1043],{"type":439,"value":776},{"type":434,"tag":484,"props":1045,"children":1046},{"style":768},[1047],{"type":439,"value":1022},{"type":434,"tag":484,"props":1049,"children":1050},{"style":762},[1051],{"type":439,"value":765},{"type":434,"tag":484,"props":1053,"children":1054},{"style":768},[1055],{"type":439,"value":804},{"type":434,"tag":484,"props":1057,"children":1058},{"style":784},[1059],{"type":439,"value":787},{"type":434,"tag":484,"props":1061,"children":1063},{"class":486,"line":1062},21,[1064,1069,1073,1078],{"type":434,"tag":484,"props":1065,"children":1066},{"style":942},[1067],{"type":439,"value":1068},"  while",{"type":434,"tag":484,"props":1070,"children":1071},{"style":735},[1072],{"type":439,"value":926},{"type":434,"tag":484,"props":1074,"children":1075},{"style":768},[1076],{"type":439,"value":1077},"slow",{"type":434,"tag":484,"props":1079,"children":1080},{"style":735},[1081],{"type":439,"value":749},{"type":434,"tag":484,"props":1083,"children":1085},{"class":486,"line":1084},22,[1086,1091,1095,1099,1104,1108,1112,1116,1121],{"type":434,"tag":484,"props":1087,"children":1088},{"style":942},[1089],{"type":439,"value":1090},"    if",{"type":434,"tag":484,"props":1092,"children":1093},{"style":735},[1094],{"type":439,"value":926},{"type":434,"tag":484,"props":1096,"children":1097},{"style":768},[1098],{"type":439,"value":1077},{"type":434,"tag":484,"props":1100,"children":1101},{"style":773},[1102],{"type":439,"value":1103}," ===",{"type":434,"tag":484,"props":1105,"children":1106},{"style":768},[1107],{"type":439,"value":1039},{"type":434,"tag":484,"props":1109,"children":1110},{"style":735},[1111],{"type":439,"value":985},{"type":434,"tag":484,"props":1113,"children":1114},{"style":942},[1115],{"type":439,"value":990},{"type":434,"tag":484,"props":1117,"children":1118},{"style":811},[1119],{"type":439,"value":1120}," true",{"type":434,"tag":484,"props":1122,"children":1123},{"style":784},[1124],{"type":439,"value":787},{"type":434,"tag":484,"props":1126,"children":1128},{"class":486,"line":1127},23,[1129,1134,1138,1142,1146,1150],{"type":434,"tag":484,"props":1130,"children":1131},{"style":768},[1132],{"type":439,"value":1133},"    slow",{"type":434,"tag":484,"props":1135,"children":1136},{"style":773},[1137],{"type":439,"value":776},{"type":434,"tag":484,"props":1139,"children":1140},{"style":768},[1141],{"type":439,"value":1013},{"type":434,"tag":484,"props":1143,"children":1144},{"style":762},[1145],{"type":439,"value":765},{"type":434,"tag":484,"props":1147,"children":1148},{"style":768},[1149],{"type":439,"value":804},{"type":434,"tag":484,"props":1151,"children":1152},{"style":784},[1153],{"type":439,"value":787},{"type":434,"tag":484,"props":1155,"children":1157},{"class":486,"line":1156},24,[1158,1163,1167,1171,1176,1180,1184,1188,1193,1197],{"type":434,"tag":484,"props":1159,"children":1160},{"style":768},[1161],{"type":439,"value":1162},"    fast",{"type":434,"tag":484,"props":1164,"children":1165},{"style":773},[1166],{"type":439,"value":776},{"type":434,"tag":484,"props":1168,"children":1169},{"style":768},[1170],{"type":439,"value":1039},{"type":434,"tag":484,"props":1172,"children":1173},{"style":773},[1174],{"type":439,"value":1175}," &&",{"type":434,"tag":484,"props":1177,"children":1178},{"style":768},[1179],{"type":439,"value":1039},{"type":434,"tag":484,"props":1181,"children":1182},{"style":762},[1183],{"type":439,"value":765},{"type":434,"tag":484,"props":1185,"children":1186},{"style":768},[1187],{"type":439,"value":804},{"type":434,"tag":484,"props":1189,"children":1190},{"style":762},[1191],{"type":439,"value":1192},"?.",{"type":434,"tag":484,"props":1194,"children":1195},{"style":768},[1196],{"type":439,"value":804},{"type":434,"tag":484,"props":1198,"children":1199},{"style":784},[1200],{"type":439,"value":787},{"type":434,"tag":484,"props":1202,"children":1204},{"class":486,"line":1203},25,[1205],{"type":434,"tag":484,"props":1206,"children":1207},{"style":735},[1208],{"type":439,"value":1209},"  }\n",{"type":434,"tag":484,"props":1211,"children":1213},{"class":486,"line":1212},26,[1214,1219,1223],{"type":434,"tag":484,"props":1215,"children":1216},{"style":942},[1217],{"type":439,"value":1218},"  return",{"type":434,"tag":484,"props":1220,"children":1221},{"style":811},[1222],{"type":439,"value":995},{"type":434,"tag":484,"props":1224,"children":1225},{"style":784},[1226],{"type":439,"value":787},{"type":434,"tag":484,"props":1228,"children":1230},{"class":486,"line":1229},27,[1231,1236],{"type":434,"tag":484,"props":1232,"children":1233},{"style":735},[1234],{"type":439,"value":1235},"}",{"type":434,"tag":484,"props":1237,"children":1238},{"style":784},[1239],{"type":439,"value":787},{"type":434,"tag":641,"props":1241,"children":1243},{"id":1242},"哈希法",[1244],{"type":439,"value":1242},{"type":434,"tag":474,"props":1246,"children":1248},{"className":649,"code":1247,"language":651,"meta":427,"style":427},"/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\nfunction ListNode(val) {\n  this.val = val;\n  this.next = null;\n}\n\n/**\n * @param {ListNode} head\n * @return {boolean}\n */\nvar hasCycle = function (head) {\n  let map = new Map();\n  while (head) {\n    if (map.has(head)) return true;\n    map.set(head, 1);\n    head = head.next;\n  }\n  return false;\n};\n",[1249],{"type":434,"tag":480,"props":1250,"children":1251},{"__ignoreMap":427},[1252,1259,1266,1273,1280,1287,1294,1301,1324,1351,1378,1385,1392,1399,1418,1433,1440,1471,1506,1525,1575,1619,1647,1654,1669],{"type":434,"tag":484,"props":1253,"children":1254},{"class":486,"line":487},[1255],{"type":434,"tag":484,"props":1256,"children":1257},{"style":661},[1258],{"type":439,"value":664},{"type":434,"tag":484,"props":1260,"children":1261},{"class":486,"line":496},[1262],{"type":434,"tag":484,"props":1263,"children":1264},{"style":661},[1265],{"type":439,"value":672},{"type":434,"tag":484,"props":1267,"children":1268},{"class":486,"line":505},[1269],{"type":434,"tag":484,"props":1270,"children":1271},{"style":661},[1272],{"type":439,"value":680},{"type":434,"tag":484,"props":1274,"children":1275},{"class":486,"line":683},[1276],{"type":434,"tag":484,"props":1277,"children":1278},{"style":661},[1279],{"type":439,"value":689},{"type":434,"tag":484,"props":1281,"children":1282},{"class":486,"line":692},[1283],{"type":434,"tag":484,"props":1284,"children":1285},{"style":661},[1286],{"type":439,"value":698},{"type":434,"tag":484,"props":1288,"children":1289},{"class":486,"line":701},[1290],{"type":434,"tag":484,"props":1291,"children":1292},{"style":661},[1293],{"type":439,"value":707},{"type":434,"tag":484,"props":1295,"children":1296},{"class":486,"line":710},[1297],{"type":434,"tag":484,"props":1298,"children":1299},{"style":661},[1300],{"type":439,"value":716},{"type":434,"tag":484,"props":1302,"children":1303},{"class":486,"line":719},[1304,1308,1312,1316,1320],{"type":434,"tag":484,"props":1305,"children":1306},{"style":723},[1307],{"type":439,"value":726},{"type":434,"tag":484,"props":1309,"children":1310},{"style":729},[1311],{"type":439,"value":732},{"type":434,"tag":484,"props":1313,"children":1314},{"style":735},[1315],{"type":439,"value":738},{"type":434,"tag":484,"props":1317,"children":1318},{"style":741},[1319],{"type":439,"value":744},{"type":434,"tag":484,"props":1321,"children":1322},{"style":735},[1323],{"type":439,"value":749},{"type":434,"tag":484,"props":1325,"children":1326},{"class":486,"line":752},[1327,1331,1335,1339,1343,1347],{"type":434,"tag":484,"props":1328,"children":1329},{"style":756},[1330],{"type":439,"value":759},{"type":434,"tag":484,"props":1332,"children":1333},{"style":762},[1334],{"type":439,"value":765},{"type":434,"tag":484,"props":1336,"children":1337},{"style":768},[1338],{"type":439,"value":744},{"type":434,"tag":484,"props":1340,"children":1341},{"style":773},[1342],{"type":439,"value":776},{"type":434,"tag":484,"props":1344,"children":1345},{"style":768},[1346],{"type":439,"value":781},{"type":434,"tag":484,"props":1348,"children":1349},{"style":784},[1350],{"type":439,"value":787},{"type":434,"tag":484,"props":1352,"children":1353},{"class":486,"line":790},[1354,1358,1362,1366,1370,1374],{"type":434,"tag":484,"props":1355,"children":1356},{"style":756},[1357],{"type":439,"value":759},{"type":434,"tag":484,"props":1359,"children":1360},{"style":762},[1361],{"type":439,"value":765},{"type":434,"tag":484,"props":1363,"children":1364},{"style":768},[1365],{"type":439,"value":804},{"type":434,"tag":484,"props":1367,"children":1368},{"style":773},[1369],{"type":439,"value":776},{"type":434,"tag":484,"props":1371,"children":1372},{"style":811},[1373],{"type":439,"value":814},{"type":434,"tag":484,"props":1375,"children":1376},{"style":784},[1377],{"type":439,"value":787},{"type":434,"tag":484,"props":1379,"children":1380},{"class":486,"line":821},[1381],{"type":434,"tag":484,"props":1382,"children":1383},{"style":735},[1384],{"type":439,"value":827},{"type":434,"tag":484,"props":1386,"children":1387},{"class":486,"line":830},[1388],{"type":434,"tag":484,"props":1389,"children":1390},{"emptyLinePlaceholder":834},[1391],{"type":439,"value":837},{"type":434,"tag":484,"props":1393,"children":1394},{"class":486,"line":840},[1395],{"type":434,"tag":484,"props":1396,"children":1397},{"style":661},[1398],{"type":439,"value":664},{"type":434,"tag":484,"props":1400,"children":1401},{"class":486,"line":848},[1402,1406,1410,1414],{"type":434,"tag":484,"props":1403,"children":1404},{"style":661},[1405],{"type":439,"value":854},{"type":434,"tag":484,"props":1407,"children":1408},{"style":857},[1409],{"type":439,"value":860},{"type":434,"tag":484,"props":1411,"children":1412},{"style":863},[1413],{"type":439,"value":866},{"type":434,"tag":484,"props":1415,"children":1416},{"style":869},[1417],{"type":439,"value":872},{"type":434,"tag":484,"props":1419,"children":1420},{"class":486,"line":875},[1421,1425,1429],{"type":434,"tag":484,"props":1422,"children":1423},{"style":661},[1424],{"type":439,"value":854},{"type":434,"tag":484,"props":1426,"children":1427},{"style":857},[1428],{"type":439,"value":885},{"type":434,"tag":484,"props":1430,"children":1431},{"style":863},[1432],{"type":439,"value":890},{"type":434,"tag":484,"props":1434,"children":1435},{"class":486,"line":893},[1436],{"type":434,"tag":484,"props":1437,"children":1438},{"style":661},[1439],{"type":439,"value":716},{"type":434,"tag":484,"props":1441,"children":1442},{"class":486,"line":901},[1443,1447,1451,1455,1459,1463,1467],{"type":434,"tag":484,"props":1444,"children":1445},{"style":723},[1446],{"type":439,"value":907},{"type":434,"tag":484,"props":1448,"children":1449},{"style":729},[1450],{"type":439,"value":912},{"type":434,"tag":484,"props":1452,"children":1453},{"style":773},[1454],{"type":439,"value":776},{"type":434,"tag":484,"props":1456,"children":1457},{"style":723},[1458],{"type":439,"value":921},{"type":434,"tag":484,"props":1460,"children":1461},{"style":735},[1462],{"type":439,"value":926},{"type":434,"tag":484,"props":1464,"children":1465},{"style":741},[1466],{"type":439,"value":931},{"type":434,"tag":484,"props":1468,"children":1469},{"style":735},[1470],{"type":439,"value":749},{"type":434,"tag":484,"props":1472,"children":1473},{"class":486,"line":938},[1474,1478,1483,1487,1492,1497,1502],{"type":434,"tag":484,"props":1475,"children":1476},{"style":723},[1477],{"type":439,"value":1008},{"type":434,"tag":484,"props":1479,"children":1480},{"style":768},[1481],{"type":439,"value":1482}," map",{"type":434,"tag":484,"props":1484,"children":1485},{"style":773},[1486],{"type":439,"value":776},{"type":434,"tag":484,"props":1488,"children":1489},{"style":773},[1490],{"type":439,"value":1491}," new",{"type":434,"tag":484,"props":1493,"children":1494},{"style":729},[1495],{"type":439,"value":1496}," Map",{"type":434,"tag":484,"props":1498,"children":1499},{"style":735},[1500],{"type":439,"value":1501},"()",{"type":434,"tag":484,"props":1503,"children":1504},{"style":784},[1505],{"type":439,"value":787},{"type":434,"tag":484,"props":1507,"children":1508},{"class":486,"line":1002},[1509,1513,1517,1521],{"type":434,"tag":484,"props":1510,"children":1511},{"style":942},[1512],{"type":439,"value":1068},{"type":434,"tag":484,"props":1514,"children":1515},{"style":735},[1516],{"type":439,"value":926},{"type":434,"tag":484,"props":1518,"children":1519},{"style":768},[1520],{"type":439,"value":931},{"type":434,"tag":484,"props":1522,"children":1523},{"style":735},[1524],{"type":439,"value":749},{"type":434,"tag":484,"props":1526,"children":1527},{"class":486,"line":1029},[1528,1532,1536,1541,1545,1550,1554,1558,1563,1567,1571],{"type":434,"tag":484,"props":1529,"children":1530},{"style":942},[1531],{"type":439,"value":1090},{"type":434,"tag":484,"props":1533,"children":1534},{"style":735},[1535],{"type":439,"value":926},{"type":434,"tag":484,"props":1537,"children":1538},{"style":768},[1539],{"type":439,"value":1540},"map",{"type":434,"tag":484,"props":1542,"children":1543},{"style":762},[1544],{"type":439,"value":765},{"type":434,"tag":484,"props":1546,"children":1547},{"style":729},[1548],{"type":439,"value":1549},"has",{"type":434,"tag":484,"props":1551,"children":1552},{"style":735},[1553],{"type":439,"value":738},{"type":434,"tag":484,"props":1555,"children":1556},{"style":768},[1557],{"type":439,"value":931},{"type":434,"tag":484,"props":1559,"children":1560},{"style":735},[1561],{"type":439,"value":1562},")) ",{"type":434,"tag":484,"props":1564,"children":1565},{"style":942},[1566],{"type":439,"value":990},{"type":434,"tag":484,"props":1568,"children":1569},{"style":811},[1570],{"type":439,"value":1120},{"type":434,"tag":484,"props":1572,"children":1573},{"style":784},[1574],{"type":439,"value":787},{"type":434,"tag":484,"props":1576,"children":1577},{"class":486,"line":1062},[1578,1583,1587,1592,1596,1600,1605,1610,1615],{"type":434,"tag":484,"props":1579,"children":1580},{"style":768},[1581],{"type":439,"value":1582},"    map",{"type":434,"tag":484,"props":1584,"children":1585},{"style":762},[1586],{"type":439,"value":765},{"type":434,"tag":484,"props":1588,"children":1589},{"style":729},[1590],{"type":439,"value":1591},"set",{"type":434,"tag":484,"props":1593,"children":1594},{"style":735},[1595],{"type":439,"value":738},{"type":434,"tag":484,"props":1597,"children":1598},{"style":768},[1599],{"type":439,"value":931},{"type":434,"tag":484,"props":1601,"children":1602},{"style":784},[1603],{"type":439,"value":1604},",",{"type":434,"tag":484,"props":1606,"children":1607},{"style":811},[1608],{"type":439,"value":1609}," 1",{"type":434,"tag":484,"props":1611,"children":1612},{"style":735},[1613],{"type":439,"value":1614},")",{"type":434,"tag":484,"props":1616,"children":1617},{"style":784},[1618],{"type":439,"value":787},{"type":434,"tag":484,"props":1620,"children":1621},{"class":486,"line":1084},[1622,1627,1631,1635,1639,1643],{"type":434,"tag":484,"props":1623,"children":1624},{"style":768},[1625],{"type":439,"value":1626},"    head",{"type":434,"tag":484,"props":1628,"children":1629},{"style":773},[1630],{"type":439,"value":776},{"type":434,"tag":484,"props":1632,"children":1633},{"style":768},[1634],{"type":439,"value":1022},{"type":434,"tag":484,"props":1636,"children":1637},{"style":762},[1638],{"type":439,"value":765},{"type":434,"tag":484,"props":1640,"children":1641},{"style":768},[1642],{"type":439,"value":804},{"type":434,"tag":484,"props":1644,"children":1645},{"style":784},[1646],{"type":439,"value":787},{"type":434,"tag":484,"props":1648,"children":1649},{"class":486,"line":1127},[1650],{"type":434,"tag":484,"props":1651,"children":1652},{"style":735},[1653],{"type":439,"value":1209},{"type":434,"tag":484,"props":1655,"children":1656},{"class":486,"line":1156},[1657,1661,1665],{"type":434,"tag":484,"props":1658,"children":1659},{"style":942},[1660],{"type":439,"value":1218},{"type":434,"tag":484,"props":1662,"children":1663},{"style":811},[1664],{"type":439,"value":995},{"type":434,"tag":484,"props":1666,"children":1667},{"style":784},[1668],{"type":439,"value":787},{"type":434,"tag":484,"props":1670,"children":1671},{"class":486,"line":1203},[1672,1676],{"type":434,"tag":484,"props":1673,"children":1674},{"style":735},[1675],{"type":439,"value":1235},{"type":434,"tag":484,"props":1677,"children":1678},{"style":784},[1679],{"type":439,"value":787},{"type":434,"tag":1681,"props":1682,"children":1683},"style",{},[1684],{"type":439,"value":1685},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":427,"searchDepth":692,"depth":692,"links":1687},[1688,1689],{"id":632,"depth":496,"text":632},{"id":637,"depth":496,"text":637,"children":1690},[1691,1692],{"id":643,"depth":505,"text":646},{"id":1242,"depth":505,"text":1242},"markdown","content:1.algorithm:3.leetcode:141.linked-list-cycle.md","content","1.algorithm/3.leetcode/141.linked-list-cycle.md","md",[1699,1701],{"_path":140,"title":139,"description":1700},"给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。",{"_path":146,"title":145,"description":1702},"请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：",1713339872495]