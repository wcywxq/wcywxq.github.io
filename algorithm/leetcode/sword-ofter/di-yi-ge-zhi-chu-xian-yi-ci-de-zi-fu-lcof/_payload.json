[{"data":1,"prerenderedAt":1337},["Reactive",2],{"navigation":3,"/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof":559,"/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof-surround":1332},[4,272,318,536,544],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":317},"八股文","/endorsement",[276,286,293,304],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"JavaScript","/endorsement/javascript",[290],{"title":291,"_path":292},"语法和数据类型","/endorsement/javascript/grammar-data-types",{"title":294,"_path":295,"children":296},"构建工具","/endorsement/build-tools",[297],{"title":298,"_path":299,"children":300},"Webpack","/endorsement/build-tools/webpack",[301],{"title":302,"_path":303},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":305,"_path":306,"children":307},"Html","/endorsement/html",[308,311,314],{"title":309,"_path":310},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":312,"_path":313},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":315,"_path":316},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":319,"_path":320,"children":321,"icon":535},"代码考核","/code-assessment",[322,427,528],{"title":323,"_path":324,"children":325},"源码实现","/code-assessment/source",[326,360,376,404,411,418,421,424],{"title":327,"_path":328,"children":329},"原生 api","/code-assessment/source/native-api",[330,333,336,339,342,345,348,351,354,357],{"title":331,"_path":332},"polyfill","/code-assessment/source/native-api/polyfill",{"title":334,"_path":335},"ajax","/code-assessment/source/native-api/ajax",{"title":337,"_path":338},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":340,"_path":341},"new 操作符","/code-assessment/source/native-api/new",{"title":343,"_path":344},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":346,"_path":347},"定时器","/code-assessment/source/native-api/timer",{"title":349,"_path":350},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":352,"_path":353},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":355,"_path":356},"extends","/code-assessment/source/native-api/extends",{"title":358,"_path":359},"Promise","/code-assessment/source/native-api/promise",{"title":361,"_path":362,"children":363},"函数 Function","/code-assessment/source/function",[364,367,370,373],{"title":365,"_path":366},"函数防抖","/code-assessment/source/function/debounce",{"title":368,"_path":369},"函数节流","/code-assessment/source/function/throttle",{"title":371,"_path":372},"函数柯理化","/code-assessment/source/function/curry",{"title":374,"_path":375},"函数睡眠","/code-assessment/source/function/sleep",{"title":377,"_path":378,"children":379},"数组 Array","/code-assessment/source/array",[380,383,386,389,392,395,398,401],{"title":381,"_path":382},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":384,"_path":385},"数组扁平化","/code-assessment/source/array/flat",{"title":387,"_path":388},"原型方法","/code-assessment/source/array/prototype-method",{"title":390,"_path":391},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":393,"_path":394},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":396,"_path":397},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":399,"_path":400},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":402,"_path":403},"二维数组","/code-assessment/source/array/2d-array",{"title":405,"_path":406,"children":407},"字符串 String","/code-assessment/source/string",[408],{"title":409,"_path":410},"repeat()","/code-assessment/source/string/repeat",{"title":412,"_path":413,"children":414},"集合 Set","/code-assessment/source/set",[415],{"title":416,"_path":417},"遍历集合","/code-assessment/source/set/traverse",{"title":419,"_path":420},"获取通用类型","/code-assessment/source/get-generic-type",{"title":422,"_path":423},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":425,"_path":426},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":428,"_path":429,"children":430},"业务场景","/code-assessment/scene",[431,461,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525],{"title":358,"_path":432,"children":433},"/code-assessment/scene/promise",[434,437,440,443,446,449,452,455,458],{"title":435,"_path":436},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":438,"_path":439},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":441,"_path":442},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":444,"_path":445},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":447,"_path":448},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":450,"_path":451},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":453,"_path":454},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":456,"_path":457},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":459,"_path":460},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":462,"_path":463,"children":464},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[465,468],{"title":466,"_path":467},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":469,"_path":470},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":472,"_path":473},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":475,"_path":476},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":478,"_path":479},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":481,"_path":482},"倒计时","/code-assessment/scene/countdown",{"title":484,"_path":485},"日期格式化","/code-assessment/scene/date-format",{"title":487,"_path":488},"实现前端路由","/code-assessment/scene/frontend-route",{"title":490,"_path":491},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":493,"_path":494},"lodash.get","/code-assessment/scene/lodash-get",{"title":496,"_path":497},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":499,"_path":500},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":502,"_path":503},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":505,"_path":506},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":508,"_path":509},"随机数","/code-assessment/scene/random-number",{"title":511,"_path":512},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":514,"_path":515},"sku 算法实现","/code-assessment/scene/sku",{"title":517,"_path":518},"整数分割","/code-assessment/scene/split-number",{"title":520,"_path":521},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":523,"_path":524},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":526,"_path":527},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":529,"_path":530,"children":531},"Ts 类型挑战","/code-assessment/type-challeges",[532],{"title":533,"_path":534},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":537,"_path":538,"children":539,"icon":543},"项目","/project",[540],{"title":541,"_path":542},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":545,"_path":546,"children":547,"icon":558},"后端语言","/backend-languages",[548],{"title":549,"_path":550,"children":551},"Python","/backend-languages/python",[552,555],{"title":553,"_path":554},"基础","/backend-languages/python/base",{"title":556,"_path":557},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":50,"_dir":560,"_draft":561,"_partial":561,"_locale":562,"title":49,"description":563,"subTitle":564,"url":565,"body":566,"_type":1327,"_id":1328,"_source":1329,"_file":1330,"_extension":1331},"sword-ofter",false,"","某套连招动作记作仅由小写字母组成的序列 arr，其中 arr[i] 第 i 个招式的名字。请返回第一个只出现一次的招式名称，如不存在请返回空格。","剑指 offer 50. 第一个只出现一次的字符","https://leetcode.cn/problems/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"type":567,"children":568,"toc":1323},"root",[569,576,581,611,616,639,644,654,660,665,1317],{"type":570,"tag":571,"props":572,"children":573},"element","p",{},[574],{"type":575,"value":563},"text",{"type":570,"tag":571,"props":577,"children":578},{},[579],{"type":575,"value":580},"示例 1：",{"type":570,"tag":582,"props":583,"children":586},"pre",{"className":584,"code":585,"language":575,"meta":562,"style":562},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：arr = \"abbccdeff\"\n输出：'a'\n",[587],{"type":570,"tag":588,"props":589,"children":590},"code",{"__ignoreMap":562},[591,602],{"type":570,"tag":592,"props":593,"children":596},"span",{"class":594,"line":595},"line",1,[597],{"type":570,"tag":592,"props":598,"children":599},{},[600],{"type":575,"value":601},"输入：arr = \"abbccdeff\"\n",{"type":570,"tag":592,"props":603,"children":605},{"class":594,"line":604},2,[606],{"type":570,"tag":592,"props":607,"children":608},{},[609],{"type":575,"value":610},"输出：'a'\n",{"type":570,"tag":571,"props":612,"children":613},{},[614],{"type":575,"value":615},"示例 2：",{"type":570,"tag":582,"props":617,"children":619},{"className":584,"code":618,"language":575,"meta":562,"style":562},"输入：arr = \"ccdd\"\n输出：' '\n",[620],{"type":570,"tag":588,"props":621,"children":622},{"__ignoreMap":562},[623,631],{"type":570,"tag":592,"props":624,"children":625},{"class":594,"line":595},[626],{"type":570,"tag":592,"props":627,"children":628},{},[629],{"type":575,"value":630},"输入：arr = \"ccdd\"\n",{"type":570,"tag":592,"props":632,"children":633},{"class":594,"line":604},[634],{"type":570,"tag":592,"props":635,"children":636},{},[637],{"type":575,"value":638},"输出：' '\n",{"type":570,"tag":571,"props":640,"children":641},{},[642],{"type":575,"value":643},"限制：",{"type":570,"tag":645,"props":646,"children":647},"ul",{},[648],{"type":570,"tag":649,"props":650,"children":651},"li",{},[652],{"type":575,"value":653},"0 \u003C= arr.length \u003C= 50000",{"type":570,"tag":655,"props":656,"children":658},"h2",{"id":657},"解题思路",[659],{"type":575,"value":657},{"type":570,"tag":655,"props":661,"children":663},{"id":662},"实现",[664],{"type":575,"value":662},{"type":570,"tag":582,"props":666,"children":670},{"className":667,"code":668,"language":669,"meta":562,"style":562},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {string} s\n * @return {character}\n */\nvar dismantlingAction = function(s) {\n    if (!s.length) return ' '\n    let map = new Map()\n    for (let i = 0; i \u003C s.length; i++) {\n        let char = s.charAt(i)\n        map.set(char, map.has(char) ? map.get(char) + 1: 1)\n    }\n    let onceList = [...map].filter(([_, v]) => v === 1)\n    if (!onceList.length) return ' '\n    return onceList[0][0]\n};\n","js",[671],{"type":570,"tag":588,"props":672,"children":673},{"__ignoreMap":562},[674,683,725,756,765,811,865,898,979,1024,1134,1143,1226,1271,1308],{"type":570,"tag":592,"props":675,"children":676},{"class":594,"line":595},[677],{"type":570,"tag":592,"props":678,"children":680},{"style":679},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[681],{"type":575,"value":682},"/**\n",{"type":570,"tag":592,"props":684,"children":685},{"class":594,"line":604},[686,691,697,703,708,714,719],{"type":570,"tag":592,"props":687,"children":688},{"style":679},[689],{"type":575,"value":690}," * ",{"type":570,"tag":592,"props":692,"children":694},{"style":693},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[695],{"type":575,"value":696},"@",{"type":570,"tag":592,"props":698,"children":700},{"style":699},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[701],{"type":575,"value":702},"param",{"type":570,"tag":592,"props":704,"children":705},{"style":693},[706],{"type":575,"value":707}," {",{"type":570,"tag":592,"props":709,"children":711},{"style":710},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[712],{"type":575,"value":713},"string",{"type":570,"tag":592,"props":715,"children":716},{"style":693},[717],{"type":575,"value":718},"}",{"type":570,"tag":592,"props":720,"children":722},{"style":721},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[723],{"type":575,"value":724}," s\n",{"type":570,"tag":592,"props":726,"children":728},{"class":594,"line":727},3,[729,733,737,742,746,751],{"type":570,"tag":592,"props":730,"children":731},{"style":679},[732],{"type":575,"value":690},{"type":570,"tag":592,"props":734,"children":735},{"style":693},[736],{"type":575,"value":696},{"type":570,"tag":592,"props":738,"children":739},{"style":699},[740],{"type":575,"value":741},"return",{"type":570,"tag":592,"props":743,"children":744},{"style":693},[745],{"type":575,"value":707},{"type":570,"tag":592,"props":747,"children":748},{"style":710},[749],{"type":575,"value":750},"character",{"type":570,"tag":592,"props":752,"children":753},{"style":693},[754],{"type":575,"value":755},"}\n",{"type":570,"tag":592,"props":757,"children":759},{"class":594,"line":758},4,[760],{"type":570,"tag":592,"props":761,"children":762},{"style":679},[763],{"type":575,"value":764}," */\n",{"type":570,"tag":592,"props":766,"children":768},{"class":594,"line":767},5,[769,775,781,786,791,796,801,806],{"type":570,"tag":592,"props":770,"children":772},{"style":771},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[773],{"type":575,"value":774},"var",{"type":570,"tag":592,"props":776,"children":778},{"style":777},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[779],{"type":575,"value":780}," dismantlingAction",{"type":570,"tag":592,"props":782,"children":783},{"style":693},[784],{"type":575,"value":785}," =",{"type":570,"tag":592,"props":787,"children":788},{"style":771},[789],{"type":575,"value":790}," function",{"type":570,"tag":592,"props":792,"children":793},{"style":693},[794],{"type":575,"value":795},"(",{"type":570,"tag":592,"props":797,"children":798},{"style":721},[799],{"type":575,"value":800},"s",{"type":570,"tag":592,"props":802,"children":803},{"style":693},[804],{"type":575,"value":805},")",{"type":570,"tag":592,"props":807,"children":808},{"style":693},[809],{"type":575,"value":810}," {\n",{"type":570,"tag":592,"props":812,"children":814},{"class":594,"line":813},6,[815,820,825,830,834,839,845,849,854,860],{"type":570,"tag":592,"props":816,"children":817},{"style":699},[818],{"type":575,"value":819},"    if",{"type":570,"tag":592,"props":821,"children":822},{"style":693},[823],{"type":575,"value":824}," (",{"type":570,"tag":592,"props":826,"children":827},{"style":771},[828],{"type":575,"value":829},"!",{"type":570,"tag":592,"props":831,"children":832},{"style":721},[833],{"type":575,"value":800},{"type":570,"tag":592,"props":835,"children":836},{"style":693},[837],{"type":575,"value":838},".",{"type":570,"tag":592,"props":840,"children":842},{"style":841},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[843],{"type":575,"value":844},"length",{"type":570,"tag":592,"props":846,"children":847},{"style":693},[848],{"type":575,"value":805},{"type":570,"tag":592,"props":850,"children":851},{"style":699},[852],{"type":575,"value":853}," return",{"type":570,"tag":592,"props":855,"children":857},{"style":856},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[858],{"type":575,"value":859}," '",{"type":570,"tag":592,"props":861,"children":862},{"style":856},[863],{"type":575,"value":864}," '\n",{"type":570,"tag":592,"props":866,"children":868},{"class":594,"line":867},7,[869,874,879,883,888,893],{"type":570,"tag":592,"props":870,"children":871},{"style":771},[872],{"type":575,"value":873},"    let",{"type":570,"tag":592,"props":875,"children":876},{"style":721},[877],{"type":575,"value":878}," map",{"type":570,"tag":592,"props":880,"children":881},{"style":693},[882],{"type":575,"value":785},{"type":570,"tag":592,"props":884,"children":885},{"style":771},[886],{"type":575,"value":887}," new",{"type":570,"tag":592,"props":889,"children":890},{"style":777},[891],{"type":575,"value":892}," Map",{"type":570,"tag":592,"props":894,"children":895},{"style":693},[896],{"type":575,"value":897},"()\n",{"type":570,"tag":592,"props":899,"children":901},{"class":594,"line":900},8,[902,907,911,916,921,925,931,936,940,945,950,954,958,962,966,971,975],{"type":570,"tag":592,"props":903,"children":904},{"style":699},[905],{"type":575,"value":906},"    for",{"type":570,"tag":592,"props":908,"children":909},{"style":693},[910],{"type":575,"value":824},{"type":570,"tag":592,"props":912,"children":913},{"style":771},[914],{"type":575,"value":915},"let",{"type":570,"tag":592,"props":917,"children":918},{"style":721},[919],{"type":575,"value":920}," i",{"type":570,"tag":592,"props":922,"children":923},{"style":693},[924],{"type":575,"value":785},{"type":570,"tag":592,"props":926,"children":928},{"style":927},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[929],{"type":575,"value":930}," 0",{"type":570,"tag":592,"props":932,"children":933},{"style":693},[934],{"type":575,"value":935},";",{"type":570,"tag":592,"props":937,"children":938},{"style":721},[939],{"type":575,"value":920},{"type":570,"tag":592,"props":941,"children":942},{"style":693},[943],{"type":575,"value":944}," \u003C",{"type":570,"tag":592,"props":946,"children":947},{"style":721},[948],{"type":575,"value":949}," s",{"type":570,"tag":592,"props":951,"children":952},{"style":693},[953],{"type":575,"value":838},{"type":570,"tag":592,"props":955,"children":956},{"style":841},[957],{"type":575,"value":844},{"type":570,"tag":592,"props":959,"children":960},{"style":693},[961],{"type":575,"value":935},{"type":570,"tag":592,"props":963,"children":964},{"style":721},[965],{"type":575,"value":920},{"type":570,"tag":592,"props":967,"children":968},{"style":771},[969],{"type":575,"value":970},"++",{"type":570,"tag":592,"props":972,"children":973},{"style":693},[974],{"type":575,"value":805},{"type":570,"tag":592,"props":976,"children":977},{"style":693},[978],{"type":575,"value":810},{"type":570,"tag":592,"props":980,"children":982},{"class":594,"line":981},9,[983,988,993,997,1001,1005,1010,1014,1019],{"type":570,"tag":592,"props":984,"children":985},{"style":771},[986],{"type":575,"value":987},"        let",{"type":570,"tag":592,"props":989,"children":990},{"style":721},[991],{"type":575,"value":992}," char",{"type":570,"tag":592,"props":994,"children":995},{"style":693},[996],{"type":575,"value":785},{"type":570,"tag":592,"props":998,"children":999},{"style":721},[1000],{"type":575,"value":949},{"type":570,"tag":592,"props":1002,"children":1003},{"style":693},[1004],{"type":575,"value":838},{"type":570,"tag":592,"props":1006,"children":1007},{"style":777},[1008],{"type":575,"value":1009},"charAt",{"type":570,"tag":592,"props":1011,"children":1012},{"style":693},[1013],{"type":575,"value":795},{"type":570,"tag":592,"props":1015,"children":1016},{"style":721},[1017],{"type":575,"value":1018},"i",{"type":570,"tag":592,"props":1020,"children":1021},{"style":693},[1022],{"type":575,"value":1023},")\n",{"type":570,"tag":592,"props":1025,"children":1027},{"class":594,"line":1026},10,[1028,1033,1037,1042,1046,1051,1056,1060,1064,1069,1073,1077,1081,1086,1090,1094,1099,1103,1107,1111,1116,1121,1126,1130],{"type":570,"tag":592,"props":1029,"children":1030},{"style":721},[1031],{"type":575,"value":1032},"        map",{"type":570,"tag":592,"props":1034,"children":1035},{"style":693},[1036],{"type":575,"value":838},{"type":570,"tag":592,"props":1038,"children":1039},{"style":777},[1040],{"type":575,"value":1041},"set",{"type":570,"tag":592,"props":1043,"children":1044},{"style":693},[1045],{"type":575,"value":795},{"type":570,"tag":592,"props":1047,"children":1048},{"style":721},[1049],{"type":575,"value":1050},"char",{"type":570,"tag":592,"props":1052,"children":1053},{"style":693},[1054],{"type":575,"value":1055},",",{"type":570,"tag":592,"props":1057,"children":1058},{"style":721},[1059],{"type":575,"value":878},{"type":570,"tag":592,"props":1061,"children":1062},{"style":693},[1063],{"type":575,"value":838},{"type":570,"tag":592,"props":1065,"children":1066},{"style":777},[1067],{"type":575,"value":1068},"has",{"type":570,"tag":592,"props":1070,"children":1071},{"style":693},[1072],{"type":575,"value":795},{"type":570,"tag":592,"props":1074,"children":1075},{"style":721},[1076],{"type":575,"value":1050},{"type":570,"tag":592,"props":1078,"children":1079},{"style":693},[1080],{"type":575,"value":805},{"type":570,"tag":592,"props":1082,"children":1083},{"style":771},[1084],{"type":575,"value":1085}," ?",{"type":570,"tag":592,"props":1087,"children":1088},{"style":721},[1089],{"type":575,"value":878},{"type":570,"tag":592,"props":1091,"children":1092},{"style":693},[1093],{"type":575,"value":838},{"type":570,"tag":592,"props":1095,"children":1096},{"style":777},[1097],{"type":575,"value":1098},"get",{"type":570,"tag":592,"props":1100,"children":1101},{"style":693},[1102],{"type":575,"value":795},{"type":570,"tag":592,"props":1104,"children":1105},{"style":721},[1106],{"type":575,"value":1050},{"type":570,"tag":592,"props":1108,"children":1109},{"style":693},[1110],{"type":575,"value":805},{"type":570,"tag":592,"props":1112,"children":1113},{"style":771},[1114],{"type":575,"value":1115}," +",{"type":570,"tag":592,"props":1117,"children":1118},{"style":927},[1119],{"type":575,"value":1120}," 1",{"type":570,"tag":592,"props":1122,"children":1123},{"style":771},[1124],{"type":575,"value":1125},":",{"type":570,"tag":592,"props":1127,"children":1128},{"style":927},[1129],{"type":575,"value":1120},{"type":570,"tag":592,"props":1131,"children":1132},{"style":693},[1133],{"type":575,"value":1023},{"type":570,"tag":592,"props":1135,"children":1137},{"class":594,"line":1136},11,[1138],{"type":570,"tag":592,"props":1139,"children":1140},{"style":693},[1141],{"type":575,"value":1142},"    }\n",{"type":570,"tag":592,"props":1144,"children":1146},{"class":594,"line":1145},12,[1147,1151,1156,1160,1165,1170,1175,1180,1185,1190,1194,1199,1204,1209,1213,1218,1222],{"type":570,"tag":592,"props":1148,"children":1149},{"style":771},[1150],{"type":575,"value":873},{"type":570,"tag":592,"props":1152,"children":1153},{"style":721},[1154],{"type":575,"value":1155}," onceList",{"type":570,"tag":592,"props":1157,"children":1158},{"style":693},[1159],{"type":575,"value":785},{"type":570,"tag":592,"props":1161,"children":1162},{"style":693},[1163],{"type":575,"value":1164}," [...",{"type":570,"tag":592,"props":1166,"children":1167},{"style":721},[1168],{"type":575,"value":1169},"map",{"type":570,"tag":592,"props":1171,"children":1172},{"style":693},[1173],{"type":575,"value":1174},"].",{"type":570,"tag":592,"props":1176,"children":1177},{"style":777},[1178],{"type":575,"value":1179},"filter",{"type":570,"tag":592,"props":1181,"children":1182},{"style":693},[1183],{"type":575,"value":1184},"(([",{"type":570,"tag":592,"props":1186,"children":1187},{"style":721},[1188],{"type":575,"value":1189},"_",{"type":570,"tag":592,"props":1191,"children":1192},{"style":693},[1193],{"type":575,"value":1055},{"type":570,"tag":592,"props":1195,"children":1196},{"style":721},[1197],{"type":575,"value":1198}," v",{"type":570,"tag":592,"props":1200,"children":1201},{"style":693},[1202],{"type":575,"value":1203},"])",{"type":570,"tag":592,"props":1205,"children":1206},{"style":693},[1207],{"type":575,"value":1208}," =>",{"type":570,"tag":592,"props":1210,"children":1211},{"style":721},[1212],{"type":575,"value":1198},{"type":570,"tag":592,"props":1214,"children":1215},{"style":771},[1216],{"type":575,"value":1217}," ===",{"type":570,"tag":592,"props":1219,"children":1220},{"style":927},[1221],{"type":575,"value":1120},{"type":570,"tag":592,"props":1223,"children":1224},{"style":693},[1225],{"type":575,"value":1023},{"type":570,"tag":592,"props":1227,"children":1229},{"class":594,"line":1228},13,[1230,1234,1238,1242,1247,1251,1255,1259,1263,1267],{"type":570,"tag":592,"props":1231,"children":1232},{"style":699},[1233],{"type":575,"value":819},{"type":570,"tag":592,"props":1235,"children":1236},{"style":693},[1237],{"type":575,"value":824},{"type":570,"tag":592,"props":1239,"children":1240},{"style":771},[1241],{"type":575,"value":829},{"type":570,"tag":592,"props":1243,"children":1244},{"style":721},[1245],{"type":575,"value":1246},"onceList",{"type":570,"tag":592,"props":1248,"children":1249},{"style":693},[1250],{"type":575,"value":838},{"type":570,"tag":592,"props":1252,"children":1253},{"style":841},[1254],{"type":575,"value":844},{"type":570,"tag":592,"props":1256,"children":1257},{"style":693},[1258],{"type":575,"value":805},{"type":570,"tag":592,"props":1260,"children":1261},{"style":699},[1262],{"type":575,"value":853},{"type":570,"tag":592,"props":1264,"children":1265},{"style":856},[1266],{"type":575,"value":859},{"type":570,"tag":592,"props":1268,"children":1269},{"style":856},[1270],{"type":575,"value":864},{"type":570,"tag":592,"props":1272,"children":1274},{"class":594,"line":1273},14,[1275,1280,1284,1289,1294,1299,1303],{"type":570,"tag":592,"props":1276,"children":1277},{"style":699},[1278],{"type":575,"value":1279},"    return",{"type":570,"tag":592,"props":1281,"children":1282},{"style":721},[1283],{"type":575,"value":1155},{"type":570,"tag":592,"props":1285,"children":1286},{"style":693},[1287],{"type":575,"value":1288},"[",{"type":570,"tag":592,"props":1290,"children":1291},{"style":927},[1292],{"type":575,"value":1293},"0",{"type":570,"tag":592,"props":1295,"children":1296},{"style":693},[1297],{"type":575,"value":1298},"][",{"type":570,"tag":592,"props":1300,"children":1301},{"style":927},[1302],{"type":575,"value":1293},{"type":570,"tag":592,"props":1304,"children":1305},{"style":693},[1306],{"type":575,"value":1307},"]\n",{"type":570,"tag":592,"props":1309,"children":1311},{"class":594,"line":1310},15,[1312],{"type":570,"tag":592,"props":1313,"children":1314},{"style":693},[1315],{"type":575,"value":1316},"};\n",{"type":570,"tag":1318,"props":1319,"children":1320},"style",{},[1321],{"type":575,"value":1322},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":562,"searchDepth":767,"depth":767,"links":1324},[1325,1326],{"id":657,"depth":604,"text":657},{"id":662,"depth":604,"text":662},"markdown","content:1.algorithm:3.leetcode:2.sword-ofter:169.di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof.md","content","1.algorithm/3.leetcode/2.sword-ofter/169.di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof.md","md",[1333,1335],{"_path":47,"title":46,"description":1334},"给定一个头节点为 head 的链表用于记录一系列核心肌群训练项目编号，请查找并返回倒数第 cnt 个训练项目编号。",{"_path":53,"title":52,"description":1336},"社团共有 num 位成员参与破冰游戏，编号为 0 ~ num-1。成员们按照编号顺序围绕圆桌而坐。社长抽取一个数字 target，从 0 号成员起开始计数，排在第 target 位的成员离开圆桌，且成员离开后从下一个成员开始计数。请返回游戏结束时最后一位成员的编号。",1717731134096]