[{"data":1,"prerenderedAt":1321},["Reactive",2],{"navigation":3,"/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof":540,"/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof-surround":1317},[4,269,298,508,516,525],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":507},"代码考核","/code-assessment",[302,401,500],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,334,350,378,385,392,395,398],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333},"extends","/code-assessment/source/native-api/extends",{"title":335,"_path":336,"children":337},"函数 Function","/code-assessment/source/function",[338,341,344,347],{"title":339,"_path":340},"函数防抖","/code-assessment/source/function/debounce",{"title":342,"_path":343},"函数节流","/code-assessment/source/function/throttle",{"title":345,"_path":346},"函数柯理化","/code-assessment/source/function/curry",{"title":348,"_path":349},"函数睡眠","/code-assessment/source/function/sleep",{"title":351,"_path":352,"children":353},"数组 Array","/code-assessment/source/array",[354,357,360,363,366,369,372,375],{"title":355,"_path":356},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":358,"_path":359},"数组扁平化","/code-assessment/source/array/flat",{"title":361,"_path":362},"原型方法","/code-assessment/source/array/prototype-method",{"title":364,"_path":365},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":367,"_path":368},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":370,"_path":371},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":373,"_path":374},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":376,"_path":377},"二维数组","/code-assessment/source/array/2d-array",{"title":379,"_path":380,"children":381},"字符串 String","/code-assessment/source/string",[382],{"title":383,"_path":384},"repeat()","/code-assessment/source/string/repeat",{"title":386,"_path":387,"children":388},"集合 Set","/code-assessment/source/set",[389],{"title":390,"_path":391},"遍历集合","/code-assessment/source/set/traverse",{"title":393,"_path":394},"获取通用类型","/code-assessment/source/get-generic-type",{"title":396,"_path":397},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":399,"_path":400},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":402,"_path":403,"children":404},"业务场景","/code-assessment/scene",[405,436,446,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497],{"title":406,"_path":407,"children":408},"Promise","/code-assessment/scene/promise",[409,412,415,418,421,424,427,430,433],{"title":410,"_path":411},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":413,"_path":414},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":416,"_path":417},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":419,"_path":420},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":422,"_path":423},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":425,"_path":426},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":428,"_path":429},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":431,"_path":432},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":434,"_path":435},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":437,"_path":438,"children":439},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[440,443],{"title":441,"_path":442},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":444,"_path":445},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":447,"_path":448},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":450,"_path":451},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":453,"_path":454},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":456,"_path":457},"倒计时","/code-assessment/scene/countdown",{"title":459,"_path":460},"日期格式化","/code-assessment/scene/date-format",{"title":462,"_path":463},"实现前端路由","/code-assessment/scene/frontend-route",{"title":465,"_path":466},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":468,"_path":469},"lodash.get","/code-assessment/scene/lodash-get",{"title":471,"_path":472},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":474,"_path":475},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":477,"_path":478},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":480,"_path":481},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":483,"_path":484},"随机数","/code-assessment/scene/random-number",{"title":486,"_path":487},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":489,"_path":490},"sku 算法实现","/code-assessment/scene/sku",{"title":492,"_path":493},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":495,"_path":496},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":498,"_path":499},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":501,"_path":502,"children":503},"Ts 类型挑战","/code-assessment/type-challeges",[504],{"title":505,"_path":506},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":509,"_path":510,"children":511,"icon":515},"项目","/project",[512],{"title":513,"_path":514},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":517,"_path":518,"children":519,"icon":524},"设计模式","/design-mode",[520,521],{"title":517,"_path":518},{"title":522,"_path":523},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":526,"_path":527,"children":528,"icon":539},"后端语言","/backend-languages",[529],{"title":530,"_path":531,"children":532},"Python","/backend-languages/python",[533,536],{"title":534,"_path":535},"基础","/backend-languages/python/base",{"title":537,"_path":538},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":47,"_dir":541,"_draft":542,"_partial":542,"_locale":543,"title":46,"description":544,"subTitle":545,"url":546,"body":547,"_type":1312,"_id":1313,"_source":1314,"_file":1315,"_extension":1316},"sword-ofter",false,"","给定一个头节点为 head 的链表用于记录一系列核心肌群训练项目编号，请查找并返回倒数第 cnt 个训练项目编号。","剑指 offer 22. 链表中倒数第 k 个节点","https://leetcode.cn/problems/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"type":548,"children":549,"toc":1306},"root",[550,557,562,592,597,617,623,628,634,1300],{"type":551,"tag":552,"props":553,"children":554},"element","p",{},[555],{"type":556,"value":544},"text",{"type":551,"tag":552,"props":558,"children":559},{},[560],{"type":556,"value":561},"示例 1：",{"type":551,"tag":563,"props":564,"children":567},"pre",{"className":565,"code":566,"language":556,"meta":543,"style":543},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：head = [2,4,7,8], cnt = 1\n输出：8\n",[568],{"type":551,"tag":569,"props":570,"children":571},"code",{"__ignoreMap":543},[572,583],{"type":551,"tag":573,"props":574,"children":577},"span",{"class":575,"line":576},"line",1,[578],{"type":551,"tag":573,"props":579,"children":580},{},[581],{"type":556,"value":582},"输入：head = [2,4,7,8], cnt = 1\n",{"type":551,"tag":573,"props":584,"children":586},{"class":575,"line":585},2,[587],{"type":551,"tag":573,"props":588,"children":589},{},[590],{"type":556,"value":591},"输出：8\n",{"type":551,"tag":552,"props":593,"children":594},{},[595],{"type":556,"value":596},"提示：",{"type":551,"tag":598,"props":599,"children":600},"ul",{},[601,607,612],{"type":551,"tag":602,"props":603,"children":604},"li",{},[605],{"type":556,"value":606},"1 \u003C= head.length \u003C= 100",{"type":551,"tag":602,"props":608,"children":609},{},[610],{"type":556,"value":611},"0 \u003C= head[i] \u003C= 100",{"type":551,"tag":602,"props":613,"children":614},{},[615],{"type":556,"value":616},"1 \u003C= cnt \u003C= head.length",{"type":551,"tag":618,"props":619,"children":621},"h2",{"id":620},"解题思路",[622],{"type":556,"value":620},{"type":551,"tag":618,"props":624,"children":626},{"id":625},"实现",[627],{"type":556,"value":625},{"type":551,"tag":629,"props":630,"children":632},"h3",{"id":631},"快慢指针",[633],{"type":556,"value":631},{"type":551,"tag":563,"props":635,"children":639},{"className":636,"code":637,"language":638,"meta":543,"style":543},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n */\nfunction ListNode(val, next) {\n  this.val = val === undefined ? 0 : val;\n  this.next = next === undefined ? null : next;\n}\n\n/**\n * 快指针走 cnt 步\n * @param {ListNode} head\n * @param {number} cnt\n * @return {ListNode}\n */\nvar trainingPlan = function (head, cnt) {\n  let fast = head;\n  let slow = head;\n  let flag = 0;\n  while (fast !== null) {\n    if (flag >= cnt) {\n      slow = slow.next;\n    }\n    fast = fast.next;\n    flag++;\n  }\n  return slow;\n};\n","js",[640],{"type":551,"tag":569,"props":641,"children":642},{"__ignoreMap":543},[643,652,660,669,717,781,835,844,854,862,871,912,946,975,983,1033,1060,1085,1110,1145,1180,1209,1218,1247,1265,1274,1291],{"type":551,"tag":573,"props":644,"children":645},{"class":575,"line":576},[646],{"type":551,"tag":573,"props":647,"children":649},{"style":648},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[650],{"type":556,"value":651},"/**\n",{"type":551,"tag":573,"props":653,"children":654},{"class":575,"line":585},[655],{"type":551,"tag":573,"props":656,"children":657},{"style":648},[658],{"type":556,"value":659}," * Definition for singly-linked list.\n",{"type":551,"tag":573,"props":661,"children":663},{"class":575,"line":662},3,[664],{"type":551,"tag":573,"props":665,"children":666},{"style":648},[667],{"type":556,"value":668}," */\n",{"type":551,"tag":573,"props":670,"children":672},{"class":575,"line":671},4,[673,679,685,691,697,702,707,712],{"type":551,"tag":573,"props":674,"children":676},{"style":675},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[677],{"type":556,"value":678},"function",{"type":551,"tag":573,"props":680,"children":682},{"style":681},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[683],{"type":556,"value":684}," ListNode",{"type":551,"tag":573,"props":686,"children":688},{"style":687},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[689],{"type":556,"value":690},"(",{"type":551,"tag":573,"props":692,"children":694},{"style":693},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[695],{"type":556,"value":696},"val",{"type":551,"tag":573,"props":698,"children":699},{"style":687},[700],{"type":556,"value":701},",",{"type":551,"tag":573,"props":703,"children":704},{"style":693},[705],{"type":556,"value":706}," next",{"type":551,"tag":573,"props":708,"children":709},{"style":687},[710],{"type":556,"value":711},")",{"type":551,"tag":573,"props":713,"children":714},{"style":687},[715],{"type":556,"value":716}," {\n",{"type":551,"tag":573,"props":718,"children":720},{"class":575,"line":719},5,[721,727,732,736,741,746,751,756,761,767,772,776],{"type":551,"tag":573,"props":722,"children":724},{"style":723},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[725],{"type":556,"value":726},"  this",{"type":551,"tag":573,"props":728,"children":729},{"style":687},[730],{"type":556,"value":731},".",{"type":551,"tag":573,"props":733,"children":734},{"style":693},[735],{"type":556,"value":696},{"type":551,"tag":573,"props":737,"children":738},{"style":687},[739],{"type":556,"value":740}," =",{"type":551,"tag":573,"props":742,"children":743},{"style":693},[744],{"type":556,"value":745}," val",{"type":551,"tag":573,"props":747,"children":748},{"style":675},[749],{"type":556,"value":750}," ===",{"type":551,"tag":573,"props":752,"children":753},{"style":675},[754],{"type":556,"value":755}," undefined",{"type":551,"tag":573,"props":757,"children":758},{"style":675},[759],{"type":556,"value":760}," ?",{"type":551,"tag":573,"props":762,"children":764},{"style":763},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[765],{"type":556,"value":766}," 0",{"type":551,"tag":573,"props":768,"children":769},{"style":675},[770],{"type":556,"value":771}," :",{"type":551,"tag":573,"props":773,"children":774},{"style":693},[775],{"type":556,"value":745},{"type":551,"tag":573,"props":777,"children":778},{"style":687},[779],{"type":556,"value":780},";\n",{"type":551,"tag":573,"props":782,"children":784},{"class":575,"line":783},6,[785,789,793,798,802,806,810,814,818,823,827,831],{"type":551,"tag":573,"props":786,"children":787},{"style":723},[788],{"type":556,"value":726},{"type":551,"tag":573,"props":790,"children":791},{"style":687},[792],{"type":556,"value":731},{"type":551,"tag":573,"props":794,"children":795},{"style":693},[796],{"type":556,"value":797},"next",{"type":551,"tag":573,"props":799,"children":800},{"style":687},[801],{"type":556,"value":740},{"type":551,"tag":573,"props":803,"children":804},{"style":693},[805],{"type":556,"value":706},{"type":551,"tag":573,"props":807,"children":808},{"style":675},[809],{"type":556,"value":750},{"type":551,"tag":573,"props":811,"children":812},{"style":675},[813],{"type":556,"value":755},{"type":551,"tag":573,"props":815,"children":816},{"style":675},[817],{"type":556,"value":760},{"type":551,"tag":573,"props":819,"children":820},{"style":675},[821],{"type":556,"value":822}," null",{"type":551,"tag":573,"props":824,"children":825},{"style":675},[826],{"type":556,"value":771},{"type":551,"tag":573,"props":828,"children":829},{"style":693},[830],{"type":556,"value":706},{"type":551,"tag":573,"props":832,"children":833},{"style":687},[834],{"type":556,"value":780},{"type":551,"tag":573,"props":836,"children":838},{"class":575,"line":837},7,[839],{"type":551,"tag":573,"props":840,"children":841},{"style":687},[842],{"type":556,"value":843},"}\n",{"type":551,"tag":573,"props":845,"children":847},{"class":575,"line":846},8,[848],{"type":551,"tag":573,"props":849,"children":851},{"emptyLinePlaceholder":850},true,[852],{"type":556,"value":853},"\n",{"type":551,"tag":573,"props":855,"children":857},{"class":575,"line":856},9,[858],{"type":551,"tag":573,"props":859,"children":860},{"style":648},[861],{"type":556,"value":651},{"type":551,"tag":573,"props":863,"children":865},{"class":575,"line":864},10,[866],{"type":551,"tag":573,"props":867,"children":868},{"style":648},[869],{"type":556,"value":870}," * 快指针走 cnt 步\n",{"type":551,"tag":573,"props":872,"children":874},{"class":575,"line":873},11,[875,880,885,891,896,902,907],{"type":551,"tag":573,"props":876,"children":877},{"style":648},[878],{"type":556,"value":879}," * ",{"type":551,"tag":573,"props":881,"children":882},{"style":687},[883],{"type":556,"value":884},"@",{"type":551,"tag":573,"props":886,"children":888},{"style":887},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[889],{"type":556,"value":890},"param",{"type":551,"tag":573,"props":892,"children":893},{"style":687},[894],{"type":556,"value":895}," {",{"type":551,"tag":573,"props":897,"children":899},{"style":898},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[900],{"type":556,"value":901},"ListNode",{"type":551,"tag":573,"props":903,"children":904},{"style":687},[905],{"type":556,"value":906},"}",{"type":551,"tag":573,"props":908,"children":909},{"style":693},[910],{"type":556,"value":911}," head\n",{"type":551,"tag":573,"props":913,"children":915},{"class":575,"line":914},12,[916,920,924,928,932,937,941],{"type":551,"tag":573,"props":917,"children":918},{"style":648},[919],{"type":556,"value":879},{"type":551,"tag":573,"props":921,"children":922},{"style":687},[923],{"type":556,"value":884},{"type":551,"tag":573,"props":925,"children":926},{"style":887},[927],{"type":556,"value":890},{"type":551,"tag":573,"props":929,"children":930},{"style":687},[931],{"type":556,"value":895},{"type":551,"tag":573,"props":933,"children":934},{"style":898},[935],{"type":556,"value":936},"number",{"type":551,"tag":573,"props":938,"children":939},{"style":687},[940],{"type":556,"value":906},{"type":551,"tag":573,"props":942,"children":943},{"style":693},[944],{"type":556,"value":945}," cnt\n",{"type":551,"tag":573,"props":947,"children":949},{"class":575,"line":948},13,[950,954,958,963,967,971],{"type":551,"tag":573,"props":951,"children":952},{"style":648},[953],{"type":556,"value":879},{"type":551,"tag":573,"props":955,"children":956},{"style":687},[957],{"type":556,"value":884},{"type":551,"tag":573,"props":959,"children":960},{"style":887},[961],{"type":556,"value":962},"return",{"type":551,"tag":573,"props":964,"children":965},{"style":687},[966],{"type":556,"value":895},{"type":551,"tag":573,"props":968,"children":969},{"style":898},[970],{"type":556,"value":901},{"type":551,"tag":573,"props":972,"children":973},{"style":687},[974],{"type":556,"value":843},{"type":551,"tag":573,"props":976,"children":978},{"class":575,"line":977},14,[979],{"type":551,"tag":573,"props":980,"children":981},{"style":648},[982],{"type":556,"value":668},{"type":551,"tag":573,"props":984,"children":986},{"class":575,"line":985},15,[987,992,997,1001,1006,1011,1016,1020,1025,1029],{"type":551,"tag":573,"props":988,"children":989},{"style":675},[990],{"type":556,"value":991},"var",{"type":551,"tag":573,"props":993,"children":994},{"style":681},[995],{"type":556,"value":996}," trainingPlan",{"type":551,"tag":573,"props":998,"children":999},{"style":687},[1000],{"type":556,"value":740},{"type":551,"tag":573,"props":1002,"children":1003},{"style":675},[1004],{"type":556,"value":1005}," function",{"type":551,"tag":573,"props":1007,"children":1008},{"style":687},[1009],{"type":556,"value":1010}," (",{"type":551,"tag":573,"props":1012,"children":1013},{"style":693},[1014],{"type":556,"value":1015},"head",{"type":551,"tag":573,"props":1017,"children":1018},{"style":687},[1019],{"type":556,"value":701},{"type":551,"tag":573,"props":1021,"children":1022},{"style":693},[1023],{"type":556,"value":1024}," cnt",{"type":551,"tag":573,"props":1026,"children":1027},{"style":687},[1028],{"type":556,"value":711},{"type":551,"tag":573,"props":1030,"children":1031},{"style":687},[1032],{"type":556,"value":716},{"type":551,"tag":573,"props":1034,"children":1036},{"class":575,"line":1035},16,[1037,1042,1047,1051,1056],{"type":551,"tag":573,"props":1038,"children":1039},{"style":675},[1040],{"type":556,"value":1041},"  let",{"type":551,"tag":573,"props":1043,"children":1044},{"style":693},[1045],{"type":556,"value":1046}," fast",{"type":551,"tag":573,"props":1048,"children":1049},{"style":687},[1050],{"type":556,"value":740},{"type":551,"tag":573,"props":1052,"children":1053},{"style":693},[1054],{"type":556,"value":1055}," head",{"type":551,"tag":573,"props":1057,"children":1058},{"style":687},[1059],{"type":556,"value":780},{"type":551,"tag":573,"props":1061,"children":1063},{"class":575,"line":1062},17,[1064,1068,1073,1077,1081],{"type":551,"tag":573,"props":1065,"children":1066},{"style":675},[1067],{"type":556,"value":1041},{"type":551,"tag":573,"props":1069,"children":1070},{"style":693},[1071],{"type":556,"value":1072}," slow",{"type":551,"tag":573,"props":1074,"children":1075},{"style":687},[1076],{"type":556,"value":740},{"type":551,"tag":573,"props":1078,"children":1079},{"style":693},[1080],{"type":556,"value":1055},{"type":551,"tag":573,"props":1082,"children":1083},{"style":687},[1084],{"type":556,"value":780},{"type":551,"tag":573,"props":1086,"children":1088},{"class":575,"line":1087},18,[1089,1093,1098,1102,1106],{"type":551,"tag":573,"props":1090,"children":1091},{"style":675},[1092],{"type":556,"value":1041},{"type":551,"tag":573,"props":1094,"children":1095},{"style":693},[1096],{"type":556,"value":1097}," flag",{"type":551,"tag":573,"props":1099,"children":1100},{"style":687},[1101],{"type":556,"value":740},{"type":551,"tag":573,"props":1103,"children":1104},{"style":763},[1105],{"type":556,"value":766},{"type":551,"tag":573,"props":1107,"children":1108},{"style":687},[1109],{"type":556,"value":780},{"type":551,"tag":573,"props":1111,"children":1113},{"class":575,"line":1112},19,[1114,1119,1123,1128,1133,1137,1141],{"type":551,"tag":573,"props":1115,"children":1116},{"style":887},[1117],{"type":556,"value":1118},"  while",{"type":551,"tag":573,"props":1120,"children":1121},{"style":687},[1122],{"type":556,"value":1010},{"type":551,"tag":573,"props":1124,"children":1125},{"style":693},[1126],{"type":556,"value":1127},"fast",{"type":551,"tag":573,"props":1129,"children":1130},{"style":675},[1131],{"type":556,"value":1132}," !==",{"type":551,"tag":573,"props":1134,"children":1135},{"style":675},[1136],{"type":556,"value":822},{"type":551,"tag":573,"props":1138,"children":1139},{"style":687},[1140],{"type":556,"value":711},{"type":551,"tag":573,"props":1142,"children":1143},{"style":687},[1144],{"type":556,"value":716},{"type":551,"tag":573,"props":1146,"children":1148},{"class":575,"line":1147},20,[1149,1154,1158,1163,1168,1172,1176],{"type":551,"tag":573,"props":1150,"children":1151},{"style":887},[1152],{"type":556,"value":1153},"    if",{"type":551,"tag":573,"props":1155,"children":1156},{"style":687},[1157],{"type":556,"value":1010},{"type":551,"tag":573,"props":1159,"children":1160},{"style":693},[1161],{"type":556,"value":1162},"flag",{"type":551,"tag":573,"props":1164,"children":1165},{"style":687},[1166],{"type":556,"value":1167}," >=",{"type":551,"tag":573,"props":1169,"children":1170},{"style":693},[1171],{"type":556,"value":1024},{"type":551,"tag":573,"props":1173,"children":1174},{"style":687},[1175],{"type":556,"value":711},{"type":551,"tag":573,"props":1177,"children":1178},{"style":687},[1179],{"type":556,"value":716},{"type":551,"tag":573,"props":1181,"children":1183},{"class":575,"line":1182},21,[1184,1189,1193,1197,1201,1205],{"type":551,"tag":573,"props":1185,"children":1186},{"style":693},[1187],{"type":556,"value":1188},"      slow",{"type":551,"tag":573,"props":1190,"children":1191},{"style":687},[1192],{"type":556,"value":740},{"type":551,"tag":573,"props":1194,"children":1195},{"style":693},[1196],{"type":556,"value":1072},{"type":551,"tag":573,"props":1198,"children":1199},{"style":687},[1200],{"type":556,"value":731},{"type":551,"tag":573,"props":1202,"children":1203},{"style":693},[1204],{"type":556,"value":797},{"type":551,"tag":573,"props":1206,"children":1207},{"style":687},[1208],{"type":556,"value":780},{"type":551,"tag":573,"props":1210,"children":1212},{"class":575,"line":1211},22,[1213],{"type":551,"tag":573,"props":1214,"children":1215},{"style":687},[1216],{"type":556,"value":1217},"    }\n",{"type":551,"tag":573,"props":1219,"children":1221},{"class":575,"line":1220},23,[1222,1227,1231,1235,1239,1243],{"type":551,"tag":573,"props":1223,"children":1224},{"style":693},[1225],{"type":556,"value":1226},"    fast",{"type":551,"tag":573,"props":1228,"children":1229},{"style":687},[1230],{"type":556,"value":740},{"type":551,"tag":573,"props":1232,"children":1233},{"style":693},[1234],{"type":556,"value":1046},{"type":551,"tag":573,"props":1236,"children":1237},{"style":687},[1238],{"type":556,"value":731},{"type":551,"tag":573,"props":1240,"children":1241},{"style":693},[1242],{"type":556,"value":797},{"type":551,"tag":573,"props":1244,"children":1245},{"style":687},[1246],{"type":556,"value":780},{"type":551,"tag":573,"props":1248,"children":1250},{"class":575,"line":1249},24,[1251,1256,1261],{"type":551,"tag":573,"props":1252,"children":1253},{"style":693},[1254],{"type":556,"value":1255},"    flag",{"type":551,"tag":573,"props":1257,"children":1258},{"style":675},[1259],{"type":556,"value":1260},"++",{"type":551,"tag":573,"props":1262,"children":1263},{"style":687},[1264],{"type":556,"value":780},{"type":551,"tag":573,"props":1266,"children":1268},{"class":575,"line":1267},25,[1269],{"type":551,"tag":573,"props":1270,"children":1271},{"style":687},[1272],{"type":556,"value":1273},"  }\n",{"type":551,"tag":573,"props":1275,"children":1277},{"class":575,"line":1276},26,[1278,1283,1287],{"type":551,"tag":573,"props":1279,"children":1280},{"style":887},[1281],{"type":556,"value":1282},"  return",{"type":551,"tag":573,"props":1284,"children":1285},{"style":693},[1286],{"type":556,"value":1072},{"type":551,"tag":573,"props":1288,"children":1289},{"style":687},[1290],{"type":556,"value":780},{"type":551,"tag":573,"props":1292,"children":1294},{"class":575,"line":1293},27,[1295],{"type":551,"tag":573,"props":1296,"children":1297},{"style":687},[1298],{"type":556,"value":1299},"};\n",{"type":551,"tag":1301,"props":1302,"children":1303},"style",{},[1304],{"type":556,"value":1305},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":543,"searchDepth":719,"depth":719,"links":1307},[1308,1309],{"id":620,"depth":585,"text":620},{"id":625,"depth":585,"text":625,"children":1310},[1311],{"id":631,"depth":662,"text":631},"markdown","content:1.algorithm:3.leetcode:2.sword-ofter:140.lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof.md","content","1.algorithm/3.leetcode/2.sword-ofter/140.lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof.md","md",[1318,1319],{"_path":37,"title":40,"description":543},{"_path":50,"title":49,"description":1320},"某套连招动作记作仅由小写字母组成的序列 arr，其中 arr[i] 第 i 个招式的名字。请返回第一个只出现一次的招式名称，如不存在请返回空格。",1714099211564]