[{"data":1,"prerenderedAt":1456},["Reactive",2],{"navigation":3,"/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof":552,"/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof-surround":1451},[4,272,311,529,537],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":310},"八股文","/endorsement",[276,286,297],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"构建工具","/endorsement/build-tools",[290],{"title":291,"_path":292,"children":293},"Webpack","/endorsement/build-tools/webpack",[294],{"title":295,"_path":296},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":298,"_path":299,"children":300},"Html","/endorsement/html",[301,304,307],{"title":302,"_path":303},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":305,"_path":306},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":308,"_path":309},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":312,"_path":313,"children":314,"icon":528},"代码考核","/code-assessment",[315,420,521],{"title":316,"_path":317,"children":318},"源码实现","/code-assessment/source",[319,353,369,397,404,411,414,417],{"title":320,"_path":321,"children":322},"原生 api","/code-assessment/source/native-api",[323,326,329,332,335,338,341,344,347,350],{"title":324,"_path":325},"polyfill","/code-assessment/source/native-api/polyfill",{"title":327,"_path":328},"ajax","/code-assessment/source/native-api/ajax",{"title":330,"_path":331},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":333,"_path":334},"new 操作符","/code-assessment/source/native-api/new",{"title":336,"_path":337},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":339,"_path":340},"定时器","/code-assessment/source/native-api/timer",{"title":342,"_path":343},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":345,"_path":346},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":348,"_path":349},"extends","/code-assessment/source/native-api/extends",{"title":351,"_path":352},"Promise","/code-assessment/source/native-api/promise",{"title":354,"_path":355,"children":356},"函数 Function","/code-assessment/source/function",[357,360,363,366],{"title":358,"_path":359},"函数防抖","/code-assessment/source/function/debounce",{"title":361,"_path":362},"函数节流","/code-assessment/source/function/throttle",{"title":364,"_path":365},"函数柯理化","/code-assessment/source/function/curry",{"title":367,"_path":368},"函数睡眠","/code-assessment/source/function/sleep",{"title":370,"_path":371,"children":372},"数组 Array","/code-assessment/source/array",[373,376,379,382,385,388,391,394],{"title":374,"_path":375},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":377,"_path":378},"数组扁平化","/code-assessment/source/array/flat",{"title":380,"_path":381},"原型方法","/code-assessment/source/array/prototype-method",{"title":383,"_path":384},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":386,"_path":387},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":389,"_path":390},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":392,"_path":393},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":395,"_path":396},"二维数组","/code-assessment/source/array/2d-array",{"title":398,"_path":399,"children":400},"字符串 String","/code-assessment/source/string",[401],{"title":402,"_path":403},"repeat()","/code-assessment/source/string/repeat",{"title":405,"_path":406,"children":407},"集合 Set","/code-assessment/source/set",[408],{"title":409,"_path":410},"遍历集合","/code-assessment/source/set/traverse",{"title":412,"_path":413},"获取通用类型","/code-assessment/source/get-generic-type",{"title":415,"_path":416},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":418,"_path":419},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":421,"_path":422,"children":423},"业务场景","/code-assessment/scene",[424,454,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518],{"title":351,"_path":425,"children":426},"/code-assessment/scene/promise",[427,430,433,436,439,442,445,448,451],{"title":428,"_path":429},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":431,"_path":432},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":434,"_path":435},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":437,"_path":438},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":440,"_path":441},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":443,"_path":444},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":446,"_path":447},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":449,"_path":450},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":452,"_path":453},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":455,"_path":456,"children":457},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[458,461],{"title":459,"_path":460},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":462,"_path":463},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":465,"_path":466},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":468,"_path":469},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":471,"_path":472},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":474,"_path":475},"倒计时","/code-assessment/scene/countdown",{"title":477,"_path":478},"日期格式化","/code-assessment/scene/date-format",{"title":480,"_path":481},"实现前端路由","/code-assessment/scene/frontend-route",{"title":483,"_path":484},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":486,"_path":487},"lodash.get","/code-assessment/scene/lodash-get",{"title":489,"_path":490},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":492,"_path":493},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":495,"_path":496},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":498,"_path":499},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":501,"_path":502},"随机数","/code-assessment/scene/random-number",{"title":504,"_path":505},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":507,"_path":508},"sku 算法实现","/code-assessment/scene/sku",{"title":510,"_path":511},"整数分割","/code-assessment/scene/split-number",{"title":513,"_path":514},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":516,"_path":517},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":519,"_path":520},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":522,"_path":523,"children":524},"Ts 类型挑战","/code-assessment/type-challeges",[525],{"title":526,"_path":527},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":530,"_path":531,"children":532,"icon":536},"项目","/project",[533],{"title":534,"_path":535},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":538,"_path":539,"children":540,"icon":551},"后端语言","/backend-languages",[541],{"title":542,"_path":543,"children":544},"Python","/backend-languages/python",[545,548],{"title":546,"_path":547},"基础","/backend-languages/python/base",{"title":549,"_path":550},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":53,"_dir":553,"_draft":554,"_partial":554,"_locale":555,"title":52,"description":556,"subTitle":557,"url":558,"body":559,"_type":1446,"_id":1447,"_source":1448,"_file":1449,"_extension":1450},"sword-ofter",false,"","社团共有 num 位成员参与破冰游戏，编号为 0 ~ num-1。成员们按照编号顺序围绕圆桌而坐。社长抽取一个数字 target，从 0 号成员起开始计数，排在第 target 位的成员离开圆桌，且成员离开后从下一个成员开始计数。请返回游戏结束时最后一位成员的编号。","剑指 offer 62. 圆圈中最后剩下的数字","https://leetcode.cn/problems/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"type":560,"children":561,"toc":1439},"root",[562,569,574,604,609,632,637,652,658,663,670,1042,1048,1433],{"type":563,"tag":564,"props":565,"children":566},"element","p",{},[567],{"type":568,"value":556},"text",{"type":563,"tag":564,"props":570,"children":571},{},[572],{"type":568,"value":573},"示例 1：",{"type":563,"tag":575,"props":576,"children":579},"pre",{"className":577,"code":578,"language":568,"meta":555,"style":555},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：num = 7, target = 4\n输出：1\n",[580],{"type":563,"tag":581,"props":582,"children":583},"code",{"__ignoreMap":555},[584,595],{"type":563,"tag":585,"props":586,"children":589},"span",{"class":587,"line":588},"line",1,[590],{"type":563,"tag":585,"props":591,"children":592},{},[593],{"type":568,"value":594},"输入：num = 7, target = 4\n",{"type":563,"tag":585,"props":596,"children":598},{"class":587,"line":597},2,[599],{"type":563,"tag":585,"props":600,"children":601},{},[602],{"type":568,"value":603},"输出：1\n",{"type":563,"tag":564,"props":605,"children":606},{},[607],{"type":568,"value":608},"示例 2：",{"type":563,"tag":575,"props":610,"children":612},{"className":577,"code":611,"language":568,"meta":555,"style":555},"输入：num = 12, target = 5\n输出：0\n",[613],{"type":563,"tag":581,"props":614,"children":615},{"__ignoreMap":555},[616,624],{"type":563,"tag":585,"props":617,"children":618},{"class":587,"line":588},[619],{"type":563,"tag":585,"props":620,"children":621},{},[622],{"type":568,"value":623},"输入：num = 12, target = 5\n",{"type":563,"tag":585,"props":625,"children":626},{"class":587,"line":597},[627],{"type":563,"tag":585,"props":628,"children":629},{},[630],{"type":568,"value":631},"输出：0\n",{"type":563,"tag":564,"props":633,"children":634},{},[635],{"type":568,"value":636},"提示：",{"type":563,"tag":638,"props":639,"children":640},"ul",{},[641,647],{"type":563,"tag":642,"props":643,"children":644},"li",{},[645],{"type":568,"value":646},"1 \u003C= num \u003C= 10^5",{"type":563,"tag":642,"props":648,"children":649},{},[650],{"type":568,"value":651},"1 \u003C= target \u003C= 10^6",{"type":563,"tag":653,"props":654,"children":656},"h2",{"id":655},"解题思路",[657],{"type":568,"value":655},{"type":563,"tag":653,"props":659,"children":661},{"id":660},"实现",[662],{"type":568,"value":660},{"type":563,"tag":664,"props":665,"children":667},"h3",{"id":666},"数学-迭代",[668],{"type":568,"value":669},"数学 + 迭代",{"type":563,"tag":575,"props":671,"children":675},{"className":672,"code":673,"language":674,"meta":555,"style":555},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} num\n * @param {number} target\n * @return {number}\n */\nvar iceBreakingGame = function (num, target) {\n  let res = 0;\n  for (let i = 2; i \u003C= num; i++) {\n    res = (res + target) % i;\n  }\n  return res;\n};\n","js",[676],{"type":563,"tag":581,"props":677,"children":678},{"__ignoreMap":555},[679,688,730,763,793,802,858,887,959,1007,1016,1033],{"type":563,"tag":585,"props":680,"children":681},{"class":587,"line":588},[682],{"type":563,"tag":585,"props":683,"children":685},{"style":684},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[686],{"type":568,"value":687},"/**\n",{"type":563,"tag":585,"props":689,"children":690},{"class":587,"line":597},[691,696,702,708,713,719,724],{"type":563,"tag":585,"props":692,"children":693},{"style":684},[694],{"type":568,"value":695}," * ",{"type":563,"tag":585,"props":697,"children":699},{"style":698},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[700],{"type":568,"value":701},"@",{"type":563,"tag":585,"props":703,"children":705},{"style":704},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[706],{"type":568,"value":707},"param",{"type":563,"tag":585,"props":709,"children":710},{"style":698},[711],{"type":568,"value":712}," {",{"type":563,"tag":585,"props":714,"children":716},{"style":715},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[717],{"type":568,"value":718},"number",{"type":563,"tag":585,"props":720,"children":721},{"style":698},[722],{"type":568,"value":723},"}",{"type":563,"tag":585,"props":725,"children":727},{"style":726},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[728],{"type":568,"value":729}," num\n",{"type":563,"tag":585,"props":731,"children":733},{"class":587,"line":732},3,[734,738,742,746,750,754,758],{"type":563,"tag":585,"props":735,"children":736},{"style":684},[737],{"type":568,"value":695},{"type":563,"tag":585,"props":739,"children":740},{"style":698},[741],{"type":568,"value":701},{"type":563,"tag":585,"props":743,"children":744},{"style":704},[745],{"type":568,"value":707},{"type":563,"tag":585,"props":747,"children":748},{"style":698},[749],{"type":568,"value":712},{"type":563,"tag":585,"props":751,"children":752},{"style":715},[753],{"type":568,"value":718},{"type":563,"tag":585,"props":755,"children":756},{"style":698},[757],{"type":568,"value":723},{"type":563,"tag":585,"props":759,"children":760},{"style":726},[761],{"type":568,"value":762}," target\n",{"type":563,"tag":585,"props":764,"children":766},{"class":587,"line":765},4,[767,771,775,780,784,788],{"type":563,"tag":585,"props":768,"children":769},{"style":684},[770],{"type":568,"value":695},{"type":563,"tag":585,"props":772,"children":773},{"style":698},[774],{"type":568,"value":701},{"type":563,"tag":585,"props":776,"children":777},{"style":704},[778],{"type":568,"value":779},"return",{"type":563,"tag":585,"props":781,"children":782},{"style":698},[783],{"type":568,"value":712},{"type":563,"tag":585,"props":785,"children":786},{"style":715},[787],{"type":568,"value":718},{"type":563,"tag":585,"props":789,"children":790},{"style":698},[791],{"type":568,"value":792},"}\n",{"type":563,"tag":585,"props":794,"children":796},{"class":587,"line":795},5,[797],{"type":563,"tag":585,"props":798,"children":799},{"style":684},[800],{"type":568,"value":801}," */\n",{"type":563,"tag":585,"props":803,"children":805},{"class":587,"line":804},6,[806,812,818,823,828,833,838,843,848,853],{"type":563,"tag":585,"props":807,"children":809},{"style":808},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[810],{"type":568,"value":811},"var",{"type":563,"tag":585,"props":813,"children":815},{"style":814},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[816],{"type":568,"value":817}," iceBreakingGame",{"type":563,"tag":585,"props":819,"children":820},{"style":698},[821],{"type":568,"value":822}," =",{"type":563,"tag":585,"props":824,"children":825},{"style":808},[826],{"type":568,"value":827}," function",{"type":563,"tag":585,"props":829,"children":830},{"style":698},[831],{"type":568,"value":832}," (",{"type":563,"tag":585,"props":834,"children":835},{"style":726},[836],{"type":568,"value":837},"num",{"type":563,"tag":585,"props":839,"children":840},{"style":698},[841],{"type":568,"value":842},",",{"type":563,"tag":585,"props":844,"children":845},{"style":726},[846],{"type":568,"value":847}," target",{"type":563,"tag":585,"props":849,"children":850},{"style":698},[851],{"type":568,"value":852},")",{"type":563,"tag":585,"props":854,"children":855},{"style":698},[856],{"type":568,"value":857}," {\n",{"type":563,"tag":585,"props":859,"children":861},{"class":587,"line":860},7,[862,867,872,876,882],{"type":563,"tag":585,"props":863,"children":864},{"style":808},[865],{"type":568,"value":866},"  let",{"type":563,"tag":585,"props":868,"children":869},{"style":726},[870],{"type":568,"value":871}," res",{"type":563,"tag":585,"props":873,"children":874},{"style":698},[875],{"type":568,"value":822},{"type":563,"tag":585,"props":877,"children":879},{"style":878},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[880],{"type":568,"value":881}," 0",{"type":563,"tag":585,"props":883,"children":884},{"style":698},[885],{"type":568,"value":886},";\n",{"type":563,"tag":585,"props":888,"children":890},{"class":587,"line":889},8,[891,896,900,905,910,914,919,924,928,933,938,942,946,951,955],{"type":563,"tag":585,"props":892,"children":893},{"style":704},[894],{"type":568,"value":895},"  for",{"type":563,"tag":585,"props":897,"children":898},{"style":698},[899],{"type":568,"value":832},{"type":563,"tag":585,"props":901,"children":902},{"style":808},[903],{"type":568,"value":904},"let",{"type":563,"tag":585,"props":906,"children":907},{"style":726},[908],{"type":568,"value":909}," i",{"type":563,"tag":585,"props":911,"children":912},{"style":698},[913],{"type":568,"value":822},{"type":563,"tag":585,"props":915,"children":916},{"style":878},[917],{"type":568,"value":918}," 2",{"type":563,"tag":585,"props":920,"children":921},{"style":698},[922],{"type":568,"value":923},";",{"type":563,"tag":585,"props":925,"children":926},{"style":726},[927],{"type":568,"value":909},{"type":563,"tag":585,"props":929,"children":930},{"style":698},[931],{"type":568,"value":932}," \u003C=",{"type":563,"tag":585,"props":934,"children":935},{"style":726},[936],{"type":568,"value":937}," num",{"type":563,"tag":585,"props":939,"children":940},{"style":698},[941],{"type":568,"value":923},{"type":563,"tag":585,"props":943,"children":944},{"style":726},[945],{"type":568,"value":909},{"type":563,"tag":585,"props":947,"children":948},{"style":808},[949],{"type":568,"value":950},"++",{"type":563,"tag":585,"props":952,"children":953},{"style":698},[954],{"type":568,"value":852},{"type":563,"tag":585,"props":956,"children":957},{"style":698},[958],{"type":568,"value":857},{"type":563,"tag":585,"props":960,"children":962},{"class":587,"line":961},9,[963,968,972,976,981,986,990,994,999,1003],{"type":563,"tag":585,"props":964,"children":965},{"style":726},[966],{"type":568,"value":967},"    res",{"type":563,"tag":585,"props":969,"children":970},{"style":698},[971],{"type":568,"value":822},{"type":563,"tag":585,"props":973,"children":974},{"style":698},[975],{"type":568,"value":832},{"type":563,"tag":585,"props":977,"children":978},{"style":726},[979],{"type":568,"value":980},"res",{"type":563,"tag":585,"props":982,"children":983},{"style":808},[984],{"type":568,"value":985}," +",{"type":563,"tag":585,"props":987,"children":988},{"style":726},[989],{"type":568,"value":847},{"type":563,"tag":585,"props":991,"children":992},{"style":698},[993],{"type":568,"value":852},{"type":563,"tag":585,"props":995,"children":996},{"style":808},[997],{"type":568,"value":998}," %",{"type":563,"tag":585,"props":1000,"children":1001},{"style":726},[1002],{"type":568,"value":909},{"type":563,"tag":585,"props":1004,"children":1005},{"style":698},[1006],{"type":568,"value":886},{"type":563,"tag":585,"props":1008,"children":1010},{"class":587,"line":1009},10,[1011],{"type":563,"tag":585,"props":1012,"children":1013},{"style":698},[1014],{"type":568,"value":1015},"  }\n",{"type":563,"tag":585,"props":1017,"children":1019},{"class":587,"line":1018},11,[1020,1025,1029],{"type":563,"tag":585,"props":1021,"children":1022},{"style":704},[1023],{"type":568,"value":1024},"  return",{"type":563,"tag":585,"props":1026,"children":1027},{"style":726},[1028],{"type":568,"value":871},{"type":563,"tag":585,"props":1030,"children":1031},{"style":698},[1032],{"type":568,"value":886},{"type":563,"tag":585,"props":1034,"children":1036},{"class":587,"line":1035},12,[1037],{"type":563,"tag":585,"props":1038,"children":1039},{"style":698},[1040],{"type":568,"value":1041},"};\n",{"type":563,"tag":664,"props":1043,"children":1045},{"id":1044},"数学-递归",[1046],{"type":568,"value":1047},"数学 + 递归",{"type":563,"tag":575,"props":1049,"children":1051},{"className":672,"code":1050,"language":674,"meta":555,"style":555},"/**\n * @param {number} num\n * @param {number} target\n * @return {number}\n */\nvar iceBreakingGame = function (num, target) {\n  const dfs = (n, m) => {\n    if (n === 1) return 0;\n    let x = dfs(n - 1, m);\n    return (m + x) % n;\n  };\n  return dfs(num, target);\n};\n",[1052],{"type":563,"tag":581,"props":1053,"children":1054},{"__ignoreMap":555},[1055,1062,1093,1124,1151,1158,1201,1249,1292,1344,1386,1394,1425],{"type":563,"tag":585,"props":1056,"children":1057},{"class":587,"line":588},[1058],{"type":563,"tag":585,"props":1059,"children":1060},{"style":684},[1061],{"type":568,"value":687},{"type":563,"tag":585,"props":1063,"children":1064},{"class":587,"line":597},[1065,1069,1073,1077,1081,1085,1089],{"type":563,"tag":585,"props":1066,"children":1067},{"style":684},[1068],{"type":568,"value":695},{"type":563,"tag":585,"props":1070,"children":1071},{"style":698},[1072],{"type":568,"value":701},{"type":563,"tag":585,"props":1074,"children":1075},{"style":704},[1076],{"type":568,"value":707},{"type":563,"tag":585,"props":1078,"children":1079},{"style":698},[1080],{"type":568,"value":712},{"type":563,"tag":585,"props":1082,"children":1083},{"style":715},[1084],{"type":568,"value":718},{"type":563,"tag":585,"props":1086,"children":1087},{"style":698},[1088],{"type":568,"value":723},{"type":563,"tag":585,"props":1090,"children":1091},{"style":726},[1092],{"type":568,"value":729},{"type":563,"tag":585,"props":1094,"children":1095},{"class":587,"line":732},[1096,1100,1104,1108,1112,1116,1120],{"type":563,"tag":585,"props":1097,"children":1098},{"style":684},[1099],{"type":568,"value":695},{"type":563,"tag":585,"props":1101,"children":1102},{"style":698},[1103],{"type":568,"value":701},{"type":563,"tag":585,"props":1105,"children":1106},{"style":704},[1107],{"type":568,"value":707},{"type":563,"tag":585,"props":1109,"children":1110},{"style":698},[1111],{"type":568,"value":712},{"type":563,"tag":585,"props":1113,"children":1114},{"style":715},[1115],{"type":568,"value":718},{"type":563,"tag":585,"props":1117,"children":1118},{"style":698},[1119],{"type":568,"value":723},{"type":563,"tag":585,"props":1121,"children":1122},{"style":726},[1123],{"type":568,"value":762},{"type":563,"tag":585,"props":1125,"children":1126},{"class":587,"line":765},[1127,1131,1135,1139,1143,1147],{"type":563,"tag":585,"props":1128,"children":1129},{"style":684},[1130],{"type":568,"value":695},{"type":563,"tag":585,"props":1132,"children":1133},{"style":698},[1134],{"type":568,"value":701},{"type":563,"tag":585,"props":1136,"children":1137},{"style":704},[1138],{"type":568,"value":779},{"type":563,"tag":585,"props":1140,"children":1141},{"style":698},[1142],{"type":568,"value":712},{"type":563,"tag":585,"props":1144,"children":1145},{"style":715},[1146],{"type":568,"value":718},{"type":563,"tag":585,"props":1148,"children":1149},{"style":698},[1150],{"type":568,"value":792},{"type":563,"tag":585,"props":1152,"children":1153},{"class":587,"line":795},[1154],{"type":563,"tag":585,"props":1155,"children":1156},{"style":684},[1157],{"type":568,"value":801},{"type":563,"tag":585,"props":1159,"children":1160},{"class":587,"line":804},[1161,1165,1169,1173,1177,1181,1185,1189,1193,1197],{"type":563,"tag":585,"props":1162,"children":1163},{"style":808},[1164],{"type":568,"value":811},{"type":563,"tag":585,"props":1166,"children":1167},{"style":814},[1168],{"type":568,"value":817},{"type":563,"tag":585,"props":1170,"children":1171},{"style":698},[1172],{"type":568,"value":822},{"type":563,"tag":585,"props":1174,"children":1175},{"style":808},[1176],{"type":568,"value":827},{"type":563,"tag":585,"props":1178,"children":1179},{"style":698},[1180],{"type":568,"value":832},{"type":563,"tag":585,"props":1182,"children":1183},{"style":726},[1184],{"type":568,"value":837},{"type":563,"tag":585,"props":1186,"children":1187},{"style":698},[1188],{"type":568,"value":842},{"type":563,"tag":585,"props":1190,"children":1191},{"style":726},[1192],{"type":568,"value":847},{"type":563,"tag":585,"props":1194,"children":1195},{"style":698},[1196],{"type":568,"value":852},{"type":563,"tag":585,"props":1198,"children":1199},{"style":698},[1200],{"type":568,"value":857},{"type":563,"tag":585,"props":1202,"children":1203},{"class":587,"line":860},[1204,1209,1214,1218,1222,1227,1231,1236,1240,1245],{"type":563,"tag":585,"props":1205,"children":1206},{"style":808},[1207],{"type":568,"value":1208},"  const",{"type":563,"tag":585,"props":1210,"children":1211},{"style":814},[1212],{"type":568,"value":1213}," dfs",{"type":563,"tag":585,"props":1215,"children":1216},{"style":698},[1217],{"type":568,"value":822},{"type":563,"tag":585,"props":1219,"children":1220},{"style":698},[1221],{"type":568,"value":832},{"type":563,"tag":585,"props":1223,"children":1224},{"style":726},[1225],{"type":568,"value":1226},"n",{"type":563,"tag":585,"props":1228,"children":1229},{"style":698},[1230],{"type":568,"value":842},{"type":563,"tag":585,"props":1232,"children":1233},{"style":726},[1234],{"type":568,"value":1235}," m",{"type":563,"tag":585,"props":1237,"children":1238},{"style":698},[1239],{"type":568,"value":852},{"type":563,"tag":585,"props":1241,"children":1242},{"style":698},[1243],{"type":568,"value":1244}," =>",{"type":563,"tag":585,"props":1246,"children":1247},{"style":698},[1248],{"type":568,"value":857},{"type":563,"tag":585,"props":1250,"children":1251},{"class":587,"line":889},[1252,1257,1261,1265,1270,1275,1279,1284,1288],{"type":563,"tag":585,"props":1253,"children":1254},{"style":704},[1255],{"type":568,"value":1256},"    if",{"type":563,"tag":585,"props":1258,"children":1259},{"style":698},[1260],{"type":568,"value":832},{"type":563,"tag":585,"props":1262,"children":1263},{"style":726},[1264],{"type":568,"value":1226},{"type":563,"tag":585,"props":1266,"children":1267},{"style":808},[1268],{"type":568,"value":1269}," ===",{"type":563,"tag":585,"props":1271,"children":1272},{"style":878},[1273],{"type":568,"value":1274}," 1",{"type":563,"tag":585,"props":1276,"children":1277},{"style":698},[1278],{"type":568,"value":852},{"type":563,"tag":585,"props":1280,"children":1281},{"style":704},[1282],{"type":568,"value":1283}," return",{"type":563,"tag":585,"props":1285,"children":1286},{"style":878},[1287],{"type":568,"value":881},{"type":563,"tag":585,"props":1289,"children":1290},{"style":698},[1291],{"type":568,"value":886},{"type":563,"tag":585,"props":1293,"children":1294},{"class":587,"line":961},[1295,1300,1305,1309,1313,1318,1322,1327,1331,1335,1339],{"type":563,"tag":585,"props":1296,"children":1297},{"style":808},[1298],{"type":568,"value":1299},"    let",{"type":563,"tag":585,"props":1301,"children":1302},{"style":726},[1303],{"type":568,"value":1304}," x",{"type":563,"tag":585,"props":1306,"children":1307},{"style":698},[1308],{"type":568,"value":822},{"type":563,"tag":585,"props":1310,"children":1311},{"style":814},[1312],{"type":568,"value":1213},{"type":563,"tag":585,"props":1314,"children":1315},{"style":698},[1316],{"type":568,"value":1317},"(",{"type":563,"tag":585,"props":1319,"children":1320},{"style":726},[1321],{"type":568,"value":1226},{"type":563,"tag":585,"props":1323,"children":1324},{"style":808},[1325],{"type":568,"value":1326}," -",{"type":563,"tag":585,"props":1328,"children":1329},{"style":878},[1330],{"type":568,"value":1274},{"type":563,"tag":585,"props":1332,"children":1333},{"style":698},[1334],{"type":568,"value":842},{"type":563,"tag":585,"props":1336,"children":1337},{"style":726},[1338],{"type":568,"value":1235},{"type":563,"tag":585,"props":1340,"children":1341},{"style":698},[1342],{"type":568,"value":1343},");\n",{"type":563,"tag":585,"props":1345,"children":1346},{"class":587,"line":1009},[1347,1352,1356,1361,1365,1369,1373,1377,1382],{"type":563,"tag":585,"props":1348,"children":1349},{"style":704},[1350],{"type":568,"value":1351},"    return",{"type":563,"tag":585,"props":1353,"children":1354},{"style":698},[1355],{"type":568,"value":832},{"type":563,"tag":585,"props":1357,"children":1358},{"style":726},[1359],{"type":568,"value":1360},"m",{"type":563,"tag":585,"props":1362,"children":1363},{"style":808},[1364],{"type":568,"value":985},{"type":563,"tag":585,"props":1366,"children":1367},{"style":726},[1368],{"type":568,"value":1304},{"type":563,"tag":585,"props":1370,"children":1371},{"style":698},[1372],{"type":568,"value":852},{"type":563,"tag":585,"props":1374,"children":1375},{"style":808},[1376],{"type":568,"value":998},{"type":563,"tag":585,"props":1378,"children":1379},{"style":726},[1380],{"type":568,"value":1381}," n",{"type":563,"tag":585,"props":1383,"children":1384},{"style":698},[1385],{"type":568,"value":886},{"type":563,"tag":585,"props":1387,"children":1388},{"class":587,"line":1018},[1389],{"type":563,"tag":585,"props":1390,"children":1391},{"style":698},[1392],{"type":568,"value":1393},"  };\n",{"type":563,"tag":585,"props":1395,"children":1396},{"class":587,"line":1035},[1397,1401,1405,1409,1413,1417,1421],{"type":563,"tag":585,"props":1398,"children":1399},{"style":704},[1400],{"type":568,"value":1024},{"type":563,"tag":585,"props":1402,"children":1403},{"style":814},[1404],{"type":568,"value":1213},{"type":563,"tag":585,"props":1406,"children":1407},{"style":698},[1408],{"type":568,"value":1317},{"type":563,"tag":585,"props":1410,"children":1411},{"style":726},[1412],{"type":568,"value":837},{"type":563,"tag":585,"props":1414,"children":1415},{"style":698},[1416],{"type":568,"value":842},{"type":563,"tag":585,"props":1418,"children":1419},{"style":726},[1420],{"type":568,"value":847},{"type":563,"tag":585,"props":1422,"children":1423},{"style":698},[1424],{"type":568,"value":1343},{"type":563,"tag":585,"props":1426,"children":1428},{"class":587,"line":1427},13,[1429],{"type":563,"tag":585,"props":1430,"children":1431},{"style":698},[1432],{"type":568,"value":1041},{"type":563,"tag":1434,"props":1435,"children":1436},"style",{},[1437],{"type":568,"value":1438},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":555,"searchDepth":795,"depth":795,"links":1440},[1441,1442],{"id":655,"depth":597,"text":655},{"id":660,"depth":597,"text":660,"children":1443},[1444,1445],{"id":666,"depth":732,"text":669},{"id":1044,"depth":732,"text":1047},"markdown","content:1.algorithm:3.leetcode:2.sword-ofter:187.yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof.md","content","1.algorithm/3.leetcode/2.sword-ofter/187.yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof.md","md",[1452,1454],{"_path":50,"title":49,"description":1453},"某套连招动作记作仅由小写字母组成的序列 arr，其中 arr[i] 第 i 个招式的名字。请返回第一个只出现一次的招式名称，如不存在请返回空格。",{"_path":60,"title":59,"description":1455},"给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target 的那\"两个\"整数，并返回它们的数组下标。",1715137594003]