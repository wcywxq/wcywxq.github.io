[{"data":1,"prerenderedAt":2130},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/longest-increasing-subsequence":549,"/algorithm/leetcode/major/longest-increasing-subsequence-surround":2125},[4,272,301,517,525,534],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":516},"代码考核","/code-assessment",[305,407,509],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,340,356,384,391,398,401,404],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342,"children":343},"函数 Function","/code-assessment/source/function",[344,347,350,353],{"title":345,"_path":346},"函数防抖","/code-assessment/source/function/debounce",{"title":348,"_path":349},"函数节流","/code-assessment/source/function/throttle",{"title":351,"_path":352},"函数柯理化","/code-assessment/source/function/curry",{"title":354,"_path":355},"函数睡眠","/code-assessment/source/function/sleep",{"title":357,"_path":358,"children":359},"数组 Array","/code-assessment/source/array",[360,363,366,369,372,375,378,381],{"title":361,"_path":362},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":364,"_path":365},"数组扁平化","/code-assessment/source/array/flat",{"title":367,"_path":368},"原型方法","/code-assessment/source/array/prototype-method",{"title":370,"_path":371},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":373,"_path":374},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":376,"_path":377},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":379,"_path":380},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":382,"_path":383},"二维数组","/code-assessment/source/array/2d-array",{"title":385,"_path":386,"children":387},"字符串 String","/code-assessment/source/string",[388],{"title":389,"_path":390},"repeat()","/code-assessment/source/string/repeat",{"title":392,"_path":393,"children":394},"集合 Set","/code-assessment/source/set",[395],{"title":396,"_path":397},"遍历集合","/code-assessment/source/set/traverse",{"title":399,"_path":400},"获取通用类型","/code-assessment/source/get-generic-type",{"title":402,"_path":403},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":405,"_path":406},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":408,"_path":409,"children":410},"业务场景","/code-assessment/scene",[411,442,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506],{"title":412,"_path":413,"children":414},"Promise","/code-assessment/scene/promise",[415,418,421,424,427,430,433,436,439],{"title":416,"_path":417},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":419,"_path":420},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":422,"_path":423},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":425,"_path":426},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":428,"_path":429},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":431,"_path":432},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":434,"_path":435},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":437,"_path":438},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":440,"_path":441},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":443,"_path":444,"children":445},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[446,449],{"title":447,"_path":448},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":450,"_path":451},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":453,"_path":454},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":456,"_path":457},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":459,"_path":460},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":462,"_path":463},"倒计时","/code-assessment/scene/countdown",{"title":465,"_path":466},"日期格式化","/code-assessment/scene/date-format",{"title":468,"_path":469},"实现前端路由","/code-assessment/scene/frontend-route",{"title":471,"_path":472},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":474,"_path":475},"lodash.get","/code-assessment/scene/lodash-get",{"title":477,"_path":478},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":480,"_path":481},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":483,"_path":484},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":486,"_path":487},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":489,"_path":490},"随机数","/code-assessment/scene/random-number",{"title":492,"_path":493},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":495,"_path":496},"sku 算法实现","/code-assessment/scene/sku",{"title":498,"_path":499},"整数分割","/code-assessment/scene/split-number",{"title":501,"_path":502},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":504,"_path":505},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":507,"_path":508},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":510,"_path":511,"children":512},"Ts 类型挑战","/code-assessment/type-challeges",[513],{"title":514,"_path":515},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":518,"_path":519,"children":520,"icon":524},"项目","/project",[521],{"title":522,"_path":523},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":526,"_path":527,"children":528,"icon":533},"设计模式","/design-mode",[529,530],{"title":526,"_path":527},{"title":531,"_path":532},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":535,"_path":536,"children":537,"icon":548},"后端语言","/backend-languages",[538],{"title":539,"_path":540,"children":541},"Python","/backend-languages/python",[542,545],{"title":543,"_path":544},"基础","/backend-languages/python/base",{"title":546,"_path":547},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":219,"_dir":550,"_draft":551,"_partial":551,"_locale":552,"title":218,"description":553,"url":554,"body":555,"_type":2120,"_id":2121,"_source":2122,"_file":2123,"_extension":2124},"major",false,"","给你一个整数数组 nums ，找到其中最长严格递增子序列的长度。","https://leetcode.cn/problems/longest-increasing-subsequence",{"type":556,"children":557,"toc":2113},"root",[558,565,570,575,614,619,641,646,669,674,689,694,699,705,710,717,748,1403,1408,1416,1421,1429,1434,1439,1447,1452,1460,1465,1473,1478,1487,1495,1509,2107],{"type":559,"tag":560,"props":561,"children":562},"element","p",{},[563],{"type":564,"value":553},"text",{"type":559,"tag":560,"props":566,"children":567},{},[568],{"type":564,"value":569},"子序列 是由数组派生而来的序列，删除（或不删除）数组中的元素而不改变其余元素的顺序。例如，[3,6,2,7] 是数组 [0,3,1,6,2,2,7] 的\n子序列\n。",{"type":559,"tag":560,"props":571,"children":572},{},[573],{"type":564,"value":574},"示例 1：",{"type":559,"tag":576,"props":577,"children":580},"pre",{"className":578,"code":579,"language":564,"meta":552,"style":552},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [10,9,2,5,3,7,101,18]\n输出：4\n解释：最长递增子序列是 [2,3,7,101]，因此长度为 4 。\n",[581],{"type":559,"tag":582,"props":583,"children":584},"code",{"__ignoreMap":552},[585,596,605],{"type":559,"tag":586,"props":587,"children":590},"span",{"class":588,"line":589},"line",1,[591],{"type":559,"tag":586,"props":592,"children":593},{},[594],{"type":564,"value":595},"输入：nums = [10,9,2,5,3,7,101,18]\n",{"type":559,"tag":586,"props":597,"children":599},{"class":588,"line":598},2,[600],{"type":559,"tag":586,"props":601,"children":602},{},[603],{"type":564,"value":604},"输出：4\n",{"type":559,"tag":586,"props":606,"children":608},{"class":588,"line":607},3,[609],{"type":559,"tag":586,"props":610,"children":611},{},[612],{"type":564,"value":613},"解释：最长递增子序列是 [2,3,7,101]，因此长度为 4 。\n",{"type":559,"tag":560,"props":615,"children":616},{},[617],{"type":564,"value":618},"示例 2：",{"type":559,"tag":576,"props":620,"children":622},{"className":578,"code":621,"language":564,"meta":552,"style":552},"输入：nums = [0,1,0,3,2,3]\n输出：4\n",[623],{"type":559,"tag":582,"props":624,"children":625},{"__ignoreMap":552},[626,634],{"type":559,"tag":586,"props":627,"children":628},{"class":588,"line":589},[629],{"type":559,"tag":586,"props":630,"children":631},{},[632],{"type":564,"value":633},"输入：nums = [0,1,0,3,2,3]\n",{"type":559,"tag":586,"props":635,"children":636},{"class":588,"line":598},[637],{"type":559,"tag":586,"props":638,"children":639},{},[640],{"type":564,"value":604},{"type":559,"tag":560,"props":642,"children":643},{},[644],{"type":564,"value":645},"示例 3：",{"type":559,"tag":576,"props":647,"children":649},{"className":578,"code":648,"language":564,"meta":552,"style":552},"输入：nums = [7,7,7,7,7,7,7]\n输出：1\n",[650],{"type":559,"tag":582,"props":651,"children":652},{"__ignoreMap":552},[653,661],{"type":559,"tag":586,"props":654,"children":655},{"class":588,"line":589},[656],{"type":559,"tag":586,"props":657,"children":658},{},[659],{"type":564,"value":660},"输入：nums = [7,7,7,7,7,7,7]\n",{"type":559,"tag":586,"props":662,"children":663},{"class":588,"line":598},[664],{"type":559,"tag":586,"props":665,"children":666},{},[667],{"type":564,"value":668},"输出：1\n",{"type":559,"tag":560,"props":670,"children":671},{},[672],{"type":564,"value":673},"提示：",{"type":559,"tag":675,"props":676,"children":677},"ul",{},[678,684],{"type":559,"tag":679,"props":680,"children":681},"li",{},[682],{"type":564,"value":683},"1 \u003C= nums.length \u003C= 2500",{"type":559,"tag":679,"props":685,"children":686},{},[687],{"type":564,"value":688},"-10^4 \u003C= nums[i] \u003C= 10^4",{"type":559,"tag":560,"props":690,"children":691},{},[692],{"type":564,"value":693},"进阶：",{"type":559,"tag":560,"props":695,"children":696},{},[697],{"type":564,"value":698},"你能将算法的时间复杂度降低到 O(n log(n)) 吗?",{"type":559,"tag":700,"props":701,"children":703},"h2",{"id":702},"解题思路",[704],{"type":564,"value":702},{"type":559,"tag":700,"props":706,"children":708},{"id":707},"实现",[709],{"type":564,"value":707},{"type":559,"tag":711,"props":712,"children":714},"h3",{"id":713},"贪心-查找",[715],{"type":564,"value":716},"贪心 + 查找",{"type":559,"tag":675,"props":718,"children":719},{},[720,725,743],{"type":559,"tag":679,"props":721,"children":722},{},[723],{"type":564,"value":724},"贪心思路：如果要使上升子序列尽可能的长，则需要让序列上升得尽可能慢，因此希望每次在上升子序列最后加上的那个数尽可能的小。",{"type":559,"tag":679,"props":726,"children":727},{},[728,730],{"type":564,"value":729},"算法流程：\n",{"type":559,"tag":675,"props":731,"children":732},{},[733,738],{"type":559,"tag":679,"props":734,"children":735},{},[736],{"type":564,"value":737},"当遍历的数字 > 记录最后一项末尾数字时，新增记录",{"type":559,"tag":679,"props":739,"children":740},{},[741],{"type":564,"value":742},"否则，找到记录中第一个末尾大于该数字的记录(可用二分查找进行优化)，更改其末尾",{"type":559,"tag":679,"props":744,"children":745},{},[746],{"type":564,"value":747},"优化：由于都是通过操作末尾项，因此可以转换为一维数组来解决此问题",{"type":559,"tag":576,"props":749,"children":753},{"className":750,"code":751,"language":752,"meta":552,"style":552},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar lengthOfLIS = function (nums) {\n  if (nums.length === 0) return 0\n\n  const tails = [nums[0]] // 原数组第 0 项\n\n  for (let i = 1; i \u003C nums.length; i++) {\n    if (nums[i] > tails[tails.length - 1]) {\n      tails.push(nums[i])\n    } else {\n      // 这里的查找方式可以优化为二分查找\n      const index = tails.findIndex(x => x >= nums[i])\n      tails[index] = nums[i]\n    }\n  }\n\n  return tails.length\n};\n","js",[754],{"type":559,"tag":582,"props":755,"children":756},{"__ignoreMap":552},[757,766,808,838,847,893,946,956,1003,1011,1091,1166,1206,1224,1233,1304,1346,1355,1364,1372,1394],{"type":559,"tag":586,"props":758,"children":759},{"class":588,"line":589},[760],{"type":559,"tag":586,"props":761,"children":763},{"style":762},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[764],{"type":564,"value":765},"/**\n",{"type":559,"tag":586,"props":767,"children":768},{"class":588,"line":598},[769,774,780,786,791,797,802],{"type":559,"tag":586,"props":770,"children":771},{"style":762},[772],{"type":564,"value":773}," * ",{"type":559,"tag":586,"props":775,"children":777},{"style":776},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[778],{"type":564,"value":779},"@",{"type":559,"tag":586,"props":781,"children":783},{"style":782},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[784],{"type":564,"value":785},"param",{"type":559,"tag":586,"props":787,"children":788},{"style":776},[789],{"type":564,"value":790}," {",{"type":559,"tag":586,"props":792,"children":794},{"style":793},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[795],{"type":564,"value":796},"number[]",{"type":559,"tag":586,"props":798,"children":799},{"style":776},[800],{"type":564,"value":801},"}",{"type":559,"tag":586,"props":803,"children":805},{"style":804},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[806],{"type":564,"value":807}," nums\n",{"type":559,"tag":586,"props":809,"children":810},{"class":588,"line":607},[811,815,819,824,828,833],{"type":559,"tag":586,"props":812,"children":813},{"style":762},[814],{"type":564,"value":773},{"type":559,"tag":586,"props":816,"children":817},{"style":776},[818],{"type":564,"value":779},{"type":559,"tag":586,"props":820,"children":821},{"style":782},[822],{"type":564,"value":823},"return",{"type":559,"tag":586,"props":825,"children":826},{"style":776},[827],{"type":564,"value":790},{"type":559,"tag":586,"props":829,"children":830},{"style":793},[831],{"type":564,"value":832},"number",{"type":559,"tag":586,"props":834,"children":835},{"style":776},[836],{"type":564,"value":837},"}\n",{"type":559,"tag":586,"props":839,"children":841},{"class":588,"line":840},4,[842],{"type":559,"tag":586,"props":843,"children":844},{"style":762},[845],{"type":564,"value":846}," */\n",{"type":559,"tag":586,"props":848,"children":850},{"class":588,"line":849},5,[851,857,863,868,873,878,883,888],{"type":559,"tag":586,"props":852,"children":854},{"style":853},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[855],{"type":564,"value":856},"var",{"type":559,"tag":586,"props":858,"children":860},{"style":859},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[861],{"type":564,"value":862}," lengthOfLIS",{"type":559,"tag":586,"props":864,"children":865},{"style":776},[866],{"type":564,"value":867}," =",{"type":559,"tag":586,"props":869,"children":870},{"style":853},[871],{"type":564,"value":872}," function",{"type":559,"tag":586,"props":874,"children":875},{"style":776},[876],{"type":564,"value":877}," (",{"type":559,"tag":586,"props":879,"children":880},{"style":804},[881],{"type":564,"value":882},"nums",{"type":559,"tag":586,"props":884,"children":885},{"style":776},[886],{"type":564,"value":887},")",{"type":559,"tag":586,"props":889,"children":890},{"style":776},[891],{"type":564,"value":892}," {\n",{"type":559,"tag":586,"props":894,"children":896},{"class":588,"line":895},6,[897,902,906,910,915,921,926,932,936,941],{"type":559,"tag":586,"props":898,"children":899},{"style":782},[900],{"type":564,"value":901},"  if",{"type":559,"tag":586,"props":903,"children":904},{"style":776},[905],{"type":564,"value":877},{"type":559,"tag":586,"props":907,"children":908},{"style":804},[909],{"type":564,"value":882},{"type":559,"tag":586,"props":911,"children":912},{"style":776},[913],{"type":564,"value":914},".",{"type":559,"tag":586,"props":916,"children":918},{"style":917},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[919],{"type":564,"value":920},"length",{"type":559,"tag":586,"props":922,"children":923},{"style":853},[924],{"type":564,"value":925}," ===",{"type":559,"tag":586,"props":927,"children":929},{"style":928},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[930],{"type":564,"value":931}," 0",{"type":559,"tag":586,"props":933,"children":934},{"style":776},[935],{"type":564,"value":887},{"type":559,"tag":586,"props":937,"children":938},{"style":782},[939],{"type":564,"value":940}," return",{"type":559,"tag":586,"props":942,"children":943},{"style":928},[944],{"type":564,"value":945}," 0\n",{"type":559,"tag":586,"props":947,"children":949},{"class":588,"line":948},7,[950],{"type":559,"tag":586,"props":951,"children":953},{"emptyLinePlaceholder":952},true,[954],{"type":564,"value":955},"\n",{"type":559,"tag":586,"props":957,"children":959},{"class":588,"line":958},8,[960,965,970,974,979,983,988,993,998],{"type":559,"tag":586,"props":961,"children":962},{"style":853},[963],{"type":564,"value":964},"  const",{"type":559,"tag":586,"props":966,"children":967},{"style":804},[968],{"type":564,"value":969}," tails",{"type":559,"tag":586,"props":971,"children":972},{"style":776},[973],{"type":564,"value":867},{"type":559,"tag":586,"props":975,"children":976},{"style":776},[977],{"type":564,"value":978}," [",{"type":559,"tag":586,"props":980,"children":981},{"style":804},[982],{"type":564,"value":882},{"type":559,"tag":586,"props":984,"children":985},{"style":776},[986],{"type":564,"value":987},"[",{"type":559,"tag":586,"props":989,"children":990},{"style":928},[991],{"type":564,"value":992},"0",{"type":559,"tag":586,"props":994,"children":995},{"style":776},[996],{"type":564,"value":997},"]]",{"type":559,"tag":586,"props":999,"children":1000},{"style":762},[1001],{"type":564,"value":1002}," // 原数组第 0 项\n",{"type":559,"tag":586,"props":1004,"children":1006},{"class":588,"line":1005},9,[1007],{"type":559,"tag":586,"props":1008,"children":1009},{"emptyLinePlaceholder":952},[1010],{"type":564,"value":955},{"type":559,"tag":586,"props":1012,"children":1014},{"class":588,"line":1013},10,[1015,1020,1024,1029,1034,1038,1043,1048,1052,1057,1062,1066,1070,1074,1078,1083,1087],{"type":559,"tag":586,"props":1016,"children":1017},{"style":782},[1018],{"type":564,"value":1019},"  for",{"type":559,"tag":586,"props":1021,"children":1022},{"style":776},[1023],{"type":564,"value":877},{"type":559,"tag":586,"props":1025,"children":1026},{"style":853},[1027],{"type":564,"value":1028},"let",{"type":559,"tag":586,"props":1030,"children":1031},{"style":804},[1032],{"type":564,"value":1033}," i",{"type":559,"tag":586,"props":1035,"children":1036},{"style":776},[1037],{"type":564,"value":867},{"type":559,"tag":586,"props":1039,"children":1040},{"style":928},[1041],{"type":564,"value":1042}," 1",{"type":559,"tag":586,"props":1044,"children":1045},{"style":776},[1046],{"type":564,"value":1047},";",{"type":559,"tag":586,"props":1049,"children":1050},{"style":804},[1051],{"type":564,"value":1033},{"type":559,"tag":586,"props":1053,"children":1054},{"style":776},[1055],{"type":564,"value":1056}," \u003C",{"type":559,"tag":586,"props":1058,"children":1059},{"style":804},[1060],{"type":564,"value":1061}," nums",{"type":559,"tag":586,"props":1063,"children":1064},{"style":776},[1065],{"type":564,"value":914},{"type":559,"tag":586,"props":1067,"children":1068},{"style":917},[1069],{"type":564,"value":920},{"type":559,"tag":586,"props":1071,"children":1072},{"style":776},[1073],{"type":564,"value":1047},{"type":559,"tag":586,"props":1075,"children":1076},{"style":804},[1077],{"type":564,"value":1033},{"type":559,"tag":586,"props":1079,"children":1080},{"style":853},[1081],{"type":564,"value":1082},"++",{"type":559,"tag":586,"props":1084,"children":1085},{"style":776},[1086],{"type":564,"value":887},{"type":559,"tag":586,"props":1088,"children":1089},{"style":776},[1090],{"type":564,"value":892},{"type":559,"tag":586,"props":1092,"children":1094},{"class":588,"line":1093},11,[1095,1100,1104,1108,1112,1117,1122,1127,1131,1135,1140,1144,1148,1153,1157,1162],{"type":559,"tag":586,"props":1096,"children":1097},{"style":782},[1098],{"type":564,"value":1099},"    if",{"type":559,"tag":586,"props":1101,"children":1102},{"style":776},[1103],{"type":564,"value":877},{"type":559,"tag":586,"props":1105,"children":1106},{"style":804},[1107],{"type":564,"value":882},{"type":559,"tag":586,"props":1109,"children":1110},{"style":776},[1111],{"type":564,"value":987},{"type":559,"tag":586,"props":1113,"children":1114},{"style":804},[1115],{"type":564,"value":1116},"i",{"type":559,"tag":586,"props":1118,"children":1119},{"style":776},[1120],{"type":564,"value":1121},"]",{"type":559,"tag":586,"props":1123,"children":1124},{"style":776},[1125],{"type":564,"value":1126}," >",{"type":559,"tag":586,"props":1128,"children":1129},{"style":804},[1130],{"type":564,"value":969},{"type":559,"tag":586,"props":1132,"children":1133},{"style":776},[1134],{"type":564,"value":987},{"type":559,"tag":586,"props":1136,"children":1137},{"style":804},[1138],{"type":564,"value":1139},"tails",{"type":559,"tag":586,"props":1141,"children":1142},{"style":776},[1143],{"type":564,"value":914},{"type":559,"tag":586,"props":1145,"children":1146},{"style":917},[1147],{"type":564,"value":920},{"type":559,"tag":586,"props":1149,"children":1150},{"style":853},[1151],{"type":564,"value":1152}," -",{"type":559,"tag":586,"props":1154,"children":1155},{"style":928},[1156],{"type":564,"value":1042},{"type":559,"tag":586,"props":1158,"children":1159},{"style":776},[1160],{"type":564,"value":1161},"])",{"type":559,"tag":586,"props":1163,"children":1164},{"style":776},[1165],{"type":564,"value":892},{"type":559,"tag":586,"props":1167,"children":1169},{"class":588,"line":1168},12,[1170,1175,1179,1184,1189,1193,1197,1201],{"type":559,"tag":586,"props":1171,"children":1172},{"style":804},[1173],{"type":564,"value":1174},"      tails",{"type":559,"tag":586,"props":1176,"children":1177},{"style":776},[1178],{"type":564,"value":914},{"type":559,"tag":586,"props":1180,"children":1181},{"style":859},[1182],{"type":564,"value":1183},"push",{"type":559,"tag":586,"props":1185,"children":1186},{"style":776},[1187],{"type":564,"value":1188},"(",{"type":559,"tag":586,"props":1190,"children":1191},{"style":804},[1192],{"type":564,"value":882},{"type":559,"tag":586,"props":1194,"children":1195},{"style":776},[1196],{"type":564,"value":987},{"type":559,"tag":586,"props":1198,"children":1199},{"style":804},[1200],{"type":564,"value":1116},{"type":559,"tag":586,"props":1202,"children":1203},{"style":776},[1204],{"type":564,"value":1205},"])\n",{"type":559,"tag":586,"props":1207,"children":1209},{"class":588,"line":1208},13,[1210,1215,1220],{"type":559,"tag":586,"props":1211,"children":1212},{"style":776},[1213],{"type":564,"value":1214},"    }",{"type":559,"tag":586,"props":1216,"children":1217},{"style":782},[1218],{"type":564,"value":1219}," else",{"type":559,"tag":586,"props":1221,"children":1222},{"style":776},[1223],{"type":564,"value":892},{"type":559,"tag":586,"props":1225,"children":1227},{"class":588,"line":1226},14,[1228],{"type":559,"tag":586,"props":1229,"children":1230},{"style":762},[1231],{"type":564,"value":1232},"      // 这里的查找方式可以优化为二分查找\n",{"type":559,"tag":586,"props":1234,"children":1236},{"class":588,"line":1235},15,[1237,1242,1247,1251,1255,1259,1264,1268,1273,1278,1283,1288,1292,1296,1300],{"type":559,"tag":586,"props":1238,"children":1239},{"style":853},[1240],{"type":564,"value":1241},"      const",{"type":559,"tag":586,"props":1243,"children":1244},{"style":804},[1245],{"type":564,"value":1246}," index",{"type":559,"tag":586,"props":1248,"children":1249},{"style":776},[1250],{"type":564,"value":867},{"type":559,"tag":586,"props":1252,"children":1253},{"style":804},[1254],{"type":564,"value":969},{"type":559,"tag":586,"props":1256,"children":1257},{"style":776},[1258],{"type":564,"value":914},{"type":559,"tag":586,"props":1260,"children":1261},{"style":859},[1262],{"type":564,"value":1263},"findIndex",{"type":559,"tag":586,"props":1265,"children":1266},{"style":776},[1267],{"type":564,"value":1188},{"type":559,"tag":586,"props":1269,"children":1270},{"style":804},[1271],{"type":564,"value":1272},"x",{"type":559,"tag":586,"props":1274,"children":1275},{"style":776},[1276],{"type":564,"value":1277}," =>",{"type":559,"tag":586,"props":1279,"children":1280},{"style":804},[1281],{"type":564,"value":1282}," x",{"type":559,"tag":586,"props":1284,"children":1285},{"style":776},[1286],{"type":564,"value":1287}," >=",{"type":559,"tag":586,"props":1289,"children":1290},{"style":804},[1291],{"type":564,"value":1061},{"type":559,"tag":586,"props":1293,"children":1294},{"style":776},[1295],{"type":564,"value":987},{"type":559,"tag":586,"props":1297,"children":1298},{"style":804},[1299],{"type":564,"value":1116},{"type":559,"tag":586,"props":1301,"children":1302},{"style":776},[1303],{"type":564,"value":1205},{"type":559,"tag":586,"props":1305,"children":1307},{"class":588,"line":1306},16,[1308,1312,1316,1321,1325,1329,1333,1337,1341],{"type":559,"tag":586,"props":1309,"children":1310},{"style":804},[1311],{"type":564,"value":1174},{"type":559,"tag":586,"props":1313,"children":1314},{"style":776},[1315],{"type":564,"value":987},{"type":559,"tag":586,"props":1317,"children":1318},{"style":804},[1319],{"type":564,"value":1320},"index",{"type":559,"tag":586,"props":1322,"children":1323},{"style":776},[1324],{"type":564,"value":1121},{"type":559,"tag":586,"props":1326,"children":1327},{"style":776},[1328],{"type":564,"value":867},{"type":559,"tag":586,"props":1330,"children":1331},{"style":804},[1332],{"type":564,"value":1061},{"type":559,"tag":586,"props":1334,"children":1335},{"style":776},[1336],{"type":564,"value":987},{"type":559,"tag":586,"props":1338,"children":1339},{"style":804},[1340],{"type":564,"value":1116},{"type":559,"tag":586,"props":1342,"children":1343},{"style":776},[1344],{"type":564,"value":1345},"]\n",{"type":559,"tag":586,"props":1347,"children":1349},{"class":588,"line":1348},17,[1350],{"type":559,"tag":586,"props":1351,"children":1352},{"style":776},[1353],{"type":564,"value":1354},"    }\n",{"type":559,"tag":586,"props":1356,"children":1358},{"class":588,"line":1357},18,[1359],{"type":559,"tag":586,"props":1360,"children":1361},{"style":776},[1362],{"type":564,"value":1363},"  }\n",{"type":559,"tag":586,"props":1365,"children":1367},{"class":588,"line":1366},19,[1368],{"type":559,"tag":586,"props":1369,"children":1370},{"emptyLinePlaceholder":952},[1371],{"type":564,"value":955},{"type":559,"tag":586,"props":1373,"children":1375},{"class":588,"line":1374},20,[1376,1381,1385,1389],{"type":559,"tag":586,"props":1377,"children":1378},{"style":782},[1379],{"type":564,"value":1380},"  return",{"type":559,"tag":586,"props":1382,"children":1383},{"style":804},[1384],{"type":564,"value":969},{"type":559,"tag":586,"props":1386,"children":1387},{"style":776},[1388],{"type":564,"value":914},{"type":559,"tag":586,"props":1390,"children":1391},{"style":917},[1392],{"type":564,"value":1393},"length\n",{"type":559,"tag":586,"props":1395,"children":1397},{"class":588,"line":1396},21,[1398],{"type":559,"tag":586,"props":1399,"children":1400},{"style":776},[1401],{"type":564,"value":1402},"};\n",{"type":559,"tag":711,"props":1404,"children":1406},{"id":1405},"动态规划",[1407],{"type":564,"value":1405},{"type":559,"tag":675,"props":1409,"children":1410},{},[1411],{"type":559,"tag":679,"props":1412,"children":1413},{},[1414],{"type":564,"value":1415},"确定 dp 数组及下标含义",{"type":559,"tag":560,"props":1417,"children":1418},{},[1419],{"type":564,"value":1420},"dp[i] 表示 [0, i] 区间内以 nums[i] 结尾的最长递增子序列的长度",{"type":559,"tag":675,"props":1422,"children":1423},{},[1424],{"type":559,"tag":679,"props":1425,"children":1426},{},[1427],{"type":564,"value":1428},"确定递推公式：dp[i] = Math.max(dp[i], dp[j] + 1)",{"type":559,"tag":560,"props":1430,"children":1431},{},[1432],{"type":564,"value":1433},"如果 nums[i] > nums[j] 则说明当前元素复合递增子序列，则 dp[i] = Math.max(dp[i], dp[j] + 1)",{"type":559,"tag":560,"props":1435,"children":1436},{},[1437],{"type":564,"value":1438},"如果 nums[i] \u003C nums[j] 则说明当前元素不符合递增子序列，则什么都不做",{"type":559,"tag":675,"props":1440,"children":1441},{},[1442],{"type":559,"tag":679,"props":1443,"children":1444},{},[1445],{"type":564,"value":1446},"如何初始化 dp 数组",{"type":559,"tag":560,"props":1448,"children":1449},{},[1450],{"type":564,"value":1451},"每一个 i，对应的 dp[i] (即最长递增子序列)起始大小至少都是 1",{"type":559,"tag":675,"props":1453,"children":1454},{},[1455],{"type":559,"tag":679,"props":1456,"children":1457},{},[1458],{"type":564,"value":1459},"确定遍历顺序",{"type":559,"tag":560,"props":1461,"children":1462},{},[1463],{"type":564,"value":1464},"dp[i] 是有 [0, i-1] 各个位置的最长递增子序列推导而来，那么遍历 i 一定是从前向后遍历",{"type":559,"tag":675,"props":1466,"children":1467},{},[1468],{"type":559,"tag":679,"props":1469,"children":1470},{},[1471],{"type":564,"value":1472},"举例推导 dp 数组",{"type":559,"tag":560,"props":1474,"children":1475},{},[1476],{"type":564,"value":1477},"以 nums = [1, 3, 6, 7, 9, 4, 10, 5, 6] 为例：",{"type":559,"tag":560,"props":1479,"children":1480},{},[1481],{"type":559,"tag":1482,"props":1483,"children":1486},"img",{"alt":1484,"src":1485},"table","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.300_table.png",[],{"type":559,"tag":675,"props":1488,"children":1489},{},[1490],{"type":559,"tag":679,"props":1491,"children":1492},{},[1493],{"type":564,"value":1494},"复杂度",{"type":559,"tag":1496,"props":1497,"children":1498},"ol",{},[1499,1504],{"type":559,"tag":679,"props":1500,"children":1501},{},[1502],{"type":564,"value":1503},"时间复杂度：O(n^2)，遍历计算 dp 列表需 O(n)，计算每个 dp[i] 需 O(n)",{"type":559,"tag":679,"props":1505,"children":1506},{},[1507],{"type":564,"value":1508},"空间复杂度：O(n)",{"type":559,"tag":576,"props":1510,"children":1512},{"className":750,"code":1511,"language":752,"meta":552,"style":552},"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar lengthOfLIS = function (nums) {\n  let n = nums.length;\n  if (n === 0) return 0;\n\n  let dp = new Array(n).fill(1);\n\n  for (let i = 0; i \u003C n; i++) {\n    for (let j = 0; j \u003C i; j++) {\n      if (nums[i] > nums[j]) {\n        dp[i] = Math.max(dp[i], dp[j] + 1);\n      }\n    }\n  }\n\n  return Math.max(...dp);\n};\n",[1513],{"type":559,"tag":582,"props":1514,"children":1515},{"__ignoreMap":552},[1516,1523,1554,1581,1588,1623,1657,1697,1704,1762,1769,1832,1897,1950,2039,2047,2054,2061,2068,2100],{"type":559,"tag":586,"props":1517,"children":1518},{"class":588,"line":589},[1519],{"type":559,"tag":586,"props":1520,"children":1521},{"style":762},[1522],{"type":564,"value":765},{"type":559,"tag":586,"props":1524,"children":1525},{"class":588,"line":598},[1526,1530,1534,1538,1542,1546,1550],{"type":559,"tag":586,"props":1527,"children":1528},{"style":762},[1529],{"type":564,"value":773},{"type":559,"tag":586,"props":1531,"children":1532},{"style":776},[1533],{"type":564,"value":779},{"type":559,"tag":586,"props":1535,"children":1536},{"style":782},[1537],{"type":564,"value":785},{"type":559,"tag":586,"props":1539,"children":1540},{"style":776},[1541],{"type":564,"value":790},{"type":559,"tag":586,"props":1543,"children":1544},{"style":793},[1545],{"type":564,"value":796},{"type":559,"tag":586,"props":1547,"children":1548},{"style":776},[1549],{"type":564,"value":801},{"type":559,"tag":586,"props":1551,"children":1552},{"style":804},[1553],{"type":564,"value":807},{"type":559,"tag":586,"props":1555,"children":1556},{"class":588,"line":607},[1557,1561,1565,1569,1573,1577],{"type":559,"tag":586,"props":1558,"children":1559},{"style":762},[1560],{"type":564,"value":773},{"type":559,"tag":586,"props":1562,"children":1563},{"style":776},[1564],{"type":564,"value":779},{"type":559,"tag":586,"props":1566,"children":1567},{"style":782},[1568],{"type":564,"value":823},{"type":559,"tag":586,"props":1570,"children":1571},{"style":776},[1572],{"type":564,"value":790},{"type":559,"tag":586,"props":1574,"children":1575},{"style":793},[1576],{"type":564,"value":832},{"type":559,"tag":586,"props":1578,"children":1579},{"style":776},[1580],{"type":564,"value":837},{"type":559,"tag":586,"props":1582,"children":1583},{"class":588,"line":840},[1584],{"type":559,"tag":586,"props":1585,"children":1586},{"style":762},[1587],{"type":564,"value":846},{"type":559,"tag":586,"props":1589,"children":1590},{"class":588,"line":849},[1591,1595,1599,1603,1607,1611,1615,1619],{"type":559,"tag":586,"props":1592,"children":1593},{"style":853},[1594],{"type":564,"value":856},{"type":559,"tag":586,"props":1596,"children":1597},{"style":859},[1598],{"type":564,"value":862},{"type":559,"tag":586,"props":1600,"children":1601},{"style":776},[1602],{"type":564,"value":867},{"type":559,"tag":586,"props":1604,"children":1605},{"style":853},[1606],{"type":564,"value":872},{"type":559,"tag":586,"props":1608,"children":1609},{"style":776},[1610],{"type":564,"value":877},{"type":559,"tag":586,"props":1612,"children":1613},{"style":804},[1614],{"type":564,"value":882},{"type":559,"tag":586,"props":1616,"children":1617},{"style":776},[1618],{"type":564,"value":887},{"type":559,"tag":586,"props":1620,"children":1621},{"style":776},[1622],{"type":564,"value":892},{"type":559,"tag":586,"props":1624,"children":1625},{"class":588,"line":895},[1626,1631,1636,1640,1644,1648,1652],{"type":559,"tag":586,"props":1627,"children":1628},{"style":853},[1629],{"type":564,"value":1630},"  let",{"type":559,"tag":586,"props":1632,"children":1633},{"style":804},[1634],{"type":564,"value":1635}," n",{"type":559,"tag":586,"props":1637,"children":1638},{"style":776},[1639],{"type":564,"value":867},{"type":559,"tag":586,"props":1641,"children":1642},{"style":804},[1643],{"type":564,"value":1061},{"type":559,"tag":586,"props":1645,"children":1646},{"style":776},[1647],{"type":564,"value":914},{"type":559,"tag":586,"props":1649,"children":1650},{"style":917},[1651],{"type":564,"value":920},{"type":559,"tag":586,"props":1653,"children":1654},{"style":776},[1655],{"type":564,"value":1656},";\n",{"type":559,"tag":586,"props":1658,"children":1659},{"class":588,"line":948},[1660,1664,1668,1673,1677,1681,1685,1689,1693],{"type":559,"tag":586,"props":1661,"children":1662},{"style":782},[1663],{"type":564,"value":901},{"type":559,"tag":586,"props":1665,"children":1666},{"style":776},[1667],{"type":564,"value":877},{"type":559,"tag":586,"props":1669,"children":1670},{"style":804},[1671],{"type":564,"value":1672},"n",{"type":559,"tag":586,"props":1674,"children":1675},{"style":853},[1676],{"type":564,"value":925},{"type":559,"tag":586,"props":1678,"children":1679},{"style":928},[1680],{"type":564,"value":931},{"type":559,"tag":586,"props":1682,"children":1683},{"style":776},[1684],{"type":564,"value":887},{"type":559,"tag":586,"props":1686,"children":1687},{"style":782},[1688],{"type":564,"value":940},{"type":559,"tag":586,"props":1690,"children":1691},{"style":928},[1692],{"type":564,"value":931},{"type":559,"tag":586,"props":1694,"children":1695},{"style":776},[1696],{"type":564,"value":1656},{"type":559,"tag":586,"props":1698,"children":1699},{"class":588,"line":958},[1700],{"type":559,"tag":586,"props":1701,"children":1702},{"emptyLinePlaceholder":952},[1703],{"type":564,"value":955},{"type":559,"tag":586,"props":1705,"children":1706},{"class":588,"line":1005},[1707,1711,1716,1720,1725,1730,1734,1738,1743,1748,1752,1757],{"type":559,"tag":586,"props":1708,"children":1709},{"style":853},[1710],{"type":564,"value":1630},{"type":559,"tag":586,"props":1712,"children":1713},{"style":804},[1714],{"type":564,"value":1715}," dp",{"type":559,"tag":586,"props":1717,"children":1718},{"style":776},[1719],{"type":564,"value":867},{"type":559,"tag":586,"props":1721,"children":1722},{"style":853},[1723],{"type":564,"value":1724}," new",{"type":559,"tag":586,"props":1726,"children":1727},{"style":859},[1728],{"type":564,"value":1729}," Array",{"type":559,"tag":586,"props":1731,"children":1732},{"style":776},[1733],{"type":564,"value":1188},{"type":559,"tag":586,"props":1735,"children":1736},{"style":804},[1737],{"type":564,"value":1672},{"type":559,"tag":586,"props":1739,"children":1740},{"style":776},[1741],{"type":564,"value":1742},").",{"type":559,"tag":586,"props":1744,"children":1745},{"style":859},[1746],{"type":564,"value":1747},"fill",{"type":559,"tag":586,"props":1749,"children":1750},{"style":776},[1751],{"type":564,"value":1188},{"type":559,"tag":586,"props":1753,"children":1754},{"style":928},[1755],{"type":564,"value":1756},"1",{"type":559,"tag":586,"props":1758,"children":1759},{"style":776},[1760],{"type":564,"value":1761},");\n",{"type":559,"tag":586,"props":1763,"children":1764},{"class":588,"line":1013},[1765],{"type":559,"tag":586,"props":1766,"children":1767},{"emptyLinePlaceholder":952},[1768],{"type":564,"value":955},{"type":559,"tag":586,"props":1770,"children":1771},{"class":588,"line":1093},[1772,1776,1780,1784,1788,1792,1796,1800,1804,1808,1812,1816,1820,1824,1828],{"type":559,"tag":586,"props":1773,"children":1774},{"style":782},[1775],{"type":564,"value":1019},{"type":559,"tag":586,"props":1777,"children":1778},{"style":776},[1779],{"type":564,"value":877},{"type":559,"tag":586,"props":1781,"children":1782},{"style":853},[1783],{"type":564,"value":1028},{"type":559,"tag":586,"props":1785,"children":1786},{"style":804},[1787],{"type":564,"value":1033},{"type":559,"tag":586,"props":1789,"children":1790},{"style":776},[1791],{"type":564,"value":867},{"type":559,"tag":586,"props":1793,"children":1794},{"style":928},[1795],{"type":564,"value":931},{"type":559,"tag":586,"props":1797,"children":1798},{"style":776},[1799],{"type":564,"value":1047},{"type":559,"tag":586,"props":1801,"children":1802},{"style":804},[1803],{"type":564,"value":1033},{"type":559,"tag":586,"props":1805,"children":1806},{"style":776},[1807],{"type":564,"value":1056},{"type":559,"tag":586,"props":1809,"children":1810},{"style":804},[1811],{"type":564,"value":1635},{"type":559,"tag":586,"props":1813,"children":1814},{"style":776},[1815],{"type":564,"value":1047},{"type":559,"tag":586,"props":1817,"children":1818},{"style":804},[1819],{"type":564,"value":1033},{"type":559,"tag":586,"props":1821,"children":1822},{"style":853},[1823],{"type":564,"value":1082},{"type":559,"tag":586,"props":1825,"children":1826},{"style":776},[1827],{"type":564,"value":887},{"type":559,"tag":586,"props":1829,"children":1830},{"style":776},[1831],{"type":564,"value":892},{"type":559,"tag":586,"props":1833,"children":1834},{"class":588,"line":1168},[1835,1840,1844,1848,1853,1857,1861,1865,1869,1873,1877,1881,1885,1889,1893],{"type":559,"tag":586,"props":1836,"children":1837},{"style":782},[1838],{"type":564,"value":1839},"    for",{"type":559,"tag":586,"props":1841,"children":1842},{"style":776},[1843],{"type":564,"value":877},{"type":559,"tag":586,"props":1845,"children":1846},{"style":853},[1847],{"type":564,"value":1028},{"type":559,"tag":586,"props":1849,"children":1850},{"style":804},[1851],{"type":564,"value":1852}," j",{"type":559,"tag":586,"props":1854,"children":1855},{"style":776},[1856],{"type":564,"value":867},{"type":559,"tag":586,"props":1858,"children":1859},{"style":928},[1860],{"type":564,"value":931},{"type":559,"tag":586,"props":1862,"children":1863},{"style":776},[1864],{"type":564,"value":1047},{"type":559,"tag":586,"props":1866,"children":1867},{"style":804},[1868],{"type":564,"value":1852},{"type":559,"tag":586,"props":1870,"children":1871},{"style":776},[1872],{"type":564,"value":1056},{"type":559,"tag":586,"props":1874,"children":1875},{"style":804},[1876],{"type":564,"value":1033},{"type":559,"tag":586,"props":1878,"children":1879},{"style":776},[1880],{"type":564,"value":1047},{"type":559,"tag":586,"props":1882,"children":1883},{"style":804},[1884],{"type":564,"value":1852},{"type":559,"tag":586,"props":1886,"children":1887},{"style":853},[1888],{"type":564,"value":1082},{"type":559,"tag":586,"props":1890,"children":1891},{"style":776},[1892],{"type":564,"value":887},{"type":559,"tag":586,"props":1894,"children":1895},{"style":776},[1896],{"type":564,"value":892},{"type":559,"tag":586,"props":1898,"children":1899},{"class":588,"line":1208},[1900,1905,1909,1913,1917,1921,1925,1929,1933,1937,1942,1946],{"type":559,"tag":586,"props":1901,"children":1902},{"style":782},[1903],{"type":564,"value":1904},"      if",{"type":559,"tag":586,"props":1906,"children":1907},{"style":776},[1908],{"type":564,"value":877},{"type":559,"tag":586,"props":1910,"children":1911},{"style":804},[1912],{"type":564,"value":882},{"type":559,"tag":586,"props":1914,"children":1915},{"style":776},[1916],{"type":564,"value":987},{"type":559,"tag":586,"props":1918,"children":1919},{"style":804},[1920],{"type":564,"value":1116},{"type":559,"tag":586,"props":1922,"children":1923},{"style":776},[1924],{"type":564,"value":1121},{"type":559,"tag":586,"props":1926,"children":1927},{"style":776},[1928],{"type":564,"value":1126},{"type":559,"tag":586,"props":1930,"children":1931},{"style":804},[1932],{"type":564,"value":1061},{"type":559,"tag":586,"props":1934,"children":1935},{"style":776},[1936],{"type":564,"value":987},{"type":559,"tag":586,"props":1938,"children":1939},{"style":804},[1940],{"type":564,"value":1941},"j",{"type":559,"tag":586,"props":1943,"children":1944},{"style":776},[1945],{"type":564,"value":1161},{"type":559,"tag":586,"props":1947,"children":1948},{"style":776},[1949],{"type":564,"value":892},{"type":559,"tag":586,"props":1951,"children":1952},{"class":588,"line":1226},[1953,1958,1962,1966,1970,1974,1979,1983,1988,1992,1997,2001,2005,2010,2014,2018,2022,2026,2031,2035],{"type":559,"tag":586,"props":1954,"children":1955},{"style":804},[1956],{"type":564,"value":1957},"        dp",{"type":559,"tag":586,"props":1959,"children":1960},{"style":776},[1961],{"type":564,"value":987},{"type":559,"tag":586,"props":1963,"children":1964},{"style":804},[1965],{"type":564,"value":1116},{"type":559,"tag":586,"props":1967,"children":1968},{"style":776},[1969],{"type":564,"value":1121},{"type":559,"tag":586,"props":1971,"children":1972},{"style":776},[1973],{"type":564,"value":867},{"type":559,"tag":586,"props":1975,"children":1976},{"style":804},[1977],{"type":564,"value":1978}," Math",{"type":559,"tag":586,"props":1980,"children":1981},{"style":776},[1982],{"type":564,"value":914},{"type":559,"tag":586,"props":1984,"children":1985},{"style":859},[1986],{"type":564,"value":1987},"max",{"type":559,"tag":586,"props":1989,"children":1990},{"style":776},[1991],{"type":564,"value":1188},{"type":559,"tag":586,"props":1993,"children":1994},{"style":804},[1995],{"type":564,"value":1996},"dp",{"type":559,"tag":586,"props":1998,"children":1999},{"style":776},[2000],{"type":564,"value":987},{"type":559,"tag":586,"props":2002,"children":2003},{"style":804},[2004],{"type":564,"value":1116},{"type":559,"tag":586,"props":2006,"children":2007},{"style":776},[2008],{"type":564,"value":2009},"],",{"type":559,"tag":586,"props":2011,"children":2012},{"style":804},[2013],{"type":564,"value":1715},{"type":559,"tag":586,"props":2015,"children":2016},{"style":776},[2017],{"type":564,"value":987},{"type":559,"tag":586,"props":2019,"children":2020},{"style":804},[2021],{"type":564,"value":1941},{"type":559,"tag":586,"props":2023,"children":2024},{"style":776},[2025],{"type":564,"value":1121},{"type":559,"tag":586,"props":2027,"children":2028},{"style":853},[2029],{"type":564,"value":2030}," +",{"type":559,"tag":586,"props":2032,"children":2033},{"style":928},[2034],{"type":564,"value":1042},{"type":559,"tag":586,"props":2036,"children":2037},{"style":776},[2038],{"type":564,"value":1761},{"type":559,"tag":586,"props":2040,"children":2041},{"class":588,"line":1235},[2042],{"type":559,"tag":586,"props":2043,"children":2044},{"style":776},[2045],{"type":564,"value":2046},"      }\n",{"type":559,"tag":586,"props":2048,"children":2049},{"class":588,"line":1306},[2050],{"type":559,"tag":586,"props":2051,"children":2052},{"style":776},[2053],{"type":564,"value":1354},{"type":559,"tag":586,"props":2055,"children":2056},{"class":588,"line":1348},[2057],{"type":559,"tag":586,"props":2058,"children":2059},{"style":776},[2060],{"type":564,"value":1363},{"type":559,"tag":586,"props":2062,"children":2063},{"class":588,"line":1357},[2064],{"type":559,"tag":586,"props":2065,"children":2066},{"emptyLinePlaceholder":952},[2067],{"type":564,"value":955},{"type":559,"tag":586,"props":2069,"children":2070},{"class":588,"line":1366},[2071,2075,2079,2083,2087,2092,2096],{"type":559,"tag":586,"props":2072,"children":2073},{"style":782},[2074],{"type":564,"value":1380},{"type":559,"tag":586,"props":2076,"children":2077},{"style":804},[2078],{"type":564,"value":1978},{"type":559,"tag":586,"props":2080,"children":2081},{"style":776},[2082],{"type":564,"value":914},{"type":559,"tag":586,"props":2084,"children":2085},{"style":859},[2086],{"type":564,"value":1987},{"type":559,"tag":586,"props":2088,"children":2089},{"style":776},[2090],{"type":564,"value":2091},"(...",{"type":559,"tag":586,"props":2093,"children":2094},{"style":804},[2095],{"type":564,"value":1996},{"type":559,"tag":586,"props":2097,"children":2098},{"style":776},[2099],{"type":564,"value":1761},{"type":559,"tag":586,"props":2101,"children":2102},{"class":588,"line":1374},[2103],{"type":559,"tag":586,"props":2104,"children":2105},{"style":776},[2106],{"type":564,"value":1402},{"type":559,"tag":2108,"props":2109,"children":2110},"style",{},[2111],{"type":564,"value":2112},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":552,"searchDepth":849,"depth":849,"links":2114},[2115,2116],{"id":702,"depth":598,"text":702},{"id":707,"depth":598,"text":707,"children":2117},[2118,2119],{"id":713,"depth":607,"text":716},{"id":1405,"depth":607,"text":1405},"markdown","content:1.algorithm:3.leetcode:3.major:300.longest-increasing-subsequence.md","content","1.algorithm/3.leetcode/3.major/300.longest-increasing-subsequence.md","md",[2126,2128],{"_path":216,"title":215,"description":2127},"给你一个整数数组 nums，返回 数组 answer ，其中 answer[i] 等于 nums 中除 nums[i] 之外其余各元素的乘积 。",{"_path":222,"title":221,"description":2129},"给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。",1715008127001]