[{"data":1,"prerenderedAt":2133},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/longest-increasing-subsequence":552,"/algorithm/leetcode/major/longest-increasing-subsequence-surround":2128},[4,272,311,529,537],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":310},"八股文","/endorsement",[276,286,297],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"构建工具","/endorsement/build-tools",[290],{"title":291,"_path":292,"children":293},"Webpack","/endorsement/build-tools/webpack",[294],{"title":295,"_path":296},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":298,"_path":299,"children":300},"Html","/endorsement/html",[301,304,307],{"title":302,"_path":303},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":305,"_path":306},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":308,"_path":309},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":312,"_path":313,"children":314,"icon":528},"代码考核","/code-assessment",[315,420,521],{"title":316,"_path":317,"children":318},"源码实现","/code-assessment/source",[319,353,369,397,404,411,414,417],{"title":320,"_path":321,"children":322},"原生 api","/code-assessment/source/native-api",[323,326,329,332,335,338,341,344,347,350],{"title":324,"_path":325},"polyfill","/code-assessment/source/native-api/polyfill",{"title":327,"_path":328},"ajax","/code-assessment/source/native-api/ajax",{"title":330,"_path":331},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":333,"_path":334},"new 操作符","/code-assessment/source/native-api/new",{"title":336,"_path":337},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":339,"_path":340},"定时器","/code-assessment/source/native-api/timer",{"title":342,"_path":343},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":345,"_path":346},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":348,"_path":349},"extends","/code-assessment/source/native-api/extends",{"title":351,"_path":352},"Promise","/code-assessment/source/native-api/promise",{"title":354,"_path":355,"children":356},"函数 Function","/code-assessment/source/function",[357,360,363,366],{"title":358,"_path":359},"函数防抖","/code-assessment/source/function/debounce",{"title":361,"_path":362},"函数节流","/code-assessment/source/function/throttle",{"title":364,"_path":365},"函数柯理化","/code-assessment/source/function/curry",{"title":367,"_path":368},"函数睡眠","/code-assessment/source/function/sleep",{"title":370,"_path":371,"children":372},"数组 Array","/code-assessment/source/array",[373,376,379,382,385,388,391,394],{"title":374,"_path":375},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":377,"_path":378},"数组扁平化","/code-assessment/source/array/flat",{"title":380,"_path":381},"原型方法","/code-assessment/source/array/prototype-method",{"title":383,"_path":384},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":386,"_path":387},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":389,"_path":390},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":392,"_path":393},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":395,"_path":396},"二维数组","/code-assessment/source/array/2d-array",{"title":398,"_path":399,"children":400},"字符串 String","/code-assessment/source/string",[401],{"title":402,"_path":403},"repeat()","/code-assessment/source/string/repeat",{"title":405,"_path":406,"children":407},"集合 Set","/code-assessment/source/set",[408],{"title":409,"_path":410},"遍历集合","/code-assessment/source/set/traverse",{"title":412,"_path":413},"获取通用类型","/code-assessment/source/get-generic-type",{"title":415,"_path":416},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":418,"_path":419},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":421,"_path":422,"children":423},"业务场景","/code-assessment/scene",[424,454,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518],{"title":351,"_path":425,"children":426},"/code-assessment/scene/promise",[427,430,433,436,439,442,445,448,451],{"title":428,"_path":429},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":431,"_path":432},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":434,"_path":435},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":437,"_path":438},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":440,"_path":441},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":443,"_path":444},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":446,"_path":447},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":449,"_path":450},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":452,"_path":453},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":455,"_path":456,"children":457},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[458,461],{"title":459,"_path":460},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":462,"_path":463},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":465,"_path":466},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":468,"_path":469},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":471,"_path":472},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":474,"_path":475},"倒计时","/code-assessment/scene/countdown",{"title":477,"_path":478},"日期格式化","/code-assessment/scene/date-format",{"title":480,"_path":481},"实现前端路由","/code-assessment/scene/frontend-route",{"title":483,"_path":484},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":486,"_path":487},"lodash.get","/code-assessment/scene/lodash-get",{"title":489,"_path":490},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":492,"_path":493},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":495,"_path":496},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":498,"_path":499},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":501,"_path":502},"随机数","/code-assessment/scene/random-number",{"title":504,"_path":505},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":507,"_path":508},"sku 算法实现","/code-assessment/scene/sku",{"title":510,"_path":511},"整数分割","/code-assessment/scene/split-number",{"title":513,"_path":514},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":516,"_path":517},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":519,"_path":520},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":522,"_path":523,"children":524},"Ts 类型挑战","/code-assessment/type-challeges",[525],{"title":526,"_path":527},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":530,"_path":531,"children":532,"icon":536},"项目","/project",[533],{"title":534,"_path":535},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":538,"_path":539,"children":540,"icon":551},"后端语言","/backend-languages",[541],{"title":542,"_path":543,"children":544},"Python","/backend-languages/python",[545,548],{"title":546,"_path":547},"基础","/backend-languages/python/base",{"title":549,"_path":550},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":219,"_dir":553,"_draft":554,"_partial":554,"_locale":555,"title":218,"description":556,"url":557,"body":558,"_type":2123,"_id":2124,"_source":2125,"_file":2126,"_extension":2127},"major",false,"","给你一个整数数组 nums ，找到其中最长严格递增子序列的长度。","https://leetcode.cn/problems/longest-increasing-subsequence",{"type":559,"children":560,"toc":2116},"root",[561,568,573,578,617,622,644,649,672,677,692,697,702,708,713,720,751,1406,1411,1419,1424,1432,1437,1442,1450,1455,1463,1468,1476,1481,1490,1498,1512,2110],{"type":562,"tag":563,"props":564,"children":565},"element","p",{},[566],{"type":567,"value":556},"text",{"type":562,"tag":563,"props":569,"children":570},{},[571],{"type":567,"value":572},"子序列 是由数组派生而来的序列，删除（或不删除）数组中的元素而不改变其余元素的顺序。例如，[3,6,2,7] 是数组 [0,3,1,6,2,2,7] 的\n子序列\n。",{"type":562,"tag":563,"props":574,"children":575},{},[576],{"type":567,"value":577},"示例 1：",{"type":562,"tag":579,"props":580,"children":583},"pre",{"className":581,"code":582,"language":567,"meta":555,"style":555},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [10,9,2,5,3,7,101,18]\n输出：4\n解释：最长递增子序列是 [2,3,7,101]，因此长度为 4 。\n",[584],{"type":562,"tag":585,"props":586,"children":587},"code",{"__ignoreMap":555},[588,599,608],{"type":562,"tag":589,"props":590,"children":593},"span",{"class":591,"line":592},"line",1,[594],{"type":562,"tag":589,"props":595,"children":596},{},[597],{"type":567,"value":598},"输入：nums = [10,9,2,5,3,7,101,18]\n",{"type":562,"tag":589,"props":600,"children":602},{"class":591,"line":601},2,[603],{"type":562,"tag":589,"props":604,"children":605},{},[606],{"type":567,"value":607},"输出：4\n",{"type":562,"tag":589,"props":609,"children":611},{"class":591,"line":610},3,[612],{"type":562,"tag":589,"props":613,"children":614},{},[615],{"type":567,"value":616},"解释：最长递增子序列是 [2,3,7,101]，因此长度为 4 。\n",{"type":562,"tag":563,"props":618,"children":619},{},[620],{"type":567,"value":621},"示例 2：",{"type":562,"tag":579,"props":623,"children":625},{"className":581,"code":624,"language":567,"meta":555,"style":555},"输入：nums = [0,1,0,3,2,3]\n输出：4\n",[626],{"type":562,"tag":585,"props":627,"children":628},{"__ignoreMap":555},[629,637],{"type":562,"tag":589,"props":630,"children":631},{"class":591,"line":592},[632],{"type":562,"tag":589,"props":633,"children":634},{},[635],{"type":567,"value":636},"输入：nums = [0,1,0,3,2,3]\n",{"type":562,"tag":589,"props":638,"children":639},{"class":591,"line":601},[640],{"type":562,"tag":589,"props":641,"children":642},{},[643],{"type":567,"value":607},{"type":562,"tag":563,"props":645,"children":646},{},[647],{"type":567,"value":648},"示例 3：",{"type":562,"tag":579,"props":650,"children":652},{"className":581,"code":651,"language":567,"meta":555,"style":555},"输入：nums = [7,7,7,7,7,7,7]\n输出：1\n",[653],{"type":562,"tag":585,"props":654,"children":655},{"__ignoreMap":555},[656,664],{"type":562,"tag":589,"props":657,"children":658},{"class":591,"line":592},[659],{"type":562,"tag":589,"props":660,"children":661},{},[662],{"type":567,"value":663},"输入：nums = [7,7,7,7,7,7,7]\n",{"type":562,"tag":589,"props":665,"children":666},{"class":591,"line":601},[667],{"type":562,"tag":589,"props":668,"children":669},{},[670],{"type":567,"value":671},"输出：1\n",{"type":562,"tag":563,"props":673,"children":674},{},[675],{"type":567,"value":676},"提示：",{"type":562,"tag":678,"props":679,"children":680},"ul",{},[681,687],{"type":562,"tag":682,"props":683,"children":684},"li",{},[685],{"type":567,"value":686},"1 \u003C= nums.length \u003C= 2500",{"type":562,"tag":682,"props":688,"children":689},{},[690],{"type":567,"value":691},"-10^4 \u003C= nums[i] \u003C= 10^4",{"type":562,"tag":563,"props":693,"children":694},{},[695],{"type":567,"value":696},"进阶：",{"type":562,"tag":563,"props":698,"children":699},{},[700],{"type":567,"value":701},"你能将算法的时间复杂度降低到 O(n log(n)) 吗?",{"type":562,"tag":703,"props":704,"children":706},"h2",{"id":705},"解题思路",[707],{"type":567,"value":705},{"type":562,"tag":703,"props":709,"children":711},{"id":710},"实现",[712],{"type":567,"value":710},{"type":562,"tag":714,"props":715,"children":717},"h3",{"id":716},"贪心-查找",[718],{"type":567,"value":719},"贪心 + 查找",{"type":562,"tag":678,"props":721,"children":722},{},[723,728,746],{"type":562,"tag":682,"props":724,"children":725},{},[726],{"type":567,"value":727},"贪心思路：如果要使上升子序列尽可能的长，则需要让序列上升得尽可能慢，因此希望每次在上升子序列最后加上的那个数尽可能的小。",{"type":562,"tag":682,"props":729,"children":730},{},[731,733],{"type":567,"value":732},"算法流程：\n",{"type":562,"tag":678,"props":734,"children":735},{},[736,741],{"type":562,"tag":682,"props":737,"children":738},{},[739],{"type":567,"value":740},"当遍历的数字 > 记录最后一项末尾数字时，新增记录",{"type":562,"tag":682,"props":742,"children":743},{},[744],{"type":567,"value":745},"否则，找到记录中第一个末尾大于该数字的记录(可用二分查找进行优化)，更改其末尾",{"type":562,"tag":682,"props":747,"children":748},{},[749],{"type":567,"value":750},"优化：由于都是通过操作末尾项，因此可以转换为一维数组来解决此问题",{"type":562,"tag":579,"props":752,"children":756},{"className":753,"code":754,"language":755,"meta":555,"style":555},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar lengthOfLIS = function (nums) {\n  if (nums.length === 0) return 0\n\n  const tails = [nums[0]] // 原数组第 0 项\n\n  for (let i = 1; i \u003C nums.length; i++) {\n    if (nums[i] > tails[tails.length - 1]) {\n      tails.push(nums[i])\n    } else {\n      // 这里的查找方式可以优化为二分查找\n      const index = tails.findIndex(x => x >= nums[i])\n      tails[index] = nums[i]\n    }\n  }\n\n  return tails.length\n};\n","js",[757],{"type":562,"tag":585,"props":758,"children":759},{"__ignoreMap":555},[760,769,811,841,850,896,949,959,1006,1014,1094,1169,1209,1227,1236,1307,1349,1358,1367,1375,1397],{"type":562,"tag":589,"props":761,"children":762},{"class":591,"line":592},[763],{"type":562,"tag":589,"props":764,"children":766},{"style":765},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[767],{"type":567,"value":768},"/**\n",{"type":562,"tag":589,"props":770,"children":771},{"class":591,"line":601},[772,777,783,789,794,800,805],{"type":562,"tag":589,"props":773,"children":774},{"style":765},[775],{"type":567,"value":776}," * ",{"type":562,"tag":589,"props":778,"children":780},{"style":779},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[781],{"type":567,"value":782},"@",{"type":562,"tag":589,"props":784,"children":786},{"style":785},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[787],{"type":567,"value":788},"param",{"type":562,"tag":589,"props":790,"children":791},{"style":779},[792],{"type":567,"value":793}," {",{"type":562,"tag":589,"props":795,"children":797},{"style":796},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[798],{"type":567,"value":799},"number[]",{"type":562,"tag":589,"props":801,"children":802},{"style":779},[803],{"type":567,"value":804},"}",{"type":562,"tag":589,"props":806,"children":808},{"style":807},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[809],{"type":567,"value":810}," nums\n",{"type":562,"tag":589,"props":812,"children":813},{"class":591,"line":610},[814,818,822,827,831,836],{"type":562,"tag":589,"props":815,"children":816},{"style":765},[817],{"type":567,"value":776},{"type":562,"tag":589,"props":819,"children":820},{"style":779},[821],{"type":567,"value":782},{"type":562,"tag":589,"props":823,"children":824},{"style":785},[825],{"type":567,"value":826},"return",{"type":562,"tag":589,"props":828,"children":829},{"style":779},[830],{"type":567,"value":793},{"type":562,"tag":589,"props":832,"children":833},{"style":796},[834],{"type":567,"value":835},"number",{"type":562,"tag":589,"props":837,"children":838},{"style":779},[839],{"type":567,"value":840},"}\n",{"type":562,"tag":589,"props":842,"children":844},{"class":591,"line":843},4,[845],{"type":562,"tag":589,"props":846,"children":847},{"style":765},[848],{"type":567,"value":849}," */\n",{"type":562,"tag":589,"props":851,"children":853},{"class":591,"line":852},5,[854,860,866,871,876,881,886,891],{"type":562,"tag":589,"props":855,"children":857},{"style":856},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[858],{"type":567,"value":859},"var",{"type":562,"tag":589,"props":861,"children":863},{"style":862},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[864],{"type":567,"value":865}," lengthOfLIS",{"type":562,"tag":589,"props":867,"children":868},{"style":779},[869],{"type":567,"value":870}," =",{"type":562,"tag":589,"props":872,"children":873},{"style":856},[874],{"type":567,"value":875}," function",{"type":562,"tag":589,"props":877,"children":878},{"style":779},[879],{"type":567,"value":880}," (",{"type":562,"tag":589,"props":882,"children":883},{"style":807},[884],{"type":567,"value":885},"nums",{"type":562,"tag":589,"props":887,"children":888},{"style":779},[889],{"type":567,"value":890},")",{"type":562,"tag":589,"props":892,"children":893},{"style":779},[894],{"type":567,"value":895}," {\n",{"type":562,"tag":589,"props":897,"children":899},{"class":591,"line":898},6,[900,905,909,913,918,924,929,935,939,944],{"type":562,"tag":589,"props":901,"children":902},{"style":785},[903],{"type":567,"value":904},"  if",{"type":562,"tag":589,"props":906,"children":907},{"style":779},[908],{"type":567,"value":880},{"type":562,"tag":589,"props":910,"children":911},{"style":807},[912],{"type":567,"value":885},{"type":562,"tag":589,"props":914,"children":915},{"style":779},[916],{"type":567,"value":917},".",{"type":562,"tag":589,"props":919,"children":921},{"style":920},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[922],{"type":567,"value":923},"length",{"type":562,"tag":589,"props":925,"children":926},{"style":856},[927],{"type":567,"value":928}," ===",{"type":562,"tag":589,"props":930,"children":932},{"style":931},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[933],{"type":567,"value":934}," 0",{"type":562,"tag":589,"props":936,"children":937},{"style":779},[938],{"type":567,"value":890},{"type":562,"tag":589,"props":940,"children":941},{"style":785},[942],{"type":567,"value":943}," return",{"type":562,"tag":589,"props":945,"children":946},{"style":931},[947],{"type":567,"value":948}," 0\n",{"type":562,"tag":589,"props":950,"children":952},{"class":591,"line":951},7,[953],{"type":562,"tag":589,"props":954,"children":956},{"emptyLinePlaceholder":955},true,[957],{"type":567,"value":958},"\n",{"type":562,"tag":589,"props":960,"children":962},{"class":591,"line":961},8,[963,968,973,977,982,986,991,996,1001],{"type":562,"tag":589,"props":964,"children":965},{"style":856},[966],{"type":567,"value":967},"  const",{"type":562,"tag":589,"props":969,"children":970},{"style":807},[971],{"type":567,"value":972}," tails",{"type":562,"tag":589,"props":974,"children":975},{"style":779},[976],{"type":567,"value":870},{"type":562,"tag":589,"props":978,"children":979},{"style":779},[980],{"type":567,"value":981}," [",{"type":562,"tag":589,"props":983,"children":984},{"style":807},[985],{"type":567,"value":885},{"type":562,"tag":589,"props":987,"children":988},{"style":779},[989],{"type":567,"value":990},"[",{"type":562,"tag":589,"props":992,"children":993},{"style":931},[994],{"type":567,"value":995},"0",{"type":562,"tag":589,"props":997,"children":998},{"style":779},[999],{"type":567,"value":1000},"]]",{"type":562,"tag":589,"props":1002,"children":1003},{"style":765},[1004],{"type":567,"value":1005}," // 原数组第 0 项\n",{"type":562,"tag":589,"props":1007,"children":1009},{"class":591,"line":1008},9,[1010],{"type":562,"tag":589,"props":1011,"children":1012},{"emptyLinePlaceholder":955},[1013],{"type":567,"value":958},{"type":562,"tag":589,"props":1015,"children":1017},{"class":591,"line":1016},10,[1018,1023,1027,1032,1037,1041,1046,1051,1055,1060,1065,1069,1073,1077,1081,1086,1090],{"type":562,"tag":589,"props":1019,"children":1020},{"style":785},[1021],{"type":567,"value":1022},"  for",{"type":562,"tag":589,"props":1024,"children":1025},{"style":779},[1026],{"type":567,"value":880},{"type":562,"tag":589,"props":1028,"children":1029},{"style":856},[1030],{"type":567,"value":1031},"let",{"type":562,"tag":589,"props":1033,"children":1034},{"style":807},[1035],{"type":567,"value":1036}," i",{"type":562,"tag":589,"props":1038,"children":1039},{"style":779},[1040],{"type":567,"value":870},{"type":562,"tag":589,"props":1042,"children":1043},{"style":931},[1044],{"type":567,"value":1045}," 1",{"type":562,"tag":589,"props":1047,"children":1048},{"style":779},[1049],{"type":567,"value":1050},";",{"type":562,"tag":589,"props":1052,"children":1053},{"style":807},[1054],{"type":567,"value":1036},{"type":562,"tag":589,"props":1056,"children":1057},{"style":779},[1058],{"type":567,"value":1059}," \u003C",{"type":562,"tag":589,"props":1061,"children":1062},{"style":807},[1063],{"type":567,"value":1064}," nums",{"type":562,"tag":589,"props":1066,"children":1067},{"style":779},[1068],{"type":567,"value":917},{"type":562,"tag":589,"props":1070,"children":1071},{"style":920},[1072],{"type":567,"value":923},{"type":562,"tag":589,"props":1074,"children":1075},{"style":779},[1076],{"type":567,"value":1050},{"type":562,"tag":589,"props":1078,"children":1079},{"style":807},[1080],{"type":567,"value":1036},{"type":562,"tag":589,"props":1082,"children":1083},{"style":856},[1084],{"type":567,"value":1085},"++",{"type":562,"tag":589,"props":1087,"children":1088},{"style":779},[1089],{"type":567,"value":890},{"type":562,"tag":589,"props":1091,"children":1092},{"style":779},[1093],{"type":567,"value":895},{"type":562,"tag":589,"props":1095,"children":1097},{"class":591,"line":1096},11,[1098,1103,1107,1111,1115,1120,1125,1130,1134,1138,1143,1147,1151,1156,1160,1165],{"type":562,"tag":589,"props":1099,"children":1100},{"style":785},[1101],{"type":567,"value":1102},"    if",{"type":562,"tag":589,"props":1104,"children":1105},{"style":779},[1106],{"type":567,"value":880},{"type":562,"tag":589,"props":1108,"children":1109},{"style":807},[1110],{"type":567,"value":885},{"type":562,"tag":589,"props":1112,"children":1113},{"style":779},[1114],{"type":567,"value":990},{"type":562,"tag":589,"props":1116,"children":1117},{"style":807},[1118],{"type":567,"value":1119},"i",{"type":562,"tag":589,"props":1121,"children":1122},{"style":779},[1123],{"type":567,"value":1124},"]",{"type":562,"tag":589,"props":1126,"children":1127},{"style":779},[1128],{"type":567,"value":1129}," >",{"type":562,"tag":589,"props":1131,"children":1132},{"style":807},[1133],{"type":567,"value":972},{"type":562,"tag":589,"props":1135,"children":1136},{"style":779},[1137],{"type":567,"value":990},{"type":562,"tag":589,"props":1139,"children":1140},{"style":807},[1141],{"type":567,"value":1142},"tails",{"type":562,"tag":589,"props":1144,"children":1145},{"style":779},[1146],{"type":567,"value":917},{"type":562,"tag":589,"props":1148,"children":1149},{"style":920},[1150],{"type":567,"value":923},{"type":562,"tag":589,"props":1152,"children":1153},{"style":856},[1154],{"type":567,"value":1155}," -",{"type":562,"tag":589,"props":1157,"children":1158},{"style":931},[1159],{"type":567,"value":1045},{"type":562,"tag":589,"props":1161,"children":1162},{"style":779},[1163],{"type":567,"value":1164},"])",{"type":562,"tag":589,"props":1166,"children":1167},{"style":779},[1168],{"type":567,"value":895},{"type":562,"tag":589,"props":1170,"children":1172},{"class":591,"line":1171},12,[1173,1178,1182,1187,1192,1196,1200,1204],{"type":562,"tag":589,"props":1174,"children":1175},{"style":807},[1176],{"type":567,"value":1177},"      tails",{"type":562,"tag":589,"props":1179,"children":1180},{"style":779},[1181],{"type":567,"value":917},{"type":562,"tag":589,"props":1183,"children":1184},{"style":862},[1185],{"type":567,"value":1186},"push",{"type":562,"tag":589,"props":1188,"children":1189},{"style":779},[1190],{"type":567,"value":1191},"(",{"type":562,"tag":589,"props":1193,"children":1194},{"style":807},[1195],{"type":567,"value":885},{"type":562,"tag":589,"props":1197,"children":1198},{"style":779},[1199],{"type":567,"value":990},{"type":562,"tag":589,"props":1201,"children":1202},{"style":807},[1203],{"type":567,"value":1119},{"type":562,"tag":589,"props":1205,"children":1206},{"style":779},[1207],{"type":567,"value":1208},"])\n",{"type":562,"tag":589,"props":1210,"children":1212},{"class":591,"line":1211},13,[1213,1218,1223],{"type":562,"tag":589,"props":1214,"children":1215},{"style":779},[1216],{"type":567,"value":1217},"    }",{"type":562,"tag":589,"props":1219,"children":1220},{"style":785},[1221],{"type":567,"value":1222}," else",{"type":562,"tag":589,"props":1224,"children":1225},{"style":779},[1226],{"type":567,"value":895},{"type":562,"tag":589,"props":1228,"children":1230},{"class":591,"line":1229},14,[1231],{"type":562,"tag":589,"props":1232,"children":1233},{"style":765},[1234],{"type":567,"value":1235},"      // 这里的查找方式可以优化为二分查找\n",{"type":562,"tag":589,"props":1237,"children":1239},{"class":591,"line":1238},15,[1240,1245,1250,1254,1258,1262,1267,1271,1276,1281,1286,1291,1295,1299,1303],{"type":562,"tag":589,"props":1241,"children":1242},{"style":856},[1243],{"type":567,"value":1244},"      const",{"type":562,"tag":589,"props":1246,"children":1247},{"style":807},[1248],{"type":567,"value":1249}," index",{"type":562,"tag":589,"props":1251,"children":1252},{"style":779},[1253],{"type":567,"value":870},{"type":562,"tag":589,"props":1255,"children":1256},{"style":807},[1257],{"type":567,"value":972},{"type":562,"tag":589,"props":1259,"children":1260},{"style":779},[1261],{"type":567,"value":917},{"type":562,"tag":589,"props":1263,"children":1264},{"style":862},[1265],{"type":567,"value":1266},"findIndex",{"type":562,"tag":589,"props":1268,"children":1269},{"style":779},[1270],{"type":567,"value":1191},{"type":562,"tag":589,"props":1272,"children":1273},{"style":807},[1274],{"type":567,"value":1275},"x",{"type":562,"tag":589,"props":1277,"children":1278},{"style":779},[1279],{"type":567,"value":1280}," =>",{"type":562,"tag":589,"props":1282,"children":1283},{"style":807},[1284],{"type":567,"value":1285}," x",{"type":562,"tag":589,"props":1287,"children":1288},{"style":779},[1289],{"type":567,"value":1290}," >=",{"type":562,"tag":589,"props":1292,"children":1293},{"style":807},[1294],{"type":567,"value":1064},{"type":562,"tag":589,"props":1296,"children":1297},{"style":779},[1298],{"type":567,"value":990},{"type":562,"tag":589,"props":1300,"children":1301},{"style":807},[1302],{"type":567,"value":1119},{"type":562,"tag":589,"props":1304,"children":1305},{"style":779},[1306],{"type":567,"value":1208},{"type":562,"tag":589,"props":1308,"children":1310},{"class":591,"line":1309},16,[1311,1315,1319,1324,1328,1332,1336,1340,1344],{"type":562,"tag":589,"props":1312,"children":1313},{"style":807},[1314],{"type":567,"value":1177},{"type":562,"tag":589,"props":1316,"children":1317},{"style":779},[1318],{"type":567,"value":990},{"type":562,"tag":589,"props":1320,"children":1321},{"style":807},[1322],{"type":567,"value":1323},"index",{"type":562,"tag":589,"props":1325,"children":1326},{"style":779},[1327],{"type":567,"value":1124},{"type":562,"tag":589,"props":1329,"children":1330},{"style":779},[1331],{"type":567,"value":870},{"type":562,"tag":589,"props":1333,"children":1334},{"style":807},[1335],{"type":567,"value":1064},{"type":562,"tag":589,"props":1337,"children":1338},{"style":779},[1339],{"type":567,"value":990},{"type":562,"tag":589,"props":1341,"children":1342},{"style":807},[1343],{"type":567,"value":1119},{"type":562,"tag":589,"props":1345,"children":1346},{"style":779},[1347],{"type":567,"value":1348},"]\n",{"type":562,"tag":589,"props":1350,"children":1352},{"class":591,"line":1351},17,[1353],{"type":562,"tag":589,"props":1354,"children":1355},{"style":779},[1356],{"type":567,"value":1357},"    }\n",{"type":562,"tag":589,"props":1359,"children":1361},{"class":591,"line":1360},18,[1362],{"type":562,"tag":589,"props":1363,"children":1364},{"style":779},[1365],{"type":567,"value":1366},"  }\n",{"type":562,"tag":589,"props":1368,"children":1370},{"class":591,"line":1369},19,[1371],{"type":562,"tag":589,"props":1372,"children":1373},{"emptyLinePlaceholder":955},[1374],{"type":567,"value":958},{"type":562,"tag":589,"props":1376,"children":1378},{"class":591,"line":1377},20,[1379,1384,1388,1392],{"type":562,"tag":589,"props":1380,"children":1381},{"style":785},[1382],{"type":567,"value":1383},"  return",{"type":562,"tag":589,"props":1385,"children":1386},{"style":807},[1387],{"type":567,"value":972},{"type":562,"tag":589,"props":1389,"children":1390},{"style":779},[1391],{"type":567,"value":917},{"type":562,"tag":589,"props":1393,"children":1394},{"style":920},[1395],{"type":567,"value":1396},"length\n",{"type":562,"tag":589,"props":1398,"children":1400},{"class":591,"line":1399},21,[1401],{"type":562,"tag":589,"props":1402,"children":1403},{"style":779},[1404],{"type":567,"value":1405},"};\n",{"type":562,"tag":714,"props":1407,"children":1409},{"id":1408},"动态规划",[1410],{"type":567,"value":1408},{"type":562,"tag":678,"props":1412,"children":1413},{},[1414],{"type":562,"tag":682,"props":1415,"children":1416},{},[1417],{"type":567,"value":1418},"确定 dp 数组及下标含义",{"type":562,"tag":563,"props":1420,"children":1421},{},[1422],{"type":567,"value":1423},"dp[i] 表示 [0, i] 区间内以 nums[i] 结尾的最长递增子序列的长度",{"type":562,"tag":678,"props":1425,"children":1426},{},[1427],{"type":562,"tag":682,"props":1428,"children":1429},{},[1430],{"type":567,"value":1431},"确定递推公式：dp[i] = Math.max(dp[i], dp[j] + 1)",{"type":562,"tag":563,"props":1433,"children":1434},{},[1435],{"type":567,"value":1436},"如果 nums[i] > nums[j] 则说明当前元素复合递增子序列，则 dp[i] = Math.max(dp[i], dp[j] + 1)",{"type":562,"tag":563,"props":1438,"children":1439},{},[1440],{"type":567,"value":1441},"如果 nums[i] \u003C nums[j] 则说明当前元素不符合递增子序列，则什么都不做",{"type":562,"tag":678,"props":1443,"children":1444},{},[1445],{"type":562,"tag":682,"props":1446,"children":1447},{},[1448],{"type":567,"value":1449},"如何初始化 dp 数组",{"type":562,"tag":563,"props":1451,"children":1452},{},[1453],{"type":567,"value":1454},"每一个 i，对应的 dp[i] (即最长递增子序列)起始大小至少都是 1",{"type":562,"tag":678,"props":1456,"children":1457},{},[1458],{"type":562,"tag":682,"props":1459,"children":1460},{},[1461],{"type":567,"value":1462},"确定遍历顺序",{"type":562,"tag":563,"props":1464,"children":1465},{},[1466],{"type":567,"value":1467},"dp[i] 是有 [0, i-1] 各个位置的最长递增子序列推导而来，那么遍历 i 一定是从前向后遍历",{"type":562,"tag":678,"props":1469,"children":1470},{},[1471],{"type":562,"tag":682,"props":1472,"children":1473},{},[1474],{"type":567,"value":1475},"举例推导 dp 数组",{"type":562,"tag":563,"props":1477,"children":1478},{},[1479],{"type":567,"value":1480},"以 nums = [1, 3, 6, 7, 9, 4, 10, 5, 6] 为例：",{"type":562,"tag":563,"props":1482,"children":1483},{},[1484],{"type":562,"tag":1485,"props":1486,"children":1489},"img",{"alt":1487,"src":1488},"table","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.300_table.png",[],{"type":562,"tag":678,"props":1491,"children":1492},{},[1493],{"type":562,"tag":682,"props":1494,"children":1495},{},[1496],{"type":567,"value":1497},"复杂度",{"type":562,"tag":1499,"props":1500,"children":1501},"ol",{},[1502,1507],{"type":562,"tag":682,"props":1503,"children":1504},{},[1505],{"type":567,"value":1506},"时间复杂度：O(n^2)，遍历计算 dp 列表需 O(n)，计算每个 dp[i] 需 O(n)",{"type":562,"tag":682,"props":1508,"children":1509},{},[1510],{"type":567,"value":1511},"空间复杂度：O(n)",{"type":562,"tag":579,"props":1513,"children":1515},{"className":753,"code":1514,"language":755,"meta":555,"style":555},"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar lengthOfLIS = function (nums) {\n  let n = nums.length;\n  if (n === 0) return 0;\n\n  let dp = new Array(n).fill(1);\n\n  for (let i = 0; i \u003C n; i++) {\n    for (let j = 0; j \u003C i; j++) {\n      if (nums[i] > nums[j]) {\n        dp[i] = Math.max(dp[i], dp[j] + 1);\n      }\n    }\n  }\n\n  return Math.max(...dp);\n};\n",[1516],{"type":562,"tag":585,"props":1517,"children":1518},{"__ignoreMap":555},[1519,1526,1557,1584,1591,1626,1660,1700,1707,1765,1772,1835,1900,1953,2042,2050,2057,2064,2071,2103],{"type":562,"tag":589,"props":1520,"children":1521},{"class":591,"line":592},[1522],{"type":562,"tag":589,"props":1523,"children":1524},{"style":765},[1525],{"type":567,"value":768},{"type":562,"tag":589,"props":1527,"children":1528},{"class":591,"line":601},[1529,1533,1537,1541,1545,1549,1553],{"type":562,"tag":589,"props":1530,"children":1531},{"style":765},[1532],{"type":567,"value":776},{"type":562,"tag":589,"props":1534,"children":1535},{"style":779},[1536],{"type":567,"value":782},{"type":562,"tag":589,"props":1538,"children":1539},{"style":785},[1540],{"type":567,"value":788},{"type":562,"tag":589,"props":1542,"children":1543},{"style":779},[1544],{"type":567,"value":793},{"type":562,"tag":589,"props":1546,"children":1547},{"style":796},[1548],{"type":567,"value":799},{"type":562,"tag":589,"props":1550,"children":1551},{"style":779},[1552],{"type":567,"value":804},{"type":562,"tag":589,"props":1554,"children":1555},{"style":807},[1556],{"type":567,"value":810},{"type":562,"tag":589,"props":1558,"children":1559},{"class":591,"line":610},[1560,1564,1568,1572,1576,1580],{"type":562,"tag":589,"props":1561,"children":1562},{"style":765},[1563],{"type":567,"value":776},{"type":562,"tag":589,"props":1565,"children":1566},{"style":779},[1567],{"type":567,"value":782},{"type":562,"tag":589,"props":1569,"children":1570},{"style":785},[1571],{"type":567,"value":826},{"type":562,"tag":589,"props":1573,"children":1574},{"style":779},[1575],{"type":567,"value":793},{"type":562,"tag":589,"props":1577,"children":1578},{"style":796},[1579],{"type":567,"value":835},{"type":562,"tag":589,"props":1581,"children":1582},{"style":779},[1583],{"type":567,"value":840},{"type":562,"tag":589,"props":1585,"children":1586},{"class":591,"line":843},[1587],{"type":562,"tag":589,"props":1588,"children":1589},{"style":765},[1590],{"type":567,"value":849},{"type":562,"tag":589,"props":1592,"children":1593},{"class":591,"line":852},[1594,1598,1602,1606,1610,1614,1618,1622],{"type":562,"tag":589,"props":1595,"children":1596},{"style":856},[1597],{"type":567,"value":859},{"type":562,"tag":589,"props":1599,"children":1600},{"style":862},[1601],{"type":567,"value":865},{"type":562,"tag":589,"props":1603,"children":1604},{"style":779},[1605],{"type":567,"value":870},{"type":562,"tag":589,"props":1607,"children":1608},{"style":856},[1609],{"type":567,"value":875},{"type":562,"tag":589,"props":1611,"children":1612},{"style":779},[1613],{"type":567,"value":880},{"type":562,"tag":589,"props":1615,"children":1616},{"style":807},[1617],{"type":567,"value":885},{"type":562,"tag":589,"props":1619,"children":1620},{"style":779},[1621],{"type":567,"value":890},{"type":562,"tag":589,"props":1623,"children":1624},{"style":779},[1625],{"type":567,"value":895},{"type":562,"tag":589,"props":1627,"children":1628},{"class":591,"line":898},[1629,1634,1639,1643,1647,1651,1655],{"type":562,"tag":589,"props":1630,"children":1631},{"style":856},[1632],{"type":567,"value":1633},"  let",{"type":562,"tag":589,"props":1635,"children":1636},{"style":807},[1637],{"type":567,"value":1638}," n",{"type":562,"tag":589,"props":1640,"children":1641},{"style":779},[1642],{"type":567,"value":870},{"type":562,"tag":589,"props":1644,"children":1645},{"style":807},[1646],{"type":567,"value":1064},{"type":562,"tag":589,"props":1648,"children":1649},{"style":779},[1650],{"type":567,"value":917},{"type":562,"tag":589,"props":1652,"children":1653},{"style":920},[1654],{"type":567,"value":923},{"type":562,"tag":589,"props":1656,"children":1657},{"style":779},[1658],{"type":567,"value":1659},";\n",{"type":562,"tag":589,"props":1661,"children":1662},{"class":591,"line":951},[1663,1667,1671,1676,1680,1684,1688,1692,1696],{"type":562,"tag":589,"props":1664,"children":1665},{"style":785},[1666],{"type":567,"value":904},{"type":562,"tag":589,"props":1668,"children":1669},{"style":779},[1670],{"type":567,"value":880},{"type":562,"tag":589,"props":1672,"children":1673},{"style":807},[1674],{"type":567,"value":1675},"n",{"type":562,"tag":589,"props":1677,"children":1678},{"style":856},[1679],{"type":567,"value":928},{"type":562,"tag":589,"props":1681,"children":1682},{"style":931},[1683],{"type":567,"value":934},{"type":562,"tag":589,"props":1685,"children":1686},{"style":779},[1687],{"type":567,"value":890},{"type":562,"tag":589,"props":1689,"children":1690},{"style":785},[1691],{"type":567,"value":943},{"type":562,"tag":589,"props":1693,"children":1694},{"style":931},[1695],{"type":567,"value":934},{"type":562,"tag":589,"props":1697,"children":1698},{"style":779},[1699],{"type":567,"value":1659},{"type":562,"tag":589,"props":1701,"children":1702},{"class":591,"line":961},[1703],{"type":562,"tag":589,"props":1704,"children":1705},{"emptyLinePlaceholder":955},[1706],{"type":567,"value":958},{"type":562,"tag":589,"props":1708,"children":1709},{"class":591,"line":1008},[1710,1714,1719,1723,1728,1733,1737,1741,1746,1751,1755,1760],{"type":562,"tag":589,"props":1711,"children":1712},{"style":856},[1713],{"type":567,"value":1633},{"type":562,"tag":589,"props":1715,"children":1716},{"style":807},[1717],{"type":567,"value":1718}," dp",{"type":562,"tag":589,"props":1720,"children":1721},{"style":779},[1722],{"type":567,"value":870},{"type":562,"tag":589,"props":1724,"children":1725},{"style":856},[1726],{"type":567,"value":1727}," new",{"type":562,"tag":589,"props":1729,"children":1730},{"style":862},[1731],{"type":567,"value":1732}," Array",{"type":562,"tag":589,"props":1734,"children":1735},{"style":779},[1736],{"type":567,"value":1191},{"type":562,"tag":589,"props":1738,"children":1739},{"style":807},[1740],{"type":567,"value":1675},{"type":562,"tag":589,"props":1742,"children":1743},{"style":779},[1744],{"type":567,"value":1745},").",{"type":562,"tag":589,"props":1747,"children":1748},{"style":862},[1749],{"type":567,"value":1750},"fill",{"type":562,"tag":589,"props":1752,"children":1753},{"style":779},[1754],{"type":567,"value":1191},{"type":562,"tag":589,"props":1756,"children":1757},{"style":931},[1758],{"type":567,"value":1759},"1",{"type":562,"tag":589,"props":1761,"children":1762},{"style":779},[1763],{"type":567,"value":1764},");\n",{"type":562,"tag":589,"props":1766,"children":1767},{"class":591,"line":1016},[1768],{"type":562,"tag":589,"props":1769,"children":1770},{"emptyLinePlaceholder":955},[1771],{"type":567,"value":958},{"type":562,"tag":589,"props":1773,"children":1774},{"class":591,"line":1096},[1775,1779,1783,1787,1791,1795,1799,1803,1807,1811,1815,1819,1823,1827,1831],{"type":562,"tag":589,"props":1776,"children":1777},{"style":785},[1778],{"type":567,"value":1022},{"type":562,"tag":589,"props":1780,"children":1781},{"style":779},[1782],{"type":567,"value":880},{"type":562,"tag":589,"props":1784,"children":1785},{"style":856},[1786],{"type":567,"value":1031},{"type":562,"tag":589,"props":1788,"children":1789},{"style":807},[1790],{"type":567,"value":1036},{"type":562,"tag":589,"props":1792,"children":1793},{"style":779},[1794],{"type":567,"value":870},{"type":562,"tag":589,"props":1796,"children":1797},{"style":931},[1798],{"type":567,"value":934},{"type":562,"tag":589,"props":1800,"children":1801},{"style":779},[1802],{"type":567,"value":1050},{"type":562,"tag":589,"props":1804,"children":1805},{"style":807},[1806],{"type":567,"value":1036},{"type":562,"tag":589,"props":1808,"children":1809},{"style":779},[1810],{"type":567,"value":1059},{"type":562,"tag":589,"props":1812,"children":1813},{"style":807},[1814],{"type":567,"value":1638},{"type":562,"tag":589,"props":1816,"children":1817},{"style":779},[1818],{"type":567,"value":1050},{"type":562,"tag":589,"props":1820,"children":1821},{"style":807},[1822],{"type":567,"value":1036},{"type":562,"tag":589,"props":1824,"children":1825},{"style":856},[1826],{"type":567,"value":1085},{"type":562,"tag":589,"props":1828,"children":1829},{"style":779},[1830],{"type":567,"value":890},{"type":562,"tag":589,"props":1832,"children":1833},{"style":779},[1834],{"type":567,"value":895},{"type":562,"tag":589,"props":1836,"children":1837},{"class":591,"line":1171},[1838,1843,1847,1851,1856,1860,1864,1868,1872,1876,1880,1884,1888,1892,1896],{"type":562,"tag":589,"props":1839,"children":1840},{"style":785},[1841],{"type":567,"value":1842},"    for",{"type":562,"tag":589,"props":1844,"children":1845},{"style":779},[1846],{"type":567,"value":880},{"type":562,"tag":589,"props":1848,"children":1849},{"style":856},[1850],{"type":567,"value":1031},{"type":562,"tag":589,"props":1852,"children":1853},{"style":807},[1854],{"type":567,"value":1855}," j",{"type":562,"tag":589,"props":1857,"children":1858},{"style":779},[1859],{"type":567,"value":870},{"type":562,"tag":589,"props":1861,"children":1862},{"style":931},[1863],{"type":567,"value":934},{"type":562,"tag":589,"props":1865,"children":1866},{"style":779},[1867],{"type":567,"value":1050},{"type":562,"tag":589,"props":1869,"children":1870},{"style":807},[1871],{"type":567,"value":1855},{"type":562,"tag":589,"props":1873,"children":1874},{"style":779},[1875],{"type":567,"value":1059},{"type":562,"tag":589,"props":1877,"children":1878},{"style":807},[1879],{"type":567,"value":1036},{"type":562,"tag":589,"props":1881,"children":1882},{"style":779},[1883],{"type":567,"value":1050},{"type":562,"tag":589,"props":1885,"children":1886},{"style":807},[1887],{"type":567,"value":1855},{"type":562,"tag":589,"props":1889,"children":1890},{"style":856},[1891],{"type":567,"value":1085},{"type":562,"tag":589,"props":1893,"children":1894},{"style":779},[1895],{"type":567,"value":890},{"type":562,"tag":589,"props":1897,"children":1898},{"style":779},[1899],{"type":567,"value":895},{"type":562,"tag":589,"props":1901,"children":1902},{"class":591,"line":1211},[1903,1908,1912,1916,1920,1924,1928,1932,1936,1940,1945,1949],{"type":562,"tag":589,"props":1904,"children":1905},{"style":785},[1906],{"type":567,"value":1907},"      if",{"type":562,"tag":589,"props":1909,"children":1910},{"style":779},[1911],{"type":567,"value":880},{"type":562,"tag":589,"props":1913,"children":1914},{"style":807},[1915],{"type":567,"value":885},{"type":562,"tag":589,"props":1917,"children":1918},{"style":779},[1919],{"type":567,"value":990},{"type":562,"tag":589,"props":1921,"children":1922},{"style":807},[1923],{"type":567,"value":1119},{"type":562,"tag":589,"props":1925,"children":1926},{"style":779},[1927],{"type":567,"value":1124},{"type":562,"tag":589,"props":1929,"children":1930},{"style":779},[1931],{"type":567,"value":1129},{"type":562,"tag":589,"props":1933,"children":1934},{"style":807},[1935],{"type":567,"value":1064},{"type":562,"tag":589,"props":1937,"children":1938},{"style":779},[1939],{"type":567,"value":990},{"type":562,"tag":589,"props":1941,"children":1942},{"style":807},[1943],{"type":567,"value":1944},"j",{"type":562,"tag":589,"props":1946,"children":1947},{"style":779},[1948],{"type":567,"value":1164},{"type":562,"tag":589,"props":1950,"children":1951},{"style":779},[1952],{"type":567,"value":895},{"type":562,"tag":589,"props":1954,"children":1955},{"class":591,"line":1229},[1956,1961,1965,1969,1973,1977,1982,1986,1991,1995,2000,2004,2008,2013,2017,2021,2025,2029,2034,2038],{"type":562,"tag":589,"props":1957,"children":1958},{"style":807},[1959],{"type":567,"value":1960},"        dp",{"type":562,"tag":589,"props":1962,"children":1963},{"style":779},[1964],{"type":567,"value":990},{"type":562,"tag":589,"props":1966,"children":1967},{"style":807},[1968],{"type":567,"value":1119},{"type":562,"tag":589,"props":1970,"children":1971},{"style":779},[1972],{"type":567,"value":1124},{"type":562,"tag":589,"props":1974,"children":1975},{"style":779},[1976],{"type":567,"value":870},{"type":562,"tag":589,"props":1978,"children":1979},{"style":807},[1980],{"type":567,"value":1981}," Math",{"type":562,"tag":589,"props":1983,"children":1984},{"style":779},[1985],{"type":567,"value":917},{"type":562,"tag":589,"props":1987,"children":1988},{"style":862},[1989],{"type":567,"value":1990},"max",{"type":562,"tag":589,"props":1992,"children":1993},{"style":779},[1994],{"type":567,"value":1191},{"type":562,"tag":589,"props":1996,"children":1997},{"style":807},[1998],{"type":567,"value":1999},"dp",{"type":562,"tag":589,"props":2001,"children":2002},{"style":779},[2003],{"type":567,"value":990},{"type":562,"tag":589,"props":2005,"children":2006},{"style":807},[2007],{"type":567,"value":1119},{"type":562,"tag":589,"props":2009,"children":2010},{"style":779},[2011],{"type":567,"value":2012},"],",{"type":562,"tag":589,"props":2014,"children":2015},{"style":807},[2016],{"type":567,"value":1718},{"type":562,"tag":589,"props":2018,"children":2019},{"style":779},[2020],{"type":567,"value":990},{"type":562,"tag":589,"props":2022,"children":2023},{"style":807},[2024],{"type":567,"value":1944},{"type":562,"tag":589,"props":2026,"children":2027},{"style":779},[2028],{"type":567,"value":1124},{"type":562,"tag":589,"props":2030,"children":2031},{"style":856},[2032],{"type":567,"value":2033}," +",{"type":562,"tag":589,"props":2035,"children":2036},{"style":931},[2037],{"type":567,"value":1045},{"type":562,"tag":589,"props":2039,"children":2040},{"style":779},[2041],{"type":567,"value":1764},{"type":562,"tag":589,"props":2043,"children":2044},{"class":591,"line":1238},[2045],{"type":562,"tag":589,"props":2046,"children":2047},{"style":779},[2048],{"type":567,"value":2049},"      }\n",{"type":562,"tag":589,"props":2051,"children":2052},{"class":591,"line":1309},[2053],{"type":562,"tag":589,"props":2054,"children":2055},{"style":779},[2056],{"type":567,"value":1357},{"type":562,"tag":589,"props":2058,"children":2059},{"class":591,"line":1351},[2060],{"type":562,"tag":589,"props":2061,"children":2062},{"style":779},[2063],{"type":567,"value":1366},{"type":562,"tag":589,"props":2065,"children":2066},{"class":591,"line":1360},[2067],{"type":562,"tag":589,"props":2068,"children":2069},{"emptyLinePlaceholder":955},[2070],{"type":567,"value":958},{"type":562,"tag":589,"props":2072,"children":2073},{"class":591,"line":1369},[2074,2078,2082,2086,2090,2095,2099],{"type":562,"tag":589,"props":2075,"children":2076},{"style":785},[2077],{"type":567,"value":1383},{"type":562,"tag":589,"props":2079,"children":2080},{"style":807},[2081],{"type":567,"value":1981},{"type":562,"tag":589,"props":2083,"children":2084},{"style":779},[2085],{"type":567,"value":917},{"type":562,"tag":589,"props":2087,"children":2088},{"style":862},[2089],{"type":567,"value":1990},{"type":562,"tag":589,"props":2091,"children":2092},{"style":779},[2093],{"type":567,"value":2094},"(...",{"type":562,"tag":589,"props":2096,"children":2097},{"style":807},[2098],{"type":567,"value":1999},{"type":562,"tag":589,"props":2100,"children":2101},{"style":779},[2102],{"type":567,"value":1764},{"type":562,"tag":589,"props":2104,"children":2105},{"class":591,"line":1377},[2106],{"type":562,"tag":589,"props":2107,"children":2108},{"style":779},[2109],{"type":567,"value":1405},{"type":562,"tag":2111,"props":2112,"children":2113},"style",{},[2114],{"type":567,"value":2115},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":555,"searchDepth":852,"depth":852,"links":2117},[2118,2119],{"id":705,"depth":601,"text":705},{"id":710,"depth":601,"text":710,"children":2120},[2121,2122],{"id":716,"depth":610,"text":719},{"id":1408,"depth":610,"text":1408},"markdown","content:1.algorithm:3.leetcode:3.major:300.longest-increasing-subsequence.md","content","1.algorithm/3.leetcode/3.major/300.longest-increasing-subsequence.md","md",[2129,2131],{"_path":216,"title":215,"description":2130},"给你一个整数数组 nums，返回 数组 answer ，其中 answer[i] 等于 nums 中除 nums[i] 之外其余各元素的乘积 。",{"_path":222,"title":221,"description":2132},"给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。",1715137601194]