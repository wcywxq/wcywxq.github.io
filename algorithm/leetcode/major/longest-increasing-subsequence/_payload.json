[{"data":1,"prerenderedAt":2140},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/longest-increasing-subsequence":559,"/algorithm/leetcode/major/longest-increasing-subsequence-surround":2135},[4,272,318,536,544],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":317},"八股文","/endorsement",[276,286,293,304],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"JavaScript","/endorsement/javascript",[290],{"title":291,"_path":292},"语法和数据类型","/endorsement/javascript/grammar-data-types",{"title":294,"_path":295,"children":296},"构建工具","/endorsement/build-tools",[297],{"title":298,"_path":299,"children":300},"Webpack","/endorsement/build-tools/webpack",[301],{"title":302,"_path":303},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":305,"_path":306,"children":307},"Html","/endorsement/html",[308,311,314],{"title":309,"_path":310},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":312,"_path":313},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":315,"_path":316},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":319,"_path":320,"children":321,"icon":535},"代码考核","/code-assessment",[322,427,528],{"title":323,"_path":324,"children":325},"源码实现","/code-assessment/source",[326,360,376,404,411,418,421,424],{"title":327,"_path":328,"children":329},"原生 api","/code-assessment/source/native-api",[330,333,336,339,342,345,348,351,354,357],{"title":331,"_path":332},"polyfill","/code-assessment/source/native-api/polyfill",{"title":334,"_path":335},"ajax","/code-assessment/source/native-api/ajax",{"title":337,"_path":338},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":340,"_path":341},"new 操作符","/code-assessment/source/native-api/new",{"title":343,"_path":344},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":346,"_path":347},"定时器","/code-assessment/source/native-api/timer",{"title":349,"_path":350},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":352,"_path":353},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":355,"_path":356},"extends","/code-assessment/source/native-api/extends",{"title":358,"_path":359},"Promise","/code-assessment/source/native-api/promise",{"title":361,"_path":362,"children":363},"函数 Function","/code-assessment/source/function",[364,367,370,373],{"title":365,"_path":366},"函数防抖","/code-assessment/source/function/debounce",{"title":368,"_path":369},"函数节流","/code-assessment/source/function/throttle",{"title":371,"_path":372},"函数柯理化","/code-assessment/source/function/curry",{"title":374,"_path":375},"函数睡眠","/code-assessment/source/function/sleep",{"title":377,"_path":378,"children":379},"数组 Array","/code-assessment/source/array",[380,383,386,389,392,395,398,401],{"title":381,"_path":382},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":384,"_path":385},"数组扁平化","/code-assessment/source/array/flat",{"title":387,"_path":388},"原型方法","/code-assessment/source/array/prototype-method",{"title":390,"_path":391},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":393,"_path":394},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":396,"_path":397},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":399,"_path":400},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":402,"_path":403},"二维数组","/code-assessment/source/array/2d-array",{"title":405,"_path":406,"children":407},"字符串 String","/code-assessment/source/string",[408],{"title":409,"_path":410},"repeat()","/code-assessment/source/string/repeat",{"title":412,"_path":413,"children":414},"集合 Set","/code-assessment/source/set",[415],{"title":416,"_path":417},"遍历集合","/code-assessment/source/set/traverse",{"title":419,"_path":420},"获取通用类型","/code-assessment/source/get-generic-type",{"title":422,"_path":423},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":425,"_path":426},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":428,"_path":429,"children":430},"业务场景","/code-assessment/scene",[431,461,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525],{"title":358,"_path":432,"children":433},"/code-assessment/scene/promise",[434,437,440,443,446,449,452,455,458],{"title":435,"_path":436},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":438,"_path":439},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":441,"_path":442},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":444,"_path":445},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":447,"_path":448},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":450,"_path":451},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":453,"_path":454},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":456,"_path":457},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":459,"_path":460},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":462,"_path":463,"children":464},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[465,468],{"title":466,"_path":467},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":469,"_path":470},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":472,"_path":473},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":475,"_path":476},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":478,"_path":479},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":481,"_path":482},"倒计时","/code-assessment/scene/countdown",{"title":484,"_path":485},"日期格式化","/code-assessment/scene/date-format",{"title":487,"_path":488},"实现前端路由","/code-assessment/scene/frontend-route",{"title":490,"_path":491},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":493,"_path":494},"lodash.get","/code-assessment/scene/lodash-get",{"title":496,"_path":497},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":499,"_path":500},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":502,"_path":503},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":505,"_path":506},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":508,"_path":509},"随机数","/code-assessment/scene/random-number",{"title":511,"_path":512},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":514,"_path":515},"sku 算法实现","/code-assessment/scene/sku",{"title":517,"_path":518},"整数分割","/code-assessment/scene/split-number",{"title":520,"_path":521},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":523,"_path":524},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":526,"_path":527},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":529,"_path":530,"children":531},"Ts 类型挑战","/code-assessment/type-challeges",[532],{"title":533,"_path":534},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":537,"_path":538,"children":539,"icon":543},"项目","/project",[540],{"title":541,"_path":542},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":545,"_path":546,"children":547,"icon":558},"后端语言","/backend-languages",[548],{"title":549,"_path":550,"children":551},"Python","/backend-languages/python",[552,555],{"title":553,"_path":554},"基础","/backend-languages/python/base",{"title":556,"_path":557},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":219,"_dir":560,"_draft":561,"_partial":561,"_locale":562,"title":218,"description":563,"url":564,"body":565,"_type":2130,"_id":2131,"_source":2132,"_file":2133,"_extension":2134},"major",false,"","给你一个整数数组 nums ，找到其中最长严格递增子序列的长度。","https://leetcode.cn/problems/longest-increasing-subsequence",{"type":566,"children":567,"toc":2123},"root",[568,575,580,585,624,629,651,656,679,684,699,704,709,715,720,727,758,1413,1418,1426,1431,1439,1444,1449,1457,1462,1470,1475,1483,1488,1497,1505,1519,2117],{"type":569,"tag":570,"props":571,"children":572},"element","p",{},[573],{"type":574,"value":563},"text",{"type":569,"tag":570,"props":576,"children":577},{},[578],{"type":574,"value":579},"子序列 是由数组派生而来的序列，删除（或不删除）数组中的元素而不改变其余元素的顺序。例如，[3,6,2,7] 是数组 [0,3,1,6,2,2,7] 的\n子序列\n。",{"type":569,"tag":570,"props":581,"children":582},{},[583],{"type":574,"value":584},"示例 1：",{"type":569,"tag":586,"props":587,"children":590},"pre",{"className":588,"code":589,"language":574,"meta":562,"style":562},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [10,9,2,5,3,7,101,18]\n输出：4\n解释：最长递增子序列是 [2,3,7,101]，因此长度为 4 。\n",[591],{"type":569,"tag":592,"props":593,"children":594},"code",{"__ignoreMap":562},[595,606,615],{"type":569,"tag":596,"props":597,"children":600},"span",{"class":598,"line":599},"line",1,[601],{"type":569,"tag":596,"props":602,"children":603},{},[604],{"type":574,"value":605},"输入：nums = [10,9,2,5,3,7,101,18]\n",{"type":569,"tag":596,"props":607,"children":609},{"class":598,"line":608},2,[610],{"type":569,"tag":596,"props":611,"children":612},{},[613],{"type":574,"value":614},"输出：4\n",{"type":569,"tag":596,"props":616,"children":618},{"class":598,"line":617},3,[619],{"type":569,"tag":596,"props":620,"children":621},{},[622],{"type":574,"value":623},"解释：最长递增子序列是 [2,3,7,101]，因此长度为 4 。\n",{"type":569,"tag":570,"props":625,"children":626},{},[627],{"type":574,"value":628},"示例 2：",{"type":569,"tag":586,"props":630,"children":632},{"className":588,"code":631,"language":574,"meta":562,"style":562},"输入：nums = [0,1,0,3,2,3]\n输出：4\n",[633],{"type":569,"tag":592,"props":634,"children":635},{"__ignoreMap":562},[636,644],{"type":569,"tag":596,"props":637,"children":638},{"class":598,"line":599},[639],{"type":569,"tag":596,"props":640,"children":641},{},[642],{"type":574,"value":643},"输入：nums = [0,1,0,3,2,3]\n",{"type":569,"tag":596,"props":645,"children":646},{"class":598,"line":608},[647],{"type":569,"tag":596,"props":648,"children":649},{},[650],{"type":574,"value":614},{"type":569,"tag":570,"props":652,"children":653},{},[654],{"type":574,"value":655},"示例 3：",{"type":569,"tag":586,"props":657,"children":659},{"className":588,"code":658,"language":574,"meta":562,"style":562},"输入：nums = [7,7,7,7,7,7,7]\n输出：1\n",[660],{"type":569,"tag":592,"props":661,"children":662},{"__ignoreMap":562},[663,671],{"type":569,"tag":596,"props":664,"children":665},{"class":598,"line":599},[666],{"type":569,"tag":596,"props":667,"children":668},{},[669],{"type":574,"value":670},"输入：nums = [7,7,7,7,7,7,7]\n",{"type":569,"tag":596,"props":672,"children":673},{"class":598,"line":608},[674],{"type":569,"tag":596,"props":675,"children":676},{},[677],{"type":574,"value":678},"输出：1\n",{"type":569,"tag":570,"props":680,"children":681},{},[682],{"type":574,"value":683},"提示：",{"type":569,"tag":685,"props":686,"children":687},"ul",{},[688,694],{"type":569,"tag":689,"props":690,"children":691},"li",{},[692],{"type":574,"value":693},"1 \u003C= nums.length \u003C= 2500",{"type":569,"tag":689,"props":695,"children":696},{},[697],{"type":574,"value":698},"-10^4 \u003C= nums[i] \u003C= 10^4",{"type":569,"tag":570,"props":700,"children":701},{},[702],{"type":574,"value":703},"进阶：",{"type":569,"tag":570,"props":705,"children":706},{},[707],{"type":574,"value":708},"你能将算法的时间复杂度降低到 O(n log(n)) 吗?",{"type":569,"tag":710,"props":711,"children":713},"h2",{"id":712},"解题思路",[714],{"type":574,"value":712},{"type":569,"tag":710,"props":716,"children":718},{"id":717},"实现",[719],{"type":574,"value":717},{"type":569,"tag":721,"props":722,"children":724},"h3",{"id":723},"贪心-查找",[725],{"type":574,"value":726},"贪心 + 查找",{"type":569,"tag":685,"props":728,"children":729},{},[730,735,753],{"type":569,"tag":689,"props":731,"children":732},{},[733],{"type":574,"value":734},"贪心思路：如果要使上升子序列尽可能的长，则需要让序列上升得尽可能慢，因此希望每次在上升子序列最后加上的那个数尽可能的小。",{"type":569,"tag":689,"props":736,"children":737},{},[738,740],{"type":574,"value":739},"算法流程：\n",{"type":569,"tag":685,"props":741,"children":742},{},[743,748],{"type":569,"tag":689,"props":744,"children":745},{},[746],{"type":574,"value":747},"当遍历的数字 > 记录最后一项末尾数字时，新增记录",{"type":569,"tag":689,"props":749,"children":750},{},[751],{"type":574,"value":752},"否则，找到记录中第一个末尾大于该数字的记录(可用二分查找进行优化)，更改其末尾",{"type":569,"tag":689,"props":754,"children":755},{},[756],{"type":574,"value":757},"优化：由于都是通过操作末尾项，因此可以转换为一维数组来解决此问题",{"type":569,"tag":586,"props":759,"children":763},{"className":760,"code":761,"language":762,"meta":562,"style":562},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar lengthOfLIS = function (nums) {\n  if (nums.length === 0) return 0\n\n  const tails = [nums[0]] // 原数组第 0 项\n\n  for (let i = 1; i \u003C nums.length; i++) {\n    if (nums[i] > tails[tails.length - 1]) {\n      tails.push(nums[i])\n    } else {\n      // 这里的查找方式可以优化为二分查找\n      const index = tails.findIndex(x => x >= nums[i])\n      tails[index] = nums[i]\n    }\n  }\n\n  return tails.length\n};\n","js",[764],{"type":569,"tag":592,"props":765,"children":766},{"__ignoreMap":562},[767,776,818,848,857,903,956,966,1013,1021,1101,1176,1216,1234,1243,1314,1356,1365,1374,1382,1404],{"type":569,"tag":596,"props":768,"children":769},{"class":598,"line":599},[770],{"type":569,"tag":596,"props":771,"children":773},{"style":772},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[774],{"type":574,"value":775},"/**\n",{"type":569,"tag":596,"props":777,"children":778},{"class":598,"line":608},[779,784,790,796,801,807,812],{"type":569,"tag":596,"props":780,"children":781},{"style":772},[782],{"type":574,"value":783}," * ",{"type":569,"tag":596,"props":785,"children":787},{"style":786},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[788],{"type":574,"value":789},"@",{"type":569,"tag":596,"props":791,"children":793},{"style":792},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[794],{"type":574,"value":795},"param",{"type":569,"tag":596,"props":797,"children":798},{"style":786},[799],{"type":574,"value":800}," {",{"type":569,"tag":596,"props":802,"children":804},{"style":803},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[805],{"type":574,"value":806},"number[]",{"type":569,"tag":596,"props":808,"children":809},{"style":786},[810],{"type":574,"value":811},"}",{"type":569,"tag":596,"props":813,"children":815},{"style":814},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[816],{"type":574,"value":817}," nums\n",{"type":569,"tag":596,"props":819,"children":820},{"class":598,"line":617},[821,825,829,834,838,843],{"type":569,"tag":596,"props":822,"children":823},{"style":772},[824],{"type":574,"value":783},{"type":569,"tag":596,"props":826,"children":827},{"style":786},[828],{"type":574,"value":789},{"type":569,"tag":596,"props":830,"children":831},{"style":792},[832],{"type":574,"value":833},"return",{"type":569,"tag":596,"props":835,"children":836},{"style":786},[837],{"type":574,"value":800},{"type":569,"tag":596,"props":839,"children":840},{"style":803},[841],{"type":574,"value":842},"number",{"type":569,"tag":596,"props":844,"children":845},{"style":786},[846],{"type":574,"value":847},"}\n",{"type":569,"tag":596,"props":849,"children":851},{"class":598,"line":850},4,[852],{"type":569,"tag":596,"props":853,"children":854},{"style":772},[855],{"type":574,"value":856}," */\n",{"type":569,"tag":596,"props":858,"children":860},{"class":598,"line":859},5,[861,867,873,878,883,888,893,898],{"type":569,"tag":596,"props":862,"children":864},{"style":863},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[865],{"type":574,"value":866},"var",{"type":569,"tag":596,"props":868,"children":870},{"style":869},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[871],{"type":574,"value":872}," lengthOfLIS",{"type":569,"tag":596,"props":874,"children":875},{"style":786},[876],{"type":574,"value":877}," =",{"type":569,"tag":596,"props":879,"children":880},{"style":863},[881],{"type":574,"value":882}," function",{"type":569,"tag":596,"props":884,"children":885},{"style":786},[886],{"type":574,"value":887}," (",{"type":569,"tag":596,"props":889,"children":890},{"style":814},[891],{"type":574,"value":892},"nums",{"type":569,"tag":596,"props":894,"children":895},{"style":786},[896],{"type":574,"value":897},")",{"type":569,"tag":596,"props":899,"children":900},{"style":786},[901],{"type":574,"value":902}," {\n",{"type":569,"tag":596,"props":904,"children":906},{"class":598,"line":905},6,[907,912,916,920,925,931,936,942,946,951],{"type":569,"tag":596,"props":908,"children":909},{"style":792},[910],{"type":574,"value":911},"  if",{"type":569,"tag":596,"props":913,"children":914},{"style":786},[915],{"type":574,"value":887},{"type":569,"tag":596,"props":917,"children":918},{"style":814},[919],{"type":574,"value":892},{"type":569,"tag":596,"props":921,"children":922},{"style":786},[923],{"type":574,"value":924},".",{"type":569,"tag":596,"props":926,"children":928},{"style":927},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[929],{"type":574,"value":930},"length",{"type":569,"tag":596,"props":932,"children":933},{"style":863},[934],{"type":574,"value":935}," ===",{"type":569,"tag":596,"props":937,"children":939},{"style":938},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[940],{"type":574,"value":941}," 0",{"type":569,"tag":596,"props":943,"children":944},{"style":786},[945],{"type":574,"value":897},{"type":569,"tag":596,"props":947,"children":948},{"style":792},[949],{"type":574,"value":950}," return",{"type":569,"tag":596,"props":952,"children":953},{"style":938},[954],{"type":574,"value":955}," 0\n",{"type":569,"tag":596,"props":957,"children":959},{"class":598,"line":958},7,[960],{"type":569,"tag":596,"props":961,"children":963},{"emptyLinePlaceholder":962},true,[964],{"type":574,"value":965},"\n",{"type":569,"tag":596,"props":967,"children":969},{"class":598,"line":968},8,[970,975,980,984,989,993,998,1003,1008],{"type":569,"tag":596,"props":971,"children":972},{"style":863},[973],{"type":574,"value":974},"  const",{"type":569,"tag":596,"props":976,"children":977},{"style":814},[978],{"type":574,"value":979}," tails",{"type":569,"tag":596,"props":981,"children":982},{"style":786},[983],{"type":574,"value":877},{"type":569,"tag":596,"props":985,"children":986},{"style":786},[987],{"type":574,"value":988}," [",{"type":569,"tag":596,"props":990,"children":991},{"style":814},[992],{"type":574,"value":892},{"type":569,"tag":596,"props":994,"children":995},{"style":786},[996],{"type":574,"value":997},"[",{"type":569,"tag":596,"props":999,"children":1000},{"style":938},[1001],{"type":574,"value":1002},"0",{"type":569,"tag":596,"props":1004,"children":1005},{"style":786},[1006],{"type":574,"value":1007},"]]",{"type":569,"tag":596,"props":1009,"children":1010},{"style":772},[1011],{"type":574,"value":1012}," // 原数组第 0 项\n",{"type":569,"tag":596,"props":1014,"children":1016},{"class":598,"line":1015},9,[1017],{"type":569,"tag":596,"props":1018,"children":1019},{"emptyLinePlaceholder":962},[1020],{"type":574,"value":965},{"type":569,"tag":596,"props":1022,"children":1024},{"class":598,"line":1023},10,[1025,1030,1034,1039,1044,1048,1053,1058,1062,1067,1072,1076,1080,1084,1088,1093,1097],{"type":569,"tag":596,"props":1026,"children":1027},{"style":792},[1028],{"type":574,"value":1029},"  for",{"type":569,"tag":596,"props":1031,"children":1032},{"style":786},[1033],{"type":574,"value":887},{"type":569,"tag":596,"props":1035,"children":1036},{"style":863},[1037],{"type":574,"value":1038},"let",{"type":569,"tag":596,"props":1040,"children":1041},{"style":814},[1042],{"type":574,"value":1043}," i",{"type":569,"tag":596,"props":1045,"children":1046},{"style":786},[1047],{"type":574,"value":877},{"type":569,"tag":596,"props":1049,"children":1050},{"style":938},[1051],{"type":574,"value":1052}," 1",{"type":569,"tag":596,"props":1054,"children":1055},{"style":786},[1056],{"type":574,"value":1057},";",{"type":569,"tag":596,"props":1059,"children":1060},{"style":814},[1061],{"type":574,"value":1043},{"type":569,"tag":596,"props":1063,"children":1064},{"style":786},[1065],{"type":574,"value":1066}," \u003C",{"type":569,"tag":596,"props":1068,"children":1069},{"style":814},[1070],{"type":574,"value":1071}," nums",{"type":569,"tag":596,"props":1073,"children":1074},{"style":786},[1075],{"type":574,"value":924},{"type":569,"tag":596,"props":1077,"children":1078},{"style":927},[1079],{"type":574,"value":930},{"type":569,"tag":596,"props":1081,"children":1082},{"style":786},[1083],{"type":574,"value":1057},{"type":569,"tag":596,"props":1085,"children":1086},{"style":814},[1087],{"type":574,"value":1043},{"type":569,"tag":596,"props":1089,"children":1090},{"style":863},[1091],{"type":574,"value":1092},"++",{"type":569,"tag":596,"props":1094,"children":1095},{"style":786},[1096],{"type":574,"value":897},{"type":569,"tag":596,"props":1098,"children":1099},{"style":786},[1100],{"type":574,"value":902},{"type":569,"tag":596,"props":1102,"children":1104},{"class":598,"line":1103},11,[1105,1110,1114,1118,1122,1127,1132,1137,1141,1145,1150,1154,1158,1163,1167,1172],{"type":569,"tag":596,"props":1106,"children":1107},{"style":792},[1108],{"type":574,"value":1109},"    if",{"type":569,"tag":596,"props":1111,"children":1112},{"style":786},[1113],{"type":574,"value":887},{"type":569,"tag":596,"props":1115,"children":1116},{"style":814},[1117],{"type":574,"value":892},{"type":569,"tag":596,"props":1119,"children":1120},{"style":786},[1121],{"type":574,"value":997},{"type":569,"tag":596,"props":1123,"children":1124},{"style":814},[1125],{"type":574,"value":1126},"i",{"type":569,"tag":596,"props":1128,"children":1129},{"style":786},[1130],{"type":574,"value":1131},"]",{"type":569,"tag":596,"props":1133,"children":1134},{"style":786},[1135],{"type":574,"value":1136}," >",{"type":569,"tag":596,"props":1138,"children":1139},{"style":814},[1140],{"type":574,"value":979},{"type":569,"tag":596,"props":1142,"children":1143},{"style":786},[1144],{"type":574,"value":997},{"type":569,"tag":596,"props":1146,"children":1147},{"style":814},[1148],{"type":574,"value":1149},"tails",{"type":569,"tag":596,"props":1151,"children":1152},{"style":786},[1153],{"type":574,"value":924},{"type":569,"tag":596,"props":1155,"children":1156},{"style":927},[1157],{"type":574,"value":930},{"type":569,"tag":596,"props":1159,"children":1160},{"style":863},[1161],{"type":574,"value":1162}," -",{"type":569,"tag":596,"props":1164,"children":1165},{"style":938},[1166],{"type":574,"value":1052},{"type":569,"tag":596,"props":1168,"children":1169},{"style":786},[1170],{"type":574,"value":1171},"])",{"type":569,"tag":596,"props":1173,"children":1174},{"style":786},[1175],{"type":574,"value":902},{"type":569,"tag":596,"props":1177,"children":1179},{"class":598,"line":1178},12,[1180,1185,1189,1194,1199,1203,1207,1211],{"type":569,"tag":596,"props":1181,"children":1182},{"style":814},[1183],{"type":574,"value":1184},"      tails",{"type":569,"tag":596,"props":1186,"children":1187},{"style":786},[1188],{"type":574,"value":924},{"type":569,"tag":596,"props":1190,"children":1191},{"style":869},[1192],{"type":574,"value":1193},"push",{"type":569,"tag":596,"props":1195,"children":1196},{"style":786},[1197],{"type":574,"value":1198},"(",{"type":569,"tag":596,"props":1200,"children":1201},{"style":814},[1202],{"type":574,"value":892},{"type":569,"tag":596,"props":1204,"children":1205},{"style":786},[1206],{"type":574,"value":997},{"type":569,"tag":596,"props":1208,"children":1209},{"style":814},[1210],{"type":574,"value":1126},{"type":569,"tag":596,"props":1212,"children":1213},{"style":786},[1214],{"type":574,"value":1215},"])\n",{"type":569,"tag":596,"props":1217,"children":1219},{"class":598,"line":1218},13,[1220,1225,1230],{"type":569,"tag":596,"props":1221,"children":1222},{"style":786},[1223],{"type":574,"value":1224},"    }",{"type":569,"tag":596,"props":1226,"children":1227},{"style":792},[1228],{"type":574,"value":1229}," else",{"type":569,"tag":596,"props":1231,"children":1232},{"style":786},[1233],{"type":574,"value":902},{"type":569,"tag":596,"props":1235,"children":1237},{"class":598,"line":1236},14,[1238],{"type":569,"tag":596,"props":1239,"children":1240},{"style":772},[1241],{"type":574,"value":1242},"      // 这里的查找方式可以优化为二分查找\n",{"type":569,"tag":596,"props":1244,"children":1246},{"class":598,"line":1245},15,[1247,1252,1257,1261,1265,1269,1274,1278,1283,1288,1293,1298,1302,1306,1310],{"type":569,"tag":596,"props":1248,"children":1249},{"style":863},[1250],{"type":574,"value":1251},"      const",{"type":569,"tag":596,"props":1253,"children":1254},{"style":814},[1255],{"type":574,"value":1256}," index",{"type":569,"tag":596,"props":1258,"children":1259},{"style":786},[1260],{"type":574,"value":877},{"type":569,"tag":596,"props":1262,"children":1263},{"style":814},[1264],{"type":574,"value":979},{"type":569,"tag":596,"props":1266,"children":1267},{"style":786},[1268],{"type":574,"value":924},{"type":569,"tag":596,"props":1270,"children":1271},{"style":869},[1272],{"type":574,"value":1273},"findIndex",{"type":569,"tag":596,"props":1275,"children":1276},{"style":786},[1277],{"type":574,"value":1198},{"type":569,"tag":596,"props":1279,"children":1280},{"style":814},[1281],{"type":574,"value":1282},"x",{"type":569,"tag":596,"props":1284,"children":1285},{"style":786},[1286],{"type":574,"value":1287}," =>",{"type":569,"tag":596,"props":1289,"children":1290},{"style":814},[1291],{"type":574,"value":1292}," x",{"type":569,"tag":596,"props":1294,"children":1295},{"style":786},[1296],{"type":574,"value":1297}," >=",{"type":569,"tag":596,"props":1299,"children":1300},{"style":814},[1301],{"type":574,"value":1071},{"type":569,"tag":596,"props":1303,"children":1304},{"style":786},[1305],{"type":574,"value":997},{"type":569,"tag":596,"props":1307,"children":1308},{"style":814},[1309],{"type":574,"value":1126},{"type":569,"tag":596,"props":1311,"children":1312},{"style":786},[1313],{"type":574,"value":1215},{"type":569,"tag":596,"props":1315,"children":1317},{"class":598,"line":1316},16,[1318,1322,1326,1331,1335,1339,1343,1347,1351],{"type":569,"tag":596,"props":1319,"children":1320},{"style":814},[1321],{"type":574,"value":1184},{"type":569,"tag":596,"props":1323,"children":1324},{"style":786},[1325],{"type":574,"value":997},{"type":569,"tag":596,"props":1327,"children":1328},{"style":814},[1329],{"type":574,"value":1330},"index",{"type":569,"tag":596,"props":1332,"children":1333},{"style":786},[1334],{"type":574,"value":1131},{"type":569,"tag":596,"props":1336,"children":1337},{"style":786},[1338],{"type":574,"value":877},{"type":569,"tag":596,"props":1340,"children":1341},{"style":814},[1342],{"type":574,"value":1071},{"type":569,"tag":596,"props":1344,"children":1345},{"style":786},[1346],{"type":574,"value":997},{"type":569,"tag":596,"props":1348,"children":1349},{"style":814},[1350],{"type":574,"value":1126},{"type":569,"tag":596,"props":1352,"children":1353},{"style":786},[1354],{"type":574,"value":1355},"]\n",{"type":569,"tag":596,"props":1357,"children":1359},{"class":598,"line":1358},17,[1360],{"type":569,"tag":596,"props":1361,"children":1362},{"style":786},[1363],{"type":574,"value":1364},"    }\n",{"type":569,"tag":596,"props":1366,"children":1368},{"class":598,"line":1367},18,[1369],{"type":569,"tag":596,"props":1370,"children":1371},{"style":786},[1372],{"type":574,"value":1373},"  }\n",{"type":569,"tag":596,"props":1375,"children":1377},{"class":598,"line":1376},19,[1378],{"type":569,"tag":596,"props":1379,"children":1380},{"emptyLinePlaceholder":962},[1381],{"type":574,"value":965},{"type":569,"tag":596,"props":1383,"children":1385},{"class":598,"line":1384},20,[1386,1391,1395,1399],{"type":569,"tag":596,"props":1387,"children":1388},{"style":792},[1389],{"type":574,"value":1390},"  return",{"type":569,"tag":596,"props":1392,"children":1393},{"style":814},[1394],{"type":574,"value":979},{"type":569,"tag":596,"props":1396,"children":1397},{"style":786},[1398],{"type":574,"value":924},{"type":569,"tag":596,"props":1400,"children":1401},{"style":927},[1402],{"type":574,"value":1403},"length\n",{"type":569,"tag":596,"props":1405,"children":1407},{"class":598,"line":1406},21,[1408],{"type":569,"tag":596,"props":1409,"children":1410},{"style":786},[1411],{"type":574,"value":1412},"};\n",{"type":569,"tag":721,"props":1414,"children":1416},{"id":1415},"动态规划",[1417],{"type":574,"value":1415},{"type":569,"tag":685,"props":1419,"children":1420},{},[1421],{"type":569,"tag":689,"props":1422,"children":1423},{},[1424],{"type":574,"value":1425},"确定 dp 数组及下标含义",{"type":569,"tag":570,"props":1427,"children":1428},{},[1429],{"type":574,"value":1430},"dp[i] 表示 [0, i] 区间内以 nums[i] 结尾的最长递增子序列的长度",{"type":569,"tag":685,"props":1432,"children":1433},{},[1434],{"type":569,"tag":689,"props":1435,"children":1436},{},[1437],{"type":574,"value":1438},"确定递推公式：dp[i] = Math.max(dp[i], dp[j] + 1)",{"type":569,"tag":570,"props":1440,"children":1441},{},[1442],{"type":574,"value":1443},"如果 nums[i] > nums[j] 则说明当前元素复合递增子序列，则 dp[i] = Math.max(dp[i], dp[j] + 1)",{"type":569,"tag":570,"props":1445,"children":1446},{},[1447],{"type":574,"value":1448},"如果 nums[i] \u003C nums[j] 则说明当前元素不符合递增子序列，则什么都不做",{"type":569,"tag":685,"props":1450,"children":1451},{},[1452],{"type":569,"tag":689,"props":1453,"children":1454},{},[1455],{"type":574,"value":1456},"如何初始化 dp 数组",{"type":569,"tag":570,"props":1458,"children":1459},{},[1460],{"type":574,"value":1461},"每一个 i，对应的 dp[i] (即最长递增子序列)起始大小至少都是 1",{"type":569,"tag":685,"props":1463,"children":1464},{},[1465],{"type":569,"tag":689,"props":1466,"children":1467},{},[1468],{"type":574,"value":1469},"确定遍历顺序",{"type":569,"tag":570,"props":1471,"children":1472},{},[1473],{"type":574,"value":1474},"dp[i] 是有 [0, i-1] 各个位置的最长递增子序列推导而来，那么遍历 i 一定是从前向后遍历",{"type":569,"tag":685,"props":1476,"children":1477},{},[1478],{"type":569,"tag":689,"props":1479,"children":1480},{},[1481],{"type":574,"value":1482},"举例推导 dp 数组",{"type":569,"tag":570,"props":1484,"children":1485},{},[1486],{"type":574,"value":1487},"以 nums = [1, 3, 6, 7, 9, 4, 10, 5, 6] 为例：",{"type":569,"tag":570,"props":1489,"children":1490},{},[1491],{"type":569,"tag":1492,"props":1493,"children":1496},"img",{"alt":1494,"src":1495},"table","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.300_table.png",[],{"type":569,"tag":685,"props":1498,"children":1499},{},[1500],{"type":569,"tag":689,"props":1501,"children":1502},{},[1503],{"type":574,"value":1504},"复杂度",{"type":569,"tag":1506,"props":1507,"children":1508},"ol",{},[1509,1514],{"type":569,"tag":689,"props":1510,"children":1511},{},[1512],{"type":574,"value":1513},"时间复杂度：O(n^2)，遍历计算 dp 列表需 O(n)，计算每个 dp[i] 需 O(n)",{"type":569,"tag":689,"props":1515,"children":1516},{},[1517],{"type":574,"value":1518},"空间复杂度：O(n)",{"type":569,"tag":586,"props":1520,"children":1522},{"className":760,"code":1521,"language":762,"meta":562,"style":562},"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar lengthOfLIS = function (nums) {\n  let n = nums.length;\n  if (n === 0) return 0;\n\n  let dp = new Array(n).fill(1);\n\n  for (let i = 0; i \u003C n; i++) {\n    for (let j = 0; j \u003C i; j++) {\n      if (nums[i] > nums[j]) {\n        dp[i] = Math.max(dp[i], dp[j] + 1);\n      }\n    }\n  }\n\n  return Math.max(...dp);\n};\n",[1523],{"type":569,"tag":592,"props":1524,"children":1525},{"__ignoreMap":562},[1526,1533,1564,1591,1598,1633,1667,1707,1714,1772,1779,1842,1907,1960,2049,2057,2064,2071,2078,2110],{"type":569,"tag":596,"props":1527,"children":1528},{"class":598,"line":599},[1529],{"type":569,"tag":596,"props":1530,"children":1531},{"style":772},[1532],{"type":574,"value":775},{"type":569,"tag":596,"props":1534,"children":1535},{"class":598,"line":608},[1536,1540,1544,1548,1552,1556,1560],{"type":569,"tag":596,"props":1537,"children":1538},{"style":772},[1539],{"type":574,"value":783},{"type":569,"tag":596,"props":1541,"children":1542},{"style":786},[1543],{"type":574,"value":789},{"type":569,"tag":596,"props":1545,"children":1546},{"style":792},[1547],{"type":574,"value":795},{"type":569,"tag":596,"props":1549,"children":1550},{"style":786},[1551],{"type":574,"value":800},{"type":569,"tag":596,"props":1553,"children":1554},{"style":803},[1555],{"type":574,"value":806},{"type":569,"tag":596,"props":1557,"children":1558},{"style":786},[1559],{"type":574,"value":811},{"type":569,"tag":596,"props":1561,"children":1562},{"style":814},[1563],{"type":574,"value":817},{"type":569,"tag":596,"props":1565,"children":1566},{"class":598,"line":617},[1567,1571,1575,1579,1583,1587],{"type":569,"tag":596,"props":1568,"children":1569},{"style":772},[1570],{"type":574,"value":783},{"type":569,"tag":596,"props":1572,"children":1573},{"style":786},[1574],{"type":574,"value":789},{"type":569,"tag":596,"props":1576,"children":1577},{"style":792},[1578],{"type":574,"value":833},{"type":569,"tag":596,"props":1580,"children":1581},{"style":786},[1582],{"type":574,"value":800},{"type":569,"tag":596,"props":1584,"children":1585},{"style":803},[1586],{"type":574,"value":842},{"type":569,"tag":596,"props":1588,"children":1589},{"style":786},[1590],{"type":574,"value":847},{"type":569,"tag":596,"props":1592,"children":1593},{"class":598,"line":850},[1594],{"type":569,"tag":596,"props":1595,"children":1596},{"style":772},[1597],{"type":574,"value":856},{"type":569,"tag":596,"props":1599,"children":1600},{"class":598,"line":859},[1601,1605,1609,1613,1617,1621,1625,1629],{"type":569,"tag":596,"props":1602,"children":1603},{"style":863},[1604],{"type":574,"value":866},{"type":569,"tag":596,"props":1606,"children":1607},{"style":869},[1608],{"type":574,"value":872},{"type":569,"tag":596,"props":1610,"children":1611},{"style":786},[1612],{"type":574,"value":877},{"type":569,"tag":596,"props":1614,"children":1615},{"style":863},[1616],{"type":574,"value":882},{"type":569,"tag":596,"props":1618,"children":1619},{"style":786},[1620],{"type":574,"value":887},{"type":569,"tag":596,"props":1622,"children":1623},{"style":814},[1624],{"type":574,"value":892},{"type":569,"tag":596,"props":1626,"children":1627},{"style":786},[1628],{"type":574,"value":897},{"type":569,"tag":596,"props":1630,"children":1631},{"style":786},[1632],{"type":574,"value":902},{"type":569,"tag":596,"props":1634,"children":1635},{"class":598,"line":905},[1636,1641,1646,1650,1654,1658,1662],{"type":569,"tag":596,"props":1637,"children":1638},{"style":863},[1639],{"type":574,"value":1640},"  let",{"type":569,"tag":596,"props":1642,"children":1643},{"style":814},[1644],{"type":574,"value":1645}," n",{"type":569,"tag":596,"props":1647,"children":1648},{"style":786},[1649],{"type":574,"value":877},{"type":569,"tag":596,"props":1651,"children":1652},{"style":814},[1653],{"type":574,"value":1071},{"type":569,"tag":596,"props":1655,"children":1656},{"style":786},[1657],{"type":574,"value":924},{"type":569,"tag":596,"props":1659,"children":1660},{"style":927},[1661],{"type":574,"value":930},{"type":569,"tag":596,"props":1663,"children":1664},{"style":786},[1665],{"type":574,"value":1666},";\n",{"type":569,"tag":596,"props":1668,"children":1669},{"class":598,"line":958},[1670,1674,1678,1683,1687,1691,1695,1699,1703],{"type":569,"tag":596,"props":1671,"children":1672},{"style":792},[1673],{"type":574,"value":911},{"type":569,"tag":596,"props":1675,"children":1676},{"style":786},[1677],{"type":574,"value":887},{"type":569,"tag":596,"props":1679,"children":1680},{"style":814},[1681],{"type":574,"value":1682},"n",{"type":569,"tag":596,"props":1684,"children":1685},{"style":863},[1686],{"type":574,"value":935},{"type":569,"tag":596,"props":1688,"children":1689},{"style":938},[1690],{"type":574,"value":941},{"type":569,"tag":596,"props":1692,"children":1693},{"style":786},[1694],{"type":574,"value":897},{"type":569,"tag":596,"props":1696,"children":1697},{"style":792},[1698],{"type":574,"value":950},{"type":569,"tag":596,"props":1700,"children":1701},{"style":938},[1702],{"type":574,"value":941},{"type":569,"tag":596,"props":1704,"children":1705},{"style":786},[1706],{"type":574,"value":1666},{"type":569,"tag":596,"props":1708,"children":1709},{"class":598,"line":968},[1710],{"type":569,"tag":596,"props":1711,"children":1712},{"emptyLinePlaceholder":962},[1713],{"type":574,"value":965},{"type":569,"tag":596,"props":1715,"children":1716},{"class":598,"line":1015},[1717,1721,1726,1730,1735,1740,1744,1748,1753,1758,1762,1767],{"type":569,"tag":596,"props":1718,"children":1719},{"style":863},[1720],{"type":574,"value":1640},{"type":569,"tag":596,"props":1722,"children":1723},{"style":814},[1724],{"type":574,"value":1725}," dp",{"type":569,"tag":596,"props":1727,"children":1728},{"style":786},[1729],{"type":574,"value":877},{"type":569,"tag":596,"props":1731,"children":1732},{"style":863},[1733],{"type":574,"value":1734}," new",{"type":569,"tag":596,"props":1736,"children":1737},{"style":869},[1738],{"type":574,"value":1739}," Array",{"type":569,"tag":596,"props":1741,"children":1742},{"style":786},[1743],{"type":574,"value":1198},{"type":569,"tag":596,"props":1745,"children":1746},{"style":814},[1747],{"type":574,"value":1682},{"type":569,"tag":596,"props":1749,"children":1750},{"style":786},[1751],{"type":574,"value":1752},").",{"type":569,"tag":596,"props":1754,"children":1755},{"style":869},[1756],{"type":574,"value":1757},"fill",{"type":569,"tag":596,"props":1759,"children":1760},{"style":786},[1761],{"type":574,"value":1198},{"type":569,"tag":596,"props":1763,"children":1764},{"style":938},[1765],{"type":574,"value":1766},"1",{"type":569,"tag":596,"props":1768,"children":1769},{"style":786},[1770],{"type":574,"value":1771},");\n",{"type":569,"tag":596,"props":1773,"children":1774},{"class":598,"line":1023},[1775],{"type":569,"tag":596,"props":1776,"children":1777},{"emptyLinePlaceholder":962},[1778],{"type":574,"value":965},{"type":569,"tag":596,"props":1780,"children":1781},{"class":598,"line":1103},[1782,1786,1790,1794,1798,1802,1806,1810,1814,1818,1822,1826,1830,1834,1838],{"type":569,"tag":596,"props":1783,"children":1784},{"style":792},[1785],{"type":574,"value":1029},{"type":569,"tag":596,"props":1787,"children":1788},{"style":786},[1789],{"type":574,"value":887},{"type":569,"tag":596,"props":1791,"children":1792},{"style":863},[1793],{"type":574,"value":1038},{"type":569,"tag":596,"props":1795,"children":1796},{"style":814},[1797],{"type":574,"value":1043},{"type":569,"tag":596,"props":1799,"children":1800},{"style":786},[1801],{"type":574,"value":877},{"type":569,"tag":596,"props":1803,"children":1804},{"style":938},[1805],{"type":574,"value":941},{"type":569,"tag":596,"props":1807,"children":1808},{"style":786},[1809],{"type":574,"value":1057},{"type":569,"tag":596,"props":1811,"children":1812},{"style":814},[1813],{"type":574,"value":1043},{"type":569,"tag":596,"props":1815,"children":1816},{"style":786},[1817],{"type":574,"value":1066},{"type":569,"tag":596,"props":1819,"children":1820},{"style":814},[1821],{"type":574,"value":1645},{"type":569,"tag":596,"props":1823,"children":1824},{"style":786},[1825],{"type":574,"value":1057},{"type":569,"tag":596,"props":1827,"children":1828},{"style":814},[1829],{"type":574,"value":1043},{"type":569,"tag":596,"props":1831,"children":1832},{"style":863},[1833],{"type":574,"value":1092},{"type":569,"tag":596,"props":1835,"children":1836},{"style":786},[1837],{"type":574,"value":897},{"type":569,"tag":596,"props":1839,"children":1840},{"style":786},[1841],{"type":574,"value":902},{"type":569,"tag":596,"props":1843,"children":1844},{"class":598,"line":1178},[1845,1850,1854,1858,1863,1867,1871,1875,1879,1883,1887,1891,1895,1899,1903],{"type":569,"tag":596,"props":1846,"children":1847},{"style":792},[1848],{"type":574,"value":1849},"    for",{"type":569,"tag":596,"props":1851,"children":1852},{"style":786},[1853],{"type":574,"value":887},{"type":569,"tag":596,"props":1855,"children":1856},{"style":863},[1857],{"type":574,"value":1038},{"type":569,"tag":596,"props":1859,"children":1860},{"style":814},[1861],{"type":574,"value":1862}," j",{"type":569,"tag":596,"props":1864,"children":1865},{"style":786},[1866],{"type":574,"value":877},{"type":569,"tag":596,"props":1868,"children":1869},{"style":938},[1870],{"type":574,"value":941},{"type":569,"tag":596,"props":1872,"children":1873},{"style":786},[1874],{"type":574,"value":1057},{"type":569,"tag":596,"props":1876,"children":1877},{"style":814},[1878],{"type":574,"value":1862},{"type":569,"tag":596,"props":1880,"children":1881},{"style":786},[1882],{"type":574,"value":1066},{"type":569,"tag":596,"props":1884,"children":1885},{"style":814},[1886],{"type":574,"value":1043},{"type":569,"tag":596,"props":1888,"children":1889},{"style":786},[1890],{"type":574,"value":1057},{"type":569,"tag":596,"props":1892,"children":1893},{"style":814},[1894],{"type":574,"value":1862},{"type":569,"tag":596,"props":1896,"children":1897},{"style":863},[1898],{"type":574,"value":1092},{"type":569,"tag":596,"props":1900,"children":1901},{"style":786},[1902],{"type":574,"value":897},{"type":569,"tag":596,"props":1904,"children":1905},{"style":786},[1906],{"type":574,"value":902},{"type":569,"tag":596,"props":1908,"children":1909},{"class":598,"line":1218},[1910,1915,1919,1923,1927,1931,1935,1939,1943,1947,1952,1956],{"type":569,"tag":596,"props":1911,"children":1912},{"style":792},[1913],{"type":574,"value":1914},"      if",{"type":569,"tag":596,"props":1916,"children":1917},{"style":786},[1918],{"type":574,"value":887},{"type":569,"tag":596,"props":1920,"children":1921},{"style":814},[1922],{"type":574,"value":892},{"type":569,"tag":596,"props":1924,"children":1925},{"style":786},[1926],{"type":574,"value":997},{"type":569,"tag":596,"props":1928,"children":1929},{"style":814},[1930],{"type":574,"value":1126},{"type":569,"tag":596,"props":1932,"children":1933},{"style":786},[1934],{"type":574,"value":1131},{"type":569,"tag":596,"props":1936,"children":1937},{"style":786},[1938],{"type":574,"value":1136},{"type":569,"tag":596,"props":1940,"children":1941},{"style":814},[1942],{"type":574,"value":1071},{"type":569,"tag":596,"props":1944,"children":1945},{"style":786},[1946],{"type":574,"value":997},{"type":569,"tag":596,"props":1948,"children":1949},{"style":814},[1950],{"type":574,"value":1951},"j",{"type":569,"tag":596,"props":1953,"children":1954},{"style":786},[1955],{"type":574,"value":1171},{"type":569,"tag":596,"props":1957,"children":1958},{"style":786},[1959],{"type":574,"value":902},{"type":569,"tag":596,"props":1961,"children":1962},{"class":598,"line":1236},[1963,1968,1972,1976,1980,1984,1989,1993,1998,2002,2007,2011,2015,2020,2024,2028,2032,2036,2041,2045],{"type":569,"tag":596,"props":1964,"children":1965},{"style":814},[1966],{"type":574,"value":1967},"        dp",{"type":569,"tag":596,"props":1969,"children":1970},{"style":786},[1971],{"type":574,"value":997},{"type":569,"tag":596,"props":1973,"children":1974},{"style":814},[1975],{"type":574,"value":1126},{"type":569,"tag":596,"props":1977,"children":1978},{"style":786},[1979],{"type":574,"value":1131},{"type":569,"tag":596,"props":1981,"children":1982},{"style":786},[1983],{"type":574,"value":877},{"type":569,"tag":596,"props":1985,"children":1986},{"style":814},[1987],{"type":574,"value":1988}," Math",{"type":569,"tag":596,"props":1990,"children":1991},{"style":786},[1992],{"type":574,"value":924},{"type":569,"tag":596,"props":1994,"children":1995},{"style":869},[1996],{"type":574,"value":1997},"max",{"type":569,"tag":596,"props":1999,"children":2000},{"style":786},[2001],{"type":574,"value":1198},{"type":569,"tag":596,"props":2003,"children":2004},{"style":814},[2005],{"type":574,"value":2006},"dp",{"type":569,"tag":596,"props":2008,"children":2009},{"style":786},[2010],{"type":574,"value":997},{"type":569,"tag":596,"props":2012,"children":2013},{"style":814},[2014],{"type":574,"value":1126},{"type":569,"tag":596,"props":2016,"children":2017},{"style":786},[2018],{"type":574,"value":2019},"],",{"type":569,"tag":596,"props":2021,"children":2022},{"style":814},[2023],{"type":574,"value":1725},{"type":569,"tag":596,"props":2025,"children":2026},{"style":786},[2027],{"type":574,"value":997},{"type":569,"tag":596,"props":2029,"children":2030},{"style":814},[2031],{"type":574,"value":1951},{"type":569,"tag":596,"props":2033,"children":2034},{"style":786},[2035],{"type":574,"value":1131},{"type":569,"tag":596,"props":2037,"children":2038},{"style":863},[2039],{"type":574,"value":2040}," +",{"type":569,"tag":596,"props":2042,"children":2043},{"style":938},[2044],{"type":574,"value":1052},{"type":569,"tag":596,"props":2046,"children":2047},{"style":786},[2048],{"type":574,"value":1771},{"type":569,"tag":596,"props":2050,"children":2051},{"class":598,"line":1245},[2052],{"type":569,"tag":596,"props":2053,"children":2054},{"style":786},[2055],{"type":574,"value":2056},"      }\n",{"type":569,"tag":596,"props":2058,"children":2059},{"class":598,"line":1316},[2060],{"type":569,"tag":596,"props":2061,"children":2062},{"style":786},[2063],{"type":574,"value":1364},{"type":569,"tag":596,"props":2065,"children":2066},{"class":598,"line":1358},[2067],{"type":569,"tag":596,"props":2068,"children":2069},{"style":786},[2070],{"type":574,"value":1373},{"type":569,"tag":596,"props":2072,"children":2073},{"class":598,"line":1367},[2074],{"type":569,"tag":596,"props":2075,"children":2076},{"emptyLinePlaceholder":962},[2077],{"type":574,"value":965},{"type":569,"tag":596,"props":2079,"children":2080},{"class":598,"line":1376},[2081,2085,2089,2093,2097,2102,2106],{"type":569,"tag":596,"props":2082,"children":2083},{"style":792},[2084],{"type":574,"value":1390},{"type":569,"tag":596,"props":2086,"children":2087},{"style":814},[2088],{"type":574,"value":1988},{"type":569,"tag":596,"props":2090,"children":2091},{"style":786},[2092],{"type":574,"value":924},{"type":569,"tag":596,"props":2094,"children":2095},{"style":869},[2096],{"type":574,"value":1997},{"type":569,"tag":596,"props":2098,"children":2099},{"style":786},[2100],{"type":574,"value":2101},"(...",{"type":569,"tag":596,"props":2103,"children":2104},{"style":814},[2105],{"type":574,"value":2006},{"type":569,"tag":596,"props":2107,"children":2108},{"style":786},[2109],{"type":574,"value":1771},{"type":569,"tag":596,"props":2111,"children":2112},{"class":598,"line":1384},[2113],{"type":569,"tag":596,"props":2114,"children":2115},{"style":786},[2116],{"type":574,"value":1412},{"type":569,"tag":2118,"props":2119,"children":2120},"style",{},[2121],{"type":574,"value":2122},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":562,"searchDepth":859,"depth":859,"links":2124},[2125,2126],{"id":712,"depth":608,"text":712},{"id":717,"depth":608,"text":717,"children":2127},[2128,2129],{"id":723,"depth":617,"text":726},{"id":1415,"depth":617,"text":1415},"markdown","content:1.algorithm:3.leetcode:3.major:300.longest-increasing-subsequence.md","content","1.algorithm/3.leetcode/3.major/300.longest-increasing-subsequence.md","md",[2136,2138],{"_path":216,"title":215,"description":2137},"给你一个整数数组 nums，返回 数组 answer ，其中 answer[i] 等于 nums 中除 nums[i] 之外其余各元素的乘积 。",{"_path":222,"title":221,"description":2139},"给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。",1717735572108]