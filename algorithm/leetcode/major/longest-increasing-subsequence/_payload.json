[{"data":1,"prerenderedAt":2132},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/longest-increasing-subsequence":551,"/algorithm/leetcode/major/longest-increasing-subsequence-surround":2127},[4,272,301,519,527,536],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":518},"代码考核","/code-assessment",[305,410,511],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,343,359,387,394,401,404,407],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337,340],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342},"Promise","/code-assessment/source/native-api/promise",{"title":344,"_path":345,"children":346},"函数 Function","/code-assessment/source/function",[347,350,353,356],{"title":348,"_path":349},"函数防抖","/code-assessment/source/function/debounce",{"title":351,"_path":352},"函数节流","/code-assessment/source/function/throttle",{"title":354,"_path":355},"函数柯理化","/code-assessment/source/function/curry",{"title":357,"_path":358},"函数睡眠","/code-assessment/source/function/sleep",{"title":360,"_path":361,"children":362},"数组 Array","/code-assessment/source/array",[363,366,369,372,375,378,381,384],{"title":364,"_path":365},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":367,"_path":368},"数组扁平化","/code-assessment/source/array/flat",{"title":370,"_path":371},"原型方法","/code-assessment/source/array/prototype-method",{"title":373,"_path":374},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":376,"_path":377},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":379,"_path":380},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":382,"_path":383},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":385,"_path":386},"二维数组","/code-assessment/source/array/2d-array",{"title":388,"_path":389,"children":390},"字符串 String","/code-assessment/source/string",[391],{"title":392,"_path":393},"repeat()","/code-assessment/source/string/repeat",{"title":395,"_path":396,"children":397},"集合 Set","/code-assessment/source/set",[398],{"title":399,"_path":400},"遍历集合","/code-assessment/source/set/traverse",{"title":402,"_path":403},"获取通用类型","/code-assessment/source/get-generic-type",{"title":405,"_path":406},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":408,"_path":409},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":411,"_path":412,"children":413},"业务场景","/code-assessment/scene",[414,444,454,457,460,463,466,469,472,475,478,481,484,487,490,493,496,499,502,505,508],{"title":341,"_path":415,"children":416},"/code-assessment/scene/promise",[417,420,423,426,429,432,435,438,441],{"title":418,"_path":419},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":421,"_path":422},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":424,"_path":425},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":427,"_path":428},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":430,"_path":431},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":433,"_path":434},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":436,"_path":437},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":439,"_path":440},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":442,"_path":443},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":445,"_path":446,"children":447},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[448,451],{"title":449,"_path":450},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":452,"_path":453},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":455,"_path":456},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":458,"_path":459},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":461,"_path":462},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":464,"_path":465},"倒计时","/code-assessment/scene/countdown",{"title":467,"_path":468},"日期格式化","/code-assessment/scene/date-format",{"title":470,"_path":471},"实现前端路由","/code-assessment/scene/frontend-route",{"title":473,"_path":474},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":476,"_path":477},"lodash.get","/code-assessment/scene/lodash-get",{"title":479,"_path":480},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":482,"_path":483},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":485,"_path":486},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":488,"_path":489},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":491,"_path":492},"随机数","/code-assessment/scene/random-number",{"title":494,"_path":495},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":497,"_path":498},"sku 算法实现","/code-assessment/scene/sku",{"title":500,"_path":501},"整数分割","/code-assessment/scene/split-number",{"title":503,"_path":504},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":506,"_path":507},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":509,"_path":510},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":512,"_path":513,"children":514},"Ts 类型挑战","/code-assessment/type-challeges",[515],{"title":516,"_path":517},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":520,"_path":521,"children":522,"icon":526},"项目","/project",[523],{"title":524,"_path":525},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":528,"_path":529,"children":530,"icon":535},"设计模式","/design-mode",[531,532],{"title":528,"_path":529},{"title":533,"_path":534},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":537,"_path":538,"children":539,"icon":550},"后端语言","/backend-languages",[540],{"title":541,"_path":542,"children":543},"Python","/backend-languages/python",[544,547],{"title":545,"_path":546},"基础","/backend-languages/python/base",{"title":548,"_path":549},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":219,"_dir":552,"_draft":553,"_partial":553,"_locale":554,"title":218,"description":555,"url":556,"body":557,"_type":2122,"_id":2123,"_source":2124,"_file":2125,"_extension":2126},"major",false,"","给你一个整数数组 nums ，找到其中最长严格递增子序列的长度。","https://leetcode.cn/problems/longest-increasing-subsequence",{"type":558,"children":559,"toc":2115},"root",[560,567,572,577,616,621,643,648,671,676,691,696,701,707,712,719,750,1405,1410,1418,1423,1431,1436,1441,1449,1454,1462,1467,1475,1480,1489,1497,1511,2109],{"type":561,"tag":562,"props":563,"children":564},"element","p",{},[565],{"type":566,"value":555},"text",{"type":561,"tag":562,"props":568,"children":569},{},[570],{"type":566,"value":571},"子序列 是由数组派生而来的序列，删除（或不删除）数组中的元素而不改变其余元素的顺序。例如，[3,6,2,7] 是数组 [0,3,1,6,2,2,7] 的\n子序列\n。",{"type":561,"tag":562,"props":573,"children":574},{},[575],{"type":566,"value":576},"示例 1：",{"type":561,"tag":578,"props":579,"children":582},"pre",{"className":580,"code":581,"language":566,"meta":554,"style":554},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [10,9,2,5,3,7,101,18]\n输出：4\n解释：最长递增子序列是 [2,3,7,101]，因此长度为 4 。\n",[583],{"type":561,"tag":584,"props":585,"children":586},"code",{"__ignoreMap":554},[587,598,607],{"type":561,"tag":588,"props":589,"children":592},"span",{"class":590,"line":591},"line",1,[593],{"type":561,"tag":588,"props":594,"children":595},{},[596],{"type":566,"value":597},"输入：nums = [10,9,2,5,3,7,101,18]\n",{"type":561,"tag":588,"props":599,"children":601},{"class":590,"line":600},2,[602],{"type":561,"tag":588,"props":603,"children":604},{},[605],{"type":566,"value":606},"输出：4\n",{"type":561,"tag":588,"props":608,"children":610},{"class":590,"line":609},3,[611],{"type":561,"tag":588,"props":612,"children":613},{},[614],{"type":566,"value":615},"解释：最长递增子序列是 [2,3,7,101]，因此长度为 4 。\n",{"type":561,"tag":562,"props":617,"children":618},{},[619],{"type":566,"value":620},"示例 2：",{"type":561,"tag":578,"props":622,"children":624},{"className":580,"code":623,"language":566,"meta":554,"style":554},"输入：nums = [0,1,0,3,2,3]\n输出：4\n",[625],{"type":561,"tag":584,"props":626,"children":627},{"__ignoreMap":554},[628,636],{"type":561,"tag":588,"props":629,"children":630},{"class":590,"line":591},[631],{"type":561,"tag":588,"props":632,"children":633},{},[634],{"type":566,"value":635},"输入：nums = [0,1,0,3,2,3]\n",{"type":561,"tag":588,"props":637,"children":638},{"class":590,"line":600},[639],{"type":561,"tag":588,"props":640,"children":641},{},[642],{"type":566,"value":606},{"type":561,"tag":562,"props":644,"children":645},{},[646],{"type":566,"value":647},"示例 3：",{"type":561,"tag":578,"props":649,"children":651},{"className":580,"code":650,"language":566,"meta":554,"style":554},"输入：nums = [7,7,7,7,7,7,7]\n输出：1\n",[652],{"type":561,"tag":584,"props":653,"children":654},{"__ignoreMap":554},[655,663],{"type":561,"tag":588,"props":656,"children":657},{"class":590,"line":591},[658],{"type":561,"tag":588,"props":659,"children":660},{},[661],{"type":566,"value":662},"输入：nums = [7,7,7,7,7,7,7]\n",{"type":561,"tag":588,"props":664,"children":665},{"class":590,"line":600},[666],{"type":561,"tag":588,"props":667,"children":668},{},[669],{"type":566,"value":670},"输出：1\n",{"type":561,"tag":562,"props":672,"children":673},{},[674],{"type":566,"value":675},"提示：",{"type":561,"tag":677,"props":678,"children":679},"ul",{},[680,686],{"type":561,"tag":681,"props":682,"children":683},"li",{},[684],{"type":566,"value":685},"1 \u003C= nums.length \u003C= 2500",{"type":561,"tag":681,"props":687,"children":688},{},[689],{"type":566,"value":690},"-10^4 \u003C= nums[i] \u003C= 10^4",{"type":561,"tag":562,"props":692,"children":693},{},[694],{"type":566,"value":695},"进阶：",{"type":561,"tag":562,"props":697,"children":698},{},[699],{"type":566,"value":700},"你能将算法的时间复杂度降低到 O(n log(n)) 吗?",{"type":561,"tag":702,"props":703,"children":705},"h2",{"id":704},"解题思路",[706],{"type":566,"value":704},{"type":561,"tag":702,"props":708,"children":710},{"id":709},"实现",[711],{"type":566,"value":709},{"type":561,"tag":713,"props":714,"children":716},"h3",{"id":715},"贪心-查找",[717],{"type":566,"value":718},"贪心 + 查找",{"type":561,"tag":677,"props":720,"children":721},{},[722,727,745],{"type":561,"tag":681,"props":723,"children":724},{},[725],{"type":566,"value":726},"贪心思路：如果要使上升子序列尽可能的长，则需要让序列上升得尽可能慢，因此希望每次在上升子序列最后加上的那个数尽可能的小。",{"type":561,"tag":681,"props":728,"children":729},{},[730,732],{"type":566,"value":731},"算法流程：\n",{"type":561,"tag":677,"props":733,"children":734},{},[735,740],{"type":561,"tag":681,"props":736,"children":737},{},[738],{"type":566,"value":739},"当遍历的数字 > 记录最后一项末尾数字时，新增记录",{"type":561,"tag":681,"props":741,"children":742},{},[743],{"type":566,"value":744},"否则，找到记录中第一个末尾大于该数字的记录(可用二分查找进行优化)，更改其末尾",{"type":561,"tag":681,"props":746,"children":747},{},[748],{"type":566,"value":749},"优化：由于都是通过操作末尾项，因此可以转换为一维数组来解决此问题",{"type":561,"tag":578,"props":751,"children":755},{"className":752,"code":753,"language":754,"meta":554,"style":554},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar lengthOfLIS = function (nums) {\n  if (nums.length === 0) return 0\n\n  const tails = [nums[0]] // 原数组第 0 项\n\n  for (let i = 1; i \u003C nums.length; i++) {\n    if (nums[i] > tails[tails.length - 1]) {\n      tails.push(nums[i])\n    } else {\n      // 这里的查找方式可以优化为二分查找\n      const index = tails.findIndex(x => x >= nums[i])\n      tails[index] = nums[i]\n    }\n  }\n\n  return tails.length\n};\n","js",[756],{"type":561,"tag":584,"props":757,"children":758},{"__ignoreMap":554},[759,768,810,840,849,895,948,958,1005,1013,1093,1168,1208,1226,1235,1306,1348,1357,1366,1374,1396],{"type":561,"tag":588,"props":760,"children":761},{"class":590,"line":591},[762],{"type":561,"tag":588,"props":763,"children":765},{"style":764},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[766],{"type":566,"value":767},"/**\n",{"type":561,"tag":588,"props":769,"children":770},{"class":590,"line":600},[771,776,782,788,793,799,804],{"type":561,"tag":588,"props":772,"children":773},{"style":764},[774],{"type":566,"value":775}," * ",{"type":561,"tag":588,"props":777,"children":779},{"style":778},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[780],{"type":566,"value":781},"@",{"type":561,"tag":588,"props":783,"children":785},{"style":784},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[786],{"type":566,"value":787},"param",{"type":561,"tag":588,"props":789,"children":790},{"style":778},[791],{"type":566,"value":792}," {",{"type":561,"tag":588,"props":794,"children":796},{"style":795},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[797],{"type":566,"value":798},"number[]",{"type":561,"tag":588,"props":800,"children":801},{"style":778},[802],{"type":566,"value":803},"}",{"type":561,"tag":588,"props":805,"children":807},{"style":806},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[808],{"type":566,"value":809}," nums\n",{"type":561,"tag":588,"props":811,"children":812},{"class":590,"line":609},[813,817,821,826,830,835],{"type":561,"tag":588,"props":814,"children":815},{"style":764},[816],{"type":566,"value":775},{"type":561,"tag":588,"props":818,"children":819},{"style":778},[820],{"type":566,"value":781},{"type":561,"tag":588,"props":822,"children":823},{"style":784},[824],{"type":566,"value":825},"return",{"type":561,"tag":588,"props":827,"children":828},{"style":778},[829],{"type":566,"value":792},{"type":561,"tag":588,"props":831,"children":832},{"style":795},[833],{"type":566,"value":834},"number",{"type":561,"tag":588,"props":836,"children":837},{"style":778},[838],{"type":566,"value":839},"}\n",{"type":561,"tag":588,"props":841,"children":843},{"class":590,"line":842},4,[844],{"type":561,"tag":588,"props":845,"children":846},{"style":764},[847],{"type":566,"value":848}," */\n",{"type":561,"tag":588,"props":850,"children":852},{"class":590,"line":851},5,[853,859,865,870,875,880,885,890],{"type":561,"tag":588,"props":854,"children":856},{"style":855},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[857],{"type":566,"value":858},"var",{"type":561,"tag":588,"props":860,"children":862},{"style":861},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[863],{"type":566,"value":864}," lengthOfLIS",{"type":561,"tag":588,"props":866,"children":867},{"style":778},[868],{"type":566,"value":869}," =",{"type":561,"tag":588,"props":871,"children":872},{"style":855},[873],{"type":566,"value":874}," function",{"type":561,"tag":588,"props":876,"children":877},{"style":778},[878],{"type":566,"value":879}," (",{"type":561,"tag":588,"props":881,"children":882},{"style":806},[883],{"type":566,"value":884},"nums",{"type":561,"tag":588,"props":886,"children":887},{"style":778},[888],{"type":566,"value":889},")",{"type":561,"tag":588,"props":891,"children":892},{"style":778},[893],{"type":566,"value":894}," {\n",{"type":561,"tag":588,"props":896,"children":898},{"class":590,"line":897},6,[899,904,908,912,917,923,928,934,938,943],{"type":561,"tag":588,"props":900,"children":901},{"style":784},[902],{"type":566,"value":903},"  if",{"type":561,"tag":588,"props":905,"children":906},{"style":778},[907],{"type":566,"value":879},{"type":561,"tag":588,"props":909,"children":910},{"style":806},[911],{"type":566,"value":884},{"type":561,"tag":588,"props":913,"children":914},{"style":778},[915],{"type":566,"value":916},".",{"type":561,"tag":588,"props":918,"children":920},{"style":919},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[921],{"type":566,"value":922},"length",{"type":561,"tag":588,"props":924,"children":925},{"style":855},[926],{"type":566,"value":927}," ===",{"type":561,"tag":588,"props":929,"children":931},{"style":930},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[932],{"type":566,"value":933}," 0",{"type":561,"tag":588,"props":935,"children":936},{"style":778},[937],{"type":566,"value":889},{"type":561,"tag":588,"props":939,"children":940},{"style":784},[941],{"type":566,"value":942}," return",{"type":561,"tag":588,"props":944,"children":945},{"style":930},[946],{"type":566,"value":947}," 0\n",{"type":561,"tag":588,"props":949,"children":951},{"class":590,"line":950},7,[952],{"type":561,"tag":588,"props":953,"children":955},{"emptyLinePlaceholder":954},true,[956],{"type":566,"value":957},"\n",{"type":561,"tag":588,"props":959,"children":961},{"class":590,"line":960},8,[962,967,972,976,981,985,990,995,1000],{"type":561,"tag":588,"props":963,"children":964},{"style":855},[965],{"type":566,"value":966},"  const",{"type":561,"tag":588,"props":968,"children":969},{"style":806},[970],{"type":566,"value":971}," tails",{"type":561,"tag":588,"props":973,"children":974},{"style":778},[975],{"type":566,"value":869},{"type":561,"tag":588,"props":977,"children":978},{"style":778},[979],{"type":566,"value":980}," [",{"type":561,"tag":588,"props":982,"children":983},{"style":806},[984],{"type":566,"value":884},{"type":561,"tag":588,"props":986,"children":987},{"style":778},[988],{"type":566,"value":989},"[",{"type":561,"tag":588,"props":991,"children":992},{"style":930},[993],{"type":566,"value":994},"0",{"type":561,"tag":588,"props":996,"children":997},{"style":778},[998],{"type":566,"value":999},"]]",{"type":561,"tag":588,"props":1001,"children":1002},{"style":764},[1003],{"type":566,"value":1004}," // 原数组第 0 项\n",{"type":561,"tag":588,"props":1006,"children":1008},{"class":590,"line":1007},9,[1009],{"type":561,"tag":588,"props":1010,"children":1011},{"emptyLinePlaceholder":954},[1012],{"type":566,"value":957},{"type":561,"tag":588,"props":1014,"children":1016},{"class":590,"line":1015},10,[1017,1022,1026,1031,1036,1040,1045,1050,1054,1059,1064,1068,1072,1076,1080,1085,1089],{"type":561,"tag":588,"props":1018,"children":1019},{"style":784},[1020],{"type":566,"value":1021},"  for",{"type":561,"tag":588,"props":1023,"children":1024},{"style":778},[1025],{"type":566,"value":879},{"type":561,"tag":588,"props":1027,"children":1028},{"style":855},[1029],{"type":566,"value":1030},"let",{"type":561,"tag":588,"props":1032,"children":1033},{"style":806},[1034],{"type":566,"value":1035}," i",{"type":561,"tag":588,"props":1037,"children":1038},{"style":778},[1039],{"type":566,"value":869},{"type":561,"tag":588,"props":1041,"children":1042},{"style":930},[1043],{"type":566,"value":1044}," 1",{"type":561,"tag":588,"props":1046,"children":1047},{"style":778},[1048],{"type":566,"value":1049},";",{"type":561,"tag":588,"props":1051,"children":1052},{"style":806},[1053],{"type":566,"value":1035},{"type":561,"tag":588,"props":1055,"children":1056},{"style":778},[1057],{"type":566,"value":1058}," \u003C",{"type":561,"tag":588,"props":1060,"children":1061},{"style":806},[1062],{"type":566,"value":1063}," nums",{"type":561,"tag":588,"props":1065,"children":1066},{"style":778},[1067],{"type":566,"value":916},{"type":561,"tag":588,"props":1069,"children":1070},{"style":919},[1071],{"type":566,"value":922},{"type":561,"tag":588,"props":1073,"children":1074},{"style":778},[1075],{"type":566,"value":1049},{"type":561,"tag":588,"props":1077,"children":1078},{"style":806},[1079],{"type":566,"value":1035},{"type":561,"tag":588,"props":1081,"children":1082},{"style":855},[1083],{"type":566,"value":1084},"++",{"type":561,"tag":588,"props":1086,"children":1087},{"style":778},[1088],{"type":566,"value":889},{"type":561,"tag":588,"props":1090,"children":1091},{"style":778},[1092],{"type":566,"value":894},{"type":561,"tag":588,"props":1094,"children":1096},{"class":590,"line":1095},11,[1097,1102,1106,1110,1114,1119,1124,1129,1133,1137,1142,1146,1150,1155,1159,1164],{"type":561,"tag":588,"props":1098,"children":1099},{"style":784},[1100],{"type":566,"value":1101},"    if",{"type":561,"tag":588,"props":1103,"children":1104},{"style":778},[1105],{"type":566,"value":879},{"type":561,"tag":588,"props":1107,"children":1108},{"style":806},[1109],{"type":566,"value":884},{"type":561,"tag":588,"props":1111,"children":1112},{"style":778},[1113],{"type":566,"value":989},{"type":561,"tag":588,"props":1115,"children":1116},{"style":806},[1117],{"type":566,"value":1118},"i",{"type":561,"tag":588,"props":1120,"children":1121},{"style":778},[1122],{"type":566,"value":1123},"]",{"type":561,"tag":588,"props":1125,"children":1126},{"style":778},[1127],{"type":566,"value":1128}," >",{"type":561,"tag":588,"props":1130,"children":1131},{"style":806},[1132],{"type":566,"value":971},{"type":561,"tag":588,"props":1134,"children":1135},{"style":778},[1136],{"type":566,"value":989},{"type":561,"tag":588,"props":1138,"children":1139},{"style":806},[1140],{"type":566,"value":1141},"tails",{"type":561,"tag":588,"props":1143,"children":1144},{"style":778},[1145],{"type":566,"value":916},{"type":561,"tag":588,"props":1147,"children":1148},{"style":919},[1149],{"type":566,"value":922},{"type":561,"tag":588,"props":1151,"children":1152},{"style":855},[1153],{"type":566,"value":1154}," -",{"type":561,"tag":588,"props":1156,"children":1157},{"style":930},[1158],{"type":566,"value":1044},{"type":561,"tag":588,"props":1160,"children":1161},{"style":778},[1162],{"type":566,"value":1163},"])",{"type":561,"tag":588,"props":1165,"children":1166},{"style":778},[1167],{"type":566,"value":894},{"type":561,"tag":588,"props":1169,"children":1171},{"class":590,"line":1170},12,[1172,1177,1181,1186,1191,1195,1199,1203],{"type":561,"tag":588,"props":1173,"children":1174},{"style":806},[1175],{"type":566,"value":1176},"      tails",{"type":561,"tag":588,"props":1178,"children":1179},{"style":778},[1180],{"type":566,"value":916},{"type":561,"tag":588,"props":1182,"children":1183},{"style":861},[1184],{"type":566,"value":1185},"push",{"type":561,"tag":588,"props":1187,"children":1188},{"style":778},[1189],{"type":566,"value":1190},"(",{"type":561,"tag":588,"props":1192,"children":1193},{"style":806},[1194],{"type":566,"value":884},{"type":561,"tag":588,"props":1196,"children":1197},{"style":778},[1198],{"type":566,"value":989},{"type":561,"tag":588,"props":1200,"children":1201},{"style":806},[1202],{"type":566,"value":1118},{"type":561,"tag":588,"props":1204,"children":1205},{"style":778},[1206],{"type":566,"value":1207},"])\n",{"type":561,"tag":588,"props":1209,"children":1211},{"class":590,"line":1210},13,[1212,1217,1222],{"type":561,"tag":588,"props":1213,"children":1214},{"style":778},[1215],{"type":566,"value":1216},"    }",{"type":561,"tag":588,"props":1218,"children":1219},{"style":784},[1220],{"type":566,"value":1221}," else",{"type":561,"tag":588,"props":1223,"children":1224},{"style":778},[1225],{"type":566,"value":894},{"type":561,"tag":588,"props":1227,"children":1229},{"class":590,"line":1228},14,[1230],{"type":561,"tag":588,"props":1231,"children":1232},{"style":764},[1233],{"type":566,"value":1234},"      // 这里的查找方式可以优化为二分查找\n",{"type":561,"tag":588,"props":1236,"children":1238},{"class":590,"line":1237},15,[1239,1244,1249,1253,1257,1261,1266,1270,1275,1280,1285,1290,1294,1298,1302],{"type":561,"tag":588,"props":1240,"children":1241},{"style":855},[1242],{"type":566,"value":1243},"      const",{"type":561,"tag":588,"props":1245,"children":1246},{"style":806},[1247],{"type":566,"value":1248}," index",{"type":561,"tag":588,"props":1250,"children":1251},{"style":778},[1252],{"type":566,"value":869},{"type":561,"tag":588,"props":1254,"children":1255},{"style":806},[1256],{"type":566,"value":971},{"type":561,"tag":588,"props":1258,"children":1259},{"style":778},[1260],{"type":566,"value":916},{"type":561,"tag":588,"props":1262,"children":1263},{"style":861},[1264],{"type":566,"value":1265},"findIndex",{"type":561,"tag":588,"props":1267,"children":1268},{"style":778},[1269],{"type":566,"value":1190},{"type":561,"tag":588,"props":1271,"children":1272},{"style":806},[1273],{"type":566,"value":1274},"x",{"type":561,"tag":588,"props":1276,"children":1277},{"style":778},[1278],{"type":566,"value":1279}," =>",{"type":561,"tag":588,"props":1281,"children":1282},{"style":806},[1283],{"type":566,"value":1284}," x",{"type":561,"tag":588,"props":1286,"children":1287},{"style":778},[1288],{"type":566,"value":1289}," >=",{"type":561,"tag":588,"props":1291,"children":1292},{"style":806},[1293],{"type":566,"value":1063},{"type":561,"tag":588,"props":1295,"children":1296},{"style":778},[1297],{"type":566,"value":989},{"type":561,"tag":588,"props":1299,"children":1300},{"style":806},[1301],{"type":566,"value":1118},{"type":561,"tag":588,"props":1303,"children":1304},{"style":778},[1305],{"type":566,"value":1207},{"type":561,"tag":588,"props":1307,"children":1309},{"class":590,"line":1308},16,[1310,1314,1318,1323,1327,1331,1335,1339,1343],{"type":561,"tag":588,"props":1311,"children":1312},{"style":806},[1313],{"type":566,"value":1176},{"type":561,"tag":588,"props":1315,"children":1316},{"style":778},[1317],{"type":566,"value":989},{"type":561,"tag":588,"props":1319,"children":1320},{"style":806},[1321],{"type":566,"value":1322},"index",{"type":561,"tag":588,"props":1324,"children":1325},{"style":778},[1326],{"type":566,"value":1123},{"type":561,"tag":588,"props":1328,"children":1329},{"style":778},[1330],{"type":566,"value":869},{"type":561,"tag":588,"props":1332,"children":1333},{"style":806},[1334],{"type":566,"value":1063},{"type":561,"tag":588,"props":1336,"children":1337},{"style":778},[1338],{"type":566,"value":989},{"type":561,"tag":588,"props":1340,"children":1341},{"style":806},[1342],{"type":566,"value":1118},{"type":561,"tag":588,"props":1344,"children":1345},{"style":778},[1346],{"type":566,"value":1347},"]\n",{"type":561,"tag":588,"props":1349,"children":1351},{"class":590,"line":1350},17,[1352],{"type":561,"tag":588,"props":1353,"children":1354},{"style":778},[1355],{"type":566,"value":1356},"    }\n",{"type":561,"tag":588,"props":1358,"children":1360},{"class":590,"line":1359},18,[1361],{"type":561,"tag":588,"props":1362,"children":1363},{"style":778},[1364],{"type":566,"value":1365},"  }\n",{"type":561,"tag":588,"props":1367,"children":1369},{"class":590,"line":1368},19,[1370],{"type":561,"tag":588,"props":1371,"children":1372},{"emptyLinePlaceholder":954},[1373],{"type":566,"value":957},{"type":561,"tag":588,"props":1375,"children":1377},{"class":590,"line":1376},20,[1378,1383,1387,1391],{"type":561,"tag":588,"props":1379,"children":1380},{"style":784},[1381],{"type":566,"value":1382},"  return",{"type":561,"tag":588,"props":1384,"children":1385},{"style":806},[1386],{"type":566,"value":971},{"type":561,"tag":588,"props":1388,"children":1389},{"style":778},[1390],{"type":566,"value":916},{"type":561,"tag":588,"props":1392,"children":1393},{"style":919},[1394],{"type":566,"value":1395},"length\n",{"type":561,"tag":588,"props":1397,"children":1399},{"class":590,"line":1398},21,[1400],{"type":561,"tag":588,"props":1401,"children":1402},{"style":778},[1403],{"type":566,"value":1404},"};\n",{"type":561,"tag":713,"props":1406,"children":1408},{"id":1407},"动态规划",[1409],{"type":566,"value":1407},{"type":561,"tag":677,"props":1411,"children":1412},{},[1413],{"type":561,"tag":681,"props":1414,"children":1415},{},[1416],{"type":566,"value":1417},"确定 dp 数组及下标含义",{"type":561,"tag":562,"props":1419,"children":1420},{},[1421],{"type":566,"value":1422},"dp[i] 表示 [0, i] 区间内以 nums[i] 结尾的最长递增子序列的长度",{"type":561,"tag":677,"props":1424,"children":1425},{},[1426],{"type":561,"tag":681,"props":1427,"children":1428},{},[1429],{"type":566,"value":1430},"确定递推公式：dp[i] = Math.max(dp[i], dp[j] + 1)",{"type":561,"tag":562,"props":1432,"children":1433},{},[1434],{"type":566,"value":1435},"如果 nums[i] > nums[j] 则说明当前元素复合递增子序列，则 dp[i] = Math.max(dp[i], dp[j] + 1)",{"type":561,"tag":562,"props":1437,"children":1438},{},[1439],{"type":566,"value":1440},"如果 nums[i] \u003C nums[j] 则说明当前元素不符合递增子序列，则什么都不做",{"type":561,"tag":677,"props":1442,"children":1443},{},[1444],{"type":561,"tag":681,"props":1445,"children":1446},{},[1447],{"type":566,"value":1448},"如何初始化 dp 数组",{"type":561,"tag":562,"props":1450,"children":1451},{},[1452],{"type":566,"value":1453},"每一个 i，对应的 dp[i] (即最长递增子序列)起始大小至少都是 1",{"type":561,"tag":677,"props":1455,"children":1456},{},[1457],{"type":561,"tag":681,"props":1458,"children":1459},{},[1460],{"type":566,"value":1461},"确定遍历顺序",{"type":561,"tag":562,"props":1463,"children":1464},{},[1465],{"type":566,"value":1466},"dp[i] 是有 [0, i-1] 各个位置的最长递增子序列推导而来，那么遍历 i 一定是从前向后遍历",{"type":561,"tag":677,"props":1468,"children":1469},{},[1470],{"type":561,"tag":681,"props":1471,"children":1472},{},[1473],{"type":566,"value":1474},"举例推导 dp 数组",{"type":561,"tag":562,"props":1476,"children":1477},{},[1478],{"type":566,"value":1479},"以 nums = [1, 3, 6, 7, 9, 4, 10, 5, 6] 为例：",{"type":561,"tag":562,"props":1481,"children":1482},{},[1483],{"type":561,"tag":1484,"props":1485,"children":1488},"img",{"alt":1486,"src":1487},"table","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.300_table.png",[],{"type":561,"tag":677,"props":1490,"children":1491},{},[1492],{"type":561,"tag":681,"props":1493,"children":1494},{},[1495],{"type":566,"value":1496},"复杂度",{"type":561,"tag":1498,"props":1499,"children":1500},"ol",{},[1501,1506],{"type":561,"tag":681,"props":1502,"children":1503},{},[1504],{"type":566,"value":1505},"时间复杂度：O(n^2)，遍历计算 dp 列表需 O(n)，计算每个 dp[i] 需 O(n)",{"type":561,"tag":681,"props":1507,"children":1508},{},[1509],{"type":566,"value":1510},"空间复杂度：O(n)",{"type":561,"tag":578,"props":1512,"children":1514},{"className":752,"code":1513,"language":754,"meta":554,"style":554},"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar lengthOfLIS = function (nums) {\n  let n = nums.length;\n  if (n === 0) return 0;\n\n  let dp = new Array(n).fill(1);\n\n  for (let i = 0; i \u003C n; i++) {\n    for (let j = 0; j \u003C i; j++) {\n      if (nums[i] > nums[j]) {\n        dp[i] = Math.max(dp[i], dp[j] + 1);\n      }\n    }\n  }\n\n  return Math.max(...dp);\n};\n",[1515],{"type":561,"tag":584,"props":1516,"children":1517},{"__ignoreMap":554},[1518,1525,1556,1583,1590,1625,1659,1699,1706,1764,1771,1834,1899,1952,2041,2049,2056,2063,2070,2102],{"type":561,"tag":588,"props":1519,"children":1520},{"class":590,"line":591},[1521],{"type":561,"tag":588,"props":1522,"children":1523},{"style":764},[1524],{"type":566,"value":767},{"type":561,"tag":588,"props":1526,"children":1527},{"class":590,"line":600},[1528,1532,1536,1540,1544,1548,1552],{"type":561,"tag":588,"props":1529,"children":1530},{"style":764},[1531],{"type":566,"value":775},{"type":561,"tag":588,"props":1533,"children":1534},{"style":778},[1535],{"type":566,"value":781},{"type":561,"tag":588,"props":1537,"children":1538},{"style":784},[1539],{"type":566,"value":787},{"type":561,"tag":588,"props":1541,"children":1542},{"style":778},[1543],{"type":566,"value":792},{"type":561,"tag":588,"props":1545,"children":1546},{"style":795},[1547],{"type":566,"value":798},{"type":561,"tag":588,"props":1549,"children":1550},{"style":778},[1551],{"type":566,"value":803},{"type":561,"tag":588,"props":1553,"children":1554},{"style":806},[1555],{"type":566,"value":809},{"type":561,"tag":588,"props":1557,"children":1558},{"class":590,"line":609},[1559,1563,1567,1571,1575,1579],{"type":561,"tag":588,"props":1560,"children":1561},{"style":764},[1562],{"type":566,"value":775},{"type":561,"tag":588,"props":1564,"children":1565},{"style":778},[1566],{"type":566,"value":781},{"type":561,"tag":588,"props":1568,"children":1569},{"style":784},[1570],{"type":566,"value":825},{"type":561,"tag":588,"props":1572,"children":1573},{"style":778},[1574],{"type":566,"value":792},{"type":561,"tag":588,"props":1576,"children":1577},{"style":795},[1578],{"type":566,"value":834},{"type":561,"tag":588,"props":1580,"children":1581},{"style":778},[1582],{"type":566,"value":839},{"type":561,"tag":588,"props":1584,"children":1585},{"class":590,"line":842},[1586],{"type":561,"tag":588,"props":1587,"children":1588},{"style":764},[1589],{"type":566,"value":848},{"type":561,"tag":588,"props":1591,"children":1592},{"class":590,"line":851},[1593,1597,1601,1605,1609,1613,1617,1621],{"type":561,"tag":588,"props":1594,"children":1595},{"style":855},[1596],{"type":566,"value":858},{"type":561,"tag":588,"props":1598,"children":1599},{"style":861},[1600],{"type":566,"value":864},{"type":561,"tag":588,"props":1602,"children":1603},{"style":778},[1604],{"type":566,"value":869},{"type":561,"tag":588,"props":1606,"children":1607},{"style":855},[1608],{"type":566,"value":874},{"type":561,"tag":588,"props":1610,"children":1611},{"style":778},[1612],{"type":566,"value":879},{"type":561,"tag":588,"props":1614,"children":1615},{"style":806},[1616],{"type":566,"value":884},{"type":561,"tag":588,"props":1618,"children":1619},{"style":778},[1620],{"type":566,"value":889},{"type":561,"tag":588,"props":1622,"children":1623},{"style":778},[1624],{"type":566,"value":894},{"type":561,"tag":588,"props":1626,"children":1627},{"class":590,"line":897},[1628,1633,1638,1642,1646,1650,1654],{"type":561,"tag":588,"props":1629,"children":1630},{"style":855},[1631],{"type":566,"value":1632},"  let",{"type":561,"tag":588,"props":1634,"children":1635},{"style":806},[1636],{"type":566,"value":1637}," n",{"type":561,"tag":588,"props":1639,"children":1640},{"style":778},[1641],{"type":566,"value":869},{"type":561,"tag":588,"props":1643,"children":1644},{"style":806},[1645],{"type":566,"value":1063},{"type":561,"tag":588,"props":1647,"children":1648},{"style":778},[1649],{"type":566,"value":916},{"type":561,"tag":588,"props":1651,"children":1652},{"style":919},[1653],{"type":566,"value":922},{"type":561,"tag":588,"props":1655,"children":1656},{"style":778},[1657],{"type":566,"value":1658},";\n",{"type":561,"tag":588,"props":1660,"children":1661},{"class":590,"line":950},[1662,1666,1670,1675,1679,1683,1687,1691,1695],{"type":561,"tag":588,"props":1663,"children":1664},{"style":784},[1665],{"type":566,"value":903},{"type":561,"tag":588,"props":1667,"children":1668},{"style":778},[1669],{"type":566,"value":879},{"type":561,"tag":588,"props":1671,"children":1672},{"style":806},[1673],{"type":566,"value":1674},"n",{"type":561,"tag":588,"props":1676,"children":1677},{"style":855},[1678],{"type":566,"value":927},{"type":561,"tag":588,"props":1680,"children":1681},{"style":930},[1682],{"type":566,"value":933},{"type":561,"tag":588,"props":1684,"children":1685},{"style":778},[1686],{"type":566,"value":889},{"type":561,"tag":588,"props":1688,"children":1689},{"style":784},[1690],{"type":566,"value":942},{"type":561,"tag":588,"props":1692,"children":1693},{"style":930},[1694],{"type":566,"value":933},{"type":561,"tag":588,"props":1696,"children":1697},{"style":778},[1698],{"type":566,"value":1658},{"type":561,"tag":588,"props":1700,"children":1701},{"class":590,"line":960},[1702],{"type":561,"tag":588,"props":1703,"children":1704},{"emptyLinePlaceholder":954},[1705],{"type":566,"value":957},{"type":561,"tag":588,"props":1707,"children":1708},{"class":590,"line":1007},[1709,1713,1718,1722,1727,1732,1736,1740,1745,1750,1754,1759],{"type":561,"tag":588,"props":1710,"children":1711},{"style":855},[1712],{"type":566,"value":1632},{"type":561,"tag":588,"props":1714,"children":1715},{"style":806},[1716],{"type":566,"value":1717}," dp",{"type":561,"tag":588,"props":1719,"children":1720},{"style":778},[1721],{"type":566,"value":869},{"type":561,"tag":588,"props":1723,"children":1724},{"style":855},[1725],{"type":566,"value":1726}," new",{"type":561,"tag":588,"props":1728,"children":1729},{"style":861},[1730],{"type":566,"value":1731}," Array",{"type":561,"tag":588,"props":1733,"children":1734},{"style":778},[1735],{"type":566,"value":1190},{"type":561,"tag":588,"props":1737,"children":1738},{"style":806},[1739],{"type":566,"value":1674},{"type":561,"tag":588,"props":1741,"children":1742},{"style":778},[1743],{"type":566,"value":1744},").",{"type":561,"tag":588,"props":1746,"children":1747},{"style":861},[1748],{"type":566,"value":1749},"fill",{"type":561,"tag":588,"props":1751,"children":1752},{"style":778},[1753],{"type":566,"value":1190},{"type":561,"tag":588,"props":1755,"children":1756},{"style":930},[1757],{"type":566,"value":1758},"1",{"type":561,"tag":588,"props":1760,"children":1761},{"style":778},[1762],{"type":566,"value":1763},");\n",{"type":561,"tag":588,"props":1765,"children":1766},{"class":590,"line":1015},[1767],{"type":561,"tag":588,"props":1768,"children":1769},{"emptyLinePlaceholder":954},[1770],{"type":566,"value":957},{"type":561,"tag":588,"props":1772,"children":1773},{"class":590,"line":1095},[1774,1778,1782,1786,1790,1794,1798,1802,1806,1810,1814,1818,1822,1826,1830],{"type":561,"tag":588,"props":1775,"children":1776},{"style":784},[1777],{"type":566,"value":1021},{"type":561,"tag":588,"props":1779,"children":1780},{"style":778},[1781],{"type":566,"value":879},{"type":561,"tag":588,"props":1783,"children":1784},{"style":855},[1785],{"type":566,"value":1030},{"type":561,"tag":588,"props":1787,"children":1788},{"style":806},[1789],{"type":566,"value":1035},{"type":561,"tag":588,"props":1791,"children":1792},{"style":778},[1793],{"type":566,"value":869},{"type":561,"tag":588,"props":1795,"children":1796},{"style":930},[1797],{"type":566,"value":933},{"type":561,"tag":588,"props":1799,"children":1800},{"style":778},[1801],{"type":566,"value":1049},{"type":561,"tag":588,"props":1803,"children":1804},{"style":806},[1805],{"type":566,"value":1035},{"type":561,"tag":588,"props":1807,"children":1808},{"style":778},[1809],{"type":566,"value":1058},{"type":561,"tag":588,"props":1811,"children":1812},{"style":806},[1813],{"type":566,"value":1637},{"type":561,"tag":588,"props":1815,"children":1816},{"style":778},[1817],{"type":566,"value":1049},{"type":561,"tag":588,"props":1819,"children":1820},{"style":806},[1821],{"type":566,"value":1035},{"type":561,"tag":588,"props":1823,"children":1824},{"style":855},[1825],{"type":566,"value":1084},{"type":561,"tag":588,"props":1827,"children":1828},{"style":778},[1829],{"type":566,"value":889},{"type":561,"tag":588,"props":1831,"children":1832},{"style":778},[1833],{"type":566,"value":894},{"type":561,"tag":588,"props":1835,"children":1836},{"class":590,"line":1170},[1837,1842,1846,1850,1855,1859,1863,1867,1871,1875,1879,1883,1887,1891,1895],{"type":561,"tag":588,"props":1838,"children":1839},{"style":784},[1840],{"type":566,"value":1841},"    for",{"type":561,"tag":588,"props":1843,"children":1844},{"style":778},[1845],{"type":566,"value":879},{"type":561,"tag":588,"props":1847,"children":1848},{"style":855},[1849],{"type":566,"value":1030},{"type":561,"tag":588,"props":1851,"children":1852},{"style":806},[1853],{"type":566,"value":1854}," j",{"type":561,"tag":588,"props":1856,"children":1857},{"style":778},[1858],{"type":566,"value":869},{"type":561,"tag":588,"props":1860,"children":1861},{"style":930},[1862],{"type":566,"value":933},{"type":561,"tag":588,"props":1864,"children":1865},{"style":778},[1866],{"type":566,"value":1049},{"type":561,"tag":588,"props":1868,"children":1869},{"style":806},[1870],{"type":566,"value":1854},{"type":561,"tag":588,"props":1872,"children":1873},{"style":778},[1874],{"type":566,"value":1058},{"type":561,"tag":588,"props":1876,"children":1877},{"style":806},[1878],{"type":566,"value":1035},{"type":561,"tag":588,"props":1880,"children":1881},{"style":778},[1882],{"type":566,"value":1049},{"type":561,"tag":588,"props":1884,"children":1885},{"style":806},[1886],{"type":566,"value":1854},{"type":561,"tag":588,"props":1888,"children":1889},{"style":855},[1890],{"type":566,"value":1084},{"type":561,"tag":588,"props":1892,"children":1893},{"style":778},[1894],{"type":566,"value":889},{"type":561,"tag":588,"props":1896,"children":1897},{"style":778},[1898],{"type":566,"value":894},{"type":561,"tag":588,"props":1900,"children":1901},{"class":590,"line":1210},[1902,1907,1911,1915,1919,1923,1927,1931,1935,1939,1944,1948],{"type":561,"tag":588,"props":1903,"children":1904},{"style":784},[1905],{"type":566,"value":1906},"      if",{"type":561,"tag":588,"props":1908,"children":1909},{"style":778},[1910],{"type":566,"value":879},{"type":561,"tag":588,"props":1912,"children":1913},{"style":806},[1914],{"type":566,"value":884},{"type":561,"tag":588,"props":1916,"children":1917},{"style":778},[1918],{"type":566,"value":989},{"type":561,"tag":588,"props":1920,"children":1921},{"style":806},[1922],{"type":566,"value":1118},{"type":561,"tag":588,"props":1924,"children":1925},{"style":778},[1926],{"type":566,"value":1123},{"type":561,"tag":588,"props":1928,"children":1929},{"style":778},[1930],{"type":566,"value":1128},{"type":561,"tag":588,"props":1932,"children":1933},{"style":806},[1934],{"type":566,"value":1063},{"type":561,"tag":588,"props":1936,"children":1937},{"style":778},[1938],{"type":566,"value":989},{"type":561,"tag":588,"props":1940,"children":1941},{"style":806},[1942],{"type":566,"value":1943},"j",{"type":561,"tag":588,"props":1945,"children":1946},{"style":778},[1947],{"type":566,"value":1163},{"type":561,"tag":588,"props":1949,"children":1950},{"style":778},[1951],{"type":566,"value":894},{"type":561,"tag":588,"props":1953,"children":1954},{"class":590,"line":1228},[1955,1960,1964,1968,1972,1976,1981,1985,1990,1994,1999,2003,2007,2012,2016,2020,2024,2028,2033,2037],{"type":561,"tag":588,"props":1956,"children":1957},{"style":806},[1958],{"type":566,"value":1959},"        dp",{"type":561,"tag":588,"props":1961,"children":1962},{"style":778},[1963],{"type":566,"value":989},{"type":561,"tag":588,"props":1965,"children":1966},{"style":806},[1967],{"type":566,"value":1118},{"type":561,"tag":588,"props":1969,"children":1970},{"style":778},[1971],{"type":566,"value":1123},{"type":561,"tag":588,"props":1973,"children":1974},{"style":778},[1975],{"type":566,"value":869},{"type":561,"tag":588,"props":1977,"children":1978},{"style":806},[1979],{"type":566,"value":1980}," Math",{"type":561,"tag":588,"props":1982,"children":1983},{"style":778},[1984],{"type":566,"value":916},{"type":561,"tag":588,"props":1986,"children":1987},{"style":861},[1988],{"type":566,"value":1989},"max",{"type":561,"tag":588,"props":1991,"children":1992},{"style":778},[1993],{"type":566,"value":1190},{"type":561,"tag":588,"props":1995,"children":1996},{"style":806},[1997],{"type":566,"value":1998},"dp",{"type":561,"tag":588,"props":2000,"children":2001},{"style":778},[2002],{"type":566,"value":989},{"type":561,"tag":588,"props":2004,"children":2005},{"style":806},[2006],{"type":566,"value":1118},{"type":561,"tag":588,"props":2008,"children":2009},{"style":778},[2010],{"type":566,"value":2011},"],",{"type":561,"tag":588,"props":2013,"children":2014},{"style":806},[2015],{"type":566,"value":1717},{"type":561,"tag":588,"props":2017,"children":2018},{"style":778},[2019],{"type":566,"value":989},{"type":561,"tag":588,"props":2021,"children":2022},{"style":806},[2023],{"type":566,"value":1943},{"type":561,"tag":588,"props":2025,"children":2026},{"style":778},[2027],{"type":566,"value":1123},{"type":561,"tag":588,"props":2029,"children":2030},{"style":855},[2031],{"type":566,"value":2032}," +",{"type":561,"tag":588,"props":2034,"children":2035},{"style":930},[2036],{"type":566,"value":1044},{"type":561,"tag":588,"props":2038,"children":2039},{"style":778},[2040],{"type":566,"value":1763},{"type":561,"tag":588,"props":2042,"children":2043},{"class":590,"line":1237},[2044],{"type":561,"tag":588,"props":2045,"children":2046},{"style":778},[2047],{"type":566,"value":2048},"      }\n",{"type":561,"tag":588,"props":2050,"children":2051},{"class":590,"line":1308},[2052],{"type":561,"tag":588,"props":2053,"children":2054},{"style":778},[2055],{"type":566,"value":1356},{"type":561,"tag":588,"props":2057,"children":2058},{"class":590,"line":1350},[2059],{"type":561,"tag":588,"props":2060,"children":2061},{"style":778},[2062],{"type":566,"value":1365},{"type":561,"tag":588,"props":2064,"children":2065},{"class":590,"line":1359},[2066],{"type":561,"tag":588,"props":2067,"children":2068},{"emptyLinePlaceholder":954},[2069],{"type":566,"value":957},{"type":561,"tag":588,"props":2071,"children":2072},{"class":590,"line":1368},[2073,2077,2081,2085,2089,2094,2098],{"type":561,"tag":588,"props":2074,"children":2075},{"style":784},[2076],{"type":566,"value":1382},{"type":561,"tag":588,"props":2078,"children":2079},{"style":806},[2080],{"type":566,"value":1980},{"type":561,"tag":588,"props":2082,"children":2083},{"style":778},[2084],{"type":566,"value":916},{"type":561,"tag":588,"props":2086,"children":2087},{"style":861},[2088],{"type":566,"value":1989},{"type":561,"tag":588,"props":2090,"children":2091},{"style":778},[2092],{"type":566,"value":2093},"(...",{"type":561,"tag":588,"props":2095,"children":2096},{"style":806},[2097],{"type":566,"value":1998},{"type":561,"tag":588,"props":2099,"children":2100},{"style":778},[2101],{"type":566,"value":1763},{"type":561,"tag":588,"props":2103,"children":2104},{"class":590,"line":1376},[2105],{"type":561,"tag":588,"props":2106,"children":2107},{"style":778},[2108],{"type":566,"value":1404},{"type":561,"tag":2110,"props":2111,"children":2112},"style",{},[2113],{"type":566,"value":2114},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":554,"searchDepth":851,"depth":851,"links":2116},[2117,2118],{"id":704,"depth":600,"text":704},{"id":709,"depth":600,"text":709,"children":2119},[2120,2121],{"id":715,"depth":609,"text":718},{"id":1407,"depth":609,"text":1407},"markdown","content:1.algorithm:3.leetcode:3.major:300.longest-increasing-subsequence.md","content","1.algorithm/3.leetcode/3.major/300.longest-increasing-subsequence.md","md",[2128,2130],{"_path":216,"title":215,"description":2129},"给你一个整数数组 nums，返回 数组 answer ，其中 answer[i] 等于 nums 中除 nums[i] 之外其余各元素的乘积 。",{"_path":222,"title":221,"description":2131},"给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。",1715094972065]