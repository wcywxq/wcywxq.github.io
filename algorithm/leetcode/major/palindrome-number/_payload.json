[{"data":1,"prerenderedAt":1815},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/palindrome-number":559,"/algorithm/leetcode/major/palindrome-number-surround":1810},[4,272,318,536,544],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":317},"八股文","/endorsement",[276,286,293,304],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"JavaScript","/endorsement/javascript",[290],{"title":291,"_path":292},"语法和数据类型","/endorsement/javascript/grammar-data-types",{"title":294,"_path":295,"children":296},"构建工具","/endorsement/build-tools",[297],{"title":298,"_path":299,"children":300},"Webpack","/endorsement/build-tools/webpack",[301],{"title":302,"_path":303},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":305,"_path":306,"children":307},"Html","/endorsement/html",[308,311,314],{"title":309,"_path":310},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":312,"_path":313},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":315,"_path":316},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":319,"_path":320,"children":321,"icon":535},"代码考核","/code-assessment",[322,427,528],{"title":323,"_path":324,"children":325},"源码实现","/code-assessment/source",[326,360,376,404,411,418,421,424],{"title":327,"_path":328,"children":329},"原生 api","/code-assessment/source/native-api",[330,333,336,339,342,345,348,351,354,357],{"title":331,"_path":332},"polyfill","/code-assessment/source/native-api/polyfill",{"title":334,"_path":335},"ajax","/code-assessment/source/native-api/ajax",{"title":337,"_path":338},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":340,"_path":341},"new 操作符","/code-assessment/source/native-api/new",{"title":343,"_path":344},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":346,"_path":347},"定时器","/code-assessment/source/native-api/timer",{"title":349,"_path":350},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":352,"_path":353},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":355,"_path":356},"extends","/code-assessment/source/native-api/extends",{"title":358,"_path":359},"Promise","/code-assessment/source/native-api/promise",{"title":361,"_path":362,"children":363},"函数 Function","/code-assessment/source/function",[364,367,370,373],{"title":365,"_path":366},"函数防抖","/code-assessment/source/function/debounce",{"title":368,"_path":369},"函数节流","/code-assessment/source/function/throttle",{"title":371,"_path":372},"函数柯理化","/code-assessment/source/function/curry",{"title":374,"_path":375},"函数睡眠","/code-assessment/source/function/sleep",{"title":377,"_path":378,"children":379},"数组 Array","/code-assessment/source/array",[380,383,386,389,392,395,398,401],{"title":381,"_path":382},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":384,"_path":385},"数组扁平化","/code-assessment/source/array/flat",{"title":387,"_path":388},"原型方法","/code-assessment/source/array/prototype-method",{"title":390,"_path":391},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":393,"_path":394},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":396,"_path":397},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":399,"_path":400},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":402,"_path":403},"二维数组","/code-assessment/source/array/2d-array",{"title":405,"_path":406,"children":407},"字符串 String","/code-assessment/source/string",[408],{"title":409,"_path":410},"repeat()","/code-assessment/source/string/repeat",{"title":412,"_path":413,"children":414},"集合 Set","/code-assessment/source/set",[415],{"title":416,"_path":417},"遍历集合","/code-assessment/source/set/traverse",{"title":419,"_path":420},"获取通用类型","/code-assessment/source/get-generic-type",{"title":422,"_path":423},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":425,"_path":426},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":428,"_path":429,"children":430},"业务场景","/code-assessment/scene",[431,461,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525],{"title":358,"_path":432,"children":433},"/code-assessment/scene/promise",[434,437,440,443,446,449,452,455,458],{"title":435,"_path":436},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":438,"_path":439},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":441,"_path":442},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":444,"_path":445},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":447,"_path":448},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":450,"_path":451},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":453,"_path":454},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":456,"_path":457},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":459,"_path":460},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":462,"_path":463,"children":464},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[465,468],{"title":466,"_path":467},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":469,"_path":470},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":472,"_path":473},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":475,"_path":476},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":478,"_path":479},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":481,"_path":482},"倒计时","/code-assessment/scene/countdown",{"title":484,"_path":485},"日期格式化","/code-assessment/scene/date-format",{"title":487,"_path":488},"实现前端路由","/code-assessment/scene/frontend-route",{"title":490,"_path":491},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":493,"_path":494},"lodash.get","/code-assessment/scene/lodash-get",{"title":496,"_path":497},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":499,"_path":500},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":502,"_path":503},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":505,"_path":506},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":508,"_path":509},"随机数","/code-assessment/scene/random-number",{"title":511,"_path":512},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":514,"_path":515},"sku 算法实现","/code-assessment/scene/sku",{"title":517,"_path":518},"整数分割","/code-assessment/scene/split-number",{"title":520,"_path":521},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":523,"_path":524},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":526,"_path":527},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":529,"_path":530,"children":531},"Ts 类型挑战","/code-assessment/type-challeges",[532],{"title":533,"_path":534},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":537,"_path":538,"children":539,"icon":543},"项目","/project",[540],{"title":541,"_path":542},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":545,"_path":546,"children":547,"icon":558},"后端语言","/backend-languages",[548],{"title":549,"_path":550,"children":551},"Python","/backend-languages/python",[552,555],{"title":553,"_path":554},"基础","/backend-languages/python/base",{"title":556,"_path":557},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":78,"_dir":560,"_draft":561,"_partial":561,"_locale":562,"title":77,"description":563,"url":564,"body":565,"_type":1805,"_id":1806,"_source":1807,"_file":1808,"_extension":1809},"major",false,"","给你一个整数 x ，如果 x 是一个回文整数，返回 true ；否则，返回 false 。","https://leetcode.cn/problems/palindrome-number",{"type":566,"children":567,"toc":1797},"root",[568,575,580,590,595,625,630,662,667,697,702,710,716,721,727,979,985,1378,1383,1791],{"type":569,"tag":570,"props":571,"children":572},"element","p",{},[573],{"type":574,"value":563},"text",{"type":569,"tag":570,"props":576,"children":577},{},[578],{"type":574,"value":579},"回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。",{"type":569,"tag":581,"props":582,"children":583},"ul",{},[584],{"type":569,"tag":585,"props":586,"children":587},"li",{},[588],{"type":574,"value":589},"例如，121 是回文，而 123 不是。",{"type":569,"tag":570,"props":591,"children":592},{},[593],{"type":574,"value":594},"示例 1：",{"type":569,"tag":596,"props":597,"children":600},"pre",{"className":598,"code":599,"language":574,"meta":562,"style":562},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：x = 121\n输出：true\n",[601],{"type":569,"tag":602,"props":603,"children":604},"code",{"__ignoreMap":562},[605,616],{"type":569,"tag":606,"props":607,"children":610},"span",{"class":608,"line":609},"line",1,[611],{"type":569,"tag":606,"props":612,"children":613},{},[614],{"type":574,"value":615},"输入：x = 121\n",{"type":569,"tag":606,"props":617,"children":619},{"class":608,"line":618},2,[620],{"type":569,"tag":606,"props":621,"children":622},{},[623],{"type":574,"value":624},"输出：true\n",{"type":569,"tag":570,"props":626,"children":627},{},[628],{"type":574,"value":629},"示例 2：",{"type":569,"tag":596,"props":631,"children":633},{"className":598,"code":632,"language":574,"meta":562,"style":562},"输入：x = -121\n输出：false\n解释：从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。\n",[634],{"type":569,"tag":602,"props":635,"children":636},{"__ignoreMap":562},[637,645,653],{"type":569,"tag":606,"props":638,"children":639},{"class":608,"line":609},[640],{"type":569,"tag":606,"props":641,"children":642},{},[643],{"type":574,"value":644},"输入：x = -121\n",{"type":569,"tag":606,"props":646,"children":647},{"class":608,"line":618},[648],{"type":569,"tag":606,"props":649,"children":650},{},[651],{"type":574,"value":652},"输出：false\n",{"type":569,"tag":606,"props":654,"children":656},{"class":608,"line":655},3,[657],{"type":569,"tag":606,"props":658,"children":659},{},[660],{"type":574,"value":661},"解释：从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。\n",{"type":569,"tag":570,"props":663,"children":664},{},[665],{"type":574,"value":666},"示例 3：",{"type":569,"tag":596,"props":668,"children":670},{"className":598,"code":669,"language":574,"meta":562,"style":562},"输入：x = 10\n输出：false\n解释：从右向左读, 为 01 。因此它不是一个回文数。\n",[671],{"type":569,"tag":602,"props":672,"children":673},{"__ignoreMap":562},[674,682,689],{"type":569,"tag":606,"props":675,"children":676},{"class":608,"line":609},[677],{"type":569,"tag":606,"props":678,"children":679},{},[680],{"type":574,"value":681},"输入：x = 10\n",{"type":569,"tag":606,"props":683,"children":684},{"class":608,"line":618},[685],{"type":569,"tag":606,"props":686,"children":687},{},[688],{"type":574,"value":652},{"type":569,"tag":606,"props":690,"children":691},{"class":608,"line":655},[692],{"type":569,"tag":606,"props":693,"children":694},{},[695],{"type":574,"value":696},"解释：从右向左读, 为 01 。因此它不是一个回文数。\n",{"type":569,"tag":570,"props":698,"children":699},{},[700],{"type":574,"value":701},"提示：",{"type":569,"tag":581,"props":703,"children":704},{},[705],{"type":569,"tag":585,"props":706,"children":707},{},[708],{"type":574,"value":709},"-2^31 \u003C= x \u003C= 2^31 - 1",{"type":569,"tag":711,"props":712,"children":714},"h2",{"id":713},"解题思路",[715],{"type":574,"value":713},{"type":569,"tag":711,"props":717,"children":719},{"id":718},"实现",[720],{"type":574,"value":718},{"type":569,"tag":722,"props":723,"children":725},"h3",{"id":724},"字符串",[726],{"type":574,"value":724},{"type":569,"tag":596,"props":728,"children":732},{"className":729,"code":730,"language":731,"meta":562,"style":562},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} x\n * @return {boolean}\n */\nvar isPalindrome = function (x) {\n  return x.toString().split(\"\").reverse().join(\"\") === x.toString();\n};\n","js",[733],{"type":569,"tag":602,"props":734,"children":735},{"__ignoreMap":562},[736,745,787,817,826,872,970],{"type":569,"tag":606,"props":737,"children":738},{"class":608,"line":609},[739],{"type":569,"tag":606,"props":740,"children":742},{"style":741},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[743],{"type":574,"value":744},"/**\n",{"type":569,"tag":606,"props":746,"children":747},{"class":608,"line":618},[748,753,759,765,770,776,781],{"type":569,"tag":606,"props":749,"children":750},{"style":741},[751],{"type":574,"value":752}," * ",{"type":569,"tag":606,"props":754,"children":756},{"style":755},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[757],{"type":574,"value":758},"@",{"type":569,"tag":606,"props":760,"children":762},{"style":761},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[763],{"type":574,"value":764},"param",{"type":569,"tag":606,"props":766,"children":767},{"style":755},[768],{"type":574,"value":769}," {",{"type":569,"tag":606,"props":771,"children":773},{"style":772},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[774],{"type":574,"value":775},"number",{"type":569,"tag":606,"props":777,"children":778},{"style":755},[779],{"type":574,"value":780},"}",{"type":569,"tag":606,"props":782,"children":784},{"style":783},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[785],{"type":574,"value":786}," x\n",{"type":569,"tag":606,"props":788,"children":789},{"class":608,"line":655},[790,794,798,803,807,812],{"type":569,"tag":606,"props":791,"children":792},{"style":741},[793],{"type":574,"value":752},{"type":569,"tag":606,"props":795,"children":796},{"style":755},[797],{"type":574,"value":758},{"type":569,"tag":606,"props":799,"children":800},{"style":761},[801],{"type":574,"value":802},"return",{"type":569,"tag":606,"props":804,"children":805},{"style":755},[806],{"type":574,"value":769},{"type":569,"tag":606,"props":808,"children":809},{"style":772},[810],{"type":574,"value":811},"boolean",{"type":569,"tag":606,"props":813,"children":814},{"style":755},[815],{"type":574,"value":816},"}\n",{"type":569,"tag":606,"props":818,"children":820},{"class":608,"line":819},4,[821],{"type":569,"tag":606,"props":822,"children":823},{"style":741},[824],{"type":574,"value":825}," */\n",{"type":569,"tag":606,"props":827,"children":829},{"class":608,"line":828},5,[830,836,842,847,852,857,862,867],{"type":569,"tag":606,"props":831,"children":833},{"style":832},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[834],{"type":574,"value":835},"var",{"type":569,"tag":606,"props":837,"children":839},{"style":838},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[840],{"type":574,"value":841}," isPalindrome",{"type":569,"tag":606,"props":843,"children":844},{"style":755},[845],{"type":574,"value":846}," =",{"type":569,"tag":606,"props":848,"children":849},{"style":832},[850],{"type":574,"value":851}," function",{"type":569,"tag":606,"props":853,"children":854},{"style":755},[855],{"type":574,"value":856}," (",{"type":569,"tag":606,"props":858,"children":859},{"style":783},[860],{"type":574,"value":861},"x",{"type":569,"tag":606,"props":863,"children":864},{"style":755},[865],{"type":574,"value":866},")",{"type":569,"tag":606,"props":868,"children":869},{"style":755},[870],{"type":574,"value":871}," {\n",{"type":569,"tag":606,"props":873,"children":875},{"class":608,"line":874},6,[876,881,886,891,896,901,906,911,917,922,927,931,936,940,944,948,953,957,961,965],{"type":569,"tag":606,"props":877,"children":878},{"style":761},[879],{"type":574,"value":880},"  return",{"type":569,"tag":606,"props":882,"children":883},{"style":783},[884],{"type":574,"value":885}," x",{"type":569,"tag":606,"props":887,"children":888},{"style":755},[889],{"type":574,"value":890},".",{"type":569,"tag":606,"props":892,"children":893},{"style":838},[894],{"type":574,"value":895},"toString",{"type":569,"tag":606,"props":897,"children":898},{"style":755},[899],{"type":574,"value":900},"().",{"type":569,"tag":606,"props":902,"children":903},{"style":838},[904],{"type":574,"value":905},"split",{"type":569,"tag":606,"props":907,"children":908},{"style":755},[909],{"type":574,"value":910},"(",{"type":569,"tag":606,"props":912,"children":914},{"style":913},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[915],{"type":574,"value":916},"\"\"",{"type":569,"tag":606,"props":918,"children":919},{"style":755},[920],{"type":574,"value":921},").",{"type":569,"tag":606,"props":923,"children":924},{"style":838},[925],{"type":574,"value":926},"reverse",{"type":569,"tag":606,"props":928,"children":929},{"style":755},[930],{"type":574,"value":900},{"type":569,"tag":606,"props":932,"children":933},{"style":838},[934],{"type":574,"value":935},"join",{"type":569,"tag":606,"props":937,"children":938},{"style":755},[939],{"type":574,"value":910},{"type":569,"tag":606,"props":941,"children":942},{"style":913},[943],{"type":574,"value":916},{"type":569,"tag":606,"props":945,"children":946},{"style":755},[947],{"type":574,"value":866},{"type":569,"tag":606,"props":949,"children":950},{"style":832},[951],{"type":574,"value":952}," ===",{"type":569,"tag":606,"props":954,"children":955},{"style":783},[956],{"type":574,"value":885},{"type":569,"tag":606,"props":958,"children":959},{"style":755},[960],{"type":574,"value":890},{"type":569,"tag":606,"props":962,"children":963},{"style":838},[964],{"type":574,"value":895},{"type":569,"tag":606,"props":966,"children":967},{"style":755},[968],{"type":574,"value":969},"();\n",{"type":569,"tag":606,"props":971,"children":973},{"class":608,"line":972},7,[974],{"type":569,"tag":606,"props":975,"children":976},{"style":755},[977],{"type":574,"value":978},"};\n",{"type":569,"tag":722,"props":980,"children":982},{"id":981},"字符串-双指针",[983],{"type":574,"value":984},"字符串 + 双指针",{"type":569,"tag":596,"props":986,"children":988},{"className":729,"code":987,"language":731,"meta":562,"style":562},"/**\n * @param {number} x\n * @return {boolean}\n */\nvar isPalindrome = function (x) {\n  let s = x.toString();\n  let l = 0;\n  let r = s.length - 1;\n  while (l \u003C r) {\n    if (s[l] !== s[r]) return false;\n    l++;\n    r--;\n  }\n  return true;\n};\n",[989],{"type":569,"tag":602,"props":990,"children":991},{"__ignoreMap":562},[992,999,1030,1057,1064,1099,1132,1159,1204,1239,1308,1326,1344,1353,1370],{"type":569,"tag":606,"props":993,"children":994},{"class":608,"line":609},[995],{"type":569,"tag":606,"props":996,"children":997},{"style":741},[998],{"type":574,"value":744},{"type":569,"tag":606,"props":1000,"children":1001},{"class":608,"line":618},[1002,1006,1010,1014,1018,1022,1026],{"type":569,"tag":606,"props":1003,"children":1004},{"style":741},[1005],{"type":574,"value":752},{"type":569,"tag":606,"props":1007,"children":1008},{"style":755},[1009],{"type":574,"value":758},{"type":569,"tag":606,"props":1011,"children":1012},{"style":761},[1013],{"type":574,"value":764},{"type":569,"tag":606,"props":1015,"children":1016},{"style":755},[1017],{"type":574,"value":769},{"type":569,"tag":606,"props":1019,"children":1020},{"style":772},[1021],{"type":574,"value":775},{"type":569,"tag":606,"props":1023,"children":1024},{"style":755},[1025],{"type":574,"value":780},{"type":569,"tag":606,"props":1027,"children":1028},{"style":783},[1029],{"type":574,"value":786},{"type":569,"tag":606,"props":1031,"children":1032},{"class":608,"line":655},[1033,1037,1041,1045,1049,1053],{"type":569,"tag":606,"props":1034,"children":1035},{"style":741},[1036],{"type":574,"value":752},{"type":569,"tag":606,"props":1038,"children":1039},{"style":755},[1040],{"type":574,"value":758},{"type":569,"tag":606,"props":1042,"children":1043},{"style":761},[1044],{"type":574,"value":802},{"type":569,"tag":606,"props":1046,"children":1047},{"style":755},[1048],{"type":574,"value":769},{"type":569,"tag":606,"props":1050,"children":1051},{"style":772},[1052],{"type":574,"value":811},{"type":569,"tag":606,"props":1054,"children":1055},{"style":755},[1056],{"type":574,"value":816},{"type":569,"tag":606,"props":1058,"children":1059},{"class":608,"line":819},[1060],{"type":569,"tag":606,"props":1061,"children":1062},{"style":741},[1063],{"type":574,"value":825},{"type":569,"tag":606,"props":1065,"children":1066},{"class":608,"line":828},[1067,1071,1075,1079,1083,1087,1091,1095],{"type":569,"tag":606,"props":1068,"children":1069},{"style":832},[1070],{"type":574,"value":835},{"type":569,"tag":606,"props":1072,"children":1073},{"style":838},[1074],{"type":574,"value":841},{"type":569,"tag":606,"props":1076,"children":1077},{"style":755},[1078],{"type":574,"value":846},{"type":569,"tag":606,"props":1080,"children":1081},{"style":832},[1082],{"type":574,"value":851},{"type":569,"tag":606,"props":1084,"children":1085},{"style":755},[1086],{"type":574,"value":856},{"type":569,"tag":606,"props":1088,"children":1089},{"style":783},[1090],{"type":574,"value":861},{"type":569,"tag":606,"props":1092,"children":1093},{"style":755},[1094],{"type":574,"value":866},{"type":569,"tag":606,"props":1096,"children":1097},{"style":755},[1098],{"type":574,"value":871},{"type":569,"tag":606,"props":1100,"children":1101},{"class":608,"line":874},[1102,1107,1112,1116,1120,1124,1128],{"type":569,"tag":606,"props":1103,"children":1104},{"style":832},[1105],{"type":574,"value":1106},"  let",{"type":569,"tag":606,"props":1108,"children":1109},{"style":783},[1110],{"type":574,"value":1111}," s",{"type":569,"tag":606,"props":1113,"children":1114},{"style":755},[1115],{"type":574,"value":846},{"type":569,"tag":606,"props":1117,"children":1118},{"style":783},[1119],{"type":574,"value":885},{"type":569,"tag":606,"props":1121,"children":1122},{"style":755},[1123],{"type":574,"value":890},{"type":569,"tag":606,"props":1125,"children":1126},{"style":838},[1127],{"type":574,"value":895},{"type":569,"tag":606,"props":1129,"children":1130},{"style":755},[1131],{"type":574,"value":969},{"type":569,"tag":606,"props":1133,"children":1134},{"class":608,"line":972},[1135,1139,1144,1148,1154],{"type":569,"tag":606,"props":1136,"children":1137},{"style":832},[1138],{"type":574,"value":1106},{"type":569,"tag":606,"props":1140,"children":1141},{"style":783},[1142],{"type":574,"value":1143}," l",{"type":569,"tag":606,"props":1145,"children":1146},{"style":755},[1147],{"type":574,"value":846},{"type":569,"tag":606,"props":1149,"children":1151},{"style":1150},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1152],{"type":574,"value":1153}," 0",{"type":569,"tag":606,"props":1155,"children":1156},{"style":755},[1157],{"type":574,"value":1158},";\n",{"type":569,"tag":606,"props":1160,"children":1162},{"class":608,"line":1161},8,[1163,1167,1172,1176,1180,1184,1190,1195,1200],{"type":569,"tag":606,"props":1164,"children":1165},{"style":832},[1166],{"type":574,"value":1106},{"type":569,"tag":606,"props":1168,"children":1169},{"style":783},[1170],{"type":574,"value":1171}," r",{"type":569,"tag":606,"props":1173,"children":1174},{"style":755},[1175],{"type":574,"value":846},{"type":569,"tag":606,"props":1177,"children":1178},{"style":783},[1179],{"type":574,"value":1111},{"type":569,"tag":606,"props":1181,"children":1182},{"style":755},[1183],{"type":574,"value":890},{"type":569,"tag":606,"props":1185,"children":1187},{"style":1186},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1188],{"type":574,"value":1189},"length",{"type":569,"tag":606,"props":1191,"children":1192},{"style":832},[1193],{"type":574,"value":1194}," -",{"type":569,"tag":606,"props":1196,"children":1197},{"style":1150},[1198],{"type":574,"value":1199}," 1",{"type":569,"tag":606,"props":1201,"children":1202},{"style":755},[1203],{"type":574,"value":1158},{"type":569,"tag":606,"props":1205,"children":1207},{"class":608,"line":1206},9,[1208,1213,1217,1222,1227,1231,1235],{"type":569,"tag":606,"props":1209,"children":1210},{"style":761},[1211],{"type":574,"value":1212},"  while",{"type":569,"tag":606,"props":1214,"children":1215},{"style":755},[1216],{"type":574,"value":856},{"type":569,"tag":606,"props":1218,"children":1219},{"style":783},[1220],{"type":574,"value":1221},"l",{"type":569,"tag":606,"props":1223,"children":1224},{"style":755},[1225],{"type":574,"value":1226}," \u003C",{"type":569,"tag":606,"props":1228,"children":1229},{"style":783},[1230],{"type":574,"value":1171},{"type":569,"tag":606,"props":1232,"children":1233},{"style":755},[1234],{"type":574,"value":866},{"type":569,"tag":606,"props":1236,"children":1237},{"style":755},[1238],{"type":574,"value":871},{"type":569,"tag":606,"props":1240,"children":1242},{"class":608,"line":1241},10,[1243,1248,1252,1257,1262,1266,1271,1276,1280,1284,1289,1294,1299,1304],{"type":569,"tag":606,"props":1244,"children":1245},{"style":761},[1246],{"type":574,"value":1247},"    if",{"type":569,"tag":606,"props":1249,"children":1250},{"style":755},[1251],{"type":574,"value":856},{"type":569,"tag":606,"props":1253,"children":1254},{"style":783},[1255],{"type":574,"value":1256},"s",{"type":569,"tag":606,"props":1258,"children":1259},{"style":755},[1260],{"type":574,"value":1261},"[",{"type":569,"tag":606,"props":1263,"children":1264},{"style":783},[1265],{"type":574,"value":1221},{"type":569,"tag":606,"props":1267,"children":1268},{"style":755},[1269],{"type":574,"value":1270},"]",{"type":569,"tag":606,"props":1272,"children":1273},{"style":832},[1274],{"type":574,"value":1275}," !==",{"type":569,"tag":606,"props":1277,"children":1278},{"style":783},[1279],{"type":574,"value":1111},{"type":569,"tag":606,"props":1281,"children":1282},{"style":755},[1283],{"type":574,"value":1261},{"type":569,"tag":606,"props":1285,"children":1286},{"style":783},[1287],{"type":574,"value":1288},"r",{"type":569,"tag":606,"props":1290,"children":1291},{"style":755},[1292],{"type":574,"value":1293},"])",{"type":569,"tag":606,"props":1295,"children":1296},{"style":761},[1297],{"type":574,"value":1298}," return",{"type":569,"tag":606,"props":1300,"children":1301},{"style":761},[1302],{"type":574,"value":1303}," false",{"type":569,"tag":606,"props":1305,"children":1306},{"style":755},[1307],{"type":574,"value":1158},{"type":569,"tag":606,"props":1309,"children":1311},{"class":608,"line":1310},11,[1312,1317,1322],{"type":569,"tag":606,"props":1313,"children":1314},{"style":783},[1315],{"type":574,"value":1316},"    l",{"type":569,"tag":606,"props":1318,"children":1319},{"style":832},[1320],{"type":574,"value":1321},"++",{"type":569,"tag":606,"props":1323,"children":1324},{"style":755},[1325],{"type":574,"value":1158},{"type":569,"tag":606,"props":1327,"children":1329},{"class":608,"line":1328},12,[1330,1335,1340],{"type":569,"tag":606,"props":1331,"children":1332},{"style":783},[1333],{"type":574,"value":1334},"    r",{"type":569,"tag":606,"props":1336,"children":1337},{"style":832},[1338],{"type":574,"value":1339},"--",{"type":569,"tag":606,"props":1341,"children":1342},{"style":755},[1343],{"type":574,"value":1158},{"type":569,"tag":606,"props":1345,"children":1347},{"class":608,"line":1346},13,[1348],{"type":569,"tag":606,"props":1349,"children":1350},{"style":755},[1351],{"type":574,"value":1352},"  }\n",{"type":569,"tag":606,"props":1354,"children":1356},{"class":608,"line":1355},14,[1357,1361,1366],{"type":569,"tag":606,"props":1358,"children":1359},{"style":761},[1360],{"type":574,"value":880},{"type":569,"tag":606,"props":1362,"children":1363},{"style":761},[1364],{"type":574,"value":1365}," true",{"type":569,"tag":606,"props":1367,"children":1368},{"style":755},[1369],{"type":574,"value":1158},{"type":569,"tag":606,"props":1371,"children":1373},{"class":608,"line":1372},15,[1374],{"type":569,"tag":606,"props":1375,"children":1376},{"style":755},[1377],{"type":574,"value":978},{"type":569,"tag":722,"props":1379,"children":1381},{"id":1380},"余数重组",[1382],{"type":574,"value":1380},{"type":569,"tag":596,"props":1384,"children":1386},{"className":729,"code":1385,"language":731,"meta":562,"style":562},"/**\n * @param {number} x\n * @return {boolean}\n */\nvar isPalindrome = function (x) {\n  if (x \u003C 0 || (x % 10 === 0 && x !== 0)) return false;\n  let res = 0;\n  let s = x;\n  while (s) {\n    res = res * 10 + (s % 10);\n    s = Math.floor(s / 10);\n  }\n  return x === res;\n};\n",[1387],{"type":569,"tag":602,"props":1388,"children":1389},{"__ignoreMap":562},[1390,1397,1428,1455,1462,1497,1586,1610,1633,1656,1707,1754,1761,1784],{"type":569,"tag":606,"props":1391,"children":1392},{"class":608,"line":609},[1393],{"type":569,"tag":606,"props":1394,"children":1395},{"style":741},[1396],{"type":574,"value":744},{"type":569,"tag":606,"props":1398,"children":1399},{"class":608,"line":618},[1400,1404,1408,1412,1416,1420,1424],{"type":569,"tag":606,"props":1401,"children":1402},{"style":741},[1403],{"type":574,"value":752},{"type":569,"tag":606,"props":1405,"children":1406},{"style":755},[1407],{"type":574,"value":758},{"type":569,"tag":606,"props":1409,"children":1410},{"style":761},[1411],{"type":574,"value":764},{"type":569,"tag":606,"props":1413,"children":1414},{"style":755},[1415],{"type":574,"value":769},{"type":569,"tag":606,"props":1417,"children":1418},{"style":772},[1419],{"type":574,"value":775},{"type":569,"tag":606,"props":1421,"children":1422},{"style":755},[1423],{"type":574,"value":780},{"type":569,"tag":606,"props":1425,"children":1426},{"style":783},[1427],{"type":574,"value":786},{"type":569,"tag":606,"props":1429,"children":1430},{"class":608,"line":655},[1431,1435,1439,1443,1447,1451],{"type":569,"tag":606,"props":1432,"children":1433},{"style":741},[1434],{"type":574,"value":752},{"type":569,"tag":606,"props":1436,"children":1437},{"style":755},[1438],{"type":574,"value":758},{"type":569,"tag":606,"props":1440,"children":1441},{"style":761},[1442],{"type":574,"value":802},{"type":569,"tag":606,"props":1444,"children":1445},{"style":755},[1446],{"type":574,"value":769},{"type":569,"tag":606,"props":1448,"children":1449},{"style":772},[1450],{"type":574,"value":811},{"type":569,"tag":606,"props":1452,"children":1453},{"style":755},[1454],{"type":574,"value":816},{"type":569,"tag":606,"props":1456,"children":1457},{"class":608,"line":819},[1458],{"type":569,"tag":606,"props":1459,"children":1460},{"style":741},[1461],{"type":574,"value":825},{"type":569,"tag":606,"props":1463,"children":1464},{"class":608,"line":828},[1465,1469,1473,1477,1481,1485,1489,1493],{"type":569,"tag":606,"props":1466,"children":1467},{"style":832},[1468],{"type":574,"value":835},{"type":569,"tag":606,"props":1470,"children":1471},{"style":838},[1472],{"type":574,"value":841},{"type":569,"tag":606,"props":1474,"children":1475},{"style":755},[1476],{"type":574,"value":846},{"type":569,"tag":606,"props":1478,"children":1479},{"style":832},[1480],{"type":574,"value":851},{"type":569,"tag":606,"props":1482,"children":1483},{"style":755},[1484],{"type":574,"value":856},{"type":569,"tag":606,"props":1486,"children":1487},{"style":783},[1488],{"type":574,"value":861},{"type":569,"tag":606,"props":1490,"children":1491},{"style":755},[1492],{"type":574,"value":866},{"type":569,"tag":606,"props":1494,"children":1495},{"style":755},[1496],{"type":574,"value":871},{"type":569,"tag":606,"props":1498,"children":1499},{"class":608,"line":874},[1500,1505,1509,1513,1517,1521,1526,1530,1534,1539,1544,1548,1552,1557,1561,1565,1569,1574,1578,1582],{"type":569,"tag":606,"props":1501,"children":1502},{"style":761},[1503],{"type":574,"value":1504},"  if",{"type":569,"tag":606,"props":1506,"children":1507},{"style":755},[1508],{"type":574,"value":856},{"type":569,"tag":606,"props":1510,"children":1511},{"style":783},[1512],{"type":574,"value":861},{"type":569,"tag":606,"props":1514,"children":1515},{"style":755},[1516],{"type":574,"value":1226},{"type":569,"tag":606,"props":1518,"children":1519},{"style":1150},[1520],{"type":574,"value":1153},{"type":569,"tag":606,"props":1522,"children":1523},{"style":832},[1524],{"type":574,"value":1525}," ||",{"type":569,"tag":606,"props":1527,"children":1528},{"style":755},[1529],{"type":574,"value":856},{"type":569,"tag":606,"props":1531,"children":1532},{"style":783},[1533],{"type":574,"value":861},{"type":569,"tag":606,"props":1535,"children":1536},{"style":832},[1537],{"type":574,"value":1538}," %",{"type":569,"tag":606,"props":1540,"children":1541},{"style":1150},[1542],{"type":574,"value":1543}," 10",{"type":569,"tag":606,"props":1545,"children":1546},{"style":832},[1547],{"type":574,"value":952},{"type":569,"tag":606,"props":1549,"children":1550},{"style":1150},[1551],{"type":574,"value":1153},{"type":569,"tag":606,"props":1553,"children":1554},{"style":832},[1555],{"type":574,"value":1556}," &&",{"type":569,"tag":606,"props":1558,"children":1559},{"style":783},[1560],{"type":574,"value":885},{"type":569,"tag":606,"props":1562,"children":1563},{"style":832},[1564],{"type":574,"value":1275},{"type":569,"tag":606,"props":1566,"children":1567},{"style":1150},[1568],{"type":574,"value":1153},{"type":569,"tag":606,"props":1570,"children":1571},{"style":755},[1572],{"type":574,"value":1573},"))",{"type":569,"tag":606,"props":1575,"children":1576},{"style":761},[1577],{"type":574,"value":1298},{"type":569,"tag":606,"props":1579,"children":1580},{"style":761},[1581],{"type":574,"value":1303},{"type":569,"tag":606,"props":1583,"children":1584},{"style":755},[1585],{"type":574,"value":1158},{"type":569,"tag":606,"props":1587,"children":1588},{"class":608,"line":972},[1589,1593,1598,1602,1606],{"type":569,"tag":606,"props":1590,"children":1591},{"style":832},[1592],{"type":574,"value":1106},{"type":569,"tag":606,"props":1594,"children":1595},{"style":783},[1596],{"type":574,"value":1597}," res",{"type":569,"tag":606,"props":1599,"children":1600},{"style":755},[1601],{"type":574,"value":846},{"type":569,"tag":606,"props":1603,"children":1604},{"style":1150},[1605],{"type":574,"value":1153},{"type":569,"tag":606,"props":1607,"children":1608},{"style":755},[1609],{"type":574,"value":1158},{"type":569,"tag":606,"props":1611,"children":1612},{"class":608,"line":1161},[1613,1617,1621,1625,1629],{"type":569,"tag":606,"props":1614,"children":1615},{"style":832},[1616],{"type":574,"value":1106},{"type":569,"tag":606,"props":1618,"children":1619},{"style":783},[1620],{"type":574,"value":1111},{"type":569,"tag":606,"props":1622,"children":1623},{"style":755},[1624],{"type":574,"value":846},{"type":569,"tag":606,"props":1626,"children":1627},{"style":783},[1628],{"type":574,"value":885},{"type":569,"tag":606,"props":1630,"children":1631},{"style":755},[1632],{"type":574,"value":1158},{"type":569,"tag":606,"props":1634,"children":1635},{"class":608,"line":1206},[1636,1640,1644,1648,1652],{"type":569,"tag":606,"props":1637,"children":1638},{"style":761},[1639],{"type":574,"value":1212},{"type":569,"tag":606,"props":1641,"children":1642},{"style":755},[1643],{"type":574,"value":856},{"type":569,"tag":606,"props":1645,"children":1646},{"style":783},[1647],{"type":574,"value":1256},{"type":569,"tag":606,"props":1649,"children":1650},{"style":755},[1651],{"type":574,"value":866},{"type":569,"tag":606,"props":1653,"children":1654},{"style":755},[1655],{"type":574,"value":871},{"type":569,"tag":606,"props":1657,"children":1658},{"class":608,"line":1241},[1659,1664,1668,1672,1677,1681,1686,1690,1694,1698,1702],{"type":569,"tag":606,"props":1660,"children":1661},{"style":783},[1662],{"type":574,"value":1663},"    res",{"type":569,"tag":606,"props":1665,"children":1666},{"style":755},[1667],{"type":574,"value":846},{"type":569,"tag":606,"props":1669,"children":1670},{"style":783},[1671],{"type":574,"value":1597},{"type":569,"tag":606,"props":1673,"children":1674},{"style":832},[1675],{"type":574,"value":1676}," *",{"type":569,"tag":606,"props":1678,"children":1679},{"style":1150},[1680],{"type":574,"value":1543},{"type":569,"tag":606,"props":1682,"children":1683},{"style":832},[1684],{"type":574,"value":1685}," +",{"type":569,"tag":606,"props":1687,"children":1688},{"style":755},[1689],{"type":574,"value":856},{"type":569,"tag":606,"props":1691,"children":1692},{"style":783},[1693],{"type":574,"value":1256},{"type":569,"tag":606,"props":1695,"children":1696},{"style":832},[1697],{"type":574,"value":1538},{"type":569,"tag":606,"props":1699,"children":1700},{"style":1150},[1701],{"type":574,"value":1543},{"type":569,"tag":606,"props":1703,"children":1704},{"style":755},[1705],{"type":574,"value":1706},");\n",{"type":569,"tag":606,"props":1708,"children":1709},{"class":608,"line":1310},[1710,1715,1719,1724,1728,1733,1737,1741,1746,1750],{"type":569,"tag":606,"props":1711,"children":1712},{"style":783},[1713],{"type":574,"value":1714},"    s",{"type":569,"tag":606,"props":1716,"children":1717},{"style":755},[1718],{"type":574,"value":846},{"type":569,"tag":606,"props":1720,"children":1721},{"style":783},[1722],{"type":574,"value":1723}," Math",{"type":569,"tag":606,"props":1725,"children":1726},{"style":755},[1727],{"type":574,"value":890},{"type":569,"tag":606,"props":1729,"children":1730},{"style":838},[1731],{"type":574,"value":1732},"floor",{"type":569,"tag":606,"props":1734,"children":1735},{"style":755},[1736],{"type":574,"value":910},{"type":569,"tag":606,"props":1738,"children":1739},{"style":783},[1740],{"type":574,"value":1256},{"type":569,"tag":606,"props":1742,"children":1743},{"style":832},[1744],{"type":574,"value":1745}," /",{"type":569,"tag":606,"props":1747,"children":1748},{"style":1150},[1749],{"type":574,"value":1543},{"type":569,"tag":606,"props":1751,"children":1752},{"style":755},[1753],{"type":574,"value":1706},{"type":569,"tag":606,"props":1755,"children":1756},{"class":608,"line":1328},[1757],{"type":569,"tag":606,"props":1758,"children":1759},{"style":755},[1760],{"type":574,"value":1352},{"type":569,"tag":606,"props":1762,"children":1763},{"class":608,"line":1346},[1764,1768,1772,1776,1780],{"type":569,"tag":606,"props":1765,"children":1766},{"style":761},[1767],{"type":574,"value":880},{"type":569,"tag":606,"props":1769,"children":1770},{"style":783},[1771],{"type":574,"value":885},{"type":569,"tag":606,"props":1773,"children":1774},{"style":832},[1775],{"type":574,"value":952},{"type":569,"tag":606,"props":1777,"children":1778},{"style":783},[1779],{"type":574,"value":1597},{"type":569,"tag":606,"props":1781,"children":1782},{"style":755},[1783],{"type":574,"value":1158},{"type":569,"tag":606,"props":1785,"children":1786},{"class":608,"line":1355},[1787],{"type":569,"tag":606,"props":1788,"children":1789},{"style":755},[1790],{"type":574,"value":978},{"type":569,"tag":1792,"props":1793,"children":1794},"style",{},[1795],{"type":574,"value":1796},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":562,"searchDepth":828,"depth":828,"links":1798},[1799,1800],{"id":713,"depth":618,"text":713},{"id":718,"depth":618,"text":718,"children":1801},[1802,1803,1804],{"id":724,"depth":655,"text":724},{"id":981,"depth":655,"text":984},{"id":1380,"depth":655,"text":1380},"markdown","content:1.algorithm:3.leetcode:3.major:9.palindrome-number.md","content","1.algorithm/3.leetcode/3.major/9.palindrome-number.md","md",[1811,1813],{"_path":75,"title":74,"description":1812},"给你一个 32 位的有符号整数 x ，返回将 x 中的数字部分反转后的结果。",{"_path":81,"title":80,"description":1814},"编写一个函数来查找字符串数组中的最长公共前缀。",1717734304183]