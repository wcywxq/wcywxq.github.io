[{"data":1,"prerenderedAt":3014},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-nodes-in-k-group":543,"/algorithm/leetcode/major/reverse-nodes-in-k-group-surround":3009},[4,269,298,511,519,528],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":510},"代码考核","/code-assessment",[302,404,503],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":498,"_path":499},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":501,"_path":502},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":504,"_path":505,"children":506},"Ts 类型挑战","/code-assessment/type-challeges",[507],{"title":508,"_path":509},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":512,"_path":513,"children":514,"icon":518},"项目","/project",[515],{"title":516,"_path":517},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":520,"_path":521,"children":522,"icon":527},"设计模式","/design-mode",[523,524],{"title":520,"_path":521},{"title":525,"_path":526},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":529,"_path":530,"children":531,"icon":542},"后端语言","/backend-languages",[532],{"title":533,"_path":534,"children":535},"Python","/backend-languages/python",[536,539],{"title":537,"_path":538},"基础","/backend-languages/python/base",{"title":540,"_path":541},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":102,"_dir":544,"_draft":545,"_partial":545,"_locale":546,"title":101,"description":547,"url":548,"body":549,"_type":3004,"_id":3005,"_source":3006,"_file":3007,"_extension":3008},"major",false,"","给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。","https://leetcode.cn/problems/reverse-nodes-in-k-group",{"type":550,"children":551,"toc":2997},"root",[552,559,564,569,574,583,613,618,626,649,654,674,679,685,690,696,701,821,826,834,839,873,881,893,901,910,959,2006,2011,2905,2991],{"type":553,"tag":554,"props":555,"children":556},"element","p",{},[557],{"type":558,"value":547},"text",{"type":553,"tag":554,"props":560,"children":561},{},[562],{"type":558,"value":563},"k 是一个正整数，它的值小于或等于链表的长度。如果节点总数不是 k 的整数倍，那么请将最后剩余的节点保持原有顺序。",{"type":553,"tag":554,"props":565,"children":566},{},[567],{"type":558,"value":568},"你不能只是单纯的改变节点内部的值，而是需要实际进行节点交换。",{"type":553,"tag":554,"props":570,"children":571},{},[572],{"type":558,"value":573},"示例 1：",{"type":553,"tag":554,"props":575,"children":576},{},[577],{"type":553,"tag":578,"props":579,"children":582},"img",{"alt":580,"src":581},"reverse_ex1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.25_reverse_ex1.png",[],{"type":553,"tag":584,"props":585,"children":588},"pre",{"className":586,"code":587,"language":558,"meta":546,"style":546},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：head = [1,2,3,4,5], k = 2\n输出：[2,1,4,3,5]\n",[589],{"type":553,"tag":590,"props":591,"children":592},"code",{"__ignoreMap":546},[593,604],{"type":553,"tag":594,"props":595,"children":598},"span",{"class":596,"line":597},"line",1,[599],{"type":553,"tag":594,"props":600,"children":601},{},[602],{"type":558,"value":603},"输入：head = [1,2,3,4,5], k = 2\n",{"type":553,"tag":594,"props":605,"children":607},{"class":596,"line":606},2,[608],{"type":553,"tag":594,"props":609,"children":610},{},[611],{"type":558,"value":612},"输出：[2,1,4,3,5]\n",{"type":553,"tag":554,"props":614,"children":615},{},[616],{"type":558,"value":617},"示例 2：",{"type":553,"tag":554,"props":619,"children":620},{},[621],{"type":553,"tag":578,"props":622,"children":625},{"alt":623,"src":624},"reverse_ex2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.25_reverse_ex2.png",[],{"type":553,"tag":584,"props":627,"children":629},{"className":586,"code":628,"language":558,"meta":546,"style":546},"输入：head = [1,2,3,4,5], k = 3\n输出：[3,2,1,4,5]\n",[630],{"type":553,"tag":590,"props":631,"children":632},{"__ignoreMap":546},[633,641],{"type":553,"tag":594,"props":634,"children":635},{"class":596,"line":597},[636],{"type":553,"tag":594,"props":637,"children":638},{},[639],{"type":558,"value":640},"输入：head = [1,2,3,4,5], k = 3\n",{"type":553,"tag":594,"props":642,"children":643},{"class":596,"line":606},[644],{"type":553,"tag":594,"props":645,"children":646},{},[647],{"type":558,"value":648},"输出：[3,2,1,4,5]\n",{"type":553,"tag":554,"props":650,"children":651},{},[652],{"type":558,"value":653},"提示：",{"type":553,"tag":655,"props":656,"children":657},"ul",{},[658,664,669],{"type":553,"tag":659,"props":660,"children":661},"li",{},[662],{"type":558,"value":663},"链表中的节点数目为 n",{"type":553,"tag":659,"props":665,"children":666},{},[667],{"type":558,"value":668},"1 \u003C= k \u003C= n \u003C= 5000",{"type":553,"tag":659,"props":670,"children":671},{},[672],{"type":558,"value":673},"0 \u003C= Node.val \u003C= 1000",{"type":553,"tag":554,"props":675,"children":676},{},[677],{"type":558,"value":678},"进阶：你可以设计一个只用 O(1) 额外内存空间的算法解决此问题吗？",{"type":553,"tag":680,"props":681,"children":683},"h2",{"id":682},"解题思路",[684],{"type":558,"value":682},{"type":553,"tag":680,"props":686,"children":688},{"id":687},"实现",[689],{"type":558,"value":687},{"type":553,"tag":691,"props":692,"children":694},"h3",{"id":693},"方法一",[695],{"type":558,"value":693},{"type":553,"tag":554,"props":697,"children":698},{},[699],{"type":558,"value":700},"题意是以 k 个节点为一组进行反转，返回反转后的链表，\n从左到右扫描一遍链表，扫描过程中，以 k 为单位把数组分为若干段，对每一段进行反转。给定首尾节点，如何对链表进行翻转？\n链表的解析过程，初始化一个为 null 的前置节点 prev，然后遍历链表的同时，当前节点 current 的下一个指向前置节点，在改变当前节点的指向前，用临时变量保存当前节点的下一个节点 current.next。",{"type":553,"tag":584,"props":702,"children":706},{"className":703,"code":704,"language":705,"meta":546,"style":546},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","let temp = current.next;\ncurrent.next = prev;\nprev = current;\ncurrent = temp;\n","js",[707],{"type":553,"tag":590,"props":708,"children":709},{"__ignoreMap":546},[710,751,780,801],{"type":553,"tag":594,"props":711,"children":712},{"class":596,"line":597},[713,719,725,731,736,741,746],{"type":553,"tag":594,"props":714,"children":716},{"style":715},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[717],{"type":558,"value":718},"let",{"type":553,"tag":594,"props":720,"children":722},{"style":721},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[723],{"type":558,"value":724}," temp",{"type":553,"tag":594,"props":726,"children":728},{"style":727},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[729],{"type":558,"value":730}," =",{"type":553,"tag":594,"props":732,"children":733},{"style":721},[734],{"type":558,"value":735}," current",{"type":553,"tag":594,"props":737,"children":738},{"style":727},[739],{"type":558,"value":740},".",{"type":553,"tag":594,"props":742,"children":743},{"style":721},[744],{"type":558,"value":745},"next",{"type":553,"tag":594,"props":747,"children":748},{"style":727},[749],{"type":558,"value":750},";\n",{"type":553,"tag":594,"props":752,"children":753},{"class":596,"line":606},[754,759,763,767,771,776],{"type":553,"tag":594,"props":755,"children":756},{"style":721},[757],{"type":558,"value":758},"current",{"type":553,"tag":594,"props":760,"children":761},{"style":727},[762],{"type":558,"value":740},{"type":553,"tag":594,"props":764,"children":765},{"style":721},[766],{"type":558,"value":745},{"type":553,"tag":594,"props":768,"children":769},{"style":727},[770],{"type":558,"value":730},{"type":553,"tag":594,"props":772,"children":773},{"style":721},[774],{"type":558,"value":775}," prev",{"type":553,"tag":594,"props":777,"children":778},{"style":727},[779],{"type":558,"value":750},{"type":553,"tag":594,"props":781,"children":783},{"class":596,"line":782},3,[784,789,793,797],{"type":553,"tag":594,"props":785,"children":786},{"style":721},[787],{"type":558,"value":788},"prev",{"type":553,"tag":594,"props":790,"children":791},{"style":727},[792],{"type":558,"value":730},{"type":553,"tag":594,"props":794,"children":795},{"style":721},[796],{"type":558,"value":735},{"type":553,"tag":594,"props":798,"children":799},{"style":727},[800],{"type":558,"value":750},{"type":553,"tag":594,"props":802,"children":804},{"class":596,"line":803},4,[805,809,813,817],{"type":553,"tag":594,"props":806,"children":807},{"style":721},[808],{"type":558,"value":758},{"type":553,"tag":594,"props":810,"children":811},{"style":727},[812],{"type":558,"value":730},{"type":553,"tag":594,"props":814,"children":815},{"style":721},[816],{"type":558,"value":724},{"type":553,"tag":594,"props":818,"children":819},{"style":727},[820],{"type":558,"value":750},{"type":553,"tag":554,"props":822,"children":823},{},[824],{"type":558,"value":825},"举例如图：翻转整个链表 1->2->3->4->null=> 4->3->2->1->null",{"type":553,"tag":554,"props":827,"children":828},{},[829],{"type":553,"tag":578,"props":830,"children":833},{"alt":831,"src":832},"solution_1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.25_solution_1.png",[],{"type":553,"tag":554,"props":835,"children":836},{},[837],{"type":558,"value":838},"这里对每一组 k 个节点进行翻转。",{"type":553,"tag":840,"props":841,"children":842},"ol",{},[843,848,853,858,863,868],{"type":553,"tag":659,"props":844,"children":845},{},[846],{"type":558,"value":847},"先分组，用一个 count 变量记录当前节点个数",{"type":553,"tag":659,"props":849,"children":850},{},[851],{"type":558,"value":852},"用一个 start 变量记录当前分组的起始节点位置的前一个节点",{"type":553,"tag":659,"props":854,"children":855},{},[856],{"type":558,"value":857},"用一个 end 变量记录要翻转的最后一个节点位置",{"type":553,"tag":659,"props":859,"children":860},{},[861],{"type":558,"value":862},"翻转一组 k 个节点，即：(start, end) - start and end exclusively",{"type":553,"tag":659,"props":864,"children":865},{},[866],{"type":558,"value":867},"翻转后，start 指向反转后链表，区间 (start, end) 中最后一个节点，返回 start 节点",{"type":553,"tag":659,"props":869,"children":870},{},[871],{"type":558,"value":872},"如果不需要翻转，end 就放后移动一次 end = end.next，每一次移动，都要 count + 1。\n如图所示，步骤 4 和 5：翻转链表区间 (start, end)",{"type":553,"tag":554,"props":874,"children":875},{},[876],{"type":553,"tag":578,"props":877,"children":880},{"alt":878,"src":879},"solution_2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.25_solution_2.png",[],{"type":553,"tag":554,"props":882,"children":883},{},[884,886,891],{"type":558,"value":885},"举例如图，head=",{"type":553,"tag":594,"props":887,"children":888},{},[889],{"type":558,"value":890},"1,2,3,4,5,6,7,8",{"type":558,"value":892},", k=3",{"type":553,"tag":554,"props":894,"children":895},{},[896],{"type":553,"tag":578,"props":897,"children":900},{"alt":898,"src":899},"solution_3","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.25_solution_3.png",[],{"type":553,"tag":902,"props":903,"children":904},"blockquote",{},[905],{"type":553,"tag":554,"props":906,"children":907},{},[908],{"type":558,"value":909},"注意：一般情况下对链表的操作，都有可能会引入一个新的 dummy 节点，因为 head 有可能会改变。这里 head 从 1->3，dummy(List(0)) 保持不变。",{"type":553,"tag":655,"props":911,"children":912},{},[913,931],{"type":553,"tag":659,"props":914,"children":915},{},[916,918],{"type":558,"value":917},"复杂度分析\n",{"type":553,"tag":655,"props":919,"children":920},{},[921,926],{"type":553,"tag":659,"props":922,"children":923},{},[924],{"type":558,"value":925},"时间复杂度：O(n)",{"type":553,"tag":659,"props":927,"children":928},{},[929],{"type":558,"value":930},"空间复杂度：O(1)",{"type":553,"tag":659,"props":932,"children":933},{},[934,936],{"type":558,"value":935},"关键点分析\n",{"type":553,"tag":655,"props":937,"children":938},{},[939,944,949,954],{"type":553,"tag":659,"props":940,"children":941},{},[942],{"type":558,"value":943},"创建一个 dummy 节点",{"type":553,"tag":659,"props":945,"children":946},{},[947],{"type":558,"value":948},"对链表以 k 为单位进行分组，记录每一组的起始和最终节点位置",{"type":553,"tag":659,"props":950,"children":951},{},[952],{"type":558,"value":953},"对每一组进行翻转，更新起始和最后位置",{"type":553,"tag":659,"props":955,"children":956},{},[957],{"type":558,"value":958},"返回 dummy.next",{"type":553,"tag":584,"props":960,"children":962},{"className":703,"code":961,"language":705,"meta":546,"style":546},"/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @param {number} k\n * @return {ListNode}\n */\nvar reverseKGroup = function (head, k) {\n  // 翻转 start -> end 链表\n  function reverseList(start, end) {\n    let prev = start;\n    let current = start.next;\n    const node = current;\n    while (current !== end) {\n      let next = current.next;\n      current.next = prev;\n      prev = current;\n      current = next;\n    }\n    start.next = prev;\n    node.next = current;\n    return node;\n  }\n\n  let dummy = new ListNode();\n  dummy.next = head;\n  let start = dummy;\n  let end = dummy.next;\n  let count = 0;\n\n  while (end) {\n    count++;\n    if (count % k === 0) {\n      start = reverseList(start, end.next);\n      end = start.next;\n    } else {\n      // 移动指针\n      end = end.next;\n    }\n  }\n\n  return dummy.next;\n};\n",[963],{"type":553,"tag":590,"props":964,"children":965},{"__ignoreMap":546},[966,975,983,991,999,1008,1017,1026,1034,1075,1109,1139,1147,1201,1210,1251,1277,1309,1335,1369,1403,1432,1453,1473,1482,1511,1540,1557,1566,1576,1609,1639,1663,1695,1722,1730,1756,1774,1818,1864,1893,1911,1920,1948,1956,1964,1972,1997],{"type":553,"tag":594,"props":967,"children":968},{"class":596,"line":597},[969],{"type":553,"tag":594,"props":970,"children":972},{"style":971},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[973],{"type":558,"value":974},"/**\n",{"type":553,"tag":594,"props":976,"children":977},{"class":596,"line":606},[978],{"type":553,"tag":594,"props":979,"children":980},{"style":971},[981],{"type":558,"value":982}," * Definition for singly-linked list.\n",{"type":553,"tag":594,"props":984,"children":985},{"class":596,"line":782},[986],{"type":553,"tag":594,"props":987,"children":988},{"style":971},[989],{"type":558,"value":990}," * function ListNode(val, next) {\n",{"type":553,"tag":594,"props":992,"children":993},{"class":596,"line":803},[994],{"type":553,"tag":594,"props":995,"children":996},{"style":971},[997],{"type":558,"value":998}," *     this.val = (val===undefined ? 0 : val)\n",{"type":553,"tag":594,"props":1000,"children":1002},{"class":596,"line":1001},5,[1003],{"type":553,"tag":594,"props":1004,"children":1005},{"style":971},[1006],{"type":558,"value":1007}," *     this.next = (next===undefined ? null : next)\n",{"type":553,"tag":594,"props":1009,"children":1011},{"class":596,"line":1010},6,[1012],{"type":553,"tag":594,"props":1013,"children":1014},{"style":971},[1015],{"type":558,"value":1016}," * }\n",{"type":553,"tag":594,"props":1018,"children":1020},{"class":596,"line":1019},7,[1021],{"type":553,"tag":594,"props":1022,"children":1023},{"style":971},[1024],{"type":558,"value":1025}," */\n",{"type":553,"tag":594,"props":1027,"children":1029},{"class":596,"line":1028},8,[1030],{"type":553,"tag":594,"props":1031,"children":1032},{"style":971},[1033],{"type":558,"value":974},{"type":553,"tag":594,"props":1035,"children":1037},{"class":596,"line":1036},9,[1038,1043,1048,1054,1059,1065,1070],{"type":553,"tag":594,"props":1039,"children":1040},{"style":971},[1041],{"type":558,"value":1042}," * ",{"type":553,"tag":594,"props":1044,"children":1045},{"style":727},[1046],{"type":558,"value":1047},"@",{"type":553,"tag":594,"props":1049,"children":1051},{"style":1050},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[1052],{"type":558,"value":1053},"param",{"type":553,"tag":594,"props":1055,"children":1056},{"style":727},[1057],{"type":558,"value":1058}," {",{"type":553,"tag":594,"props":1060,"children":1062},{"style":1061},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[1063],{"type":558,"value":1064},"ListNode",{"type":553,"tag":594,"props":1066,"children":1067},{"style":727},[1068],{"type":558,"value":1069},"}",{"type":553,"tag":594,"props":1071,"children":1072},{"style":721},[1073],{"type":558,"value":1074}," head\n",{"type":553,"tag":594,"props":1076,"children":1078},{"class":596,"line":1077},10,[1079,1083,1087,1091,1095,1100,1104],{"type":553,"tag":594,"props":1080,"children":1081},{"style":971},[1082],{"type":558,"value":1042},{"type":553,"tag":594,"props":1084,"children":1085},{"style":727},[1086],{"type":558,"value":1047},{"type":553,"tag":594,"props":1088,"children":1089},{"style":1050},[1090],{"type":558,"value":1053},{"type":553,"tag":594,"props":1092,"children":1093},{"style":727},[1094],{"type":558,"value":1058},{"type":553,"tag":594,"props":1096,"children":1097},{"style":1061},[1098],{"type":558,"value":1099},"number",{"type":553,"tag":594,"props":1101,"children":1102},{"style":727},[1103],{"type":558,"value":1069},{"type":553,"tag":594,"props":1105,"children":1106},{"style":721},[1107],{"type":558,"value":1108}," k\n",{"type":553,"tag":594,"props":1110,"children":1112},{"class":596,"line":1111},11,[1113,1117,1121,1126,1130,1134],{"type":553,"tag":594,"props":1114,"children":1115},{"style":971},[1116],{"type":558,"value":1042},{"type":553,"tag":594,"props":1118,"children":1119},{"style":727},[1120],{"type":558,"value":1047},{"type":553,"tag":594,"props":1122,"children":1123},{"style":1050},[1124],{"type":558,"value":1125},"return",{"type":553,"tag":594,"props":1127,"children":1128},{"style":727},[1129],{"type":558,"value":1058},{"type":553,"tag":594,"props":1131,"children":1132},{"style":1061},[1133],{"type":558,"value":1064},{"type":553,"tag":594,"props":1135,"children":1136},{"style":727},[1137],{"type":558,"value":1138},"}\n",{"type":553,"tag":594,"props":1140,"children":1142},{"class":596,"line":1141},12,[1143],{"type":553,"tag":594,"props":1144,"children":1145},{"style":971},[1146],{"type":558,"value":1025},{"type":553,"tag":594,"props":1148,"children":1150},{"class":596,"line":1149},13,[1151,1156,1162,1166,1171,1176,1181,1186,1191,1196],{"type":553,"tag":594,"props":1152,"children":1153},{"style":715},[1154],{"type":558,"value":1155},"var",{"type":553,"tag":594,"props":1157,"children":1159},{"style":1158},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[1160],{"type":558,"value":1161}," reverseKGroup",{"type":553,"tag":594,"props":1163,"children":1164},{"style":727},[1165],{"type":558,"value":730},{"type":553,"tag":594,"props":1167,"children":1168},{"style":715},[1169],{"type":558,"value":1170}," function",{"type":553,"tag":594,"props":1172,"children":1173},{"style":727},[1174],{"type":558,"value":1175}," (",{"type":553,"tag":594,"props":1177,"children":1178},{"style":721},[1179],{"type":558,"value":1180},"head",{"type":553,"tag":594,"props":1182,"children":1183},{"style":727},[1184],{"type":558,"value":1185},",",{"type":553,"tag":594,"props":1187,"children":1188},{"style":721},[1189],{"type":558,"value":1190}," k",{"type":553,"tag":594,"props":1192,"children":1193},{"style":727},[1194],{"type":558,"value":1195},")",{"type":553,"tag":594,"props":1197,"children":1198},{"style":727},[1199],{"type":558,"value":1200}," {\n",{"type":553,"tag":594,"props":1202,"children":1204},{"class":596,"line":1203},14,[1205],{"type":553,"tag":594,"props":1206,"children":1207},{"style":971},[1208],{"type":558,"value":1209},"  // 翻转 start -> end 链表\n",{"type":553,"tag":594,"props":1211,"children":1213},{"class":596,"line":1212},15,[1214,1219,1224,1229,1234,1238,1243,1247],{"type":553,"tag":594,"props":1215,"children":1216},{"style":715},[1217],{"type":558,"value":1218},"  function",{"type":553,"tag":594,"props":1220,"children":1221},{"style":1158},[1222],{"type":558,"value":1223}," reverseList",{"type":553,"tag":594,"props":1225,"children":1226},{"style":727},[1227],{"type":558,"value":1228},"(",{"type":553,"tag":594,"props":1230,"children":1231},{"style":721},[1232],{"type":558,"value":1233},"start",{"type":553,"tag":594,"props":1235,"children":1236},{"style":727},[1237],{"type":558,"value":1185},{"type":553,"tag":594,"props":1239,"children":1240},{"style":721},[1241],{"type":558,"value":1242}," end",{"type":553,"tag":594,"props":1244,"children":1245},{"style":727},[1246],{"type":558,"value":1195},{"type":553,"tag":594,"props":1248,"children":1249},{"style":727},[1250],{"type":558,"value":1200},{"type":553,"tag":594,"props":1252,"children":1254},{"class":596,"line":1253},16,[1255,1260,1264,1268,1273],{"type":553,"tag":594,"props":1256,"children":1257},{"style":715},[1258],{"type":558,"value":1259},"    let",{"type":553,"tag":594,"props":1261,"children":1262},{"style":721},[1263],{"type":558,"value":775},{"type":553,"tag":594,"props":1265,"children":1266},{"style":727},[1267],{"type":558,"value":730},{"type":553,"tag":594,"props":1269,"children":1270},{"style":721},[1271],{"type":558,"value":1272}," start",{"type":553,"tag":594,"props":1274,"children":1275},{"style":727},[1276],{"type":558,"value":750},{"type":553,"tag":594,"props":1278,"children":1280},{"class":596,"line":1279},17,[1281,1285,1289,1293,1297,1301,1305],{"type":553,"tag":594,"props":1282,"children":1283},{"style":715},[1284],{"type":558,"value":1259},{"type":553,"tag":594,"props":1286,"children":1287},{"style":721},[1288],{"type":558,"value":735},{"type":553,"tag":594,"props":1290,"children":1291},{"style":727},[1292],{"type":558,"value":730},{"type":553,"tag":594,"props":1294,"children":1295},{"style":721},[1296],{"type":558,"value":1272},{"type":553,"tag":594,"props":1298,"children":1299},{"style":727},[1300],{"type":558,"value":740},{"type":553,"tag":594,"props":1302,"children":1303},{"style":721},[1304],{"type":558,"value":745},{"type":553,"tag":594,"props":1306,"children":1307},{"style":727},[1308],{"type":558,"value":750},{"type":553,"tag":594,"props":1310,"children":1312},{"class":596,"line":1311},18,[1313,1318,1323,1327,1331],{"type":553,"tag":594,"props":1314,"children":1315},{"style":715},[1316],{"type":558,"value":1317},"    const",{"type":553,"tag":594,"props":1319,"children":1320},{"style":721},[1321],{"type":558,"value":1322}," node",{"type":553,"tag":594,"props":1324,"children":1325},{"style":727},[1326],{"type":558,"value":730},{"type":553,"tag":594,"props":1328,"children":1329},{"style":721},[1330],{"type":558,"value":735},{"type":553,"tag":594,"props":1332,"children":1333},{"style":727},[1334],{"type":558,"value":750},{"type":553,"tag":594,"props":1336,"children":1338},{"class":596,"line":1337},19,[1339,1344,1348,1352,1357,1361,1365],{"type":553,"tag":594,"props":1340,"children":1341},{"style":1050},[1342],{"type":558,"value":1343},"    while",{"type":553,"tag":594,"props":1345,"children":1346},{"style":727},[1347],{"type":558,"value":1175},{"type":553,"tag":594,"props":1349,"children":1350},{"style":721},[1351],{"type":558,"value":758},{"type":553,"tag":594,"props":1353,"children":1354},{"style":715},[1355],{"type":558,"value":1356}," !==",{"type":553,"tag":594,"props":1358,"children":1359},{"style":721},[1360],{"type":558,"value":1242},{"type":553,"tag":594,"props":1362,"children":1363},{"style":727},[1364],{"type":558,"value":1195},{"type":553,"tag":594,"props":1366,"children":1367},{"style":727},[1368],{"type":558,"value":1200},{"type":553,"tag":594,"props":1370,"children":1372},{"class":596,"line":1371},20,[1373,1378,1383,1387,1391,1395,1399],{"type":553,"tag":594,"props":1374,"children":1375},{"style":715},[1376],{"type":558,"value":1377},"      let",{"type":553,"tag":594,"props":1379,"children":1380},{"style":721},[1381],{"type":558,"value":1382}," next",{"type":553,"tag":594,"props":1384,"children":1385},{"style":727},[1386],{"type":558,"value":730},{"type":553,"tag":594,"props":1388,"children":1389},{"style":721},[1390],{"type":558,"value":735},{"type":553,"tag":594,"props":1392,"children":1393},{"style":727},[1394],{"type":558,"value":740},{"type":553,"tag":594,"props":1396,"children":1397},{"style":721},[1398],{"type":558,"value":745},{"type":553,"tag":594,"props":1400,"children":1401},{"style":727},[1402],{"type":558,"value":750},{"type":553,"tag":594,"props":1404,"children":1406},{"class":596,"line":1405},21,[1407,1412,1416,1420,1424,1428],{"type":553,"tag":594,"props":1408,"children":1409},{"style":721},[1410],{"type":558,"value":1411},"      current",{"type":553,"tag":594,"props":1413,"children":1414},{"style":727},[1415],{"type":558,"value":740},{"type":553,"tag":594,"props":1417,"children":1418},{"style":721},[1419],{"type":558,"value":745},{"type":553,"tag":594,"props":1421,"children":1422},{"style":727},[1423],{"type":558,"value":730},{"type":553,"tag":594,"props":1425,"children":1426},{"style":721},[1427],{"type":558,"value":775},{"type":553,"tag":594,"props":1429,"children":1430},{"style":727},[1431],{"type":558,"value":750},{"type":553,"tag":594,"props":1433,"children":1435},{"class":596,"line":1434},22,[1436,1441,1445,1449],{"type":553,"tag":594,"props":1437,"children":1438},{"style":721},[1439],{"type":558,"value":1440},"      prev",{"type":553,"tag":594,"props":1442,"children":1443},{"style":727},[1444],{"type":558,"value":730},{"type":553,"tag":594,"props":1446,"children":1447},{"style":721},[1448],{"type":558,"value":735},{"type":553,"tag":594,"props":1450,"children":1451},{"style":727},[1452],{"type":558,"value":750},{"type":553,"tag":594,"props":1454,"children":1456},{"class":596,"line":1455},23,[1457,1461,1465,1469],{"type":553,"tag":594,"props":1458,"children":1459},{"style":721},[1460],{"type":558,"value":1411},{"type":553,"tag":594,"props":1462,"children":1463},{"style":727},[1464],{"type":558,"value":730},{"type":553,"tag":594,"props":1466,"children":1467},{"style":721},[1468],{"type":558,"value":1382},{"type":553,"tag":594,"props":1470,"children":1471},{"style":727},[1472],{"type":558,"value":750},{"type":553,"tag":594,"props":1474,"children":1476},{"class":596,"line":1475},24,[1477],{"type":553,"tag":594,"props":1478,"children":1479},{"style":727},[1480],{"type":558,"value":1481},"    }\n",{"type":553,"tag":594,"props":1483,"children":1485},{"class":596,"line":1484},25,[1486,1491,1495,1499,1503,1507],{"type":553,"tag":594,"props":1487,"children":1488},{"style":721},[1489],{"type":558,"value":1490},"    start",{"type":553,"tag":594,"props":1492,"children":1493},{"style":727},[1494],{"type":558,"value":740},{"type":553,"tag":594,"props":1496,"children":1497},{"style":721},[1498],{"type":558,"value":745},{"type":553,"tag":594,"props":1500,"children":1501},{"style":727},[1502],{"type":558,"value":730},{"type":553,"tag":594,"props":1504,"children":1505},{"style":721},[1506],{"type":558,"value":775},{"type":553,"tag":594,"props":1508,"children":1509},{"style":727},[1510],{"type":558,"value":750},{"type":553,"tag":594,"props":1512,"children":1514},{"class":596,"line":1513},26,[1515,1520,1524,1528,1532,1536],{"type":553,"tag":594,"props":1516,"children":1517},{"style":721},[1518],{"type":558,"value":1519},"    node",{"type":553,"tag":594,"props":1521,"children":1522},{"style":727},[1523],{"type":558,"value":740},{"type":553,"tag":594,"props":1525,"children":1526},{"style":721},[1527],{"type":558,"value":745},{"type":553,"tag":594,"props":1529,"children":1530},{"style":727},[1531],{"type":558,"value":730},{"type":553,"tag":594,"props":1533,"children":1534},{"style":721},[1535],{"type":558,"value":735},{"type":553,"tag":594,"props":1537,"children":1538},{"style":727},[1539],{"type":558,"value":750},{"type":553,"tag":594,"props":1541,"children":1543},{"class":596,"line":1542},27,[1544,1549,1553],{"type":553,"tag":594,"props":1545,"children":1546},{"style":1050},[1547],{"type":558,"value":1548},"    return",{"type":553,"tag":594,"props":1550,"children":1551},{"style":721},[1552],{"type":558,"value":1322},{"type":553,"tag":594,"props":1554,"children":1555},{"style":727},[1556],{"type":558,"value":750},{"type":553,"tag":594,"props":1558,"children":1560},{"class":596,"line":1559},28,[1561],{"type":553,"tag":594,"props":1562,"children":1563},{"style":727},[1564],{"type":558,"value":1565},"  }\n",{"type":553,"tag":594,"props":1567,"children":1569},{"class":596,"line":1568},29,[1570],{"type":553,"tag":594,"props":1571,"children":1573},{"emptyLinePlaceholder":1572},true,[1574],{"type":558,"value":1575},"\n",{"type":553,"tag":594,"props":1577,"children":1579},{"class":596,"line":1578},30,[1580,1585,1590,1594,1599,1604],{"type":553,"tag":594,"props":1581,"children":1582},{"style":715},[1583],{"type":558,"value":1584},"  let",{"type":553,"tag":594,"props":1586,"children":1587},{"style":721},[1588],{"type":558,"value":1589}," dummy",{"type":553,"tag":594,"props":1591,"children":1592},{"style":727},[1593],{"type":558,"value":730},{"type":553,"tag":594,"props":1595,"children":1596},{"style":715},[1597],{"type":558,"value":1598}," new",{"type":553,"tag":594,"props":1600,"children":1601},{"style":1158},[1602],{"type":558,"value":1603}," ListNode",{"type":553,"tag":594,"props":1605,"children":1606},{"style":727},[1607],{"type":558,"value":1608},"();\n",{"type":553,"tag":594,"props":1610,"children":1612},{"class":596,"line":1611},31,[1613,1618,1622,1626,1630,1635],{"type":553,"tag":594,"props":1614,"children":1615},{"style":721},[1616],{"type":558,"value":1617},"  dummy",{"type":553,"tag":594,"props":1619,"children":1620},{"style":727},[1621],{"type":558,"value":740},{"type":553,"tag":594,"props":1623,"children":1624},{"style":721},[1625],{"type":558,"value":745},{"type":553,"tag":594,"props":1627,"children":1628},{"style":727},[1629],{"type":558,"value":730},{"type":553,"tag":594,"props":1631,"children":1632},{"style":721},[1633],{"type":558,"value":1634}," head",{"type":553,"tag":594,"props":1636,"children":1637},{"style":727},[1638],{"type":558,"value":750},{"type":553,"tag":594,"props":1640,"children":1642},{"class":596,"line":1641},32,[1643,1647,1651,1655,1659],{"type":553,"tag":594,"props":1644,"children":1645},{"style":715},[1646],{"type":558,"value":1584},{"type":553,"tag":594,"props":1648,"children":1649},{"style":721},[1650],{"type":558,"value":1272},{"type":553,"tag":594,"props":1652,"children":1653},{"style":727},[1654],{"type":558,"value":730},{"type":553,"tag":594,"props":1656,"children":1657},{"style":721},[1658],{"type":558,"value":1589},{"type":553,"tag":594,"props":1660,"children":1661},{"style":727},[1662],{"type":558,"value":750},{"type":553,"tag":594,"props":1664,"children":1666},{"class":596,"line":1665},33,[1667,1671,1675,1679,1683,1687,1691],{"type":553,"tag":594,"props":1668,"children":1669},{"style":715},[1670],{"type":558,"value":1584},{"type":553,"tag":594,"props":1672,"children":1673},{"style":721},[1674],{"type":558,"value":1242},{"type":553,"tag":594,"props":1676,"children":1677},{"style":727},[1678],{"type":558,"value":730},{"type":553,"tag":594,"props":1680,"children":1681},{"style":721},[1682],{"type":558,"value":1589},{"type":553,"tag":594,"props":1684,"children":1685},{"style":727},[1686],{"type":558,"value":740},{"type":553,"tag":594,"props":1688,"children":1689},{"style":721},[1690],{"type":558,"value":745},{"type":553,"tag":594,"props":1692,"children":1693},{"style":727},[1694],{"type":558,"value":750},{"type":553,"tag":594,"props":1696,"children":1698},{"class":596,"line":1697},34,[1699,1703,1708,1712,1718],{"type":553,"tag":594,"props":1700,"children":1701},{"style":715},[1702],{"type":558,"value":1584},{"type":553,"tag":594,"props":1704,"children":1705},{"style":721},[1706],{"type":558,"value":1707}," count",{"type":553,"tag":594,"props":1709,"children":1710},{"style":727},[1711],{"type":558,"value":730},{"type":553,"tag":594,"props":1713,"children":1715},{"style":1714},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1716],{"type":558,"value":1717}," 0",{"type":553,"tag":594,"props":1719,"children":1720},{"style":727},[1721],{"type":558,"value":750},{"type":553,"tag":594,"props":1723,"children":1725},{"class":596,"line":1724},35,[1726],{"type":553,"tag":594,"props":1727,"children":1728},{"emptyLinePlaceholder":1572},[1729],{"type":558,"value":1575},{"type":553,"tag":594,"props":1731,"children":1733},{"class":596,"line":1732},36,[1734,1739,1743,1748,1752],{"type":553,"tag":594,"props":1735,"children":1736},{"style":1050},[1737],{"type":558,"value":1738},"  while",{"type":553,"tag":594,"props":1740,"children":1741},{"style":727},[1742],{"type":558,"value":1175},{"type":553,"tag":594,"props":1744,"children":1745},{"style":721},[1746],{"type":558,"value":1747},"end",{"type":553,"tag":594,"props":1749,"children":1750},{"style":727},[1751],{"type":558,"value":1195},{"type":553,"tag":594,"props":1753,"children":1754},{"style":727},[1755],{"type":558,"value":1200},{"type":553,"tag":594,"props":1757,"children":1759},{"class":596,"line":1758},37,[1760,1765,1770],{"type":553,"tag":594,"props":1761,"children":1762},{"style":721},[1763],{"type":558,"value":1764},"    count",{"type":553,"tag":594,"props":1766,"children":1767},{"style":715},[1768],{"type":558,"value":1769},"++",{"type":553,"tag":594,"props":1771,"children":1772},{"style":727},[1773],{"type":558,"value":750},{"type":553,"tag":594,"props":1775,"children":1777},{"class":596,"line":1776},38,[1778,1783,1787,1792,1797,1801,1806,1810,1814],{"type":553,"tag":594,"props":1779,"children":1780},{"style":1050},[1781],{"type":558,"value":1782},"    if",{"type":553,"tag":594,"props":1784,"children":1785},{"style":727},[1786],{"type":558,"value":1175},{"type":553,"tag":594,"props":1788,"children":1789},{"style":721},[1790],{"type":558,"value":1791},"count",{"type":553,"tag":594,"props":1793,"children":1794},{"style":715},[1795],{"type":558,"value":1796}," %",{"type":553,"tag":594,"props":1798,"children":1799},{"style":721},[1800],{"type":558,"value":1190},{"type":553,"tag":594,"props":1802,"children":1803},{"style":715},[1804],{"type":558,"value":1805}," ===",{"type":553,"tag":594,"props":1807,"children":1808},{"style":1714},[1809],{"type":558,"value":1717},{"type":553,"tag":594,"props":1811,"children":1812},{"style":727},[1813],{"type":558,"value":1195},{"type":553,"tag":594,"props":1815,"children":1816},{"style":727},[1817],{"type":558,"value":1200},{"type":553,"tag":594,"props":1819,"children":1821},{"class":596,"line":1820},39,[1822,1827,1831,1835,1839,1843,1847,1851,1855,1859],{"type":553,"tag":594,"props":1823,"children":1824},{"style":721},[1825],{"type":558,"value":1826},"      start",{"type":553,"tag":594,"props":1828,"children":1829},{"style":727},[1830],{"type":558,"value":730},{"type":553,"tag":594,"props":1832,"children":1833},{"style":1158},[1834],{"type":558,"value":1223},{"type":553,"tag":594,"props":1836,"children":1837},{"style":727},[1838],{"type":558,"value":1228},{"type":553,"tag":594,"props":1840,"children":1841},{"style":721},[1842],{"type":558,"value":1233},{"type":553,"tag":594,"props":1844,"children":1845},{"style":727},[1846],{"type":558,"value":1185},{"type":553,"tag":594,"props":1848,"children":1849},{"style":721},[1850],{"type":558,"value":1242},{"type":553,"tag":594,"props":1852,"children":1853},{"style":727},[1854],{"type":558,"value":740},{"type":553,"tag":594,"props":1856,"children":1857},{"style":721},[1858],{"type":558,"value":745},{"type":553,"tag":594,"props":1860,"children":1861},{"style":727},[1862],{"type":558,"value":1863},");\n",{"type":553,"tag":594,"props":1865,"children":1867},{"class":596,"line":1866},40,[1868,1873,1877,1881,1885,1889],{"type":553,"tag":594,"props":1869,"children":1870},{"style":721},[1871],{"type":558,"value":1872},"      end",{"type":553,"tag":594,"props":1874,"children":1875},{"style":727},[1876],{"type":558,"value":730},{"type":553,"tag":594,"props":1878,"children":1879},{"style":721},[1880],{"type":558,"value":1272},{"type":553,"tag":594,"props":1882,"children":1883},{"style":727},[1884],{"type":558,"value":740},{"type":553,"tag":594,"props":1886,"children":1887},{"style":721},[1888],{"type":558,"value":745},{"type":553,"tag":594,"props":1890,"children":1891},{"style":727},[1892],{"type":558,"value":750},{"type":553,"tag":594,"props":1894,"children":1896},{"class":596,"line":1895},41,[1897,1902,1907],{"type":553,"tag":594,"props":1898,"children":1899},{"style":727},[1900],{"type":558,"value":1901},"    }",{"type":553,"tag":594,"props":1903,"children":1904},{"style":1050},[1905],{"type":558,"value":1906}," else",{"type":553,"tag":594,"props":1908,"children":1909},{"style":727},[1910],{"type":558,"value":1200},{"type":553,"tag":594,"props":1912,"children":1914},{"class":596,"line":1913},42,[1915],{"type":553,"tag":594,"props":1916,"children":1917},{"style":971},[1918],{"type":558,"value":1919},"      // 移动指针\n",{"type":553,"tag":594,"props":1921,"children":1923},{"class":596,"line":1922},43,[1924,1928,1932,1936,1940,1944],{"type":553,"tag":594,"props":1925,"children":1926},{"style":721},[1927],{"type":558,"value":1872},{"type":553,"tag":594,"props":1929,"children":1930},{"style":727},[1931],{"type":558,"value":730},{"type":553,"tag":594,"props":1933,"children":1934},{"style":721},[1935],{"type":558,"value":1242},{"type":553,"tag":594,"props":1937,"children":1938},{"style":727},[1939],{"type":558,"value":740},{"type":553,"tag":594,"props":1941,"children":1942},{"style":721},[1943],{"type":558,"value":745},{"type":553,"tag":594,"props":1945,"children":1946},{"style":727},[1947],{"type":558,"value":750},{"type":553,"tag":594,"props":1949,"children":1951},{"class":596,"line":1950},44,[1952],{"type":553,"tag":594,"props":1953,"children":1954},{"style":727},[1955],{"type":558,"value":1481},{"type":553,"tag":594,"props":1957,"children":1959},{"class":596,"line":1958},45,[1960],{"type":553,"tag":594,"props":1961,"children":1962},{"style":727},[1963],{"type":558,"value":1565},{"type":553,"tag":594,"props":1965,"children":1967},{"class":596,"line":1966},46,[1968],{"type":553,"tag":594,"props":1969,"children":1970},{"emptyLinePlaceholder":1572},[1971],{"type":558,"value":1575},{"type":553,"tag":594,"props":1973,"children":1975},{"class":596,"line":1974},47,[1976,1981,1985,1989,1993],{"type":553,"tag":594,"props":1977,"children":1978},{"style":1050},[1979],{"type":558,"value":1980},"  return",{"type":553,"tag":594,"props":1982,"children":1983},{"style":721},[1984],{"type":558,"value":1589},{"type":553,"tag":594,"props":1986,"children":1987},{"style":727},[1988],{"type":558,"value":740},{"type":553,"tag":594,"props":1990,"children":1991},{"style":721},[1992],{"type":558,"value":745},{"type":553,"tag":594,"props":1994,"children":1995},{"style":727},[1996],{"type":558,"value":750},{"type":553,"tag":594,"props":1998,"children":2000},{"class":596,"line":1999},48,[2001],{"type":553,"tag":594,"props":2002,"children":2003},{"style":727},[2004],{"type":558,"value":2005},"};\n",{"type":553,"tag":691,"props":2007,"children":2009},{"id":2008},"方法二",[2010],{"type":558,"value":2008},{"type":553,"tag":584,"props":2012,"children":2014},{"className":703,"code":2013,"language":705,"meta":546,"style":546},"/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @param {number} k\n * @return {ListNode}\n */\nvar reverseKGroup = function (head, k) {\n  let n = 0;\n  let current = head;\n  while (current) {\n    n++;\n    current = current.next;\n  }\n\n  const dummy = new ListNode(0, head);\n  // p0 代表反转中间段的上一个节点\n  // left = 1 时，构造哨兵节点\n  // 循环后，到达反转后的上一个节点\n  let p0 = dummy;\n  let prev = null;\n  current = p0.next;\n\n  while (n >= k) {\n    n -= k;\n    for (let i = 0; i \u003C k; i++) {\n      const next = current.next;\n      current.next = prev;\n      prev = current;\n      current = next;\n    }\n\n    // 保存原始 p0 的 next\n    const next = p0.next;\n\n    // p0 指向 prev\n    // p0 的 next 指向 current\n    p0.next.next = current;\n    p0.next = prev;\n    p0 = next;\n  }\n  return dummy.next;\n};\n",[2015],{"type":553,"tag":590,"props":2016,"children":2017},{"__ignoreMap":546},[2018,2025,2032,2039,2046,2053,2060,2067,2074,2105,2136,2163,2170,2213,2237,2260,2283,2299,2327,2334,2341,2386,2394,2402,2410,2434,2458,2486,2493,2526,2546,2613,2645,2672,2691,2710,2717,2724,2732,2763,2770,2778,2786,2822,2849,2868,2875,2898],{"type":553,"tag":594,"props":2019,"children":2020},{"class":596,"line":597},[2021],{"type":553,"tag":594,"props":2022,"children":2023},{"style":971},[2024],{"type":558,"value":974},{"type":553,"tag":594,"props":2026,"children":2027},{"class":596,"line":606},[2028],{"type":553,"tag":594,"props":2029,"children":2030},{"style":971},[2031],{"type":558,"value":982},{"type":553,"tag":594,"props":2033,"children":2034},{"class":596,"line":782},[2035],{"type":553,"tag":594,"props":2036,"children":2037},{"style":971},[2038],{"type":558,"value":990},{"type":553,"tag":594,"props":2040,"children":2041},{"class":596,"line":803},[2042],{"type":553,"tag":594,"props":2043,"children":2044},{"style":971},[2045],{"type":558,"value":998},{"type":553,"tag":594,"props":2047,"children":2048},{"class":596,"line":1001},[2049],{"type":553,"tag":594,"props":2050,"children":2051},{"style":971},[2052],{"type":558,"value":1007},{"type":553,"tag":594,"props":2054,"children":2055},{"class":596,"line":1010},[2056],{"type":553,"tag":594,"props":2057,"children":2058},{"style":971},[2059],{"type":558,"value":1016},{"type":553,"tag":594,"props":2061,"children":2062},{"class":596,"line":1019},[2063],{"type":553,"tag":594,"props":2064,"children":2065},{"style":971},[2066],{"type":558,"value":1025},{"type":553,"tag":594,"props":2068,"children":2069},{"class":596,"line":1028},[2070],{"type":553,"tag":594,"props":2071,"children":2072},{"style":971},[2073],{"type":558,"value":974},{"type":553,"tag":594,"props":2075,"children":2076},{"class":596,"line":1036},[2077,2081,2085,2089,2093,2097,2101],{"type":553,"tag":594,"props":2078,"children":2079},{"style":971},[2080],{"type":558,"value":1042},{"type":553,"tag":594,"props":2082,"children":2083},{"style":727},[2084],{"type":558,"value":1047},{"type":553,"tag":594,"props":2086,"children":2087},{"style":1050},[2088],{"type":558,"value":1053},{"type":553,"tag":594,"props":2090,"children":2091},{"style":727},[2092],{"type":558,"value":1058},{"type":553,"tag":594,"props":2094,"children":2095},{"style":1061},[2096],{"type":558,"value":1064},{"type":553,"tag":594,"props":2098,"children":2099},{"style":727},[2100],{"type":558,"value":1069},{"type":553,"tag":594,"props":2102,"children":2103},{"style":721},[2104],{"type":558,"value":1074},{"type":553,"tag":594,"props":2106,"children":2107},{"class":596,"line":1077},[2108,2112,2116,2120,2124,2128,2132],{"type":553,"tag":594,"props":2109,"children":2110},{"style":971},[2111],{"type":558,"value":1042},{"type":553,"tag":594,"props":2113,"children":2114},{"style":727},[2115],{"type":558,"value":1047},{"type":553,"tag":594,"props":2117,"children":2118},{"style":1050},[2119],{"type":558,"value":1053},{"type":553,"tag":594,"props":2121,"children":2122},{"style":727},[2123],{"type":558,"value":1058},{"type":553,"tag":594,"props":2125,"children":2126},{"style":1061},[2127],{"type":558,"value":1099},{"type":553,"tag":594,"props":2129,"children":2130},{"style":727},[2131],{"type":558,"value":1069},{"type":553,"tag":594,"props":2133,"children":2134},{"style":721},[2135],{"type":558,"value":1108},{"type":553,"tag":594,"props":2137,"children":2138},{"class":596,"line":1111},[2139,2143,2147,2151,2155,2159],{"type":553,"tag":594,"props":2140,"children":2141},{"style":971},[2142],{"type":558,"value":1042},{"type":553,"tag":594,"props":2144,"children":2145},{"style":727},[2146],{"type":558,"value":1047},{"type":553,"tag":594,"props":2148,"children":2149},{"style":1050},[2150],{"type":558,"value":1125},{"type":553,"tag":594,"props":2152,"children":2153},{"style":727},[2154],{"type":558,"value":1058},{"type":553,"tag":594,"props":2156,"children":2157},{"style":1061},[2158],{"type":558,"value":1064},{"type":553,"tag":594,"props":2160,"children":2161},{"style":727},[2162],{"type":558,"value":1138},{"type":553,"tag":594,"props":2164,"children":2165},{"class":596,"line":1141},[2166],{"type":553,"tag":594,"props":2167,"children":2168},{"style":971},[2169],{"type":558,"value":1025},{"type":553,"tag":594,"props":2171,"children":2172},{"class":596,"line":1149},[2173,2177,2181,2185,2189,2193,2197,2201,2205,2209],{"type":553,"tag":594,"props":2174,"children":2175},{"style":715},[2176],{"type":558,"value":1155},{"type":553,"tag":594,"props":2178,"children":2179},{"style":1158},[2180],{"type":558,"value":1161},{"type":553,"tag":594,"props":2182,"children":2183},{"style":727},[2184],{"type":558,"value":730},{"type":553,"tag":594,"props":2186,"children":2187},{"style":715},[2188],{"type":558,"value":1170},{"type":553,"tag":594,"props":2190,"children":2191},{"style":727},[2192],{"type":558,"value":1175},{"type":553,"tag":594,"props":2194,"children":2195},{"style":721},[2196],{"type":558,"value":1180},{"type":553,"tag":594,"props":2198,"children":2199},{"style":727},[2200],{"type":558,"value":1185},{"type":553,"tag":594,"props":2202,"children":2203},{"style":721},[2204],{"type":558,"value":1190},{"type":553,"tag":594,"props":2206,"children":2207},{"style":727},[2208],{"type":558,"value":1195},{"type":553,"tag":594,"props":2210,"children":2211},{"style":727},[2212],{"type":558,"value":1200},{"type":553,"tag":594,"props":2214,"children":2215},{"class":596,"line":1203},[2216,2220,2225,2229,2233],{"type":553,"tag":594,"props":2217,"children":2218},{"style":715},[2219],{"type":558,"value":1584},{"type":553,"tag":594,"props":2221,"children":2222},{"style":721},[2223],{"type":558,"value":2224}," n",{"type":553,"tag":594,"props":2226,"children":2227},{"style":727},[2228],{"type":558,"value":730},{"type":553,"tag":594,"props":2230,"children":2231},{"style":1714},[2232],{"type":558,"value":1717},{"type":553,"tag":594,"props":2234,"children":2235},{"style":727},[2236],{"type":558,"value":750},{"type":553,"tag":594,"props":2238,"children":2239},{"class":596,"line":1212},[2240,2244,2248,2252,2256],{"type":553,"tag":594,"props":2241,"children":2242},{"style":715},[2243],{"type":558,"value":1584},{"type":553,"tag":594,"props":2245,"children":2246},{"style":721},[2247],{"type":558,"value":735},{"type":553,"tag":594,"props":2249,"children":2250},{"style":727},[2251],{"type":558,"value":730},{"type":553,"tag":594,"props":2253,"children":2254},{"style":721},[2255],{"type":558,"value":1634},{"type":553,"tag":594,"props":2257,"children":2258},{"style":727},[2259],{"type":558,"value":750},{"type":553,"tag":594,"props":2261,"children":2262},{"class":596,"line":1253},[2263,2267,2271,2275,2279],{"type":553,"tag":594,"props":2264,"children":2265},{"style":1050},[2266],{"type":558,"value":1738},{"type":553,"tag":594,"props":2268,"children":2269},{"style":727},[2270],{"type":558,"value":1175},{"type":553,"tag":594,"props":2272,"children":2273},{"style":721},[2274],{"type":558,"value":758},{"type":553,"tag":594,"props":2276,"children":2277},{"style":727},[2278],{"type":558,"value":1195},{"type":553,"tag":594,"props":2280,"children":2281},{"style":727},[2282],{"type":558,"value":1200},{"type":553,"tag":594,"props":2284,"children":2285},{"class":596,"line":1279},[2286,2291,2295],{"type":553,"tag":594,"props":2287,"children":2288},{"style":721},[2289],{"type":558,"value":2290},"    n",{"type":553,"tag":594,"props":2292,"children":2293},{"style":715},[2294],{"type":558,"value":1769},{"type":553,"tag":594,"props":2296,"children":2297},{"style":727},[2298],{"type":558,"value":750},{"type":553,"tag":594,"props":2300,"children":2301},{"class":596,"line":1311},[2302,2307,2311,2315,2319,2323],{"type":553,"tag":594,"props":2303,"children":2304},{"style":721},[2305],{"type":558,"value":2306},"    current",{"type":553,"tag":594,"props":2308,"children":2309},{"style":727},[2310],{"type":558,"value":730},{"type":553,"tag":594,"props":2312,"children":2313},{"style":721},[2314],{"type":558,"value":735},{"type":553,"tag":594,"props":2316,"children":2317},{"style":727},[2318],{"type":558,"value":740},{"type":553,"tag":594,"props":2320,"children":2321},{"style":721},[2322],{"type":558,"value":745},{"type":553,"tag":594,"props":2324,"children":2325},{"style":727},[2326],{"type":558,"value":750},{"type":553,"tag":594,"props":2328,"children":2329},{"class":596,"line":1337},[2330],{"type":553,"tag":594,"props":2331,"children":2332},{"style":727},[2333],{"type":558,"value":1565},{"type":553,"tag":594,"props":2335,"children":2336},{"class":596,"line":1371},[2337],{"type":553,"tag":594,"props":2338,"children":2339},{"emptyLinePlaceholder":1572},[2340],{"type":558,"value":1575},{"type":553,"tag":594,"props":2342,"children":2343},{"class":596,"line":1405},[2344,2349,2353,2357,2361,2365,2369,2374,2378,2382],{"type":553,"tag":594,"props":2345,"children":2346},{"style":715},[2347],{"type":558,"value":2348},"  const",{"type":553,"tag":594,"props":2350,"children":2351},{"style":721},[2352],{"type":558,"value":1589},{"type":553,"tag":594,"props":2354,"children":2355},{"style":727},[2356],{"type":558,"value":730},{"type":553,"tag":594,"props":2358,"children":2359},{"style":715},[2360],{"type":558,"value":1598},{"type":553,"tag":594,"props":2362,"children":2363},{"style":1158},[2364],{"type":558,"value":1603},{"type":553,"tag":594,"props":2366,"children":2367},{"style":727},[2368],{"type":558,"value":1228},{"type":553,"tag":594,"props":2370,"children":2371},{"style":1714},[2372],{"type":558,"value":2373},"0",{"type":553,"tag":594,"props":2375,"children":2376},{"style":727},[2377],{"type":558,"value":1185},{"type":553,"tag":594,"props":2379,"children":2380},{"style":721},[2381],{"type":558,"value":1634},{"type":553,"tag":594,"props":2383,"children":2384},{"style":727},[2385],{"type":558,"value":1863},{"type":553,"tag":594,"props":2387,"children":2388},{"class":596,"line":1434},[2389],{"type":553,"tag":594,"props":2390,"children":2391},{"style":971},[2392],{"type":558,"value":2393},"  // p0 代表反转中间段的上一个节点\n",{"type":553,"tag":594,"props":2395,"children":2396},{"class":596,"line":1455},[2397],{"type":553,"tag":594,"props":2398,"children":2399},{"style":971},[2400],{"type":558,"value":2401},"  // left = 1 时，构造哨兵节点\n",{"type":553,"tag":594,"props":2403,"children":2404},{"class":596,"line":1475},[2405],{"type":553,"tag":594,"props":2406,"children":2407},{"style":971},[2408],{"type":558,"value":2409},"  // 循环后，到达反转后的上一个节点\n",{"type":553,"tag":594,"props":2411,"children":2412},{"class":596,"line":1484},[2413,2417,2422,2426,2430],{"type":553,"tag":594,"props":2414,"children":2415},{"style":715},[2416],{"type":558,"value":1584},{"type":553,"tag":594,"props":2418,"children":2419},{"style":721},[2420],{"type":558,"value":2421}," p0",{"type":553,"tag":594,"props":2423,"children":2424},{"style":727},[2425],{"type":558,"value":730},{"type":553,"tag":594,"props":2427,"children":2428},{"style":721},[2429],{"type":558,"value":1589},{"type":553,"tag":594,"props":2431,"children":2432},{"style":727},[2433],{"type":558,"value":750},{"type":553,"tag":594,"props":2435,"children":2436},{"class":596,"line":1513},[2437,2441,2445,2449,2454],{"type":553,"tag":594,"props":2438,"children":2439},{"style":715},[2440],{"type":558,"value":1584},{"type":553,"tag":594,"props":2442,"children":2443},{"style":721},[2444],{"type":558,"value":775},{"type":553,"tag":594,"props":2446,"children":2447},{"style":727},[2448],{"type":558,"value":730},{"type":553,"tag":594,"props":2450,"children":2451},{"style":715},[2452],{"type":558,"value":2453}," null",{"type":553,"tag":594,"props":2455,"children":2456},{"style":727},[2457],{"type":558,"value":750},{"type":553,"tag":594,"props":2459,"children":2460},{"class":596,"line":1542},[2461,2466,2470,2474,2478,2482],{"type":553,"tag":594,"props":2462,"children":2463},{"style":721},[2464],{"type":558,"value":2465},"  current",{"type":553,"tag":594,"props":2467,"children":2468},{"style":727},[2469],{"type":558,"value":730},{"type":553,"tag":594,"props":2471,"children":2472},{"style":721},[2473],{"type":558,"value":2421},{"type":553,"tag":594,"props":2475,"children":2476},{"style":727},[2477],{"type":558,"value":740},{"type":553,"tag":594,"props":2479,"children":2480},{"style":721},[2481],{"type":558,"value":745},{"type":553,"tag":594,"props":2483,"children":2484},{"style":727},[2485],{"type":558,"value":750},{"type":553,"tag":594,"props":2487,"children":2488},{"class":596,"line":1559},[2489],{"type":553,"tag":594,"props":2490,"children":2491},{"emptyLinePlaceholder":1572},[2492],{"type":558,"value":1575},{"type":553,"tag":594,"props":2494,"children":2495},{"class":596,"line":1568},[2496,2500,2504,2509,2514,2518,2522],{"type":553,"tag":594,"props":2497,"children":2498},{"style":1050},[2499],{"type":558,"value":1738},{"type":553,"tag":594,"props":2501,"children":2502},{"style":727},[2503],{"type":558,"value":1175},{"type":553,"tag":594,"props":2505,"children":2506},{"style":721},[2507],{"type":558,"value":2508},"n",{"type":553,"tag":594,"props":2510,"children":2511},{"style":727},[2512],{"type":558,"value":2513}," >=",{"type":553,"tag":594,"props":2515,"children":2516},{"style":721},[2517],{"type":558,"value":1190},{"type":553,"tag":594,"props":2519,"children":2520},{"style":727},[2521],{"type":558,"value":1195},{"type":553,"tag":594,"props":2523,"children":2524},{"style":727},[2525],{"type":558,"value":1200},{"type":553,"tag":594,"props":2527,"children":2528},{"class":596,"line":1578},[2529,2533,2538,2542],{"type":553,"tag":594,"props":2530,"children":2531},{"style":721},[2532],{"type":558,"value":2290},{"type":553,"tag":594,"props":2534,"children":2535},{"style":715},[2536],{"type":558,"value":2537}," -=",{"type":553,"tag":594,"props":2539,"children":2540},{"style":721},[2541],{"type":558,"value":1190},{"type":553,"tag":594,"props":2543,"children":2544},{"style":727},[2545],{"type":558,"value":750},{"type":553,"tag":594,"props":2547,"children":2548},{"class":596,"line":1611},[2549,2554,2558,2562,2567,2571,2575,2580,2584,2589,2593,2597,2601,2605,2609],{"type":553,"tag":594,"props":2550,"children":2551},{"style":1050},[2552],{"type":558,"value":2553},"    for",{"type":553,"tag":594,"props":2555,"children":2556},{"style":727},[2557],{"type":558,"value":1175},{"type":553,"tag":594,"props":2559,"children":2560},{"style":715},[2561],{"type":558,"value":718},{"type":553,"tag":594,"props":2563,"children":2564},{"style":721},[2565],{"type":558,"value":2566}," i",{"type":553,"tag":594,"props":2568,"children":2569},{"style":727},[2570],{"type":558,"value":730},{"type":553,"tag":594,"props":2572,"children":2573},{"style":1714},[2574],{"type":558,"value":1717},{"type":553,"tag":594,"props":2576,"children":2577},{"style":727},[2578],{"type":558,"value":2579},";",{"type":553,"tag":594,"props":2581,"children":2582},{"style":721},[2583],{"type":558,"value":2566},{"type":553,"tag":594,"props":2585,"children":2586},{"style":727},[2587],{"type":558,"value":2588}," \u003C",{"type":553,"tag":594,"props":2590,"children":2591},{"style":721},[2592],{"type":558,"value":1190},{"type":553,"tag":594,"props":2594,"children":2595},{"style":727},[2596],{"type":558,"value":2579},{"type":553,"tag":594,"props":2598,"children":2599},{"style":721},[2600],{"type":558,"value":2566},{"type":553,"tag":594,"props":2602,"children":2603},{"style":715},[2604],{"type":558,"value":1769},{"type":553,"tag":594,"props":2606,"children":2607},{"style":727},[2608],{"type":558,"value":1195},{"type":553,"tag":594,"props":2610,"children":2611},{"style":727},[2612],{"type":558,"value":1200},{"type":553,"tag":594,"props":2614,"children":2615},{"class":596,"line":1641},[2616,2621,2625,2629,2633,2637,2641],{"type":553,"tag":594,"props":2617,"children":2618},{"style":715},[2619],{"type":558,"value":2620},"      const",{"type":553,"tag":594,"props":2622,"children":2623},{"style":721},[2624],{"type":558,"value":1382},{"type":553,"tag":594,"props":2626,"children":2627},{"style":727},[2628],{"type":558,"value":730},{"type":553,"tag":594,"props":2630,"children":2631},{"style":721},[2632],{"type":558,"value":735},{"type":553,"tag":594,"props":2634,"children":2635},{"style":727},[2636],{"type":558,"value":740},{"type":553,"tag":594,"props":2638,"children":2639},{"style":721},[2640],{"type":558,"value":745},{"type":553,"tag":594,"props":2642,"children":2643},{"style":727},[2644],{"type":558,"value":750},{"type":553,"tag":594,"props":2646,"children":2647},{"class":596,"line":1665},[2648,2652,2656,2660,2664,2668],{"type":553,"tag":594,"props":2649,"children":2650},{"style":721},[2651],{"type":558,"value":1411},{"type":553,"tag":594,"props":2653,"children":2654},{"style":727},[2655],{"type":558,"value":740},{"type":553,"tag":594,"props":2657,"children":2658},{"style":721},[2659],{"type":558,"value":745},{"type":553,"tag":594,"props":2661,"children":2662},{"style":727},[2663],{"type":558,"value":730},{"type":553,"tag":594,"props":2665,"children":2666},{"style":721},[2667],{"type":558,"value":775},{"type":553,"tag":594,"props":2669,"children":2670},{"style":727},[2671],{"type":558,"value":750},{"type":553,"tag":594,"props":2673,"children":2674},{"class":596,"line":1697},[2675,2679,2683,2687],{"type":553,"tag":594,"props":2676,"children":2677},{"style":721},[2678],{"type":558,"value":1440},{"type":553,"tag":594,"props":2680,"children":2681},{"style":727},[2682],{"type":558,"value":730},{"type":553,"tag":594,"props":2684,"children":2685},{"style":721},[2686],{"type":558,"value":735},{"type":553,"tag":594,"props":2688,"children":2689},{"style":727},[2690],{"type":558,"value":750},{"type":553,"tag":594,"props":2692,"children":2693},{"class":596,"line":1724},[2694,2698,2702,2706],{"type":553,"tag":594,"props":2695,"children":2696},{"style":721},[2697],{"type":558,"value":1411},{"type":553,"tag":594,"props":2699,"children":2700},{"style":727},[2701],{"type":558,"value":730},{"type":553,"tag":594,"props":2703,"children":2704},{"style":721},[2705],{"type":558,"value":1382},{"type":553,"tag":594,"props":2707,"children":2708},{"style":727},[2709],{"type":558,"value":750},{"type":553,"tag":594,"props":2711,"children":2712},{"class":596,"line":1732},[2713],{"type":553,"tag":594,"props":2714,"children":2715},{"style":727},[2716],{"type":558,"value":1481},{"type":553,"tag":594,"props":2718,"children":2719},{"class":596,"line":1758},[2720],{"type":553,"tag":594,"props":2721,"children":2722},{"emptyLinePlaceholder":1572},[2723],{"type":558,"value":1575},{"type":553,"tag":594,"props":2725,"children":2726},{"class":596,"line":1776},[2727],{"type":553,"tag":594,"props":2728,"children":2729},{"style":971},[2730],{"type":558,"value":2731},"    // 保存原始 p0 的 next\n",{"type":553,"tag":594,"props":2733,"children":2734},{"class":596,"line":1820},[2735,2739,2743,2747,2751,2755,2759],{"type":553,"tag":594,"props":2736,"children":2737},{"style":715},[2738],{"type":558,"value":1317},{"type":553,"tag":594,"props":2740,"children":2741},{"style":721},[2742],{"type":558,"value":1382},{"type":553,"tag":594,"props":2744,"children":2745},{"style":727},[2746],{"type":558,"value":730},{"type":553,"tag":594,"props":2748,"children":2749},{"style":721},[2750],{"type":558,"value":2421},{"type":553,"tag":594,"props":2752,"children":2753},{"style":727},[2754],{"type":558,"value":740},{"type":553,"tag":594,"props":2756,"children":2757},{"style":721},[2758],{"type":558,"value":745},{"type":553,"tag":594,"props":2760,"children":2761},{"style":727},[2762],{"type":558,"value":750},{"type":553,"tag":594,"props":2764,"children":2765},{"class":596,"line":1866},[2766],{"type":553,"tag":594,"props":2767,"children":2768},{"emptyLinePlaceholder":1572},[2769],{"type":558,"value":1575},{"type":553,"tag":594,"props":2771,"children":2772},{"class":596,"line":1895},[2773],{"type":553,"tag":594,"props":2774,"children":2775},{"style":971},[2776],{"type":558,"value":2777},"    // p0 指向 prev\n",{"type":553,"tag":594,"props":2779,"children":2780},{"class":596,"line":1913},[2781],{"type":553,"tag":594,"props":2782,"children":2783},{"style":971},[2784],{"type":558,"value":2785},"    // p0 的 next 指向 current\n",{"type":553,"tag":594,"props":2787,"children":2788},{"class":596,"line":1922},[2789,2794,2798,2802,2806,2810,2814,2818],{"type":553,"tag":594,"props":2790,"children":2791},{"style":721},[2792],{"type":558,"value":2793},"    p0",{"type":553,"tag":594,"props":2795,"children":2796},{"style":727},[2797],{"type":558,"value":740},{"type":553,"tag":594,"props":2799,"children":2800},{"style":721},[2801],{"type":558,"value":745},{"type":553,"tag":594,"props":2803,"children":2804},{"style":727},[2805],{"type":558,"value":740},{"type":553,"tag":594,"props":2807,"children":2808},{"style":721},[2809],{"type":558,"value":745},{"type":553,"tag":594,"props":2811,"children":2812},{"style":727},[2813],{"type":558,"value":730},{"type":553,"tag":594,"props":2815,"children":2816},{"style":721},[2817],{"type":558,"value":735},{"type":553,"tag":594,"props":2819,"children":2820},{"style":727},[2821],{"type":558,"value":750},{"type":553,"tag":594,"props":2823,"children":2824},{"class":596,"line":1950},[2825,2829,2833,2837,2841,2845],{"type":553,"tag":594,"props":2826,"children":2827},{"style":721},[2828],{"type":558,"value":2793},{"type":553,"tag":594,"props":2830,"children":2831},{"style":727},[2832],{"type":558,"value":740},{"type":553,"tag":594,"props":2834,"children":2835},{"style":721},[2836],{"type":558,"value":745},{"type":553,"tag":594,"props":2838,"children":2839},{"style":727},[2840],{"type":558,"value":730},{"type":553,"tag":594,"props":2842,"children":2843},{"style":721},[2844],{"type":558,"value":775},{"type":553,"tag":594,"props":2846,"children":2847},{"style":727},[2848],{"type":558,"value":750},{"type":553,"tag":594,"props":2850,"children":2851},{"class":596,"line":1958},[2852,2856,2860,2864],{"type":553,"tag":594,"props":2853,"children":2854},{"style":721},[2855],{"type":558,"value":2793},{"type":553,"tag":594,"props":2857,"children":2858},{"style":727},[2859],{"type":558,"value":730},{"type":553,"tag":594,"props":2861,"children":2862},{"style":721},[2863],{"type":558,"value":1382},{"type":553,"tag":594,"props":2865,"children":2866},{"style":727},[2867],{"type":558,"value":750},{"type":553,"tag":594,"props":2869,"children":2870},{"class":596,"line":1966},[2871],{"type":553,"tag":594,"props":2872,"children":2873},{"style":727},[2874],{"type":558,"value":1565},{"type":553,"tag":594,"props":2876,"children":2877},{"class":596,"line":1974},[2878,2882,2886,2890,2894],{"type":553,"tag":594,"props":2879,"children":2880},{"style":1050},[2881],{"type":558,"value":1980},{"type":553,"tag":594,"props":2883,"children":2884},{"style":721},[2885],{"type":558,"value":1589},{"type":553,"tag":594,"props":2887,"children":2888},{"style":727},[2889],{"type":558,"value":740},{"type":553,"tag":594,"props":2891,"children":2892},{"style":721},[2893],{"type":558,"value":745},{"type":553,"tag":594,"props":2895,"children":2896},{"style":727},[2897],{"type":558,"value":750},{"type":553,"tag":594,"props":2899,"children":2900},{"class":596,"line":1999},[2901],{"type":553,"tag":594,"props":2902,"children":2903},{"style":727},[2904],{"type":558,"value":2005},{"type":553,"tag":2906,"props":2907,"children":2908},"callout",{},[2909,2914],{"type":553,"tag":554,"props":2910,"children":2911},{},[2912],{"type":558,"value":2913},"扩展 1",{"type":553,"tag":655,"props":2915,"children":2916},{},[2917,2945,2968],{"type":553,"tag":659,"props":2918,"children":2919},{},[2920,2922],{"type":558,"value":2921},"要求从后往前以 k 个为一组进行翻转，例：1->2->3->4->5->6->7->8, k=3，从后往前以 k=3 为一组。\n",{"type":553,"tag":655,"props":2923,"children":2924},{},[2925,2930,2935,2940],{"type":553,"tag":659,"props":2926,"children":2927},{},[2928],{"type":558,"value":2929},"6->7->8 为一组翻转为 8->7->6",{"type":553,"tag":659,"props":2931,"children":2932},{},[2933],{"type":558,"value":2934},"3->4->5 为一组翻转为 5->4->3",{"type":553,"tag":659,"props":2936,"children":2937},{},[2938],{"type":558,"value":2939},"1->2 只有 2 个节点少于 k=3 个，不翻转",{"type":553,"tag":659,"props":2941,"children":2942},{},[2943],{"type":558,"value":2944},"最后返回 1->2->5->4->3->8->7->6",{"type":553,"tag":659,"props":2946,"children":2947},{},[2948,2950],{"type":558,"value":2949},"这里的思路跟从前往后以 k 个为一组进行翻转类似，可以进行预处理：\n",{"type":553,"tag":655,"props":2951,"children":2952},{},[2953,2958,2963],{"type":553,"tag":659,"props":2954,"children":2955},{},[2956],{"type":558,"value":2957},"翻转链表",{"type":553,"tag":659,"props":2959,"children":2960},{},[2961],{"type":558,"value":2962},"对翻转后的链表进行从前往后以 k 为一组翻转",{"type":553,"tag":659,"props":2964,"children":2965},{},[2966],{"type":558,"value":2967},"翻转上一步中得到的链表",{"type":553,"tag":659,"props":2969,"children":2970},{},[2971,2973],{"type":558,"value":2972},"例子：1->2->3->4->5->6->7->8, k = 3\n",{"type":553,"tag":655,"props":2974,"children":2975},{},[2976,2981,2986],{"type":553,"tag":659,"props":2977,"children":2978},{},[2979],{"type":558,"value":2980},"翻转链表得到：8->7->6->5->4->3->2->1",{"type":553,"tag":659,"props":2982,"children":2983},{},[2984],{"type":558,"value":2985},"以 k 为一组翻转：6->7->8->3->4->5->2->1",{"type":553,"tag":659,"props":2987,"children":2988},{},[2989],{"type":558,"value":2990},"翻转步骤 2 链表：1->2->5->4->3->8->7->6",{"type":553,"tag":2992,"props":2993,"children":2994},"style",{},[2995],{"type":558,"value":2996},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":546,"searchDepth":1001,"depth":1001,"links":2998},[2999,3000],{"id":682,"depth":606,"text":682},{"id":687,"depth":606,"text":687,"children":3001},[3002,3003],{"id":693,"depth":782,"text":693},{"id":2008,"depth":782,"text":2008},"markdown","content:1.algorithm:3.leetcode:3.major:25.reverse-nodes-in-k-group.md","content","1.algorithm/3.leetcode/3.major/25.reverse-nodes-in-k-group.md","md",[3010,3012],{"_path":99,"title":98,"description":3011},"给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。",{"_path":105,"title":104,"description":3013},"整数数组的一个 排列 就是将其所有成员以序列或线性顺序排列。",1714099676680]