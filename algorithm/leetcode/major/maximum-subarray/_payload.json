[{"data":1,"prerenderedAt":1169},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/maximum-subarray":457,"/algorithm/leetcode/major/maximum-subarray-surround":1164},[4,260,289,434,442],{"title":5,"_path":6,"children":7,"icon":259},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":261,"_path":262,"children":263,"icon":288},"前端八股文","/frontend-endorsement",[264,275],{"title":265,"_path":266,"children":267},"构建工具","/frontend-endorsement/build-tools",[268],{"title":269,"_path":270,"children":271},"Webpack","/frontend-endorsement/build-tools/webpack",[272],{"title":273,"_path":274},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":276,"_path":277,"children":278},"Html","/frontend-endorsement/html",[279,282,285],{"title":280,"_path":281},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":283,"_path":284},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":286,"_path":287},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":290,"_path":291,"children":292,"icon":433},"前端代码考核","/frontend-code-assessment",[293,342,426],{"title":294,"_path":295,"children":296},"源码实现","/frontend-code-assessment/source",[297,322,335],{"title":298,"_path":299,"children":300},"原生 api","/frontend-code-assessment/source/native-api",[301,304,307,310,313,316,319],{"title":302,"_path":303},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":305,"_path":306},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":308,"_path":309},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":311,"_path":312},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":314,"_path":315},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":317,"_path":318},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":320,"_path":321},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":323,"_path":324,"children":325},"数组 Array","/frontend-code-assessment/source/array",[326,329,332],{"title":327,"_path":328},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":330,"_path":331},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":333,"_path":334},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":336,"_path":337,"children":338},"字符串 String","/frontend-code-assessment/source/string",[339],{"title":340,"_path":341},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":343,"_path":344,"children":345},"业务场景","/frontend-code-assessment/scene",[346,368,375,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423],{"title":347,"_path":348,"children":349},"Promise","/frontend-code-assessment/scene/promise",[350,353,356,359,362,365],{"title":351,"_path":352},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":354,"_path":355},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":357,"_path":358},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":360,"_path":361},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":363,"_path":364},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":366,"_path":367},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":369,"_path":370,"children":371},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[372],{"title":373,"_path":374},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":376,"_path":377},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":379,"_path":380},"倒计时","/frontend-code-assessment/scene/countdown",{"title":382,"_path":383},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":385,"_path":386},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":388,"_path":389},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":391,"_path":392},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":394,"_path":395},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":397,"_path":398},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":400,"_path":401},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":403,"_path":404},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":406,"_path":407},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":409,"_path":410},"随机数","/frontend-code-assessment/scene/random-number",{"title":412,"_path":413},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":415,"_path":416},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":418,"_path":419},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":421,"_path":422},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":424,"_path":425},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":427,"_path":428,"children":429},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[430],{"title":431,"_path":432},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":435,"_path":436,"children":437,"icon":441},"项目","/pro",[438],{"title":439,"_path":440},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":443,"_path":444,"children":445,"icon":456},"后端语言","/backend-languages",[446],{"title":447,"_path":448,"children":449},"Python","/backend-languages/python",[450,453],{"title":451,"_path":452},"基础","/backend-languages/python/base",{"title":454,"_path":455},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":117,"_dir":458,"_draft":459,"_partial":459,"_locale":460,"title":116,"description":461,"url":462,"body":463,"_type":1159,"_id":1160,"_source":1161,"_file":1162,"_extension":1163},"major",false,"","给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。","https://leetcode.cn/problems/maximum-subarray",{"type":464,"children":465,"toc":1153},"root",[466,473,478,483,522,527,550,555,578,583,598,603,609,614,620,1147],{"type":467,"tag":468,"props":469,"children":470},"element","p",{},[471],{"type":472,"value":461},"text",{"type":467,"tag":468,"props":474,"children":475},{},[476],{"type":472,"value":477},"子数组\n是数组中的一个连续部分。",{"type":467,"tag":468,"props":479,"children":480},{},[481],{"type":472,"value":482},"示例 1：",{"type":467,"tag":484,"props":485,"children":488},"pre",{"className":486,"code":487,"language":472,"meta":460,"style":460},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n输出：6\n解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",[489],{"type":467,"tag":490,"props":491,"children":492},"code",{"__ignoreMap":460},[493,504,513],{"type":467,"tag":494,"props":495,"children":498},"span",{"class":496,"line":497},"line",1,[499],{"type":467,"tag":494,"props":500,"children":501},{},[502],{"type":472,"value":503},"输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n",{"type":467,"tag":494,"props":505,"children":507},{"class":496,"line":506},2,[508],{"type":467,"tag":494,"props":509,"children":510},{},[511],{"type":472,"value":512},"输出：6\n",{"type":467,"tag":494,"props":514,"children":516},{"class":496,"line":515},3,[517],{"type":467,"tag":494,"props":518,"children":519},{},[520],{"type":472,"value":521},"解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",{"type":467,"tag":468,"props":523,"children":524},{},[525],{"type":472,"value":526},"示例 2：",{"type":467,"tag":484,"props":528,"children":530},{"className":486,"code":529,"language":472,"meta":460,"style":460},"输入：nums = [1]\n输出：1\n",[531],{"type":467,"tag":490,"props":532,"children":533},{"__ignoreMap":460},[534,542],{"type":467,"tag":494,"props":535,"children":536},{"class":496,"line":497},[537],{"type":467,"tag":494,"props":538,"children":539},{},[540],{"type":472,"value":541},"输入：nums = [1]\n",{"type":467,"tag":494,"props":543,"children":544},{"class":496,"line":506},[545],{"type":467,"tag":494,"props":546,"children":547},{},[548],{"type":472,"value":549},"输出：1\n",{"type":467,"tag":468,"props":551,"children":552},{},[553],{"type":472,"value":554},"示例 3：",{"type":467,"tag":484,"props":556,"children":558},{"className":486,"code":557,"language":472,"meta":460,"style":460},"输入：nums = [5,4,-1,7,8]\n输出：23\n",[559],{"type":467,"tag":490,"props":560,"children":561},{"__ignoreMap":460},[562,570],{"type":467,"tag":494,"props":563,"children":564},{"class":496,"line":497},[565],{"type":467,"tag":494,"props":566,"children":567},{},[568],{"type":472,"value":569},"输入：nums = [5,4,-1,7,8]\n",{"type":467,"tag":494,"props":571,"children":572},{"class":496,"line":506},[573],{"type":467,"tag":494,"props":574,"children":575},{},[576],{"type":472,"value":577},"输出：23\n",{"type":467,"tag":468,"props":579,"children":580},{},[581],{"type":472,"value":582},"提示：",{"type":467,"tag":584,"props":585,"children":586},"ul",{},[587,593],{"type":467,"tag":588,"props":589,"children":590},"li",{},[591],{"type":472,"value":592},"1 \u003C= nums.length \u003C= 105",{"type":467,"tag":588,"props":594,"children":595},{},[596],{"type":472,"value":597},"-104 \u003C= nums[i] \u003C= 104",{"type":467,"tag":468,"props":599,"children":600},{},[601],{"type":472,"value":602},"进阶：如果你已经实现复杂度为 O(n) 的解法，尝试使用更为精妙的 分治法 求解。",{"type":467,"tag":604,"props":605,"children":607},"h2",{"id":606},"解题思路",[608],{"type":472,"value":606},{"type":467,"tag":604,"props":610,"children":612},{"id":611},"实现",[613],{"type":472,"value":611},{"type":467,"tag":615,"props":616,"children":618},"h3",{"id":617},"动态规划",[619],{"type":472,"value":617},{"type":467,"tag":484,"props":621,"children":625},{"className":622,"code":623,"language":624,"meta":460,"style":460},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSubArray = function (nums) {\n  let dp = [];\n  dp[0] = nums[0];\n  let res = dp[0];\n  for (let i = 1; i \u003C nums.length; i++) {\n    dp[i] = Math.max(dp[i - 1] + nums[i], nums[i]);\n    res = Math.max(res, dp[i]);\n  }\n  return res;\n};\n","js",[626],{"type":467,"tag":490,"props":627,"children":628},{"__ignoreMap":460},[629,638,664,681,690,734,764,816,853,932,1050,1108,1117,1134],{"type":467,"tag":494,"props":630,"children":631},{"class":496,"line":497},[632],{"type":467,"tag":494,"props":633,"children":635},{"style":634},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[636],{"type":472,"value":637},"/**\n",{"type":467,"tag":494,"props":639,"children":640},{"class":496,"line":506},[641,646,652,658],{"type":467,"tag":494,"props":642,"children":643},{"style":634},[644],{"type":472,"value":645}," * ",{"type":467,"tag":494,"props":647,"children":649},{"style":648},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[650],{"type":472,"value":651},"@param",{"type":467,"tag":494,"props":653,"children":655},{"style":654},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[656],{"type":472,"value":657}," {number[]}",{"type":467,"tag":494,"props":659,"children":661},{"style":660},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[662],{"type":472,"value":663}," nums\n",{"type":467,"tag":494,"props":665,"children":666},{"class":496,"line":515},[667,671,676],{"type":467,"tag":494,"props":668,"children":669},{"style":634},[670],{"type":472,"value":645},{"type":467,"tag":494,"props":672,"children":673},{"style":648},[674],{"type":472,"value":675},"@return",{"type":467,"tag":494,"props":677,"children":678},{"style":654},[679],{"type":472,"value":680}," {number}\n",{"type":467,"tag":494,"props":682,"children":684},{"class":496,"line":683},4,[685],{"type":467,"tag":494,"props":686,"children":687},{"style":634},[688],{"type":472,"value":689}," */\n",{"type":467,"tag":494,"props":691,"children":693},{"class":496,"line":692},5,[694,700,706,712,717,723,729],{"type":467,"tag":494,"props":695,"children":697},{"style":696},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[698],{"type":472,"value":699},"var",{"type":467,"tag":494,"props":701,"children":703},{"style":702},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[704],{"type":472,"value":705}," maxSubArray",{"type":467,"tag":494,"props":707,"children":709},{"style":708},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[710],{"type":472,"value":711}," =",{"type":467,"tag":494,"props":713,"children":714},{"style":696},[715],{"type":472,"value":716}," function",{"type":467,"tag":494,"props":718,"children":720},{"style":719},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[721],{"type":472,"value":722}," (",{"type":467,"tag":494,"props":724,"children":726},{"style":725},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[727],{"type":472,"value":728},"nums",{"type":467,"tag":494,"props":730,"children":731},{"style":719},[732],{"type":472,"value":733},") {\n",{"type":467,"tag":494,"props":735,"children":737},{"class":496,"line":736},6,[738,743,749,753,758],{"type":467,"tag":494,"props":739,"children":740},{"style":696},[741],{"type":472,"value":742},"  let",{"type":467,"tag":494,"props":744,"children":746},{"style":745},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[747],{"type":472,"value":748}," dp",{"type":467,"tag":494,"props":750,"children":751},{"style":708},[752],{"type":472,"value":711},{"type":467,"tag":494,"props":754,"children":755},{"style":719},[756],{"type":472,"value":757}," []",{"type":467,"tag":494,"props":759,"children":761},{"style":760},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[762],{"type":472,"value":763},";\n",{"type":467,"tag":494,"props":765,"children":767},{"class":496,"line":766},7,[768,773,778,784,789,794,799,803,807,812],{"type":467,"tag":494,"props":769,"children":770},{"style":745},[771],{"type":472,"value":772},"  dp",{"type":467,"tag":494,"props":774,"children":775},{"style":719},[776],{"type":472,"value":777},"[",{"type":467,"tag":494,"props":779,"children":781},{"style":780},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[782],{"type":472,"value":783},"0",{"type":467,"tag":494,"props":785,"children":786},{"style":719},[787],{"type":472,"value":788},"] ",{"type":467,"tag":494,"props":790,"children":791},{"style":708},[792],{"type":472,"value":793},"=",{"type":467,"tag":494,"props":795,"children":796},{"style":745},[797],{"type":472,"value":798}," nums",{"type":467,"tag":494,"props":800,"children":801},{"style":719},[802],{"type":472,"value":777},{"type":467,"tag":494,"props":804,"children":805},{"style":780},[806],{"type":472,"value":783},{"type":467,"tag":494,"props":808,"children":809},{"style":719},[810],{"type":472,"value":811},"]",{"type":467,"tag":494,"props":813,"children":814},{"style":760},[815],{"type":472,"value":763},{"type":467,"tag":494,"props":817,"children":819},{"class":496,"line":818},8,[820,824,829,833,837,841,845,849],{"type":467,"tag":494,"props":821,"children":822},{"style":696},[823],{"type":472,"value":742},{"type":467,"tag":494,"props":825,"children":826},{"style":745},[827],{"type":472,"value":828}," res",{"type":467,"tag":494,"props":830,"children":831},{"style":708},[832],{"type":472,"value":711},{"type":467,"tag":494,"props":834,"children":835},{"style":745},[836],{"type":472,"value":748},{"type":467,"tag":494,"props":838,"children":839},{"style":719},[840],{"type":472,"value":777},{"type":467,"tag":494,"props":842,"children":843},{"style":780},[844],{"type":472,"value":783},{"type":467,"tag":494,"props":846,"children":847},{"style":719},[848],{"type":472,"value":811},{"type":467,"tag":494,"props":850,"children":851},{"style":760},[852],{"type":472,"value":763},{"type":467,"tag":494,"props":854,"children":856},{"class":496,"line":855},9,[857,863,867,872,877,881,886,891,895,900,904,910,915,919,923,928],{"type":467,"tag":494,"props":858,"children":860},{"style":859},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[861],{"type":472,"value":862},"  for",{"type":467,"tag":494,"props":864,"children":865},{"style":719},[866],{"type":472,"value":722},{"type":467,"tag":494,"props":868,"children":869},{"style":696},[870],{"type":472,"value":871},"let",{"type":467,"tag":494,"props":873,"children":874},{"style":745},[875],{"type":472,"value":876}," i",{"type":467,"tag":494,"props":878,"children":879},{"style":708},[880],{"type":472,"value":711},{"type":467,"tag":494,"props":882,"children":883},{"style":780},[884],{"type":472,"value":885}," 1",{"type":467,"tag":494,"props":887,"children":888},{"style":760},[889],{"type":472,"value":890},";",{"type":467,"tag":494,"props":892,"children":893},{"style":745},[894],{"type":472,"value":876},{"type":467,"tag":494,"props":896,"children":897},{"style":708},[898],{"type":472,"value":899}," \u003C",{"type":467,"tag":494,"props":901,"children":902},{"style":745},[903],{"type":472,"value":798},{"type":467,"tag":494,"props":905,"children":907},{"style":906},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[908],{"type":472,"value":909},".",{"type":467,"tag":494,"props":911,"children":912},{"style":719},[913],{"type":472,"value":914},"length",{"type":467,"tag":494,"props":916,"children":917},{"style":760},[918],{"type":472,"value":890},{"type":467,"tag":494,"props":920,"children":921},{"style":745},[922],{"type":472,"value":876},{"type":467,"tag":494,"props":924,"children":925},{"style":708},[926],{"type":472,"value":927},"++",{"type":467,"tag":494,"props":929,"children":930},{"style":719},[931],{"type":472,"value":733},{"type":467,"tag":494,"props":933,"children":935},{"class":496,"line":934},10,[936,941,945,950,954,958,963,967,972,977,982,986,990,995,999,1003,1008,1012,1016,1020,1024,1029,1033,1037,1041,1046],{"type":467,"tag":494,"props":937,"children":938},{"style":745},[939],{"type":472,"value":940},"    dp",{"type":467,"tag":494,"props":942,"children":943},{"style":719},[944],{"type":472,"value":777},{"type":467,"tag":494,"props":946,"children":947},{"style":745},[948],{"type":472,"value":949},"i",{"type":467,"tag":494,"props":951,"children":952},{"style":719},[953],{"type":472,"value":788},{"type":467,"tag":494,"props":955,"children":956},{"style":708},[957],{"type":472,"value":793},{"type":467,"tag":494,"props":959,"children":960},{"style":745},[961],{"type":472,"value":962}," Math",{"type":467,"tag":494,"props":964,"children":965},{"style":906},[966],{"type":472,"value":909},{"type":467,"tag":494,"props":968,"children":969},{"style":702},[970],{"type":472,"value":971},"max",{"type":467,"tag":494,"props":973,"children":974},{"style":719},[975],{"type":472,"value":976},"(",{"type":467,"tag":494,"props":978,"children":979},{"style":745},[980],{"type":472,"value":981},"dp",{"type":467,"tag":494,"props":983,"children":984},{"style":719},[985],{"type":472,"value":777},{"type":467,"tag":494,"props":987,"children":988},{"style":745},[989],{"type":472,"value":949},{"type":467,"tag":494,"props":991,"children":992},{"style":708},[993],{"type":472,"value":994}," -",{"type":467,"tag":494,"props":996,"children":997},{"style":780},[998],{"type":472,"value":885},{"type":467,"tag":494,"props":1000,"children":1001},{"style":719},[1002],{"type":472,"value":788},{"type":467,"tag":494,"props":1004,"children":1005},{"style":708},[1006],{"type":472,"value":1007},"+",{"type":467,"tag":494,"props":1009,"children":1010},{"style":745},[1011],{"type":472,"value":798},{"type":467,"tag":494,"props":1013,"children":1014},{"style":719},[1015],{"type":472,"value":777},{"type":467,"tag":494,"props":1017,"children":1018},{"style":745},[1019],{"type":472,"value":949},{"type":467,"tag":494,"props":1021,"children":1022},{"style":719},[1023],{"type":472,"value":811},{"type":467,"tag":494,"props":1025,"children":1026},{"style":760},[1027],{"type":472,"value":1028},",",{"type":467,"tag":494,"props":1030,"children":1031},{"style":745},[1032],{"type":472,"value":798},{"type":467,"tag":494,"props":1034,"children":1035},{"style":719},[1036],{"type":472,"value":777},{"type":467,"tag":494,"props":1038,"children":1039},{"style":745},[1040],{"type":472,"value":949},{"type":467,"tag":494,"props":1042,"children":1043},{"style":719},[1044],{"type":472,"value":1045},"])",{"type":467,"tag":494,"props":1047,"children":1048},{"style":760},[1049],{"type":472,"value":763},{"type":467,"tag":494,"props":1051,"children":1053},{"class":496,"line":1052},11,[1054,1059,1063,1067,1071,1075,1079,1084,1088,1092,1096,1100,1104],{"type":467,"tag":494,"props":1055,"children":1056},{"style":745},[1057],{"type":472,"value":1058},"    res",{"type":467,"tag":494,"props":1060,"children":1061},{"style":708},[1062],{"type":472,"value":711},{"type":467,"tag":494,"props":1064,"children":1065},{"style":745},[1066],{"type":472,"value":962},{"type":467,"tag":494,"props":1068,"children":1069},{"style":906},[1070],{"type":472,"value":909},{"type":467,"tag":494,"props":1072,"children":1073},{"style":702},[1074],{"type":472,"value":971},{"type":467,"tag":494,"props":1076,"children":1077},{"style":719},[1078],{"type":472,"value":976},{"type":467,"tag":494,"props":1080,"children":1081},{"style":745},[1082],{"type":472,"value":1083},"res",{"type":467,"tag":494,"props":1085,"children":1086},{"style":760},[1087],{"type":472,"value":1028},{"type":467,"tag":494,"props":1089,"children":1090},{"style":745},[1091],{"type":472,"value":748},{"type":467,"tag":494,"props":1093,"children":1094},{"style":719},[1095],{"type":472,"value":777},{"type":467,"tag":494,"props":1097,"children":1098},{"style":745},[1099],{"type":472,"value":949},{"type":467,"tag":494,"props":1101,"children":1102},{"style":719},[1103],{"type":472,"value":1045},{"type":467,"tag":494,"props":1105,"children":1106},{"style":760},[1107],{"type":472,"value":763},{"type":467,"tag":494,"props":1109,"children":1111},{"class":496,"line":1110},12,[1112],{"type":467,"tag":494,"props":1113,"children":1114},{"style":719},[1115],{"type":472,"value":1116},"  }\n",{"type":467,"tag":494,"props":1118,"children":1120},{"class":496,"line":1119},13,[1121,1126,1130],{"type":467,"tag":494,"props":1122,"children":1123},{"style":859},[1124],{"type":472,"value":1125},"  return",{"type":467,"tag":494,"props":1127,"children":1128},{"style":745},[1129],{"type":472,"value":828},{"type":467,"tag":494,"props":1131,"children":1132},{"style":760},[1133],{"type":472,"value":763},{"type":467,"tag":494,"props":1135,"children":1137},{"class":496,"line":1136},14,[1138,1143],{"type":467,"tag":494,"props":1139,"children":1140},{"style":719},[1141],{"type":472,"value":1142},"}",{"type":467,"tag":494,"props":1144,"children":1145},{"style":760},[1146],{"type":472,"value":763},{"type":467,"tag":1148,"props":1149,"children":1150},"style",{},[1151],{"type":472,"value":1152},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":460,"searchDepth":692,"depth":692,"links":1154},[1155,1156],{"id":606,"depth":506,"text":606},{"id":611,"depth":506,"text":611,"children":1157},[1158],{"id":617,"depth":515,"text":617},"markdown","content:1.algorithm:3.leetcode:3.major:53.maximum-subarray.md","content","1.algorithm/3.leetcode/3.major/53.maximum-subarray.md","md",[1165,1167],{"_path":114,"title":113,"description":1166},"给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。",{"_path":120,"title":119,"description":1168},"以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [start_i, end_i] 。请你合并所有重叠的区间，并返回 一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间 。",1713624717556]