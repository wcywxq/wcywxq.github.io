[{"data":1,"prerenderedAt":1262},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/maximum-subarray":546,"/algorithm/leetcode/major/maximum-subarray-surround":1257},[4,269,298,514,522,531],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":513},"代码考核","/code-assessment",[302,404,506],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"整数分割","/code-assessment/scene/split-number",{"title":498,"_path":499},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":501,"_path":502},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":504,"_path":505},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":507,"_path":508,"children":509},"Ts 类型挑战","/code-assessment/type-challeges",[510],{"title":511,"_path":512},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":515,"_path":516,"children":517,"icon":521},"项目","/project",[518],{"title":519,"_path":520},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":523,"_path":524,"children":525,"icon":530},"设计模式","/design-mode",[526,527],{"title":523,"_path":524},{"title":528,"_path":529},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":532,"_path":533,"children":534,"icon":545},"后端语言","/backend-languages",[535],{"title":536,"_path":537,"children":538},"Python","/backend-languages/python",[539,542],{"title":540,"_path":541},"基础","/backend-languages/python/base",{"title":543,"_path":544},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":126,"_dir":547,"_draft":548,"_partial":548,"_locale":549,"title":125,"description":550,"url":551,"body":552,"_type":1252,"_id":1253,"_source":1254,"_file":1255,"_extension":1256},"major",false,"","给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。","https://leetcode.cn/problems/maximum-subarray",{"type":553,"children":554,"toc":1246},"root",[555,562,567,572,611,616,639,644,667,672,687,692,698,703,709,1240],{"type":556,"tag":557,"props":558,"children":559},"element","p",{},[560],{"type":561,"value":550},"text",{"type":556,"tag":557,"props":563,"children":564},{},[565],{"type":561,"value":566},"子数组\n是数组中的一个连续部分。",{"type":556,"tag":557,"props":568,"children":569},{},[570],{"type":561,"value":571},"示例 1：",{"type":556,"tag":573,"props":574,"children":577},"pre",{"className":575,"code":576,"language":561,"meta":549,"style":549},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n输出：6\n解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",[578],{"type":556,"tag":579,"props":580,"children":581},"code",{"__ignoreMap":549},[582,593,602],{"type":556,"tag":583,"props":584,"children":587},"span",{"class":585,"line":586},"line",1,[588],{"type":556,"tag":583,"props":589,"children":590},{},[591],{"type":561,"value":592},"输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n",{"type":556,"tag":583,"props":594,"children":596},{"class":585,"line":595},2,[597],{"type":556,"tag":583,"props":598,"children":599},{},[600],{"type":561,"value":601},"输出：6\n",{"type":556,"tag":583,"props":603,"children":605},{"class":585,"line":604},3,[606],{"type":556,"tag":583,"props":607,"children":608},{},[609],{"type":561,"value":610},"解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",{"type":556,"tag":557,"props":612,"children":613},{},[614],{"type":561,"value":615},"示例 2：",{"type":556,"tag":573,"props":617,"children":619},{"className":575,"code":618,"language":561,"meta":549,"style":549},"输入：nums = [1]\n输出：1\n",[620],{"type":556,"tag":579,"props":621,"children":622},{"__ignoreMap":549},[623,631],{"type":556,"tag":583,"props":624,"children":625},{"class":585,"line":586},[626],{"type":556,"tag":583,"props":627,"children":628},{},[629],{"type":561,"value":630},"输入：nums = [1]\n",{"type":556,"tag":583,"props":632,"children":633},{"class":585,"line":595},[634],{"type":556,"tag":583,"props":635,"children":636},{},[637],{"type":561,"value":638},"输出：1\n",{"type":556,"tag":557,"props":640,"children":641},{},[642],{"type":561,"value":643},"示例 3：",{"type":556,"tag":573,"props":645,"children":647},{"className":575,"code":646,"language":561,"meta":549,"style":549},"输入：nums = [5,4,-1,7,8]\n输出：23\n",[648],{"type":556,"tag":579,"props":649,"children":650},{"__ignoreMap":549},[651,659],{"type":556,"tag":583,"props":652,"children":653},{"class":585,"line":586},[654],{"type":556,"tag":583,"props":655,"children":656},{},[657],{"type":561,"value":658},"输入：nums = [5,4,-1,7,8]\n",{"type":556,"tag":583,"props":660,"children":661},{"class":585,"line":595},[662],{"type":556,"tag":583,"props":663,"children":664},{},[665],{"type":561,"value":666},"输出：23\n",{"type":556,"tag":557,"props":668,"children":669},{},[670],{"type":561,"value":671},"提示：",{"type":556,"tag":673,"props":674,"children":675},"ul",{},[676,682],{"type":556,"tag":677,"props":678,"children":679},"li",{},[680],{"type":561,"value":681},"1 \u003C= nums.length \u003C= 105",{"type":556,"tag":677,"props":683,"children":684},{},[685],{"type":561,"value":686},"-104 \u003C= nums[i] \u003C= 104",{"type":556,"tag":557,"props":688,"children":689},{},[690],{"type":561,"value":691},"进阶：如果你已经实现复杂度为 O(n) 的解法，尝试使用更为精妙的 分治法 求解。",{"type":556,"tag":693,"props":694,"children":696},"h2",{"id":695},"解题思路",[697],{"type":561,"value":695},{"type":556,"tag":693,"props":699,"children":701},{"id":700},"实现",[702],{"type":561,"value":700},{"type":556,"tag":704,"props":705,"children":707},"h3",{"id":706},"动态规划",[708],{"type":561,"value":706},{"type":556,"tag":573,"props":710,"children":714},{"className":711,"code":712,"language":713,"meta":549,"style":549},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSubArray = function (nums) {\n  let dp = [];\n  dp[0] = nums[0];\n  let res = dp[0];\n  for (let i = 1; i \u003C nums.length; i++) {\n    dp[i] = Math.max(dp[i - 1] + nums[i], nums[i]);\n    res = Math.max(res, dp[i]);\n  }\n  return res;\n};\n","js",[715],{"type":556,"tag":579,"props":716,"children":717},{"__ignoreMap":549},[718,727,769,799,808,854,877,924,957,1039,1149,1204,1213,1231],{"type":556,"tag":583,"props":719,"children":720},{"class":585,"line":586},[721],{"type":556,"tag":583,"props":722,"children":724},{"style":723},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[725],{"type":561,"value":726},"/**\n",{"type":556,"tag":583,"props":728,"children":729},{"class":585,"line":595},[730,735,741,747,752,758,763],{"type":556,"tag":583,"props":731,"children":732},{"style":723},[733],{"type":561,"value":734}," * ",{"type":556,"tag":583,"props":736,"children":738},{"style":737},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[739],{"type":561,"value":740},"@",{"type":556,"tag":583,"props":742,"children":744},{"style":743},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[745],{"type":561,"value":746},"param",{"type":556,"tag":583,"props":748,"children":749},{"style":737},[750],{"type":561,"value":751}," {",{"type":556,"tag":583,"props":753,"children":755},{"style":754},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[756],{"type":561,"value":757},"number[]",{"type":556,"tag":583,"props":759,"children":760},{"style":737},[761],{"type":561,"value":762},"}",{"type":556,"tag":583,"props":764,"children":766},{"style":765},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[767],{"type":561,"value":768}," nums\n",{"type":556,"tag":583,"props":770,"children":771},{"class":585,"line":604},[772,776,780,785,789,794],{"type":556,"tag":583,"props":773,"children":774},{"style":723},[775],{"type":561,"value":734},{"type":556,"tag":583,"props":777,"children":778},{"style":737},[779],{"type":561,"value":740},{"type":556,"tag":583,"props":781,"children":782},{"style":743},[783],{"type":561,"value":784},"return",{"type":556,"tag":583,"props":786,"children":787},{"style":737},[788],{"type":561,"value":751},{"type":556,"tag":583,"props":790,"children":791},{"style":754},[792],{"type":561,"value":793},"number",{"type":556,"tag":583,"props":795,"children":796},{"style":737},[797],{"type":561,"value":798},"}\n",{"type":556,"tag":583,"props":800,"children":802},{"class":585,"line":801},4,[803],{"type":556,"tag":583,"props":804,"children":805},{"style":723},[806],{"type":561,"value":807}," */\n",{"type":556,"tag":583,"props":809,"children":811},{"class":585,"line":810},5,[812,818,824,829,834,839,844,849],{"type":556,"tag":583,"props":813,"children":815},{"style":814},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[816],{"type":561,"value":817},"var",{"type":556,"tag":583,"props":819,"children":821},{"style":820},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[822],{"type":561,"value":823}," maxSubArray",{"type":556,"tag":583,"props":825,"children":826},{"style":737},[827],{"type":561,"value":828}," =",{"type":556,"tag":583,"props":830,"children":831},{"style":814},[832],{"type":561,"value":833}," function",{"type":556,"tag":583,"props":835,"children":836},{"style":737},[837],{"type":561,"value":838}," (",{"type":556,"tag":583,"props":840,"children":841},{"style":765},[842],{"type":561,"value":843},"nums",{"type":556,"tag":583,"props":845,"children":846},{"style":737},[847],{"type":561,"value":848},")",{"type":556,"tag":583,"props":850,"children":851},{"style":737},[852],{"type":561,"value":853}," {\n",{"type":556,"tag":583,"props":855,"children":857},{"class":585,"line":856},6,[858,863,868,872],{"type":556,"tag":583,"props":859,"children":860},{"style":814},[861],{"type":561,"value":862},"  let",{"type":556,"tag":583,"props":864,"children":865},{"style":765},[866],{"type":561,"value":867}," dp",{"type":556,"tag":583,"props":869,"children":870},{"style":737},[871],{"type":561,"value":828},{"type":556,"tag":583,"props":873,"children":874},{"style":737},[875],{"type":561,"value":876}," [];\n",{"type":556,"tag":583,"props":878,"children":880},{"class":585,"line":879},7,[881,886,891,897,902,906,911,915,919],{"type":556,"tag":583,"props":882,"children":883},{"style":765},[884],{"type":561,"value":885},"  dp",{"type":556,"tag":583,"props":887,"children":888},{"style":737},[889],{"type":561,"value":890},"[",{"type":556,"tag":583,"props":892,"children":894},{"style":893},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[895],{"type":561,"value":896},"0",{"type":556,"tag":583,"props":898,"children":899},{"style":737},[900],{"type":561,"value":901},"]",{"type":556,"tag":583,"props":903,"children":904},{"style":737},[905],{"type":561,"value":828},{"type":556,"tag":583,"props":907,"children":908},{"style":765},[909],{"type":561,"value":910}," nums",{"type":556,"tag":583,"props":912,"children":913},{"style":737},[914],{"type":561,"value":890},{"type":556,"tag":583,"props":916,"children":917},{"style":893},[918],{"type":561,"value":896},{"type":556,"tag":583,"props":920,"children":921},{"style":737},[922],{"type":561,"value":923},"];\n",{"type":556,"tag":583,"props":925,"children":927},{"class":585,"line":926},8,[928,932,937,941,945,949,953],{"type":556,"tag":583,"props":929,"children":930},{"style":814},[931],{"type":561,"value":862},{"type":556,"tag":583,"props":933,"children":934},{"style":765},[935],{"type":561,"value":936}," res",{"type":556,"tag":583,"props":938,"children":939},{"style":737},[940],{"type":561,"value":828},{"type":556,"tag":583,"props":942,"children":943},{"style":765},[944],{"type":561,"value":867},{"type":556,"tag":583,"props":946,"children":947},{"style":737},[948],{"type":561,"value":890},{"type":556,"tag":583,"props":950,"children":951},{"style":893},[952],{"type":561,"value":896},{"type":556,"tag":583,"props":954,"children":955},{"style":737},[956],{"type":561,"value":923},{"type":556,"tag":583,"props":958,"children":960},{"class":585,"line":959},9,[961,966,970,975,980,984,989,994,998,1003,1007,1012,1018,1022,1026,1031,1035],{"type":556,"tag":583,"props":962,"children":963},{"style":743},[964],{"type":561,"value":965},"  for",{"type":556,"tag":583,"props":967,"children":968},{"style":737},[969],{"type":561,"value":838},{"type":556,"tag":583,"props":971,"children":972},{"style":814},[973],{"type":561,"value":974},"let",{"type":556,"tag":583,"props":976,"children":977},{"style":765},[978],{"type":561,"value":979}," i",{"type":556,"tag":583,"props":981,"children":982},{"style":737},[983],{"type":561,"value":828},{"type":556,"tag":583,"props":985,"children":986},{"style":893},[987],{"type":561,"value":988}," 1",{"type":556,"tag":583,"props":990,"children":991},{"style":737},[992],{"type":561,"value":993},";",{"type":556,"tag":583,"props":995,"children":996},{"style":765},[997],{"type":561,"value":979},{"type":556,"tag":583,"props":999,"children":1000},{"style":737},[1001],{"type":561,"value":1002}," \u003C",{"type":556,"tag":583,"props":1004,"children":1005},{"style":765},[1006],{"type":561,"value":910},{"type":556,"tag":583,"props":1008,"children":1009},{"style":737},[1010],{"type":561,"value":1011},".",{"type":556,"tag":583,"props":1013,"children":1015},{"style":1014},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1016],{"type":561,"value":1017},"length",{"type":556,"tag":583,"props":1019,"children":1020},{"style":737},[1021],{"type":561,"value":993},{"type":556,"tag":583,"props":1023,"children":1024},{"style":765},[1025],{"type":561,"value":979},{"type":556,"tag":583,"props":1027,"children":1028},{"style":814},[1029],{"type":561,"value":1030},"++",{"type":556,"tag":583,"props":1032,"children":1033},{"style":737},[1034],{"type":561,"value":848},{"type":556,"tag":583,"props":1036,"children":1037},{"style":737},[1038],{"type":561,"value":853},{"type":556,"tag":583,"props":1040,"children":1042},{"class":585,"line":1041},10,[1043,1048,1052,1057,1061,1065,1070,1074,1079,1084,1089,1093,1097,1102,1106,1110,1115,1119,1123,1127,1132,1136,1140,1144],{"type":556,"tag":583,"props":1044,"children":1045},{"style":765},[1046],{"type":561,"value":1047},"    dp",{"type":556,"tag":583,"props":1049,"children":1050},{"style":737},[1051],{"type":561,"value":890},{"type":556,"tag":583,"props":1053,"children":1054},{"style":765},[1055],{"type":561,"value":1056},"i",{"type":556,"tag":583,"props":1058,"children":1059},{"style":737},[1060],{"type":561,"value":901},{"type":556,"tag":583,"props":1062,"children":1063},{"style":737},[1064],{"type":561,"value":828},{"type":556,"tag":583,"props":1066,"children":1067},{"style":765},[1068],{"type":561,"value":1069}," Math",{"type":556,"tag":583,"props":1071,"children":1072},{"style":737},[1073],{"type":561,"value":1011},{"type":556,"tag":583,"props":1075,"children":1076},{"style":820},[1077],{"type":561,"value":1078},"max",{"type":556,"tag":583,"props":1080,"children":1081},{"style":737},[1082],{"type":561,"value":1083},"(",{"type":556,"tag":583,"props":1085,"children":1086},{"style":765},[1087],{"type":561,"value":1088},"dp",{"type":556,"tag":583,"props":1090,"children":1091},{"style":737},[1092],{"type":561,"value":890},{"type":556,"tag":583,"props":1094,"children":1095},{"style":765},[1096],{"type":561,"value":1056},{"type":556,"tag":583,"props":1098,"children":1099},{"style":814},[1100],{"type":561,"value":1101}," -",{"type":556,"tag":583,"props":1103,"children":1104},{"style":893},[1105],{"type":561,"value":988},{"type":556,"tag":583,"props":1107,"children":1108},{"style":737},[1109],{"type":561,"value":901},{"type":556,"tag":583,"props":1111,"children":1112},{"style":814},[1113],{"type":561,"value":1114}," +",{"type":556,"tag":583,"props":1116,"children":1117},{"style":765},[1118],{"type":561,"value":910},{"type":556,"tag":583,"props":1120,"children":1121},{"style":737},[1122],{"type":561,"value":890},{"type":556,"tag":583,"props":1124,"children":1125},{"style":765},[1126],{"type":561,"value":1056},{"type":556,"tag":583,"props":1128,"children":1129},{"style":737},[1130],{"type":561,"value":1131},"],",{"type":556,"tag":583,"props":1133,"children":1134},{"style":765},[1135],{"type":561,"value":910},{"type":556,"tag":583,"props":1137,"children":1138},{"style":737},[1139],{"type":561,"value":890},{"type":556,"tag":583,"props":1141,"children":1142},{"style":765},[1143],{"type":561,"value":1056},{"type":556,"tag":583,"props":1145,"children":1146},{"style":737},[1147],{"type":561,"value":1148},"]);\n",{"type":556,"tag":583,"props":1150,"children":1152},{"class":585,"line":1151},11,[1153,1158,1162,1166,1170,1174,1178,1183,1188,1192,1196,1200],{"type":556,"tag":583,"props":1154,"children":1155},{"style":765},[1156],{"type":561,"value":1157},"    res",{"type":556,"tag":583,"props":1159,"children":1160},{"style":737},[1161],{"type":561,"value":828},{"type":556,"tag":583,"props":1163,"children":1164},{"style":765},[1165],{"type":561,"value":1069},{"type":556,"tag":583,"props":1167,"children":1168},{"style":737},[1169],{"type":561,"value":1011},{"type":556,"tag":583,"props":1171,"children":1172},{"style":820},[1173],{"type":561,"value":1078},{"type":556,"tag":583,"props":1175,"children":1176},{"style":737},[1177],{"type":561,"value":1083},{"type":556,"tag":583,"props":1179,"children":1180},{"style":765},[1181],{"type":561,"value":1182},"res",{"type":556,"tag":583,"props":1184,"children":1185},{"style":737},[1186],{"type":561,"value":1187},",",{"type":556,"tag":583,"props":1189,"children":1190},{"style":765},[1191],{"type":561,"value":867},{"type":556,"tag":583,"props":1193,"children":1194},{"style":737},[1195],{"type":561,"value":890},{"type":556,"tag":583,"props":1197,"children":1198},{"style":765},[1199],{"type":561,"value":1056},{"type":556,"tag":583,"props":1201,"children":1202},{"style":737},[1203],{"type":561,"value":1148},{"type":556,"tag":583,"props":1205,"children":1207},{"class":585,"line":1206},12,[1208],{"type":556,"tag":583,"props":1209,"children":1210},{"style":737},[1211],{"type":561,"value":1212},"  }\n",{"type":556,"tag":583,"props":1214,"children":1216},{"class":585,"line":1215},13,[1217,1222,1226],{"type":556,"tag":583,"props":1218,"children":1219},{"style":743},[1220],{"type":561,"value":1221},"  return",{"type":556,"tag":583,"props":1223,"children":1224},{"style":765},[1225],{"type":561,"value":936},{"type":556,"tag":583,"props":1227,"children":1228},{"style":737},[1229],{"type":561,"value":1230},";\n",{"type":556,"tag":583,"props":1232,"children":1234},{"class":585,"line":1233},14,[1235],{"type":556,"tag":583,"props":1236,"children":1237},{"style":737},[1238],{"type":561,"value":1239},"};\n",{"type":556,"tag":1241,"props":1242,"children":1243},"style",{},[1244],{"type":561,"value":1245},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":549,"searchDepth":810,"depth":810,"links":1247},[1248,1249],{"id":695,"depth":595,"text":695},{"id":700,"depth":595,"text":700,"children":1250},[1251],{"id":706,"depth":604,"text":706},"markdown","content:1.algorithm:3.leetcode:3.major:53.maximum-subarray.md","content","1.algorithm/3.leetcode/3.major/53.maximum-subarray.md","md",[1258,1260],{"_path":123,"title":122,"description":1259},"给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。",{"_path":129,"title":128,"description":1261},"以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [start_i, end_i] 。请你合并所有重叠的区间，并返回 一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间 。",1715002843058]