[{"data":1,"prerenderedAt":1216},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/maximum-subarray":500,"/algorithm/leetcode/major/maximum-subarray-surround":1211},[4,269,298,468,476,485],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":467},"代码考核","/code-assessment",[302,367,460],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369,"children":370},"业务场景","/code-assessment/scene",[371,396,406,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457],{"title":372,"_path":373,"children":374},"Promise","/code-assessment/scene/promise",[375,378,381,384,387,390,393],{"title":376,"_path":377},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":379,"_path":380},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":382,"_path":383},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":385,"_path":386},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":388,"_path":389},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":391,"_path":392},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":394,"_path":395},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":397,"_path":398,"children":399},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[400,403],{"title":401,"_path":402},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":404,"_path":405},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":407,"_path":408},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":410,"_path":411},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":413,"_path":414},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":416,"_path":417},"倒计时","/code-assessment/scene/countdown",{"title":419,"_path":420},"日期格式化","/code-assessment/scene/date-format",{"title":422,"_path":423},"实现前端路由","/code-assessment/scene/frontend-route",{"title":425,"_path":426},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":428,"_path":429},"lodash.get","/code-assessment/scene/lodash-get",{"title":431,"_path":432},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":434,"_path":435},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":437,"_path":438},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":440,"_path":441},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":443,"_path":444},"随机数","/code-assessment/scene/random-number",{"title":446,"_path":447},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":449,"_path":450},"sku 算法实现","/code-assessment/scene/sku",{"title":452,"_path":453},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":455,"_path":456},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":458,"_path":459},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":461,"_path":462,"children":463},"Ts 类型挑战","/code-assessment/type-challeges",[464],{"title":465,"_path":466},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":469,"_path":470,"children":471,"icon":475},"项目","/project",[472],{"title":473,"_path":474},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":477,"_path":478,"children":479,"icon":484},"设计模式","/design-mode",[480,481],{"title":477,"_path":478},{"title":482,"_path":483},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":486,"_path":487,"children":488,"icon":499},"后端语言","/backend-languages",[489],{"title":490,"_path":491,"children":492},"Python","/backend-languages/python",[493,496],{"title":494,"_path":495},"基础","/backend-languages/python/base",{"title":497,"_path":498},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":126,"_dir":501,"_draft":502,"_partial":502,"_locale":503,"title":125,"description":504,"url":505,"body":506,"_type":1206,"_id":1207,"_source":1208,"_file":1209,"_extension":1210},"major",false,"","给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。","https://leetcode.cn/problems/maximum-subarray",{"type":507,"children":508,"toc":1200},"root",[509,516,521,526,565,570,593,598,621,626,641,646,652,657,663,1194],{"type":510,"tag":511,"props":512,"children":513},"element","p",{},[514],{"type":515,"value":504},"text",{"type":510,"tag":511,"props":517,"children":518},{},[519],{"type":515,"value":520},"子数组\n是数组中的一个连续部分。",{"type":510,"tag":511,"props":522,"children":523},{},[524],{"type":515,"value":525},"示例 1：",{"type":510,"tag":527,"props":528,"children":531},"pre",{"className":529,"code":530,"language":515,"meta":503,"style":503},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n输出：6\n解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",[532],{"type":510,"tag":533,"props":534,"children":535},"code",{"__ignoreMap":503},[536,547,556],{"type":510,"tag":537,"props":538,"children":541},"span",{"class":539,"line":540},"line",1,[542],{"type":510,"tag":537,"props":543,"children":544},{},[545],{"type":515,"value":546},"输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n",{"type":510,"tag":537,"props":548,"children":550},{"class":539,"line":549},2,[551],{"type":510,"tag":537,"props":552,"children":553},{},[554],{"type":515,"value":555},"输出：6\n",{"type":510,"tag":537,"props":557,"children":559},{"class":539,"line":558},3,[560],{"type":510,"tag":537,"props":561,"children":562},{},[563],{"type":515,"value":564},"解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",{"type":510,"tag":511,"props":566,"children":567},{},[568],{"type":515,"value":569},"示例 2：",{"type":510,"tag":527,"props":571,"children":573},{"className":529,"code":572,"language":515,"meta":503,"style":503},"输入：nums = [1]\n输出：1\n",[574],{"type":510,"tag":533,"props":575,"children":576},{"__ignoreMap":503},[577,585],{"type":510,"tag":537,"props":578,"children":579},{"class":539,"line":540},[580],{"type":510,"tag":537,"props":581,"children":582},{},[583],{"type":515,"value":584},"输入：nums = [1]\n",{"type":510,"tag":537,"props":586,"children":587},{"class":539,"line":549},[588],{"type":510,"tag":537,"props":589,"children":590},{},[591],{"type":515,"value":592},"输出：1\n",{"type":510,"tag":511,"props":594,"children":595},{},[596],{"type":515,"value":597},"示例 3：",{"type":510,"tag":527,"props":599,"children":601},{"className":529,"code":600,"language":515,"meta":503,"style":503},"输入：nums = [5,4,-1,7,8]\n输出：23\n",[602],{"type":510,"tag":533,"props":603,"children":604},{"__ignoreMap":503},[605,613],{"type":510,"tag":537,"props":606,"children":607},{"class":539,"line":540},[608],{"type":510,"tag":537,"props":609,"children":610},{},[611],{"type":515,"value":612},"输入：nums = [5,4,-1,7,8]\n",{"type":510,"tag":537,"props":614,"children":615},{"class":539,"line":549},[616],{"type":510,"tag":537,"props":617,"children":618},{},[619],{"type":515,"value":620},"输出：23\n",{"type":510,"tag":511,"props":622,"children":623},{},[624],{"type":515,"value":625},"提示：",{"type":510,"tag":627,"props":628,"children":629},"ul",{},[630,636],{"type":510,"tag":631,"props":632,"children":633},"li",{},[634],{"type":515,"value":635},"1 \u003C= nums.length \u003C= 105",{"type":510,"tag":631,"props":637,"children":638},{},[639],{"type":515,"value":640},"-104 \u003C= nums[i] \u003C= 104",{"type":510,"tag":511,"props":642,"children":643},{},[644],{"type":515,"value":645},"进阶：如果你已经实现复杂度为 O(n) 的解法，尝试使用更为精妙的 分治法 求解。",{"type":510,"tag":647,"props":648,"children":650},"h2",{"id":649},"解题思路",[651],{"type":515,"value":649},{"type":510,"tag":647,"props":653,"children":655},{"id":654},"实现",[656],{"type":515,"value":654},{"type":510,"tag":658,"props":659,"children":661},"h3",{"id":660},"动态规划",[662],{"type":515,"value":660},{"type":510,"tag":527,"props":664,"children":668},{"className":665,"code":666,"language":667,"meta":503,"style":503},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSubArray = function (nums) {\n  let dp = [];\n  dp[0] = nums[0];\n  let res = dp[0];\n  for (let i = 1; i \u003C nums.length; i++) {\n    dp[i] = Math.max(dp[i - 1] + nums[i], nums[i]);\n    res = Math.max(res, dp[i]);\n  }\n  return res;\n};\n","js",[669],{"type":510,"tag":533,"props":670,"children":671},{"__ignoreMap":503},[672,681,723,753,762,808,831,878,911,993,1103,1158,1167,1185],{"type":510,"tag":537,"props":673,"children":674},{"class":539,"line":540},[675],{"type":510,"tag":537,"props":676,"children":678},{"style":677},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[679],{"type":515,"value":680},"/**\n",{"type":510,"tag":537,"props":682,"children":683},{"class":539,"line":549},[684,689,695,701,706,712,717],{"type":510,"tag":537,"props":685,"children":686},{"style":677},[687],{"type":515,"value":688}," * ",{"type":510,"tag":537,"props":690,"children":692},{"style":691},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[693],{"type":515,"value":694},"@",{"type":510,"tag":537,"props":696,"children":698},{"style":697},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[699],{"type":515,"value":700},"param",{"type":510,"tag":537,"props":702,"children":703},{"style":691},[704],{"type":515,"value":705}," {",{"type":510,"tag":537,"props":707,"children":709},{"style":708},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[710],{"type":515,"value":711},"number[]",{"type":510,"tag":537,"props":713,"children":714},{"style":691},[715],{"type":515,"value":716},"}",{"type":510,"tag":537,"props":718,"children":720},{"style":719},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[721],{"type":515,"value":722}," nums\n",{"type":510,"tag":537,"props":724,"children":725},{"class":539,"line":558},[726,730,734,739,743,748],{"type":510,"tag":537,"props":727,"children":728},{"style":677},[729],{"type":515,"value":688},{"type":510,"tag":537,"props":731,"children":732},{"style":691},[733],{"type":515,"value":694},{"type":510,"tag":537,"props":735,"children":736},{"style":697},[737],{"type":515,"value":738},"return",{"type":510,"tag":537,"props":740,"children":741},{"style":691},[742],{"type":515,"value":705},{"type":510,"tag":537,"props":744,"children":745},{"style":708},[746],{"type":515,"value":747},"number",{"type":510,"tag":537,"props":749,"children":750},{"style":691},[751],{"type":515,"value":752},"}\n",{"type":510,"tag":537,"props":754,"children":756},{"class":539,"line":755},4,[757],{"type":510,"tag":537,"props":758,"children":759},{"style":677},[760],{"type":515,"value":761}," */\n",{"type":510,"tag":537,"props":763,"children":765},{"class":539,"line":764},5,[766,772,778,783,788,793,798,803],{"type":510,"tag":537,"props":767,"children":769},{"style":768},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[770],{"type":515,"value":771},"var",{"type":510,"tag":537,"props":773,"children":775},{"style":774},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[776],{"type":515,"value":777}," maxSubArray",{"type":510,"tag":537,"props":779,"children":780},{"style":691},[781],{"type":515,"value":782}," =",{"type":510,"tag":537,"props":784,"children":785},{"style":768},[786],{"type":515,"value":787}," function",{"type":510,"tag":537,"props":789,"children":790},{"style":691},[791],{"type":515,"value":792}," (",{"type":510,"tag":537,"props":794,"children":795},{"style":719},[796],{"type":515,"value":797},"nums",{"type":510,"tag":537,"props":799,"children":800},{"style":691},[801],{"type":515,"value":802},")",{"type":510,"tag":537,"props":804,"children":805},{"style":691},[806],{"type":515,"value":807}," {\n",{"type":510,"tag":537,"props":809,"children":811},{"class":539,"line":810},6,[812,817,822,826],{"type":510,"tag":537,"props":813,"children":814},{"style":768},[815],{"type":515,"value":816},"  let",{"type":510,"tag":537,"props":818,"children":819},{"style":719},[820],{"type":515,"value":821}," dp",{"type":510,"tag":537,"props":823,"children":824},{"style":691},[825],{"type":515,"value":782},{"type":510,"tag":537,"props":827,"children":828},{"style":691},[829],{"type":515,"value":830}," [];\n",{"type":510,"tag":537,"props":832,"children":834},{"class":539,"line":833},7,[835,840,845,851,856,860,865,869,873],{"type":510,"tag":537,"props":836,"children":837},{"style":719},[838],{"type":515,"value":839},"  dp",{"type":510,"tag":537,"props":841,"children":842},{"style":691},[843],{"type":515,"value":844},"[",{"type":510,"tag":537,"props":846,"children":848},{"style":847},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[849],{"type":515,"value":850},"0",{"type":510,"tag":537,"props":852,"children":853},{"style":691},[854],{"type":515,"value":855},"]",{"type":510,"tag":537,"props":857,"children":858},{"style":691},[859],{"type":515,"value":782},{"type":510,"tag":537,"props":861,"children":862},{"style":719},[863],{"type":515,"value":864}," nums",{"type":510,"tag":537,"props":866,"children":867},{"style":691},[868],{"type":515,"value":844},{"type":510,"tag":537,"props":870,"children":871},{"style":847},[872],{"type":515,"value":850},{"type":510,"tag":537,"props":874,"children":875},{"style":691},[876],{"type":515,"value":877},"];\n",{"type":510,"tag":537,"props":879,"children":881},{"class":539,"line":880},8,[882,886,891,895,899,903,907],{"type":510,"tag":537,"props":883,"children":884},{"style":768},[885],{"type":515,"value":816},{"type":510,"tag":537,"props":887,"children":888},{"style":719},[889],{"type":515,"value":890}," res",{"type":510,"tag":537,"props":892,"children":893},{"style":691},[894],{"type":515,"value":782},{"type":510,"tag":537,"props":896,"children":897},{"style":719},[898],{"type":515,"value":821},{"type":510,"tag":537,"props":900,"children":901},{"style":691},[902],{"type":515,"value":844},{"type":510,"tag":537,"props":904,"children":905},{"style":847},[906],{"type":515,"value":850},{"type":510,"tag":537,"props":908,"children":909},{"style":691},[910],{"type":515,"value":877},{"type":510,"tag":537,"props":912,"children":914},{"class":539,"line":913},9,[915,920,924,929,934,938,943,948,952,957,961,966,972,976,980,985,989],{"type":510,"tag":537,"props":916,"children":917},{"style":697},[918],{"type":515,"value":919},"  for",{"type":510,"tag":537,"props":921,"children":922},{"style":691},[923],{"type":515,"value":792},{"type":510,"tag":537,"props":925,"children":926},{"style":768},[927],{"type":515,"value":928},"let",{"type":510,"tag":537,"props":930,"children":931},{"style":719},[932],{"type":515,"value":933}," i",{"type":510,"tag":537,"props":935,"children":936},{"style":691},[937],{"type":515,"value":782},{"type":510,"tag":537,"props":939,"children":940},{"style":847},[941],{"type":515,"value":942}," 1",{"type":510,"tag":537,"props":944,"children":945},{"style":691},[946],{"type":515,"value":947},";",{"type":510,"tag":537,"props":949,"children":950},{"style":719},[951],{"type":515,"value":933},{"type":510,"tag":537,"props":953,"children":954},{"style":691},[955],{"type":515,"value":956}," \u003C",{"type":510,"tag":537,"props":958,"children":959},{"style":719},[960],{"type":515,"value":864},{"type":510,"tag":537,"props":962,"children":963},{"style":691},[964],{"type":515,"value":965},".",{"type":510,"tag":537,"props":967,"children":969},{"style":968},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[970],{"type":515,"value":971},"length",{"type":510,"tag":537,"props":973,"children":974},{"style":691},[975],{"type":515,"value":947},{"type":510,"tag":537,"props":977,"children":978},{"style":719},[979],{"type":515,"value":933},{"type":510,"tag":537,"props":981,"children":982},{"style":768},[983],{"type":515,"value":984},"++",{"type":510,"tag":537,"props":986,"children":987},{"style":691},[988],{"type":515,"value":802},{"type":510,"tag":537,"props":990,"children":991},{"style":691},[992],{"type":515,"value":807},{"type":510,"tag":537,"props":994,"children":996},{"class":539,"line":995},10,[997,1002,1006,1011,1015,1019,1024,1028,1033,1038,1043,1047,1051,1056,1060,1064,1069,1073,1077,1081,1086,1090,1094,1098],{"type":510,"tag":537,"props":998,"children":999},{"style":719},[1000],{"type":515,"value":1001},"    dp",{"type":510,"tag":537,"props":1003,"children":1004},{"style":691},[1005],{"type":515,"value":844},{"type":510,"tag":537,"props":1007,"children":1008},{"style":719},[1009],{"type":515,"value":1010},"i",{"type":510,"tag":537,"props":1012,"children":1013},{"style":691},[1014],{"type":515,"value":855},{"type":510,"tag":537,"props":1016,"children":1017},{"style":691},[1018],{"type":515,"value":782},{"type":510,"tag":537,"props":1020,"children":1021},{"style":719},[1022],{"type":515,"value":1023}," Math",{"type":510,"tag":537,"props":1025,"children":1026},{"style":691},[1027],{"type":515,"value":965},{"type":510,"tag":537,"props":1029,"children":1030},{"style":774},[1031],{"type":515,"value":1032},"max",{"type":510,"tag":537,"props":1034,"children":1035},{"style":691},[1036],{"type":515,"value":1037},"(",{"type":510,"tag":537,"props":1039,"children":1040},{"style":719},[1041],{"type":515,"value":1042},"dp",{"type":510,"tag":537,"props":1044,"children":1045},{"style":691},[1046],{"type":515,"value":844},{"type":510,"tag":537,"props":1048,"children":1049},{"style":719},[1050],{"type":515,"value":1010},{"type":510,"tag":537,"props":1052,"children":1053},{"style":768},[1054],{"type":515,"value":1055}," -",{"type":510,"tag":537,"props":1057,"children":1058},{"style":847},[1059],{"type":515,"value":942},{"type":510,"tag":537,"props":1061,"children":1062},{"style":691},[1063],{"type":515,"value":855},{"type":510,"tag":537,"props":1065,"children":1066},{"style":768},[1067],{"type":515,"value":1068}," +",{"type":510,"tag":537,"props":1070,"children":1071},{"style":719},[1072],{"type":515,"value":864},{"type":510,"tag":537,"props":1074,"children":1075},{"style":691},[1076],{"type":515,"value":844},{"type":510,"tag":537,"props":1078,"children":1079},{"style":719},[1080],{"type":515,"value":1010},{"type":510,"tag":537,"props":1082,"children":1083},{"style":691},[1084],{"type":515,"value":1085},"],",{"type":510,"tag":537,"props":1087,"children":1088},{"style":719},[1089],{"type":515,"value":864},{"type":510,"tag":537,"props":1091,"children":1092},{"style":691},[1093],{"type":515,"value":844},{"type":510,"tag":537,"props":1095,"children":1096},{"style":719},[1097],{"type":515,"value":1010},{"type":510,"tag":537,"props":1099,"children":1100},{"style":691},[1101],{"type":515,"value":1102},"]);\n",{"type":510,"tag":537,"props":1104,"children":1106},{"class":539,"line":1105},11,[1107,1112,1116,1120,1124,1128,1132,1137,1142,1146,1150,1154],{"type":510,"tag":537,"props":1108,"children":1109},{"style":719},[1110],{"type":515,"value":1111},"    res",{"type":510,"tag":537,"props":1113,"children":1114},{"style":691},[1115],{"type":515,"value":782},{"type":510,"tag":537,"props":1117,"children":1118},{"style":719},[1119],{"type":515,"value":1023},{"type":510,"tag":537,"props":1121,"children":1122},{"style":691},[1123],{"type":515,"value":965},{"type":510,"tag":537,"props":1125,"children":1126},{"style":774},[1127],{"type":515,"value":1032},{"type":510,"tag":537,"props":1129,"children":1130},{"style":691},[1131],{"type":515,"value":1037},{"type":510,"tag":537,"props":1133,"children":1134},{"style":719},[1135],{"type":515,"value":1136},"res",{"type":510,"tag":537,"props":1138,"children":1139},{"style":691},[1140],{"type":515,"value":1141},",",{"type":510,"tag":537,"props":1143,"children":1144},{"style":719},[1145],{"type":515,"value":821},{"type":510,"tag":537,"props":1147,"children":1148},{"style":691},[1149],{"type":515,"value":844},{"type":510,"tag":537,"props":1151,"children":1152},{"style":719},[1153],{"type":515,"value":1010},{"type":510,"tag":537,"props":1155,"children":1156},{"style":691},[1157],{"type":515,"value":1102},{"type":510,"tag":537,"props":1159,"children":1161},{"class":539,"line":1160},12,[1162],{"type":510,"tag":537,"props":1163,"children":1164},{"style":691},[1165],{"type":515,"value":1166},"  }\n",{"type":510,"tag":537,"props":1168,"children":1170},{"class":539,"line":1169},13,[1171,1176,1180],{"type":510,"tag":537,"props":1172,"children":1173},{"style":697},[1174],{"type":515,"value":1175},"  return",{"type":510,"tag":537,"props":1177,"children":1178},{"style":719},[1179],{"type":515,"value":890},{"type":510,"tag":537,"props":1181,"children":1182},{"style":691},[1183],{"type":515,"value":1184},";\n",{"type":510,"tag":537,"props":1186,"children":1188},{"class":539,"line":1187},14,[1189],{"type":510,"tag":537,"props":1190,"children":1191},{"style":691},[1192],{"type":515,"value":1193},"};\n",{"type":510,"tag":1195,"props":1196,"children":1197},"style",{},[1198],{"type":515,"value":1199},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":503,"searchDepth":764,"depth":764,"links":1201},[1202,1203],{"id":649,"depth":549,"text":649},{"id":654,"depth":549,"text":654,"children":1204},[1205],{"id":660,"depth":558,"text":660},"markdown","content:1.algorithm:3.leetcode:3.major:53.maximum-subarray.md","content","1.algorithm/3.leetcode/3.major/53.maximum-subarray.md","md",[1212,1214],{"_path":123,"title":122,"description":1213},"给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。",{"_path":129,"title":128,"description":1215},"以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [start_i, end_i] 。请你合并所有重叠的区间，并返回 一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间 。",1714054336879]