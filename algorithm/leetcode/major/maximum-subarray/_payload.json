[{"data":1,"prerenderedAt":1219},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/maximum-subarray":503,"/algorithm/leetcode/major/maximum-subarray-surround":1214},[4,269,298,471,479,488],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":470},"代码考核","/code-assessment",[302,370,463],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":371,"_path":372,"children":373},"业务场景","/code-assessment/scene",[374,399,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460],{"title":375,"_path":376,"children":377},"Promise","/code-assessment/scene/promise",[378,381,384,387,390,393,396],{"title":379,"_path":380},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":382,"_path":383},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":385,"_path":386},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":388,"_path":389},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":391,"_path":392},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":394,"_path":395},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":397,"_path":398},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":400,"_path":401,"children":402},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[403,406],{"title":404,"_path":405},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":407,"_path":408},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":410,"_path":411},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":413,"_path":414},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":416,"_path":417},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":419,"_path":420},"倒计时","/code-assessment/scene/countdown",{"title":422,"_path":423},"日期格式化","/code-assessment/scene/date-format",{"title":425,"_path":426},"实现前端路由","/code-assessment/scene/frontend-route",{"title":428,"_path":429},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":431,"_path":432},"lodash.get","/code-assessment/scene/lodash-get",{"title":434,"_path":435},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":437,"_path":438},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":440,"_path":441},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":443,"_path":444},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":446,"_path":447},"随机数","/code-assessment/scene/random-number",{"title":449,"_path":450},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":452,"_path":453},"sku 算法实现","/code-assessment/scene/sku",{"title":455,"_path":456},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":458,"_path":459},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":461,"_path":462},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":464,"_path":465,"children":466},"Ts 类型挑战","/code-assessment/type-challeges",[467],{"title":468,"_path":469},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":472,"_path":473,"children":474,"icon":478},"项目","/project",[475],{"title":476,"_path":477},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":480,"_path":481,"children":482,"icon":487},"设计模式","/design-mode",[483,484],{"title":480,"_path":481},{"title":485,"_path":486},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":489,"_path":490,"children":491,"icon":502},"后端语言","/backend-languages",[492],{"title":493,"_path":494,"children":495},"Python","/backend-languages/python",[496,499],{"title":497,"_path":498},"基础","/backend-languages/python/base",{"title":500,"_path":501},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":126,"_dir":504,"_draft":505,"_partial":505,"_locale":506,"title":125,"description":507,"url":508,"body":509,"_type":1209,"_id":1210,"_source":1211,"_file":1212,"_extension":1213},"major",false,"","给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。","https://leetcode.cn/problems/maximum-subarray",{"type":510,"children":511,"toc":1203},"root",[512,519,524,529,568,573,596,601,624,629,644,649,655,660,666,1197],{"type":513,"tag":514,"props":515,"children":516},"element","p",{},[517],{"type":518,"value":507},"text",{"type":513,"tag":514,"props":520,"children":521},{},[522],{"type":518,"value":523},"子数组\n是数组中的一个连续部分。",{"type":513,"tag":514,"props":525,"children":526},{},[527],{"type":518,"value":528},"示例 1：",{"type":513,"tag":530,"props":531,"children":534},"pre",{"className":532,"code":533,"language":518,"meta":506,"style":506},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n输出：6\n解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",[535],{"type":513,"tag":536,"props":537,"children":538},"code",{"__ignoreMap":506},[539,550,559],{"type":513,"tag":540,"props":541,"children":544},"span",{"class":542,"line":543},"line",1,[545],{"type":513,"tag":540,"props":546,"children":547},{},[548],{"type":518,"value":549},"输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n",{"type":513,"tag":540,"props":551,"children":553},{"class":542,"line":552},2,[554],{"type":513,"tag":540,"props":555,"children":556},{},[557],{"type":518,"value":558},"输出：6\n",{"type":513,"tag":540,"props":560,"children":562},{"class":542,"line":561},3,[563],{"type":513,"tag":540,"props":564,"children":565},{},[566],{"type":518,"value":567},"解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",{"type":513,"tag":514,"props":569,"children":570},{},[571],{"type":518,"value":572},"示例 2：",{"type":513,"tag":530,"props":574,"children":576},{"className":532,"code":575,"language":518,"meta":506,"style":506},"输入：nums = [1]\n输出：1\n",[577],{"type":513,"tag":536,"props":578,"children":579},{"__ignoreMap":506},[580,588],{"type":513,"tag":540,"props":581,"children":582},{"class":542,"line":543},[583],{"type":513,"tag":540,"props":584,"children":585},{},[586],{"type":518,"value":587},"输入：nums = [1]\n",{"type":513,"tag":540,"props":589,"children":590},{"class":542,"line":552},[591],{"type":513,"tag":540,"props":592,"children":593},{},[594],{"type":518,"value":595},"输出：1\n",{"type":513,"tag":514,"props":597,"children":598},{},[599],{"type":518,"value":600},"示例 3：",{"type":513,"tag":530,"props":602,"children":604},{"className":532,"code":603,"language":518,"meta":506,"style":506},"输入：nums = [5,4,-1,7,8]\n输出：23\n",[605],{"type":513,"tag":536,"props":606,"children":607},{"__ignoreMap":506},[608,616],{"type":513,"tag":540,"props":609,"children":610},{"class":542,"line":543},[611],{"type":513,"tag":540,"props":612,"children":613},{},[614],{"type":518,"value":615},"输入：nums = [5,4,-1,7,8]\n",{"type":513,"tag":540,"props":617,"children":618},{"class":542,"line":552},[619],{"type":513,"tag":540,"props":620,"children":621},{},[622],{"type":518,"value":623},"输出：23\n",{"type":513,"tag":514,"props":625,"children":626},{},[627],{"type":518,"value":628},"提示：",{"type":513,"tag":630,"props":631,"children":632},"ul",{},[633,639],{"type":513,"tag":634,"props":635,"children":636},"li",{},[637],{"type":518,"value":638},"1 \u003C= nums.length \u003C= 105",{"type":513,"tag":634,"props":640,"children":641},{},[642],{"type":518,"value":643},"-104 \u003C= nums[i] \u003C= 104",{"type":513,"tag":514,"props":645,"children":646},{},[647],{"type":518,"value":648},"进阶：如果你已经实现复杂度为 O(n) 的解法，尝试使用更为精妙的 分治法 求解。",{"type":513,"tag":650,"props":651,"children":653},"h2",{"id":652},"解题思路",[654],{"type":518,"value":652},{"type":513,"tag":650,"props":656,"children":658},{"id":657},"实现",[659],{"type":518,"value":657},{"type":513,"tag":661,"props":662,"children":664},"h3",{"id":663},"动态规划",[665],{"type":518,"value":663},{"type":513,"tag":530,"props":667,"children":671},{"className":668,"code":669,"language":670,"meta":506,"style":506},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSubArray = function (nums) {\n  let dp = [];\n  dp[0] = nums[0];\n  let res = dp[0];\n  for (let i = 1; i \u003C nums.length; i++) {\n    dp[i] = Math.max(dp[i - 1] + nums[i], nums[i]);\n    res = Math.max(res, dp[i]);\n  }\n  return res;\n};\n","js",[672],{"type":513,"tag":536,"props":673,"children":674},{"__ignoreMap":506},[675,684,726,756,765,811,834,881,914,996,1106,1161,1170,1188],{"type":513,"tag":540,"props":676,"children":677},{"class":542,"line":543},[678],{"type":513,"tag":540,"props":679,"children":681},{"style":680},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[682],{"type":518,"value":683},"/**\n",{"type":513,"tag":540,"props":685,"children":686},{"class":542,"line":552},[687,692,698,704,709,715,720],{"type":513,"tag":540,"props":688,"children":689},{"style":680},[690],{"type":518,"value":691}," * ",{"type":513,"tag":540,"props":693,"children":695},{"style":694},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[696],{"type":518,"value":697},"@",{"type":513,"tag":540,"props":699,"children":701},{"style":700},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[702],{"type":518,"value":703},"param",{"type":513,"tag":540,"props":705,"children":706},{"style":694},[707],{"type":518,"value":708}," {",{"type":513,"tag":540,"props":710,"children":712},{"style":711},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[713],{"type":518,"value":714},"number[]",{"type":513,"tag":540,"props":716,"children":717},{"style":694},[718],{"type":518,"value":719},"}",{"type":513,"tag":540,"props":721,"children":723},{"style":722},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[724],{"type":518,"value":725}," nums\n",{"type":513,"tag":540,"props":727,"children":728},{"class":542,"line":561},[729,733,737,742,746,751],{"type":513,"tag":540,"props":730,"children":731},{"style":680},[732],{"type":518,"value":691},{"type":513,"tag":540,"props":734,"children":735},{"style":694},[736],{"type":518,"value":697},{"type":513,"tag":540,"props":738,"children":739},{"style":700},[740],{"type":518,"value":741},"return",{"type":513,"tag":540,"props":743,"children":744},{"style":694},[745],{"type":518,"value":708},{"type":513,"tag":540,"props":747,"children":748},{"style":711},[749],{"type":518,"value":750},"number",{"type":513,"tag":540,"props":752,"children":753},{"style":694},[754],{"type":518,"value":755},"}\n",{"type":513,"tag":540,"props":757,"children":759},{"class":542,"line":758},4,[760],{"type":513,"tag":540,"props":761,"children":762},{"style":680},[763],{"type":518,"value":764}," */\n",{"type":513,"tag":540,"props":766,"children":768},{"class":542,"line":767},5,[769,775,781,786,791,796,801,806],{"type":513,"tag":540,"props":770,"children":772},{"style":771},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[773],{"type":518,"value":774},"var",{"type":513,"tag":540,"props":776,"children":778},{"style":777},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[779],{"type":518,"value":780}," maxSubArray",{"type":513,"tag":540,"props":782,"children":783},{"style":694},[784],{"type":518,"value":785}," =",{"type":513,"tag":540,"props":787,"children":788},{"style":771},[789],{"type":518,"value":790}," function",{"type":513,"tag":540,"props":792,"children":793},{"style":694},[794],{"type":518,"value":795}," (",{"type":513,"tag":540,"props":797,"children":798},{"style":722},[799],{"type":518,"value":800},"nums",{"type":513,"tag":540,"props":802,"children":803},{"style":694},[804],{"type":518,"value":805},")",{"type":513,"tag":540,"props":807,"children":808},{"style":694},[809],{"type":518,"value":810}," {\n",{"type":513,"tag":540,"props":812,"children":814},{"class":542,"line":813},6,[815,820,825,829],{"type":513,"tag":540,"props":816,"children":817},{"style":771},[818],{"type":518,"value":819},"  let",{"type":513,"tag":540,"props":821,"children":822},{"style":722},[823],{"type":518,"value":824}," dp",{"type":513,"tag":540,"props":826,"children":827},{"style":694},[828],{"type":518,"value":785},{"type":513,"tag":540,"props":830,"children":831},{"style":694},[832],{"type":518,"value":833}," [];\n",{"type":513,"tag":540,"props":835,"children":837},{"class":542,"line":836},7,[838,843,848,854,859,863,868,872,876],{"type":513,"tag":540,"props":839,"children":840},{"style":722},[841],{"type":518,"value":842},"  dp",{"type":513,"tag":540,"props":844,"children":845},{"style":694},[846],{"type":518,"value":847},"[",{"type":513,"tag":540,"props":849,"children":851},{"style":850},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[852],{"type":518,"value":853},"0",{"type":513,"tag":540,"props":855,"children":856},{"style":694},[857],{"type":518,"value":858},"]",{"type":513,"tag":540,"props":860,"children":861},{"style":694},[862],{"type":518,"value":785},{"type":513,"tag":540,"props":864,"children":865},{"style":722},[866],{"type":518,"value":867}," nums",{"type":513,"tag":540,"props":869,"children":870},{"style":694},[871],{"type":518,"value":847},{"type":513,"tag":540,"props":873,"children":874},{"style":850},[875],{"type":518,"value":853},{"type":513,"tag":540,"props":877,"children":878},{"style":694},[879],{"type":518,"value":880},"];\n",{"type":513,"tag":540,"props":882,"children":884},{"class":542,"line":883},8,[885,889,894,898,902,906,910],{"type":513,"tag":540,"props":886,"children":887},{"style":771},[888],{"type":518,"value":819},{"type":513,"tag":540,"props":890,"children":891},{"style":722},[892],{"type":518,"value":893}," res",{"type":513,"tag":540,"props":895,"children":896},{"style":694},[897],{"type":518,"value":785},{"type":513,"tag":540,"props":899,"children":900},{"style":722},[901],{"type":518,"value":824},{"type":513,"tag":540,"props":903,"children":904},{"style":694},[905],{"type":518,"value":847},{"type":513,"tag":540,"props":907,"children":908},{"style":850},[909],{"type":518,"value":853},{"type":513,"tag":540,"props":911,"children":912},{"style":694},[913],{"type":518,"value":880},{"type":513,"tag":540,"props":915,"children":917},{"class":542,"line":916},9,[918,923,927,932,937,941,946,951,955,960,964,969,975,979,983,988,992],{"type":513,"tag":540,"props":919,"children":920},{"style":700},[921],{"type":518,"value":922},"  for",{"type":513,"tag":540,"props":924,"children":925},{"style":694},[926],{"type":518,"value":795},{"type":513,"tag":540,"props":928,"children":929},{"style":771},[930],{"type":518,"value":931},"let",{"type":513,"tag":540,"props":933,"children":934},{"style":722},[935],{"type":518,"value":936}," i",{"type":513,"tag":540,"props":938,"children":939},{"style":694},[940],{"type":518,"value":785},{"type":513,"tag":540,"props":942,"children":943},{"style":850},[944],{"type":518,"value":945}," 1",{"type":513,"tag":540,"props":947,"children":948},{"style":694},[949],{"type":518,"value":950},";",{"type":513,"tag":540,"props":952,"children":953},{"style":722},[954],{"type":518,"value":936},{"type":513,"tag":540,"props":956,"children":957},{"style":694},[958],{"type":518,"value":959}," \u003C",{"type":513,"tag":540,"props":961,"children":962},{"style":722},[963],{"type":518,"value":867},{"type":513,"tag":540,"props":965,"children":966},{"style":694},[967],{"type":518,"value":968},".",{"type":513,"tag":540,"props":970,"children":972},{"style":971},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[973],{"type":518,"value":974},"length",{"type":513,"tag":540,"props":976,"children":977},{"style":694},[978],{"type":518,"value":950},{"type":513,"tag":540,"props":980,"children":981},{"style":722},[982],{"type":518,"value":936},{"type":513,"tag":540,"props":984,"children":985},{"style":771},[986],{"type":518,"value":987},"++",{"type":513,"tag":540,"props":989,"children":990},{"style":694},[991],{"type":518,"value":805},{"type":513,"tag":540,"props":993,"children":994},{"style":694},[995],{"type":518,"value":810},{"type":513,"tag":540,"props":997,"children":999},{"class":542,"line":998},10,[1000,1005,1009,1014,1018,1022,1027,1031,1036,1041,1046,1050,1054,1059,1063,1067,1072,1076,1080,1084,1089,1093,1097,1101],{"type":513,"tag":540,"props":1001,"children":1002},{"style":722},[1003],{"type":518,"value":1004},"    dp",{"type":513,"tag":540,"props":1006,"children":1007},{"style":694},[1008],{"type":518,"value":847},{"type":513,"tag":540,"props":1010,"children":1011},{"style":722},[1012],{"type":518,"value":1013},"i",{"type":513,"tag":540,"props":1015,"children":1016},{"style":694},[1017],{"type":518,"value":858},{"type":513,"tag":540,"props":1019,"children":1020},{"style":694},[1021],{"type":518,"value":785},{"type":513,"tag":540,"props":1023,"children":1024},{"style":722},[1025],{"type":518,"value":1026}," Math",{"type":513,"tag":540,"props":1028,"children":1029},{"style":694},[1030],{"type":518,"value":968},{"type":513,"tag":540,"props":1032,"children":1033},{"style":777},[1034],{"type":518,"value":1035},"max",{"type":513,"tag":540,"props":1037,"children":1038},{"style":694},[1039],{"type":518,"value":1040},"(",{"type":513,"tag":540,"props":1042,"children":1043},{"style":722},[1044],{"type":518,"value":1045},"dp",{"type":513,"tag":540,"props":1047,"children":1048},{"style":694},[1049],{"type":518,"value":847},{"type":513,"tag":540,"props":1051,"children":1052},{"style":722},[1053],{"type":518,"value":1013},{"type":513,"tag":540,"props":1055,"children":1056},{"style":771},[1057],{"type":518,"value":1058}," -",{"type":513,"tag":540,"props":1060,"children":1061},{"style":850},[1062],{"type":518,"value":945},{"type":513,"tag":540,"props":1064,"children":1065},{"style":694},[1066],{"type":518,"value":858},{"type":513,"tag":540,"props":1068,"children":1069},{"style":771},[1070],{"type":518,"value":1071}," +",{"type":513,"tag":540,"props":1073,"children":1074},{"style":722},[1075],{"type":518,"value":867},{"type":513,"tag":540,"props":1077,"children":1078},{"style":694},[1079],{"type":518,"value":847},{"type":513,"tag":540,"props":1081,"children":1082},{"style":722},[1083],{"type":518,"value":1013},{"type":513,"tag":540,"props":1085,"children":1086},{"style":694},[1087],{"type":518,"value":1088},"],",{"type":513,"tag":540,"props":1090,"children":1091},{"style":722},[1092],{"type":518,"value":867},{"type":513,"tag":540,"props":1094,"children":1095},{"style":694},[1096],{"type":518,"value":847},{"type":513,"tag":540,"props":1098,"children":1099},{"style":722},[1100],{"type":518,"value":1013},{"type":513,"tag":540,"props":1102,"children":1103},{"style":694},[1104],{"type":518,"value":1105},"]);\n",{"type":513,"tag":540,"props":1107,"children":1109},{"class":542,"line":1108},11,[1110,1115,1119,1123,1127,1131,1135,1140,1145,1149,1153,1157],{"type":513,"tag":540,"props":1111,"children":1112},{"style":722},[1113],{"type":518,"value":1114},"    res",{"type":513,"tag":540,"props":1116,"children":1117},{"style":694},[1118],{"type":518,"value":785},{"type":513,"tag":540,"props":1120,"children":1121},{"style":722},[1122],{"type":518,"value":1026},{"type":513,"tag":540,"props":1124,"children":1125},{"style":694},[1126],{"type":518,"value":968},{"type":513,"tag":540,"props":1128,"children":1129},{"style":777},[1130],{"type":518,"value":1035},{"type":513,"tag":540,"props":1132,"children":1133},{"style":694},[1134],{"type":518,"value":1040},{"type":513,"tag":540,"props":1136,"children":1137},{"style":722},[1138],{"type":518,"value":1139},"res",{"type":513,"tag":540,"props":1141,"children":1142},{"style":694},[1143],{"type":518,"value":1144},",",{"type":513,"tag":540,"props":1146,"children":1147},{"style":722},[1148],{"type":518,"value":824},{"type":513,"tag":540,"props":1150,"children":1151},{"style":694},[1152],{"type":518,"value":847},{"type":513,"tag":540,"props":1154,"children":1155},{"style":722},[1156],{"type":518,"value":1013},{"type":513,"tag":540,"props":1158,"children":1159},{"style":694},[1160],{"type":518,"value":1105},{"type":513,"tag":540,"props":1162,"children":1164},{"class":542,"line":1163},12,[1165],{"type":513,"tag":540,"props":1166,"children":1167},{"style":694},[1168],{"type":518,"value":1169},"  }\n",{"type":513,"tag":540,"props":1171,"children":1173},{"class":542,"line":1172},13,[1174,1179,1183],{"type":513,"tag":540,"props":1175,"children":1176},{"style":700},[1177],{"type":518,"value":1178},"  return",{"type":513,"tag":540,"props":1180,"children":1181},{"style":722},[1182],{"type":518,"value":893},{"type":513,"tag":540,"props":1184,"children":1185},{"style":694},[1186],{"type":518,"value":1187},";\n",{"type":513,"tag":540,"props":1189,"children":1191},{"class":542,"line":1190},14,[1192],{"type":513,"tag":540,"props":1193,"children":1194},{"style":694},[1195],{"type":518,"value":1196},"};\n",{"type":513,"tag":1198,"props":1199,"children":1200},"style",{},[1201],{"type":518,"value":1202},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":506,"searchDepth":767,"depth":767,"links":1204},[1205,1206],{"id":652,"depth":552,"text":652},{"id":657,"depth":552,"text":657,"children":1207},[1208],{"id":663,"depth":561,"text":663},"markdown","content:1.algorithm:3.leetcode:3.major:53.maximum-subarray.md","content","1.algorithm/3.leetcode/3.major/53.maximum-subarray.md","md",[1215,1217],{"_path":123,"title":122,"description":1216},"给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。",{"_path":129,"title":128,"description":1218},"以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [start_i, end_i] 。请你合并所有重叠的区间，并返回 一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间 。",1714056093781]