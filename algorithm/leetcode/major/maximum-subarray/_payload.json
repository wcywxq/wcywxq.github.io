[{"data":1,"prerenderedAt":1259},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/maximum-subarray":543,"/algorithm/leetcode/major/maximum-subarray-surround":1254},[4,269,298,511,519,528],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":510},"代码考核","/code-assessment",[302,404,503],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":498,"_path":499},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":501,"_path":502},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":504,"_path":505,"children":506},"Ts 类型挑战","/code-assessment/type-challeges",[507],{"title":508,"_path":509},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":512,"_path":513,"children":514,"icon":518},"项目","/project",[515],{"title":516,"_path":517},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":520,"_path":521,"children":522,"icon":527},"设计模式","/design-mode",[523,524],{"title":520,"_path":521},{"title":525,"_path":526},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":529,"_path":530,"children":531,"icon":542},"后端语言","/backend-languages",[532],{"title":533,"_path":534,"children":535},"Python","/backend-languages/python",[536,539],{"title":537,"_path":538},"基础","/backend-languages/python/base",{"title":540,"_path":541},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":126,"_dir":544,"_draft":545,"_partial":545,"_locale":546,"title":125,"description":547,"url":548,"body":549,"_type":1249,"_id":1250,"_source":1251,"_file":1252,"_extension":1253},"major",false,"","给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。","https://leetcode.cn/problems/maximum-subarray",{"type":550,"children":551,"toc":1243},"root",[552,559,564,569,608,613,636,641,664,669,684,689,695,700,706,1237],{"type":553,"tag":554,"props":555,"children":556},"element","p",{},[557],{"type":558,"value":547},"text",{"type":553,"tag":554,"props":560,"children":561},{},[562],{"type":558,"value":563},"子数组\n是数组中的一个连续部分。",{"type":553,"tag":554,"props":565,"children":566},{},[567],{"type":558,"value":568},"示例 1：",{"type":553,"tag":570,"props":571,"children":574},"pre",{"className":572,"code":573,"language":558,"meta":546,"style":546},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n输出：6\n解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",[575],{"type":553,"tag":576,"props":577,"children":578},"code",{"__ignoreMap":546},[579,590,599],{"type":553,"tag":580,"props":581,"children":584},"span",{"class":582,"line":583},"line",1,[585],{"type":553,"tag":580,"props":586,"children":587},{},[588],{"type":558,"value":589},"输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n",{"type":553,"tag":580,"props":591,"children":593},{"class":582,"line":592},2,[594],{"type":553,"tag":580,"props":595,"children":596},{},[597],{"type":558,"value":598},"输出：6\n",{"type":553,"tag":580,"props":600,"children":602},{"class":582,"line":601},3,[603],{"type":553,"tag":580,"props":604,"children":605},{},[606],{"type":558,"value":607},"解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",{"type":553,"tag":554,"props":609,"children":610},{},[611],{"type":558,"value":612},"示例 2：",{"type":553,"tag":570,"props":614,"children":616},{"className":572,"code":615,"language":558,"meta":546,"style":546},"输入：nums = [1]\n输出：1\n",[617],{"type":553,"tag":576,"props":618,"children":619},{"__ignoreMap":546},[620,628],{"type":553,"tag":580,"props":621,"children":622},{"class":582,"line":583},[623],{"type":553,"tag":580,"props":624,"children":625},{},[626],{"type":558,"value":627},"输入：nums = [1]\n",{"type":553,"tag":580,"props":629,"children":630},{"class":582,"line":592},[631],{"type":553,"tag":580,"props":632,"children":633},{},[634],{"type":558,"value":635},"输出：1\n",{"type":553,"tag":554,"props":637,"children":638},{},[639],{"type":558,"value":640},"示例 3：",{"type":553,"tag":570,"props":642,"children":644},{"className":572,"code":643,"language":558,"meta":546,"style":546},"输入：nums = [5,4,-1,7,8]\n输出：23\n",[645],{"type":553,"tag":576,"props":646,"children":647},{"__ignoreMap":546},[648,656],{"type":553,"tag":580,"props":649,"children":650},{"class":582,"line":583},[651],{"type":553,"tag":580,"props":652,"children":653},{},[654],{"type":558,"value":655},"输入：nums = [5,4,-1,7,8]\n",{"type":553,"tag":580,"props":657,"children":658},{"class":582,"line":592},[659],{"type":553,"tag":580,"props":660,"children":661},{},[662],{"type":558,"value":663},"输出：23\n",{"type":553,"tag":554,"props":665,"children":666},{},[667],{"type":558,"value":668},"提示：",{"type":553,"tag":670,"props":671,"children":672},"ul",{},[673,679],{"type":553,"tag":674,"props":675,"children":676},"li",{},[677],{"type":558,"value":678},"1 \u003C= nums.length \u003C= 105",{"type":553,"tag":674,"props":680,"children":681},{},[682],{"type":558,"value":683},"-104 \u003C= nums[i] \u003C= 104",{"type":553,"tag":554,"props":685,"children":686},{},[687],{"type":558,"value":688},"进阶：如果你已经实现复杂度为 O(n) 的解法，尝试使用更为精妙的 分治法 求解。",{"type":553,"tag":690,"props":691,"children":693},"h2",{"id":692},"解题思路",[694],{"type":558,"value":692},{"type":553,"tag":690,"props":696,"children":698},{"id":697},"实现",[699],{"type":558,"value":697},{"type":553,"tag":701,"props":702,"children":704},"h3",{"id":703},"动态规划",[705],{"type":558,"value":703},{"type":553,"tag":570,"props":707,"children":711},{"className":708,"code":709,"language":710,"meta":546,"style":546},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSubArray = function (nums) {\n  let dp = [];\n  dp[0] = nums[0];\n  let res = dp[0];\n  for (let i = 1; i \u003C nums.length; i++) {\n    dp[i] = Math.max(dp[i - 1] + nums[i], nums[i]);\n    res = Math.max(res, dp[i]);\n  }\n  return res;\n};\n","js",[712],{"type":553,"tag":576,"props":713,"children":714},{"__ignoreMap":546},[715,724,766,796,805,851,874,921,954,1036,1146,1201,1210,1228],{"type":553,"tag":580,"props":716,"children":717},{"class":582,"line":583},[718],{"type":553,"tag":580,"props":719,"children":721},{"style":720},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[722],{"type":558,"value":723},"/**\n",{"type":553,"tag":580,"props":725,"children":726},{"class":582,"line":592},[727,732,738,744,749,755,760],{"type":553,"tag":580,"props":728,"children":729},{"style":720},[730],{"type":558,"value":731}," * ",{"type":553,"tag":580,"props":733,"children":735},{"style":734},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[736],{"type":558,"value":737},"@",{"type":553,"tag":580,"props":739,"children":741},{"style":740},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[742],{"type":558,"value":743},"param",{"type":553,"tag":580,"props":745,"children":746},{"style":734},[747],{"type":558,"value":748}," {",{"type":553,"tag":580,"props":750,"children":752},{"style":751},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[753],{"type":558,"value":754},"number[]",{"type":553,"tag":580,"props":756,"children":757},{"style":734},[758],{"type":558,"value":759},"}",{"type":553,"tag":580,"props":761,"children":763},{"style":762},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[764],{"type":558,"value":765}," nums\n",{"type":553,"tag":580,"props":767,"children":768},{"class":582,"line":601},[769,773,777,782,786,791],{"type":553,"tag":580,"props":770,"children":771},{"style":720},[772],{"type":558,"value":731},{"type":553,"tag":580,"props":774,"children":775},{"style":734},[776],{"type":558,"value":737},{"type":553,"tag":580,"props":778,"children":779},{"style":740},[780],{"type":558,"value":781},"return",{"type":553,"tag":580,"props":783,"children":784},{"style":734},[785],{"type":558,"value":748},{"type":553,"tag":580,"props":787,"children":788},{"style":751},[789],{"type":558,"value":790},"number",{"type":553,"tag":580,"props":792,"children":793},{"style":734},[794],{"type":558,"value":795},"}\n",{"type":553,"tag":580,"props":797,"children":799},{"class":582,"line":798},4,[800],{"type":553,"tag":580,"props":801,"children":802},{"style":720},[803],{"type":558,"value":804}," */\n",{"type":553,"tag":580,"props":806,"children":808},{"class":582,"line":807},5,[809,815,821,826,831,836,841,846],{"type":553,"tag":580,"props":810,"children":812},{"style":811},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[813],{"type":558,"value":814},"var",{"type":553,"tag":580,"props":816,"children":818},{"style":817},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[819],{"type":558,"value":820}," maxSubArray",{"type":553,"tag":580,"props":822,"children":823},{"style":734},[824],{"type":558,"value":825}," =",{"type":553,"tag":580,"props":827,"children":828},{"style":811},[829],{"type":558,"value":830}," function",{"type":553,"tag":580,"props":832,"children":833},{"style":734},[834],{"type":558,"value":835}," (",{"type":553,"tag":580,"props":837,"children":838},{"style":762},[839],{"type":558,"value":840},"nums",{"type":553,"tag":580,"props":842,"children":843},{"style":734},[844],{"type":558,"value":845},")",{"type":553,"tag":580,"props":847,"children":848},{"style":734},[849],{"type":558,"value":850}," {\n",{"type":553,"tag":580,"props":852,"children":854},{"class":582,"line":853},6,[855,860,865,869],{"type":553,"tag":580,"props":856,"children":857},{"style":811},[858],{"type":558,"value":859},"  let",{"type":553,"tag":580,"props":861,"children":862},{"style":762},[863],{"type":558,"value":864}," dp",{"type":553,"tag":580,"props":866,"children":867},{"style":734},[868],{"type":558,"value":825},{"type":553,"tag":580,"props":870,"children":871},{"style":734},[872],{"type":558,"value":873}," [];\n",{"type":553,"tag":580,"props":875,"children":877},{"class":582,"line":876},7,[878,883,888,894,899,903,908,912,916],{"type":553,"tag":580,"props":879,"children":880},{"style":762},[881],{"type":558,"value":882},"  dp",{"type":553,"tag":580,"props":884,"children":885},{"style":734},[886],{"type":558,"value":887},"[",{"type":553,"tag":580,"props":889,"children":891},{"style":890},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[892],{"type":558,"value":893},"0",{"type":553,"tag":580,"props":895,"children":896},{"style":734},[897],{"type":558,"value":898},"]",{"type":553,"tag":580,"props":900,"children":901},{"style":734},[902],{"type":558,"value":825},{"type":553,"tag":580,"props":904,"children":905},{"style":762},[906],{"type":558,"value":907}," nums",{"type":553,"tag":580,"props":909,"children":910},{"style":734},[911],{"type":558,"value":887},{"type":553,"tag":580,"props":913,"children":914},{"style":890},[915],{"type":558,"value":893},{"type":553,"tag":580,"props":917,"children":918},{"style":734},[919],{"type":558,"value":920},"];\n",{"type":553,"tag":580,"props":922,"children":924},{"class":582,"line":923},8,[925,929,934,938,942,946,950],{"type":553,"tag":580,"props":926,"children":927},{"style":811},[928],{"type":558,"value":859},{"type":553,"tag":580,"props":930,"children":931},{"style":762},[932],{"type":558,"value":933}," res",{"type":553,"tag":580,"props":935,"children":936},{"style":734},[937],{"type":558,"value":825},{"type":553,"tag":580,"props":939,"children":940},{"style":762},[941],{"type":558,"value":864},{"type":553,"tag":580,"props":943,"children":944},{"style":734},[945],{"type":558,"value":887},{"type":553,"tag":580,"props":947,"children":948},{"style":890},[949],{"type":558,"value":893},{"type":553,"tag":580,"props":951,"children":952},{"style":734},[953],{"type":558,"value":920},{"type":553,"tag":580,"props":955,"children":957},{"class":582,"line":956},9,[958,963,967,972,977,981,986,991,995,1000,1004,1009,1015,1019,1023,1028,1032],{"type":553,"tag":580,"props":959,"children":960},{"style":740},[961],{"type":558,"value":962},"  for",{"type":553,"tag":580,"props":964,"children":965},{"style":734},[966],{"type":558,"value":835},{"type":553,"tag":580,"props":968,"children":969},{"style":811},[970],{"type":558,"value":971},"let",{"type":553,"tag":580,"props":973,"children":974},{"style":762},[975],{"type":558,"value":976}," i",{"type":553,"tag":580,"props":978,"children":979},{"style":734},[980],{"type":558,"value":825},{"type":553,"tag":580,"props":982,"children":983},{"style":890},[984],{"type":558,"value":985}," 1",{"type":553,"tag":580,"props":987,"children":988},{"style":734},[989],{"type":558,"value":990},";",{"type":553,"tag":580,"props":992,"children":993},{"style":762},[994],{"type":558,"value":976},{"type":553,"tag":580,"props":996,"children":997},{"style":734},[998],{"type":558,"value":999}," \u003C",{"type":553,"tag":580,"props":1001,"children":1002},{"style":762},[1003],{"type":558,"value":907},{"type":553,"tag":580,"props":1005,"children":1006},{"style":734},[1007],{"type":558,"value":1008},".",{"type":553,"tag":580,"props":1010,"children":1012},{"style":1011},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1013],{"type":558,"value":1014},"length",{"type":553,"tag":580,"props":1016,"children":1017},{"style":734},[1018],{"type":558,"value":990},{"type":553,"tag":580,"props":1020,"children":1021},{"style":762},[1022],{"type":558,"value":976},{"type":553,"tag":580,"props":1024,"children":1025},{"style":811},[1026],{"type":558,"value":1027},"++",{"type":553,"tag":580,"props":1029,"children":1030},{"style":734},[1031],{"type":558,"value":845},{"type":553,"tag":580,"props":1033,"children":1034},{"style":734},[1035],{"type":558,"value":850},{"type":553,"tag":580,"props":1037,"children":1039},{"class":582,"line":1038},10,[1040,1045,1049,1054,1058,1062,1067,1071,1076,1081,1086,1090,1094,1099,1103,1107,1112,1116,1120,1124,1129,1133,1137,1141],{"type":553,"tag":580,"props":1041,"children":1042},{"style":762},[1043],{"type":558,"value":1044},"    dp",{"type":553,"tag":580,"props":1046,"children":1047},{"style":734},[1048],{"type":558,"value":887},{"type":553,"tag":580,"props":1050,"children":1051},{"style":762},[1052],{"type":558,"value":1053},"i",{"type":553,"tag":580,"props":1055,"children":1056},{"style":734},[1057],{"type":558,"value":898},{"type":553,"tag":580,"props":1059,"children":1060},{"style":734},[1061],{"type":558,"value":825},{"type":553,"tag":580,"props":1063,"children":1064},{"style":762},[1065],{"type":558,"value":1066}," Math",{"type":553,"tag":580,"props":1068,"children":1069},{"style":734},[1070],{"type":558,"value":1008},{"type":553,"tag":580,"props":1072,"children":1073},{"style":817},[1074],{"type":558,"value":1075},"max",{"type":553,"tag":580,"props":1077,"children":1078},{"style":734},[1079],{"type":558,"value":1080},"(",{"type":553,"tag":580,"props":1082,"children":1083},{"style":762},[1084],{"type":558,"value":1085},"dp",{"type":553,"tag":580,"props":1087,"children":1088},{"style":734},[1089],{"type":558,"value":887},{"type":553,"tag":580,"props":1091,"children":1092},{"style":762},[1093],{"type":558,"value":1053},{"type":553,"tag":580,"props":1095,"children":1096},{"style":811},[1097],{"type":558,"value":1098}," -",{"type":553,"tag":580,"props":1100,"children":1101},{"style":890},[1102],{"type":558,"value":985},{"type":553,"tag":580,"props":1104,"children":1105},{"style":734},[1106],{"type":558,"value":898},{"type":553,"tag":580,"props":1108,"children":1109},{"style":811},[1110],{"type":558,"value":1111}," +",{"type":553,"tag":580,"props":1113,"children":1114},{"style":762},[1115],{"type":558,"value":907},{"type":553,"tag":580,"props":1117,"children":1118},{"style":734},[1119],{"type":558,"value":887},{"type":553,"tag":580,"props":1121,"children":1122},{"style":762},[1123],{"type":558,"value":1053},{"type":553,"tag":580,"props":1125,"children":1126},{"style":734},[1127],{"type":558,"value":1128},"],",{"type":553,"tag":580,"props":1130,"children":1131},{"style":762},[1132],{"type":558,"value":907},{"type":553,"tag":580,"props":1134,"children":1135},{"style":734},[1136],{"type":558,"value":887},{"type":553,"tag":580,"props":1138,"children":1139},{"style":762},[1140],{"type":558,"value":1053},{"type":553,"tag":580,"props":1142,"children":1143},{"style":734},[1144],{"type":558,"value":1145},"]);\n",{"type":553,"tag":580,"props":1147,"children":1149},{"class":582,"line":1148},11,[1150,1155,1159,1163,1167,1171,1175,1180,1185,1189,1193,1197],{"type":553,"tag":580,"props":1151,"children":1152},{"style":762},[1153],{"type":558,"value":1154},"    res",{"type":553,"tag":580,"props":1156,"children":1157},{"style":734},[1158],{"type":558,"value":825},{"type":553,"tag":580,"props":1160,"children":1161},{"style":762},[1162],{"type":558,"value":1066},{"type":553,"tag":580,"props":1164,"children":1165},{"style":734},[1166],{"type":558,"value":1008},{"type":553,"tag":580,"props":1168,"children":1169},{"style":817},[1170],{"type":558,"value":1075},{"type":553,"tag":580,"props":1172,"children":1173},{"style":734},[1174],{"type":558,"value":1080},{"type":553,"tag":580,"props":1176,"children":1177},{"style":762},[1178],{"type":558,"value":1179},"res",{"type":553,"tag":580,"props":1181,"children":1182},{"style":734},[1183],{"type":558,"value":1184},",",{"type":553,"tag":580,"props":1186,"children":1187},{"style":762},[1188],{"type":558,"value":864},{"type":553,"tag":580,"props":1190,"children":1191},{"style":734},[1192],{"type":558,"value":887},{"type":553,"tag":580,"props":1194,"children":1195},{"style":762},[1196],{"type":558,"value":1053},{"type":553,"tag":580,"props":1198,"children":1199},{"style":734},[1200],{"type":558,"value":1145},{"type":553,"tag":580,"props":1202,"children":1204},{"class":582,"line":1203},12,[1205],{"type":553,"tag":580,"props":1206,"children":1207},{"style":734},[1208],{"type":558,"value":1209},"  }\n",{"type":553,"tag":580,"props":1211,"children":1213},{"class":582,"line":1212},13,[1214,1219,1223],{"type":553,"tag":580,"props":1215,"children":1216},{"style":740},[1217],{"type":558,"value":1218},"  return",{"type":553,"tag":580,"props":1220,"children":1221},{"style":762},[1222],{"type":558,"value":933},{"type":553,"tag":580,"props":1224,"children":1225},{"style":734},[1226],{"type":558,"value":1227},";\n",{"type":553,"tag":580,"props":1229,"children":1231},{"class":582,"line":1230},14,[1232],{"type":553,"tag":580,"props":1233,"children":1234},{"style":734},[1235],{"type":558,"value":1236},"};\n",{"type":553,"tag":1238,"props":1239,"children":1240},"style",{},[1241],{"type":558,"value":1242},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":546,"searchDepth":807,"depth":807,"links":1244},[1245,1246],{"id":692,"depth":592,"text":692},{"id":697,"depth":592,"text":697,"children":1247},[1248],{"id":703,"depth":601,"text":703},"markdown","content:1.algorithm:3.leetcode:3.major:53.maximum-subarray.md","content","1.algorithm/3.leetcode/3.major/53.maximum-subarray.md","md",[1255,1257],{"_path":123,"title":122,"description":1256},"给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。",{"_path":129,"title":128,"description":1258},"以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [start_i, end_i] 。请你合并所有重叠的区间，并返回 一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间 。",1714099677769]