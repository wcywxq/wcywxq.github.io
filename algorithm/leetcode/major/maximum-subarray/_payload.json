[{"data":1,"prerenderedAt":1222},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/maximum-subarray":506,"/algorithm/leetcode/major/maximum-subarray-surround":1217},[4,269,298,474,482,491],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":473},"代码考核","/code-assessment",[302,373,466],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":374,"_path":375,"children":376},"业务场景","/code-assessment/scene",[377,402,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463],{"title":378,"_path":379,"children":380},"Promise","/code-assessment/scene/promise",[381,384,387,390,393,396,399],{"title":382,"_path":383},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":385,"_path":386},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":388,"_path":389},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":391,"_path":392},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":394,"_path":395},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":397,"_path":398},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":400,"_path":401},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":403,"_path":404,"children":405},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[406,409],{"title":407,"_path":408},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":410,"_path":411},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":413,"_path":414},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":416,"_path":417},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":419,"_path":420},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":422,"_path":423},"倒计时","/code-assessment/scene/countdown",{"title":425,"_path":426},"日期格式化","/code-assessment/scene/date-format",{"title":428,"_path":429},"实现前端路由","/code-assessment/scene/frontend-route",{"title":431,"_path":432},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":434,"_path":435},"lodash.get","/code-assessment/scene/lodash-get",{"title":437,"_path":438},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":440,"_path":441},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":443,"_path":444},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":446,"_path":447},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":449,"_path":450},"随机数","/code-assessment/scene/random-number",{"title":452,"_path":453},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":455,"_path":456},"sku 算法实现","/code-assessment/scene/sku",{"title":458,"_path":459},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":461,"_path":462},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":464,"_path":465},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":467,"_path":468,"children":469},"Ts 类型挑战","/code-assessment/type-challeges",[470],{"title":471,"_path":472},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":475,"_path":476,"children":477,"icon":481},"项目","/project",[478],{"title":479,"_path":480},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":483,"_path":484,"children":485,"icon":490},"设计模式","/design-mode",[486,487],{"title":483,"_path":484},{"title":488,"_path":489},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":492,"_path":493,"children":494,"icon":505},"后端语言","/backend-languages",[495],{"title":496,"_path":497,"children":498},"Python","/backend-languages/python",[499,502],{"title":500,"_path":501},"基础","/backend-languages/python/base",{"title":503,"_path":504},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":126,"_dir":507,"_draft":508,"_partial":508,"_locale":509,"title":125,"description":510,"url":511,"body":512,"_type":1212,"_id":1213,"_source":1214,"_file":1215,"_extension":1216},"major",false,"","给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。","https://leetcode.cn/problems/maximum-subarray",{"type":513,"children":514,"toc":1206},"root",[515,522,527,532,571,576,599,604,627,632,647,652,658,663,669,1200],{"type":516,"tag":517,"props":518,"children":519},"element","p",{},[520],{"type":521,"value":510},"text",{"type":516,"tag":517,"props":523,"children":524},{},[525],{"type":521,"value":526},"子数组\n是数组中的一个连续部分。",{"type":516,"tag":517,"props":528,"children":529},{},[530],{"type":521,"value":531},"示例 1：",{"type":516,"tag":533,"props":534,"children":537},"pre",{"className":535,"code":536,"language":521,"meta":509,"style":509},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n输出：6\n解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",[538],{"type":516,"tag":539,"props":540,"children":541},"code",{"__ignoreMap":509},[542,553,562],{"type":516,"tag":543,"props":544,"children":547},"span",{"class":545,"line":546},"line",1,[548],{"type":516,"tag":543,"props":549,"children":550},{},[551],{"type":521,"value":552},"输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n",{"type":516,"tag":543,"props":554,"children":556},{"class":545,"line":555},2,[557],{"type":516,"tag":543,"props":558,"children":559},{},[560],{"type":521,"value":561},"输出：6\n",{"type":516,"tag":543,"props":563,"children":565},{"class":545,"line":564},3,[566],{"type":516,"tag":543,"props":567,"children":568},{},[569],{"type":521,"value":570},"解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",{"type":516,"tag":517,"props":572,"children":573},{},[574],{"type":521,"value":575},"示例 2：",{"type":516,"tag":533,"props":577,"children":579},{"className":535,"code":578,"language":521,"meta":509,"style":509},"输入：nums = [1]\n输出：1\n",[580],{"type":516,"tag":539,"props":581,"children":582},{"__ignoreMap":509},[583,591],{"type":516,"tag":543,"props":584,"children":585},{"class":545,"line":546},[586],{"type":516,"tag":543,"props":587,"children":588},{},[589],{"type":521,"value":590},"输入：nums = [1]\n",{"type":516,"tag":543,"props":592,"children":593},{"class":545,"line":555},[594],{"type":516,"tag":543,"props":595,"children":596},{},[597],{"type":521,"value":598},"输出：1\n",{"type":516,"tag":517,"props":600,"children":601},{},[602],{"type":521,"value":603},"示例 3：",{"type":516,"tag":533,"props":605,"children":607},{"className":535,"code":606,"language":521,"meta":509,"style":509},"输入：nums = [5,4,-1,7,8]\n输出：23\n",[608],{"type":516,"tag":539,"props":609,"children":610},{"__ignoreMap":509},[611,619],{"type":516,"tag":543,"props":612,"children":613},{"class":545,"line":546},[614],{"type":516,"tag":543,"props":615,"children":616},{},[617],{"type":521,"value":618},"输入：nums = [5,4,-1,7,8]\n",{"type":516,"tag":543,"props":620,"children":621},{"class":545,"line":555},[622],{"type":516,"tag":543,"props":623,"children":624},{},[625],{"type":521,"value":626},"输出：23\n",{"type":516,"tag":517,"props":628,"children":629},{},[630],{"type":521,"value":631},"提示：",{"type":516,"tag":633,"props":634,"children":635},"ul",{},[636,642],{"type":516,"tag":637,"props":638,"children":639},"li",{},[640],{"type":521,"value":641},"1 \u003C= nums.length \u003C= 105",{"type":516,"tag":637,"props":643,"children":644},{},[645],{"type":521,"value":646},"-104 \u003C= nums[i] \u003C= 104",{"type":516,"tag":517,"props":648,"children":649},{},[650],{"type":521,"value":651},"进阶：如果你已经实现复杂度为 O(n) 的解法，尝试使用更为精妙的 分治法 求解。",{"type":516,"tag":653,"props":654,"children":656},"h2",{"id":655},"解题思路",[657],{"type":521,"value":655},{"type":516,"tag":653,"props":659,"children":661},{"id":660},"实现",[662],{"type":521,"value":660},{"type":516,"tag":664,"props":665,"children":667},"h3",{"id":666},"动态规划",[668],{"type":521,"value":666},{"type":516,"tag":533,"props":670,"children":674},{"className":671,"code":672,"language":673,"meta":509,"style":509},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSubArray = function (nums) {\n  let dp = [];\n  dp[0] = nums[0];\n  let res = dp[0];\n  for (let i = 1; i \u003C nums.length; i++) {\n    dp[i] = Math.max(dp[i - 1] + nums[i], nums[i]);\n    res = Math.max(res, dp[i]);\n  }\n  return res;\n};\n","js",[675],{"type":516,"tag":539,"props":676,"children":677},{"__ignoreMap":509},[678,687,729,759,768,814,837,884,917,999,1109,1164,1173,1191],{"type":516,"tag":543,"props":679,"children":680},{"class":545,"line":546},[681],{"type":516,"tag":543,"props":682,"children":684},{"style":683},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[685],{"type":521,"value":686},"/**\n",{"type":516,"tag":543,"props":688,"children":689},{"class":545,"line":555},[690,695,701,707,712,718,723],{"type":516,"tag":543,"props":691,"children":692},{"style":683},[693],{"type":521,"value":694}," * ",{"type":516,"tag":543,"props":696,"children":698},{"style":697},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[699],{"type":521,"value":700},"@",{"type":516,"tag":543,"props":702,"children":704},{"style":703},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[705],{"type":521,"value":706},"param",{"type":516,"tag":543,"props":708,"children":709},{"style":697},[710],{"type":521,"value":711}," {",{"type":516,"tag":543,"props":713,"children":715},{"style":714},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[716],{"type":521,"value":717},"number[]",{"type":516,"tag":543,"props":719,"children":720},{"style":697},[721],{"type":521,"value":722},"}",{"type":516,"tag":543,"props":724,"children":726},{"style":725},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[727],{"type":521,"value":728}," nums\n",{"type":516,"tag":543,"props":730,"children":731},{"class":545,"line":564},[732,736,740,745,749,754],{"type":516,"tag":543,"props":733,"children":734},{"style":683},[735],{"type":521,"value":694},{"type":516,"tag":543,"props":737,"children":738},{"style":697},[739],{"type":521,"value":700},{"type":516,"tag":543,"props":741,"children":742},{"style":703},[743],{"type":521,"value":744},"return",{"type":516,"tag":543,"props":746,"children":747},{"style":697},[748],{"type":521,"value":711},{"type":516,"tag":543,"props":750,"children":751},{"style":714},[752],{"type":521,"value":753},"number",{"type":516,"tag":543,"props":755,"children":756},{"style":697},[757],{"type":521,"value":758},"}\n",{"type":516,"tag":543,"props":760,"children":762},{"class":545,"line":761},4,[763],{"type":516,"tag":543,"props":764,"children":765},{"style":683},[766],{"type":521,"value":767}," */\n",{"type":516,"tag":543,"props":769,"children":771},{"class":545,"line":770},5,[772,778,784,789,794,799,804,809],{"type":516,"tag":543,"props":773,"children":775},{"style":774},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[776],{"type":521,"value":777},"var",{"type":516,"tag":543,"props":779,"children":781},{"style":780},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[782],{"type":521,"value":783}," maxSubArray",{"type":516,"tag":543,"props":785,"children":786},{"style":697},[787],{"type":521,"value":788}," =",{"type":516,"tag":543,"props":790,"children":791},{"style":774},[792],{"type":521,"value":793}," function",{"type":516,"tag":543,"props":795,"children":796},{"style":697},[797],{"type":521,"value":798}," (",{"type":516,"tag":543,"props":800,"children":801},{"style":725},[802],{"type":521,"value":803},"nums",{"type":516,"tag":543,"props":805,"children":806},{"style":697},[807],{"type":521,"value":808},")",{"type":516,"tag":543,"props":810,"children":811},{"style":697},[812],{"type":521,"value":813}," {\n",{"type":516,"tag":543,"props":815,"children":817},{"class":545,"line":816},6,[818,823,828,832],{"type":516,"tag":543,"props":819,"children":820},{"style":774},[821],{"type":521,"value":822},"  let",{"type":516,"tag":543,"props":824,"children":825},{"style":725},[826],{"type":521,"value":827}," dp",{"type":516,"tag":543,"props":829,"children":830},{"style":697},[831],{"type":521,"value":788},{"type":516,"tag":543,"props":833,"children":834},{"style":697},[835],{"type":521,"value":836}," [];\n",{"type":516,"tag":543,"props":838,"children":840},{"class":545,"line":839},7,[841,846,851,857,862,866,871,875,879],{"type":516,"tag":543,"props":842,"children":843},{"style":725},[844],{"type":521,"value":845},"  dp",{"type":516,"tag":543,"props":847,"children":848},{"style":697},[849],{"type":521,"value":850},"[",{"type":516,"tag":543,"props":852,"children":854},{"style":853},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[855],{"type":521,"value":856},"0",{"type":516,"tag":543,"props":858,"children":859},{"style":697},[860],{"type":521,"value":861},"]",{"type":516,"tag":543,"props":863,"children":864},{"style":697},[865],{"type":521,"value":788},{"type":516,"tag":543,"props":867,"children":868},{"style":725},[869],{"type":521,"value":870}," nums",{"type":516,"tag":543,"props":872,"children":873},{"style":697},[874],{"type":521,"value":850},{"type":516,"tag":543,"props":876,"children":877},{"style":853},[878],{"type":521,"value":856},{"type":516,"tag":543,"props":880,"children":881},{"style":697},[882],{"type":521,"value":883},"];\n",{"type":516,"tag":543,"props":885,"children":887},{"class":545,"line":886},8,[888,892,897,901,905,909,913],{"type":516,"tag":543,"props":889,"children":890},{"style":774},[891],{"type":521,"value":822},{"type":516,"tag":543,"props":893,"children":894},{"style":725},[895],{"type":521,"value":896}," res",{"type":516,"tag":543,"props":898,"children":899},{"style":697},[900],{"type":521,"value":788},{"type":516,"tag":543,"props":902,"children":903},{"style":725},[904],{"type":521,"value":827},{"type":516,"tag":543,"props":906,"children":907},{"style":697},[908],{"type":521,"value":850},{"type":516,"tag":543,"props":910,"children":911},{"style":853},[912],{"type":521,"value":856},{"type":516,"tag":543,"props":914,"children":915},{"style":697},[916],{"type":521,"value":883},{"type":516,"tag":543,"props":918,"children":920},{"class":545,"line":919},9,[921,926,930,935,940,944,949,954,958,963,967,972,978,982,986,991,995],{"type":516,"tag":543,"props":922,"children":923},{"style":703},[924],{"type":521,"value":925},"  for",{"type":516,"tag":543,"props":927,"children":928},{"style":697},[929],{"type":521,"value":798},{"type":516,"tag":543,"props":931,"children":932},{"style":774},[933],{"type":521,"value":934},"let",{"type":516,"tag":543,"props":936,"children":937},{"style":725},[938],{"type":521,"value":939}," i",{"type":516,"tag":543,"props":941,"children":942},{"style":697},[943],{"type":521,"value":788},{"type":516,"tag":543,"props":945,"children":946},{"style":853},[947],{"type":521,"value":948}," 1",{"type":516,"tag":543,"props":950,"children":951},{"style":697},[952],{"type":521,"value":953},";",{"type":516,"tag":543,"props":955,"children":956},{"style":725},[957],{"type":521,"value":939},{"type":516,"tag":543,"props":959,"children":960},{"style":697},[961],{"type":521,"value":962}," \u003C",{"type":516,"tag":543,"props":964,"children":965},{"style":725},[966],{"type":521,"value":870},{"type":516,"tag":543,"props":968,"children":969},{"style":697},[970],{"type":521,"value":971},".",{"type":516,"tag":543,"props":973,"children":975},{"style":974},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[976],{"type":521,"value":977},"length",{"type":516,"tag":543,"props":979,"children":980},{"style":697},[981],{"type":521,"value":953},{"type":516,"tag":543,"props":983,"children":984},{"style":725},[985],{"type":521,"value":939},{"type":516,"tag":543,"props":987,"children":988},{"style":774},[989],{"type":521,"value":990},"++",{"type":516,"tag":543,"props":992,"children":993},{"style":697},[994],{"type":521,"value":808},{"type":516,"tag":543,"props":996,"children":997},{"style":697},[998],{"type":521,"value":813},{"type":516,"tag":543,"props":1000,"children":1002},{"class":545,"line":1001},10,[1003,1008,1012,1017,1021,1025,1030,1034,1039,1044,1049,1053,1057,1062,1066,1070,1075,1079,1083,1087,1092,1096,1100,1104],{"type":516,"tag":543,"props":1004,"children":1005},{"style":725},[1006],{"type":521,"value":1007},"    dp",{"type":516,"tag":543,"props":1009,"children":1010},{"style":697},[1011],{"type":521,"value":850},{"type":516,"tag":543,"props":1013,"children":1014},{"style":725},[1015],{"type":521,"value":1016},"i",{"type":516,"tag":543,"props":1018,"children":1019},{"style":697},[1020],{"type":521,"value":861},{"type":516,"tag":543,"props":1022,"children":1023},{"style":697},[1024],{"type":521,"value":788},{"type":516,"tag":543,"props":1026,"children":1027},{"style":725},[1028],{"type":521,"value":1029}," Math",{"type":516,"tag":543,"props":1031,"children":1032},{"style":697},[1033],{"type":521,"value":971},{"type":516,"tag":543,"props":1035,"children":1036},{"style":780},[1037],{"type":521,"value":1038},"max",{"type":516,"tag":543,"props":1040,"children":1041},{"style":697},[1042],{"type":521,"value":1043},"(",{"type":516,"tag":543,"props":1045,"children":1046},{"style":725},[1047],{"type":521,"value":1048},"dp",{"type":516,"tag":543,"props":1050,"children":1051},{"style":697},[1052],{"type":521,"value":850},{"type":516,"tag":543,"props":1054,"children":1055},{"style":725},[1056],{"type":521,"value":1016},{"type":516,"tag":543,"props":1058,"children":1059},{"style":774},[1060],{"type":521,"value":1061}," -",{"type":516,"tag":543,"props":1063,"children":1064},{"style":853},[1065],{"type":521,"value":948},{"type":516,"tag":543,"props":1067,"children":1068},{"style":697},[1069],{"type":521,"value":861},{"type":516,"tag":543,"props":1071,"children":1072},{"style":774},[1073],{"type":521,"value":1074}," +",{"type":516,"tag":543,"props":1076,"children":1077},{"style":725},[1078],{"type":521,"value":870},{"type":516,"tag":543,"props":1080,"children":1081},{"style":697},[1082],{"type":521,"value":850},{"type":516,"tag":543,"props":1084,"children":1085},{"style":725},[1086],{"type":521,"value":1016},{"type":516,"tag":543,"props":1088,"children":1089},{"style":697},[1090],{"type":521,"value":1091},"],",{"type":516,"tag":543,"props":1093,"children":1094},{"style":725},[1095],{"type":521,"value":870},{"type":516,"tag":543,"props":1097,"children":1098},{"style":697},[1099],{"type":521,"value":850},{"type":516,"tag":543,"props":1101,"children":1102},{"style":725},[1103],{"type":521,"value":1016},{"type":516,"tag":543,"props":1105,"children":1106},{"style":697},[1107],{"type":521,"value":1108},"]);\n",{"type":516,"tag":543,"props":1110,"children":1112},{"class":545,"line":1111},11,[1113,1118,1122,1126,1130,1134,1138,1143,1148,1152,1156,1160],{"type":516,"tag":543,"props":1114,"children":1115},{"style":725},[1116],{"type":521,"value":1117},"    res",{"type":516,"tag":543,"props":1119,"children":1120},{"style":697},[1121],{"type":521,"value":788},{"type":516,"tag":543,"props":1123,"children":1124},{"style":725},[1125],{"type":521,"value":1029},{"type":516,"tag":543,"props":1127,"children":1128},{"style":697},[1129],{"type":521,"value":971},{"type":516,"tag":543,"props":1131,"children":1132},{"style":780},[1133],{"type":521,"value":1038},{"type":516,"tag":543,"props":1135,"children":1136},{"style":697},[1137],{"type":521,"value":1043},{"type":516,"tag":543,"props":1139,"children":1140},{"style":725},[1141],{"type":521,"value":1142},"res",{"type":516,"tag":543,"props":1144,"children":1145},{"style":697},[1146],{"type":521,"value":1147},",",{"type":516,"tag":543,"props":1149,"children":1150},{"style":725},[1151],{"type":521,"value":827},{"type":516,"tag":543,"props":1153,"children":1154},{"style":697},[1155],{"type":521,"value":850},{"type":516,"tag":543,"props":1157,"children":1158},{"style":725},[1159],{"type":521,"value":1016},{"type":516,"tag":543,"props":1161,"children":1162},{"style":697},[1163],{"type":521,"value":1108},{"type":516,"tag":543,"props":1165,"children":1167},{"class":545,"line":1166},12,[1168],{"type":516,"tag":543,"props":1169,"children":1170},{"style":697},[1171],{"type":521,"value":1172},"  }\n",{"type":516,"tag":543,"props":1174,"children":1176},{"class":545,"line":1175},13,[1177,1182,1186],{"type":516,"tag":543,"props":1178,"children":1179},{"style":703},[1180],{"type":521,"value":1181},"  return",{"type":516,"tag":543,"props":1183,"children":1184},{"style":725},[1185],{"type":521,"value":896},{"type":516,"tag":543,"props":1187,"children":1188},{"style":697},[1189],{"type":521,"value":1190},";\n",{"type":516,"tag":543,"props":1192,"children":1194},{"class":545,"line":1193},14,[1195],{"type":516,"tag":543,"props":1196,"children":1197},{"style":697},[1198],{"type":521,"value":1199},"};\n",{"type":516,"tag":1201,"props":1202,"children":1203},"style",{},[1204],{"type":521,"value":1205},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":509,"searchDepth":770,"depth":770,"links":1207},[1208,1209],{"id":655,"depth":555,"text":655},{"id":660,"depth":555,"text":660,"children":1210},[1211],{"id":666,"depth":564,"text":666},"markdown","content:1.algorithm:3.leetcode:3.major:53.maximum-subarray.md","content","1.algorithm/3.leetcode/3.major/53.maximum-subarray.md","md",[1218,1220],{"_path":123,"title":122,"description":1219},"给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。",{"_path":129,"title":128,"description":1221},"以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [start_i, end_i] 。请你合并所有重叠的区间，并返回 一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间 。",1714058126310]