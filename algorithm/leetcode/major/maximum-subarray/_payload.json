[{"data":1,"prerenderedAt":1194},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/maximum-subarray":478,"/algorithm/leetcode/major/maximum-subarray-surround":1189},[4,269,298,446,454,463],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":445},"代码考核","/code-assessment",[302,351,438],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/code-assessment/scene",[355,377,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432,435],{"title":356,"_path":357,"children":358},"Promise","/code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[381,384],{"title":382,"_path":383},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":385,"_path":386},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":388,"_path":389},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":391,"_path":392},"倒计时","/code-assessment/scene/countdown",{"title":394,"_path":395},"日期格式化","/code-assessment/scene/date-format",{"title":397,"_path":398},"实现前端路由","/code-assessment/scene/frontend-route",{"title":400,"_path":401},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":403,"_path":404},"lodash.get","/code-assessment/scene/lodash-get",{"title":406,"_path":407},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":409,"_path":410},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":412,"_path":413},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":415,"_path":416},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":418,"_path":419},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":421,"_path":422},"随机数","/code-assessment/scene/random-number",{"title":424,"_path":425},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":427,"_path":428},"sku 算法实现","/code-assessment/scene/sku",{"title":430,"_path":431},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":433,"_path":434},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":436,"_path":437},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":439,"_path":440,"children":441},"Ts 类型挑战","/code-assessment/type-challeges",[442],{"title":443,"_path":444},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":447,"_path":448,"children":449,"icon":453},"项目","/project",[450],{"title":451,"_path":452},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":455,"_path":456,"children":457,"icon":462},"设计模式","/design-mode",[458,459],{"title":455,"_path":456},{"title":460,"_path":461},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":464,"_path":465,"children":466,"icon":477},"后端语言","/backend-languages",[467],{"title":468,"_path":469,"children":470},"Python","/backend-languages/python",[471,474],{"title":472,"_path":473},"基础","/backend-languages/python/base",{"title":475,"_path":476},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":126,"_dir":479,"_draft":480,"_partial":480,"_locale":481,"title":125,"description":482,"url":483,"body":484,"_type":1184,"_id":1185,"_source":1186,"_file":1187,"_extension":1188},"major",false,"","给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。","https://leetcode.cn/problems/maximum-subarray",{"type":485,"children":486,"toc":1178},"root",[487,494,499,504,543,548,571,576,599,604,619,624,630,635,641,1172],{"type":488,"tag":489,"props":490,"children":491},"element","p",{},[492],{"type":493,"value":482},"text",{"type":488,"tag":489,"props":495,"children":496},{},[497],{"type":493,"value":498},"子数组\n是数组中的一个连续部分。",{"type":488,"tag":489,"props":500,"children":501},{},[502],{"type":493,"value":503},"示例 1：",{"type":488,"tag":505,"props":506,"children":509},"pre",{"className":507,"code":508,"language":493,"meta":481,"style":481},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n输出：6\n解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",[510],{"type":488,"tag":511,"props":512,"children":513},"code",{"__ignoreMap":481},[514,525,534],{"type":488,"tag":515,"props":516,"children":519},"span",{"class":517,"line":518},"line",1,[520],{"type":488,"tag":515,"props":521,"children":522},{},[523],{"type":493,"value":524},"输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n",{"type":488,"tag":515,"props":526,"children":528},{"class":517,"line":527},2,[529],{"type":488,"tag":515,"props":530,"children":531},{},[532],{"type":493,"value":533},"输出：6\n",{"type":488,"tag":515,"props":535,"children":537},{"class":517,"line":536},3,[538],{"type":488,"tag":515,"props":539,"children":540},{},[541],{"type":493,"value":542},"解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",{"type":488,"tag":489,"props":544,"children":545},{},[546],{"type":493,"value":547},"示例 2：",{"type":488,"tag":505,"props":549,"children":551},{"className":507,"code":550,"language":493,"meta":481,"style":481},"输入：nums = [1]\n输出：1\n",[552],{"type":488,"tag":511,"props":553,"children":554},{"__ignoreMap":481},[555,563],{"type":488,"tag":515,"props":556,"children":557},{"class":517,"line":518},[558],{"type":488,"tag":515,"props":559,"children":560},{},[561],{"type":493,"value":562},"输入：nums = [1]\n",{"type":488,"tag":515,"props":564,"children":565},{"class":517,"line":527},[566],{"type":488,"tag":515,"props":567,"children":568},{},[569],{"type":493,"value":570},"输出：1\n",{"type":488,"tag":489,"props":572,"children":573},{},[574],{"type":493,"value":575},"示例 3：",{"type":488,"tag":505,"props":577,"children":579},{"className":507,"code":578,"language":493,"meta":481,"style":481},"输入：nums = [5,4,-1,7,8]\n输出：23\n",[580],{"type":488,"tag":511,"props":581,"children":582},{"__ignoreMap":481},[583,591],{"type":488,"tag":515,"props":584,"children":585},{"class":517,"line":518},[586],{"type":488,"tag":515,"props":587,"children":588},{},[589],{"type":493,"value":590},"输入：nums = [5,4,-1,7,8]\n",{"type":488,"tag":515,"props":592,"children":593},{"class":517,"line":527},[594],{"type":488,"tag":515,"props":595,"children":596},{},[597],{"type":493,"value":598},"输出：23\n",{"type":488,"tag":489,"props":600,"children":601},{},[602],{"type":493,"value":603},"提示：",{"type":488,"tag":605,"props":606,"children":607},"ul",{},[608,614],{"type":488,"tag":609,"props":610,"children":611},"li",{},[612],{"type":493,"value":613},"1 \u003C= nums.length \u003C= 105",{"type":488,"tag":609,"props":615,"children":616},{},[617],{"type":493,"value":618},"-104 \u003C= nums[i] \u003C= 104",{"type":488,"tag":489,"props":620,"children":621},{},[622],{"type":493,"value":623},"进阶：如果你已经实现复杂度为 O(n) 的解法，尝试使用更为精妙的 分治法 求解。",{"type":488,"tag":625,"props":626,"children":628},"h2",{"id":627},"解题思路",[629],{"type":493,"value":627},{"type":488,"tag":625,"props":631,"children":633},{"id":632},"实现",[634],{"type":493,"value":632},{"type":488,"tag":636,"props":637,"children":639},"h3",{"id":638},"动态规划",[640],{"type":493,"value":638},{"type":488,"tag":505,"props":642,"children":646},{"className":643,"code":644,"language":645,"meta":481,"style":481},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSubArray = function (nums) {\n  let dp = [];\n  dp[0] = nums[0];\n  let res = dp[0];\n  for (let i = 1; i \u003C nums.length; i++) {\n    dp[i] = Math.max(dp[i - 1] + nums[i], nums[i]);\n    res = Math.max(res, dp[i]);\n  }\n  return res;\n};\n","js",[647],{"type":488,"tag":511,"props":648,"children":649},{"__ignoreMap":481},[650,659,701,731,740,786,809,856,889,971,1081,1136,1145,1163],{"type":488,"tag":515,"props":651,"children":652},{"class":517,"line":518},[653],{"type":488,"tag":515,"props":654,"children":656},{"style":655},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[657],{"type":493,"value":658},"/**\n",{"type":488,"tag":515,"props":660,"children":661},{"class":517,"line":527},[662,667,673,679,684,690,695],{"type":488,"tag":515,"props":663,"children":664},{"style":655},[665],{"type":493,"value":666}," * ",{"type":488,"tag":515,"props":668,"children":670},{"style":669},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[671],{"type":493,"value":672},"@",{"type":488,"tag":515,"props":674,"children":676},{"style":675},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[677],{"type":493,"value":678},"param",{"type":488,"tag":515,"props":680,"children":681},{"style":669},[682],{"type":493,"value":683}," {",{"type":488,"tag":515,"props":685,"children":687},{"style":686},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[688],{"type":493,"value":689},"number[]",{"type":488,"tag":515,"props":691,"children":692},{"style":669},[693],{"type":493,"value":694},"}",{"type":488,"tag":515,"props":696,"children":698},{"style":697},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[699],{"type":493,"value":700}," nums\n",{"type":488,"tag":515,"props":702,"children":703},{"class":517,"line":536},[704,708,712,717,721,726],{"type":488,"tag":515,"props":705,"children":706},{"style":655},[707],{"type":493,"value":666},{"type":488,"tag":515,"props":709,"children":710},{"style":669},[711],{"type":493,"value":672},{"type":488,"tag":515,"props":713,"children":714},{"style":675},[715],{"type":493,"value":716},"return",{"type":488,"tag":515,"props":718,"children":719},{"style":669},[720],{"type":493,"value":683},{"type":488,"tag":515,"props":722,"children":723},{"style":686},[724],{"type":493,"value":725},"number",{"type":488,"tag":515,"props":727,"children":728},{"style":669},[729],{"type":493,"value":730},"}\n",{"type":488,"tag":515,"props":732,"children":734},{"class":517,"line":733},4,[735],{"type":488,"tag":515,"props":736,"children":737},{"style":655},[738],{"type":493,"value":739}," */\n",{"type":488,"tag":515,"props":741,"children":743},{"class":517,"line":742},5,[744,750,756,761,766,771,776,781],{"type":488,"tag":515,"props":745,"children":747},{"style":746},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[748],{"type":493,"value":749},"var",{"type":488,"tag":515,"props":751,"children":753},{"style":752},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[754],{"type":493,"value":755}," maxSubArray",{"type":488,"tag":515,"props":757,"children":758},{"style":669},[759],{"type":493,"value":760}," =",{"type":488,"tag":515,"props":762,"children":763},{"style":746},[764],{"type":493,"value":765}," function",{"type":488,"tag":515,"props":767,"children":768},{"style":669},[769],{"type":493,"value":770}," (",{"type":488,"tag":515,"props":772,"children":773},{"style":697},[774],{"type":493,"value":775},"nums",{"type":488,"tag":515,"props":777,"children":778},{"style":669},[779],{"type":493,"value":780},")",{"type":488,"tag":515,"props":782,"children":783},{"style":669},[784],{"type":493,"value":785}," {\n",{"type":488,"tag":515,"props":787,"children":789},{"class":517,"line":788},6,[790,795,800,804],{"type":488,"tag":515,"props":791,"children":792},{"style":746},[793],{"type":493,"value":794},"  let",{"type":488,"tag":515,"props":796,"children":797},{"style":697},[798],{"type":493,"value":799}," dp",{"type":488,"tag":515,"props":801,"children":802},{"style":669},[803],{"type":493,"value":760},{"type":488,"tag":515,"props":805,"children":806},{"style":669},[807],{"type":493,"value":808}," [];\n",{"type":488,"tag":515,"props":810,"children":812},{"class":517,"line":811},7,[813,818,823,829,834,838,843,847,851],{"type":488,"tag":515,"props":814,"children":815},{"style":697},[816],{"type":493,"value":817},"  dp",{"type":488,"tag":515,"props":819,"children":820},{"style":669},[821],{"type":493,"value":822},"[",{"type":488,"tag":515,"props":824,"children":826},{"style":825},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[827],{"type":493,"value":828},"0",{"type":488,"tag":515,"props":830,"children":831},{"style":669},[832],{"type":493,"value":833},"]",{"type":488,"tag":515,"props":835,"children":836},{"style":669},[837],{"type":493,"value":760},{"type":488,"tag":515,"props":839,"children":840},{"style":697},[841],{"type":493,"value":842}," nums",{"type":488,"tag":515,"props":844,"children":845},{"style":669},[846],{"type":493,"value":822},{"type":488,"tag":515,"props":848,"children":849},{"style":825},[850],{"type":493,"value":828},{"type":488,"tag":515,"props":852,"children":853},{"style":669},[854],{"type":493,"value":855},"];\n",{"type":488,"tag":515,"props":857,"children":859},{"class":517,"line":858},8,[860,864,869,873,877,881,885],{"type":488,"tag":515,"props":861,"children":862},{"style":746},[863],{"type":493,"value":794},{"type":488,"tag":515,"props":865,"children":866},{"style":697},[867],{"type":493,"value":868}," res",{"type":488,"tag":515,"props":870,"children":871},{"style":669},[872],{"type":493,"value":760},{"type":488,"tag":515,"props":874,"children":875},{"style":697},[876],{"type":493,"value":799},{"type":488,"tag":515,"props":878,"children":879},{"style":669},[880],{"type":493,"value":822},{"type":488,"tag":515,"props":882,"children":883},{"style":825},[884],{"type":493,"value":828},{"type":488,"tag":515,"props":886,"children":887},{"style":669},[888],{"type":493,"value":855},{"type":488,"tag":515,"props":890,"children":892},{"class":517,"line":891},9,[893,898,902,907,912,916,921,926,930,935,939,944,950,954,958,963,967],{"type":488,"tag":515,"props":894,"children":895},{"style":675},[896],{"type":493,"value":897},"  for",{"type":488,"tag":515,"props":899,"children":900},{"style":669},[901],{"type":493,"value":770},{"type":488,"tag":515,"props":903,"children":904},{"style":746},[905],{"type":493,"value":906},"let",{"type":488,"tag":515,"props":908,"children":909},{"style":697},[910],{"type":493,"value":911}," i",{"type":488,"tag":515,"props":913,"children":914},{"style":669},[915],{"type":493,"value":760},{"type":488,"tag":515,"props":917,"children":918},{"style":825},[919],{"type":493,"value":920}," 1",{"type":488,"tag":515,"props":922,"children":923},{"style":669},[924],{"type":493,"value":925},";",{"type":488,"tag":515,"props":927,"children":928},{"style":697},[929],{"type":493,"value":911},{"type":488,"tag":515,"props":931,"children":932},{"style":669},[933],{"type":493,"value":934}," \u003C",{"type":488,"tag":515,"props":936,"children":937},{"style":697},[938],{"type":493,"value":842},{"type":488,"tag":515,"props":940,"children":941},{"style":669},[942],{"type":493,"value":943},".",{"type":488,"tag":515,"props":945,"children":947},{"style":946},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[948],{"type":493,"value":949},"length",{"type":488,"tag":515,"props":951,"children":952},{"style":669},[953],{"type":493,"value":925},{"type":488,"tag":515,"props":955,"children":956},{"style":697},[957],{"type":493,"value":911},{"type":488,"tag":515,"props":959,"children":960},{"style":746},[961],{"type":493,"value":962},"++",{"type":488,"tag":515,"props":964,"children":965},{"style":669},[966],{"type":493,"value":780},{"type":488,"tag":515,"props":968,"children":969},{"style":669},[970],{"type":493,"value":785},{"type":488,"tag":515,"props":972,"children":974},{"class":517,"line":973},10,[975,980,984,989,993,997,1002,1006,1011,1016,1021,1025,1029,1034,1038,1042,1047,1051,1055,1059,1064,1068,1072,1076],{"type":488,"tag":515,"props":976,"children":977},{"style":697},[978],{"type":493,"value":979},"    dp",{"type":488,"tag":515,"props":981,"children":982},{"style":669},[983],{"type":493,"value":822},{"type":488,"tag":515,"props":985,"children":986},{"style":697},[987],{"type":493,"value":988},"i",{"type":488,"tag":515,"props":990,"children":991},{"style":669},[992],{"type":493,"value":833},{"type":488,"tag":515,"props":994,"children":995},{"style":669},[996],{"type":493,"value":760},{"type":488,"tag":515,"props":998,"children":999},{"style":697},[1000],{"type":493,"value":1001}," Math",{"type":488,"tag":515,"props":1003,"children":1004},{"style":669},[1005],{"type":493,"value":943},{"type":488,"tag":515,"props":1007,"children":1008},{"style":752},[1009],{"type":493,"value":1010},"max",{"type":488,"tag":515,"props":1012,"children":1013},{"style":669},[1014],{"type":493,"value":1015},"(",{"type":488,"tag":515,"props":1017,"children":1018},{"style":697},[1019],{"type":493,"value":1020},"dp",{"type":488,"tag":515,"props":1022,"children":1023},{"style":669},[1024],{"type":493,"value":822},{"type":488,"tag":515,"props":1026,"children":1027},{"style":697},[1028],{"type":493,"value":988},{"type":488,"tag":515,"props":1030,"children":1031},{"style":746},[1032],{"type":493,"value":1033}," -",{"type":488,"tag":515,"props":1035,"children":1036},{"style":825},[1037],{"type":493,"value":920},{"type":488,"tag":515,"props":1039,"children":1040},{"style":669},[1041],{"type":493,"value":833},{"type":488,"tag":515,"props":1043,"children":1044},{"style":746},[1045],{"type":493,"value":1046}," +",{"type":488,"tag":515,"props":1048,"children":1049},{"style":697},[1050],{"type":493,"value":842},{"type":488,"tag":515,"props":1052,"children":1053},{"style":669},[1054],{"type":493,"value":822},{"type":488,"tag":515,"props":1056,"children":1057},{"style":697},[1058],{"type":493,"value":988},{"type":488,"tag":515,"props":1060,"children":1061},{"style":669},[1062],{"type":493,"value":1063},"],",{"type":488,"tag":515,"props":1065,"children":1066},{"style":697},[1067],{"type":493,"value":842},{"type":488,"tag":515,"props":1069,"children":1070},{"style":669},[1071],{"type":493,"value":822},{"type":488,"tag":515,"props":1073,"children":1074},{"style":697},[1075],{"type":493,"value":988},{"type":488,"tag":515,"props":1077,"children":1078},{"style":669},[1079],{"type":493,"value":1080},"]);\n",{"type":488,"tag":515,"props":1082,"children":1084},{"class":517,"line":1083},11,[1085,1090,1094,1098,1102,1106,1110,1115,1120,1124,1128,1132],{"type":488,"tag":515,"props":1086,"children":1087},{"style":697},[1088],{"type":493,"value":1089},"    res",{"type":488,"tag":515,"props":1091,"children":1092},{"style":669},[1093],{"type":493,"value":760},{"type":488,"tag":515,"props":1095,"children":1096},{"style":697},[1097],{"type":493,"value":1001},{"type":488,"tag":515,"props":1099,"children":1100},{"style":669},[1101],{"type":493,"value":943},{"type":488,"tag":515,"props":1103,"children":1104},{"style":752},[1105],{"type":493,"value":1010},{"type":488,"tag":515,"props":1107,"children":1108},{"style":669},[1109],{"type":493,"value":1015},{"type":488,"tag":515,"props":1111,"children":1112},{"style":697},[1113],{"type":493,"value":1114},"res",{"type":488,"tag":515,"props":1116,"children":1117},{"style":669},[1118],{"type":493,"value":1119},",",{"type":488,"tag":515,"props":1121,"children":1122},{"style":697},[1123],{"type":493,"value":799},{"type":488,"tag":515,"props":1125,"children":1126},{"style":669},[1127],{"type":493,"value":822},{"type":488,"tag":515,"props":1129,"children":1130},{"style":697},[1131],{"type":493,"value":988},{"type":488,"tag":515,"props":1133,"children":1134},{"style":669},[1135],{"type":493,"value":1080},{"type":488,"tag":515,"props":1137,"children":1139},{"class":517,"line":1138},12,[1140],{"type":488,"tag":515,"props":1141,"children":1142},{"style":669},[1143],{"type":493,"value":1144},"  }\n",{"type":488,"tag":515,"props":1146,"children":1148},{"class":517,"line":1147},13,[1149,1154,1158],{"type":488,"tag":515,"props":1150,"children":1151},{"style":675},[1152],{"type":493,"value":1153},"  return",{"type":488,"tag":515,"props":1155,"children":1156},{"style":697},[1157],{"type":493,"value":868},{"type":488,"tag":515,"props":1159,"children":1160},{"style":669},[1161],{"type":493,"value":1162},";\n",{"type":488,"tag":515,"props":1164,"children":1166},{"class":517,"line":1165},14,[1167],{"type":488,"tag":515,"props":1168,"children":1169},{"style":669},[1170],{"type":493,"value":1171},"};\n",{"type":488,"tag":1173,"props":1174,"children":1175},"style",{},[1176],{"type":493,"value":1177},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":481,"searchDepth":742,"depth":742,"links":1179},[1180,1181],{"id":627,"depth":527,"text":627},{"id":632,"depth":527,"text":632,"children":1182},[1183],{"id":638,"depth":536,"text":638},"markdown","content:1.algorithm:3.leetcode:3.major:53.maximum-subarray.md","content","1.algorithm/3.leetcode/3.major/53.maximum-subarray.md","md",[1190,1192],{"_path":123,"title":122,"description":1191},"给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。",{"_path":129,"title":128,"description":1193},"以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [start_i, end_i] 。请你合并所有重叠的区间，并返回 一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间 。",1714046224967]