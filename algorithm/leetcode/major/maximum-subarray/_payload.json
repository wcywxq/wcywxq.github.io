[{"data":1,"prerenderedAt":1240},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/maximum-subarray":524,"/algorithm/leetcode/major/maximum-subarray-surround":1235},[4,269,298,492,500,509],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":491},"代码考核","/code-assessment",[302,391,484],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,375,382,385,388],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357,360,363,366,369,372],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"原型方法","/code-assessment/source/array/prototype-method",{"title":361,"_path":362},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":364,"_path":365},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":367,"_path":368},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":370,"_path":371},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":373,"_path":374},"二维数组","/code-assessment/source/array/2d-array",{"title":376,"_path":377,"children":378},"字符串 String","/code-assessment/source/string",[379],{"title":380,"_path":381},"repeat()","/code-assessment/source/string/repeat",{"title":383,"_path":384},"获取通用类型","/code-assessment/source/get-generic-type",{"title":386,"_path":387},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":389,"_path":390},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":392,"_path":393,"children":394},"业务场景","/code-assessment/scene",[395,420,430,433,436,439,442,445,448,451,454,457,460,463,466,469,472,475,478,481],{"title":396,"_path":397,"children":398},"Promise","/code-assessment/scene/promise",[399,402,405,408,411,414,417],{"title":400,"_path":401},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":403,"_path":404},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":406,"_path":407},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":409,"_path":410},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":412,"_path":413},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":415,"_path":416},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":418,"_path":419},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":421,"_path":422,"children":423},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[424,427],{"title":425,"_path":426},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":428,"_path":429},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":431,"_path":432},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":434,"_path":435},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":437,"_path":438},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":440,"_path":441},"倒计时","/code-assessment/scene/countdown",{"title":443,"_path":444},"日期格式化","/code-assessment/scene/date-format",{"title":446,"_path":447},"实现前端路由","/code-assessment/scene/frontend-route",{"title":449,"_path":450},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":452,"_path":453},"lodash.get","/code-assessment/scene/lodash-get",{"title":455,"_path":456},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":458,"_path":459},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":461,"_path":462},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":464,"_path":465},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":467,"_path":468},"随机数","/code-assessment/scene/random-number",{"title":470,"_path":471},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":473,"_path":474},"sku 算法实现","/code-assessment/scene/sku",{"title":476,"_path":477},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":479,"_path":480},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":482,"_path":483},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":485,"_path":486,"children":487},"Ts 类型挑战","/code-assessment/type-challeges",[488],{"title":489,"_path":490},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":493,"_path":494,"children":495,"icon":499},"项目","/project",[496],{"title":497,"_path":498},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":501,"_path":502,"children":503,"icon":508},"设计模式","/design-mode",[504,505],{"title":501,"_path":502},{"title":506,"_path":507},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":510,"_path":511,"children":512,"icon":523},"后端语言","/backend-languages",[513],{"title":514,"_path":515,"children":516},"Python","/backend-languages/python",[517,520],{"title":518,"_path":519},"基础","/backend-languages/python/base",{"title":521,"_path":522},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":126,"_dir":525,"_draft":526,"_partial":526,"_locale":527,"title":125,"description":528,"url":529,"body":530,"_type":1230,"_id":1231,"_source":1232,"_file":1233,"_extension":1234},"major",false,"","给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。","https://leetcode.cn/problems/maximum-subarray",{"type":531,"children":532,"toc":1224},"root",[533,540,545,550,589,594,617,622,645,650,665,670,676,681,687,1218],{"type":534,"tag":535,"props":536,"children":537},"element","p",{},[538],{"type":539,"value":528},"text",{"type":534,"tag":535,"props":541,"children":542},{},[543],{"type":539,"value":544},"子数组\n是数组中的一个连续部分。",{"type":534,"tag":535,"props":546,"children":547},{},[548],{"type":539,"value":549},"示例 1：",{"type":534,"tag":551,"props":552,"children":555},"pre",{"className":553,"code":554,"language":539,"meta":527,"style":527},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n输出：6\n解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",[556],{"type":534,"tag":557,"props":558,"children":559},"code",{"__ignoreMap":527},[560,571,580],{"type":534,"tag":561,"props":562,"children":565},"span",{"class":563,"line":564},"line",1,[566],{"type":534,"tag":561,"props":567,"children":568},{},[569],{"type":539,"value":570},"输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n",{"type":534,"tag":561,"props":572,"children":574},{"class":563,"line":573},2,[575],{"type":534,"tag":561,"props":576,"children":577},{},[578],{"type":539,"value":579},"输出：6\n",{"type":534,"tag":561,"props":581,"children":583},{"class":563,"line":582},3,[584],{"type":534,"tag":561,"props":585,"children":586},{},[587],{"type":539,"value":588},"解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",{"type":534,"tag":535,"props":590,"children":591},{},[592],{"type":539,"value":593},"示例 2：",{"type":534,"tag":551,"props":595,"children":597},{"className":553,"code":596,"language":539,"meta":527,"style":527},"输入：nums = [1]\n输出：1\n",[598],{"type":534,"tag":557,"props":599,"children":600},{"__ignoreMap":527},[601,609],{"type":534,"tag":561,"props":602,"children":603},{"class":563,"line":564},[604],{"type":534,"tag":561,"props":605,"children":606},{},[607],{"type":539,"value":608},"输入：nums = [1]\n",{"type":534,"tag":561,"props":610,"children":611},{"class":563,"line":573},[612],{"type":534,"tag":561,"props":613,"children":614},{},[615],{"type":539,"value":616},"输出：1\n",{"type":534,"tag":535,"props":618,"children":619},{},[620],{"type":539,"value":621},"示例 3：",{"type":534,"tag":551,"props":623,"children":625},{"className":553,"code":624,"language":539,"meta":527,"style":527},"输入：nums = [5,4,-1,7,8]\n输出：23\n",[626],{"type":534,"tag":557,"props":627,"children":628},{"__ignoreMap":527},[629,637],{"type":534,"tag":561,"props":630,"children":631},{"class":563,"line":564},[632],{"type":534,"tag":561,"props":633,"children":634},{},[635],{"type":539,"value":636},"输入：nums = [5,4,-1,7,8]\n",{"type":534,"tag":561,"props":638,"children":639},{"class":563,"line":573},[640],{"type":534,"tag":561,"props":641,"children":642},{},[643],{"type":539,"value":644},"输出：23\n",{"type":534,"tag":535,"props":646,"children":647},{},[648],{"type":539,"value":649},"提示：",{"type":534,"tag":651,"props":652,"children":653},"ul",{},[654,660],{"type":534,"tag":655,"props":656,"children":657},"li",{},[658],{"type":539,"value":659},"1 \u003C= nums.length \u003C= 105",{"type":534,"tag":655,"props":661,"children":662},{},[663],{"type":539,"value":664},"-104 \u003C= nums[i] \u003C= 104",{"type":534,"tag":535,"props":666,"children":667},{},[668],{"type":539,"value":669},"进阶：如果你已经实现复杂度为 O(n) 的解法，尝试使用更为精妙的 分治法 求解。",{"type":534,"tag":671,"props":672,"children":674},"h2",{"id":673},"解题思路",[675],{"type":539,"value":673},{"type":534,"tag":671,"props":677,"children":679},{"id":678},"实现",[680],{"type":539,"value":678},{"type":534,"tag":682,"props":683,"children":685},"h3",{"id":684},"动态规划",[686],{"type":539,"value":684},{"type":534,"tag":551,"props":688,"children":692},{"className":689,"code":690,"language":691,"meta":527,"style":527},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSubArray = function (nums) {\n  let dp = [];\n  dp[0] = nums[0];\n  let res = dp[0];\n  for (let i = 1; i \u003C nums.length; i++) {\n    dp[i] = Math.max(dp[i - 1] + nums[i], nums[i]);\n    res = Math.max(res, dp[i]);\n  }\n  return res;\n};\n","js",[693],{"type":534,"tag":557,"props":694,"children":695},{"__ignoreMap":527},[696,705,747,777,786,832,855,902,935,1017,1127,1182,1191,1209],{"type":534,"tag":561,"props":697,"children":698},{"class":563,"line":564},[699],{"type":534,"tag":561,"props":700,"children":702},{"style":701},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[703],{"type":539,"value":704},"/**\n",{"type":534,"tag":561,"props":706,"children":707},{"class":563,"line":573},[708,713,719,725,730,736,741],{"type":534,"tag":561,"props":709,"children":710},{"style":701},[711],{"type":539,"value":712}," * ",{"type":534,"tag":561,"props":714,"children":716},{"style":715},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[717],{"type":539,"value":718},"@",{"type":534,"tag":561,"props":720,"children":722},{"style":721},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[723],{"type":539,"value":724},"param",{"type":534,"tag":561,"props":726,"children":727},{"style":715},[728],{"type":539,"value":729}," {",{"type":534,"tag":561,"props":731,"children":733},{"style":732},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[734],{"type":539,"value":735},"number[]",{"type":534,"tag":561,"props":737,"children":738},{"style":715},[739],{"type":539,"value":740},"}",{"type":534,"tag":561,"props":742,"children":744},{"style":743},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[745],{"type":539,"value":746}," nums\n",{"type":534,"tag":561,"props":748,"children":749},{"class":563,"line":582},[750,754,758,763,767,772],{"type":534,"tag":561,"props":751,"children":752},{"style":701},[753],{"type":539,"value":712},{"type":534,"tag":561,"props":755,"children":756},{"style":715},[757],{"type":539,"value":718},{"type":534,"tag":561,"props":759,"children":760},{"style":721},[761],{"type":539,"value":762},"return",{"type":534,"tag":561,"props":764,"children":765},{"style":715},[766],{"type":539,"value":729},{"type":534,"tag":561,"props":768,"children":769},{"style":732},[770],{"type":539,"value":771},"number",{"type":534,"tag":561,"props":773,"children":774},{"style":715},[775],{"type":539,"value":776},"}\n",{"type":534,"tag":561,"props":778,"children":780},{"class":563,"line":779},4,[781],{"type":534,"tag":561,"props":782,"children":783},{"style":701},[784],{"type":539,"value":785}," */\n",{"type":534,"tag":561,"props":787,"children":789},{"class":563,"line":788},5,[790,796,802,807,812,817,822,827],{"type":534,"tag":561,"props":791,"children":793},{"style":792},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[794],{"type":539,"value":795},"var",{"type":534,"tag":561,"props":797,"children":799},{"style":798},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[800],{"type":539,"value":801}," maxSubArray",{"type":534,"tag":561,"props":803,"children":804},{"style":715},[805],{"type":539,"value":806}," =",{"type":534,"tag":561,"props":808,"children":809},{"style":792},[810],{"type":539,"value":811}," function",{"type":534,"tag":561,"props":813,"children":814},{"style":715},[815],{"type":539,"value":816}," (",{"type":534,"tag":561,"props":818,"children":819},{"style":743},[820],{"type":539,"value":821},"nums",{"type":534,"tag":561,"props":823,"children":824},{"style":715},[825],{"type":539,"value":826},")",{"type":534,"tag":561,"props":828,"children":829},{"style":715},[830],{"type":539,"value":831}," {\n",{"type":534,"tag":561,"props":833,"children":835},{"class":563,"line":834},6,[836,841,846,850],{"type":534,"tag":561,"props":837,"children":838},{"style":792},[839],{"type":539,"value":840},"  let",{"type":534,"tag":561,"props":842,"children":843},{"style":743},[844],{"type":539,"value":845}," dp",{"type":534,"tag":561,"props":847,"children":848},{"style":715},[849],{"type":539,"value":806},{"type":534,"tag":561,"props":851,"children":852},{"style":715},[853],{"type":539,"value":854}," [];\n",{"type":534,"tag":561,"props":856,"children":858},{"class":563,"line":857},7,[859,864,869,875,880,884,889,893,897],{"type":534,"tag":561,"props":860,"children":861},{"style":743},[862],{"type":539,"value":863},"  dp",{"type":534,"tag":561,"props":865,"children":866},{"style":715},[867],{"type":539,"value":868},"[",{"type":534,"tag":561,"props":870,"children":872},{"style":871},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[873],{"type":539,"value":874},"0",{"type":534,"tag":561,"props":876,"children":877},{"style":715},[878],{"type":539,"value":879},"]",{"type":534,"tag":561,"props":881,"children":882},{"style":715},[883],{"type":539,"value":806},{"type":534,"tag":561,"props":885,"children":886},{"style":743},[887],{"type":539,"value":888}," nums",{"type":534,"tag":561,"props":890,"children":891},{"style":715},[892],{"type":539,"value":868},{"type":534,"tag":561,"props":894,"children":895},{"style":871},[896],{"type":539,"value":874},{"type":534,"tag":561,"props":898,"children":899},{"style":715},[900],{"type":539,"value":901},"];\n",{"type":534,"tag":561,"props":903,"children":905},{"class":563,"line":904},8,[906,910,915,919,923,927,931],{"type":534,"tag":561,"props":907,"children":908},{"style":792},[909],{"type":539,"value":840},{"type":534,"tag":561,"props":911,"children":912},{"style":743},[913],{"type":539,"value":914}," res",{"type":534,"tag":561,"props":916,"children":917},{"style":715},[918],{"type":539,"value":806},{"type":534,"tag":561,"props":920,"children":921},{"style":743},[922],{"type":539,"value":845},{"type":534,"tag":561,"props":924,"children":925},{"style":715},[926],{"type":539,"value":868},{"type":534,"tag":561,"props":928,"children":929},{"style":871},[930],{"type":539,"value":874},{"type":534,"tag":561,"props":932,"children":933},{"style":715},[934],{"type":539,"value":901},{"type":534,"tag":561,"props":936,"children":938},{"class":563,"line":937},9,[939,944,948,953,958,962,967,972,976,981,985,990,996,1000,1004,1009,1013],{"type":534,"tag":561,"props":940,"children":941},{"style":721},[942],{"type":539,"value":943},"  for",{"type":534,"tag":561,"props":945,"children":946},{"style":715},[947],{"type":539,"value":816},{"type":534,"tag":561,"props":949,"children":950},{"style":792},[951],{"type":539,"value":952},"let",{"type":534,"tag":561,"props":954,"children":955},{"style":743},[956],{"type":539,"value":957}," i",{"type":534,"tag":561,"props":959,"children":960},{"style":715},[961],{"type":539,"value":806},{"type":534,"tag":561,"props":963,"children":964},{"style":871},[965],{"type":539,"value":966}," 1",{"type":534,"tag":561,"props":968,"children":969},{"style":715},[970],{"type":539,"value":971},";",{"type":534,"tag":561,"props":973,"children":974},{"style":743},[975],{"type":539,"value":957},{"type":534,"tag":561,"props":977,"children":978},{"style":715},[979],{"type":539,"value":980}," \u003C",{"type":534,"tag":561,"props":982,"children":983},{"style":743},[984],{"type":539,"value":888},{"type":534,"tag":561,"props":986,"children":987},{"style":715},[988],{"type":539,"value":989},".",{"type":534,"tag":561,"props":991,"children":993},{"style":992},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[994],{"type":539,"value":995},"length",{"type":534,"tag":561,"props":997,"children":998},{"style":715},[999],{"type":539,"value":971},{"type":534,"tag":561,"props":1001,"children":1002},{"style":743},[1003],{"type":539,"value":957},{"type":534,"tag":561,"props":1005,"children":1006},{"style":792},[1007],{"type":539,"value":1008},"++",{"type":534,"tag":561,"props":1010,"children":1011},{"style":715},[1012],{"type":539,"value":826},{"type":534,"tag":561,"props":1014,"children":1015},{"style":715},[1016],{"type":539,"value":831},{"type":534,"tag":561,"props":1018,"children":1020},{"class":563,"line":1019},10,[1021,1026,1030,1035,1039,1043,1048,1052,1057,1062,1067,1071,1075,1080,1084,1088,1093,1097,1101,1105,1110,1114,1118,1122],{"type":534,"tag":561,"props":1022,"children":1023},{"style":743},[1024],{"type":539,"value":1025},"    dp",{"type":534,"tag":561,"props":1027,"children":1028},{"style":715},[1029],{"type":539,"value":868},{"type":534,"tag":561,"props":1031,"children":1032},{"style":743},[1033],{"type":539,"value":1034},"i",{"type":534,"tag":561,"props":1036,"children":1037},{"style":715},[1038],{"type":539,"value":879},{"type":534,"tag":561,"props":1040,"children":1041},{"style":715},[1042],{"type":539,"value":806},{"type":534,"tag":561,"props":1044,"children":1045},{"style":743},[1046],{"type":539,"value":1047}," Math",{"type":534,"tag":561,"props":1049,"children":1050},{"style":715},[1051],{"type":539,"value":989},{"type":534,"tag":561,"props":1053,"children":1054},{"style":798},[1055],{"type":539,"value":1056},"max",{"type":534,"tag":561,"props":1058,"children":1059},{"style":715},[1060],{"type":539,"value":1061},"(",{"type":534,"tag":561,"props":1063,"children":1064},{"style":743},[1065],{"type":539,"value":1066},"dp",{"type":534,"tag":561,"props":1068,"children":1069},{"style":715},[1070],{"type":539,"value":868},{"type":534,"tag":561,"props":1072,"children":1073},{"style":743},[1074],{"type":539,"value":1034},{"type":534,"tag":561,"props":1076,"children":1077},{"style":792},[1078],{"type":539,"value":1079}," -",{"type":534,"tag":561,"props":1081,"children":1082},{"style":871},[1083],{"type":539,"value":966},{"type":534,"tag":561,"props":1085,"children":1086},{"style":715},[1087],{"type":539,"value":879},{"type":534,"tag":561,"props":1089,"children":1090},{"style":792},[1091],{"type":539,"value":1092}," +",{"type":534,"tag":561,"props":1094,"children":1095},{"style":743},[1096],{"type":539,"value":888},{"type":534,"tag":561,"props":1098,"children":1099},{"style":715},[1100],{"type":539,"value":868},{"type":534,"tag":561,"props":1102,"children":1103},{"style":743},[1104],{"type":539,"value":1034},{"type":534,"tag":561,"props":1106,"children":1107},{"style":715},[1108],{"type":539,"value":1109},"],",{"type":534,"tag":561,"props":1111,"children":1112},{"style":743},[1113],{"type":539,"value":888},{"type":534,"tag":561,"props":1115,"children":1116},{"style":715},[1117],{"type":539,"value":868},{"type":534,"tag":561,"props":1119,"children":1120},{"style":743},[1121],{"type":539,"value":1034},{"type":534,"tag":561,"props":1123,"children":1124},{"style":715},[1125],{"type":539,"value":1126},"]);\n",{"type":534,"tag":561,"props":1128,"children":1130},{"class":563,"line":1129},11,[1131,1136,1140,1144,1148,1152,1156,1161,1166,1170,1174,1178],{"type":534,"tag":561,"props":1132,"children":1133},{"style":743},[1134],{"type":539,"value":1135},"    res",{"type":534,"tag":561,"props":1137,"children":1138},{"style":715},[1139],{"type":539,"value":806},{"type":534,"tag":561,"props":1141,"children":1142},{"style":743},[1143],{"type":539,"value":1047},{"type":534,"tag":561,"props":1145,"children":1146},{"style":715},[1147],{"type":539,"value":989},{"type":534,"tag":561,"props":1149,"children":1150},{"style":798},[1151],{"type":539,"value":1056},{"type":534,"tag":561,"props":1153,"children":1154},{"style":715},[1155],{"type":539,"value":1061},{"type":534,"tag":561,"props":1157,"children":1158},{"style":743},[1159],{"type":539,"value":1160},"res",{"type":534,"tag":561,"props":1162,"children":1163},{"style":715},[1164],{"type":539,"value":1165},",",{"type":534,"tag":561,"props":1167,"children":1168},{"style":743},[1169],{"type":539,"value":845},{"type":534,"tag":561,"props":1171,"children":1172},{"style":715},[1173],{"type":539,"value":868},{"type":534,"tag":561,"props":1175,"children":1176},{"style":743},[1177],{"type":539,"value":1034},{"type":534,"tag":561,"props":1179,"children":1180},{"style":715},[1181],{"type":539,"value":1126},{"type":534,"tag":561,"props":1183,"children":1185},{"class":563,"line":1184},12,[1186],{"type":534,"tag":561,"props":1187,"children":1188},{"style":715},[1189],{"type":539,"value":1190},"  }\n",{"type":534,"tag":561,"props":1192,"children":1194},{"class":563,"line":1193},13,[1195,1200,1204],{"type":534,"tag":561,"props":1196,"children":1197},{"style":721},[1198],{"type":539,"value":1199},"  return",{"type":534,"tag":561,"props":1201,"children":1202},{"style":743},[1203],{"type":539,"value":914},{"type":534,"tag":561,"props":1205,"children":1206},{"style":715},[1207],{"type":539,"value":1208},";\n",{"type":534,"tag":561,"props":1210,"children":1212},{"class":563,"line":1211},14,[1213],{"type":534,"tag":561,"props":1214,"children":1215},{"style":715},[1216],{"type":539,"value":1217},"};\n",{"type":534,"tag":1219,"props":1220,"children":1221},"style",{},[1222],{"type":539,"value":1223},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":527,"searchDepth":788,"depth":788,"links":1225},[1226,1227],{"id":673,"depth":573,"text":673},{"id":678,"depth":573,"text":678,"children":1228},[1229],{"id":684,"depth":582,"text":684},"markdown","content:1.algorithm:3.leetcode:3.major:53.maximum-subarray.md","content","1.algorithm/3.leetcode/3.major/53.maximum-subarray.md","md",[1236,1238],{"_path":123,"title":122,"description":1237},"给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。",{"_path":129,"title":128,"description":1239},"以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [start_i, end_i] 。请你合并所有重叠的区间，并返回 一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间 。",1714096142952]