[{"data":1,"prerenderedAt":1172},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/maximum-subarray":460,"/algorithm/leetcode/major/maximum-subarray-surround":1167},[4,263,292,437,445],{"title":5,"_path":6,"children":7,"icon":262},"算法","/algorithm",[8,25],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27,"children":28},"Leetcode 力扣","/algorithm/leetcode",[29,35,48],{"title":30,"_path":31,"children":32},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[33],{"title":34,"_path":31},"刷题索引",{"title":36,"_path":37,"children":38},"剑指 offer","/algorithm/leetcode/sword-ofter",[39,42,45],{"title":40,"_path":41},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":43,"_path":44},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":46,"_path":47},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":49,"_path":50,"children":51},"主题单","/algorithm/leetcode/major",[52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259],{"title":53,"_path":54},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":56,"_path":57},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":59,"_path":60},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":62,"_path":63},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":65,"_path":66},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":68,"_path":69},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":71,"_path":72},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":74,"_path":75},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":77,"_path":78},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":80,"_path":81},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":83,"_path":84},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":86,"_path":87},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":89,"_path":90},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":92,"_path":93},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":95,"_path":96},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":98,"_path":99},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":101,"_path":102},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":104,"_path":105},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":107,"_path":108},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":110,"_path":111},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":113,"_path":114},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":116,"_path":117},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":119,"_path":120},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":122,"_path":123},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":125,"_path":126},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":128,"_path":129},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":131,"_path":132},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":134,"_path":135},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":137,"_path":138},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":140,"_path":141},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":143,"_path":144},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":146,"_path":147},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":149,"_path":150},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":152,"_path":153},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":155,"_path":156},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":158,"_path":159},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":161,"_path":162},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":164,"_path":165},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":167,"_path":168},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":170,"_path":171},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":173,"_path":174},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":176,"_path":177},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":179,"_path":180},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":182,"_path":183},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":185,"_path":186},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":188,"_path":189},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":191,"_path":192},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":194,"_path":195},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":197,"_path":198},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":200,"_path":201},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":203,"_path":204},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":206,"_path":207},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":209,"_path":210},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":212,"_path":213},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":215,"_path":216},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":218,"_path":219},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":221,"_path":222},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":224,"_path":225},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":227,"_path":228},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":230,"_path":231},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":233,"_path":234},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":236,"_path":237},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":239,"_path":240},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":242,"_path":243},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":245,"_path":246},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":248,"_path":249},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":251,"_path":252},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":254,"_path":255},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":257,"_path":258},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":260,"_path":261},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":264,"_path":265,"children":266,"icon":291},"前端八股文","/frontend-endorsement",[267,278],{"title":268,"_path":269,"children":270},"构建工具","/frontend-endorsement/build-tools",[271],{"title":272,"_path":273,"children":274},"Webpack","/frontend-endorsement/build-tools/webpack",[275],{"title":276,"_path":277},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":279,"_path":280,"children":281},"Html","/frontend-endorsement/html",[282,285,288],{"title":283,"_path":284},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":286,"_path":287},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":289,"_path":290},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":293,"_path":294,"children":295,"icon":436},"前端代码考核","/frontend-code-assessment",[296,345,429],{"title":297,"_path":298,"children":299},"源码实现","/frontend-code-assessment/source",[300,325,338],{"title":301,"_path":302,"children":303},"原生 api","/frontend-code-assessment/source/native-api",[304,307,310,313,316,319,322],{"title":305,"_path":306},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":308,"_path":309},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":311,"_path":312},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":314,"_path":315},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":317,"_path":318},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":320,"_path":321},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":323,"_path":324},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":326,"_path":327,"children":328},"数组 Array","/frontend-code-assessment/source/array",[329,332,335],{"title":330,"_path":331},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":333,"_path":334},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":336,"_path":337},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":339,"_path":340,"children":341},"字符串 String","/frontend-code-assessment/source/string",[342],{"title":343,"_path":344},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":346,"_path":347,"children":348},"业务场景","/frontend-code-assessment/scene",[349,371,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426],{"title":350,"_path":351,"children":352},"Promise","/frontend-code-assessment/scene/promise",[353,356,359,362,365,368],{"title":354,"_path":355},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":357,"_path":358},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":360,"_path":361},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":363,"_path":364},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":366,"_path":367},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":369,"_path":370},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":372,"_path":373,"children":374},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[375],{"title":376,"_path":377},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":379,"_path":380},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":382,"_path":383},"倒计时","/frontend-code-assessment/scene/countdown",{"title":385,"_path":386},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":388,"_path":389},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":391,"_path":392},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":394,"_path":395},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":397,"_path":398},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":400,"_path":401},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":403,"_path":404},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":406,"_path":407},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":409,"_path":410},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":412,"_path":413},"随机数","/frontend-code-assessment/scene/random-number",{"title":415,"_path":416},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":418,"_path":419},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":421,"_path":422},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":424,"_path":425},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":427,"_path":428},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":430,"_path":431,"children":432},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[433],{"title":434,"_path":435},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":438,"_path":439,"children":440,"icon":444},"项目","/pro",[441],{"title":442,"_path":443},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":446,"_path":447,"children":448,"icon":459},"后端语言","/backend-languages",[449],{"title":450,"_path":451,"children":452},"Python","/backend-languages/python",[453,456],{"title":454,"_path":455},"基础","/backend-languages/python/base",{"title":457,"_path":458},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":120,"_dir":461,"_draft":462,"_partial":462,"_locale":463,"title":119,"description":464,"url":465,"body":466,"_type":1162,"_id":1163,"_source":1164,"_file":1165,"_extension":1166},"major",false,"","给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。","https://leetcode.cn/problems/maximum-subarray",{"type":467,"children":468,"toc":1156},"root",[469,476,481,486,525,530,553,558,581,586,601,606,612,617,623,1150],{"type":470,"tag":471,"props":472,"children":473},"element","p",{},[474],{"type":475,"value":464},"text",{"type":470,"tag":471,"props":477,"children":478},{},[479],{"type":475,"value":480},"子数组\n是数组中的一个连续部分。",{"type":470,"tag":471,"props":482,"children":483},{},[484],{"type":475,"value":485},"示例 1：",{"type":470,"tag":487,"props":488,"children":491},"pre",{"className":489,"code":490,"language":475,"meta":463,"style":463},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n输出：6\n解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",[492],{"type":470,"tag":493,"props":494,"children":495},"code",{"__ignoreMap":463},[496,507,516],{"type":470,"tag":497,"props":498,"children":501},"span",{"class":499,"line":500},"line",1,[502],{"type":470,"tag":497,"props":503,"children":504},{},[505],{"type":475,"value":506},"输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n",{"type":470,"tag":497,"props":508,"children":510},{"class":499,"line":509},2,[511],{"type":470,"tag":497,"props":512,"children":513},{},[514],{"type":475,"value":515},"输出：6\n",{"type":470,"tag":497,"props":517,"children":519},{"class":499,"line":518},3,[520],{"type":470,"tag":497,"props":521,"children":522},{},[523],{"type":475,"value":524},"解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",{"type":470,"tag":471,"props":526,"children":527},{},[528],{"type":475,"value":529},"示例 2：",{"type":470,"tag":487,"props":531,"children":533},{"className":489,"code":532,"language":475,"meta":463,"style":463},"输入：nums = [1]\n输出：1\n",[534],{"type":470,"tag":493,"props":535,"children":536},{"__ignoreMap":463},[537,545],{"type":470,"tag":497,"props":538,"children":539},{"class":499,"line":500},[540],{"type":470,"tag":497,"props":541,"children":542},{},[543],{"type":475,"value":544},"输入：nums = [1]\n",{"type":470,"tag":497,"props":546,"children":547},{"class":499,"line":509},[548],{"type":470,"tag":497,"props":549,"children":550},{},[551],{"type":475,"value":552},"输出：1\n",{"type":470,"tag":471,"props":554,"children":555},{},[556],{"type":475,"value":557},"示例 3：",{"type":470,"tag":487,"props":559,"children":561},{"className":489,"code":560,"language":475,"meta":463,"style":463},"输入：nums = [5,4,-1,7,8]\n输出：23\n",[562],{"type":470,"tag":493,"props":563,"children":564},{"__ignoreMap":463},[565,573],{"type":470,"tag":497,"props":566,"children":567},{"class":499,"line":500},[568],{"type":470,"tag":497,"props":569,"children":570},{},[571],{"type":475,"value":572},"输入：nums = [5,4,-1,7,8]\n",{"type":470,"tag":497,"props":574,"children":575},{"class":499,"line":509},[576],{"type":470,"tag":497,"props":577,"children":578},{},[579],{"type":475,"value":580},"输出：23\n",{"type":470,"tag":471,"props":582,"children":583},{},[584],{"type":475,"value":585},"提示：",{"type":470,"tag":587,"props":588,"children":589},"ul",{},[590,596],{"type":470,"tag":591,"props":592,"children":593},"li",{},[594],{"type":475,"value":595},"1 \u003C= nums.length \u003C= 105",{"type":470,"tag":591,"props":597,"children":598},{},[599],{"type":475,"value":600},"-104 \u003C= nums[i] \u003C= 104",{"type":470,"tag":471,"props":602,"children":603},{},[604],{"type":475,"value":605},"进阶：如果你已经实现复杂度为 O(n) 的解法，尝试使用更为精妙的 分治法 求解。",{"type":470,"tag":607,"props":608,"children":610},"h2",{"id":609},"解题思路",[611],{"type":475,"value":609},{"type":470,"tag":607,"props":613,"children":615},{"id":614},"实现",[616],{"type":475,"value":614},{"type":470,"tag":618,"props":619,"children":621},"h3",{"id":620},"动态规划",[622],{"type":475,"value":620},{"type":470,"tag":487,"props":624,"children":628},{"className":625,"code":626,"language":627,"meta":463,"style":463},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSubArray = function (nums) {\n  let dp = [];\n  dp[0] = nums[0];\n  let res = dp[0];\n  for (let i = 1; i \u003C nums.length; i++) {\n    dp[i] = Math.max(dp[i - 1] + nums[i], nums[i]);\n    res = Math.max(res, dp[i]);\n  }\n  return res;\n};\n","js",[629],{"type":470,"tag":493,"props":630,"children":631},{"__ignoreMap":463},[632,641,667,684,693,737,767,819,856,935,1053,1111,1120,1137],{"type":470,"tag":497,"props":633,"children":634},{"class":499,"line":500},[635],{"type":470,"tag":497,"props":636,"children":638},{"style":637},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[639],{"type":475,"value":640},"/**\n",{"type":470,"tag":497,"props":642,"children":643},{"class":499,"line":509},[644,649,655,661],{"type":470,"tag":497,"props":645,"children":646},{"style":637},[647],{"type":475,"value":648}," * ",{"type":470,"tag":497,"props":650,"children":652},{"style":651},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[653],{"type":475,"value":654},"@param",{"type":470,"tag":497,"props":656,"children":658},{"style":657},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[659],{"type":475,"value":660}," {number[]}",{"type":470,"tag":497,"props":662,"children":664},{"style":663},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[665],{"type":475,"value":666}," nums\n",{"type":470,"tag":497,"props":668,"children":669},{"class":499,"line":518},[670,674,679],{"type":470,"tag":497,"props":671,"children":672},{"style":637},[673],{"type":475,"value":648},{"type":470,"tag":497,"props":675,"children":676},{"style":651},[677],{"type":475,"value":678},"@return",{"type":470,"tag":497,"props":680,"children":681},{"style":657},[682],{"type":475,"value":683}," {number}\n",{"type":470,"tag":497,"props":685,"children":687},{"class":499,"line":686},4,[688],{"type":470,"tag":497,"props":689,"children":690},{"style":637},[691],{"type":475,"value":692}," */\n",{"type":470,"tag":497,"props":694,"children":696},{"class":499,"line":695},5,[697,703,709,715,720,726,732],{"type":470,"tag":497,"props":698,"children":700},{"style":699},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[701],{"type":475,"value":702},"var",{"type":470,"tag":497,"props":704,"children":706},{"style":705},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[707],{"type":475,"value":708}," maxSubArray",{"type":470,"tag":497,"props":710,"children":712},{"style":711},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[713],{"type":475,"value":714}," =",{"type":470,"tag":497,"props":716,"children":717},{"style":699},[718],{"type":475,"value":719}," function",{"type":470,"tag":497,"props":721,"children":723},{"style":722},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[724],{"type":475,"value":725}," (",{"type":470,"tag":497,"props":727,"children":729},{"style":728},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[730],{"type":475,"value":731},"nums",{"type":470,"tag":497,"props":733,"children":734},{"style":722},[735],{"type":475,"value":736},") {\n",{"type":470,"tag":497,"props":738,"children":740},{"class":499,"line":739},6,[741,746,752,756,761],{"type":470,"tag":497,"props":742,"children":743},{"style":699},[744],{"type":475,"value":745},"  let",{"type":470,"tag":497,"props":747,"children":749},{"style":748},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[750],{"type":475,"value":751}," dp",{"type":470,"tag":497,"props":753,"children":754},{"style":711},[755],{"type":475,"value":714},{"type":470,"tag":497,"props":757,"children":758},{"style":722},[759],{"type":475,"value":760}," []",{"type":470,"tag":497,"props":762,"children":764},{"style":763},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[765],{"type":475,"value":766},";\n",{"type":470,"tag":497,"props":768,"children":770},{"class":499,"line":769},7,[771,776,781,787,792,797,802,806,810,815],{"type":470,"tag":497,"props":772,"children":773},{"style":748},[774],{"type":475,"value":775},"  dp",{"type":470,"tag":497,"props":777,"children":778},{"style":722},[779],{"type":475,"value":780},"[",{"type":470,"tag":497,"props":782,"children":784},{"style":783},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[785],{"type":475,"value":786},"0",{"type":470,"tag":497,"props":788,"children":789},{"style":722},[790],{"type":475,"value":791},"] ",{"type":470,"tag":497,"props":793,"children":794},{"style":711},[795],{"type":475,"value":796},"=",{"type":470,"tag":497,"props":798,"children":799},{"style":748},[800],{"type":475,"value":801}," nums",{"type":470,"tag":497,"props":803,"children":804},{"style":722},[805],{"type":475,"value":780},{"type":470,"tag":497,"props":807,"children":808},{"style":783},[809],{"type":475,"value":786},{"type":470,"tag":497,"props":811,"children":812},{"style":722},[813],{"type":475,"value":814},"]",{"type":470,"tag":497,"props":816,"children":817},{"style":763},[818],{"type":475,"value":766},{"type":470,"tag":497,"props":820,"children":822},{"class":499,"line":821},8,[823,827,832,836,840,844,848,852],{"type":470,"tag":497,"props":824,"children":825},{"style":699},[826],{"type":475,"value":745},{"type":470,"tag":497,"props":828,"children":829},{"style":748},[830],{"type":475,"value":831}," res",{"type":470,"tag":497,"props":833,"children":834},{"style":711},[835],{"type":475,"value":714},{"type":470,"tag":497,"props":837,"children":838},{"style":748},[839],{"type":475,"value":751},{"type":470,"tag":497,"props":841,"children":842},{"style":722},[843],{"type":475,"value":780},{"type":470,"tag":497,"props":845,"children":846},{"style":783},[847],{"type":475,"value":786},{"type":470,"tag":497,"props":849,"children":850},{"style":722},[851],{"type":475,"value":814},{"type":470,"tag":497,"props":853,"children":854},{"style":763},[855],{"type":475,"value":766},{"type":470,"tag":497,"props":857,"children":859},{"class":499,"line":858},9,[860,866,870,875,880,884,889,894,898,903,907,913,918,922,926,931],{"type":470,"tag":497,"props":861,"children":863},{"style":862},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[864],{"type":475,"value":865},"  for",{"type":470,"tag":497,"props":867,"children":868},{"style":722},[869],{"type":475,"value":725},{"type":470,"tag":497,"props":871,"children":872},{"style":699},[873],{"type":475,"value":874},"let",{"type":470,"tag":497,"props":876,"children":877},{"style":748},[878],{"type":475,"value":879}," i",{"type":470,"tag":497,"props":881,"children":882},{"style":711},[883],{"type":475,"value":714},{"type":470,"tag":497,"props":885,"children":886},{"style":783},[887],{"type":475,"value":888}," 1",{"type":470,"tag":497,"props":890,"children":891},{"style":763},[892],{"type":475,"value":893},";",{"type":470,"tag":497,"props":895,"children":896},{"style":748},[897],{"type":475,"value":879},{"type":470,"tag":497,"props":899,"children":900},{"style":711},[901],{"type":475,"value":902}," \u003C",{"type":470,"tag":497,"props":904,"children":905},{"style":748},[906],{"type":475,"value":801},{"type":470,"tag":497,"props":908,"children":910},{"style":909},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[911],{"type":475,"value":912},".",{"type":470,"tag":497,"props":914,"children":915},{"style":722},[916],{"type":475,"value":917},"length",{"type":470,"tag":497,"props":919,"children":920},{"style":763},[921],{"type":475,"value":893},{"type":470,"tag":497,"props":923,"children":924},{"style":748},[925],{"type":475,"value":879},{"type":470,"tag":497,"props":927,"children":928},{"style":711},[929],{"type":475,"value":930},"++",{"type":470,"tag":497,"props":932,"children":933},{"style":722},[934],{"type":475,"value":736},{"type":470,"tag":497,"props":936,"children":938},{"class":499,"line":937},10,[939,944,948,953,957,961,966,970,975,980,985,989,993,998,1002,1006,1011,1015,1019,1023,1027,1032,1036,1040,1044,1049],{"type":470,"tag":497,"props":940,"children":941},{"style":748},[942],{"type":475,"value":943},"    dp",{"type":470,"tag":497,"props":945,"children":946},{"style":722},[947],{"type":475,"value":780},{"type":470,"tag":497,"props":949,"children":950},{"style":748},[951],{"type":475,"value":952},"i",{"type":470,"tag":497,"props":954,"children":955},{"style":722},[956],{"type":475,"value":791},{"type":470,"tag":497,"props":958,"children":959},{"style":711},[960],{"type":475,"value":796},{"type":470,"tag":497,"props":962,"children":963},{"style":748},[964],{"type":475,"value":965}," Math",{"type":470,"tag":497,"props":967,"children":968},{"style":909},[969],{"type":475,"value":912},{"type":470,"tag":497,"props":971,"children":972},{"style":705},[973],{"type":475,"value":974},"max",{"type":470,"tag":497,"props":976,"children":977},{"style":722},[978],{"type":475,"value":979},"(",{"type":470,"tag":497,"props":981,"children":982},{"style":748},[983],{"type":475,"value":984},"dp",{"type":470,"tag":497,"props":986,"children":987},{"style":722},[988],{"type":475,"value":780},{"type":470,"tag":497,"props":990,"children":991},{"style":748},[992],{"type":475,"value":952},{"type":470,"tag":497,"props":994,"children":995},{"style":711},[996],{"type":475,"value":997}," -",{"type":470,"tag":497,"props":999,"children":1000},{"style":783},[1001],{"type":475,"value":888},{"type":470,"tag":497,"props":1003,"children":1004},{"style":722},[1005],{"type":475,"value":791},{"type":470,"tag":497,"props":1007,"children":1008},{"style":711},[1009],{"type":475,"value":1010},"+",{"type":470,"tag":497,"props":1012,"children":1013},{"style":748},[1014],{"type":475,"value":801},{"type":470,"tag":497,"props":1016,"children":1017},{"style":722},[1018],{"type":475,"value":780},{"type":470,"tag":497,"props":1020,"children":1021},{"style":748},[1022],{"type":475,"value":952},{"type":470,"tag":497,"props":1024,"children":1025},{"style":722},[1026],{"type":475,"value":814},{"type":470,"tag":497,"props":1028,"children":1029},{"style":763},[1030],{"type":475,"value":1031},",",{"type":470,"tag":497,"props":1033,"children":1034},{"style":748},[1035],{"type":475,"value":801},{"type":470,"tag":497,"props":1037,"children":1038},{"style":722},[1039],{"type":475,"value":780},{"type":470,"tag":497,"props":1041,"children":1042},{"style":748},[1043],{"type":475,"value":952},{"type":470,"tag":497,"props":1045,"children":1046},{"style":722},[1047],{"type":475,"value":1048},"])",{"type":470,"tag":497,"props":1050,"children":1051},{"style":763},[1052],{"type":475,"value":766},{"type":470,"tag":497,"props":1054,"children":1056},{"class":499,"line":1055},11,[1057,1062,1066,1070,1074,1078,1082,1087,1091,1095,1099,1103,1107],{"type":470,"tag":497,"props":1058,"children":1059},{"style":748},[1060],{"type":475,"value":1061},"    res",{"type":470,"tag":497,"props":1063,"children":1064},{"style":711},[1065],{"type":475,"value":714},{"type":470,"tag":497,"props":1067,"children":1068},{"style":748},[1069],{"type":475,"value":965},{"type":470,"tag":497,"props":1071,"children":1072},{"style":909},[1073],{"type":475,"value":912},{"type":470,"tag":497,"props":1075,"children":1076},{"style":705},[1077],{"type":475,"value":974},{"type":470,"tag":497,"props":1079,"children":1080},{"style":722},[1081],{"type":475,"value":979},{"type":470,"tag":497,"props":1083,"children":1084},{"style":748},[1085],{"type":475,"value":1086},"res",{"type":470,"tag":497,"props":1088,"children":1089},{"style":763},[1090],{"type":475,"value":1031},{"type":470,"tag":497,"props":1092,"children":1093},{"style":748},[1094],{"type":475,"value":751},{"type":470,"tag":497,"props":1096,"children":1097},{"style":722},[1098],{"type":475,"value":780},{"type":470,"tag":497,"props":1100,"children":1101},{"style":748},[1102],{"type":475,"value":952},{"type":470,"tag":497,"props":1104,"children":1105},{"style":722},[1106],{"type":475,"value":1048},{"type":470,"tag":497,"props":1108,"children":1109},{"style":763},[1110],{"type":475,"value":766},{"type":470,"tag":497,"props":1112,"children":1114},{"class":499,"line":1113},12,[1115],{"type":470,"tag":497,"props":1116,"children":1117},{"style":722},[1118],{"type":475,"value":1119},"  }\n",{"type":470,"tag":497,"props":1121,"children":1123},{"class":499,"line":1122},13,[1124,1129,1133],{"type":470,"tag":497,"props":1125,"children":1126},{"style":862},[1127],{"type":475,"value":1128},"  return",{"type":470,"tag":497,"props":1130,"children":1131},{"style":748},[1132],{"type":475,"value":831},{"type":470,"tag":497,"props":1134,"children":1135},{"style":763},[1136],{"type":475,"value":766},{"type":470,"tag":497,"props":1138,"children":1140},{"class":499,"line":1139},14,[1141,1146],{"type":470,"tag":497,"props":1142,"children":1143},{"style":722},[1144],{"type":475,"value":1145},"}",{"type":470,"tag":497,"props":1147,"children":1148},{"style":763},[1149],{"type":475,"value":766},{"type":470,"tag":1151,"props":1152,"children":1153},"style",{},[1154],{"type":475,"value":1155},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":463,"searchDepth":695,"depth":695,"links":1157},[1158,1159],{"id":609,"depth":509,"text":609},{"id":614,"depth":509,"text":614,"children":1160},[1161],{"id":620,"depth":518,"text":620},"markdown","content:1.algorithm:3.leetcode:3.major:53.maximum-subarray.md","content","1.algorithm/3.leetcode/3.major/53.maximum-subarray.md","md",[1168,1170],{"_path":117,"title":116,"description":1169},"给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。",{"_path":123,"title":122,"description":1171},"以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [start_i, end_i] 。请你合并所有重叠的区间，并返回 一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间 。",1713626052846]