[{"data":1,"prerenderedAt":1164},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/maximum-subarray":452,"/algorithm/leetcode/major/maximum-subarray-surround":1159},[4,259,287,431,438],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately",{"title":260,"_path":261,"children":262},"前端八股文","/frontend-endorsement",[263,274],{"title":264,"_path":265,"children":266},"构建工具","/frontend-endorsement/build-tools",[267],{"title":268,"_path":269,"children":270},"Webpack","/frontend-endorsement/build-tools/webpack",[271],{"title":272,"_path":273},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":275,"_path":276,"children":277},"Html","/frontend-endorsement/html",[278,281,284],{"title":279,"_path":280},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":282,"_path":283},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":285,"_path":286},"离线存储","/frontend-endorsement/html/offline-storage",{"title":288,"_path":289,"children":290},"前端代码考核","/frontend-code-assessment",[291,340,424],{"title":292,"_path":293,"children":294},"源码实现","/frontend-code-assessment/source",[295,320,333],{"title":296,"_path":297,"children":298},"原生 api","/frontend-code-assessment/source/native-api",[299,302,305,308,311,314,317],{"title":300,"_path":301},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":303,"_path":304},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":306,"_path":307},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":309,"_path":310},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":312,"_path":313},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":315,"_path":316},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":318,"_path":319},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":321,"_path":322,"children":323},"数组 Array","/frontend-code-assessment/source/array",[324,327,330],{"title":325,"_path":326},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":328,"_path":329},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":331,"_path":332},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":334,"_path":335,"children":336},"字符串 String","/frontend-code-assessment/source/string",[337],{"title":338,"_path":339},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":341,"_path":342,"children":343},"业务场景","/frontend-code-assessment/scene",[344,366,373,376,379,382,385,388,391,394,397,400,403,406,409,412,415,418,421],{"title":345,"_path":346,"children":347},"Promise","/frontend-code-assessment/scene/promise",[348,351,354,357,360,363],{"title":349,"_path":350},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":352,"_path":353},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":355,"_path":356},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":358,"_path":359},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":361,"_path":362},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":364,"_path":365},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":367,"_path":368,"children":369},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[370],{"title":371,"_path":372},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":374,"_path":375},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":377,"_path":378},"倒计时","/frontend-code-assessment/scene/countdown",{"title":380,"_path":381},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":383,"_path":384},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":386,"_path":387},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":389,"_path":390},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":392,"_path":393},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":395,"_path":396},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":398,"_path":399},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":401,"_path":402},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":404,"_path":405},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":407,"_path":408},"随机数","/frontend-code-assessment/scene/random-number",{"title":410,"_path":411},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":413,"_path":414},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":416,"_path":417},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":419,"_path":420},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":422,"_path":423},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":425,"_path":426,"children":427},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[428],{"title":429,"_path":430},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":432,"_path":433,"children":434},"项目","/pro",[435],{"title":436,"_path":437},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":439,"_path":440,"children":441},"后端语言","/backend-languages",[442],{"title":443,"_path":444,"children":445},"Python","/backend-languages/python",[446,449],{"title":447,"_path":448},"基础","/backend-languages/python/base",{"title":450,"_path":451},"函数","/backend-languages/python/function",{"_path":117,"_dir":453,"_draft":454,"_partial":454,"_locale":455,"title":116,"description":456,"url":457,"body":458,"_type":1154,"_id":1155,"_source":1156,"_file":1157,"_extension":1158},"major",false,"","给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。","https://leetcode.cn/problems/maximum-subarray",{"type":459,"children":460,"toc":1148},"root",[461,468,473,478,517,522,545,550,573,578,593,598,604,609,615,1142],{"type":462,"tag":463,"props":464,"children":465},"element","p",{},[466],{"type":467,"value":456},"text",{"type":462,"tag":463,"props":469,"children":470},{},[471],{"type":467,"value":472},"子数组\n是数组中的一个连续部分。",{"type":462,"tag":463,"props":474,"children":475},{},[476],{"type":467,"value":477},"示例 1：",{"type":462,"tag":479,"props":480,"children":483},"pre",{"className":481,"code":482,"language":467,"meta":455,"style":455},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n输出：6\n解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",[484],{"type":462,"tag":485,"props":486,"children":487},"code",{"__ignoreMap":455},[488,499,508],{"type":462,"tag":489,"props":490,"children":493},"span",{"class":491,"line":492},"line",1,[494],{"type":462,"tag":489,"props":495,"children":496},{},[497],{"type":467,"value":498},"输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n",{"type":462,"tag":489,"props":500,"children":502},{"class":491,"line":501},2,[503],{"type":462,"tag":489,"props":504,"children":505},{},[506],{"type":467,"value":507},"输出：6\n",{"type":462,"tag":489,"props":509,"children":511},{"class":491,"line":510},3,[512],{"type":462,"tag":489,"props":513,"children":514},{},[515],{"type":467,"value":516},"解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",{"type":462,"tag":463,"props":518,"children":519},{},[520],{"type":467,"value":521},"示例 2：",{"type":462,"tag":479,"props":523,"children":525},{"className":481,"code":524,"language":467,"meta":455,"style":455},"输入：nums = [1]\n输出：1\n",[526],{"type":462,"tag":485,"props":527,"children":528},{"__ignoreMap":455},[529,537],{"type":462,"tag":489,"props":530,"children":531},{"class":491,"line":492},[532],{"type":462,"tag":489,"props":533,"children":534},{},[535],{"type":467,"value":536},"输入：nums = [1]\n",{"type":462,"tag":489,"props":538,"children":539},{"class":491,"line":501},[540],{"type":462,"tag":489,"props":541,"children":542},{},[543],{"type":467,"value":544},"输出：1\n",{"type":462,"tag":463,"props":546,"children":547},{},[548],{"type":467,"value":549},"示例 3：",{"type":462,"tag":479,"props":551,"children":553},{"className":481,"code":552,"language":467,"meta":455,"style":455},"输入：nums = [5,4,-1,7,8]\n输出：23\n",[554],{"type":462,"tag":485,"props":555,"children":556},{"__ignoreMap":455},[557,565],{"type":462,"tag":489,"props":558,"children":559},{"class":491,"line":492},[560],{"type":462,"tag":489,"props":561,"children":562},{},[563],{"type":467,"value":564},"输入：nums = [5,4,-1,7,8]\n",{"type":462,"tag":489,"props":566,"children":567},{"class":491,"line":501},[568],{"type":462,"tag":489,"props":569,"children":570},{},[571],{"type":467,"value":572},"输出：23\n",{"type":462,"tag":463,"props":574,"children":575},{},[576],{"type":467,"value":577},"提示：",{"type":462,"tag":579,"props":580,"children":581},"ul",{},[582,588],{"type":462,"tag":583,"props":584,"children":585},"li",{},[586],{"type":467,"value":587},"1 \u003C= nums.length \u003C= 105",{"type":462,"tag":583,"props":589,"children":590},{},[591],{"type":467,"value":592},"-104 \u003C= nums[i] \u003C= 104",{"type":462,"tag":463,"props":594,"children":595},{},[596],{"type":467,"value":597},"进阶：如果你已经实现复杂度为 O(n) 的解法，尝试使用更为精妙的 分治法 求解。",{"type":462,"tag":599,"props":600,"children":602},"h2",{"id":601},"解题思路",[603],{"type":467,"value":601},{"type":462,"tag":599,"props":605,"children":607},{"id":606},"实现",[608],{"type":467,"value":606},{"type":462,"tag":610,"props":611,"children":613},"h3",{"id":612},"动态规划",[614],{"type":467,"value":612},{"type":462,"tag":479,"props":616,"children":620},{"className":617,"code":618,"language":619,"meta":455,"style":455},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSubArray = function (nums) {\n  let dp = [];\n  dp[0] = nums[0];\n  let res = dp[0];\n  for (let i = 1; i \u003C nums.length; i++) {\n    dp[i] = Math.max(dp[i - 1] + nums[i], nums[i]);\n    res = Math.max(res, dp[i]);\n  }\n  return res;\n};\n","js",[621],{"type":462,"tag":485,"props":622,"children":623},{"__ignoreMap":455},[624,633,659,676,685,729,759,811,848,927,1045,1103,1112,1129],{"type":462,"tag":489,"props":625,"children":626},{"class":491,"line":492},[627],{"type":462,"tag":489,"props":628,"children":630},{"style":629},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[631],{"type":467,"value":632},"/**\n",{"type":462,"tag":489,"props":634,"children":635},{"class":491,"line":501},[636,641,647,653],{"type":462,"tag":489,"props":637,"children":638},{"style":629},[639],{"type":467,"value":640}," * ",{"type":462,"tag":489,"props":642,"children":644},{"style":643},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[645],{"type":467,"value":646},"@param",{"type":462,"tag":489,"props":648,"children":650},{"style":649},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[651],{"type":467,"value":652}," {number[]}",{"type":462,"tag":489,"props":654,"children":656},{"style":655},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[657],{"type":467,"value":658}," nums\n",{"type":462,"tag":489,"props":660,"children":661},{"class":491,"line":510},[662,666,671],{"type":462,"tag":489,"props":663,"children":664},{"style":629},[665],{"type":467,"value":640},{"type":462,"tag":489,"props":667,"children":668},{"style":643},[669],{"type":467,"value":670},"@return",{"type":462,"tag":489,"props":672,"children":673},{"style":649},[674],{"type":467,"value":675}," {number}\n",{"type":462,"tag":489,"props":677,"children":679},{"class":491,"line":678},4,[680],{"type":462,"tag":489,"props":681,"children":682},{"style":629},[683],{"type":467,"value":684}," */\n",{"type":462,"tag":489,"props":686,"children":688},{"class":491,"line":687},5,[689,695,701,707,712,718,724],{"type":462,"tag":489,"props":690,"children":692},{"style":691},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[693],{"type":467,"value":694},"var",{"type":462,"tag":489,"props":696,"children":698},{"style":697},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[699],{"type":467,"value":700}," maxSubArray",{"type":462,"tag":489,"props":702,"children":704},{"style":703},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[705],{"type":467,"value":706}," =",{"type":462,"tag":489,"props":708,"children":709},{"style":691},[710],{"type":467,"value":711}," function",{"type":462,"tag":489,"props":713,"children":715},{"style":714},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[716],{"type":467,"value":717}," (",{"type":462,"tag":489,"props":719,"children":721},{"style":720},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[722],{"type":467,"value":723},"nums",{"type":462,"tag":489,"props":725,"children":726},{"style":714},[727],{"type":467,"value":728},") {\n",{"type":462,"tag":489,"props":730,"children":732},{"class":491,"line":731},6,[733,738,744,748,753],{"type":462,"tag":489,"props":734,"children":735},{"style":691},[736],{"type":467,"value":737},"  let",{"type":462,"tag":489,"props":739,"children":741},{"style":740},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[742],{"type":467,"value":743}," dp",{"type":462,"tag":489,"props":745,"children":746},{"style":703},[747],{"type":467,"value":706},{"type":462,"tag":489,"props":749,"children":750},{"style":714},[751],{"type":467,"value":752}," []",{"type":462,"tag":489,"props":754,"children":756},{"style":755},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[757],{"type":467,"value":758},";\n",{"type":462,"tag":489,"props":760,"children":762},{"class":491,"line":761},7,[763,768,773,779,784,789,794,798,802,807],{"type":462,"tag":489,"props":764,"children":765},{"style":740},[766],{"type":467,"value":767},"  dp",{"type":462,"tag":489,"props":769,"children":770},{"style":714},[771],{"type":467,"value":772},"[",{"type":462,"tag":489,"props":774,"children":776},{"style":775},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[777],{"type":467,"value":778},"0",{"type":462,"tag":489,"props":780,"children":781},{"style":714},[782],{"type":467,"value":783},"] ",{"type":462,"tag":489,"props":785,"children":786},{"style":703},[787],{"type":467,"value":788},"=",{"type":462,"tag":489,"props":790,"children":791},{"style":740},[792],{"type":467,"value":793}," nums",{"type":462,"tag":489,"props":795,"children":796},{"style":714},[797],{"type":467,"value":772},{"type":462,"tag":489,"props":799,"children":800},{"style":775},[801],{"type":467,"value":778},{"type":462,"tag":489,"props":803,"children":804},{"style":714},[805],{"type":467,"value":806},"]",{"type":462,"tag":489,"props":808,"children":809},{"style":755},[810],{"type":467,"value":758},{"type":462,"tag":489,"props":812,"children":814},{"class":491,"line":813},8,[815,819,824,828,832,836,840,844],{"type":462,"tag":489,"props":816,"children":817},{"style":691},[818],{"type":467,"value":737},{"type":462,"tag":489,"props":820,"children":821},{"style":740},[822],{"type":467,"value":823}," res",{"type":462,"tag":489,"props":825,"children":826},{"style":703},[827],{"type":467,"value":706},{"type":462,"tag":489,"props":829,"children":830},{"style":740},[831],{"type":467,"value":743},{"type":462,"tag":489,"props":833,"children":834},{"style":714},[835],{"type":467,"value":772},{"type":462,"tag":489,"props":837,"children":838},{"style":775},[839],{"type":467,"value":778},{"type":462,"tag":489,"props":841,"children":842},{"style":714},[843],{"type":467,"value":806},{"type":462,"tag":489,"props":845,"children":846},{"style":755},[847],{"type":467,"value":758},{"type":462,"tag":489,"props":849,"children":851},{"class":491,"line":850},9,[852,858,862,867,872,876,881,886,890,895,899,905,910,914,918,923],{"type":462,"tag":489,"props":853,"children":855},{"style":854},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[856],{"type":467,"value":857},"  for",{"type":462,"tag":489,"props":859,"children":860},{"style":714},[861],{"type":467,"value":717},{"type":462,"tag":489,"props":863,"children":864},{"style":691},[865],{"type":467,"value":866},"let",{"type":462,"tag":489,"props":868,"children":869},{"style":740},[870],{"type":467,"value":871}," i",{"type":462,"tag":489,"props":873,"children":874},{"style":703},[875],{"type":467,"value":706},{"type":462,"tag":489,"props":877,"children":878},{"style":775},[879],{"type":467,"value":880}," 1",{"type":462,"tag":489,"props":882,"children":883},{"style":755},[884],{"type":467,"value":885},";",{"type":462,"tag":489,"props":887,"children":888},{"style":740},[889],{"type":467,"value":871},{"type":462,"tag":489,"props":891,"children":892},{"style":703},[893],{"type":467,"value":894}," \u003C",{"type":462,"tag":489,"props":896,"children":897},{"style":740},[898],{"type":467,"value":793},{"type":462,"tag":489,"props":900,"children":902},{"style":901},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[903],{"type":467,"value":904},".",{"type":462,"tag":489,"props":906,"children":907},{"style":714},[908],{"type":467,"value":909},"length",{"type":462,"tag":489,"props":911,"children":912},{"style":755},[913],{"type":467,"value":885},{"type":462,"tag":489,"props":915,"children":916},{"style":740},[917],{"type":467,"value":871},{"type":462,"tag":489,"props":919,"children":920},{"style":703},[921],{"type":467,"value":922},"++",{"type":462,"tag":489,"props":924,"children":925},{"style":714},[926],{"type":467,"value":728},{"type":462,"tag":489,"props":928,"children":930},{"class":491,"line":929},10,[931,936,940,945,949,953,958,962,967,972,977,981,985,990,994,998,1003,1007,1011,1015,1019,1024,1028,1032,1036,1041],{"type":462,"tag":489,"props":932,"children":933},{"style":740},[934],{"type":467,"value":935},"    dp",{"type":462,"tag":489,"props":937,"children":938},{"style":714},[939],{"type":467,"value":772},{"type":462,"tag":489,"props":941,"children":942},{"style":740},[943],{"type":467,"value":944},"i",{"type":462,"tag":489,"props":946,"children":947},{"style":714},[948],{"type":467,"value":783},{"type":462,"tag":489,"props":950,"children":951},{"style":703},[952],{"type":467,"value":788},{"type":462,"tag":489,"props":954,"children":955},{"style":740},[956],{"type":467,"value":957}," Math",{"type":462,"tag":489,"props":959,"children":960},{"style":901},[961],{"type":467,"value":904},{"type":462,"tag":489,"props":963,"children":964},{"style":697},[965],{"type":467,"value":966},"max",{"type":462,"tag":489,"props":968,"children":969},{"style":714},[970],{"type":467,"value":971},"(",{"type":462,"tag":489,"props":973,"children":974},{"style":740},[975],{"type":467,"value":976},"dp",{"type":462,"tag":489,"props":978,"children":979},{"style":714},[980],{"type":467,"value":772},{"type":462,"tag":489,"props":982,"children":983},{"style":740},[984],{"type":467,"value":944},{"type":462,"tag":489,"props":986,"children":987},{"style":703},[988],{"type":467,"value":989}," -",{"type":462,"tag":489,"props":991,"children":992},{"style":775},[993],{"type":467,"value":880},{"type":462,"tag":489,"props":995,"children":996},{"style":714},[997],{"type":467,"value":783},{"type":462,"tag":489,"props":999,"children":1000},{"style":703},[1001],{"type":467,"value":1002},"+",{"type":462,"tag":489,"props":1004,"children":1005},{"style":740},[1006],{"type":467,"value":793},{"type":462,"tag":489,"props":1008,"children":1009},{"style":714},[1010],{"type":467,"value":772},{"type":462,"tag":489,"props":1012,"children":1013},{"style":740},[1014],{"type":467,"value":944},{"type":462,"tag":489,"props":1016,"children":1017},{"style":714},[1018],{"type":467,"value":806},{"type":462,"tag":489,"props":1020,"children":1021},{"style":755},[1022],{"type":467,"value":1023},",",{"type":462,"tag":489,"props":1025,"children":1026},{"style":740},[1027],{"type":467,"value":793},{"type":462,"tag":489,"props":1029,"children":1030},{"style":714},[1031],{"type":467,"value":772},{"type":462,"tag":489,"props":1033,"children":1034},{"style":740},[1035],{"type":467,"value":944},{"type":462,"tag":489,"props":1037,"children":1038},{"style":714},[1039],{"type":467,"value":1040},"])",{"type":462,"tag":489,"props":1042,"children":1043},{"style":755},[1044],{"type":467,"value":758},{"type":462,"tag":489,"props":1046,"children":1048},{"class":491,"line":1047},11,[1049,1054,1058,1062,1066,1070,1074,1079,1083,1087,1091,1095,1099],{"type":462,"tag":489,"props":1050,"children":1051},{"style":740},[1052],{"type":467,"value":1053},"    res",{"type":462,"tag":489,"props":1055,"children":1056},{"style":703},[1057],{"type":467,"value":706},{"type":462,"tag":489,"props":1059,"children":1060},{"style":740},[1061],{"type":467,"value":957},{"type":462,"tag":489,"props":1063,"children":1064},{"style":901},[1065],{"type":467,"value":904},{"type":462,"tag":489,"props":1067,"children":1068},{"style":697},[1069],{"type":467,"value":966},{"type":462,"tag":489,"props":1071,"children":1072},{"style":714},[1073],{"type":467,"value":971},{"type":462,"tag":489,"props":1075,"children":1076},{"style":740},[1077],{"type":467,"value":1078},"res",{"type":462,"tag":489,"props":1080,"children":1081},{"style":755},[1082],{"type":467,"value":1023},{"type":462,"tag":489,"props":1084,"children":1085},{"style":740},[1086],{"type":467,"value":743},{"type":462,"tag":489,"props":1088,"children":1089},{"style":714},[1090],{"type":467,"value":772},{"type":462,"tag":489,"props":1092,"children":1093},{"style":740},[1094],{"type":467,"value":944},{"type":462,"tag":489,"props":1096,"children":1097},{"style":714},[1098],{"type":467,"value":1040},{"type":462,"tag":489,"props":1100,"children":1101},{"style":755},[1102],{"type":467,"value":758},{"type":462,"tag":489,"props":1104,"children":1106},{"class":491,"line":1105},12,[1107],{"type":462,"tag":489,"props":1108,"children":1109},{"style":714},[1110],{"type":467,"value":1111},"  }\n",{"type":462,"tag":489,"props":1113,"children":1115},{"class":491,"line":1114},13,[1116,1121,1125],{"type":462,"tag":489,"props":1117,"children":1118},{"style":854},[1119],{"type":467,"value":1120},"  return",{"type":462,"tag":489,"props":1122,"children":1123},{"style":740},[1124],{"type":467,"value":823},{"type":462,"tag":489,"props":1126,"children":1127},{"style":755},[1128],{"type":467,"value":758},{"type":462,"tag":489,"props":1130,"children":1132},{"class":491,"line":1131},14,[1133,1138],{"type":462,"tag":489,"props":1134,"children":1135},{"style":714},[1136],{"type":467,"value":1137},"}",{"type":462,"tag":489,"props":1139,"children":1140},{"style":755},[1141],{"type":467,"value":758},{"type":462,"tag":1143,"props":1144,"children":1145},"style",{},[1146],{"type":467,"value":1147},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":455,"searchDepth":687,"depth":687,"links":1149},[1150,1151],{"id":601,"depth":501,"text":601},{"id":606,"depth":501,"text":606,"children":1152},[1153],{"id":612,"depth":510,"text":612},"markdown","content:1.algorithm:3.leetcode:3.major:53.maximum-subarray.md","content","1.algorithm/3.leetcode/3.major/53.maximum-subarray.md","md",[1160,1162],{"_path":114,"title":113,"description":1161},"给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。",{"_path":120,"title":119,"description":1163},"以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [start_i, end_i] 。请你合并所有重叠的区间，并返回 一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间 。",1713457420064]