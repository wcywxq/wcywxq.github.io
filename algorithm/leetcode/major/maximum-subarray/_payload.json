[{"data":1,"prerenderedAt":1225},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/maximum-subarray":509,"/algorithm/leetcode/major/maximum-subarray-surround":1220},[4,269,298,477,485,494],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":476},"代码考核","/code-assessment",[302,376,469],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370,373],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":374,"_path":375},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":377,"_path":378,"children":379},"业务场景","/code-assessment/scene",[380,405,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463,466],{"title":381,"_path":382,"children":383},"Promise","/code-assessment/scene/promise",[384,387,390,393,396,399,402],{"title":385,"_path":386},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":388,"_path":389},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":391,"_path":392},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":394,"_path":395},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":397,"_path":398},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":400,"_path":401},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":403,"_path":404},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":406,"_path":407,"children":408},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[409,412],{"title":410,"_path":411},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":413,"_path":414},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":416,"_path":417},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":419,"_path":420},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":422,"_path":423},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":425,"_path":426},"倒计时","/code-assessment/scene/countdown",{"title":428,"_path":429},"日期格式化","/code-assessment/scene/date-format",{"title":431,"_path":432},"实现前端路由","/code-assessment/scene/frontend-route",{"title":434,"_path":435},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":437,"_path":438},"lodash.get","/code-assessment/scene/lodash-get",{"title":440,"_path":441},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":443,"_path":444},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":446,"_path":447},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":449,"_path":450},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":452,"_path":453},"随机数","/code-assessment/scene/random-number",{"title":455,"_path":456},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":458,"_path":459},"sku 算法实现","/code-assessment/scene/sku",{"title":461,"_path":462},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":464,"_path":465},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":467,"_path":468},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":470,"_path":471,"children":472},"Ts 类型挑战","/code-assessment/type-challeges",[473],{"title":474,"_path":475},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":478,"_path":479,"children":480,"icon":484},"项目","/project",[481],{"title":482,"_path":483},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":486,"_path":487,"children":488,"icon":493},"设计模式","/design-mode",[489,490],{"title":486,"_path":487},{"title":491,"_path":492},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":495,"_path":496,"children":497,"icon":508},"后端语言","/backend-languages",[498],{"title":499,"_path":500,"children":501},"Python","/backend-languages/python",[502,505],{"title":503,"_path":504},"基础","/backend-languages/python/base",{"title":506,"_path":507},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":126,"_dir":510,"_draft":511,"_partial":511,"_locale":512,"title":125,"description":513,"url":514,"body":515,"_type":1215,"_id":1216,"_source":1217,"_file":1218,"_extension":1219},"major",false,"","给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。","https://leetcode.cn/problems/maximum-subarray",{"type":516,"children":517,"toc":1209},"root",[518,525,530,535,574,579,602,607,630,635,650,655,661,666,672,1203],{"type":519,"tag":520,"props":521,"children":522},"element","p",{},[523],{"type":524,"value":513},"text",{"type":519,"tag":520,"props":526,"children":527},{},[528],{"type":524,"value":529},"子数组\n是数组中的一个连续部分。",{"type":519,"tag":520,"props":531,"children":532},{},[533],{"type":524,"value":534},"示例 1：",{"type":519,"tag":536,"props":537,"children":540},"pre",{"className":538,"code":539,"language":524,"meta":512,"style":512},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n输出：6\n解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",[541],{"type":519,"tag":542,"props":543,"children":544},"code",{"__ignoreMap":512},[545,556,565],{"type":519,"tag":546,"props":547,"children":550},"span",{"class":548,"line":549},"line",1,[551],{"type":519,"tag":546,"props":552,"children":553},{},[554],{"type":524,"value":555},"输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n",{"type":519,"tag":546,"props":557,"children":559},{"class":548,"line":558},2,[560],{"type":519,"tag":546,"props":561,"children":562},{},[563],{"type":524,"value":564},"输出：6\n",{"type":519,"tag":546,"props":566,"children":568},{"class":548,"line":567},3,[569],{"type":519,"tag":546,"props":570,"children":571},{},[572],{"type":524,"value":573},"解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",{"type":519,"tag":520,"props":575,"children":576},{},[577],{"type":524,"value":578},"示例 2：",{"type":519,"tag":536,"props":580,"children":582},{"className":538,"code":581,"language":524,"meta":512,"style":512},"输入：nums = [1]\n输出：1\n",[583],{"type":519,"tag":542,"props":584,"children":585},{"__ignoreMap":512},[586,594],{"type":519,"tag":546,"props":587,"children":588},{"class":548,"line":549},[589],{"type":519,"tag":546,"props":590,"children":591},{},[592],{"type":524,"value":593},"输入：nums = [1]\n",{"type":519,"tag":546,"props":595,"children":596},{"class":548,"line":558},[597],{"type":519,"tag":546,"props":598,"children":599},{},[600],{"type":524,"value":601},"输出：1\n",{"type":519,"tag":520,"props":603,"children":604},{},[605],{"type":524,"value":606},"示例 3：",{"type":519,"tag":536,"props":608,"children":610},{"className":538,"code":609,"language":524,"meta":512,"style":512},"输入：nums = [5,4,-1,7,8]\n输出：23\n",[611],{"type":519,"tag":542,"props":612,"children":613},{"__ignoreMap":512},[614,622],{"type":519,"tag":546,"props":615,"children":616},{"class":548,"line":549},[617],{"type":519,"tag":546,"props":618,"children":619},{},[620],{"type":524,"value":621},"输入：nums = [5,4,-1,7,8]\n",{"type":519,"tag":546,"props":623,"children":624},{"class":548,"line":558},[625],{"type":519,"tag":546,"props":626,"children":627},{},[628],{"type":524,"value":629},"输出：23\n",{"type":519,"tag":520,"props":631,"children":632},{},[633],{"type":524,"value":634},"提示：",{"type":519,"tag":636,"props":637,"children":638},"ul",{},[639,645],{"type":519,"tag":640,"props":641,"children":642},"li",{},[643],{"type":524,"value":644},"1 \u003C= nums.length \u003C= 105",{"type":519,"tag":640,"props":646,"children":647},{},[648],{"type":524,"value":649},"-104 \u003C= nums[i] \u003C= 104",{"type":519,"tag":520,"props":651,"children":652},{},[653],{"type":524,"value":654},"进阶：如果你已经实现复杂度为 O(n) 的解法，尝试使用更为精妙的 分治法 求解。",{"type":519,"tag":656,"props":657,"children":659},"h2",{"id":658},"解题思路",[660],{"type":524,"value":658},{"type":519,"tag":656,"props":662,"children":664},{"id":663},"实现",[665],{"type":524,"value":663},{"type":519,"tag":667,"props":668,"children":670},"h3",{"id":669},"动态规划",[671],{"type":524,"value":669},{"type":519,"tag":536,"props":673,"children":677},{"className":674,"code":675,"language":676,"meta":512,"style":512},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSubArray = function (nums) {\n  let dp = [];\n  dp[0] = nums[0];\n  let res = dp[0];\n  for (let i = 1; i \u003C nums.length; i++) {\n    dp[i] = Math.max(dp[i - 1] + nums[i], nums[i]);\n    res = Math.max(res, dp[i]);\n  }\n  return res;\n};\n","js",[678],{"type":519,"tag":542,"props":679,"children":680},{"__ignoreMap":512},[681,690,732,762,771,817,840,887,920,1002,1112,1167,1176,1194],{"type":519,"tag":546,"props":682,"children":683},{"class":548,"line":549},[684],{"type":519,"tag":546,"props":685,"children":687},{"style":686},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[688],{"type":524,"value":689},"/**\n",{"type":519,"tag":546,"props":691,"children":692},{"class":548,"line":558},[693,698,704,710,715,721,726],{"type":519,"tag":546,"props":694,"children":695},{"style":686},[696],{"type":524,"value":697}," * ",{"type":519,"tag":546,"props":699,"children":701},{"style":700},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[702],{"type":524,"value":703},"@",{"type":519,"tag":546,"props":705,"children":707},{"style":706},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[708],{"type":524,"value":709},"param",{"type":519,"tag":546,"props":711,"children":712},{"style":700},[713],{"type":524,"value":714}," {",{"type":519,"tag":546,"props":716,"children":718},{"style":717},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[719],{"type":524,"value":720},"number[]",{"type":519,"tag":546,"props":722,"children":723},{"style":700},[724],{"type":524,"value":725},"}",{"type":519,"tag":546,"props":727,"children":729},{"style":728},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[730],{"type":524,"value":731}," nums\n",{"type":519,"tag":546,"props":733,"children":734},{"class":548,"line":567},[735,739,743,748,752,757],{"type":519,"tag":546,"props":736,"children":737},{"style":686},[738],{"type":524,"value":697},{"type":519,"tag":546,"props":740,"children":741},{"style":700},[742],{"type":524,"value":703},{"type":519,"tag":546,"props":744,"children":745},{"style":706},[746],{"type":524,"value":747},"return",{"type":519,"tag":546,"props":749,"children":750},{"style":700},[751],{"type":524,"value":714},{"type":519,"tag":546,"props":753,"children":754},{"style":717},[755],{"type":524,"value":756},"number",{"type":519,"tag":546,"props":758,"children":759},{"style":700},[760],{"type":524,"value":761},"}\n",{"type":519,"tag":546,"props":763,"children":765},{"class":548,"line":764},4,[766],{"type":519,"tag":546,"props":767,"children":768},{"style":686},[769],{"type":524,"value":770}," */\n",{"type":519,"tag":546,"props":772,"children":774},{"class":548,"line":773},5,[775,781,787,792,797,802,807,812],{"type":519,"tag":546,"props":776,"children":778},{"style":777},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[779],{"type":524,"value":780},"var",{"type":519,"tag":546,"props":782,"children":784},{"style":783},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[785],{"type":524,"value":786}," maxSubArray",{"type":519,"tag":546,"props":788,"children":789},{"style":700},[790],{"type":524,"value":791}," =",{"type":519,"tag":546,"props":793,"children":794},{"style":777},[795],{"type":524,"value":796}," function",{"type":519,"tag":546,"props":798,"children":799},{"style":700},[800],{"type":524,"value":801}," (",{"type":519,"tag":546,"props":803,"children":804},{"style":728},[805],{"type":524,"value":806},"nums",{"type":519,"tag":546,"props":808,"children":809},{"style":700},[810],{"type":524,"value":811},")",{"type":519,"tag":546,"props":813,"children":814},{"style":700},[815],{"type":524,"value":816}," {\n",{"type":519,"tag":546,"props":818,"children":820},{"class":548,"line":819},6,[821,826,831,835],{"type":519,"tag":546,"props":822,"children":823},{"style":777},[824],{"type":524,"value":825},"  let",{"type":519,"tag":546,"props":827,"children":828},{"style":728},[829],{"type":524,"value":830}," dp",{"type":519,"tag":546,"props":832,"children":833},{"style":700},[834],{"type":524,"value":791},{"type":519,"tag":546,"props":836,"children":837},{"style":700},[838],{"type":524,"value":839}," [];\n",{"type":519,"tag":546,"props":841,"children":843},{"class":548,"line":842},7,[844,849,854,860,865,869,874,878,882],{"type":519,"tag":546,"props":845,"children":846},{"style":728},[847],{"type":524,"value":848},"  dp",{"type":519,"tag":546,"props":850,"children":851},{"style":700},[852],{"type":524,"value":853},"[",{"type":519,"tag":546,"props":855,"children":857},{"style":856},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[858],{"type":524,"value":859},"0",{"type":519,"tag":546,"props":861,"children":862},{"style":700},[863],{"type":524,"value":864},"]",{"type":519,"tag":546,"props":866,"children":867},{"style":700},[868],{"type":524,"value":791},{"type":519,"tag":546,"props":870,"children":871},{"style":728},[872],{"type":524,"value":873}," nums",{"type":519,"tag":546,"props":875,"children":876},{"style":700},[877],{"type":524,"value":853},{"type":519,"tag":546,"props":879,"children":880},{"style":856},[881],{"type":524,"value":859},{"type":519,"tag":546,"props":883,"children":884},{"style":700},[885],{"type":524,"value":886},"];\n",{"type":519,"tag":546,"props":888,"children":890},{"class":548,"line":889},8,[891,895,900,904,908,912,916],{"type":519,"tag":546,"props":892,"children":893},{"style":777},[894],{"type":524,"value":825},{"type":519,"tag":546,"props":896,"children":897},{"style":728},[898],{"type":524,"value":899}," res",{"type":519,"tag":546,"props":901,"children":902},{"style":700},[903],{"type":524,"value":791},{"type":519,"tag":546,"props":905,"children":906},{"style":728},[907],{"type":524,"value":830},{"type":519,"tag":546,"props":909,"children":910},{"style":700},[911],{"type":524,"value":853},{"type":519,"tag":546,"props":913,"children":914},{"style":856},[915],{"type":524,"value":859},{"type":519,"tag":546,"props":917,"children":918},{"style":700},[919],{"type":524,"value":886},{"type":519,"tag":546,"props":921,"children":923},{"class":548,"line":922},9,[924,929,933,938,943,947,952,957,961,966,970,975,981,985,989,994,998],{"type":519,"tag":546,"props":925,"children":926},{"style":706},[927],{"type":524,"value":928},"  for",{"type":519,"tag":546,"props":930,"children":931},{"style":700},[932],{"type":524,"value":801},{"type":519,"tag":546,"props":934,"children":935},{"style":777},[936],{"type":524,"value":937},"let",{"type":519,"tag":546,"props":939,"children":940},{"style":728},[941],{"type":524,"value":942}," i",{"type":519,"tag":546,"props":944,"children":945},{"style":700},[946],{"type":524,"value":791},{"type":519,"tag":546,"props":948,"children":949},{"style":856},[950],{"type":524,"value":951}," 1",{"type":519,"tag":546,"props":953,"children":954},{"style":700},[955],{"type":524,"value":956},";",{"type":519,"tag":546,"props":958,"children":959},{"style":728},[960],{"type":524,"value":942},{"type":519,"tag":546,"props":962,"children":963},{"style":700},[964],{"type":524,"value":965}," \u003C",{"type":519,"tag":546,"props":967,"children":968},{"style":728},[969],{"type":524,"value":873},{"type":519,"tag":546,"props":971,"children":972},{"style":700},[973],{"type":524,"value":974},".",{"type":519,"tag":546,"props":976,"children":978},{"style":977},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[979],{"type":524,"value":980},"length",{"type":519,"tag":546,"props":982,"children":983},{"style":700},[984],{"type":524,"value":956},{"type":519,"tag":546,"props":986,"children":987},{"style":728},[988],{"type":524,"value":942},{"type":519,"tag":546,"props":990,"children":991},{"style":777},[992],{"type":524,"value":993},"++",{"type":519,"tag":546,"props":995,"children":996},{"style":700},[997],{"type":524,"value":811},{"type":519,"tag":546,"props":999,"children":1000},{"style":700},[1001],{"type":524,"value":816},{"type":519,"tag":546,"props":1003,"children":1005},{"class":548,"line":1004},10,[1006,1011,1015,1020,1024,1028,1033,1037,1042,1047,1052,1056,1060,1065,1069,1073,1078,1082,1086,1090,1095,1099,1103,1107],{"type":519,"tag":546,"props":1007,"children":1008},{"style":728},[1009],{"type":524,"value":1010},"    dp",{"type":519,"tag":546,"props":1012,"children":1013},{"style":700},[1014],{"type":524,"value":853},{"type":519,"tag":546,"props":1016,"children":1017},{"style":728},[1018],{"type":524,"value":1019},"i",{"type":519,"tag":546,"props":1021,"children":1022},{"style":700},[1023],{"type":524,"value":864},{"type":519,"tag":546,"props":1025,"children":1026},{"style":700},[1027],{"type":524,"value":791},{"type":519,"tag":546,"props":1029,"children":1030},{"style":728},[1031],{"type":524,"value":1032}," Math",{"type":519,"tag":546,"props":1034,"children":1035},{"style":700},[1036],{"type":524,"value":974},{"type":519,"tag":546,"props":1038,"children":1039},{"style":783},[1040],{"type":524,"value":1041},"max",{"type":519,"tag":546,"props":1043,"children":1044},{"style":700},[1045],{"type":524,"value":1046},"(",{"type":519,"tag":546,"props":1048,"children":1049},{"style":728},[1050],{"type":524,"value":1051},"dp",{"type":519,"tag":546,"props":1053,"children":1054},{"style":700},[1055],{"type":524,"value":853},{"type":519,"tag":546,"props":1057,"children":1058},{"style":728},[1059],{"type":524,"value":1019},{"type":519,"tag":546,"props":1061,"children":1062},{"style":777},[1063],{"type":524,"value":1064}," -",{"type":519,"tag":546,"props":1066,"children":1067},{"style":856},[1068],{"type":524,"value":951},{"type":519,"tag":546,"props":1070,"children":1071},{"style":700},[1072],{"type":524,"value":864},{"type":519,"tag":546,"props":1074,"children":1075},{"style":777},[1076],{"type":524,"value":1077}," +",{"type":519,"tag":546,"props":1079,"children":1080},{"style":728},[1081],{"type":524,"value":873},{"type":519,"tag":546,"props":1083,"children":1084},{"style":700},[1085],{"type":524,"value":853},{"type":519,"tag":546,"props":1087,"children":1088},{"style":728},[1089],{"type":524,"value":1019},{"type":519,"tag":546,"props":1091,"children":1092},{"style":700},[1093],{"type":524,"value":1094},"],",{"type":519,"tag":546,"props":1096,"children":1097},{"style":728},[1098],{"type":524,"value":873},{"type":519,"tag":546,"props":1100,"children":1101},{"style":700},[1102],{"type":524,"value":853},{"type":519,"tag":546,"props":1104,"children":1105},{"style":728},[1106],{"type":524,"value":1019},{"type":519,"tag":546,"props":1108,"children":1109},{"style":700},[1110],{"type":524,"value":1111},"]);\n",{"type":519,"tag":546,"props":1113,"children":1115},{"class":548,"line":1114},11,[1116,1121,1125,1129,1133,1137,1141,1146,1151,1155,1159,1163],{"type":519,"tag":546,"props":1117,"children":1118},{"style":728},[1119],{"type":524,"value":1120},"    res",{"type":519,"tag":546,"props":1122,"children":1123},{"style":700},[1124],{"type":524,"value":791},{"type":519,"tag":546,"props":1126,"children":1127},{"style":728},[1128],{"type":524,"value":1032},{"type":519,"tag":546,"props":1130,"children":1131},{"style":700},[1132],{"type":524,"value":974},{"type":519,"tag":546,"props":1134,"children":1135},{"style":783},[1136],{"type":524,"value":1041},{"type":519,"tag":546,"props":1138,"children":1139},{"style":700},[1140],{"type":524,"value":1046},{"type":519,"tag":546,"props":1142,"children":1143},{"style":728},[1144],{"type":524,"value":1145},"res",{"type":519,"tag":546,"props":1147,"children":1148},{"style":700},[1149],{"type":524,"value":1150},",",{"type":519,"tag":546,"props":1152,"children":1153},{"style":728},[1154],{"type":524,"value":830},{"type":519,"tag":546,"props":1156,"children":1157},{"style":700},[1158],{"type":524,"value":853},{"type":519,"tag":546,"props":1160,"children":1161},{"style":728},[1162],{"type":524,"value":1019},{"type":519,"tag":546,"props":1164,"children":1165},{"style":700},[1166],{"type":524,"value":1111},{"type":519,"tag":546,"props":1168,"children":1170},{"class":548,"line":1169},12,[1171],{"type":519,"tag":546,"props":1172,"children":1173},{"style":700},[1174],{"type":524,"value":1175},"  }\n",{"type":519,"tag":546,"props":1177,"children":1179},{"class":548,"line":1178},13,[1180,1185,1189],{"type":519,"tag":546,"props":1181,"children":1182},{"style":706},[1183],{"type":524,"value":1184},"  return",{"type":519,"tag":546,"props":1186,"children":1187},{"style":728},[1188],{"type":524,"value":899},{"type":519,"tag":546,"props":1190,"children":1191},{"style":700},[1192],{"type":524,"value":1193},";\n",{"type":519,"tag":546,"props":1195,"children":1197},{"class":548,"line":1196},14,[1198],{"type":519,"tag":546,"props":1199,"children":1200},{"style":700},[1201],{"type":524,"value":1202},"};\n",{"type":519,"tag":1204,"props":1205,"children":1206},"style",{},[1207],{"type":524,"value":1208},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":512,"searchDepth":773,"depth":773,"links":1210},[1211,1212],{"id":658,"depth":558,"text":658},{"id":663,"depth":558,"text":663,"children":1213},[1214],{"id":669,"depth":567,"text":669},"markdown","content:1.algorithm:3.leetcode:3.major:53.maximum-subarray.md","content","1.algorithm/3.leetcode/3.major/53.maximum-subarray.md","md",[1221,1223],{"_path":123,"title":122,"description":1222},"给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。",{"_path":129,"title":128,"description":1224},"以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [start_i, end_i] 。请你合并所有重叠的区间，并返回 一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间 。",1714059004054]