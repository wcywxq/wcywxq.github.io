[{"data":1,"prerenderedAt":1265},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/maximum-subarray":549,"/algorithm/leetcode/major/maximum-subarray-surround":1260},[4,272,301,517,525,534],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":516},"代码考核","/code-assessment",[305,407,509],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,340,356,384,391,398,401,404],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342,"children":343},"函数 Function","/code-assessment/source/function",[344,347,350,353],{"title":345,"_path":346},"函数防抖","/code-assessment/source/function/debounce",{"title":348,"_path":349},"函数节流","/code-assessment/source/function/throttle",{"title":351,"_path":352},"函数柯理化","/code-assessment/source/function/curry",{"title":354,"_path":355},"函数睡眠","/code-assessment/source/function/sleep",{"title":357,"_path":358,"children":359},"数组 Array","/code-assessment/source/array",[360,363,366,369,372,375,378,381],{"title":361,"_path":362},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":364,"_path":365},"数组扁平化","/code-assessment/source/array/flat",{"title":367,"_path":368},"原型方法","/code-assessment/source/array/prototype-method",{"title":370,"_path":371},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":373,"_path":374},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":376,"_path":377},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":379,"_path":380},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":382,"_path":383},"二维数组","/code-assessment/source/array/2d-array",{"title":385,"_path":386,"children":387},"字符串 String","/code-assessment/source/string",[388],{"title":389,"_path":390},"repeat()","/code-assessment/source/string/repeat",{"title":392,"_path":393,"children":394},"集合 Set","/code-assessment/source/set",[395],{"title":396,"_path":397},"遍历集合","/code-assessment/source/set/traverse",{"title":399,"_path":400},"获取通用类型","/code-assessment/source/get-generic-type",{"title":402,"_path":403},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":405,"_path":406},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":408,"_path":409,"children":410},"业务场景","/code-assessment/scene",[411,442,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506],{"title":412,"_path":413,"children":414},"Promise","/code-assessment/scene/promise",[415,418,421,424,427,430,433,436,439],{"title":416,"_path":417},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":419,"_path":420},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":422,"_path":423},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":425,"_path":426},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":428,"_path":429},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":431,"_path":432},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":434,"_path":435},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":437,"_path":438},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":440,"_path":441},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":443,"_path":444,"children":445},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[446,449],{"title":447,"_path":448},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":450,"_path":451},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":453,"_path":454},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":456,"_path":457},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":459,"_path":460},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":462,"_path":463},"倒计时","/code-assessment/scene/countdown",{"title":465,"_path":466},"日期格式化","/code-assessment/scene/date-format",{"title":468,"_path":469},"实现前端路由","/code-assessment/scene/frontend-route",{"title":471,"_path":472},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":474,"_path":475},"lodash.get","/code-assessment/scene/lodash-get",{"title":477,"_path":478},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":480,"_path":481},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":483,"_path":484},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":486,"_path":487},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":489,"_path":490},"随机数","/code-assessment/scene/random-number",{"title":492,"_path":493},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":495,"_path":496},"sku 算法实现","/code-assessment/scene/sku",{"title":498,"_path":499},"整数分割","/code-assessment/scene/split-number",{"title":501,"_path":502},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":504,"_path":505},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":507,"_path":508},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":510,"_path":511,"children":512},"Ts 类型挑战","/code-assessment/type-challeges",[513],{"title":514,"_path":515},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":518,"_path":519,"children":520,"icon":524},"项目","/project",[521],{"title":522,"_path":523},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":526,"_path":527,"children":528,"icon":533},"设计模式","/design-mode",[529,530],{"title":526,"_path":527},{"title":531,"_path":532},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":535,"_path":536,"children":537,"icon":548},"后端语言","/backend-languages",[538],{"title":539,"_path":540,"children":541},"Python","/backend-languages/python",[542,545],{"title":543,"_path":544},"基础","/backend-languages/python/base",{"title":546,"_path":547},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":126,"_dir":550,"_draft":551,"_partial":551,"_locale":552,"title":125,"description":553,"url":554,"body":555,"_type":1255,"_id":1256,"_source":1257,"_file":1258,"_extension":1259},"major",false,"","给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。","https://leetcode.cn/problems/maximum-subarray",{"type":556,"children":557,"toc":1249},"root",[558,565,570,575,614,619,642,647,670,675,690,695,701,706,712,1243],{"type":559,"tag":560,"props":561,"children":562},"element","p",{},[563],{"type":564,"value":553},"text",{"type":559,"tag":560,"props":566,"children":567},{},[568],{"type":564,"value":569},"子数组\n是数组中的一个连续部分。",{"type":559,"tag":560,"props":571,"children":572},{},[573],{"type":564,"value":574},"示例 1：",{"type":559,"tag":576,"props":577,"children":580},"pre",{"className":578,"code":579,"language":564,"meta":552,"style":552},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n输出：6\n解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",[581],{"type":559,"tag":582,"props":583,"children":584},"code",{"__ignoreMap":552},[585,596,605],{"type":559,"tag":586,"props":587,"children":590},"span",{"class":588,"line":589},"line",1,[591],{"type":559,"tag":586,"props":592,"children":593},{},[594],{"type":564,"value":595},"输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n",{"type":559,"tag":586,"props":597,"children":599},{"class":588,"line":598},2,[600],{"type":559,"tag":586,"props":601,"children":602},{},[603],{"type":564,"value":604},"输出：6\n",{"type":559,"tag":586,"props":606,"children":608},{"class":588,"line":607},3,[609],{"type":559,"tag":586,"props":610,"children":611},{},[612],{"type":564,"value":613},"解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",{"type":559,"tag":560,"props":615,"children":616},{},[617],{"type":564,"value":618},"示例 2：",{"type":559,"tag":576,"props":620,"children":622},{"className":578,"code":621,"language":564,"meta":552,"style":552},"输入：nums = [1]\n输出：1\n",[623],{"type":559,"tag":582,"props":624,"children":625},{"__ignoreMap":552},[626,634],{"type":559,"tag":586,"props":627,"children":628},{"class":588,"line":589},[629],{"type":559,"tag":586,"props":630,"children":631},{},[632],{"type":564,"value":633},"输入：nums = [1]\n",{"type":559,"tag":586,"props":635,"children":636},{"class":588,"line":598},[637],{"type":559,"tag":586,"props":638,"children":639},{},[640],{"type":564,"value":641},"输出：1\n",{"type":559,"tag":560,"props":643,"children":644},{},[645],{"type":564,"value":646},"示例 3：",{"type":559,"tag":576,"props":648,"children":650},{"className":578,"code":649,"language":564,"meta":552,"style":552},"输入：nums = [5,4,-1,7,8]\n输出：23\n",[651],{"type":559,"tag":582,"props":652,"children":653},{"__ignoreMap":552},[654,662],{"type":559,"tag":586,"props":655,"children":656},{"class":588,"line":589},[657],{"type":559,"tag":586,"props":658,"children":659},{},[660],{"type":564,"value":661},"输入：nums = [5,4,-1,7,8]\n",{"type":559,"tag":586,"props":663,"children":664},{"class":588,"line":598},[665],{"type":559,"tag":586,"props":666,"children":667},{},[668],{"type":564,"value":669},"输出：23\n",{"type":559,"tag":560,"props":671,"children":672},{},[673],{"type":564,"value":674},"提示：",{"type":559,"tag":676,"props":677,"children":678},"ul",{},[679,685],{"type":559,"tag":680,"props":681,"children":682},"li",{},[683],{"type":564,"value":684},"1 \u003C= nums.length \u003C= 105",{"type":559,"tag":680,"props":686,"children":687},{},[688],{"type":564,"value":689},"-104 \u003C= nums[i] \u003C= 104",{"type":559,"tag":560,"props":691,"children":692},{},[693],{"type":564,"value":694},"进阶：如果你已经实现复杂度为 O(n) 的解法，尝试使用更为精妙的 分治法 求解。",{"type":559,"tag":696,"props":697,"children":699},"h2",{"id":698},"解题思路",[700],{"type":564,"value":698},{"type":559,"tag":696,"props":702,"children":704},{"id":703},"实现",[705],{"type":564,"value":703},{"type":559,"tag":707,"props":708,"children":710},"h3",{"id":709},"动态规划",[711],{"type":564,"value":709},{"type":559,"tag":576,"props":713,"children":717},{"className":714,"code":715,"language":716,"meta":552,"style":552},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSubArray = function (nums) {\n  let dp = [];\n  dp[0] = nums[0];\n  let res = dp[0];\n  for (let i = 1; i \u003C nums.length; i++) {\n    dp[i] = Math.max(dp[i - 1] + nums[i], nums[i]);\n    res = Math.max(res, dp[i]);\n  }\n  return res;\n};\n","js",[718],{"type":559,"tag":582,"props":719,"children":720},{"__ignoreMap":552},[721,730,772,802,811,857,880,927,960,1042,1152,1207,1216,1234],{"type":559,"tag":586,"props":722,"children":723},{"class":588,"line":589},[724],{"type":559,"tag":586,"props":725,"children":727},{"style":726},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[728],{"type":564,"value":729},"/**\n",{"type":559,"tag":586,"props":731,"children":732},{"class":588,"line":598},[733,738,744,750,755,761,766],{"type":559,"tag":586,"props":734,"children":735},{"style":726},[736],{"type":564,"value":737}," * ",{"type":559,"tag":586,"props":739,"children":741},{"style":740},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[742],{"type":564,"value":743},"@",{"type":559,"tag":586,"props":745,"children":747},{"style":746},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[748],{"type":564,"value":749},"param",{"type":559,"tag":586,"props":751,"children":752},{"style":740},[753],{"type":564,"value":754}," {",{"type":559,"tag":586,"props":756,"children":758},{"style":757},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[759],{"type":564,"value":760},"number[]",{"type":559,"tag":586,"props":762,"children":763},{"style":740},[764],{"type":564,"value":765},"}",{"type":559,"tag":586,"props":767,"children":769},{"style":768},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[770],{"type":564,"value":771}," nums\n",{"type":559,"tag":586,"props":773,"children":774},{"class":588,"line":607},[775,779,783,788,792,797],{"type":559,"tag":586,"props":776,"children":777},{"style":726},[778],{"type":564,"value":737},{"type":559,"tag":586,"props":780,"children":781},{"style":740},[782],{"type":564,"value":743},{"type":559,"tag":586,"props":784,"children":785},{"style":746},[786],{"type":564,"value":787},"return",{"type":559,"tag":586,"props":789,"children":790},{"style":740},[791],{"type":564,"value":754},{"type":559,"tag":586,"props":793,"children":794},{"style":757},[795],{"type":564,"value":796},"number",{"type":559,"tag":586,"props":798,"children":799},{"style":740},[800],{"type":564,"value":801},"}\n",{"type":559,"tag":586,"props":803,"children":805},{"class":588,"line":804},4,[806],{"type":559,"tag":586,"props":807,"children":808},{"style":726},[809],{"type":564,"value":810}," */\n",{"type":559,"tag":586,"props":812,"children":814},{"class":588,"line":813},5,[815,821,827,832,837,842,847,852],{"type":559,"tag":586,"props":816,"children":818},{"style":817},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[819],{"type":564,"value":820},"var",{"type":559,"tag":586,"props":822,"children":824},{"style":823},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[825],{"type":564,"value":826}," maxSubArray",{"type":559,"tag":586,"props":828,"children":829},{"style":740},[830],{"type":564,"value":831}," =",{"type":559,"tag":586,"props":833,"children":834},{"style":817},[835],{"type":564,"value":836}," function",{"type":559,"tag":586,"props":838,"children":839},{"style":740},[840],{"type":564,"value":841}," (",{"type":559,"tag":586,"props":843,"children":844},{"style":768},[845],{"type":564,"value":846},"nums",{"type":559,"tag":586,"props":848,"children":849},{"style":740},[850],{"type":564,"value":851},")",{"type":559,"tag":586,"props":853,"children":854},{"style":740},[855],{"type":564,"value":856}," {\n",{"type":559,"tag":586,"props":858,"children":860},{"class":588,"line":859},6,[861,866,871,875],{"type":559,"tag":586,"props":862,"children":863},{"style":817},[864],{"type":564,"value":865},"  let",{"type":559,"tag":586,"props":867,"children":868},{"style":768},[869],{"type":564,"value":870}," dp",{"type":559,"tag":586,"props":872,"children":873},{"style":740},[874],{"type":564,"value":831},{"type":559,"tag":586,"props":876,"children":877},{"style":740},[878],{"type":564,"value":879}," [];\n",{"type":559,"tag":586,"props":881,"children":883},{"class":588,"line":882},7,[884,889,894,900,905,909,914,918,922],{"type":559,"tag":586,"props":885,"children":886},{"style":768},[887],{"type":564,"value":888},"  dp",{"type":559,"tag":586,"props":890,"children":891},{"style":740},[892],{"type":564,"value":893},"[",{"type":559,"tag":586,"props":895,"children":897},{"style":896},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[898],{"type":564,"value":899},"0",{"type":559,"tag":586,"props":901,"children":902},{"style":740},[903],{"type":564,"value":904},"]",{"type":559,"tag":586,"props":906,"children":907},{"style":740},[908],{"type":564,"value":831},{"type":559,"tag":586,"props":910,"children":911},{"style":768},[912],{"type":564,"value":913}," nums",{"type":559,"tag":586,"props":915,"children":916},{"style":740},[917],{"type":564,"value":893},{"type":559,"tag":586,"props":919,"children":920},{"style":896},[921],{"type":564,"value":899},{"type":559,"tag":586,"props":923,"children":924},{"style":740},[925],{"type":564,"value":926},"];\n",{"type":559,"tag":586,"props":928,"children":930},{"class":588,"line":929},8,[931,935,940,944,948,952,956],{"type":559,"tag":586,"props":932,"children":933},{"style":817},[934],{"type":564,"value":865},{"type":559,"tag":586,"props":936,"children":937},{"style":768},[938],{"type":564,"value":939}," res",{"type":559,"tag":586,"props":941,"children":942},{"style":740},[943],{"type":564,"value":831},{"type":559,"tag":586,"props":945,"children":946},{"style":768},[947],{"type":564,"value":870},{"type":559,"tag":586,"props":949,"children":950},{"style":740},[951],{"type":564,"value":893},{"type":559,"tag":586,"props":953,"children":954},{"style":896},[955],{"type":564,"value":899},{"type":559,"tag":586,"props":957,"children":958},{"style":740},[959],{"type":564,"value":926},{"type":559,"tag":586,"props":961,"children":963},{"class":588,"line":962},9,[964,969,973,978,983,987,992,997,1001,1006,1010,1015,1021,1025,1029,1034,1038],{"type":559,"tag":586,"props":965,"children":966},{"style":746},[967],{"type":564,"value":968},"  for",{"type":559,"tag":586,"props":970,"children":971},{"style":740},[972],{"type":564,"value":841},{"type":559,"tag":586,"props":974,"children":975},{"style":817},[976],{"type":564,"value":977},"let",{"type":559,"tag":586,"props":979,"children":980},{"style":768},[981],{"type":564,"value":982}," i",{"type":559,"tag":586,"props":984,"children":985},{"style":740},[986],{"type":564,"value":831},{"type":559,"tag":586,"props":988,"children":989},{"style":896},[990],{"type":564,"value":991}," 1",{"type":559,"tag":586,"props":993,"children":994},{"style":740},[995],{"type":564,"value":996},";",{"type":559,"tag":586,"props":998,"children":999},{"style":768},[1000],{"type":564,"value":982},{"type":559,"tag":586,"props":1002,"children":1003},{"style":740},[1004],{"type":564,"value":1005}," \u003C",{"type":559,"tag":586,"props":1007,"children":1008},{"style":768},[1009],{"type":564,"value":913},{"type":559,"tag":586,"props":1011,"children":1012},{"style":740},[1013],{"type":564,"value":1014},".",{"type":559,"tag":586,"props":1016,"children":1018},{"style":1017},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1019],{"type":564,"value":1020},"length",{"type":559,"tag":586,"props":1022,"children":1023},{"style":740},[1024],{"type":564,"value":996},{"type":559,"tag":586,"props":1026,"children":1027},{"style":768},[1028],{"type":564,"value":982},{"type":559,"tag":586,"props":1030,"children":1031},{"style":817},[1032],{"type":564,"value":1033},"++",{"type":559,"tag":586,"props":1035,"children":1036},{"style":740},[1037],{"type":564,"value":851},{"type":559,"tag":586,"props":1039,"children":1040},{"style":740},[1041],{"type":564,"value":856},{"type":559,"tag":586,"props":1043,"children":1045},{"class":588,"line":1044},10,[1046,1051,1055,1060,1064,1068,1073,1077,1082,1087,1092,1096,1100,1105,1109,1113,1118,1122,1126,1130,1135,1139,1143,1147],{"type":559,"tag":586,"props":1047,"children":1048},{"style":768},[1049],{"type":564,"value":1050},"    dp",{"type":559,"tag":586,"props":1052,"children":1053},{"style":740},[1054],{"type":564,"value":893},{"type":559,"tag":586,"props":1056,"children":1057},{"style":768},[1058],{"type":564,"value":1059},"i",{"type":559,"tag":586,"props":1061,"children":1062},{"style":740},[1063],{"type":564,"value":904},{"type":559,"tag":586,"props":1065,"children":1066},{"style":740},[1067],{"type":564,"value":831},{"type":559,"tag":586,"props":1069,"children":1070},{"style":768},[1071],{"type":564,"value":1072}," Math",{"type":559,"tag":586,"props":1074,"children":1075},{"style":740},[1076],{"type":564,"value":1014},{"type":559,"tag":586,"props":1078,"children":1079},{"style":823},[1080],{"type":564,"value":1081},"max",{"type":559,"tag":586,"props":1083,"children":1084},{"style":740},[1085],{"type":564,"value":1086},"(",{"type":559,"tag":586,"props":1088,"children":1089},{"style":768},[1090],{"type":564,"value":1091},"dp",{"type":559,"tag":586,"props":1093,"children":1094},{"style":740},[1095],{"type":564,"value":893},{"type":559,"tag":586,"props":1097,"children":1098},{"style":768},[1099],{"type":564,"value":1059},{"type":559,"tag":586,"props":1101,"children":1102},{"style":817},[1103],{"type":564,"value":1104}," -",{"type":559,"tag":586,"props":1106,"children":1107},{"style":896},[1108],{"type":564,"value":991},{"type":559,"tag":586,"props":1110,"children":1111},{"style":740},[1112],{"type":564,"value":904},{"type":559,"tag":586,"props":1114,"children":1115},{"style":817},[1116],{"type":564,"value":1117}," +",{"type":559,"tag":586,"props":1119,"children":1120},{"style":768},[1121],{"type":564,"value":913},{"type":559,"tag":586,"props":1123,"children":1124},{"style":740},[1125],{"type":564,"value":893},{"type":559,"tag":586,"props":1127,"children":1128},{"style":768},[1129],{"type":564,"value":1059},{"type":559,"tag":586,"props":1131,"children":1132},{"style":740},[1133],{"type":564,"value":1134},"],",{"type":559,"tag":586,"props":1136,"children":1137},{"style":768},[1138],{"type":564,"value":913},{"type":559,"tag":586,"props":1140,"children":1141},{"style":740},[1142],{"type":564,"value":893},{"type":559,"tag":586,"props":1144,"children":1145},{"style":768},[1146],{"type":564,"value":1059},{"type":559,"tag":586,"props":1148,"children":1149},{"style":740},[1150],{"type":564,"value":1151},"]);\n",{"type":559,"tag":586,"props":1153,"children":1155},{"class":588,"line":1154},11,[1156,1161,1165,1169,1173,1177,1181,1186,1191,1195,1199,1203],{"type":559,"tag":586,"props":1157,"children":1158},{"style":768},[1159],{"type":564,"value":1160},"    res",{"type":559,"tag":586,"props":1162,"children":1163},{"style":740},[1164],{"type":564,"value":831},{"type":559,"tag":586,"props":1166,"children":1167},{"style":768},[1168],{"type":564,"value":1072},{"type":559,"tag":586,"props":1170,"children":1171},{"style":740},[1172],{"type":564,"value":1014},{"type":559,"tag":586,"props":1174,"children":1175},{"style":823},[1176],{"type":564,"value":1081},{"type":559,"tag":586,"props":1178,"children":1179},{"style":740},[1180],{"type":564,"value":1086},{"type":559,"tag":586,"props":1182,"children":1183},{"style":768},[1184],{"type":564,"value":1185},"res",{"type":559,"tag":586,"props":1187,"children":1188},{"style":740},[1189],{"type":564,"value":1190},",",{"type":559,"tag":586,"props":1192,"children":1193},{"style":768},[1194],{"type":564,"value":870},{"type":559,"tag":586,"props":1196,"children":1197},{"style":740},[1198],{"type":564,"value":893},{"type":559,"tag":586,"props":1200,"children":1201},{"style":768},[1202],{"type":564,"value":1059},{"type":559,"tag":586,"props":1204,"children":1205},{"style":740},[1206],{"type":564,"value":1151},{"type":559,"tag":586,"props":1208,"children":1210},{"class":588,"line":1209},12,[1211],{"type":559,"tag":586,"props":1212,"children":1213},{"style":740},[1214],{"type":564,"value":1215},"  }\n",{"type":559,"tag":586,"props":1217,"children":1219},{"class":588,"line":1218},13,[1220,1225,1229],{"type":559,"tag":586,"props":1221,"children":1222},{"style":746},[1223],{"type":564,"value":1224},"  return",{"type":559,"tag":586,"props":1226,"children":1227},{"style":768},[1228],{"type":564,"value":939},{"type":559,"tag":586,"props":1230,"children":1231},{"style":740},[1232],{"type":564,"value":1233},";\n",{"type":559,"tag":586,"props":1235,"children":1237},{"class":588,"line":1236},14,[1238],{"type":559,"tag":586,"props":1239,"children":1240},{"style":740},[1241],{"type":564,"value":1242},"};\n",{"type":559,"tag":1244,"props":1245,"children":1246},"style",{},[1247],{"type":564,"value":1248},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":552,"searchDepth":813,"depth":813,"links":1250},[1251,1252],{"id":698,"depth":598,"text":698},{"id":703,"depth":598,"text":703,"children":1253},[1254],{"id":709,"depth":607,"text":709},"markdown","content:1.algorithm:3.leetcode:3.major:53.maximum-subarray.md","content","1.algorithm/3.leetcode/3.major/53.maximum-subarray.md","md",[1261,1263],{"_path":123,"title":122,"description":1262},"给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。",{"_path":129,"title":128,"description":1264},"以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [start_i, end_i] 。请你合并所有重叠的区间，并返回 一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间 。",1715007495057]