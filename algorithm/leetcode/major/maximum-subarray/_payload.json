[{"data":1,"prerenderedAt":1256},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/maximum-subarray":540,"/algorithm/leetcode/major/maximum-subarray-surround":1251},[4,269,298,508,516,525],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":507},"代码考核","/code-assessment",[302,401,500],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,334,350,378,385,392,395,398],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333},"extends","/code-assessment/source/native-api/extends",{"title":335,"_path":336,"children":337},"函数 Function","/code-assessment/source/function",[338,341,344,347],{"title":339,"_path":340},"函数防抖","/code-assessment/source/function/debounce",{"title":342,"_path":343},"函数节流","/code-assessment/source/function/throttle",{"title":345,"_path":346},"函数柯理化","/code-assessment/source/function/curry",{"title":348,"_path":349},"函数睡眠","/code-assessment/source/function/sleep",{"title":351,"_path":352,"children":353},"数组 Array","/code-assessment/source/array",[354,357,360,363,366,369,372,375],{"title":355,"_path":356},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":358,"_path":359},"数组扁平化","/code-assessment/source/array/flat",{"title":361,"_path":362},"原型方法","/code-assessment/source/array/prototype-method",{"title":364,"_path":365},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":367,"_path":368},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":370,"_path":371},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":373,"_path":374},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":376,"_path":377},"二维数组","/code-assessment/source/array/2d-array",{"title":379,"_path":380,"children":381},"字符串 String","/code-assessment/source/string",[382],{"title":383,"_path":384},"repeat()","/code-assessment/source/string/repeat",{"title":386,"_path":387,"children":388},"集合 Set","/code-assessment/source/set",[389],{"title":390,"_path":391},"遍历集合","/code-assessment/source/set/traverse",{"title":393,"_path":394},"获取通用类型","/code-assessment/source/get-generic-type",{"title":396,"_path":397},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":399,"_path":400},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":402,"_path":403,"children":404},"业务场景","/code-assessment/scene",[405,436,446,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497],{"title":406,"_path":407,"children":408},"Promise","/code-assessment/scene/promise",[409,412,415,418,421,424,427,430,433],{"title":410,"_path":411},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":413,"_path":414},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":416,"_path":417},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":419,"_path":420},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":422,"_path":423},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":425,"_path":426},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":428,"_path":429},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":431,"_path":432},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":434,"_path":435},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":437,"_path":438,"children":439},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[440,443],{"title":441,"_path":442},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":444,"_path":445},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":447,"_path":448},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":450,"_path":451},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":453,"_path":454},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":456,"_path":457},"倒计时","/code-assessment/scene/countdown",{"title":459,"_path":460},"日期格式化","/code-assessment/scene/date-format",{"title":462,"_path":463},"实现前端路由","/code-assessment/scene/frontend-route",{"title":465,"_path":466},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":468,"_path":469},"lodash.get","/code-assessment/scene/lodash-get",{"title":471,"_path":472},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":474,"_path":475},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":477,"_path":478},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":480,"_path":481},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":483,"_path":484},"随机数","/code-assessment/scene/random-number",{"title":486,"_path":487},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":489,"_path":490},"sku 算法实现","/code-assessment/scene/sku",{"title":492,"_path":493},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":495,"_path":496},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":498,"_path":499},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":501,"_path":502,"children":503},"Ts 类型挑战","/code-assessment/type-challeges",[504],{"title":505,"_path":506},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":509,"_path":510,"children":511,"icon":515},"项目","/project",[512],{"title":513,"_path":514},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":517,"_path":518,"children":519,"icon":524},"设计模式","/design-mode",[520,521],{"title":517,"_path":518},{"title":522,"_path":523},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":526,"_path":527,"children":528,"icon":539},"后端语言","/backend-languages",[529],{"title":530,"_path":531,"children":532},"Python","/backend-languages/python",[533,536],{"title":534,"_path":535},"基础","/backend-languages/python/base",{"title":537,"_path":538},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":126,"_dir":541,"_draft":542,"_partial":542,"_locale":543,"title":125,"description":544,"url":545,"body":546,"_type":1246,"_id":1247,"_source":1248,"_file":1249,"_extension":1250},"major",false,"","给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。","https://leetcode.cn/problems/maximum-subarray",{"type":547,"children":548,"toc":1240},"root",[549,556,561,566,605,610,633,638,661,666,681,686,692,697,703,1234],{"type":550,"tag":551,"props":552,"children":553},"element","p",{},[554],{"type":555,"value":544},"text",{"type":550,"tag":551,"props":557,"children":558},{},[559],{"type":555,"value":560},"子数组\n是数组中的一个连续部分。",{"type":550,"tag":551,"props":562,"children":563},{},[564],{"type":555,"value":565},"示例 1：",{"type":550,"tag":567,"props":568,"children":571},"pre",{"className":569,"code":570,"language":555,"meta":543,"style":543},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n输出：6\n解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",[572],{"type":550,"tag":573,"props":574,"children":575},"code",{"__ignoreMap":543},[576,587,596],{"type":550,"tag":577,"props":578,"children":581},"span",{"class":579,"line":580},"line",1,[582],{"type":550,"tag":577,"props":583,"children":584},{},[585],{"type":555,"value":586},"输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n",{"type":550,"tag":577,"props":588,"children":590},{"class":579,"line":589},2,[591],{"type":550,"tag":577,"props":592,"children":593},{},[594],{"type":555,"value":595},"输出：6\n",{"type":550,"tag":577,"props":597,"children":599},{"class":579,"line":598},3,[600],{"type":550,"tag":577,"props":601,"children":602},{},[603],{"type":555,"value":604},"解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",{"type":550,"tag":551,"props":606,"children":607},{},[608],{"type":555,"value":609},"示例 2：",{"type":550,"tag":567,"props":611,"children":613},{"className":569,"code":612,"language":555,"meta":543,"style":543},"输入：nums = [1]\n输出：1\n",[614],{"type":550,"tag":573,"props":615,"children":616},{"__ignoreMap":543},[617,625],{"type":550,"tag":577,"props":618,"children":619},{"class":579,"line":580},[620],{"type":550,"tag":577,"props":621,"children":622},{},[623],{"type":555,"value":624},"输入：nums = [1]\n",{"type":550,"tag":577,"props":626,"children":627},{"class":579,"line":589},[628],{"type":550,"tag":577,"props":629,"children":630},{},[631],{"type":555,"value":632},"输出：1\n",{"type":550,"tag":551,"props":634,"children":635},{},[636],{"type":555,"value":637},"示例 3：",{"type":550,"tag":567,"props":639,"children":641},{"className":569,"code":640,"language":555,"meta":543,"style":543},"输入：nums = [5,4,-1,7,8]\n输出：23\n",[642],{"type":550,"tag":573,"props":643,"children":644},{"__ignoreMap":543},[645,653],{"type":550,"tag":577,"props":646,"children":647},{"class":579,"line":580},[648],{"type":550,"tag":577,"props":649,"children":650},{},[651],{"type":555,"value":652},"输入：nums = [5,4,-1,7,8]\n",{"type":550,"tag":577,"props":654,"children":655},{"class":579,"line":589},[656],{"type":550,"tag":577,"props":657,"children":658},{},[659],{"type":555,"value":660},"输出：23\n",{"type":550,"tag":551,"props":662,"children":663},{},[664],{"type":555,"value":665},"提示：",{"type":550,"tag":667,"props":668,"children":669},"ul",{},[670,676],{"type":550,"tag":671,"props":672,"children":673},"li",{},[674],{"type":555,"value":675},"1 \u003C= nums.length \u003C= 105",{"type":550,"tag":671,"props":677,"children":678},{},[679],{"type":555,"value":680},"-104 \u003C= nums[i] \u003C= 104",{"type":550,"tag":551,"props":682,"children":683},{},[684],{"type":555,"value":685},"进阶：如果你已经实现复杂度为 O(n) 的解法，尝试使用更为精妙的 分治法 求解。",{"type":550,"tag":687,"props":688,"children":690},"h2",{"id":689},"解题思路",[691],{"type":555,"value":689},{"type":550,"tag":687,"props":693,"children":695},{"id":694},"实现",[696],{"type":555,"value":694},{"type":550,"tag":698,"props":699,"children":701},"h3",{"id":700},"动态规划",[702],{"type":555,"value":700},{"type":550,"tag":567,"props":704,"children":708},{"className":705,"code":706,"language":707,"meta":543,"style":543},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSubArray = function (nums) {\n  let dp = [];\n  dp[0] = nums[0];\n  let res = dp[0];\n  for (let i = 1; i \u003C nums.length; i++) {\n    dp[i] = Math.max(dp[i - 1] + nums[i], nums[i]);\n    res = Math.max(res, dp[i]);\n  }\n  return res;\n};\n","js",[709],{"type":550,"tag":573,"props":710,"children":711},{"__ignoreMap":543},[712,721,763,793,802,848,871,918,951,1033,1143,1198,1207,1225],{"type":550,"tag":577,"props":713,"children":714},{"class":579,"line":580},[715],{"type":550,"tag":577,"props":716,"children":718},{"style":717},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[719],{"type":555,"value":720},"/**\n",{"type":550,"tag":577,"props":722,"children":723},{"class":579,"line":589},[724,729,735,741,746,752,757],{"type":550,"tag":577,"props":725,"children":726},{"style":717},[727],{"type":555,"value":728}," * ",{"type":550,"tag":577,"props":730,"children":732},{"style":731},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[733],{"type":555,"value":734},"@",{"type":550,"tag":577,"props":736,"children":738},{"style":737},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[739],{"type":555,"value":740},"param",{"type":550,"tag":577,"props":742,"children":743},{"style":731},[744],{"type":555,"value":745}," {",{"type":550,"tag":577,"props":747,"children":749},{"style":748},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[750],{"type":555,"value":751},"number[]",{"type":550,"tag":577,"props":753,"children":754},{"style":731},[755],{"type":555,"value":756},"}",{"type":550,"tag":577,"props":758,"children":760},{"style":759},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[761],{"type":555,"value":762}," nums\n",{"type":550,"tag":577,"props":764,"children":765},{"class":579,"line":598},[766,770,774,779,783,788],{"type":550,"tag":577,"props":767,"children":768},{"style":717},[769],{"type":555,"value":728},{"type":550,"tag":577,"props":771,"children":772},{"style":731},[773],{"type":555,"value":734},{"type":550,"tag":577,"props":775,"children":776},{"style":737},[777],{"type":555,"value":778},"return",{"type":550,"tag":577,"props":780,"children":781},{"style":731},[782],{"type":555,"value":745},{"type":550,"tag":577,"props":784,"children":785},{"style":748},[786],{"type":555,"value":787},"number",{"type":550,"tag":577,"props":789,"children":790},{"style":731},[791],{"type":555,"value":792},"}\n",{"type":550,"tag":577,"props":794,"children":796},{"class":579,"line":795},4,[797],{"type":550,"tag":577,"props":798,"children":799},{"style":717},[800],{"type":555,"value":801}," */\n",{"type":550,"tag":577,"props":803,"children":805},{"class":579,"line":804},5,[806,812,818,823,828,833,838,843],{"type":550,"tag":577,"props":807,"children":809},{"style":808},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[810],{"type":555,"value":811},"var",{"type":550,"tag":577,"props":813,"children":815},{"style":814},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[816],{"type":555,"value":817}," maxSubArray",{"type":550,"tag":577,"props":819,"children":820},{"style":731},[821],{"type":555,"value":822}," =",{"type":550,"tag":577,"props":824,"children":825},{"style":808},[826],{"type":555,"value":827}," function",{"type":550,"tag":577,"props":829,"children":830},{"style":731},[831],{"type":555,"value":832}," (",{"type":550,"tag":577,"props":834,"children":835},{"style":759},[836],{"type":555,"value":837},"nums",{"type":550,"tag":577,"props":839,"children":840},{"style":731},[841],{"type":555,"value":842},")",{"type":550,"tag":577,"props":844,"children":845},{"style":731},[846],{"type":555,"value":847}," {\n",{"type":550,"tag":577,"props":849,"children":851},{"class":579,"line":850},6,[852,857,862,866],{"type":550,"tag":577,"props":853,"children":854},{"style":808},[855],{"type":555,"value":856},"  let",{"type":550,"tag":577,"props":858,"children":859},{"style":759},[860],{"type":555,"value":861}," dp",{"type":550,"tag":577,"props":863,"children":864},{"style":731},[865],{"type":555,"value":822},{"type":550,"tag":577,"props":867,"children":868},{"style":731},[869],{"type":555,"value":870}," [];\n",{"type":550,"tag":577,"props":872,"children":874},{"class":579,"line":873},7,[875,880,885,891,896,900,905,909,913],{"type":550,"tag":577,"props":876,"children":877},{"style":759},[878],{"type":555,"value":879},"  dp",{"type":550,"tag":577,"props":881,"children":882},{"style":731},[883],{"type":555,"value":884},"[",{"type":550,"tag":577,"props":886,"children":888},{"style":887},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[889],{"type":555,"value":890},"0",{"type":550,"tag":577,"props":892,"children":893},{"style":731},[894],{"type":555,"value":895},"]",{"type":550,"tag":577,"props":897,"children":898},{"style":731},[899],{"type":555,"value":822},{"type":550,"tag":577,"props":901,"children":902},{"style":759},[903],{"type":555,"value":904}," nums",{"type":550,"tag":577,"props":906,"children":907},{"style":731},[908],{"type":555,"value":884},{"type":550,"tag":577,"props":910,"children":911},{"style":887},[912],{"type":555,"value":890},{"type":550,"tag":577,"props":914,"children":915},{"style":731},[916],{"type":555,"value":917},"];\n",{"type":550,"tag":577,"props":919,"children":921},{"class":579,"line":920},8,[922,926,931,935,939,943,947],{"type":550,"tag":577,"props":923,"children":924},{"style":808},[925],{"type":555,"value":856},{"type":550,"tag":577,"props":927,"children":928},{"style":759},[929],{"type":555,"value":930}," res",{"type":550,"tag":577,"props":932,"children":933},{"style":731},[934],{"type":555,"value":822},{"type":550,"tag":577,"props":936,"children":937},{"style":759},[938],{"type":555,"value":861},{"type":550,"tag":577,"props":940,"children":941},{"style":731},[942],{"type":555,"value":884},{"type":550,"tag":577,"props":944,"children":945},{"style":887},[946],{"type":555,"value":890},{"type":550,"tag":577,"props":948,"children":949},{"style":731},[950],{"type":555,"value":917},{"type":550,"tag":577,"props":952,"children":954},{"class":579,"line":953},9,[955,960,964,969,974,978,983,988,992,997,1001,1006,1012,1016,1020,1025,1029],{"type":550,"tag":577,"props":956,"children":957},{"style":737},[958],{"type":555,"value":959},"  for",{"type":550,"tag":577,"props":961,"children":962},{"style":731},[963],{"type":555,"value":832},{"type":550,"tag":577,"props":965,"children":966},{"style":808},[967],{"type":555,"value":968},"let",{"type":550,"tag":577,"props":970,"children":971},{"style":759},[972],{"type":555,"value":973}," i",{"type":550,"tag":577,"props":975,"children":976},{"style":731},[977],{"type":555,"value":822},{"type":550,"tag":577,"props":979,"children":980},{"style":887},[981],{"type":555,"value":982}," 1",{"type":550,"tag":577,"props":984,"children":985},{"style":731},[986],{"type":555,"value":987},";",{"type":550,"tag":577,"props":989,"children":990},{"style":759},[991],{"type":555,"value":973},{"type":550,"tag":577,"props":993,"children":994},{"style":731},[995],{"type":555,"value":996}," \u003C",{"type":550,"tag":577,"props":998,"children":999},{"style":759},[1000],{"type":555,"value":904},{"type":550,"tag":577,"props":1002,"children":1003},{"style":731},[1004],{"type":555,"value":1005},".",{"type":550,"tag":577,"props":1007,"children":1009},{"style":1008},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1010],{"type":555,"value":1011},"length",{"type":550,"tag":577,"props":1013,"children":1014},{"style":731},[1015],{"type":555,"value":987},{"type":550,"tag":577,"props":1017,"children":1018},{"style":759},[1019],{"type":555,"value":973},{"type":550,"tag":577,"props":1021,"children":1022},{"style":808},[1023],{"type":555,"value":1024},"++",{"type":550,"tag":577,"props":1026,"children":1027},{"style":731},[1028],{"type":555,"value":842},{"type":550,"tag":577,"props":1030,"children":1031},{"style":731},[1032],{"type":555,"value":847},{"type":550,"tag":577,"props":1034,"children":1036},{"class":579,"line":1035},10,[1037,1042,1046,1051,1055,1059,1064,1068,1073,1078,1083,1087,1091,1096,1100,1104,1109,1113,1117,1121,1126,1130,1134,1138],{"type":550,"tag":577,"props":1038,"children":1039},{"style":759},[1040],{"type":555,"value":1041},"    dp",{"type":550,"tag":577,"props":1043,"children":1044},{"style":731},[1045],{"type":555,"value":884},{"type":550,"tag":577,"props":1047,"children":1048},{"style":759},[1049],{"type":555,"value":1050},"i",{"type":550,"tag":577,"props":1052,"children":1053},{"style":731},[1054],{"type":555,"value":895},{"type":550,"tag":577,"props":1056,"children":1057},{"style":731},[1058],{"type":555,"value":822},{"type":550,"tag":577,"props":1060,"children":1061},{"style":759},[1062],{"type":555,"value":1063}," Math",{"type":550,"tag":577,"props":1065,"children":1066},{"style":731},[1067],{"type":555,"value":1005},{"type":550,"tag":577,"props":1069,"children":1070},{"style":814},[1071],{"type":555,"value":1072},"max",{"type":550,"tag":577,"props":1074,"children":1075},{"style":731},[1076],{"type":555,"value":1077},"(",{"type":550,"tag":577,"props":1079,"children":1080},{"style":759},[1081],{"type":555,"value":1082},"dp",{"type":550,"tag":577,"props":1084,"children":1085},{"style":731},[1086],{"type":555,"value":884},{"type":550,"tag":577,"props":1088,"children":1089},{"style":759},[1090],{"type":555,"value":1050},{"type":550,"tag":577,"props":1092,"children":1093},{"style":808},[1094],{"type":555,"value":1095}," -",{"type":550,"tag":577,"props":1097,"children":1098},{"style":887},[1099],{"type":555,"value":982},{"type":550,"tag":577,"props":1101,"children":1102},{"style":731},[1103],{"type":555,"value":895},{"type":550,"tag":577,"props":1105,"children":1106},{"style":808},[1107],{"type":555,"value":1108}," +",{"type":550,"tag":577,"props":1110,"children":1111},{"style":759},[1112],{"type":555,"value":904},{"type":550,"tag":577,"props":1114,"children":1115},{"style":731},[1116],{"type":555,"value":884},{"type":550,"tag":577,"props":1118,"children":1119},{"style":759},[1120],{"type":555,"value":1050},{"type":550,"tag":577,"props":1122,"children":1123},{"style":731},[1124],{"type":555,"value":1125},"],",{"type":550,"tag":577,"props":1127,"children":1128},{"style":759},[1129],{"type":555,"value":904},{"type":550,"tag":577,"props":1131,"children":1132},{"style":731},[1133],{"type":555,"value":884},{"type":550,"tag":577,"props":1135,"children":1136},{"style":759},[1137],{"type":555,"value":1050},{"type":550,"tag":577,"props":1139,"children":1140},{"style":731},[1141],{"type":555,"value":1142},"]);\n",{"type":550,"tag":577,"props":1144,"children":1146},{"class":579,"line":1145},11,[1147,1152,1156,1160,1164,1168,1172,1177,1182,1186,1190,1194],{"type":550,"tag":577,"props":1148,"children":1149},{"style":759},[1150],{"type":555,"value":1151},"    res",{"type":550,"tag":577,"props":1153,"children":1154},{"style":731},[1155],{"type":555,"value":822},{"type":550,"tag":577,"props":1157,"children":1158},{"style":759},[1159],{"type":555,"value":1063},{"type":550,"tag":577,"props":1161,"children":1162},{"style":731},[1163],{"type":555,"value":1005},{"type":550,"tag":577,"props":1165,"children":1166},{"style":814},[1167],{"type":555,"value":1072},{"type":550,"tag":577,"props":1169,"children":1170},{"style":731},[1171],{"type":555,"value":1077},{"type":550,"tag":577,"props":1173,"children":1174},{"style":759},[1175],{"type":555,"value":1176},"res",{"type":550,"tag":577,"props":1178,"children":1179},{"style":731},[1180],{"type":555,"value":1181},",",{"type":550,"tag":577,"props":1183,"children":1184},{"style":759},[1185],{"type":555,"value":861},{"type":550,"tag":577,"props":1187,"children":1188},{"style":731},[1189],{"type":555,"value":884},{"type":550,"tag":577,"props":1191,"children":1192},{"style":759},[1193],{"type":555,"value":1050},{"type":550,"tag":577,"props":1195,"children":1196},{"style":731},[1197],{"type":555,"value":1142},{"type":550,"tag":577,"props":1199,"children":1201},{"class":579,"line":1200},12,[1202],{"type":550,"tag":577,"props":1203,"children":1204},{"style":731},[1205],{"type":555,"value":1206},"  }\n",{"type":550,"tag":577,"props":1208,"children":1210},{"class":579,"line":1209},13,[1211,1216,1220],{"type":550,"tag":577,"props":1212,"children":1213},{"style":737},[1214],{"type":555,"value":1215},"  return",{"type":550,"tag":577,"props":1217,"children":1218},{"style":759},[1219],{"type":555,"value":930},{"type":550,"tag":577,"props":1221,"children":1222},{"style":731},[1223],{"type":555,"value":1224},";\n",{"type":550,"tag":577,"props":1226,"children":1228},{"class":579,"line":1227},14,[1229],{"type":550,"tag":577,"props":1230,"children":1231},{"style":731},[1232],{"type":555,"value":1233},"};\n",{"type":550,"tag":1235,"props":1236,"children":1237},"style",{},[1238],{"type":555,"value":1239},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":543,"searchDepth":804,"depth":804,"links":1241},[1242,1243],{"id":689,"depth":589,"text":689},{"id":694,"depth":589,"text":694,"children":1244},[1245],{"id":700,"depth":598,"text":700},"markdown","content:1.algorithm:3.leetcode:3.major:53.maximum-subarray.md","content","1.algorithm/3.leetcode/3.major/53.maximum-subarray.md","md",[1252,1254],{"_path":123,"title":122,"description":1253},"给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。",{"_path":129,"title":128,"description":1255},"以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [start_i, end_i] 。请你合并所有重叠的区间，并返回 一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间 。",1714099214086]