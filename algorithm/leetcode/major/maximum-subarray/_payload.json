[{"data":1,"prerenderedAt":1275},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/maximum-subarray":559,"/algorithm/leetcode/major/maximum-subarray-surround":1270},[4,272,318,536,544],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":317},"八股文","/endorsement",[276,286,293,304],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"JavaScript","/endorsement/javascript",[290],{"title":291,"_path":292},"语法和数据类型","/endorsement/javascript/grammar-data-types",{"title":294,"_path":295,"children":296},"构建工具","/endorsement/build-tools",[297],{"title":298,"_path":299,"children":300},"Webpack","/endorsement/build-tools/webpack",[301],{"title":302,"_path":303},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":305,"_path":306,"children":307},"Html","/endorsement/html",[308,311,314],{"title":309,"_path":310},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":312,"_path":313},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":315,"_path":316},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":319,"_path":320,"children":321,"icon":535},"代码考核","/code-assessment",[322,427,528],{"title":323,"_path":324,"children":325},"源码实现","/code-assessment/source",[326,360,376,404,411,418,421,424],{"title":327,"_path":328,"children":329},"原生 api","/code-assessment/source/native-api",[330,333,336,339,342,345,348,351,354,357],{"title":331,"_path":332},"polyfill","/code-assessment/source/native-api/polyfill",{"title":334,"_path":335},"ajax","/code-assessment/source/native-api/ajax",{"title":337,"_path":338},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":340,"_path":341},"new 操作符","/code-assessment/source/native-api/new",{"title":343,"_path":344},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":346,"_path":347},"定时器","/code-assessment/source/native-api/timer",{"title":349,"_path":350},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":352,"_path":353},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":355,"_path":356},"extends","/code-assessment/source/native-api/extends",{"title":358,"_path":359},"Promise","/code-assessment/source/native-api/promise",{"title":361,"_path":362,"children":363},"函数 Function","/code-assessment/source/function",[364,367,370,373],{"title":365,"_path":366},"函数防抖","/code-assessment/source/function/debounce",{"title":368,"_path":369},"函数节流","/code-assessment/source/function/throttle",{"title":371,"_path":372},"函数柯理化","/code-assessment/source/function/curry",{"title":374,"_path":375},"函数睡眠","/code-assessment/source/function/sleep",{"title":377,"_path":378,"children":379},"数组 Array","/code-assessment/source/array",[380,383,386,389,392,395,398,401],{"title":381,"_path":382},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":384,"_path":385},"数组扁平化","/code-assessment/source/array/flat",{"title":387,"_path":388},"原型方法","/code-assessment/source/array/prototype-method",{"title":390,"_path":391},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":393,"_path":394},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":396,"_path":397},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":399,"_path":400},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":402,"_path":403},"二维数组","/code-assessment/source/array/2d-array",{"title":405,"_path":406,"children":407},"字符串 String","/code-assessment/source/string",[408],{"title":409,"_path":410},"repeat()","/code-assessment/source/string/repeat",{"title":412,"_path":413,"children":414},"集合 Set","/code-assessment/source/set",[415],{"title":416,"_path":417},"遍历集合","/code-assessment/source/set/traverse",{"title":419,"_path":420},"获取通用类型","/code-assessment/source/get-generic-type",{"title":422,"_path":423},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":425,"_path":426},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":428,"_path":429,"children":430},"业务场景","/code-assessment/scene",[431,461,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525],{"title":358,"_path":432,"children":433},"/code-assessment/scene/promise",[434,437,440,443,446,449,452,455,458],{"title":435,"_path":436},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":438,"_path":439},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":441,"_path":442},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":444,"_path":445},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":447,"_path":448},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":450,"_path":451},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":453,"_path":454},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":456,"_path":457},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":459,"_path":460},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":462,"_path":463,"children":464},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[465,468],{"title":466,"_path":467},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":469,"_path":470},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":472,"_path":473},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":475,"_path":476},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":478,"_path":479},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":481,"_path":482},"倒计时","/code-assessment/scene/countdown",{"title":484,"_path":485},"日期格式化","/code-assessment/scene/date-format",{"title":487,"_path":488},"实现前端路由","/code-assessment/scene/frontend-route",{"title":490,"_path":491},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":493,"_path":494},"lodash.get","/code-assessment/scene/lodash-get",{"title":496,"_path":497},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":499,"_path":500},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":502,"_path":503},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":505,"_path":506},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":508,"_path":509},"随机数","/code-assessment/scene/random-number",{"title":511,"_path":512},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":514,"_path":515},"sku 算法实现","/code-assessment/scene/sku",{"title":517,"_path":518},"整数分割","/code-assessment/scene/split-number",{"title":520,"_path":521},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":523,"_path":524},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":526,"_path":527},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":529,"_path":530,"children":531},"Ts 类型挑战","/code-assessment/type-challeges",[532],{"title":533,"_path":534},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":537,"_path":538,"children":539,"icon":543},"项目","/project",[540],{"title":541,"_path":542},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":545,"_path":546,"children":547,"icon":558},"后端语言","/backend-languages",[548],{"title":549,"_path":550,"children":551},"Python","/backend-languages/python",[552,555],{"title":553,"_path":554},"基础","/backend-languages/python/base",{"title":556,"_path":557},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":126,"_dir":560,"_draft":561,"_partial":561,"_locale":562,"title":125,"description":563,"url":564,"body":565,"_type":1265,"_id":1266,"_source":1267,"_file":1268,"_extension":1269},"major",false,"","给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。","https://leetcode.cn/problems/maximum-subarray",{"type":566,"children":567,"toc":1259},"root",[568,575,580,585,624,629,652,657,680,685,700,705,711,716,722,1253],{"type":569,"tag":570,"props":571,"children":572},"element","p",{},[573],{"type":574,"value":563},"text",{"type":569,"tag":570,"props":576,"children":577},{},[578],{"type":574,"value":579},"子数组\n是数组中的一个连续部分。",{"type":569,"tag":570,"props":581,"children":582},{},[583],{"type":574,"value":584},"示例 1：",{"type":569,"tag":586,"props":587,"children":590},"pre",{"className":588,"code":589,"language":574,"meta":562,"style":562},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n输出：6\n解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",[591],{"type":569,"tag":592,"props":593,"children":594},"code",{"__ignoreMap":562},[595,606,615],{"type":569,"tag":596,"props":597,"children":600},"span",{"class":598,"line":599},"line",1,[601],{"type":569,"tag":596,"props":602,"children":603},{},[604],{"type":574,"value":605},"输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n",{"type":569,"tag":596,"props":607,"children":609},{"class":598,"line":608},2,[610],{"type":569,"tag":596,"props":611,"children":612},{},[613],{"type":574,"value":614},"输出：6\n",{"type":569,"tag":596,"props":616,"children":618},{"class":598,"line":617},3,[619],{"type":569,"tag":596,"props":620,"children":621},{},[622],{"type":574,"value":623},"解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",{"type":569,"tag":570,"props":625,"children":626},{},[627],{"type":574,"value":628},"示例 2：",{"type":569,"tag":586,"props":630,"children":632},{"className":588,"code":631,"language":574,"meta":562,"style":562},"输入：nums = [1]\n输出：1\n",[633],{"type":569,"tag":592,"props":634,"children":635},{"__ignoreMap":562},[636,644],{"type":569,"tag":596,"props":637,"children":638},{"class":598,"line":599},[639],{"type":569,"tag":596,"props":640,"children":641},{},[642],{"type":574,"value":643},"输入：nums = [1]\n",{"type":569,"tag":596,"props":645,"children":646},{"class":598,"line":608},[647],{"type":569,"tag":596,"props":648,"children":649},{},[650],{"type":574,"value":651},"输出：1\n",{"type":569,"tag":570,"props":653,"children":654},{},[655],{"type":574,"value":656},"示例 3：",{"type":569,"tag":586,"props":658,"children":660},{"className":588,"code":659,"language":574,"meta":562,"style":562},"输入：nums = [5,4,-1,7,8]\n输出：23\n",[661],{"type":569,"tag":592,"props":662,"children":663},{"__ignoreMap":562},[664,672],{"type":569,"tag":596,"props":665,"children":666},{"class":598,"line":599},[667],{"type":569,"tag":596,"props":668,"children":669},{},[670],{"type":574,"value":671},"输入：nums = [5,4,-1,7,8]\n",{"type":569,"tag":596,"props":673,"children":674},{"class":598,"line":608},[675],{"type":569,"tag":596,"props":676,"children":677},{},[678],{"type":574,"value":679},"输出：23\n",{"type":569,"tag":570,"props":681,"children":682},{},[683],{"type":574,"value":684},"提示：",{"type":569,"tag":686,"props":687,"children":688},"ul",{},[689,695],{"type":569,"tag":690,"props":691,"children":692},"li",{},[693],{"type":574,"value":694},"1 \u003C= nums.length \u003C= 105",{"type":569,"tag":690,"props":696,"children":697},{},[698],{"type":574,"value":699},"-104 \u003C= nums[i] \u003C= 104",{"type":569,"tag":570,"props":701,"children":702},{},[703],{"type":574,"value":704},"进阶：如果你已经实现复杂度为 O(n) 的解法，尝试使用更为精妙的 分治法 求解。",{"type":569,"tag":706,"props":707,"children":709},"h2",{"id":708},"解题思路",[710],{"type":574,"value":708},{"type":569,"tag":706,"props":712,"children":714},{"id":713},"实现",[715],{"type":574,"value":713},{"type":569,"tag":717,"props":718,"children":720},"h3",{"id":719},"动态规划",[721],{"type":574,"value":719},{"type":569,"tag":586,"props":723,"children":727},{"className":724,"code":725,"language":726,"meta":562,"style":562},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSubArray = function (nums) {\n  let dp = [];\n  dp[0] = nums[0];\n  let res = dp[0];\n  for (let i = 1; i \u003C nums.length; i++) {\n    dp[i] = Math.max(dp[i - 1] + nums[i], nums[i]);\n    res = Math.max(res, dp[i]);\n  }\n  return res;\n};\n","js",[728],{"type":569,"tag":592,"props":729,"children":730},{"__ignoreMap":562},[731,740,782,812,821,867,890,937,970,1052,1162,1217,1226,1244],{"type":569,"tag":596,"props":732,"children":733},{"class":598,"line":599},[734],{"type":569,"tag":596,"props":735,"children":737},{"style":736},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[738],{"type":574,"value":739},"/**\n",{"type":569,"tag":596,"props":741,"children":742},{"class":598,"line":608},[743,748,754,760,765,771,776],{"type":569,"tag":596,"props":744,"children":745},{"style":736},[746],{"type":574,"value":747}," * ",{"type":569,"tag":596,"props":749,"children":751},{"style":750},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[752],{"type":574,"value":753},"@",{"type":569,"tag":596,"props":755,"children":757},{"style":756},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[758],{"type":574,"value":759},"param",{"type":569,"tag":596,"props":761,"children":762},{"style":750},[763],{"type":574,"value":764}," {",{"type":569,"tag":596,"props":766,"children":768},{"style":767},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[769],{"type":574,"value":770},"number[]",{"type":569,"tag":596,"props":772,"children":773},{"style":750},[774],{"type":574,"value":775},"}",{"type":569,"tag":596,"props":777,"children":779},{"style":778},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[780],{"type":574,"value":781}," nums\n",{"type":569,"tag":596,"props":783,"children":784},{"class":598,"line":617},[785,789,793,798,802,807],{"type":569,"tag":596,"props":786,"children":787},{"style":736},[788],{"type":574,"value":747},{"type":569,"tag":596,"props":790,"children":791},{"style":750},[792],{"type":574,"value":753},{"type":569,"tag":596,"props":794,"children":795},{"style":756},[796],{"type":574,"value":797},"return",{"type":569,"tag":596,"props":799,"children":800},{"style":750},[801],{"type":574,"value":764},{"type":569,"tag":596,"props":803,"children":804},{"style":767},[805],{"type":574,"value":806},"number",{"type":569,"tag":596,"props":808,"children":809},{"style":750},[810],{"type":574,"value":811},"}\n",{"type":569,"tag":596,"props":813,"children":815},{"class":598,"line":814},4,[816],{"type":569,"tag":596,"props":817,"children":818},{"style":736},[819],{"type":574,"value":820}," */\n",{"type":569,"tag":596,"props":822,"children":824},{"class":598,"line":823},5,[825,831,837,842,847,852,857,862],{"type":569,"tag":596,"props":826,"children":828},{"style":827},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[829],{"type":574,"value":830},"var",{"type":569,"tag":596,"props":832,"children":834},{"style":833},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[835],{"type":574,"value":836}," maxSubArray",{"type":569,"tag":596,"props":838,"children":839},{"style":750},[840],{"type":574,"value":841}," =",{"type":569,"tag":596,"props":843,"children":844},{"style":827},[845],{"type":574,"value":846}," function",{"type":569,"tag":596,"props":848,"children":849},{"style":750},[850],{"type":574,"value":851}," (",{"type":569,"tag":596,"props":853,"children":854},{"style":778},[855],{"type":574,"value":856},"nums",{"type":569,"tag":596,"props":858,"children":859},{"style":750},[860],{"type":574,"value":861},")",{"type":569,"tag":596,"props":863,"children":864},{"style":750},[865],{"type":574,"value":866}," {\n",{"type":569,"tag":596,"props":868,"children":870},{"class":598,"line":869},6,[871,876,881,885],{"type":569,"tag":596,"props":872,"children":873},{"style":827},[874],{"type":574,"value":875},"  let",{"type":569,"tag":596,"props":877,"children":878},{"style":778},[879],{"type":574,"value":880}," dp",{"type":569,"tag":596,"props":882,"children":883},{"style":750},[884],{"type":574,"value":841},{"type":569,"tag":596,"props":886,"children":887},{"style":750},[888],{"type":574,"value":889}," [];\n",{"type":569,"tag":596,"props":891,"children":893},{"class":598,"line":892},7,[894,899,904,910,915,919,924,928,932],{"type":569,"tag":596,"props":895,"children":896},{"style":778},[897],{"type":574,"value":898},"  dp",{"type":569,"tag":596,"props":900,"children":901},{"style":750},[902],{"type":574,"value":903},"[",{"type":569,"tag":596,"props":905,"children":907},{"style":906},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[908],{"type":574,"value":909},"0",{"type":569,"tag":596,"props":911,"children":912},{"style":750},[913],{"type":574,"value":914},"]",{"type":569,"tag":596,"props":916,"children":917},{"style":750},[918],{"type":574,"value":841},{"type":569,"tag":596,"props":920,"children":921},{"style":778},[922],{"type":574,"value":923}," nums",{"type":569,"tag":596,"props":925,"children":926},{"style":750},[927],{"type":574,"value":903},{"type":569,"tag":596,"props":929,"children":930},{"style":906},[931],{"type":574,"value":909},{"type":569,"tag":596,"props":933,"children":934},{"style":750},[935],{"type":574,"value":936},"];\n",{"type":569,"tag":596,"props":938,"children":940},{"class":598,"line":939},8,[941,945,950,954,958,962,966],{"type":569,"tag":596,"props":942,"children":943},{"style":827},[944],{"type":574,"value":875},{"type":569,"tag":596,"props":946,"children":947},{"style":778},[948],{"type":574,"value":949}," res",{"type":569,"tag":596,"props":951,"children":952},{"style":750},[953],{"type":574,"value":841},{"type":569,"tag":596,"props":955,"children":956},{"style":778},[957],{"type":574,"value":880},{"type":569,"tag":596,"props":959,"children":960},{"style":750},[961],{"type":574,"value":903},{"type":569,"tag":596,"props":963,"children":964},{"style":906},[965],{"type":574,"value":909},{"type":569,"tag":596,"props":967,"children":968},{"style":750},[969],{"type":574,"value":936},{"type":569,"tag":596,"props":971,"children":973},{"class":598,"line":972},9,[974,979,983,988,993,997,1002,1007,1011,1016,1020,1025,1031,1035,1039,1044,1048],{"type":569,"tag":596,"props":975,"children":976},{"style":756},[977],{"type":574,"value":978},"  for",{"type":569,"tag":596,"props":980,"children":981},{"style":750},[982],{"type":574,"value":851},{"type":569,"tag":596,"props":984,"children":985},{"style":827},[986],{"type":574,"value":987},"let",{"type":569,"tag":596,"props":989,"children":990},{"style":778},[991],{"type":574,"value":992}," i",{"type":569,"tag":596,"props":994,"children":995},{"style":750},[996],{"type":574,"value":841},{"type":569,"tag":596,"props":998,"children":999},{"style":906},[1000],{"type":574,"value":1001}," 1",{"type":569,"tag":596,"props":1003,"children":1004},{"style":750},[1005],{"type":574,"value":1006},";",{"type":569,"tag":596,"props":1008,"children":1009},{"style":778},[1010],{"type":574,"value":992},{"type":569,"tag":596,"props":1012,"children":1013},{"style":750},[1014],{"type":574,"value":1015}," \u003C",{"type":569,"tag":596,"props":1017,"children":1018},{"style":778},[1019],{"type":574,"value":923},{"type":569,"tag":596,"props":1021,"children":1022},{"style":750},[1023],{"type":574,"value":1024},".",{"type":569,"tag":596,"props":1026,"children":1028},{"style":1027},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1029],{"type":574,"value":1030},"length",{"type":569,"tag":596,"props":1032,"children":1033},{"style":750},[1034],{"type":574,"value":1006},{"type":569,"tag":596,"props":1036,"children":1037},{"style":778},[1038],{"type":574,"value":992},{"type":569,"tag":596,"props":1040,"children":1041},{"style":827},[1042],{"type":574,"value":1043},"++",{"type":569,"tag":596,"props":1045,"children":1046},{"style":750},[1047],{"type":574,"value":861},{"type":569,"tag":596,"props":1049,"children":1050},{"style":750},[1051],{"type":574,"value":866},{"type":569,"tag":596,"props":1053,"children":1055},{"class":598,"line":1054},10,[1056,1061,1065,1070,1074,1078,1083,1087,1092,1097,1102,1106,1110,1115,1119,1123,1128,1132,1136,1140,1145,1149,1153,1157],{"type":569,"tag":596,"props":1057,"children":1058},{"style":778},[1059],{"type":574,"value":1060},"    dp",{"type":569,"tag":596,"props":1062,"children":1063},{"style":750},[1064],{"type":574,"value":903},{"type":569,"tag":596,"props":1066,"children":1067},{"style":778},[1068],{"type":574,"value":1069},"i",{"type":569,"tag":596,"props":1071,"children":1072},{"style":750},[1073],{"type":574,"value":914},{"type":569,"tag":596,"props":1075,"children":1076},{"style":750},[1077],{"type":574,"value":841},{"type":569,"tag":596,"props":1079,"children":1080},{"style":778},[1081],{"type":574,"value":1082}," Math",{"type":569,"tag":596,"props":1084,"children":1085},{"style":750},[1086],{"type":574,"value":1024},{"type":569,"tag":596,"props":1088,"children":1089},{"style":833},[1090],{"type":574,"value":1091},"max",{"type":569,"tag":596,"props":1093,"children":1094},{"style":750},[1095],{"type":574,"value":1096},"(",{"type":569,"tag":596,"props":1098,"children":1099},{"style":778},[1100],{"type":574,"value":1101},"dp",{"type":569,"tag":596,"props":1103,"children":1104},{"style":750},[1105],{"type":574,"value":903},{"type":569,"tag":596,"props":1107,"children":1108},{"style":778},[1109],{"type":574,"value":1069},{"type":569,"tag":596,"props":1111,"children":1112},{"style":827},[1113],{"type":574,"value":1114}," -",{"type":569,"tag":596,"props":1116,"children":1117},{"style":906},[1118],{"type":574,"value":1001},{"type":569,"tag":596,"props":1120,"children":1121},{"style":750},[1122],{"type":574,"value":914},{"type":569,"tag":596,"props":1124,"children":1125},{"style":827},[1126],{"type":574,"value":1127}," +",{"type":569,"tag":596,"props":1129,"children":1130},{"style":778},[1131],{"type":574,"value":923},{"type":569,"tag":596,"props":1133,"children":1134},{"style":750},[1135],{"type":574,"value":903},{"type":569,"tag":596,"props":1137,"children":1138},{"style":778},[1139],{"type":574,"value":1069},{"type":569,"tag":596,"props":1141,"children":1142},{"style":750},[1143],{"type":574,"value":1144},"],",{"type":569,"tag":596,"props":1146,"children":1147},{"style":778},[1148],{"type":574,"value":923},{"type":569,"tag":596,"props":1150,"children":1151},{"style":750},[1152],{"type":574,"value":903},{"type":569,"tag":596,"props":1154,"children":1155},{"style":778},[1156],{"type":574,"value":1069},{"type":569,"tag":596,"props":1158,"children":1159},{"style":750},[1160],{"type":574,"value":1161},"]);\n",{"type":569,"tag":596,"props":1163,"children":1165},{"class":598,"line":1164},11,[1166,1171,1175,1179,1183,1187,1191,1196,1201,1205,1209,1213],{"type":569,"tag":596,"props":1167,"children":1168},{"style":778},[1169],{"type":574,"value":1170},"    res",{"type":569,"tag":596,"props":1172,"children":1173},{"style":750},[1174],{"type":574,"value":841},{"type":569,"tag":596,"props":1176,"children":1177},{"style":778},[1178],{"type":574,"value":1082},{"type":569,"tag":596,"props":1180,"children":1181},{"style":750},[1182],{"type":574,"value":1024},{"type":569,"tag":596,"props":1184,"children":1185},{"style":833},[1186],{"type":574,"value":1091},{"type":569,"tag":596,"props":1188,"children":1189},{"style":750},[1190],{"type":574,"value":1096},{"type":569,"tag":596,"props":1192,"children":1193},{"style":778},[1194],{"type":574,"value":1195},"res",{"type":569,"tag":596,"props":1197,"children":1198},{"style":750},[1199],{"type":574,"value":1200},",",{"type":569,"tag":596,"props":1202,"children":1203},{"style":778},[1204],{"type":574,"value":880},{"type":569,"tag":596,"props":1206,"children":1207},{"style":750},[1208],{"type":574,"value":903},{"type":569,"tag":596,"props":1210,"children":1211},{"style":778},[1212],{"type":574,"value":1069},{"type":569,"tag":596,"props":1214,"children":1215},{"style":750},[1216],{"type":574,"value":1161},{"type":569,"tag":596,"props":1218,"children":1220},{"class":598,"line":1219},12,[1221],{"type":569,"tag":596,"props":1222,"children":1223},{"style":750},[1224],{"type":574,"value":1225},"  }\n",{"type":569,"tag":596,"props":1227,"children":1229},{"class":598,"line":1228},13,[1230,1235,1239],{"type":569,"tag":596,"props":1231,"children":1232},{"style":756},[1233],{"type":574,"value":1234},"  return",{"type":569,"tag":596,"props":1236,"children":1237},{"style":778},[1238],{"type":574,"value":949},{"type":569,"tag":596,"props":1240,"children":1241},{"style":750},[1242],{"type":574,"value":1243},";\n",{"type":569,"tag":596,"props":1245,"children":1247},{"class":598,"line":1246},14,[1248],{"type":569,"tag":596,"props":1249,"children":1250},{"style":750},[1251],{"type":574,"value":1252},"};\n",{"type":569,"tag":1254,"props":1255,"children":1256},"style",{},[1257],{"type":574,"value":1258},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":562,"searchDepth":823,"depth":823,"links":1260},[1261,1262],{"id":708,"depth":608,"text":708},{"id":713,"depth":608,"text":713,"children":1263},[1264],{"id":719,"depth":617,"text":719},"markdown","content:1.algorithm:3.leetcode:3.major:53.maximum-subarray.md","content","1.algorithm/3.leetcode/3.major/53.maximum-subarray.md","md",[1271,1273],{"_path":123,"title":122,"description":1272},"给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。",{"_path":129,"title":128,"description":1274},"以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [start_i, end_i] 。请你合并所有重叠的区间，并返回 一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间 。",1717734305435]