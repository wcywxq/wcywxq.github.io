[{"data":1,"prerenderedAt":1175},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/maximum-subarray":463,"/algorithm/leetcode/major/maximum-subarray-surround":1170},[4,266,295,440,448],{"title":5,"_path":6,"children":7,"icon":265},"算法","/algorithm",[8,28],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30,"children":31},"Leetcode 力扣","/algorithm/leetcode",[32,38,51],{"title":33,"_path":34,"children":35},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[36],{"title":37,"_path":34},"刷题索引",{"title":39,"_path":40,"children":41},"剑指 offer","/algorithm/leetcode/sword-ofter",[42,45,48],{"title":43,"_path":44},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":46,"_path":47},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":49,"_path":50},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":52,"_path":53,"children":54},"主题单","/algorithm/leetcode/major",[55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262],{"title":56,"_path":57},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":59,"_path":60},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":62,"_path":63},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":65,"_path":66},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":68,"_path":69},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":71,"_path":72},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":74,"_path":75},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":77,"_path":78},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":80,"_path":81},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":83,"_path":84},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":86,"_path":87},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":89,"_path":90},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":92,"_path":93},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":95,"_path":96},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":98,"_path":99},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":101,"_path":102},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":104,"_path":105},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":107,"_path":108},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":110,"_path":111},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":113,"_path":114},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":116,"_path":117},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":119,"_path":120},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":122,"_path":123},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":125,"_path":126},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":128,"_path":129},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":131,"_path":132},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":134,"_path":135},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":137,"_path":138},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":140,"_path":141},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":143,"_path":144},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":146,"_path":147},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":149,"_path":150},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":152,"_path":153},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":155,"_path":156},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":158,"_path":159},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":161,"_path":162},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":164,"_path":165},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":167,"_path":168},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":170,"_path":171},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":173,"_path":174},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":176,"_path":177},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":179,"_path":180},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":182,"_path":183},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":185,"_path":186},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":188,"_path":189},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":191,"_path":192},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":194,"_path":195},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":197,"_path":198},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":200,"_path":201},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":203,"_path":204},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":206,"_path":207},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":209,"_path":210},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":212,"_path":213},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":215,"_path":216},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":218,"_path":219},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":221,"_path":222},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":224,"_path":225},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":227,"_path":228},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":230,"_path":231},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":233,"_path":234},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":236,"_path":237},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":239,"_path":240},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":242,"_path":243},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":245,"_path":246},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":248,"_path":249},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":251,"_path":252},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":254,"_path":255},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":257,"_path":258},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":260,"_path":261},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":263,"_path":264},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":267,"_path":268,"children":269,"icon":294},"前端八股文","/frontend-endorsement",[270,281],{"title":271,"_path":272,"children":273},"构建工具","/frontend-endorsement/build-tools",[274],{"title":275,"_path":276,"children":277},"Webpack","/frontend-endorsement/build-tools/webpack",[278],{"title":279,"_path":280},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":282,"_path":283,"children":284},"Html","/frontend-endorsement/html",[285,288,291],{"title":286,"_path":287},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":289,"_path":290},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":292,"_path":293},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":296,"_path":297,"children":298,"icon":439},"前端代码考核","/frontend-code-assessment",[299,348,432],{"title":300,"_path":301,"children":302},"源码实现","/frontend-code-assessment/source",[303,328,341],{"title":304,"_path":305,"children":306},"原生 api","/frontend-code-assessment/source/native-api",[307,310,313,316,319,322,325],{"title":308,"_path":309},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":311,"_path":312},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":314,"_path":315},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":317,"_path":318},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":320,"_path":321},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":323,"_path":324},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":326,"_path":327},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":329,"_path":330,"children":331},"数组 Array","/frontend-code-assessment/source/array",[332,335,338],{"title":333,"_path":334},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":336,"_path":337},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":339,"_path":340},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":342,"_path":343,"children":344},"字符串 String","/frontend-code-assessment/source/string",[345],{"title":346,"_path":347},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":349,"_path":350,"children":351},"业务场景","/frontend-code-assessment/scene",[352,374,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429],{"title":353,"_path":354,"children":355},"Promise","/frontend-code-assessment/scene/promise",[356,359,362,365,368,371],{"title":357,"_path":358},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":360,"_path":361},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":363,"_path":364},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":366,"_path":367},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":369,"_path":370},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":372,"_path":373},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":375,"_path":376,"children":377},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[378],{"title":379,"_path":380},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":382,"_path":383},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":385,"_path":386},"倒计时","/frontend-code-assessment/scene/countdown",{"title":388,"_path":389},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":391,"_path":392},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":394,"_path":395},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":397,"_path":398},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":400,"_path":401},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":403,"_path":404},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":406,"_path":407},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":409,"_path":410},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":412,"_path":413},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":415,"_path":416},"随机数","/frontend-code-assessment/scene/random-number",{"title":418,"_path":419},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":421,"_path":422},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":424,"_path":425},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":427,"_path":428},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":430,"_path":431},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":433,"_path":434,"children":435},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[436],{"title":437,"_path":438},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":441,"_path":442,"children":443,"icon":447},"项目","/pro",[444],{"title":445,"_path":446},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":449,"_path":450,"children":451,"icon":462},"后端语言","/backend-languages",[452],{"title":453,"_path":454,"children":455},"Python","/backend-languages/python",[456,459],{"title":457,"_path":458},"基础","/backend-languages/python/base",{"title":460,"_path":461},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":123,"_dir":464,"_draft":465,"_partial":465,"_locale":466,"title":122,"description":467,"url":468,"body":469,"_type":1165,"_id":1166,"_source":1167,"_file":1168,"_extension":1169},"major",false,"","给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。","https://leetcode.cn/problems/maximum-subarray",{"type":470,"children":471,"toc":1159},"root",[472,479,484,489,528,533,556,561,584,589,604,609,615,620,626,1153],{"type":473,"tag":474,"props":475,"children":476},"element","p",{},[477],{"type":478,"value":467},"text",{"type":473,"tag":474,"props":480,"children":481},{},[482],{"type":478,"value":483},"子数组\n是数组中的一个连续部分。",{"type":473,"tag":474,"props":485,"children":486},{},[487],{"type":478,"value":488},"示例 1：",{"type":473,"tag":490,"props":491,"children":494},"pre",{"className":492,"code":493,"language":478,"meta":466,"style":466},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n输出：6\n解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",[495],{"type":473,"tag":496,"props":497,"children":498},"code",{"__ignoreMap":466},[499,510,519],{"type":473,"tag":500,"props":501,"children":504},"span",{"class":502,"line":503},"line",1,[505],{"type":473,"tag":500,"props":506,"children":507},{},[508],{"type":478,"value":509},"输入：nums = [-2,1,-3,4,-1,2,1,-5,4]\n",{"type":473,"tag":500,"props":511,"children":513},{"class":502,"line":512},2,[514],{"type":473,"tag":500,"props":515,"children":516},{},[517],{"type":478,"value":518},"输出：6\n",{"type":473,"tag":500,"props":520,"children":522},{"class":502,"line":521},3,[523],{"type":473,"tag":500,"props":524,"children":525},{},[526],{"type":478,"value":527},"解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。\n",{"type":473,"tag":474,"props":529,"children":530},{},[531],{"type":478,"value":532},"示例 2：",{"type":473,"tag":490,"props":534,"children":536},{"className":492,"code":535,"language":478,"meta":466,"style":466},"输入：nums = [1]\n输出：1\n",[537],{"type":473,"tag":496,"props":538,"children":539},{"__ignoreMap":466},[540,548],{"type":473,"tag":500,"props":541,"children":542},{"class":502,"line":503},[543],{"type":473,"tag":500,"props":544,"children":545},{},[546],{"type":478,"value":547},"输入：nums = [1]\n",{"type":473,"tag":500,"props":549,"children":550},{"class":502,"line":512},[551],{"type":473,"tag":500,"props":552,"children":553},{},[554],{"type":478,"value":555},"输出：1\n",{"type":473,"tag":474,"props":557,"children":558},{},[559],{"type":478,"value":560},"示例 3：",{"type":473,"tag":490,"props":562,"children":564},{"className":492,"code":563,"language":478,"meta":466,"style":466},"输入：nums = [5,4,-1,7,8]\n输出：23\n",[565],{"type":473,"tag":496,"props":566,"children":567},{"__ignoreMap":466},[568,576],{"type":473,"tag":500,"props":569,"children":570},{"class":502,"line":503},[571],{"type":473,"tag":500,"props":572,"children":573},{},[574],{"type":478,"value":575},"输入：nums = [5,4,-1,7,8]\n",{"type":473,"tag":500,"props":577,"children":578},{"class":502,"line":512},[579],{"type":473,"tag":500,"props":580,"children":581},{},[582],{"type":478,"value":583},"输出：23\n",{"type":473,"tag":474,"props":585,"children":586},{},[587],{"type":478,"value":588},"提示：",{"type":473,"tag":590,"props":591,"children":592},"ul",{},[593,599],{"type":473,"tag":594,"props":595,"children":596},"li",{},[597],{"type":478,"value":598},"1 \u003C= nums.length \u003C= 105",{"type":473,"tag":594,"props":600,"children":601},{},[602],{"type":478,"value":603},"-104 \u003C= nums[i] \u003C= 104",{"type":473,"tag":474,"props":605,"children":606},{},[607],{"type":478,"value":608},"进阶：如果你已经实现复杂度为 O(n) 的解法，尝试使用更为精妙的 分治法 求解。",{"type":473,"tag":610,"props":611,"children":613},"h2",{"id":612},"解题思路",[614],{"type":478,"value":612},{"type":473,"tag":610,"props":616,"children":618},{"id":617},"实现",[619],{"type":478,"value":617},{"type":473,"tag":621,"props":622,"children":624},"h3",{"id":623},"动态规划",[625],{"type":478,"value":623},{"type":473,"tag":490,"props":627,"children":631},{"className":628,"code":629,"language":630,"meta":466,"style":466},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSubArray = function (nums) {\n  let dp = [];\n  dp[0] = nums[0];\n  let res = dp[0];\n  for (let i = 1; i \u003C nums.length; i++) {\n    dp[i] = Math.max(dp[i - 1] + nums[i], nums[i]);\n    res = Math.max(res, dp[i]);\n  }\n  return res;\n};\n","js",[632],{"type":473,"tag":496,"props":633,"children":634},{"__ignoreMap":466},[635,644,670,687,696,740,770,822,859,938,1056,1114,1123,1140],{"type":473,"tag":500,"props":636,"children":637},{"class":502,"line":503},[638],{"type":473,"tag":500,"props":639,"children":641},{"style":640},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[642],{"type":478,"value":643},"/**\n",{"type":473,"tag":500,"props":645,"children":646},{"class":502,"line":512},[647,652,658,664],{"type":473,"tag":500,"props":648,"children":649},{"style":640},[650],{"type":478,"value":651}," * ",{"type":473,"tag":500,"props":653,"children":655},{"style":654},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[656],{"type":478,"value":657},"@param",{"type":473,"tag":500,"props":659,"children":661},{"style":660},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[662],{"type":478,"value":663}," {number[]}",{"type":473,"tag":500,"props":665,"children":667},{"style":666},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[668],{"type":478,"value":669}," nums\n",{"type":473,"tag":500,"props":671,"children":672},{"class":502,"line":521},[673,677,682],{"type":473,"tag":500,"props":674,"children":675},{"style":640},[676],{"type":478,"value":651},{"type":473,"tag":500,"props":678,"children":679},{"style":654},[680],{"type":478,"value":681},"@return",{"type":473,"tag":500,"props":683,"children":684},{"style":660},[685],{"type":478,"value":686}," {number}\n",{"type":473,"tag":500,"props":688,"children":690},{"class":502,"line":689},4,[691],{"type":473,"tag":500,"props":692,"children":693},{"style":640},[694],{"type":478,"value":695}," */\n",{"type":473,"tag":500,"props":697,"children":699},{"class":502,"line":698},5,[700,706,712,718,723,729,735],{"type":473,"tag":500,"props":701,"children":703},{"style":702},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[704],{"type":478,"value":705},"var",{"type":473,"tag":500,"props":707,"children":709},{"style":708},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[710],{"type":478,"value":711}," maxSubArray",{"type":473,"tag":500,"props":713,"children":715},{"style":714},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[716],{"type":478,"value":717}," =",{"type":473,"tag":500,"props":719,"children":720},{"style":702},[721],{"type":478,"value":722}," function",{"type":473,"tag":500,"props":724,"children":726},{"style":725},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[727],{"type":478,"value":728}," (",{"type":473,"tag":500,"props":730,"children":732},{"style":731},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[733],{"type":478,"value":734},"nums",{"type":473,"tag":500,"props":736,"children":737},{"style":725},[738],{"type":478,"value":739},") {\n",{"type":473,"tag":500,"props":741,"children":743},{"class":502,"line":742},6,[744,749,755,759,764],{"type":473,"tag":500,"props":745,"children":746},{"style":702},[747],{"type":478,"value":748},"  let",{"type":473,"tag":500,"props":750,"children":752},{"style":751},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[753],{"type":478,"value":754}," dp",{"type":473,"tag":500,"props":756,"children":757},{"style":714},[758],{"type":478,"value":717},{"type":473,"tag":500,"props":760,"children":761},{"style":725},[762],{"type":478,"value":763}," []",{"type":473,"tag":500,"props":765,"children":767},{"style":766},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[768],{"type":478,"value":769},";\n",{"type":473,"tag":500,"props":771,"children":773},{"class":502,"line":772},7,[774,779,784,790,795,800,805,809,813,818],{"type":473,"tag":500,"props":775,"children":776},{"style":751},[777],{"type":478,"value":778},"  dp",{"type":473,"tag":500,"props":780,"children":781},{"style":725},[782],{"type":478,"value":783},"[",{"type":473,"tag":500,"props":785,"children":787},{"style":786},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[788],{"type":478,"value":789},"0",{"type":473,"tag":500,"props":791,"children":792},{"style":725},[793],{"type":478,"value":794},"] ",{"type":473,"tag":500,"props":796,"children":797},{"style":714},[798],{"type":478,"value":799},"=",{"type":473,"tag":500,"props":801,"children":802},{"style":751},[803],{"type":478,"value":804}," nums",{"type":473,"tag":500,"props":806,"children":807},{"style":725},[808],{"type":478,"value":783},{"type":473,"tag":500,"props":810,"children":811},{"style":786},[812],{"type":478,"value":789},{"type":473,"tag":500,"props":814,"children":815},{"style":725},[816],{"type":478,"value":817},"]",{"type":473,"tag":500,"props":819,"children":820},{"style":766},[821],{"type":478,"value":769},{"type":473,"tag":500,"props":823,"children":825},{"class":502,"line":824},8,[826,830,835,839,843,847,851,855],{"type":473,"tag":500,"props":827,"children":828},{"style":702},[829],{"type":478,"value":748},{"type":473,"tag":500,"props":831,"children":832},{"style":751},[833],{"type":478,"value":834}," res",{"type":473,"tag":500,"props":836,"children":837},{"style":714},[838],{"type":478,"value":717},{"type":473,"tag":500,"props":840,"children":841},{"style":751},[842],{"type":478,"value":754},{"type":473,"tag":500,"props":844,"children":845},{"style":725},[846],{"type":478,"value":783},{"type":473,"tag":500,"props":848,"children":849},{"style":786},[850],{"type":478,"value":789},{"type":473,"tag":500,"props":852,"children":853},{"style":725},[854],{"type":478,"value":817},{"type":473,"tag":500,"props":856,"children":857},{"style":766},[858],{"type":478,"value":769},{"type":473,"tag":500,"props":860,"children":862},{"class":502,"line":861},9,[863,869,873,878,883,887,892,897,901,906,910,916,921,925,929,934],{"type":473,"tag":500,"props":864,"children":866},{"style":865},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[867],{"type":478,"value":868},"  for",{"type":473,"tag":500,"props":870,"children":871},{"style":725},[872],{"type":478,"value":728},{"type":473,"tag":500,"props":874,"children":875},{"style":702},[876],{"type":478,"value":877},"let",{"type":473,"tag":500,"props":879,"children":880},{"style":751},[881],{"type":478,"value":882}," i",{"type":473,"tag":500,"props":884,"children":885},{"style":714},[886],{"type":478,"value":717},{"type":473,"tag":500,"props":888,"children":889},{"style":786},[890],{"type":478,"value":891}," 1",{"type":473,"tag":500,"props":893,"children":894},{"style":766},[895],{"type":478,"value":896},";",{"type":473,"tag":500,"props":898,"children":899},{"style":751},[900],{"type":478,"value":882},{"type":473,"tag":500,"props":902,"children":903},{"style":714},[904],{"type":478,"value":905}," \u003C",{"type":473,"tag":500,"props":907,"children":908},{"style":751},[909],{"type":478,"value":804},{"type":473,"tag":500,"props":911,"children":913},{"style":912},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[914],{"type":478,"value":915},".",{"type":473,"tag":500,"props":917,"children":918},{"style":725},[919],{"type":478,"value":920},"length",{"type":473,"tag":500,"props":922,"children":923},{"style":766},[924],{"type":478,"value":896},{"type":473,"tag":500,"props":926,"children":927},{"style":751},[928],{"type":478,"value":882},{"type":473,"tag":500,"props":930,"children":931},{"style":714},[932],{"type":478,"value":933},"++",{"type":473,"tag":500,"props":935,"children":936},{"style":725},[937],{"type":478,"value":739},{"type":473,"tag":500,"props":939,"children":941},{"class":502,"line":940},10,[942,947,951,956,960,964,969,973,978,983,988,992,996,1001,1005,1009,1014,1018,1022,1026,1030,1035,1039,1043,1047,1052],{"type":473,"tag":500,"props":943,"children":944},{"style":751},[945],{"type":478,"value":946},"    dp",{"type":473,"tag":500,"props":948,"children":949},{"style":725},[950],{"type":478,"value":783},{"type":473,"tag":500,"props":952,"children":953},{"style":751},[954],{"type":478,"value":955},"i",{"type":473,"tag":500,"props":957,"children":958},{"style":725},[959],{"type":478,"value":794},{"type":473,"tag":500,"props":961,"children":962},{"style":714},[963],{"type":478,"value":799},{"type":473,"tag":500,"props":965,"children":966},{"style":751},[967],{"type":478,"value":968}," Math",{"type":473,"tag":500,"props":970,"children":971},{"style":912},[972],{"type":478,"value":915},{"type":473,"tag":500,"props":974,"children":975},{"style":708},[976],{"type":478,"value":977},"max",{"type":473,"tag":500,"props":979,"children":980},{"style":725},[981],{"type":478,"value":982},"(",{"type":473,"tag":500,"props":984,"children":985},{"style":751},[986],{"type":478,"value":987},"dp",{"type":473,"tag":500,"props":989,"children":990},{"style":725},[991],{"type":478,"value":783},{"type":473,"tag":500,"props":993,"children":994},{"style":751},[995],{"type":478,"value":955},{"type":473,"tag":500,"props":997,"children":998},{"style":714},[999],{"type":478,"value":1000}," -",{"type":473,"tag":500,"props":1002,"children":1003},{"style":786},[1004],{"type":478,"value":891},{"type":473,"tag":500,"props":1006,"children":1007},{"style":725},[1008],{"type":478,"value":794},{"type":473,"tag":500,"props":1010,"children":1011},{"style":714},[1012],{"type":478,"value":1013},"+",{"type":473,"tag":500,"props":1015,"children":1016},{"style":751},[1017],{"type":478,"value":804},{"type":473,"tag":500,"props":1019,"children":1020},{"style":725},[1021],{"type":478,"value":783},{"type":473,"tag":500,"props":1023,"children":1024},{"style":751},[1025],{"type":478,"value":955},{"type":473,"tag":500,"props":1027,"children":1028},{"style":725},[1029],{"type":478,"value":817},{"type":473,"tag":500,"props":1031,"children":1032},{"style":766},[1033],{"type":478,"value":1034},",",{"type":473,"tag":500,"props":1036,"children":1037},{"style":751},[1038],{"type":478,"value":804},{"type":473,"tag":500,"props":1040,"children":1041},{"style":725},[1042],{"type":478,"value":783},{"type":473,"tag":500,"props":1044,"children":1045},{"style":751},[1046],{"type":478,"value":955},{"type":473,"tag":500,"props":1048,"children":1049},{"style":725},[1050],{"type":478,"value":1051},"])",{"type":473,"tag":500,"props":1053,"children":1054},{"style":766},[1055],{"type":478,"value":769},{"type":473,"tag":500,"props":1057,"children":1059},{"class":502,"line":1058},11,[1060,1065,1069,1073,1077,1081,1085,1090,1094,1098,1102,1106,1110],{"type":473,"tag":500,"props":1061,"children":1062},{"style":751},[1063],{"type":478,"value":1064},"    res",{"type":473,"tag":500,"props":1066,"children":1067},{"style":714},[1068],{"type":478,"value":717},{"type":473,"tag":500,"props":1070,"children":1071},{"style":751},[1072],{"type":478,"value":968},{"type":473,"tag":500,"props":1074,"children":1075},{"style":912},[1076],{"type":478,"value":915},{"type":473,"tag":500,"props":1078,"children":1079},{"style":708},[1080],{"type":478,"value":977},{"type":473,"tag":500,"props":1082,"children":1083},{"style":725},[1084],{"type":478,"value":982},{"type":473,"tag":500,"props":1086,"children":1087},{"style":751},[1088],{"type":478,"value":1089},"res",{"type":473,"tag":500,"props":1091,"children":1092},{"style":766},[1093],{"type":478,"value":1034},{"type":473,"tag":500,"props":1095,"children":1096},{"style":751},[1097],{"type":478,"value":754},{"type":473,"tag":500,"props":1099,"children":1100},{"style":725},[1101],{"type":478,"value":783},{"type":473,"tag":500,"props":1103,"children":1104},{"style":751},[1105],{"type":478,"value":955},{"type":473,"tag":500,"props":1107,"children":1108},{"style":725},[1109],{"type":478,"value":1051},{"type":473,"tag":500,"props":1111,"children":1112},{"style":766},[1113],{"type":478,"value":769},{"type":473,"tag":500,"props":1115,"children":1117},{"class":502,"line":1116},12,[1118],{"type":473,"tag":500,"props":1119,"children":1120},{"style":725},[1121],{"type":478,"value":1122},"  }\n",{"type":473,"tag":500,"props":1124,"children":1126},{"class":502,"line":1125},13,[1127,1132,1136],{"type":473,"tag":500,"props":1128,"children":1129},{"style":865},[1130],{"type":478,"value":1131},"  return",{"type":473,"tag":500,"props":1133,"children":1134},{"style":751},[1135],{"type":478,"value":834},{"type":473,"tag":500,"props":1137,"children":1138},{"style":766},[1139],{"type":478,"value":769},{"type":473,"tag":500,"props":1141,"children":1143},{"class":502,"line":1142},14,[1144,1149],{"type":473,"tag":500,"props":1145,"children":1146},{"style":725},[1147],{"type":478,"value":1148},"}",{"type":473,"tag":500,"props":1150,"children":1151},{"style":766},[1152],{"type":478,"value":769},{"type":473,"tag":1154,"props":1155,"children":1156},"style",{},[1157],{"type":478,"value":1158},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":466,"searchDepth":698,"depth":698,"links":1160},[1161,1162],{"id":612,"depth":512,"text":612},{"id":617,"depth":512,"text":617,"children":1163},[1164],{"id":623,"depth":521,"text":623},"markdown","content:1.algorithm:3.leetcode:3.major:53.maximum-subarray.md","content","1.algorithm/3.leetcode/3.major/53.maximum-subarray.md","md",[1171,1173],{"_path":120,"title":119,"description":1172},"给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。",{"_path":126,"title":125,"description":1174},"以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [start_i, end_i] 。请你合并所有重叠的区间，并返回 一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间 。",1713695846601]