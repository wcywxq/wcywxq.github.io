[{"data":1,"prerenderedAt":1821},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/longest-common-subsequence":552,"/algorithm/leetcode/major/longest-common-subsequence-surround":1816},[4,272,311,529,537],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":310},"八股文","/endorsement",[276,286,297],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"构建工具","/endorsement/build-tools",[290],{"title":291,"_path":292,"children":293},"Webpack","/endorsement/build-tools/webpack",[294],{"title":295,"_path":296},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":298,"_path":299,"children":300},"Html","/endorsement/html",[301,304,307],{"title":302,"_path":303},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":305,"_path":306},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":308,"_path":309},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":312,"_path":313,"children":314,"icon":528},"代码考核","/code-assessment",[315,420,521],{"title":316,"_path":317,"children":318},"源码实现","/code-assessment/source",[319,353,369,397,404,411,414,417],{"title":320,"_path":321,"children":322},"原生 api","/code-assessment/source/native-api",[323,326,329,332,335,338,341,344,347,350],{"title":324,"_path":325},"polyfill","/code-assessment/source/native-api/polyfill",{"title":327,"_path":328},"ajax","/code-assessment/source/native-api/ajax",{"title":330,"_path":331},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":333,"_path":334},"new 操作符","/code-assessment/source/native-api/new",{"title":336,"_path":337},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":339,"_path":340},"定时器","/code-assessment/source/native-api/timer",{"title":342,"_path":343},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":345,"_path":346},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":348,"_path":349},"extends","/code-assessment/source/native-api/extends",{"title":351,"_path":352},"Promise","/code-assessment/source/native-api/promise",{"title":354,"_path":355,"children":356},"函数 Function","/code-assessment/source/function",[357,360,363,366],{"title":358,"_path":359},"函数防抖","/code-assessment/source/function/debounce",{"title":361,"_path":362},"函数节流","/code-assessment/source/function/throttle",{"title":364,"_path":365},"函数柯理化","/code-assessment/source/function/curry",{"title":367,"_path":368},"函数睡眠","/code-assessment/source/function/sleep",{"title":370,"_path":371,"children":372},"数组 Array","/code-assessment/source/array",[373,376,379,382,385,388,391,394],{"title":374,"_path":375},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":377,"_path":378},"数组扁平化","/code-assessment/source/array/flat",{"title":380,"_path":381},"原型方法","/code-assessment/source/array/prototype-method",{"title":383,"_path":384},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":386,"_path":387},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":389,"_path":390},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":392,"_path":393},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":395,"_path":396},"二维数组","/code-assessment/source/array/2d-array",{"title":398,"_path":399,"children":400},"字符串 String","/code-assessment/source/string",[401],{"title":402,"_path":403},"repeat()","/code-assessment/source/string/repeat",{"title":405,"_path":406,"children":407},"集合 Set","/code-assessment/source/set",[408],{"title":409,"_path":410},"遍历集合","/code-assessment/source/set/traverse",{"title":412,"_path":413},"获取通用类型","/code-assessment/source/get-generic-type",{"title":415,"_path":416},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":418,"_path":419},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":421,"_path":422,"children":423},"业务场景","/code-assessment/scene",[424,454,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518],{"title":351,"_path":425,"children":426},"/code-assessment/scene/promise",[427,430,433,436,439,442,445,448,451],{"title":428,"_path":429},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":431,"_path":432},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":434,"_path":435},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":437,"_path":438},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":440,"_path":441},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":443,"_path":444},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":446,"_path":447},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":449,"_path":450},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":452,"_path":453},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":455,"_path":456,"children":457},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[458,461],{"title":459,"_path":460},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":462,"_path":463},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":465,"_path":466},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":468,"_path":469},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":471,"_path":472},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":474,"_path":475},"倒计时","/code-assessment/scene/countdown",{"title":477,"_path":478},"日期格式化","/code-assessment/scene/date-format",{"title":480,"_path":481},"实现前端路由","/code-assessment/scene/frontend-route",{"title":483,"_path":484},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":486,"_path":487},"lodash.get","/code-assessment/scene/lodash-get",{"title":489,"_path":490},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":492,"_path":493},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":495,"_path":496},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":498,"_path":499},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":501,"_path":502},"随机数","/code-assessment/scene/random-number",{"title":504,"_path":505},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":507,"_path":508},"sku 算法实现","/code-assessment/scene/sku",{"title":510,"_path":511},"整数分割","/code-assessment/scene/split-number",{"title":513,"_path":514},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":516,"_path":517},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":519,"_path":520},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":522,"_path":523,"children":524},"Ts 类型挑战","/code-assessment/type-challeges",[525],{"title":526,"_path":527},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":530,"_path":531,"children":532,"icon":536},"项目","/project",[533],{"title":534,"_path":535},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":538,"_path":539,"children":540,"icon":551},"后端语言","/backend-languages",[541],{"title":542,"_path":543,"children":544},"Python","/backend-languages/python",[545,548],{"title":546,"_path":547},"基础","/backend-languages/python/base",{"title":549,"_path":550},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":264,"_dir":553,"_draft":554,"_partial":554,"_locale":555,"title":263,"description":556,"url":557,"body":558,"_type":1811,"_id":1812,"_source":1813,"_file":1814,"_extension":1815},"major",false,"","给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。","https://leetcode.cn/problems/longest-common-subsequence",{"type":559,"children":560,"toc":1801},"root",[561,568,573,578,583,622,627,657,662,693,698,713,719,724,730,735,740,745,798,803,812,825,833,838,843,1795],{"type":562,"tag":563,"props":564,"children":565},"element","p",{},[566],{"type":567,"value":556},"text",{"type":562,"tag":563,"props":569,"children":570},{},[571],{"type":567,"value":572},"一个字符串的 子序列 是指这样一个新的字符串：它是由原字符串在不改变字符的相对顺序的情况下删除某些字符（也可以不删除任何字符）后组成的新字符串。",{"type":562,"tag":563,"props":574,"children":575},{},[576],{"type":567,"value":577},"例如，\"ace\" 是 \"abcde\" 的子序列，但 \"aec\" 不是 \"abcde\" 的子序列。\n两个字符串的 公共子序列 是这两个字符串所共同拥有的子序列。",{"type":562,"tag":563,"props":579,"children":580},{},[581],{"type":567,"value":582},"示例 1：",{"type":562,"tag":584,"props":585,"children":588},"pre",{"className":586,"code":587,"language":567,"meta":555,"style":555},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：text1 = \"abcde\", text2 = \"ace\"\n输出：3\n解释：最长公共子序列是 \"ace\" ，它的长度为 3 。\n",[589],{"type":562,"tag":590,"props":591,"children":592},"code",{"__ignoreMap":555},[593,604,613],{"type":562,"tag":594,"props":595,"children":598},"span",{"class":596,"line":597},"line",1,[599],{"type":562,"tag":594,"props":600,"children":601},{},[602],{"type":567,"value":603},"输入：text1 = \"abcde\", text2 = \"ace\"\n",{"type":562,"tag":594,"props":605,"children":607},{"class":596,"line":606},2,[608],{"type":562,"tag":594,"props":609,"children":610},{},[611],{"type":567,"value":612},"输出：3\n",{"type":562,"tag":594,"props":614,"children":616},{"class":596,"line":615},3,[617],{"type":562,"tag":594,"props":618,"children":619},{},[620],{"type":567,"value":621},"解释：最长公共子序列是 \"ace\" ，它的长度为 3 。\n",{"type":562,"tag":563,"props":623,"children":624},{},[625],{"type":567,"value":626},"示例 2：",{"type":562,"tag":584,"props":628,"children":630},{"className":586,"code":629,"language":567,"meta":555,"style":555},"输入：text1 = \"abc\", text2 = \"abc\"\n输出：3\n解释：最长公共子序列是 \"abc\" ，它的长度为 3 。\n",[631],{"type":562,"tag":590,"props":632,"children":633},{"__ignoreMap":555},[634,642,649],{"type":562,"tag":594,"props":635,"children":636},{"class":596,"line":597},[637],{"type":562,"tag":594,"props":638,"children":639},{},[640],{"type":567,"value":641},"输入：text1 = \"abc\", text2 = \"abc\"\n",{"type":562,"tag":594,"props":643,"children":644},{"class":596,"line":606},[645],{"type":562,"tag":594,"props":646,"children":647},{},[648],{"type":567,"value":612},{"type":562,"tag":594,"props":650,"children":651},{"class":596,"line":615},[652],{"type":562,"tag":594,"props":653,"children":654},{},[655],{"type":567,"value":656},"解释：最长公共子序列是 \"abc\" ，它的长度为 3 。\n",{"type":562,"tag":563,"props":658,"children":659},{},[660],{"type":567,"value":661},"示例 3：",{"type":562,"tag":584,"props":663,"children":665},{"className":586,"code":664,"language":567,"meta":555,"style":555},"输入：text1 = \"abc\", text2 = \"def\"\n输出：0\n解释：两个字符串没有公共子序列，返回 0 。\n",[666],{"type":562,"tag":590,"props":667,"children":668},{"__ignoreMap":555},[669,677,685],{"type":562,"tag":594,"props":670,"children":671},{"class":596,"line":597},[672],{"type":562,"tag":594,"props":673,"children":674},{},[675],{"type":567,"value":676},"输入：text1 = \"abc\", text2 = \"def\"\n",{"type":562,"tag":594,"props":678,"children":679},{"class":596,"line":606},[680],{"type":562,"tag":594,"props":681,"children":682},{},[683],{"type":567,"value":684},"输出：0\n",{"type":562,"tag":594,"props":686,"children":687},{"class":596,"line":615},[688],{"type":562,"tag":594,"props":689,"children":690},{},[691],{"type":567,"value":692},"解释：两个字符串没有公共子序列，返回 0 。\n",{"type":562,"tag":563,"props":694,"children":695},{},[696],{"type":567,"value":697},"提示：",{"type":562,"tag":699,"props":700,"children":701},"ul",{},[702,708],{"type":562,"tag":703,"props":704,"children":705},"li",{},[706],{"type":567,"value":707},"1 \u003C= text1.length, text2.length \u003C= 1000",{"type":562,"tag":703,"props":709,"children":710},{},[711],{"type":567,"value":712},"text1 和 text2 仅由小写英文字符组成。",{"type":562,"tag":714,"props":715,"children":717},"h2",{"id":716},"解题思路",[718],{"type":567,"value":716},{"type":562,"tag":563,"props":720,"children":721},{},[722],{"type":567,"value":723},"最长公共子序列问题是典型的二维动态规划问题。",{"type":562,"tag":725,"props":726,"children":728},"h3",{"id":727},"状态",[729],{"type":567,"value":727},{"type":562,"tag":563,"props":731,"children":732},{},[733],{"type":567,"value":734},"假设字符串 text1 和 text2 的长度分别为 m 和 n，创建 m+1 行 n+1 列的二维数组 dp，其中 dp[i][j] 表示 text1[0:i] 和 text2[0:j] 的最长公共子序列的长度",{"type":562,"tag":563,"props":736,"children":737},{},[738],{"type":567,"value":739},"上述表示中，text1[0:i] 表示 text1 的长度为 i 的前缀，text2[0:j] 表示 text2 的长度为 j 的前缀",{"type":562,"tag":725,"props":741,"children":743},{"id":742},"边界",[744],{"type":567,"value":742},{"type":562,"tag":746,"props":747,"children":748},"ol",{},[749,754,759,764],{"type":562,"tag":703,"props":750,"children":751},{},[752],{"type":567,"value":753},"当 i = 0 时，text1[0:i] 为空，空字符串和任何字符串的最长公共子序列的长度都是 0，因此对于任意 0\u003C=j\u003C=n，都有 dp[0][j] = 0；",{"type":562,"tag":703,"props":755,"children":756},{},[757],{"type":567,"value":758},"当 j = 0 时，text2[0:j] 为空，空字符串和任何字符串的最长公共子序列的长度都是 0，因此对于任意 0\u003C=i\u003C=m，都有 dp[i][0] = 0；",{"type":562,"tag":703,"props":760,"children":761},{},[762],{"type":567,"value":763},"因此：当 i = 0 或 j = 0 时，dp[i][j] = 0；",{"type":562,"tag":703,"props":765,"children":766},{},[767,769],{"type":567,"value":768},"当 i > 0 且 j > 0 时，考虑 dp[i][j] 的计算：",{"type":562,"tag":699,"props":770,"children":771},{},[772,785],{"type":562,"tag":703,"props":773,"children":774},{},[775,777,783],{"type":567,"value":776},"当 text1[i-1] = text2[j-1] 时，将这两个相同的字符称为公共字符。考虑 text1[0:i-1] 和 text2[0:j-1] 的最长公共子序列，再增加一个字符（即公共字符）即可得到 text1[0:i] 和 text2[0:j] 的最长公共子序列。因此：",{"type":562,"tag":590,"props":778,"children":780},{"className":779},[],[781],{"type":567,"value":782},"dp[i][j] = dp[i-1][j-1] + 1",{"type":567,"value":784},"；",{"type":562,"tag":703,"props":786,"children":787},{},[788,790,796],{"type":567,"value":789},"当 text1[i-1] != text2[j-1] 时，需要考虑 text1[0:i-1] 和 text2[0:j] 的最长公共子序列；以及 text1[0:i] 和 text2[0:j-1] 的最长公共子序列。要得到 text1[0:i] 和 text2[0:j] 的最长公共子序列，应取两项中长度较大的一项，因此： ",{"type":562,"tag":590,"props":791,"children":793},{"className":792},[],[794],{"type":567,"value":795},"dp[i][j] = max(dp[i-1][j], dp[i][j-1])",{"type":567,"value":797},"。",{"type":562,"tag":725,"props":799,"children":801},{"id":800},"状态转移方程",[802],{"type":567,"value":800},{"type":562,"tag":563,"props":804,"children":805},{},[806],{"type":562,"tag":807,"props":808,"children":811},"img",{"alt":809,"src":810},"function-formula","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.1143_function-formula.png",[],{"type":562,"tag":563,"props":813,"children":814},{},[815,817,823],{"type":567,"value":816},"最终得到 ",{"type":562,"tag":590,"props":818,"children":820},{"className":819},[],[821],{"type":567,"value":822},"dp[m][n]",{"type":567,"value":824}," 即为 text1 和 text2 的最长公共子序列的长度。",{"type":562,"tag":563,"props":826,"children":827},{},[828],{"type":562,"tag":807,"props":829,"children":832},{"alt":830,"src":831},"graphic-solution","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.1143_graphic-solution.png",[],{"type":562,"tag":714,"props":834,"children":836},{"id":835},"实现",[837],{"type":567,"value":835},{"type":562,"tag":725,"props":839,"children":841},{"id":840},"动态规划",[842],{"type":567,"value":840},{"type":562,"tag":584,"props":844,"children":848},{"className":845,"code":846,"language":847,"meta":555,"style":555},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * 二维动态规划\n * @param {string} text1\n * @param {string} text2\n * @return {number}\n */\nvar longestCommonSubsequence = function (text1, text2) {\n  let m = text1.length;\n  let n = text2.length;\n  let dp = new Array(m + 1).fill(0).map(() => new Array(n + 1).fill(0));\n  for (let i = 1; i \u003C= m; i++) {\n    const str1 = text1[i - 1];\n    for (let j = 1; j \u003C= n; j++) {\n      const str2 = text2[j - 1];\n      if (str1 === str2) {\n        dp[i][j] = dp[i - 1][j - 1] + 1;\n      } else {\n        dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);\n      }\n    }\n  }\n  return dp[m][n];\n};\n","js",[849],{"type":562,"tag":590,"props":850,"children":851},{"__ignoreMap":555},[852,861,869,911,944,975,984,1040,1079,1112,1244,1314,1360,1426,1469,1504,1591,1609,1726,1735,1744,1753,1786],{"type":562,"tag":594,"props":853,"children":854},{"class":596,"line":597},[855],{"type":562,"tag":594,"props":856,"children":858},{"style":857},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[859],{"type":567,"value":860},"/**\n",{"type":562,"tag":594,"props":862,"children":863},{"class":596,"line":606},[864],{"type":562,"tag":594,"props":865,"children":866},{"style":857},[867],{"type":567,"value":868}," * 二维动态规划\n",{"type":562,"tag":594,"props":870,"children":871},{"class":596,"line":615},[872,877,883,889,894,900,905],{"type":562,"tag":594,"props":873,"children":874},{"style":857},[875],{"type":567,"value":876}," * ",{"type":562,"tag":594,"props":878,"children":880},{"style":879},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[881],{"type":567,"value":882},"@",{"type":562,"tag":594,"props":884,"children":886},{"style":885},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[887],{"type":567,"value":888},"param",{"type":562,"tag":594,"props":890,"children":891},{"style":879},[892],{"type":567,"value":893}," {",{"type":562,"tag":594,"props":895,"children":897},{"style":896},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[898],{"type":567,"value":899},"string",{"type":562,"tag":594,"props":901,"children":902},{"style":879},[903],{"type":567,"value":904},"}",{"type":562,"tag":594,"props":906,"children":908},{"style":907},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[909],{"type":567,"value":910}," text1\n",{"type":562,"tag":594,"props":912,"children":914},{"class":596,"line":913},4,[915,919,923,927,931,935,939],{"type":562,"tag":594,"props":916,"children":917},{"style":857},[918],{"type":567,"value":876},{"type":562,"tag":594,"props":920,"children":921},{"style":879},[922],{"type":567,"value":882},{"type":562,"tag":594,"props":924,"children":925},{"style":885},[926],{"type":567,"value":888},{"type":562,"tag":594,"props":928,"children":929},{"style":879},[930],{"type":567,"value":893},{"type":562,"tag":594,"props":932,"children":933},{"style":896},[934],{"type":567,"value":899},{"type":562,"tag":594,"props":936,"children":937},{"style":879},[938],{"type":567,"value":904},{"type":562,"tag":594,"props":940,"children":941},{"style":907},[942],{"type":567,"value":943}," text2\n",{"type":562,"tag":594,"props":945,"children":947},{"class":596,"line":946},5,[948,952,956,961,965,970],{"type":562,"tag":594,"props":949,"children":950},{"style":857},[951],{"type":567,"value":876},{"type":562,"tag":594,"props":953,"children":954},{"style":879},[955],{"type":567,"value":882},{"type":562,"tag":594,"props":957,"children":958},{"style":885},[959],{"type":567,"value":960},"return",{"type":562,"tag":594,"props":962,"children":963},{"style":879},[964],{"type":567,"value":893},{"type":562,"tag":594,"props":966,"children":967},{"style":896},[968],{"type":567,"value":969},"number",{"type":562,"tag":594,"props":971,"children":972},{"style":879},[973],{"type":567,"value":974},"}\n",{"type":562,"tag":594,"props":976,"children":978},{"class":596,"line":977},6,[979],{"type":562,"tag":594,"props":980,"children":981},{"style":857},[982],{"type":567,"value":983}," */\n",{"type":562,"tag":594,"props":985,"children":987},{"class":596,"line":986},7,[988,994,1000,1005,1010,1015,1020,1025,1030,1035],{"type":562,"tag":594,"props":989,"children":991},{"style":990},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[992],{"type":567,"value":993},"var",{"type":562,"tag":594,"props":995,"children":997},{"style":996},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[998],{"type":567,"value":999}," longestCommonSubsequence",{"type":562,"tag":594,"props":1001,"children":1002},{"style":879},[1003],{"type":567,"value":1004}," =",{"type":562,"tag":594,"props":1006,"children":1007},{"style":990},[1008],{"type":567,"value":1009}," function",{"type":562,"tag":594,"props":1011,"children":1012},{"style":879},[1013],{"type":567,"value":1014}," (",{"type":562,"tag":594,"props":1016,"children":1017},{"style":907},[1018],{"type":567,"value":1019},"text1",{"type":562,"tag":594,"props":1021,"children":1022},{"style":879},[1023],{"type":567,"value":1024},",",{"type":562,"tag":594,"props":1026,"children":1027},{"style":907},[1028],{"type":567,"value":1029}," text2",{"type":562,"tag":594,"props":1031,"children":1032},{"style":879},[1033],{"type":567,"value":1034},")",{"type":562,"tag":594,"props":1036,"children":1037},{"style":879},[1038],{"type":567,"value":1039}," {\n",{"type":562,"tag":594,"props":1041,"children":1043},{"class":596,"line":1042},8,[1044,1049,1054,1058,1063,1068,1074],{"type":562,"tag":594,"props":1045,"children":1046},{"style":990},[1047],{"type":567,"value":1048},"  let",{"type":562,"tag":594,"props":1050,"children":1051},{"style":907},[1052],{"type":567,"value":1053}," m",{"type":562,"tag":594,"props":1055,"children":1056},{"style":879},[1057],{"type":567,"value":1004},{"type":562,"tag":594,"props":1059,"children":1060},{"style":907},[1061],{"type":567,"value":1062}," text1",{"type":562,"tag":594,"props":1064,"children":1065},{"style":879},[1066],{"type":567,"value":1067},".",{"type":562,"tag":594,"props":1069,"children":1071},{"style":1070},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1072],{"type":567,"value":1073},"length",{"type":562,"tag":594,"props":1075,"children":1076},{"style":879},[1077],{"type":567,"value":1078},";\n",{"type":562,"tag":594,"props":1080,"children":1082},{"class":596,"line":1081},9,[1083,1087,1092,1096,1100,1104,1108],{"type":562,"tag":594,"props":1084,"children":1085},{"style":990},[1086],{"type":567,"value":1048},{"type":562,"tag":594,"props":1088,"children":1089},{"style":907},[1090],{"type":567,"value":1091}," n",{"type":562,"tag":594,"props":1093,"children":1094},{"style":879},[1095],{"type":567,"value":1004},{"type":562,"tag":594,"props":1097,"children":1098},{"style":907},[1099],{"type":567,"value":1029},{"type":562,"tag":594,"props":1101,"children":1102},{"style":879},[1103],{"type":567,"value":1067},{"type":562,"tag":594,"props":1105,"children":1106},{"style":1070},[1107],{"type":567,"value":1073},{"type":562,"tag":594,"props":1109,"children":1110},{"style":879},[1111],{"type":567,"value":1078},{"type":562,"tag":594,"props":1113,"children":1115},{"class":596,"line":1114},10,[1116,1120,1125,1129,1134,1139,1144,1149,1154,1160,1165,1170,1174,1179,1183,1188,1193,1198,1202,1206,1210,1215,1219,1223,1227,1231,1235,1239],{"type":562,"tag":594,"props":1117,"children":1118},{"style":990},[1119],{"type":567,"value":1048},{"type":562,"tag":594,"props":1121,"children":1122},{"style":907},[1123],{"type":567,"value":1124}," dp",{"type":562,"tag":594,"props":1126,"children":1127},{"style":879},[1128],{"type":567,"value":1004},{"type":562,"tag":594,"props":1130,"children":1131},{"style":990},[1132],{"type":567,"value":1133}," new",{"type":562,"tag":594,"props":1135,"children":1136},{"style":996},[1137],{"type":567,"value":1138}," Array",{"type":562,"tag":594,"props":1140,"children":1141},{"style":879},[1142],{"type":567,"value":1143},"(",{"type":562,"tag":594,"props":1145,"children":1146},{"style":907},[1147],{"type":567,"value":1148},"m",{"type":562,"tag":594,"props":1150,"children":1151},{"style":990},[1152],{"type":567,"value":1153}," +",{"type":562,"tag":594,"props":1155,"children":1157},{"style":1156},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1158],{"type":567,"value":1159}," 1",{"type":562,"tag":594,"props":1161,"children":1162},{"style":879},[1163],{"type":567,"value":1164},").",{"type":562,"tag":594,"props":1166,"children":1167},{"style":996},[1168],{"type":567,"value":1169},"fill",{"type":562,"tag":594,"props":1171,"children":1172},{"style":879},[1173],{"type":567,"value":1143},{"type":562,"tag":594,"props":1175,"children":1176},{"style":1156},[1177],{"type":567,"value":1178},"0",{"type":562,"tag":594,"props":1180,"children":1181},{"style":879},[1182],{"type":567,"value":1164},{"type":562,"tag":594,"props":1184,"children":1185},{"style":996},[1186],{"type":567,"value":1187},"map",{"type":562,"tag":594,"props":1189,"children":1190},{"style":879},[1191],{"type":567,"value":1192},"(()",{"type":562,"tag":594,"props":1194,"children":1195},{"style":879},[1196],{"type":567,"value":1197}," =>",{"type":562,"tag":594,"props":1199,"children":1200},{"style":990},[1201],{"type":567,"value":1133},{"type":562,"tag":594,"props":1203,"children":1204},{"style":996},[1205],{"type":567,"value":1138},{"type":562,"tag":594,"props":1207,"children":1208},{"style":879},[1209],{"type":567,"value":1143},{"type":562,"tag":594,"props":1211,"children":1212},{"style":907},[1213],{"type":567,"value":1214},"n",{"type":562,"tag":594,"props":1216,"children":1217},{"style":990},[1218],{"type":567,"value":1153},{"type":562,"tag":594,"props":1220,"children":1221},{"style":1156},[1222],{"type":567,"value":1159},{"type":562,"tag":594,"props":1224,"children":1225},{"style":879},[1226],{"type":567,"value":1164},{"type":562,"tag":594,"props":1228,"children":1229},{"style":996},[1230],{"type":567,"value":1169},{"type":562,"tag":594,"props":1232,"children":1233},{"style":879},[1234],{"type":567,"value":1143},{"type":562,"tag":594,"props":1236,"children":1237},{"style":1156},[1238],{"type":567,"value":1178},{"type":562,"tag":594,"props":1240,"children":1241},{"style":879},[1242],{"type":567,"value":1243},"));\n",{"type":562,"tag":594,"props":1245,"children":1247},{"class":596,"line":1246},11,[1248,1253,1257,1262,1267,1271,1275,1280,1284,1289,1293,1297,1301,1306,1310],{"type":562,"tag":594,"props":1249,"children":1250},{"style":885},[1251],{"type":567,"value":1252},"  for",{"type":562,"tag":594,"props":1254,"children":1255},{"style":879},[1256],{"type":567,"value":1014},{"type":562,"tag":594,"props":1258,"children":1259},{"style":990},[1260],{"type":567,"value":1261},"let",{"type":562,"tag":594,"props":1263,"children":1264},{"style":907},[1265],{"type":567,"value":1266}," i",{"type":562,"tag":594,"props":1268,"children":1269},{"style":879},[1270],{"type":567,"value":1004},{"type":562,"tag":594,"props":1272,"children":1273},{"style":1156},[1274],{"type":567,"value":1159},{"type":562,"tag":594,"props":1276,"children":1277},{"style":879},[1278],{"type":567,"value":1279},";",{"type":562,"tag":594,"props":1281,"children":1282},{"style":907},[1283],{"type":567,"value":1266},{"type":562,"tag":594,"props":1285,"children":1286},{"style":879},[1287],{"type":567,"value":1288}," \u003C=",{"type":562,"tag":594,"props":1290,"children":1291},{"style":907},[1292],{"type":567,"value":1053},{"type":562,"tag":594,"props":1294,"children":1295},{"style":879},[1296],{"type":567,"value":1279},{"type":562,"tag":594,"props":1298,"children":1299},{"style":907},[1300],{"type":567,"value":1266},{"type":562,"tag":594,"props":1302,"children":1303},{"style":990},[1304],{"type":567,"value":1305},"++",{"type":562,"tag":594,"props":1307,"children":1308},{"style":879},[1309],{"type":567,"value":1034},{"type":562,"tag":594,"props":1311,"children":1312},{"style":879},[1313],{"type":567,"value":1039},{"type":562,"tag":594,"props":1315,"children":1317},{"class":596,"line":1316},12,[1318,1323,1328,1332,1336,1341,1346,1351,1355],{"type":562,"tag":594,"props":1319,"children":1320},{"style":990},[1321],{"type":567,"value":1322},"    const",{"type":562,"tag":594,"props":1324,"children":1325},{"style":907},[1326],{"type":567,"value":1327}," str1",{"type":562,"tag":594,"props":1329,"children":1330},{"style":879},[1331],{"type":567,"value":1004},{"type":562,"tag":594,"props":1333,"children":1334},{"style":907},[1335],{"type":567,"value":1062},{"type":562,"tag":594,"props":1337,"children":1338},{"style":879},[1339],{"type":567,"value":1340},"[",{"type":562,"tag":594,"props":1342,"children":1343},{"style":907},[1344],{"type":567,"value":1345},"i",{"type":562,"tag":594,"props":1347,"children":1348},{"style":990},[1349],{"type":567,"value":1350}," -",{"type":562,"tag":594,"props":1352,"children":1353},{"style":1156},[1354],{"type":567,"value":1159},{"type":562,"tag":594,"props":1356,"children":1357},{"style":879},[1358],{"type":567,"value":1359},"];\n",{"type":562,"tag":594,"props":1361,"children":1363},{"class":596,"line":1362},13,[1364,1369,1373,1377,1382,1386,1390,1394,1398,1402,1406,1410,1414,1418,1422],{"type":562,"tag":594,"props":1365,"children":1366},{"style":885},[1367],{"type":567,"value":1368},"    for",{"type":562,"tag":594,"props":1370,"children":1371},{"style":879},[1372],{"type":567,"value":1014},{"type":562,"tag":594,"props":1374,"children":1375},{"style":990},[1376],{"type":567,"value":1261},{"type":562,"tag":594,"props":1378,"children":1379},{"style":907},[1380],{"type":567,"value":1381}," j",{"type":562,"tag":594,"props":1383,"children":1384},{"style":879},[1385],{"type":567,"value":1004},{"type":562,"tag":594,"props":1387,"children":1388},{"style":1156},[1389],{"type":567,"value":1159},{"type":562,"tag":594,"props":1391,"children":1392},{"style":879},[1393],{"type":567,"value":1279},{"type":562,"tag":594,"props":1395,"children":1396},{"style":907},[1397],{"type":567,"value":1381},{"type":562,"tag":594,"props":1399,"children":1400},{"style":879},[1401],{"type":567,"value":1288},{"type":562,"tag":594,"props":1403,"children":1404},{"style":907},[1405],{"type":567,"value":1091},{"type":562,"tag":594,"props":1407,"children":1408},{"style":879},[1409],{"type":567,"value":1279},{"type":562,"tag":594,"props":1411,"children":1412},{"style":907},[1413],{"type":567,"value":1381},{"type":562,"tag":594,"props":1415,"children":1416},{"style":990},[1417],{"type":567,"value":1305},{"type":562,"tag":594,"props":1419,"children":1420},{"style":879},[1421],{"type":567,"value":1034},{"type":562,"tag":594,"props":1423,"children":1424},{"style":879},[1425],{"type":567,"value":1039},{"type":562,"tag":594,"props":1427,"children":1429},{"class":596,"line":1428},14,[1430,1435,1440,1444,1448,1452,1457,1461,1465],{"type":562,"tag":594,"props":1431,"children":1432},{"style":990},[1433],{"type":567,"value":1434},"      const",{"type":562,"tag":594,"props":1436,"children":1437},{"style":907},[1438],{"type":567,"value":1439}," str2",{"type":562,"tag":594,"props":1441,"children":1442},{"style":879},[1443],{"type":567,"value":1004},{"type":562,"tag":594,"props":1445,"children":1446},{"style":907},[1447],{"type":567,"value":1029},{"type":562,"tag":594,"props":1449,"children":1450},{"style":879},[1451],{"type":567,"value":1340},{"type":562,"tag":594,"props":1453,"children":1454},{"style":907},[1455],{"type":567,"value":1456},"j",{"type":562,"tag":594,"props":1458,"children":1459},{"style":990},[1460],{"type":567,"value":1350},{"type":562,"tag":594,"props":1462,"children":1463},{"style":1156},[1464],{"type":567,"value":1159},{"type":562,"tag":594,"props":1466,"children":1467},{"style":879},[1468],{"type":567,"value":1359},{"type":562,"tag":594,"props":1470,"children":1472},{"class":596,"line":1471},15,[1473,1478,1482,1487,1492,1496,1500],{"type":562,"tag":594,"props":1474,"children":1475},{"style":885},[1476],{"type":567,"value":1477},"      if",{"type":562,"tag":594,"props":1479,"children":1480},{"style":879},[1481],{"type":567,"value":1014},{"type":562,"tag":594,"props":1483,"children":1484},{"style":907},[1485],{"type":567,"value":1486},"str1",{"type":562,"tag":594,"props":1488,"children":1489},{"style":990},[1490],{"type":567,"value":1491}," ===",{"type":562,"tag":594,"props":1493,"children":1494},{"style":907},[1495],{"type":567,"value":1439},{"type":562,"tag":594,"props":1497,"children":1498},{"style":879},[1499],{"type":567,"value":1034},{"type":562,"tag":594,"props":1501,"children":1502},{"style":879},[1503],{"type":567,"value":1039},{"type":562,"tag":594,"props":1505,"children":1507},{"class":596,"line":1506},16,[1508,1513,1517,1521,1526,1530,1535,1539,1543,1547,1551,1555,1559,1563,1567,1571,1575,1579,1583,1587],{"type":562,"tag":594,"props":1509,"children":1510},{"style":907},[1511],{"type":567,"value":1512},"        dp",{"type":562,"tag":594,"props":1514,"children":1515},{"style":879},[1516],{"type":567,"value":1340},{"type":562,"tag":594,"props":1518,"children":1519},{"style":907},[1520],{"type":567,"value":1345},{"type":562,"tag":594,"props":1522,"children":1523},{"style":879},[1524],{"type":567,"value":1525},"][",{"type":562,"tag":594,"props":1527,"children":1528},{"style":907},[1529],{"type":567,"value":1456},{"type":562,"tag":594,"props":1531,"children":1532},{"style":879},[1533],{"type":567,"value":1534},"]",{"type":562,"tag":594,"props":1536,"children":1537},{"style":879},[1538],{"type":567,"value":1004},{"type":562,"tag":594,"props":1540,"children":1541},{"style":907},[1542],{"type":567,"value":1124},{"type":562,"tag":594,"props":1544,"children":1545},{"style":879},[1546],{"type":567,"value":1340},{"type":562,"tag":594,"props":1548,"children":1549},{"style":907},[1550],{"type":567,"value":1345},{"type":562,"tag":594,"props":1552,"children":1553},{"style":990},[1554],{"type":567,"value":1350},{"type":562,"tag":594,"props":1556,"children":1557},{"style":1156},[1558],{"type":567,"value":1159},{"type":562,"tag":594,"props":1560,"children":1561},{"style":879},[1562],{"type":567,"value":1525},{"type":562,"tag":594,"props":1564,"children":1565},{"style":907},[1566],{"type":567,"value":1456},{"type":562,"tag":594,"props":1568,"children":1569},{"style":990},[1570],{"type":567,"value":1350},{"type":562,"tag":594,"props":1572,"children":1573},{"style":1156},[1574],{"type":567,"value":1159},{"type":562,"tag":594,"props":1576,"children":1577},{"style":879},[1578],{"type":567,"value":1534},{"type":562,"tag":594,"props":1580,"children":1581},{"style":990},[1582],{"type":567,"value":1153},{"type":562,"tag":594,"props":1584,"children":1585},{"style":1156},[1586],{"type":567,"value":1159},{"type":562,"tag":594,"props":1588,"children":1589},{"style":879},[1590],{"type":567,"value":1078},{"type":562,"tag":594,"props":1592,"children":1594},{"class":596,"line":1593},17,[1595,1600,1605],{"type":562,"tag":594,"props":1596,"children":1597},{"style":879},[1598],{"type":567,"value":1599},"      }",{"type":562,"tag":594,"props":1601,"children":1602},{"style":885},[1603],{"type":567,"value":1604}," else",{"type":562,"tag":594,"props":1606,"children":1607},{"style":879},[1608],{"type":567,"value":1039},{"type":562,"tag":594,"props":1610,"children":1612},{"class":596,"line":1611},18,[1613,1617,1621,1625,1629,1633,1637,1641,1646,1650,1655,1659,1664,1668,1672,1676,1680,1684,1688,1693,1697,1701,1705,1709,1713,1717,1721],{"type":562,"tag":594,"props":1614,"children":1615},{"style":907},[1616],{"type":567,"value":1512},{"type":562,"tag":594,"props":1618,"children":1619},{"style":879},[1620],{"type":567,"value":1340},{"type":562,"tag":594,"props":1622,"children":1623},{"style":907},[1624],{"type":567,"value":1345},{"type":562,"tag":594,"props":1626,"children":1627},{"style":879},[1628],{"type":567,"value":1525},{"type":562,"tag":594,"props":1630,"children":1631},{"style":907},[1632],{"type":567,"value":1456},{"type":562,"tag":594,"props":1634,"children":1635},{"style":879},[1636],{"type":567,"value":1534},{"type":562,"tag":594,"props":1638,"children":1639},{"style":879},[1640],{"type":567,"value":1004},{"type":562,"tag":594,"props":1642,"children":1643},{"style":907},[1644],{"type":567,"value":1645}," Math",{"type":562,"tag":594,"props":1647,"children":1648},{"style":879},[1649],{"type":567,"value":1067},{"type":562,"tag":594,"props":1651,"children":1652},{"style":996},[1653],{"type":567,"value":1654},"max",{"type":562,"tag":594,"props":1656,"children":1657},{"style":879},[1658],{"type":567,"value":1143},{"type":562,"tag":594,"props":1660,"children":1661},{"style":907},[1662],{"type":567,"value":1663},"dp",{"type":562,"tag":594,"props":1665,"children":1666},{"style":879},[1667],{"type":567,"value":1340},{"type":562,"tag":594,"props":1669,"children":1670},{"style":907},[1671],{"type":567,"value":1345},{"type":562,"tag":594,"props":1673,"children":1674},{"style":990},[1675],{"type":567,"value":1350},{"type":562,"tag":594,"props":1677,"children":1678},{"style":1156},[1679],{"type":567,"value":1159},{"type":562,"tag":594,"props":1681,"children":1682},{"style":879},[1683],{"type":567,"value":1525},{"type":562,"tag":594,"props":1685,"children":1686},{"style":907},[1687],{"type":567,"value":1456},{"type":562,"tag":594,"props":1689,"children":1690},{"style":879},[1691],{"type":567,"value":1692},"],",{"type":562,"tag":594,"props":1694,"children":1695},{"style":907},[1696],{"type":567,"value":1124},{"type":562,"tag":594,"props":1698,"children":1699},{"style":879},[1700],{"type":567,"value":1340},{"type":562,"tag":594,"props":1702,"children":1703},{"style":907},[1704],{"type":567,"value":1345},{"type":562,"tag":594,"props":1706,"children":1707},{"style":879},[1708],{"type":567,"value":1525},{"type":562,"tag":594,"props":1710,"children":1711},{"style":907},[1712],{"type":567,"value":1456},{"type":562,"tag":594,"props":1714,"children":1715},{"style":990},[1716],{"type":567,"value":1350},{"type":562,"tag":594,"props":1718,"children":1719},{"style":1156},[1720],{"type":567,"value":1159},{"type":562,"tag":594,"props":1722,"children":1723},{"style":879},[1724],{"type":567,"value":1725},"]);\n",{"type":562,"tag":594,"props":1727,"children":1729},{"class":596,"line":1728},19,[1730],{"type":562,"tag":594,"props":1731,"children":1732},{"style":879},[1733],{"type":567,"value":1734},"      }\n",{"type":562,"tag":594,"props":1736,"children":1738},{"class":596,"line":1737},20,[1739],{"type":562,"tag":594,"props":1740,"children":1741},{"style":879},[1742],{"type":567,"value":1743},"    }\n",{"type":562,"tag":594,"props":1745,"children":1747},{"class":596,"line":1746},21,[1748],{"type":562,"tag":594,"props":1749,"children":1750},{"style":879},[1751],{"type":567,"value":1752},"  }\n",{"type":562,"tag":594,"props":1754,"children":1756},{"class":596,"line":1755},22,[1757,1762,1766,1770,1774,1778,1782],{"type":562,"tag":594,"props":1758,"children":1759},{"style":885},[1760],{"type":567,"value":1761},"  return",{"type":562,"tag":594,"props":1763,"children":1764},{"style":907},[1765],{"type":567,"value":1124},{"type":562,"tag":594,"props":1767,"children":1768},{"style":879},[1769],{"type":567,"value":1340},{"type":562,"tag":594,"props":1771,"children":1772},{"style":907},[1773],{"type":567,"value":1148},{"type":562,"tag":594,"props":1775,"children":1776},{"style":879},[1777],{"type":567,"value":1525},{"type":562,"tag":594,"props":1779,"children":1780},{"style":907},[1781],{"type":567,"value":1214},{"type":562,"tag":594,"props":1783,"children":1784},{"style":879},[1785],{"type":567,"value":1359},{"type":562,"tag":594,"props":1787,"children":1789},{"class":596,"line":1788},23,[1790],{"type":562,"tag":594,"props":1791,"children":1792},{"style":879},[1793],{"type":567,"value":1794},"};\n",{"type":562,"tag":1796,"props":1797,"children":1798},"style",{},[1799],{"type":567,"value":1800},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":555,"searchDepth":946,"depth":946,"links":1802},[1803,1808],{"id":716,"depth":606,"text":716,"children":1804},[1805,1806,1807],{"id":727,"depth":615,"text":727},{"id":742,"depth":615,"text":742},{"id":800,"depth":615,"text":800},{"id":835,"depth":606,"text":835,"children":1809},[1810],{"id":840,"depth":615,"text":840},"markdown","content:1.algorithm:3.leetcode:3.major:1143.longest-common-subsequence.md","content","1.algorithm/3.leetcode/3.major/1143.longest-common-subsequence.md","md",[1817,1819],{"_path":261,"title":260,"description":1818},"对于字符串 s 和 t，只有在 s = t + t + t + ... + t + t（t 自身连接 1 次或多次）时，我们才认定 “t 能除尽 s”。",{"_path":267,"title":266,"description":1820},"给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。",1716810728294]