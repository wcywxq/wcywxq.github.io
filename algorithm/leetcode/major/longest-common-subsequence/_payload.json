[{"data":1,"prerenderedAt":1812},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/longest-common-subsequence":543,"/algorithm/leetcode/major/longest-common-subsequence-surround":1807},[4,269,298,511,519,528],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":510},"代码考核","/code-assessment",[302,404,503],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":498,"_path":499},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":501,"_path":502},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":504,"_path":505,"children":506},"Ts 类型挑战","/code-assessment/type-challeges",[507],{"title":508,"_path":509},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":512,"_path":513,"children":514,"icon":518},"项目","/project",[515],{"title":516,"_path":517},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":520,"_path":521,"children":522,"icon":527},"设计模式","/design-mode",[523,524],{"title":520,"_path":521},{"title":525,"_path":526},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":529,"_path":530,"children":531,"icon":542},"后端语言","/backend-languages",[532],{"title":533,"_path":534,"children":535},"Python","/backend-languages/python",[536,539],{"title":537,"_path":538},"基础","/backend-languages/python/base",{"title":540,"_path":541},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":261,"_dir":544,"_draft":545,"_partial":545,"_locale":546,"title":260,"description":547,"url":548,"body":549,"_type":1802,"_id":1803,"_source":1804,"_file":1805,"_extension":1806},"major",false,"","给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。","https://leetcode.cn/problems/longest-common-subsequence",{"type":550,"children":551,"toc":1792},"root",[552,559,564,569,574,613,618,648,653,684,689,704,710,715,721,726,731,736,789,794,803,816,824,829,834,1786],{"type":553,"tag":554,"props":555,"children":556},"element","p",{},[557],{"type":558,"value":547},"text",{"type":553,"tag":554,"props":560,"children":561},{},[562],{"type":558,"value":563},"一个字符串的 子序列 是指这样一个新的字符串：它是由原字符串在不改变字符的相对顺序的情况下删除某些字符（也可以不删除任何字符）后组成的新字符串。",{"type":553,"tag":554,"props":565,"children":566},{},[567],{"type":558,"value":568},"例如，\"ace\" 是 \"abcde\" 的子序列，但 \"aec\" 不是 \"abcde\" 的子序列。\n两个字符串的 公共子序列 是这两个字符串所共同拥有的子序列。",{"type":553,"tag":554,"props":570,"children":571},{},[572],{"type":558,"value":573},"示例 1：",{"type":553,"tag":575,"props":576,"children":579},"pre",{"className":577,"code":578,"language":558,"meta":546,"style":546},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：text1 = \"abcde\", text2 = \"ace\"\n输出：3\n解释：最长公共子序列是 \"ace\" ，它的长度为 3 。\n",[580],{"type":553,"tag":581,"props":582,"children":583},"code",{"__ignoreMap":546},[584,595,604],{"type":553,"tag":585,"props":586,"children":589},"span",{"class":587,"line":588},"line",1,[590],{"type":553,"tag":585,"props":591,"children":592},{},[593],{"type":558,"value":594},"输入：text1 = \"abcde\", text2 = \"ace\"\n",{"type":553,"tag":585,"props":596,"children":598},{"class":587,"line":597},2,[599],{"type":553,"tag":585,"props":600,"children":601},{},[602],{"type":558,"value":603},"输出：3\n",{"type":553,"tag":585,"props":605,"children":607},{"class":587,"line":606},3,[608],{"type":553,"tag":585,"props":609,"children":610},{},[611],{"type":558,"value":612},"解释：最长公共子序列是 \"ace\" ，它的长度为 3 。\n",{"type":553,"tag":554,"props":614,"children":615},{},[616],{"type":558,"value":617},"示例 2：",{"type":553,"tag":575,"props":619,"children":621},{"className":577,"code":620,"language":558,"meta":546,"style":546},"输入：text1 = \"abc\", text2 = \"abc\"\n输出：3\n解释：最长公共子序列是 \"abc\" ，它的长度为 3 。\n",[622],{"type":553,"tag":581,"props":623,"children":624},{"__ignoreMap":546},[625,633,640],{"type":553,"tag":585,"props":626,"children":627},{"class":587,"line":588},[628],{"type":553,"tag":585,"props":629,"children":630},{},[631],{"type":558,"value":632},"输入：text1 = \"abc\", text2 = \"abc\"\n",{"type":553,"tag":585,"props":634,"children":635},{"class":587,"line":597},[636],{"type":553,"tag":585,"props":637,"children":638},{},[639],{"type":558,"value":603},{"type":553,"tag":585,"props":641,"children":642},{"class":587,"line":606},[643],{"type":553,"tag":585,"props":644,"children":645},{},[646],{"type":558,"value":647},"解释：最长公共子序列是 \"abc\" ，它的长度为 3 。\n",{"type":553,"tag":554,"props":649,"children":650},{},[651],{"type":558,"value":652},"示例 3：",{"type":553,"tag":575,"props":654,"children":656},{"className":577,"code":655,"language":558,"meta":546,"style":546},"输入：text1 = \"abc\", text2 = \"def\"\n输出：0\n解释：两个字符串没有公共子序列，返回 0 。\n",[657],{"type":553,"tag":581,"props":658,"children":659},{"__ignoreMap":546},[660,668,676],{"type":553,"tag":585,"props":661,"children":662},{"class":587,"line":588},[663],{"type":553,"tag":585,"props":664,"children":665},{},[666],{"type":558,"value":667},"输入：text1 = \"abc\", text2 = \"def\"\n",{"type":553,"tag":585,"props":669,"children":670},{"class":587,"line":597},[671],{"type":553,"tag":585,"props":672,"children":673},{},[674],{"type":558,"value":675},"输出：0\n",{"type":553,"tag":585,"props":677,"children":678},{"class":587,"line":606},[679],{"type":553,"tag":585,"props":680,"children":681},{},[682],{"type":558,"value":683},"解释：两个字符串没有公共子序列，返回 0 。\n",{"type":553,"tag":554,"props":685,"children":686},{},[687],{"type":558,"value":688},"提示：",{"type":553,"tag":690,"props":691,"children":692},"ul",{},[693,699],{"type":553,"tag":694,"props":695,"children":696},"li",{},[697],{"type":558,"value":698},"1 \u003C= text1.length, text2.length \u003C= 1000",{"type":553,"tag":694,"props":700,"children":701},{},[702],{"type":558,"value":703},"text1 和 text2 仅由小写英文字符组成。",{"type":553,"tag":705,"props":706,"children":708},"h2",{"id":707},"解题思路",[709],{"type":558,"value":707},{"type":553,"tag":554,"props":711,"children":712},{},[713],{"type":558,"value":714},"最长公共子序列问题是典型的二维动态规划问题。",{"type":553,"tag":716,"props":717,"children":719},"h3",{"id":718},"状态",[720],{"type":558,"value":718},{"type":553,"tag":554,"props":722,"children":723},{},[724],{"type":558,"value":725},"假设字符串 text1 和 text2 的长度分别为 m 和 n，创建 m+1 行 n+1 列的二维数组 dp，其中 dp[i][j] 表示 text1[0:i] 和 text2[0:j] 的最长公共子序列的长度",{"type":553,"tag":554,"props":727,"children":728},{},[729],{"type":558,"value":730},"上述表示中，text1[0:i] 表示 text1 的长度为 i 的前缀，text2[0:j] 表示 text2 的长度为 j 的前缀",{"type":553,"tag":716,"props":732,"children":734},{"id":733},"边界",[735],{"type":558,"value":733},{"type":553,"tag":737,"props":738,"children":739},"ol",{},[740,745,750,755],{"type":553,"tag":694,"props":741,"children":742},{},[743],{"type":558,"value":744},"当 i = 0 时，text1[0:i] 为空，空字符串和任何字符串的最长公共子序列的长度都是 0，因此对于任意 0\u003C=j\u003C=n，都有 dp[0][j] = 0；",{"type":553,"tag":694,"props":746,"children":747},{},[748],{"type":558,"value":749},"当 j = 0 时，text2[0:j] 为空，空字符串和任何字符串的最长公共子序列的长度都是 0，因此对于任意 0\u003C=i\u003C=m，都有 dp[i][0] = 0；",{"type":553,"tag":694,"props":751,"children":752},{},[753],{"type":558,"value":754},"因此：当 i = 0 或 j = 0 时，dp[i][j] = 0；",{"type":553,"tag":694,"props":756,"children":757},{},[758,760],{"type":558,"value":759},"当 i > 0 且 j > 0 时，考虑 dp[i][j] 的计算：",{"type":553,"tag":690,"props":761,"children":762},{},[763,776],{"type":553,"tag":694,"props":764,"children":765},{},[766,768,774],{"type":558,"value":767},"当 text1[i-1] = text2[j-1] 时，将这两个相同的字符称为公共字符。考虑 text1[0:i-1] 和 text2[0:j-1] 的最长公共子序列，再增加一个字符（即公共字符）即可得到 text1[0:i] 和 text2[0:j] 的最长公共子序列。因此：",{"type":553,"tag":581,"props":769,"children":771},{"className":770},[],[772],{"type":558,"value":773},"dp[i][j] = dp[i-1][j-1] + 1",{"type":558,"value":775},"；",{"type":553,"tag":694,"props":777,"children":778},{},[779,781,787],{"type":558,"value":780},"当 text1[i-1] != text2[j-1] 时，需要考虑 text1[0:i-1] 和 text2[0:j] 的最长公共子序列；以及 text1[0:i] 和 text2[0:j-1] 的最长公共子序列。要得到 text1[0:i] 和 text2[0:j] 的最长公共子序列，应取两项中长度较大的一项，因此： ",{"type":553,"tag":581,"props":782,"children":784},{"className":783},[],[785],{"type":558,"value":786},"dp[i][j] = max(dp[i-1][j], dp[i][j-1])",{"type":558,"value":788},"。",{"type":553,"tag":716,"props":790,"children":792},{"id":791},"状态转移方程",[793],{"type":558,"value":791},{"type":553,"tag":554,"props":795,"children":796},{},[797],{"type":553,"tag":798,"props":799,"children":802},"img",{"alt":800,"src":801},"function-formula","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.1143_function-formula.png",[],{"type":553,"tag":554,"props":804,"children":805},{},[806,808,814],{"type":558,"value":807},"最终得到 ",{"type":553,"tag":581,"props":809,"children":811},{"className":810},[],[812],{"type":558,"value":813},"dp[m][n]",{"type":558,"value":815}," 即为 text1 和 text2 的最长公共子序列的长度。",{"type":553,"tag":554,"props":817,"children":818},{},[819],{"type":553,"tag":798,"props":820,"children":823},{"alt":821,"src":822},"graphic-solution","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.1143_graphic-solution.png",[],{"type":553,"tag":705,"props":825,"children":827},{"id":826},"实现",[828],{"type":558,"value":826},{"type":553,"tag":716,"props":830,"children":832},{"id":831},"动态规划",[833],{"type":558,"value":831},{"type":553,"tag":575,"props":835,"children":839},{"className":836,"code":837,"language":838,"meta":546,"style":546},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * 二维动态规划\n * @param {string} text1\n * @param {string} text2\n * @return {number}\n */\nvar longestCommonSubsequence = function (text1, text2) {\n  let m = text1.length;\n  let n = text2.length;\n  let dp = new Array(m + 1).fill(0).map(() => new Array(n + 1).fill(0));\n  for (let i = 1; i \u003C= m; i++) {\n    const str1 = text1[i - 1];\n    for (let j = 1; j \u003C= n; j++) {\n      const str2 = text2[j - 1];\n      if (str1 === str2) {\n        dp[i][j] = dp[i - 1][j - 1] + 1;\n      } else {\n        dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);\n      }\n    }\n  }\n  return dp[m][n];\n};\n","js",[840],{"type":553,"tag":581,"props":841,"children":842},{"__ignoreMap":546},[843,852,860,902,935,966,975,1031,1070,1103,1235,1305,1351,1417,1460,1495,1582,1600,1717,1726,1735,1744,1777],{"type":553,"tag":585,"props":844,"children":845},{"class":587,"line":588},[846],{"type":553,"tag":585,"props":847,"children":849},{"style":848},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[850],{"type":558,"value":851},"/**\n",{"type":553,"tag":585,"props":853,"children":854},{"class":587,"line":597},[855],{"type":553,"tag":585,"props":856,"children":857},{"style":848},[858],{"type":558,"value":859}," * 二维动态规划\n",{"type":553,"tag":585,"props":861,"children":862},{"class":587,"line":606},[863,868,874,880,885,891,896],{"type":553,"tag":585,"props":864,"children":865},{"style":848},[866],{"type":558,"value":867}," * ",{"type":553,"tag":585,"props":869,"children":871},{"style":870},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[872],{"type":558,"value":873},"@",{"type":553,"tag":585,"props":875,"children":877},{"style":876},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[878],{"type":558,"value":879},"param",{"type":553,"tag":585,"props":881,"children":882},{"style":870},[883],{"type":558,"value":884}," {",{"type":553,"tag":585,"props":886,"children":888},{"style":887},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[889],{"type":558,"value":890},"string",{"type":553,"tag":585,"props":892,"children":893},{"style":870},[894],{"type":558,"value":895},"}",{"type":553,"tag":585,"props":897,"children":899},{"style":898},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[900],{"type":558,"value":901}," text1\n",{"type":553,"tag":585,"props":903,"children":905},{"class":587,"line":904},4,[906,910,914,918,922,926,930],{"type":553,"tag":585,"props":907,"children":908},{"style":848},[909],{"type":558,"value":867},{"type":553,"tag":585,"props":911,"children":912},{"style":870},[913],{"type":558,"value":873},{"type":553,"tag":585,"props":915,"children":916},{"style":876},[917],{"type":558,"value":879},{"type":553,"tag":585,"props":919,"children":920},{"style":870},[921],{"type":558,"value":884},{"type":553,"tag":585,"props":923,"children":924},{"style":887},[925],{"type":558,"value":890},{"type":553,"tag":585,"props":927,"children":928},{"style":870},[929],{"type":558,"value":895},{"type":553,"tag":585,"props":931,"children":932},{"style":898},[933],{"type":558,"value":934}," text2\n",{"type":553,"tag":585,"props":936,"children":938},{"class":587,"line":937},5,[939,943,947,952,956,961],{"type":553,"tag":585,"props":940,"children":941},{"style":848},[942],{"type":558,"value":867},{"type":553,"tag":585,"props":944,"children":945},{"style":870},[946],{"type":558,"value":873},{"type":553,"tag":585,"props":948,"children":949},{"style":876},[950],{"type":558,"value":951},"return",{"type":553,"tag":585,"props":953,"children":954},{"style":870},[955],{"type":558,"value":884},{"type":553,"tag":585,"props":957,"children":958},{"style":887},[959],{"type":558,"value":960},"number",{"type":553,"tag":585,"props":962,"children":963},{"style":870},[964],{"type":558,"value":965},"}\n",{"type":553,"tag":585,"props":967,"children":969},{"class":587,"line":968},6,[970],{"type":553,"tag":585,"props":971,"children":972},{"style":848},[973],{"type":558,"value":974}," */\n",{"type":553,"tag":585,"props":976,"children":978},{"class":587,"line":977},7,[979,985,991,996,1001,1006,1011,1016,1021,1026],{"type":553,"tag":585,"props":980,"children":982},{"style":981},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[983],{"type":558,"value":984},"var",{"type":553,"tag":585,"props":986,"children":988},{"style":987},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[989],{"type":558,"value":990}," longestCommonSubsequence",{"type":553,"tag":585,"props":992,"children":993},{"style":870},[994],{"type":558,"value":995}," =",{"type":553,"tag":585,"props":997,"children":998},{"style":981},[999],{"type":558,"value":1000}," function",{"type":553,"tag":585,"props":1002,"children":1003},{"style":870},[1004],{"type":558,"value":1005}," (",{"type":553,"tag":585,"props":1007,"children":1008},{"style":898},[1009],{"type":558,"value":1010},"text1",{"type":553,"tag":585,"props":1012,"children":1013},{"style":870},[1014],{"type":558,"value":1015},",",{"type":553,"tag":585,"props":1017,"children":1018},{"style":898},[1019],{"type":558,"value":1020}," text2",{"type":553,"tag":585,"props":1022,"children":1023},{"style":870},[1024],{"type":558,"value":1025},")",{"type":553,"tag":585,"props":1027,"children":1028},{"style":870},[1029],{"type":558,"value":1030}," {\n",{"type":553,"tag":585,"props":1032,"children":1034},{"class":587,"line":1033},8,[1035,1040,1045,1049,1054,1059,1065],{"type":553,"tag":585,"props":1036,"children":1037},{"style":981},[1038],{"type":558,"value":1039},"  let",{"type":553,"tag":585,"props":1041,"children":1042},{"style":898},[1043],{"type":558,"value":1044}," m",{"type":553,"tag":585,"props":1046,"children":1047},{"style":870},[1048],{"type":558,"value":995},{"type":553,"tag":585,"props":1050,"children":1051},{"style":898},[1052],{"type":558,"value":1053}," text1",{"type":553,"tag":585,"props":1055,"children":1056},{"style":870},[1057],{"type":558,"value":1058},".",{"type":553,"tag":585,"props":1060,"children":1062},{"style":1061},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1063],{"type":558,"value":1064},"length",{"type":553,"tag":585,"props":1066,"children":1067},{"style":870},[1068],{"type":558,"value":1069},";\n",{"type":553,"tag":585,"props":1071,"children":1073},{"class":587,"line":1072},9,[1074,1078,1083,1087,1091,1095,1099],{"type":553,"tag":585,"props":1075,"children":1076},{"style":981},[1077],{"type":558,"value":1039},{"type":553,"tag":585,"props":1079,"children":1080},{"style":898},[1081],{"type":558,"value":1082}," n",{"type":553,"tag":585,"props":1084,"children":1085},{"style":870},[1086],{"type":558,"value":995},{"type":553,"tag":585,"props":1088,"children":1089},{"style":898},[1090],{"type":558,"value":1020},{"type":553,"tag":585,"props":1092,"children":1093},{"style":870},[1094],{"type":558,"value":1058},{"type":553,"tag":585,"props":1096,"children":1097},{"style":1061},[1098],{"type":558,"value":1064},{"type":553,"tag":585,"props":1100,"children":1101},{"style":870},[1102],{"type":558,"value":1069},{"type":553,"tag":585,"props":1104,"children":1106},{"class":587,"line":1105},10,[1107,1111,1116,1120,1125,1130,1135,1140,1145,1151,1156,1161,1165,1170,1174,1179,1184,1189,1193,1197,1201,1206,1210,1214,1218,1222,1226,1230],{"type":553,"tag":585,"props":1108,"children":1109},{"style":981},[1110],{"type":558,"value":1039},{"type":553,"tag":585,"props":1112,"children":1113},{"style":898},[1114],{"type":558,"value":1115}," dp",{"type":553,"tag":585,"props":1117,"children":1118},{"style":870},[1119],{"type":558,"value":995},{"type":553,"tag":585,"props":1121,"children":1122},{"style":981},[1123],{"type":558,"value":1124}," new",{"type":553,"tag":585,"props":1126,"children":1127},{"style":987},[1128],{"type":558,"value":1129}," Array",{"type":553,"tag":585,"props":1131,"children":1132},{"style":870},[1133],{"type":558,"value":1134},"(",{"type":553,"tag":585,"props":1136,"children":1137},{"style":898},[1138],{"type":558,"value":1139},"m",{"type":553,"tag":585,"props":1141,"children":1142},{"style":981},[1143],{"type":558,"value":1144}," +",{"type":553,"tag":585,"props":1146,"children":1148},{"style":1147},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1149],{"type":558,"value":1150}," 1",{"type":553,"tag":585,"props":1152,"children":1153},{"style":870},[1154],{"type":558,"value":1155},").",{"type":553,"tag":585,"props":1157,"children":1158},{"style":987},[1159],{"type":558,"value":1160},"fill",{"type":553,"tag":585,"props":1162,"children":1163},{"style":870},[1164],{"type":558,"value":1134},{"type":553,"tag":585,"props":1166,"children":1167},{"style":1147},[1168],{"type":558,"value":1169},"0",{"type":553,"tag":585,"props":1171,"children":1172},{"style":870},[1173],{"type":558,"value":1155},{"type":553,"tag":585,"props":1175,"children":1176},{"style":987},[1177],{"type":558,"value":1178},"map",{"type":553,"tag":585,"props":1180,"children":1181},{"style":870},[1182],{"type":558,"value":1183},"(()",{"type":553,"tag":585,"props":1185,"children":1186},{"style":870},[1187],{"type":558,"value":1188}," =>",{"type":553,"tag":585,"props":1190,"children":1191},{"style":981},[1192],{"type":558,"value":1124},{"type":553,"tag":585,"props":1194,"children":1195},{"style":987},[1196],{"type":558,"value":1129},{"type":553,"tag":585,"props":1198,"children":1199},{"style":870},[1200],{"type":558,"value":1134},{"type":553,"tag":585,"props":1202,"children":1203},{"style":898},[1204],{"type":558,"value":1205},"n",{"type":553,"tag":585,"props":1207,"children":1208},{"style":981},[1209],{"type":558,"value":1144},{"type":553,"tag":585,"props":1211,"children":1212},{"style":1147},[1213],{"type":558,"value":1150},{"type":553,"tag":585,"props":1215,"children":1216},{"style":870},[1217],{"type":558,"value":1155},{"type":553,"tag":585,"props":1219,"children":1220},{"style":987},[1221],{"type":558,"value":1160},{"type":553,"tag":585,"props":1223,"children":1224},{"style":870},[1225],{"type":558,"value":1134},{"type":553,"tag":585,"props":1227,"children":1228},{"style":1147},[1229],{"type":558,"value":1169},{"type":553,"tag":585,"props":1231,"children":1232},{"style":870},[1233],{"type":558,"value":1234},"));\n",{"type":553,"tag":585,"props":1236,"children":1238},{"class":587,"line":1237},11,[1239,1244,1248,1253,1258,1262,1266,1271,1275,1280,1284,1288,1292,1297,1301],{"type":553,"tag":585,"props":1240,"children":1241},{"style":876},[1242],{"type":558,"value":1243},"  for",{"type":553,"tag":585,"props":1245,"children":1246},{"style":870},[1247],{"type":558,"value":1005},{"type":553,"tag":585,"props":1249,"children":1250},{"style":981},[1251],{"type":558,"value":1252},"let",{"type":553,"tag":585,"props":1254,"children":1255},{"style":898},[1256],{"type":558,"value":1257}," i",{"type":553,"tag":585,"props":1259,"children":1260},{"style":870},[1261],{"type":558,"value":995},{"type":553,"tag":585,"props":1263,"children":1264},{"style":1147},[1265],{"type":558,"value":1150},{"type":553,"tag":585,"props":1267,"children":1268},{"style":870},[1269],{"type":558,"value":1270},";",{"type":553,"tag":585,"props":1272,"children":1273},{"style":898},[1274],{"type":558,"value":1257},{"type":553,"tag":585,"props":1276,"children":1277},{"style":870},[1278],{"type":558,"value":1279}," \u003C=",{"type":553,"tag":585,"props":1281,"children":1282},{"style":898},[1283],{"type":558,"value":1044},{"type":553,"tag":585,"props":1285,"children":1286},{"style":870},[1287],{"type":558,"value":1270},{"type":553,"tag":585,"props":1289,"children":1290},{"style":898},[1291],{"type":558,"value":1257},{"type":553,"tag":585,"props":1293,"children":1294},{"style":981},[1295],{"type":558,"value":1296},"++",{"type":553,"tag":585,"props":1298,"children":1299},{"style":870},[1300],{"type":558,"value":1025},{"type":553,"tag":585,"props":1302,"children":1303},{"style":870},[1304],{"type":558,"value":1030},{"type":553,"tag":585,"props":1306,"children":1308},{"class":587,"line":1307},12,[1309,1314,1319,1323,1327,1332,1337,1342,1346],{"type":553,"tag":585,"props":1310,"children":1311},{"style":981},[1312],{"type":558,"value":1313},"    const",{"type":553,"tag":585,"props":1315,"children":1316},{"style":898},[1317],{"type":558,"value":1318}," str1",{"type":553,"tag":585,"props":1320,"children":1321},{"style":870},[1322],{"type":558,"value":995},{"type":553,"tag":585,"props":1324,"children":1325},{"style":898},[1326],{"type":558,"value":1053},{"type":553,"tag":585,"props":1328,"children":1329},{"style":870},[1330],{"type":558,"value":1331},"[",{"type":553,"tag":585,"props":1333,"children":1334},{"style":898},[1335],{"type":558,"value":1336},"i",{"type":553,"tag":585,"props":1338,"children":1339},{"style":981},[1340],{"type":558,"value":1341}," -",{"type":553,"tag":585,"props":1343,"children":1344},{"style":1147},[1345],{"type":558,"value":1150},{"type":553,"tag":585,"props":1347,"children":1348},{"style":870},[1349],{"type":558,"value":1350},"];\n",{"type":553,"tag":585,"props":1352,"children":1354},{"class":587,"line":1353},13,[1355,1360,1364,1368,1373,1377,1381,1385,1389,1393,1397,1401,1405,1409,1413],{"type":553,"tag":585,"props":1356,"children":1357},{"style":876},[1358],{"type":558,"value":1359},"    for",{"type":553,"tag":585,"props":1361,"children":1362},{"style":870},[1363],{"type":558,"value":1005},{"type":553,"tag":585,"props":1365,"children":1366},{"style":981},[1367],{"type":558,"value":1252},{"type":553,"tag":585,"props":1369,"children":1370},{"style":898},[1371],{"type":558,"value":1372}," j",{"type":553,"tag":585,"props":1374,"children":1375},{"style":870},[1376],{"type":558,"value":995},{"type":553,"tag":585,"props":1378,"children":1379},{"style":1147},[1380],{"type":558,"value":1150},{"type":553,"tag":585,"props":1382,"children":1383},{"style":870},[1384],{"type":558,"value":1270},{"type":553,"tag":585,"props":1386,"children":1387},{"style":898},[1388],{"type":558,"value":1372},{"type":553,"tag":585,"props":1390,"children":1391},{"style":870},[1392],{"type":558,"value":1279},{"type":553,"tag":585,"props":1394,"children":1395},{"style":898},[1396],{"type":558,"value":1082},{"type":553,"tag":585,"props":1398,"children":1399},{"style":870},[1400],{"type":558,"value":1270},{"type":553,"tag":585,"props":1402,"children":1403},{"style":898},[1404],{"type":558,"value":1372},{"type":553,"tag":585,"props":1406,"children":1407},{"style":981},[1408],{"type":558,"value":1296},{"type":553,"tag":585,"props":1410,"children":1411},{"style":870},[1412],{"type":558,"value":1025},{"type":553,"tag":585,"props":1414,"children":1415},{"style":870},[1416],{"type":558,"value":1030},{"type":553,"tag":585,"props":1418,"children":1420},{"class":587,"line":1419},14,[1421,1426,1431,1435,1439,1443,1448,1452,1456],{"type":553,"tag":585,"props":1422,"children":1423},{"style":981},[1424],{"type":558,"value":1425},"      const",{"type":553,"tag":585,"props":1427,"children":1428},{"style":898},[1429],{"type":558,"value":1430}," str2",{"type":553,"tag":585,"props":1432,"children":1433},{"style":870},[1434],{"type":558,"value":995},{"type":553,"tag":585,"props":1436,"children":1437},{"style":898},[1438],{"type":558,"value":1020},{"type":553,"tag":585,"props":1440,"children":1441},{"style":870},[1442],{"type":558,"value":1331},{"type":553,"tag":585,"props":1444,"children":1445},{"style":898},[1446],{"type":558,"value":1447},"j",{"type":553,"tag":585,"props":1449,"children":1450},{"style":981},[1451],{"type":558,"value":1341},{"type":553,"tag":585,"props":1453,"children":1454},{"style":1147},[1455],{"type":558,"value":1150},{"type":553,"tag":585,"props":1457,"children":1458},{"style":870},[1459],{"type":558,"value":1350},{"type":553,"tag":585,"props":1461,"children":1463},{"class":587,"line":1462},15,[1464,1469,1473,1478,1483,1487,1491],{"type":553,"tag":585,"props":1465,"children":1466},{"style":876},[1467],{"type":558,"value":1468},"      if",{"type":553,"tag":585,"props":1470,"children":1471},{"style":870},[1472],{"type":558,"value":1005},{"type":553,"tag":585,"props":1474,"children":1475},{"style":898},[1476],{"type":558,"value":1477},"str1",{"type":553,"tag":585,"props":1479,"children":1480},{"style":981},[1481],{"type":558,"value":1482}," ===",{"type":553,"tag":585,"props":1484,"children":1485},{"style":898},[1486],{"type":558,"value":1430},{"type":553,"tag":585,"props":1488,"children":1489},{"style":870},[1490],{"type":558,"value":1025},{"type":553,"tag":585,"props":1492,"children":1493},{"style":870},[1494],{"type":558,"value":1030},{"type":553,"tag":585,"props":1496,"children":1498},{"class":587,"line":1497},16,[1499,1504,1508,1512,1517,1521,1526,1530,1534,1538,1542,1546,1550,1554,1558,1562,1566,1570,1574,1578],{"type":553,"tag":585,"props":1500,"children":1501},{"style":898},[1502],{"type":558,"value":1503},"        dp",{"type":553,"tag":585,"props":1505,"children":1506},{"style":870},[1507],{"type":558,"value":1331},{"type":553,"tag":585,"props":1509,"children":1510},{"style":898},[1511],{"type":558,"value":1336},{"type":553,"tag":585,"props":1513,"children":1514},{"style":870},[1515],{"type":558,"value":1516},"][",{"type":553,"tag":585,"props":1518,"children":1519},{"style":898},[1520],{"type":558,"value":1447},{"type":553,"tag":585,"props":1522,"children":1523},{"style":870},[1524],{"type":558,"value":1525},"]",{"type":553,"tag":585,"props":1527,"children":1528},{"style":870},[1529],{"type":558,"value":995},{"type":553,"tag":585,"props":1531,"children":1532},{"style":898},[1533],{"type":558,"value":1115},{"type":553,"tag":585,"props":1535,"children":1536},{"style":870},[1537],{"type":558,"value":1331},{"type":553,"tag":585,"props":1539,"children":1540},{"style":898},[1541],{"type":558,"value":1336},{"type":553,"tag":585,"props":1543,"children":1544},{"style":981},[1545],{"type":558,"value":1341},{"type":553,"tag":585,"props":1547,"children":1548},{"style":1147},[1549],{"type":558,"value":1150},{"type":553,"tag":585,"props":1551,"children":1552},{"style":870},[1553],{"type":558,"value":1516},{"type":553,"tag":585,"props":1555,"children":1556},{"style":898},[1557],{"type":558,"value":1447},{"type":553,"tag":585,"props":1559,"children":1560},{"style":981},[1561],{"type":558,"value":1341},{"type":553,"tag":585,"props":1563,"children":1564},{"style":1147},[1565],{"type":558,"value":1150},{"type":553,"tag":585,"props":1567,"children":1568},{"style":870},[1569],{"type":558,"value":1525},{"type":553,"tag":585,"props":1571,"children":1572},{"style":981},[1573],{"type":558,"value":1144},{"type":553,"tag":585,"props":1575,"children":1576},{"style":1147},[1577],{"type":558,"value":1150},{"type":553,"tag":585,"props":1579,"children":1580},{"style":870},[1581],{"type":558,"value":1069},{"type":553,"tag":585,"props":1583,"children":1585},{"class":587,"line":1584},17,[1586,1591,1596],{"type":553,"tag":585,"props":1587,"children":1588},{"style":870},[1589],{"type":558,"value":1590},"      }",{"type":553,"tag":585,"props":1592,"children":1593},{"style":876},[1594],{"type":558,"value":1595}," else",{"type":553,"tag":585,"props":1597,"children":1598},{"style":870},[1599],{"type":558,"value":1030},{"type":553,"tag":585,"props":1601,"children":1603},{"class":587,"line":1602},18,[1604,1608,1612,1616,1620,1624,1628,1632,1637,1641,1646,1650,1655,1659,1663,1667,1671,1675,1679,1684,1688,1692,1696,1700,1704,1708,1712],{"type":553,"tag":585,"props":1605,"children":1606},{"style":898},[1607],{"type":558,"value":1503},{"type":553,"tag":585,"props":1609,"children":1610},{"style":870},[1611],{"type":558,"value":1331},{"type":553,"tag":585,"props":1613,"children":1614},{"style":898},[1615],{"type":558,"value":1336},{"type":553,"tag":585,"props":1617,"children":1618},{"style":870},[1619],{"type":558,"value":1516},{"type":553,"tag":585,"props":1621,"children":1622},{"style":898},[1623],{"type":558,"value":1447},{"type":553,"tag":585,"props":1625,"children":1626},{"style":870},[1627],{"type":558,"value":1525},{"type":553,"tag":585,"props":1629,"children":1630},{"style":870},[1631],{"type":558,"value":995},{"type":553,"tag":585,"props":1633,"children":1634},{"style":898},[1635],{"type":558,"value":1636}," Math",{"type":553,"tag":585,"props":1638,"children":1639},{"style":870},[1640],{"type":558,"value":1058},{"type":553,"tag":585,"props":1642,"children":1643},{"style":987},[1644],{"type":558,"value":1645},"max",{"type":553,"tag":585,"props":1647,"children":1648},{"style":870},[1649],{"type":558,"value":1134},{"type":553,"tag":585,"props":1651,"children":1652},{"style":898},[1653],{"type":558,"value":1654},"dp",{"type":553,"tag":585,"props":1656,"children":1657},{"style":870},[1658],{"type":558,"value":1331},{"type":553,"tag":585,"props":1660,"children":1661},{"style":898},[1662],{"type":558,"value":1336},{"type":553,"tag":585,"props":1664,"children":1665},{"style":981},[1666],{"type":558,"value":1341},{"type":553,"tag":585,"props":1668,"children":1669},{"style":1147},[1670],{"type":558,"value":1150},{"type":553,"tag":585,"props":1672,"children":1673},{"style":870},[1674],{"type":558,"value":1516},{"type":553,"tag":585,"props":1676,"children":1677},{"style":898},[1678],{"type":558,"value":1447},{"type":553,"tag":585,"props":1680,"children":1681},{"style":870},[1682],{"type":558,"value":1683},"],",{"type":553,"tag":585,"props":1685,"children":1686},{"style":898},[1687],{"type":558,"value":1115},{"type":553,"tag":585,"props":1689,"children":1690},{"style":870},[1691],{"type":558,"value":1331},{"type":553,"tag":585,"props":1693,"children":1694},{"style":898},[1695],{"type":558,"value":1336},{"type":553,"tag":585,"props":1697,"children":1698},{"style":870},[1699],{"type":558,"value":1516},{"type":553,"tag":585,"props":1701,"children":1702},{"style":898},[1703],{"type":558,"value":1447},{"type":553,"tag":585,"props":1705,"children":1706},{"style":981},[1707],{"type":558,"value":1341},{"type":553,"tag":585,"props":1709,"children":1710},{"style":1147},[1711],{"type":558,"value":1150},{"type":553,"tag":585,"props":1713,"children":1714},{"style":870},[1715],{"type":558,"value":1716},"]);\n",{"type":553,"tag":585,"props":1718,"children":1720},{"class":587,"line":1719},19,[1721],{"type":553,"tag":585,"props":1722,"children":1723},{"style":870},[1724],{"type":558,"value":1725},"      }\n",{"type":553,"tag":585,"props":1727,"children":1729},{"class":587,"line":1728},20,[1730],{"type":553,"tag":585,"props":1731,"children":1732},{"style":870},[1733],{"type":558,"value":1734},"    }\n",{"type":553,"tag":585,"props":1736,"children":1738},{"class":587,"line":1737},21,[1739],{"type":553,"tag":585,"props":1740,"children":1741},{"style":870},[1742],{"type":558,"value":1743},"  }\n",{"type":553,"tag":585,"props":1745,"children":1747},{"class":587,"line":1746},22,[1748,1753,1757,1761,1765,1769,1773],{"type":553,"tag":585,"props":1749,"children":1750},{"style":876},[1751],{"type":558,"value":1752},"  return",{"type":553,"tag":585,"props":1754,"children":1755},{"style":898},[1756],{"type":558,"value":1115},{"type":553,"tag":585,"props":1758,"children":1759},{"style":870},[1760],{"type":558,"value":1331},{"type":553,"tag":585,"props":1762,"children":1763},{"style":898},[1764],{"type":558,"value":1139},{"type":553,"tag":585,"props":1766,"children":1767},{"style":870},[1768],{"type":558,"value":1516},{"type":553,"tag":585,"props":1770,"children":1771},{"style":898},[1772],{"type":558,"value":1205},{"type":553,"tag":585,"props":1774,"children":1775},{"style":870},[1776],{"type":558,"value":1350},{"type":553,"tag":585,"props":1778,"children":1780},{"class":587,"line":1779},23,[1781],{"type":553,"tag":585,"props":1782,"children":1783},{"style":870},[1784],{"type":558,"value":1785},"};\n",{"type":553,"tag":1787,"props":1788,"children":1789},"style",{},[1790],{"type":558,"value":1791},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":546,"searchDepth":937,"depth":937,"links":1793},[1794,1799],{"id":707,"depth":597,"text":707,"children":1795},[1796,1797,1798],{"id":718,"depth":606,"text":718},{"id":733,"depth":606,"text":733},{"id":791,"depth":606,"text":791},{"id":826,"depth":597,"text":826,"children":1800},[1801],{"id":831,"depth":606,"text":831},"markdown","content:1.algorithm:3.leetcode:3.major:1143.longest-common-subsequence.md","content","1.algorithm/3.leetcode/3.major/1143.longest-common-subsequence.md","md",[1808,1810],{"_path":258,"title":257,"description":1809},"对于字符串 s 和 t，只有在 s = t + t + t + ... + t + t（t 自身连接 1 次或多次）时，我们才认定 “t 能除尽 s”。",{"_path":264,"title":263,"description":1811},"给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。",1714099680791]