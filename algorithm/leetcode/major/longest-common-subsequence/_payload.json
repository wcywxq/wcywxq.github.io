[{"data":1,"prerenderedAt":1815},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/longest-common-subsequence":546,"/algorithm/leetcode/major/longest-common-subsequence-surround":1810},[4,269,298,514,522,531],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":513},"代码考核","/code-assessment",[302,404,506],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"整数分割","/code-assessment/scene/split-number",{"title":498,"_path":499},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":501,"_path":502},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":504,"_path":505},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":507,"_path":508,"children":509},"Ts 类型挑战","/code-assessment/type-challeges",[510],{"title":511,"_path":512},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":515,"_path":516,"children":517,"icon":521},"项目","/project",[518],{"title":519,"_path":520},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":523,"_path":524,"children":525,"icon":530},"设计模式","/design-mode",[526,527],{"title":523,"_path":524},{"title":528,"_path":529},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":532,"_path":533,"children":534,"icon":545},"后端语言","/backend-languages",[535],{"title":536,"_path":537,"children":538},"Python","/backend-languages/python",[539,542],{"title":540,"_path":541},"基础","/backend-languages/python/base",{"title":543,"_path":544},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":261,"_dir":547,"_draft":548,"_partial":548,"_locale":549,"title":260,"description":550,"url":551,"body":552,"_type":1805,"_id":1806,"_source":1807,"_file":1808,"_extension":1809},"major",false,"","给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。","https://leetcode.cn/problems/longest-common-subsequence",{"type":553,"children":554,"toc":1795},"root",[555,562,567,572,577,616,621,651,656,687,692,707,713,718,724,729,734,739,792,797,806,819,827,832,837,1789],{"type":556,"tag":557,"props":558,"children":559},"element","p",{},[560],{"type":561,"value":550},"text",{"type":556,"tag":557,"props":563,"children":564},{},[565],{"type":561,"value":566},"一个字符串的 子序列 是指这样一个新的字符串：它是由原字符串在不改变字符的相对顺序的情况下删除某些字符（也可以不删除任何字符）后组成的新字符串。",{"type":556,"tag":557,"props":568,"children":569},{},[570],{"type":561,"value":571},"例如，\"ace\" 是 \"abcde\" 的子序列，但 \"aec\" 不是 \"abcde\" 的子序列。\n两个字符串的 公共子序列 是这两个字符串所共同拥有的子序列。",{"type":556,"tag":557,"props":573,"children":574},{},[575],{"type":561,"value":576},"示例 1：",{"type":556,"tag":578,"props":579,"children":582},"pre",{"className":580,"code":581,"language":561,"meta":549,"style":549},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：text1 = \"abcde\", text2 = \"ace\"\n输出：3\n解释：最长公共子序列是 \"ace\" ，它的长度为 3 。\n",[583],{"type":556,"tag":584,"props":585,"children":586},"code",{"__ignoreMap":549},[587,598,607],{"type":556,"tag":588,"props":589,"children":592},"span",{"class":590,"line":591},"line",1,[593],{"type":556,"tag":588,"props":594,"children":595},{},[596],{"type":561,"value":597},"输入：text1 = \"abcde\", text2 = \"ace\"\n",{"type":556,"tag":588,"props":599,"children":601},{"class":590,"line":600},2,[602],{"type":556,"tag":588,"props":603,"children":604},{},[605],{"type":561,"value":606},"输出：3\n",{"type":556,"tag":588,"props":608,"children":610},{"class":590,"line":609},3,[611],{"type":556,"tag":588,"props":612,"children":613},{},[614],{"type":561,"value":615},"解释：最长公共子序列是 \"ace\" ，它的长度为 3 。\n",{"type":556,"tag":557,"props":617,"children":618},{},[619],{"type":561,"value":620},"示例 2：",{"type":556,"tag":578,"props":622,"children":624},{"className":580,"code":623,"language":561,"meta":549,"style":549},"输入：text1 = \"abc\", text2 = \"abc\"\n输出：3\n解释：最长公共子序列是 \"abc\" ，它的长度为 3 。\n",[625],{"type":556,"tag":584,"props":626,"children":627},{"__ignoreMap":549},[628,636,643],{"type":556,"tag":588,"props":629,"children":630},{"class":590,"line":591},[631],{"type":556,"tag":588,"props":632,"children":633},{},[634],{"type":561,"value":635},"输入：text1 = \"abc\", text2 = \"abc\"\n",{"type":556,"tag":588,"props":637,"children":638},{"class":590,"line":600},[639],{"type":556,"tag":588,"props":640,"children":641},{},[642],{"type":561,"value":606},{"type":556,"tag":588,"props":644,"children":645},{"class":590,"line":609},[646],{"type":556,"tag":588,"props":647,"children":648},{},[649],{"type":561,"value":650},"解释：最长公共子序列是 \"abc\" ，它的长度为 3 。\n",{"type":556,"tag":557,"props":652,"children":653},{},[654],{"type":561,"value":655},"示例 3：",{"type":556,"tag":578,"props":657,"children":659},{"className":580,"code":658,"language":561,"meta":549,"style":549},"输入：text1 = \"abc\", text2 = \"def\"\n输出：0\n解释：两个字符串没有公共子序列，返回 0 。\n",[660],{"type":556,"tag":584,"props":661,"children":662},{"__ignoreMap":549},[663,671,679],{"type":556,"tag":588,"props":664,"children":665},{"class":590,"line":591},[666],{"type":556,"tag":588,"props":667,"children":668},{},[669],{"type":561,"value":670},"输入：text1 = \"abc\", text2 = \"def\"\n",{"type":556,"tag":588,"props":672,"children":673},{"class":590,"line":600},[674],{"type":556,"tag":588,"props":675,"children":676},{},[677],{"type":561,"value":678},"输出：0\n",{"type":556,"tag":588,"props":680,"children":681},{"class":590,"line":609},[682],{"type":556,"tag":588,"props":683,"children":684},{},[685],{"type":561,"value":686},"解释：两个字符串没有公共子序列，返回 0 。\n",{"type":556,"tag":557,"props":688,"children":689},{},[690],{"type":561,"value":691},"提示：",{"type":556,"tag":693,"props":694,"children":695},"ul",{},[696,702],{"type":556,"tag":697,"props":698,"children":699},"li",{},[700],{"type":561,"value":701},"1 \u003C= text1.length, text2.length \u003C= 1000",{"type":556,"tag":697,"props":703,"children":704},{},[705],{"type":561,"value":706},"text1 和 text2 仅由小写英文字符组成。",{"type":556,"tag":708,"props":709,"children":711},"h2",{"id":710},"解题思路",[712],{"type":561,"value":710},{"type":556,"tag":557,"props":714,"children":715},{},[716],{"type":561,"value":717},"最长公共子序列问题是典型的二维动态规划问题。",{"type":556,"tag":719,"props":720,"children":722},"h3",{"id":721},"状态",[723],{"type":561,"value":721},{"type":556,"tag":557,"props":725,"children":726},{},[727],{"type":561,"value":728},"假设字符串 text1 和 text2 的长度分别为 m 和 n，创建 m+1 行 n+1 列的二维数组 dp，其中 dp[i][j] 表示 text1[0:i] 和 text2[0:j] 的最长公共子序列的长度",{"type":556,"tag":557,"props":730,"children":731},{},[732],{"type":561,"value":733},"上述表示中，text1[0:i] 表示 text1 的长度为 i 的前缀，text2[0:j] 表示 text2 的长度为 j 的前缀",{"type":556,"tag":719,"props":735,"children":737},{"id":736},"边界",[738],{"type":561,"value":736},{"type":556,"tag":740,"props":741,"children":742},"ol",{},[743,748,753,758],{"type":556,"tag":697,"props":744,"children":745},{},[746],{"type":561,"value":747},"当 i = 0 时，text1[0:i] 为空，空字符串和任何字符串的最长公共子序列的长度都是 0，因此对于任意 0\u003C=j\u003C=n，都有 dp[0][j] = 0；",{"type":556,"tag":697,"props":749,"children":750},{},[751],{"type":561,"value":752},"当 j = 0 时，text2[0:j] 为空，空字符串和任何字符串的最长公共子序列的长度都是 0，因此对于任意 0\u003C=i\u003C=m，都有 dp[i][0] = 0；",{"type":556,"tag":697,"props":754,"children":755},{},[756],{"type":561,"value":757},"因此：当 i = 0 或 j = 0 时，dp[i][j] = 0；",{"type":556,"tag":697,"props":759,"children":760},{},[761,763],{"type":561,"value":762},"当 i > 0 且 j > 0 时，考虑 dp[i][j] 的计算：",{"type":556,"tag":693,"props":764,"children":765},{},[766,779],{"type":556,"tag":697,"props":767,"children":768},{},[769,771,777],{"type":561,"value":770},"当 text1[i-1] = text2[j-1] 时，将这两个相同的字符称为公共字符。考虑 text1[0:i-1] 和 text2[0:j-1] 的最长公共子序列，再增加一个字符（即公共字符）即可得到 text1[0:i] 和 text2[0:j] 的最长公共子序列。因此：",{"type":556,"tag":584,"props":772,"children":774},{"className":773},[],[775],{"type":561,"value":776},"dp[i][j] = dp[i-1][j-1] + 1",{"type":561,"value":778},"；",{"type":556,"tag":697,"props":780,"children":781},{},[782,784,790],{"type":561,"value":783},"当 text1[i-1] != text2[j-1] 时，需要考虑 text1[0:i-1] 和 text2[0:j] 的最长公共子序列；以及 text1[0:i] 和 text2[0:j-1] 的最长公共子序列。要得到 text1[0:i] 和 text2[0:j] 的最长公共子序列，应取两项中长度较大的一项，因此： ",{"type":556,"tag":584,"props":785,"children":787},{"className":786},[],[788],{"type":561,"value":789},"dp[i][j] = max(dp[i-1][j], dp[i][j-1])",{"type":561,"value":791},"。",{"type":556,"tag":719,"props":793,"children":795},{"id":794},"状态转移方程",[796],{"type":561,"value":794},{"type":556,"tag":557,"props":798,"children":799},{},[800],{"type":556,"tag":801,"props":802,"children":805},"img",{"alt":803,"src":804},"function-formula","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.1143_function-formula.png",[],{"type":556,"tag":557,"props":807,"children":808},{},[809,811,817],{"type":561,"value":810},"最终得到 ",{"type":556,"tag":584,"props":812,"children":814},{"className":813},[],[815],{"type":561,"value":816},"dp[m][n]",{"type":561,"value":818}," 即为 text1 和 text2 的最长公共子序列的长度。",{"type":556,"tag":557,"props":820,"children":821},{},[822],{"type":556,"tag":801,"props":823,"children":826},{"alt":824,"src":825},"graphic-solution","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.1143_graphic-solution.png",[],{"type":556,"tag":708,"props":828,"children":830},{"id":829},"实现",[831],{"type":561,"value":829},{"type":556,"tag":719,"props":833,"children":835},{"id":834},"动态规划",[836],{"type":561,"value":834},{"type":556,"tag":578,"props":838,"children":842},{"className":839,"code":840,"language":841,"meta":549,"style":549},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * 二维动态规划\n * @param {string} text1\n * @param {string} text2\n * @return {number}\n */\nvar longestCommonSubsequence = function (text1, text2) {\n  let m = text1.length;\n  let n = text2.length;\n  let dp = new Array(m + 1).fill(0).map(() => new Array(n + 1).fill(0));\n  for (let i = 1; i \u003C= m; i++) {\n    const str1 = text1[i - 1];\n    for (let j = 1; j \u003C= n; j++) {\n      const str2 = text2[j - 1];\n      if (str1 === str2) {\n        dp[i][j] = dp[i - 1][j - 1] + 1;\n      } else {\n        dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);\n      }\n    }\n  }\n  return dp[m][n];\n};\n","js",[843],{"type":556,"tag":584,"props":844,"children":845},{"__ignoreMap":549},[846,855,863,905,938,969,978,1034,1073,1106,1238,1308,1354,1420,1463,1498,1585,1603,1720,1729,1738,1747,1780],{"type":556,"tag":588,"props":847,"children":848},{"class":590,"line":591},[849],{"type":556,"tag":588,"props":850,"children":852},{"style":851},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[853],{"type":561,"value":854},"/**\n",{"type":556,"tag":588,"props":856,"children":857},{"class":590,"line":600},[858],{"type":556,"tag":588,"props":859,"children":860},{"style":851},[861],{"type":561,"value":862}," * 二维动态规划\n",{"type":556,"tag":588,"props":864,"children":865},{"class":590,"line":609},[866,871,877,883,888,894,899],{"type":556,"tag":588,"props":867,"children":868},{"style":851},[869],{"type":561,"value":870}," * ",{"type":556,"tag":588,"props":872,"children":874},{"style":873},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[875],{"type":561,"value":876},"@",{"type":556,"tag":588,"props":878,"children":880},{"style":879},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[881],{"type":561,"value":882},"param",{"type":556,"tag":588,"props":884,"children":885},{"style":873},[886],{"type":561,"value":887}," {",{"type":556,"tag":588,"props":889,"children":891},{"style":890},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[892],{"type":561,"value":893},"string",{"type":556,"tag":588,"props":895,"children":896},{"style":873},[897],{"type":561,"value":898},"}",{"type":556,"tag":588,"props":900,"children":902},{"style":901},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[903],{"type":561,"value":904}," text1\n",{"type":556,"tag":588,"props":906,"children":908},{"class":590,"line":907},4,[909,913,917,921,925,929,933],{"type":556,"tag":588,"props":910,"children":911},{"style":851},[912],{"type":561,"value":870},{"type":556,"tag":588,"props":914,"children":915},{"style":873},[916],{"type":561,"value":876},{"type":556,"tag":588,"props":918,"children":919},{"style":879},[920],{"type":561,"value":882},{"type":556,"tag":588,"props":922,"children":923},{"style":873},[924],{"type":561,"value":887},{"type":556,"tag":588,"props":926,"children":927},{"style":890},[928],{"type":561,"value":893},{"type":556,"tag":588,"props":930,"children":931},{"style":873},[932],{"type":561,"value":898},{"type":556,"tag":588,"props":934,"children":935},{"style":901},[936],{"type":561,"value":937}," text2\n",{"type":556,"tag":588,"props":939,"children":941},{"class":590,"line":940},5,[942,946,950,955,959,964],{"type":556,"tag":588,"props":943,"children":944},{"style":851},[945],{"type":561,"value":870},{"type":556,"tag":588,"props":947,"children":948},{"style":873},[949],{"type":561,"value":876},{"type":556,"tag":588,"props":951,"children":952},{"style":879},[953],{"type":561,"value":954},"return",{"type":556,"tag":588,"props":956,"children":957},{"style":873},[958],{"type":561,"value":887},{"type":556,"tag":588,"props":960,"children":961},{"style":890},[962],{"type":561,"value":963},"number",{"type":556,"tag":588,"props":965,"children":966},{"style":873},[967],{"type":561,"value":968},"}\n",{"type":556,"tag":588,"props":970,"children":972},{"class":590,"line":971},6,[973],{"type":556,"tag":588,"props":974,"children":975},{"style":851},[976],{"type":561,"value":977}," */\n",{"type":556,"tag":588,"props":979,"children":981},{"class":590,"line":980},7,[982,988,994,999,1004,1009,1014,1019,1024,1029],{"type":556,"tag":588,"props":983,"children":985},{"style":984},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[986],{"type":561,"value":987},"var",{"type":556,"tag":588,"props":989,"children":991},{"style":990},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[992],{"type":561,"value":993}," longestCommonSubsequence",{"type":556,"tag":588,"props":995,"children":996},{"style":873},[997],{"type":561,"value":998}," =",{"type":556,"tag":588,"props":1000,"children":1001},{"style":984},[1002],{"type":561,"value":1003}," function",{"type":556,"tag":588,"props":1005,"children":1006},{"style":873},[1007],{"type":561,"value":1008}," (",{"type":556,"tag":588,"props":1010,"children":1011},{"style":901},[1012],{"type":561,"value":1013},"text1",{"type":556,"tag":588,"props":1015,"children":1016},{"style":873},[1017],{"type":561,"value":1018},",",{"type":556,"tag":588,"props":1020,"children":1021},{"style":901},[1022],{"type":561,"value":1023}," text2",{"type":556,"tag":588,"props":1025,"children":1026},{"style":873},[1027],{"type":561,"value":1028},")",{"type":556,"tag":588,"props":1030,"children":1031},{"style":873},[1032],{"type":561,"value":1033}," {\n",{"type":556,"tag":588,"props":1035,"children":1037},{"class":590,"line":1036},8,[1038,1043,1048,1052,1057,1062,1068],{"type":556,"tag":588,"props":1039,"children":1040},{"style":984},[1041],{"type":561,"value":1042},"  let",{"type":556,"tag":588,"props":1044,"children":1045},{"style":901},[1046],{"type":561,"value":1047}," m",{"type":556,"tag":588,"props":1049,"children":1050},{"style":873},[1051],{"type":561,"value":998},{"type":556,"tag":588,"props":1053,"children":1054},{"style":901},[1055],{"type":561,"value":1056}," text1",{"type":556,"tag":588,"props":1058,"children":1059},{"style":873},[1060],{"type":561,"value":1061},".",{"type":556,"tag":588,"props":1063,"children":1065},{"style":1064},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1066],{"type":561,"value":1067},"length",{"type":556,"tag":588,"props":1069,"children":1070},{"style":873},[1071],{"type":561,"value":1072},";\n",{"type":556,"tag":588,"props":1074,"children":1076},{"class":590,"line":1075},9,[1077,1081,1086,1090,1094,1098,1102],{"type":556,"tag":588,"props":1078,"children":1079},{"style":984},[1080],{"type":561,"value":1042},{"type":556,"tag":588,"props":1082,"children":1083},{"style":901},[1084],{"type":561,"value":1085}," n",{"type":556,"tag":588,"props":1087,"children":1088},{"style":873},[1089],{"type":561,"value":998},{"type":556,"tag":588,"props":1091,"children":1092},{"style":901},[1093],{"type":561,"value":1023},{"type":556,"tag":588,"props":1095,"children":1096},{"style":873},[1097],{"type":561,"value":1061},{"type":556,"tag":588,"props":1099,"children":1100},{"style":1064},[1101],{"type":561,"value":1067},{"type":556,"tag":588,"props":1103,"children":1104},{"style":873},[1105],{"type":561,"value":1072},{"type":556,"tag":588,"props":1107,"children":1109},{"class":590,"line":1108},10,[1110,1114,1119,1123,1128,1133,1138,1143,1148,1154,1159,1164,1168,1173,1177,1182,1187,1192,1196,1200,1204,1209,1213,1217,1221,1225,1229,1233],{"type":556,"tag":588,"props":1111,"children":1112},{"style":984},[1113],{"type":561,"value":1042},{"type":556,"tag":588,"props":1115,"children":1116},{"style":901},[1117],{"type":561,"value":1118}," dp",{"type":556,"tag":588,"props":1120,"children":1121},{"style":873},[1122],{"type":561,"value":998},{"type":556,"tag":588,"props":1124,"children":1125},{"style":984},[1126],{"type":561,"value":1127}," new",{"type":556,"tag":588,"props":1129,"children":1130},{"style":990},[1131],{"type":561,"value":1132}," Array",{"type":556,"tag":588,"props":1134,"children":1135},{"style":873},[1136],{"type":561,"value":1137},"(",{"type":556,"tag":588,"props":1139,"children":1140},{"style":901},[1141],{"type":561,"value":1142},"m",{"type":556,"tag":588,"props":1144,"children":1145},{"style":984},[1146],{"type":561,"value":1147}," +",{"type":556,"tag":588,"props":1149,"children":1151},{"style":1150},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1152],{"type":561,"value":1153}," 1",{"type":556,"tag":588,"props":1155,"children":1156},{"style":873},[1157],{"type":561,"value":1158},").",{"type":556,"tag":588,"props":1160,"children":1161},{"style":990},[1162],{"type":561,"value":1163},"fill",{"type":556,"tag":588,"props":1165,"children":1166},{"style":873},[1167],{"type":561,"value":1137},{"type":556,"tag":588,"props":1169,"children":1170},{"style":1150},[1171],{"type":561,"value":1172},"0",{"type":556,"tag":588,"props":1174,"children":1175},{"style":873},[1176],{"type":561,"value":1158},{"type":556,"tag":588,"props":1178,"children":1179},{"style":990},[1180],{"type":561,"value":1181},"map",{"type":556,"tag":588,"props":1183,"children":1184},{"style":873},[1185],{"type":561,"value":1186},"(()",{"type":556,"tag":588,"props":1188,"children":1189},{"style":873},[1190],{"type":561,"value":1191}," =>",{"type":556,"tag":588,"props":1193,"children":1194},{"style":984},[1195],{"type":561,"value":1127},{"type":556,"tag":588,"props":1197,"children":1198},{"style":990},[1199],{"type":561,"value":1132},{"type":556,"tag":588,"props":1201,"children":1202},{"style":873},[1203],{"type":561,"value":1137},{"type":556,"tag":588,"props":1205,"children":1206},{"style":901},[1207],{"type":561,"value":1208},"n",{"type":556,"tag":588,"props":1210,"children":1211},{"style":984},[1212],{"type":561,"value":1147},{"type":556,"tag":588,"props":1214,"children":1215},{"style":1150},[1216],{"type":561,"value":1153},{"type":556,"tag":588,"props":1218,"children":1219},{"style":873},[1220],{"type":561,"value":1158},{"type":556,"tag":588,"props":1222,"children":1223},{"style":990},[1224],{"type":561,"value":1163},{"type":556,"tag":588,"props":1226,"children":1227},{"style":873},[1228],{"type":561,"value":1137},{"type":556,"tag":588,"props":1230,"children":1231},{"style":1150},[1232],{"type":561,"value":1172},{"type":556,"tag":588,"props":1234,"children":1235},{"style":873},[1236],{"type":561,"value":1237},"));\n",{"type":556,"tag":588,"props":1239,"children":1241},{"class":590,"line":1240},11,[1242,1247,1251,1256,1261,1265,1269,1274,1278,1283,1287,1291,1295,1300,1304],{"type":556,"tag":588,"props":1243,"children":1244},{"style":879},[1245],{"type":561,"value":1246},"  for",{"type":556,"tag":588,"props":1248,"children":1249},{"style":873},[1250],{"type":561,"value":1008},{"type":556,"tag":588,"props":1252,"children":1253},{"style":984},[1254],{"type":561,"value":1255},"let",{"type":556,"tag":588,"props":1257,"children":1258},{"style":901},[1259],{"type":561,"value":1260}," i",{"type":556,"tag":588,"props":1262,"children":1263},{"style":873},[1264],{"type":561,"value":998},{"type":556,"tag":588,"props":1266,"children":1267},{"style":1150},[1268],{"type":561,"value":1153},{"type":556,"tag":588,"props":1270,"children":1271},{"style":873},[1272],{"type":561,"value":1273},";",{"type":556,"tag":588,"props":1275,"children":1276},{"style":901},[1277],{"type":561,"value":1260},{"type":556,"tag":588,"props":1279,"children":1280},{"style":873},[1281],{"type":561,"value":1282}," \u003C=",{"type":556,"tag":588,"props":1284,"children":1285},{"style":901},[1286],{"type":561,"value":1047},{"type":556,"tag":588,"props":1288,"children":1289},{"style":873},[1290],{"type":561,"value":1273},{"type":556,"tag":588,"props":1292,"children":1293},{"style":901},[1294],{"type":561,"value":1260},{"type":556,"tag":588,"props":1296,"children":1297},{"style":984},[1298],{"type":561,"value":1299},"++",{"type":556,"tag":588,"props":1301,"children":1302},{"style":873},[1303],{"type":561,"value":1028},{"type":556,"tag":588,"props":1305,"children":1306},{"style":873},[1307],{"type":561,"value":1033},{"type":556,"tag":588,"props":1309,"children":1311},{"class":590,"line":1310},12,[1312,1317,1322,1326,1330,1335,1340,1345,1349],{"type":556,"tag":588,"props":1313,"children":1314},{"style":984},[1315],{"type":561,"value":1316},"    const",{"type":556,"tag":588,"props":1318,"children":1319},{"style":901},[1320],{"type":561,"value":1321}," str1",{"type":556,"tag":588,"props":1323,"children":1324},{"style":873},[1325],{"type":561,"value":998},{"type":556,"tag":588,"props":1327,"children":1328},{"style":901},[1329],{"type":561,"value":1056},{"type":556,"tag":588,"props":1331,"children":1332},{"style":873},[1333],{"type":561,"value":1334},"[",{"type":556,"tag":588,"props":1336,"children":1337},{"style":901},[1338],{"type":561,"value":1339},"i",{"type":556,"tag":588,"props":1341,"children":1342},{"style":984},[1343],{"type":561,"value":1344}," -",{"type":556,"tag":588,"props":1346,"children":1347},{"style":1150},[1348],{"type":561,"value":1153},{"type":556,"tag":588,"props":1350,"children":1351},{"style":873},[1352],{"type":561,"value":1353},"];\n",{"type":556,"tag":588,"props":1355,"children":1357},{"class":590,"line":1356},13,[1358,1363,1367,1371,1376,1380,1384,1388,1392,1396,1400,1404,1408,1412,1416],{"type":556,"tag":588,"props":1359,"children":1360},{"style":879},[1361],{"type":561,"value":1362},"    for",{"type":556,"tag":588,"props":1364,"children":1365},{"style":873},[1366],{"type":561,"value":1008},{"type":556,"tag":588,"props":1368,"children":1369},{"style":984},[1370],{"type":561,"value":1255},{"type":556,"tag":588,"props":1372,"children":1373},{"style":901},[1374],{"type":561,"value":1375}," j",{"type":556,"tag":588,"props":1377,"children":1378},{"style":873},[1379],{"type":561,"value":998},{"type":556,"tag":588,"props":1381,"children":1382},{"style":1150},[1383],{"type":561,"value":1153},{"type":556,"tag":588,"props":1385,"children":1386},{"style":873},[1387],{"type":561,"value":1273},{"type":556,"tag":588,"props":1389,"children":1390},{"style":901},[1391],{"type":561,"value":1375},{"type":556,"tag":588,"props":1393,"children":1394},{"style":873},[1395],{"type":561,"value":1282},{"type":556,"tag":588,"props":1397,"children":1398},{"style":901},[1399],{"type":561,"value":1085},{"type":556,"tag":588,"props":1401,"children":1402},{"style":873},[1403],{"type":561,"value":1273},{"type":556,"tag":588,"props":1405,"children":1406},{"style":901},[1407],{"type":561,"value":1375},{"type":556,"tag":588,"props":1409,"children":1410},{"style":984},[1411],{"type":561,"value":1299},{"type":556,"tag":588,"props":1413,"children":1414},{"style":873},[1415],{"type":561,"value":1028},{"type":556,"tag":588,"props":1417,"children":1418},{"style":873},[1419],{"type":561,"value":1033},{"type":556,"tag":588,"props":1421,"children":1423},{"class":590,"line":1422},14,[1424,1429,1434,1438,1442,1446,1451,1455,1459],{"type":556,"tag":588,"props":1425,"children":1426},{"style":984},[1427],{"type":561,"value":1428},"      const",{"type":556,"tag":588,"props":1430,"children":1431},{"style":901},[1432],{"type":561,"value":1433}," str2",{"type":556,"tag":588,"props":1435,"children":1436},{"style":873},[1437],{"type":561,"value":998},{"type":556,"tag":588,"props":1439,"children":1440},{"style":901},[1441],{"type":561,"value":1023},{"type":556,"tag":588,"props":1443,"children":1444},{"style":873},[1445],{"type":561,"value":1334},{"type":556,"tag":588,"props":1447,"children":1448},{"style":901},[1449],{"type":561,"value":1450},"j",{"type":556,"tag":588,"props":1452,"children":1453},{"style":984},[1454],{"type":561,"value":1344},{"type":556,"tag":588,"props":1456,"children":1457},{"style":1150},[1458],{"type":561,"value":1153},{"type":556,"tag":588,"props":1460,"children":1461},{"style":873},[1462],{"type":561,"value":1353},{"type":556,"tag":588,"props":1464,"children":1466},{"class":590,"line":1465},15,[1467,1472,1476,1481,1486,1490,1494],{"type":556,"tag":588,"props":1468,"children":1469},{"style":879},[1470],{"type":561,"value":1471},"      if",{"type":556,"tag":588,"props":1473,"children":1474},{"style":873},[1475],{"type":561,"value":1008},{"type":556,"tag":588,"props":1477,"children":1478},{"style":901},[1479],{"type":561,"value":1480},"str1",{"type":556,"tag":588,"props":1482,"children":1483},{"style":984},[1484],{"type":561,"value":1485}," ===",{"type":556,"tag":588,"props":1487,"children":1488},{"style":901},[1489],{"type":561,"value":1433},{"type":556,"tag":588,"props":1491,"children":1492},{"style":873},[1493],{"type":561,"value":1028},{"type":556,"tag":588,"props":1495,"children":1496},{"style":873},[1497],{"type":561,"value":1033},{"type":556,"tag":588,"props":1499,"children":1501},{"class":590,"line":1500},16,[1502,1507,1511,1515,1520,1524,1529,1533,1537,1541,1545,1549,1553,1557,1561,1565,1569,1573,1577,1581],{"type":556,"tag":588,"props":1503,"children":1504},{"style":901},[1505],{"type":561,"value":1506},"        dp",{"type":556,"tag":588,"props":1508,"children":1509},{"style":873},[1510],{"type":561,"value":1334},{"type":556,"tag":588,"props":1512,"children":1513},{"style":901},[1514],{"type":561,"value":1339},{"type":556,"tag":588,"props":1516,"children":1517},{"style":873},[1518],{"type":561,"value":1519},"][",{"type":556,"tag":588,"props":1521,"children":1522},{"style":901},[1523],{"type":561,"value":1450},{"type":556,"tag":588,"props":1525,"children":1526},{"style":873},[1527],{"type":561,"value":1528},"]",{"type":556,"tag":588,"props":1530,"children":1531},{"style":873},[1532],{"type":561,"value":998},{"type":556,"tag":588,"props":1534,"children":1535},{"style":901},[1536],{"type":561,"value":1118},{"type":556,"tag":588,"props":1538,"children":1539},{"style":873},[1540],{"type":561,"value":1334},{"type":556,"tag":588,"props":1542,"children":1543},{"style":901},[1544],{"type":561,"value":1339},{"type":556,"tag":588,"props":1546,"children":1547},{"style":984},[1548],{"type":561,"value":1344},{"type":556,"tag":588,"props":1550,"children":1551},{"style":1150},[1552],{"type":561,"value":1153},{"type":556,"tag":588,"props":1554,"children":1555},{"style":873},[1556],{"type":561,"value":1519},{"type":556,"tag":588,"props":1558,"children":1559},{"style":901},[1560],{"type":561,"value":1450},{"type":556,"tag":588,"props":1562,"children":1563},{"style":984},[1564],{"type":561,"value":1344},{"type":556,"tag":588,"props":1566,"children":1567},{"style":1150},[1568],{"type":561,"value":1153},{"type":556,"tag":588,"props":1570,"children":1571},{"style":873},[1572],{"type":561,"value":1528},{"type":556,"tag":588,"props":1574,"children":1575},{"style":984},[1576],{"type":561,"value":1147},{"type":556,"tag":588,"props":1578,"children":1579},{"style":1150},[1580],{"type":561,"value":1153},{"type":556,"tag":588,"props":1582,"children":1583},{"style":873},[1584],{"type":561,"value":1072},{"type":556,"tag":588,"props":1586,"children":1588},{"class":590,"line":1587},17,[1589,1594,1599],{"type":556,"tag":588,"props":1590,"children":1591},{"style":873},[1592],{"type":561,"value":1593},"      }",{"type":556,"tag":588,"props":1595,"children":1596},{"style":879},[1597],{"type":561,"value":1598}," else",{"type":556,"tag":588,"props":1600,"children":1601},{"style":873},[1602],{"type":561,"value":1033},{"type":556,"tag":588,"props":1604,"children":1606},{"class":590,"line":1605},18,[1607,1611,1615,1619,1623,1627,1631,1635,1640,1644,1649,1653,1658,1662,1666,1670,1674,1678,1682,1687,1691,1695,1699,1703,1707,1711,1715],{"type":556,"tag":588,"props":1608,"children":1609},{"style":901},[1610],{"type":561,"value":1506},{"type":556,"tag":588,"props":1612,"children":1613},{"style":873},[1614],{"type":561,"value":1334},{"type":556,"tag":588,"props":1616,"children":1617},{"style":901},[1618],{"type":561,"value":1339},{"type":556,"tag":588,"props":1620,"children":1621},{"style":873},[1622],{"type":561,"value":1519},{"type":556,"tag":588,"props":1624,"children":1625},{"style":901},[1626],{"type":561,"value":1450},{"type":556,"tag":588,"props":1628,"children":1629},{"style":873},[1630],{"type":561,"value":1528},{"type":556,"tag":588,"props":1632,"children":1633},{"style":873},[1634],{"type":561,"value":998},{"type":556,"tag":588,"props":1636,"children":1637},{"style":901},[1638],{"type":561,"value":1639}," Math",{"type":556,"tag":588,"props":1641,"children":1642},{"style":873},[1643],{"type":561,"value":1061},{"type":556,"tag":588,"props":1645,"children":1646},{"style":990},[1647],{"type":561,"value":1648},"max",{"type":556,"tag":588,"props":1650,"children":1651},{"style":873},[1652],{"type":561,"value":1137},{"type":556,"tag":588,"props":1654,"children":1655},{"style":901},[1656],{"type":561,"value":1657},"dp",{"type":556,"tag":588,"props":1659,"children":1660},{"style":873},[1661],{"type":561,"value":1334},{"type":556,"tag":588,"props":1663,"children":1664},{"style":901},[1665],{"type":561,"value":1339},{"type":556,"tag":588,"props":1667,"children":1668},{"style":984},[1669],{"type":561,"value":1344},{"type":556,"tag":588,"props":1671,"children":1672},{"style":1150},[1673],{"type":561,"value":1153},{"type":556,"tag":588,"props":1675,"children":1676},{"style":873},[1677],{"type":561,"value":1519},{"type":556,"tag":588,"props":1679,"children":1680},{"style":901},[1681],{"type":561,"value":1450},{"type":556,"tag":588,"props":1683,"children":1684},{"style":873},[1685],{"type":561,"value":1686},"],",{"type":556,"tag":588,"props":1688,"children":1689},{"style":901},[1690],{"type":561,"value":1118},{"type":556,"tag":588,"props":1692,"children":1693},{"style":873},[1694],{"type":561,"value":1334},{"type":556,"tag":588,"props":1696,"children":1697},{"style":901},[1698],{"type":561,"value":1339},{"type":556,"tag":588,"props":1700,"children":1701},{"style":873},[1702],{"type":561,"value":1519},{"type":556,"tag":588,"props":1704,"children":1705},{"style":901},[1706],{"type":561,"value":1450},{"type":556,"tag":588,"props":1708,"children":1709},{"style":984},[1710],{"type":561,"value":1344},{"type":556,"tag":588,"props":1712,"children":1713},{"style":1150},[1714],{"type":561,"value":1153},{"type":556,"tag":588,"props":1716,"children":1717},{"style":873},[1718],{"type":561,"value":1719},"]);\n",{"type":556,"tag":588,"props":1721,"children":1723},{"class":590,"line":1722},19,[1724],{"type":556,"tag":588,"props":1725,"children":1726},{"style":873},[1727],{"type":561,"value":1728},"      }\n",{"type":556,"tag":588,"props":1730,"children":1732},{"class":590,"line":1731},20,[1733],{"type":556,"tag":588,"props":1734,"children":1735},{"style":873},[1736],{"type":561,"value":1737},"    }\n",{"type":556,"tag":588,"props":1739,"children":1741},{"class":590,"line":1740},21,[1742],{"type":556,"tag":588,"props":1743,"children":1744},{"style":873},[1745],{"type":561,"value":1746},"  }\n",{"type":556,"tag":588,"props":1748,"children":1750},{"class":590,"line":1749},22,[1751,1756,1760,1764,1768,1772,1776],{"type":556,"tag":588,"props":1752,"children":1753},{"style":879},[1754],{"type":561,"value":1755},"  return",{"type":556,"tag":588,"props":1757,"children":1758},{"style":901},[1759],{"type":561,"value":1118},{"type":556,"tag":588,"props":1761,"children":1762},{"style":873},[1763],{"type":561,"value":1334},{"type":556,"tag":588,"props":1765,"children":1766},{"style":901},[1767],{"type":561,"value":1142},{"type":556,"tag":588,"props":1769,"children":1770},{"style":873},[1771],{"type":561,"value":1519},{"type":556,"tag":588,"props":1773,"children":1774},{"style":901},[1775],{"type":561,"value":1208},{"type":556,"tag":588,"props":1777,"children":1778},{"style":873},[1779],{"type":561,"value":1353},{"type":556,"tag":588,"props":1781,"children":1783},{"class":590,"line":1782},23,[1784],{"type":556,"tag":588,"props":1785,"children":1786},{"style":873},[1787],{"type":561,"value":1788},"};\n",{"type":556,"tag":1790,"props":1791,"children":1792},"style",{},[1793],{"type":561,"value":1794},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":549,"searchDepth":940,"depth":940,"links":1796},[1797,1802],{"id":710,"depth":600,"text":710,"children":1798},[1799,1800,1801],{"id":721,"depth":609,"text":721},{"id":736,"depth":609,"text":736},{"id":794,"depth":609,"text":794},{"id":829,"depth":600,"text":829,"children":1803},[1804],{"id":834,"depth":609,"text":834},"markdown","content:1.algorithm:3.leetcode:3.major:1143.longest-common-subsequence.md","content","1.algorithm/3.leetcode/3.major/1143.longest-common-subsequence.md","md",[1811,1813],{"_path":258,"title":257,"description":1812},"对于字符串 s 和 t，只有在 s = t + t + t + ... + t + t（t 自身连接 1 次或多次）时，我们才认定 “t 能除尽 s”。",{"_path":264,"title":263,"description":1814},"给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。",1715002846304]