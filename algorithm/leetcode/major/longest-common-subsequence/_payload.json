[{"data":1,"prerenderedAt":1793},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/longest-common-subsequence":524,"/algorithm/leetcode/major/longest-common-subsequence-surround":1788},[4,269,298,492,500,509],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":491},"代码考核","/code-assessment",[302,391,484],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,375,382,385,388],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357,360,363,366,369,372],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"原型方法","/code-assessment/source/array/prototype-method",{"title":361,"_path":362},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":364,"_path":365},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":367,"_path":368},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":370,"_path":371},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":373,"_path":374},"二维数组","/code-assessment/source/array/2d-array",{"title":376,"_path":377,"children":378},"字符串 String","/code-assessment/source/string",[379],{"title":380,"_path":381},"repeat()","/code-assessment/source/string/repeat",{"title":383,"_path":384},"获取通用类型","/code-assessment/source/get-generic-type",{"title":386,"_path":387},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":389,"_path":390},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":392,"_path":393,"children":394},"业务场景","/code-assessment/scene",[395,420,430,433,436,439,442,445,448,451,454,457,460,463,466,469,472,475,478,481],{"title":396,"_path":397,"children":398},"Promise","/code-assessment/scene/promise",[399,402,405,408,411,414,417],{"title":400,"_path":401},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":403,"_path":404},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":406,"_path":407},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":409,"_path":410},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":412,"_path":413},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":415,"_path":416},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":418,"_path":419},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":421,"_path":422,"children":423},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[424,427],{"title":425,"_path":426},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":428,"_path":429},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":431,"_path":432},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":434,"_path":435},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":437,"_path":438},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":440,"_path":441},"倒计时","/code-assessment/scene/countdown",{"title":443,"_path":444},"日期格式化","/code-assessment/scene/date-format",{"title":446,"_path":447},"实现前端路由","/code-assessment/scene/frontend-route",{"title":449,"_path":450},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":452,"_path":453},"lodash.get","/code-assessment/scene/lodash-get",{"title":455,"_path":456},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":458,"_path":459},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":461,"_path":462},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":464,"_path":465},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":467,"_path":468},"随机数","/code-assessment/scene/random-number",{"title":470,"_path":471},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":473,"_path":474},"sku 算法实现","/code-assessment/scene/sku",{"title":476,"_path":477},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":479,"_path":480},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":482,"_path":483},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":485,"_path":486,"children":487},"Ts 类型挑战","/code-assessment/type-challeges",[488],{"title":489,"_path":490},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":493,"_path":494,"children":495,"icon":499},"项目","/project",[496],{"title":497,"_path":498},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":501,"_path":502,"children":503,"icon":508},"设计模式","/design-mode",[504,505],{"title":501,"_path":502},{"title":506,"_path":507},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":510,"_path":511,"children":512,"icon":523},"后端语言","/backend-languages",[513],{"title":514,"_path":515,"children":516},"Python","/backend-languages/python",[517,520],{"title":518,"_path":519},"基础","/backend-languages/python/base",{"title":521,"_path":522},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":261,"_dir":525,"_draft":526,"_partial":526,"_locale":527,"title":260,"description":528,"url":529,"body":530,"_type":1783,"_id":1784,"_source":1785,"_file":1786,"_extension":1787},"major",false,"","给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。","https://leetcode.cn/problems/longest-common-subsequence",{"type":531,"children":532,"toc":1773},"root",[533,540,545,550,555,594,599,629,634,665,670,685,691,696,702,707,712,717,770,775,784,797,805,810,815,1767],{"type":534,"tag":535,"props":536,"children":537},"element","p",{},[538],{"type":539,"value":528},"text",{"type":534,"tag":535,"props":541,"children":542},{},[543],{"type":539,"value":544},"一个字符串的 子序列 是指这样一个新的字符串：它是由原字符串在不改变字符的相对顺序的情况下删除某些字符（也可以不删除任何字符）后组成的新字符串。",{"type":534,"tag":535,"props":546,"children":547},{},[548],{"type":539,"value":549},"例如，\"ace\" 是 \"abcde\" 的子序列，但 \"aec\" 不是 \"abcde\" 的子序列。\n两个字符串的 公共子序列 是这两个字符串所共同拥有的子序列。",{"type":534,"tag":535,"props":551,"children":552},{},[553],{"type":539,"value":554},"示例 1：",{"type":534,"tag":556,"props":557,"children":560},"pre",{"className":558,"code":559,"language":539,"meta":527,"style":527},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：text1 = \"abcde\", text2 = \"ace\"\n输出：3\n解释：最长公共子序列是 \"ace\" ，它的长度为 3 。\n",[561],{"type":534,"tag":562,"props":563,"children":564},"code",{"__ignoreMap":527},[565,576,585],{"type":534,"tag":566,"props":567,"children":570},"span",{"class":568,"line":569},"line",1,[571],{"type":534,"tag":566,"props":572,"children":573},{},[574],{"type":539,"value":575},"输入：text1 = \"abcde\", text2 = \"ace\"\n",{"type":534,"tag":566,"props":577,"children":579},{"class":568,"line":578},2,[580],{"type":534,"tag":566,"props":581,"children":582},{},[583],{"type":539,"value":584},"输出：3\n",{"type":534,"tag":566,"props":586,"children":588},{"class":568,"line":587},3,[589],{"type":534,"tag":566,"props":590,"children":591},{},[592],{"type":539,"value":593},"解释：最长公共子序列是 \"ace\" ，它的长度为 3 。\n",{"type":534,"tag":535,"props":595,"children":596},{},[597],{"type":539,"value":598},"示例 2：",{"type":534,"tag":556,"props":600,"children":602},{"className":558,"code":601,"language":539,"meta":527,"style":527},"输入：text1 = \"abc\", text2 = \"abc\"\n输出：3\n解释：最长公共子序列是 \"abc\" ，它的长度为 3 。\n",[603],{"type":534,"tag":562,"props":604,"children":605},{"__ignoreMap":527},[606,614,621],{"type":534,"tag":566,"props":607,"children":608},{"class":568,"line":569},[609],{"type":534,"tag":566,"props":610,"children":611},{},[612],{"type":539,"value":613},"输入：text1 = \"abc\", text2 = \"abc\"\n",{"type":534,"tag":566,"props":615,"children":616},{"class":568,"line":578},[617],{"type":534,"tag":566,"props":618,"children":619},{},[620],{"type":539,"value":584},{"type":534,"tag":566,"props":622,"children":623},{"class":568,"line":587},[624],{"type":534,"tag":566,"props":625,"children":626},{},[627],{"type":539,"value":628},"解释：最长公共子序列是 \"abc\" ，它的长度为 3 。\n",{"type":534,"tag":535,"props":630,"children":631},{},[632],{"type":539,"value":633},"示例 3：",{"type":534,"tag":556,"props":635,"children":637},{"className":558,"code":636,"language":539,"meta":527,"style":527},"输入：text1 = \"abc\", text2 = \"def\"\n输出：0\n解释：两个字符串没有公共子序列，返回 0 。\n",[638],{"type":534,"tag":562,"props":639,"children":640},{"__ignoreMap":527},[641,649,657],{"type":534,"tag":566,"props":642,"children":643},{"class":568,"line":569},[644],{"type":534,"tag":566,"props":645,"children":646},{},[647],{"type":539,"value":648},"输入：text1 = \"abc\", text2 = \"def\"\n",{"type":534,"tag":566,"props":650,"children":651},{"class":568,"line":578},[652],{"type":534,"tag":566,"props":653,"children":654},{},[655],{"type":539,"value":656},"输出：0\n",{"type":534,"tag":566,"props":658,"children":659},{"class":568,"line":587},[660],{"type":534,"tag":566,"props":661,"children":662},{},[663],{"type":539,"value":664},"解释：两个字符串没有公共子序列，返回 0 。\n",{"type":534,"tag":535,"props":666,"children":667},{},[668],{"type":539,"value":669},"提示：",{"type":534,"tag":671,"props":672,"children":673},"ul",{},[674,680],{"type":534,"tag":675,"props":676,"children":677},"li",{},[678],{"type":539,"value":679},"1 \u003C= text1.length, text2.length \u003C= 1000",{"type":534,"tag":675,"props":681,"children":682},{},[683],{"type":539,"value":684},"text1 和 text2 仅由小写英文字符组成。",{"type":534,"tag":686,"props":687,"children":689},"h2",{"id":688},"解题思路",[690],{"type":539,"value":688},{"type":534,"tag":535,"props":692,"children":693},{},[694],{"type":539,"value":695},"最长公共子序列问题是典型的二维动态规划问题。",{"type":534,"tag":697,"props":698,"children":700},"h3",{"id":699},"状态",[701],{"type":539,"value":699},{"type":534,"tag":535,"props":703,"children":704},{},[705],{"type":539,"value":706},"假设字符串 text1 和 text2 的长度分别为 m 和 n，创建 m+1 行 n+1 列的二维数组 dp，其中 dp[i][j] 表示 text1[0:i] 和 text2[0:j] 的最长公共子序列的长度",{"type":534,"tag":535,"props":708,"children":709},{},[710],{"type":539,"value":711},"上述表示中，text1[0:i] 表示 text1 的长度为 i 的前缀，text2[0:j] 表示 text2 的长度为 j 的前缀",{"type":534,"tag":697,"props":713,"children":715},{"id":714},"边界",[716],{"type":539,"value":714},{"type":534,"tag":718,"props":719,"children":720},"ol",{},[721,726,731,736],{"type":534,"tag":675,"props":722,"children":723},{},[724],{"type":539,"value":725},"当 i = 0 时，text1[0:i] 为空，空字符串和任何字符串的最长公共子序列的长度都是 0，因此对于任意 0\u003C=j\u003C=n，都有 dp[0][j] = 0；",{"type":534,"tag":675,"props":727,"children":728},{},[729],{"type":539,"value":730},"当 j = 0 时，text2[0:j] 为空，空字符串和任何字符串的最长公共子序列的长度都是 0，因此对于任意 0\u003C=i\u003C=m，都有 dp[i][0] = 0；",{"type":534,"tag":675,"props":732,"children":733},{},[734],{"type":539,"value":735},"因此：当 i = 0 或 j = 0 时，dp[i][j] = 0；",{"type":534,"tag":675,"props":737,"children":738},{},[739,741],{"type":539,"value":740},"当 i > 0 且 j > 0 时，考虑 dp[i][j] 的计算：",{"type":534,"tag":671,"props":742,"children":743},{},[744,757],{"type":534,"tag":675,"props":745,"children":746},{},[747,749,755],{"type":539,"value":748},"当 text1[i-1] = text2[j-1] 时，将这两个相同的字符称为公共字符。考虑 text1[0:i-1] 和 text2[0:j-1] 的最长公共子序列，再增加一个字符（即公共字符）即可得到 text1[0:i] 和 text2[0:j] 的最长公共子序列。因此：",{"type":534,"tag":562,"props":750,"children":752},{"className":751},[],[753],{"type":539,"value":754},"dp[i][j] = dp[i-1][j-1] + 1",{"type":539,"value":756},"；",{"type":534,"tag":675,"props":758,"children":759},{},[760,762,768],{"type":539,"value":761},"当 text1[i-1] != text2[j-1] 时，需要考虑 text1[0:i-1] 和 text2[0:j] 的最长公共子序列；以及 text1[0:i] 和 text2[0:j-1] 的最长公共子序列。要得到 text1[0:i] 和 text2[0:j] 的最长公共子序列，应取两项中长度较大的一项，因此： ",{"type":534,"tag":562,"props":763,"children":765},{"className":764},[],[766],{"type":539,"value":767},"dp[i][j] = max(dp[i-1][j], dp[i][j-1])",{"type":539,"value":769},"。",{"type":534,"tag":697,"props":771,"children":773},{"id":772},"状态转移方程",[774],{"type":539,"value":772},{"type":534,"tag":535,"props":776,"children":777},{},[778],{"type":534,"tag":779,"props":780,"children":783},"img",{"alt":781,"src":782},"function-formula","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.1143_function-formula.png",[],{"type":534,"tag":535,"props":785,"children":786},{},[787,789,795],{"type":539,"value":788},"最终得到 ",{"type":534,"tag":562,"props":790,"children":792},{"className":791},[],[793],{"type":539,"value":794},"dp[m][n]",{"type":539,"value":796}," 即为 text1 和 text2 的最长公共子序列的长度。",{"type":534,"tag":535,"props":798,"children":799},{},[800],{"type":534,"tag":779,"props":801,"children":804},{"alt":802,"src":803},"graphic-solution","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.1143_graphic-solution.png",[],{"type":534,"tag":686,"props":806,"children":808},{"id":807},"实现",[809],{"type":539,"value":807},{"type":534,"tag":697,"props":811,"children":813},{"id":812},"动态规划",[814],{"type":539,"value":812},{"type":534,"tag":556,"props":816,"children":820},{"className":817,"code":818,"language":819,"meta":527,"style":527},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * 二维动态规划\n * @param {string} text1\n * @param {string} text2\n * @return {number}\n */\nvar longestCommonSubsequence = function (text1, text2) {\n  let m = text1.length;\n  let n = text2.length;\n  let dp = new Array(m + 1).fill(0).map(() => new Array(n + 1).fill(0));\n  for (let i = 1; i \u003C= m; i++) {\n    const str1 = text1[i - 1];\n    for (let j = 1; j \u003C= n; j++) {\n      const str2 = text2[j - 1];\n      if (str1 === str2) {\n        dp[i][j] = dp[i - 1][j - 1] + 1;\n      } else {\n        dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);\n      }\n    }\n  }\n  return dp[m][n];\n};\n","js",[821],{"type":534,"tag":562,"props":822,"children":823},{"__ignoreMap":527},[824,833,841,883,916,947,956,1012,1051,1084,1216,1286,1332,1398,1441,1476,1563,1581,1698,1707,1716,1725,1758],{"type":534,"tag":566,"props":825,"children":826},{"class":568,"line":569},[827],{"type":534,"tag":566,"props":828,"children":830},{"style":829},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[831],{"type":539,"value":832},"/**\n",{"type":534,"tag":566,"props":834,"children":835},{"class":568,"line":578},[836],{"type":534,"tag":566,"props":837,"children":838},{"style":829},[839],{"type":539,"value":840}," * 二维动态规划\n",{"type":534,"tag":566,"props":842,"children":843},{"class":568,"line":587},[844,849,855,861,866,872,877],{"type":534,"tag":566,"props":845,"children":846},{"style":829},[847],{"type":539,"value":848}," * ",{"type":534,"tag":566,"props":850,"children":852},{"style":851},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[853],{"type":539,"value":854},"@",{"type":534,"tag":566,"props":856,"children":858},{"style":857},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[859],{"type":539,"value":860},"param",{"type":534,"tag":566,"props":862,"children":863},{"style":851},[864],{"type":539,"value":865}," {",{"type":534,"tag":566,"props":867,"children":869},{"style":868},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[870],{"type":539,"value":871},"string",{"type":534,"tag":566,"props":873,"children":874},{"style":851},[875],{"type":539,"value":876},"}",{"type":534,"tag":566,"props":878,"children":880},{"style":879},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[881],{"type":539,"value":882}," text1\n",{"type":534,"tag":566,"props":884,"children":886},{"class":568,"line":885},4,[887,891,895,899,903,907,911],{"type":534,"tag":566,"props":888,"children":889},{"style":829},[890],{"type":539,"value":848},{"type":534,"tag":566,"props":892,"children":893},{"style":851},[894],{"type":539,"value":854},{"type":534,"tag":566,"props":896,"children":897},{"style":857},[898],{"type":539,"value":860},{"type":534,"tag":566,"props":900,"children":901},{"style":851},[902],{"type":539,"value":865},{"type":534,"tag":566,"props":904,"children":905},{"style":868},[906],{"type":539,"value":871},{"type":534,"tag":566,"props":908,"children":909},{"style":851},[910],{"type":539,"value":876},{"type":534,"tag":566,"props":912,"children":913},{"style":879},[914],{"type":539,"value":915}," text2\n",{"type":534,"tag":566,"props":917,"children":919},{"class":568,"line":918},5,[920,924,928,933,937,942],{"type":534,"tag":566,"props":921,"children":922},{"style":829},[923],{"type":539,"value":848},{"type":534,"tag":566,"props":925,"children":926},{"style":851},[927],{"type":539,"value":854},{"type":534,"tag":566,"props":929,"children":930},{"style":857},[931],{"type":539,"value":932},"return",{"type":534,"tag":566,"props":934,"children":935},{"style":851},[936],{"type":539,"value":865},{"type":534,"tag":566,"props":938,"children":939},{"style":868},[940],{"type":539,"value":941},"number",{"type":534,"tag":566,"props":943,"children":944},{"style":851},[945],{"type":539,"value":946},"}\n",{"type":534,"tag":566,"props":948,"children":950},{"class":568,"line":949},6,[951],{"type":534,"tag":566,"props":952,"children":953},{"style":829},[954],{"type":539,"value":955}," */\n",{"type":534,"tag":566,"props":957,"children":959},{"class":568,"line":958},7,[960,966,972,977,982,987,992,997,1002,1007],{"type":534,"tag":566,"props":961,"children":963},{"style":962},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[964],{"type":539,"value":965},"var",{"type":534,"tag":566,"props":967,"children":969},{"style":968},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[970],{"type":539,"value":971}," longestCommonSubsequence",{"type":534,"tag":566,"props":973,"children":974},{"style":851},[975],{"type":539,"value":976}," =",{"type":534,"tag":566,"props":978,"children":979},{"style":962},[980],{"type":539,"value":981}," function",{"type":534,"tag":566,"props":983,"children":984},{"style":851},[985],{"type":539,"value":986}," (",{"type":534,"tag":566,"props":988,"children":989},{"style":879},[990],{"type":539,"value":991},"text1",{"type":534,"tag":566,"props":993,"children":994},{"style":851},[995],{"type":539,"value":996},",",{"type":534,"tag":566,"props":998,"children":999},{"style":879},[1000],{"type":539,"value":1001}," text2",{"type":534,"tag":566,"props":1003,"children":1004},{"style":851},[1005],{"type":539,"value":1006},")",{"type":534,"tag":566,"props":1008,"children":1009},{"style":851},[1010],{"type":539,"value":1011}," {\n",{"type":534,"tag":566,"props":1013,"children":1015},{"class":568,"line":1014},8,[1016,1021,1026,1030,1035,1040,1046],{"type":534,"tag":566,"props":1017,"children":1018},{"style":962},[1019],{"type":539,"value":1020},"  let",{"type":534,"tag":566,"props":1022,"children":1023},{"style":879},[1024],{"type":539,"value":1025}," m",{"type":534,"tag":566,"props":1027,"children":1028},{"style":851},[1029],{"type":539,"value":976},{"type":534,"tag":566,"props":1031,"children":1032},{"style":879},[1033],{"type":539,"value":1034}," text1",{"type":534,"tag":566,"props":1036,"children":1037},{"style":851},[1038],{"type":539,"value":1039},".",{"type":534,"tag":566,"props":1041,"children":1043},{"style":1042},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1044],{"type":539,"value":1045},"length",{"type":534,"tag":566,"props":1047,"children":1048},{"style":851},[1049],{"type":539,"value":1050},";\n",{"type":534,"tag":566,"props":1052,"children":1054},{"class":568,"line":1053},9,[1055,1059,1064,1068,1072,1076,1080],{"type":534,"tag":566,"props":1056,"children":1057},{"style":962},[1058],{"type":539,"value":1020},{"type":534,"tag":566,"props":1060,"children":1061},{"style":879},[1062],{"type":539,"value":1063}," n",{"type":534,"tag":566,"props":1065,"children":1066},{"style":851},[1067],{"type":539,"value":976},{"type":534,"tag":566,"props":1069,"children":1070},{"style":879},[1071],{"type":539,"value":1001},{"type":534,"tag":566,"props":1073,"children":1074},{"style":851},[1075],{"type":539,"value":1039},{"type":534,"tag":566,"props":1077,"children":1078},{"style":1042},[1079],{"type":539,"value":1045},{"type":534,"tag":566,"props":1081,"children":1082},{"style":851},[1083],{"type":539,"value":1050},{"type":534,"tag":566,"props":1085,"children":1087},{"class":568,"line":1086},10,[1088,1092,1097,1101,1106,1111,1116,1121,1126,1132,1137,1142,1146,1151,1155,1160,1165,1170,1174,1178,1182,1187,1191,1195,1199,1203,1207,1211],{"type":534,"tag":566,"props":1089,"children":1090},{"style":962},[1091],{"type":539,"value":1020},{"type":534,"tag":566,"props":1093,"children":1094},{"style":879},[1095],{"type":539,"value":1096}," dp",{"type":534,"tag":566,"props":1098,"children":1099},{"style":851},[1100],{"type":539,"value":976},{"type":534,"tag":566,"props":1102,"children":1103},{"style":962},[1104],{"type":539,"value":1105}," new",{"type":534,"tag":566,"props":1107,"children":1108},{"style":968},[1109],{"type":539,"value":1110}," Array",{"type":534,"tag":566,"props":1112,"children":1113},{"style":851},[1114],{"type":539,"value":1115},"(",{"type":534,"tag":566,"props":1117,"children":1118},{"style":879},[1119],{"type":539,"value":1120},"m",{"type":534,"tag":566,"props":1122,"children":1123},{"style":962},[1124],{"type":539,"value":1125}," +",{"type":534,"tag":566,"props":1127,"children":1129},{"style":1128},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1130],{"type":539,"value":1131}," 1",{"type":534,"tag":566,"props":1133,"children":1134},{"style":851},[1135],{"type":539,"value":1136},").",{"type":534,"tag":566,"props":1138,"children":1139},{"style":968},[1140],{"type":539,"value":1141},"fill",{"type":534,"tag":566,"props":1143,"children":1144},{"style":851},[1145],{"type":539,"value":1115},{"type":534,"tag":566,"props":1147,"children":1148},{"style":1128},[1149],{"type":539,"value":1150},"0",{"type":534,"tag":566,"props":1152,"children":1153},{"style":851},[1154],{"type":539,"value":1136},{"type":534,"tag":566,"props":1156,"children":1157},{"style":968},[1158],{"type":539,"value":1159},"map",{"type":534,"tag":566,"props":1161,"children":1162},{"style":851},[1163],{"type":539,"value":1164},"(()",{"type":534,"tag":566,"props":1166,"children":1167},{"style":851},[1168],{"type":539,"value":1169}," =>",{"type":534,"tag":566,"props":1171,"children":1172},{"style":962},[1173],{"type":539,"value":1105},{"type":534,"tag":566,"props":1175,"children":1176},{"style":968},[1177],{"type":539,"value":1110},{"type":534,"tag":566,"props":1179,"children":1180},{"style":851},[1181],{"type":539,"value":1115},{"type":534,"tag":566,"props":1183,"children":1184},{"style":879},[1185],{"type":539,"value":1186},"n",{"type":534,"tag":566,"props":1188,"children":1189},{"style":962},[1190],{"type":539,"value":1125},{"type":534,"tag":566,"props":1192,"children":1193},{"style":1128},[1194],{"type":539,"value":1131},{"type":534,"tag":566,"props":1196,"children":1197},{"style":851},[1198],{"type":539,"value":1136},{"type":534,"tag":566,"props":1200,"children":1201},{"style":968},[1202],{"type":539,"value":1141},{"type":534,"tag":566,"props":1204,"children":1205},{"style":851},[1206],{"type":539,"value":1115},{"type":534,"tag":566,"props":1208,"children":1209},{"style":1128},[1210],{"type":539,"value":1150},{"type":534,"tag":566,"props":1212,"children":1213},{"style":851},[1214],{"type":539,"value":1215},"));\n",{"type":534,"tag":566,"props":1217,"children":1219},{"class":568,"line":1218},11,[1220,1225,1229,1234,1239,1243,1247,1252,1256,1261,1265,1269,1273,1278,1282],{"type":534,"tag":566,"props":1221,"children":1222},{"style":857},[1223],{"type":539,"value":1224},"  for",{"type":534,"tag":566,"props":1226,"children":1227},{"style":851},[1228],{"type":539,"value":986},{"type":534,"tag":566,"props":1230,"children":1231},{"style":962},[1232],{"type":539,"value":1233},"let",{"type":534,"tag":566,"props":1235,"children":1236},{"style":879},[1237],{"type":539,"value":1238}," i",{"type":534,"tag":566,"props":1240,"children":1241},{"style":851},[1242],{"type":539,"value":976},{"type":534,"tag":566,"props":1244,"children":1245},{"style":1128},[1246],{"type":539,"value":1131},{"type":534,"tag":566,"props":1248,"children":1249},{"style":851},[1250],{"type":539,"value":1251},";",{"type":534,"tag":566,"props":1253,"children":1254},{"style":879},[1255],{"type":539,"value":1238},{"type":534,"tag":566,"props":1257,"children":1258},{"style":851},[1259],{"type":539,"value":1260}," \u003C=",{"type":534,"tag":566,"props":1262,"children":1263},{"style":879},[1264],{"type":539,"value":1025},{"type":534,"tag":566,"props":1266,"children":1267},{"style":851},[1268],{"type":539,"value":1251},{"type":534,"tag":566,"props":1270,"children":1271},{"style":879},[1272],{"type":539,"value":1238},{"type":534,"tag":566,"props":1274,"children":1275},{"style":962},[1276],{"type":539,"value":1277},"++",{"type":534,"tag":566,"props":1279,"children":1280},{"style":851},[1281],{"type":539,"value":1006},{"type":534,"tag":566,"props":1283,"children":1284},{"style":851},[1285],{"type":539,"value":1011},{"type":534,"tag":566,"props":1287,"children":1289},{"class":568,"line":1288},12,[1290,1295,1300,1304,1308,1313,1318,1323,1327],{"type":534,"tag":566,"props":1291,"children":1292},{"style":962},[1293],{"type":539,"value":1294},"    const",{"type":534,"tag":566,"props":1296,"children":1297},{"style":879},[1298],{"type":539,"value":1299}," str1",{"type":534,"tag":566,"props":1301,"children":1302},{"style":851},[1303],{"type":539,"value":976},{"type":534,"tag":566,"props":1305,"children":1306},{"style":879},[1307],{"type":539,"value":1034},{"type":534,"tag":566,"props":1309,"children":1310},{"style":851},[1311],{"type":539,"value":1312},"[",{"type":534,"tag":566,"props":1314,"children":1315},{"style":879},[1316],{"type":539,"value":1317},"i",{"type":534,"tag":566,"props":1319,"children":1320},{"style":962},[1321],{"type":539,"value":1322}," -",{"type":534,"tag":566,"props":1324,"children":1325},{"style":1128},[1326],{"type":539,"value":1131},{"type":534,"tag":566,"props":1328,"children":1329},{"style":851},[1330],{"type":539,"value":1331},"];\n",{"type":534,"tag":566,"props":1333,"children":1335},{"class":568,"line":1334},13,[1336,1341,1345,1349,1354,1358,1362,1366,1370,1374,1378,1382,1386,1390,1394],{"type":534,"tag":566,"props":1337,"children":1338},{"style":857},[1339],{"type":539,"value":1340},"    for",{"type":534,"tag":566,"props":1342,"children":1343},{"style":851},[1344],{"type":539,"value":986},{"type":534,"tag":566,"props":1346,"children":1347},{"style":962},[1348],{"type":539,"value":1233},{"type":534,"tag":566,"props":1350,"children":1351},{"style":879},[1352],{"type":539,"value":1353}," j",{"type":534,"tag":566,"props":1355,"children":1356},{"style":851},[1357],{"type":539,"value":976},{"type":534,"tag":566,"props":1359,"children":1360},{"style":1128},[1361],{"type":539,"value":1131},{"type":534,"tag":566,"props":1363,"children":1364},{"style":851},[1365],{"type":539,"value":1251},{"type":534,"tag":566,"props":1367,"children":1368},{"style":879},[1369],{"type":539,"value":1353},{"type":534,"tag":566,"props":1371,"children":1372},{"style":851},[1373],{"type":539,"value":1260},{"type":534,"tag":566,"props":1375,"children":1376},{"style":879},[1377],{"type":539,"value":1063},{"type":534,"tag":566,"props":1379,"children":1380},{"style":851},[1381],{"type":539,"value":1251},{"type":534,"tag":566,"props":1383,"children":1384},{"style":879},[1385],{"type":539,"value":1353},{"type":534,"tag":566,"props":1387,"children":1388},{"style":962},[1389],{"type":539,"value":1277},{"type":534,"tag":566,"props":1391,"children":1392},{"style":851},[1393],{"type":539,"value":1006},{"type":534,"tag":566,"props":1395,"children":1396},{"style":851},[1397],{"type":539,"value":1011},{"type":534,"tag":566,"props":1399,"children":1401},{"class":568,"line":1400},14,[1402,1407,1412,1416,1420,1424,1429,1433,1437],{"type":534,"tag":566,"props":1403,"children":1404},{"style":962},[1405],{"type":539,"value":1406},"      const",{"type":534,"tag":566,"props":1408,"children":1409},{"style":879},[1410],{"type":539,"value":1411}," str2",{"type":534,"tag":566,"props":1413,"children":1414},{"style":851},[1415],{"type":539,"value":976},{"type":534,"tag":566,"props":1417,"children":1418},{"style":879},[1419],{"type":539,"value":1001},{"type":534,"tag":566,"props":1421,"children":1422},{"style":851},[1423],{"type":539,"value":1312},{"type":534,"tag":566,"props":1425,"children":1426},{"style":879},[1427],{"type":539,"value":1428},"j",{"type":534,"tag":566,"props":1430,"children":1431},{"style":962},[1432],{"type":539,"value":1322},{"type":534,"tag":566,"props":1434,"children":1435},{"style":1128},[1436],{"type":539,"value":1131},{"type":534,"tag":566,"props":1438,"children":1439},{"style":851},[1440],{"type":539,"value":1331},{"type":534,"tag":566,"props":1442,"children":1444},{"class":568,"line":1443},15,[1445,1450,1454,1459,1464,1468,1472],{"type":534,"tag":566,"props":1446,"children":1447},{"style":857},[1448],{"type":539,"value":1449},"      if",{"type":534,"tag":566,"props":1451,"children":1452},{"style":851},[1453],{"type":539,"value":986},{"type":534,"tag":566,"props":1455,"children":1456},{"style":879},[1457],{"type":539,"value":1458},"str1",{"type":534,"tag":566,"props":1460,"children":1461},{"style":962},[1462],{"type":539,"value":1463}," ===",{"type":534,"tag":566,"props":1465,"children":1466},{"style":879},[1467],{"type":539,"value":1411},{"type":534,"tag":566,"props":1469,"children":1470},{"style":851},[1471],{"type":539,"value":1006},{"type":534,"tag":566,"props":1473,"children":1474},{"style":851},[1475],{"type":539,"value":1011},{"type":534,"tag":566,"props":1477,"children":1479},{"class":568,"line":1478},16,[1480,1485,1489,1493,1498,1502,1507,1511,1515,1519,1523,1527,1531,1535,1539,1543,1547,1551,1555,1559],{"type":534,"tag":566,"props":1481,"children":1482},{"style":879},[1483],{"type":539,"value":1484},"        dp",{"type":534,"tag":566,"props":1486,"children":1487},{"style":851},[1488],{"type":539,"value":1312},{"type":534,"tag":566,"props":1490,"children":1491},{"style":879},[1492],{"type":539,"value":1317},{"type":534,"tag":566,"props":1494,"children":1495},{"style":851},[1496],{"type":539,"value":1497},"][",{"type":534,"tag":566,"props":1499,"children":1500},{"style":879},[1501],{"type":539,"value":1428},{"type":534,"tag":566,"props":1503,"children":1504},{"style":851},[1505],{"type":539,"value":1506},"]",{"type":534,"tag":566,"props":1508,"children":1509},{"style":851},[1510],{"type":539,"value":976},{"type":534,"tag":566,"props":1512,"children":1513},{"style":879},[1514],{"type":539,"value":1096},{"type":534,"tag":566,"props":1516,"children":1517},{"style":851},[1518],{"type":539,"value":1312},{"type":534,"tag":566,"props":1520,"children":1521},{"style":879},[1522],{"type":539,"value":1317},{"type":534,"tag":566,"props":1524,"children":1525},{"style":962},[1526],{"type":539,"value":1322},{"type":534,"tag":566,"props":1528,"children":1529},{"style":1128},[1530],{"type":539,"value":1131},{"type":534,"tag":566,"props":1532,"children":1533},{"style":851},[1534],{"type":539,"value":1497},{"type":534,"tag":566,"props":1536,"children":1537},{"style":879},[1538],{"type":539,"value":1428},{"type":534,"tag":566,"props":1540,"children":1541},{"style":962},[1542],{"type":539,"value":1322},{"type":534,"tag":566,"props":1544,"children":1545},{"style":1128},[1546],{"type":539,"value":1131},{"type":534,"tag":566,"props":1548,"children":1549},{"style":851},[1550],{"type":539,"value":1506},{"type":534,"tag":566,"props":1552,"children":1553},{"style":962},[1554],{"type":539,"value":1125},{"type":534,"tag":566,"props":1556,"children":1557},{"style":1128},[1558],{"type":539,"value":1131},{"type":534,"tag":566,"props":1560,"children":1561},{"style":851},[1562],{"type":539,"value":1050},{"type":534,"tag":566,"props":1564,"children":1566},{"class":568,"line":1565},17,[1567,1572,1577],{"type":534,"tag":566,"props":1568,"children":1569},{"style":851},[1570],{"type":539,"value":1571},"      }",{"type":534,"tag":566,"props":1573,"children":1574},{"style":857},[1575],{"type":539,"value":1576}," else",{"type":534,"tag":566,"props":1578,"children":1579},{"style":851},[1580],{"type":539,"value":1011},{"type":534,"tag":566,"props":1582,"children":1584},{"class":568,"line":1583},18,[1585,1589,1593,1597,1601,1605,1609,1613,1618,1622,1627,1631,1636,1640,1644,1648,1652,1656,1660,1665,1669,1673,1677,1681,1685,1689,1693],{"type":534,"tag":566,"props":1586,"children":1587},{"style":879},[1588],{"type":539,"value":1484},{"type":534,"tag":566,"props":1590,"children":1591},{"style":851},[1592],{"type":539,"value":1312},{"type":534,"tag":566,"props":1594,"children":1595},{"style":879},[1596],{"type":539,"value":1317},{"type":534,"tag":566,"props":1598,"children":1599},{"style":851},[1600],{"type":539,"value":1497},{"type":534,"tag":566,"props":1602,"children":1603},{"style":879},[1604],{"type":539,"value":1428},{"type":534,"tag":566,"props":1606,"children":1607},{"style":851},[1608],{"type":539,"value":1506},{"type":534,"tag":566,"props":1610,"children":1611},{"style":851},[1612],{"type":539,"value":976},{"type":534,"tag":566,"props":1614,"children":1615},{"style":879},[1616],{"type":539,"value":1617}," Math",{"type":534,"tag":566,"props":1619,"children":1620},{"style":851},[1621],{"type":539,"value":1039},{"type":534,"tag":566,"props":1623,"children":1624},{"style":968},[1625],{"type":539,"value":1626},"max",{"type":534,"tag":566,"props":1628,"children":1629},{"style":851},[1630],{"type":539,"value":1115},{"type":534,"tag":566,"props":1632,"children":1633},{"style":879},[1634],{"type":539,"value":1635},"dp",{"type":534,"tag":566,"props":1637,"children":1638},{"style":851},[1639],{"type":539,"value":1312},{"type":534,"tag":566,"props":1641,"children":1642},{"style":879},[1643],{"type":539,"value":1317},{"type":534,"tag":566,"props":1645,"children":1646},{"style":962},[1647],{"type":539,"value":1322},{"type":534,"tag":566,"props":1649,"children":1650},{"style":1128},[1651],{"type":539,"value":1131},{"type":534,"tag":566,"props":1653,"children":1654},{"style":851},[1655],{"type":539,"value":1497},{"type":534,"tag":566,"props":1657,"children":1658},{"style":879},[1659],{"type":539,"value":1428},{"type":534,"tag":566,"props":1661,"children":1662},{"style":851},[1663],{"type":539,"value":1664},"],",{"type":534,"tag":566,"props":1666,"children":1667},{"style":879},[1668],{"type":539,"value":1096},{"type":534,"tag":566,"props":1670,"children":1671},{"style":851},[1672],{"type":539,"value":1312},{"type":534,"tag":566,"props":1674,"children":1675},{"style":879},[1676],{"type":539,"value":1317},{"type":534,"tag":566,"props":1678,"children":1679},{"style":851},[1680],{"type":539,"value":1497},{"type":534,"tag":566,"props":1682,"children":1683},{"style":879},[1684],{"type":539,"value":1428},{"type":534,"tag":566,"props":1686,"children":1687},{"style":962},[1688],{"type":539,"value":1322},{"type":534,"tag":566,"props":1690,"children":1691},{"style":1128},[1692],{"type":539,"value":1131},{"type":534,"tag":566,"props":1694,"children":1695},{"style":851},[1696],{"type":539,"value":1697},"]);\n",{"type":534,"tag":566,"props":1699,"children":1701},{"class":568,"line":1700},19,[1702],{"type":534,"tag":566,"props":1703,"children":1704},{"style":851},[1705],{"type":539,"value":1706},"      }\n",{"type":534,"tag":566,"props":1708,"children":1710},{"class":568,"line":1709},20,[1711],{"type":534,"tag":566,"props":1712,"children":1713},{"style":851},[1714],{"type":539,"value":1715},"    }\n",{"type":534,"tag":566,"props":1717,"children":1719},{"class":568,"line":1718},21,[1720],{"type":534,"tag":566,"props":1721,"children":1722},{"style":851},[1723],{"type":539,"value":1724},"  }\n",{"type":534,"tag":566,"props":1726,"children":1728},{"class":568,"line":1727},22,[1729,1734,1738,1742,1746,1750,1754],{"type":534,"tag":566,"props":1730,"children":1731},{"style":857},[1732],{"type":539,"value":1733},"  return",{"type":534,"tag":566,"props":1735,"children":1736},{"style":879},[1737],{"type":539,"value":1096},{"type":534,"tag":566,"props":1739,"children":1740},{"style":851},[1741],{"type":539,"value":1312},{"type":534,"tag":566,"props":1743,"children":1744},{"style":879},[1745],{"type":539,"value":1120},{"type":534,"tag":566,"props":1747,"children":1748},{"style":851},[1749],{"type":539,"value":1497},{"type":534,"tag":566,"props":1751,"children":1752},{"style":879},[1753],{"type":539,"value":1186},{"type":534,"tag":566,"props":1755,"children":1756},{"style":851},[1757],{"type":539,"value":1331},{"type":534,"tag":566,"props":1759,"children":1761},{"class":568,"line":1760},23,[1762],{"type":534,"tag":566,"props":1763,"children":1764},{"style":851},[1765],{"type":539,"value":1766},"};\n",{"type":534,"tag":1768,"props":1769,"children":1770},"style",{},[1771],{"type":539,"value":1772},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":527,"searchDepth":918,"depth":918,"links":1774},[1775,1780],{"id":688,"depth":578,"text":688,"children":1776},[1777,1778,1779],{"id":699,"depth":587,"text":699},{"id":714,"depth":587,"text":714},{"id":772,"depth":587,"text":772},{"id":807,"depth":578,"text":807,"children":1781},[1782],{"id":812,"depth":587,"text":812},"markdown","content:1.algorithm:3.leetcode:3.major:1143.longest-common-subsequence.md","content","1.algorithm/3.leetcode/3.major/1143.longest-common-subsequence.md","md",[1789,1791],{"_path":258,"title":257,"description":1790},"对于字符串 s 和 t，只有在 s = t + t + t + ... + t + t（t 自身连接 1 次或多次）时，我们才认定 “t 能除尽 s”。",{"_path":264,"title":263,"description":1792},"给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。",1714096145966]