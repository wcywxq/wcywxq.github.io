[{"data":1,"prerenderedAt":1828},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/longest-common-subsequence":559,"/algorithm/leetcode/major/longest-common-subsequence-surround":1823},[4,272,318,536,544],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":317},"八股文","/endorsement",[276,286,293,304],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"JavaScript","/endorsement/javascript",[290],{"title":291,"_path":292},"语法和数据类型","/endorsement/javascript/grammar-data-types",{"title":294,"_path":295,"children":296},"构建工具","/endorsement/build-tools",[297],{"title":298,"_path":299,"children":300},"Webpack","/endorsement/build-tools/webpack",[301],{"title":302,"_path":303},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":305,"_path":306,"children":307},"Html","/endorsement/html",[308,311,314],{"title":309,"_path":310},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":312,"_path":313},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":315,"_path":316},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":319,"_path":320,"children":321,"icon":535},"代码考核","/code-assessment",[322,427,528],{"title":323,"_path":324,"children":325},"源码实现","/code-assessment/source",[326,360,376,404,411,418,421,424],{"title":327,"_path":328,"children":329},"原生 api","/code-assessment/source/native-api",[330,333,336,339,342,345,348,351,354,357],{"title":331,"_path":332},"polyfill","/code-assessment/source/native-api/polyfill",{"title":334,"_path":335},"ajax","/code-assessment/source/native-api/ajax",{"title":337,"_path":338},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":340,"_path":341},"new 操作符","/code-assessment/source/native-api/new",{"title":343,"_path":344},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":346,"_path":347},"定时器","/code-assessment/source/native-api/timer",{"title":349,"_path":350},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":352,"_path":353},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":355,"_path":356},"extends","/code-assessment/source/native-api/extends",{"title":358,"_path":359},"Promise","/code-assessment/source/native-api/promise",{"title":361,"_path":362,"children":363},"函数 Function","/code-assessment/source/function",[364,367,370,373],{"title":365,"_path":366},"函数防抖","/code-assessment/source/function/debounce",{"title":368,"_path":369},"函数节流","/code-assessment/source/function/throttle",{"title":371,"_path":372},"函数柯理化","/code-assessment/source/function/curry",{"title":374,"_path":375},"函数睡眠","/code-assessment/source/function/sleep",{"title":377,"_path":378,"children":379},"数组 Array","/code-assessment/source/array",[380,383,386,389,392,395,398,401],{"title":381,"_path":382},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":384,"_path":385},"数组扁平化","/code-assessment/source/array/flat",{"title":387,"_path":388},"原型方法","/code-assessment/source/array/prototype-method",{"title":390,"_path":391},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":393,"_path":394},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":396,"_path":397},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":399,"_path":400},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":402,"_path":403},"二维数组","/code-assessment/source/array/2d-array",{"title":405,"_path":406,"children":407},"字符串 String","/code-assessment/source/string",[408],{"title":409,"_path":410},"repeat()","/code-assessment/source/string/repeat",{"title":412,"_path":413,"children":414},"集合 Set","/code-assessment/source/set",[415],{"title":416,"_path":417},"遍历集合","/code-assessment/source/set/traverse",{"title":419,"_path":420},"获取通用类型","/code-assessment/source/get-generic-type",{"title":422,"_path":423},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":425,"_path":426},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":428,"_path":429,"children":430},"业务场景","/code-assessment/scene",[431,461,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525],{"title":358,"_path":432,"children":433},"/code-assessment/scene/promise",[434,437,440,443,446,449,452,455,458],{"title":435,"_path":436},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":438,"_path":439},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":441,"_path":442},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":444,"_path":445},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":447,"_path":448},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":450,"_path":451},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":453,"_path":454},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":456,"_path":457},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":459,"_path":460},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":462,"_path":463,"children":464},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[465,468],{"title":466,"_path":467},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":469,"_path":470},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":472,"_path":473},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":475,"_path":476},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":478,"_path":479},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":481,"_path":482},"倒计时","/code-assessment/scene/countdown",{"title":484,"_path":485},"日期格式化","/code-assessment/scene/date-format",{"title":487,"_path":488},"实现前端路由","/code-assessment/scene/frontend-route",{"title":490,"_path":491},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":493,"_path":494},"lodash.get","/code-assessment/scene/lodash-get",{"title":496,"_path":497},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":499,"_path":500},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":502,"_path":503},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":505,"_path":506},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":508,"_path":509},"随机数","/code-assessment/scene/random-number",{"title":511,"_path":512},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":514,"_path":515},"sku 算法实现","/code-assessment/scene/sku",{"title":517,"_path":518},"整数分割","/code-assessment/scene/split-number",{"title":520,"_path":521},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":523,"_path":524},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":526,"_path":527},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":529,"_path":530,"children":531},"Ts 类型挑战","/code-assessment/type-challeges",[532],{"title":533,"_path":534},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":537,"_path":538,"children":539,"icon":543},"项目","/project",[540],{"title":541,"_path":542},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":545,"_path":546,"children":547,"icon":558},"后端语言","/backend-languages",[548],{"title":549,"_path":550,"children":551},"Python","/backend-languages/python",[552,555],{"title":553,"_path":554},"基础","/backend-languages/python/base",{"title":556,"_path":557},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":264,"_dir":560,"_draft":561,"_partial":561,"_locale":562,"title":263,"description":563,"url":564,"body":565,"_type":1818,"_id":1819,"_source":1820,"_file":1821,"_extension":1822},"major",false,"","给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。","https://leetcode.cn/problems/longest-common-subsequence",{"type":566,"children":567,"toc":1808},"root",[568,575,580,585,590,629,634,664,669,700,705,720,726,731,737,742,747,752,805,810,819,832,840,845,850,1802],{"type":569,"tag":570,"props":571,"children":572},"element","p",{},[573],{"type":574,"value":563},"text",{"type":569,"tag":570,"props":576,"children":577},{},[578],{"type":574,"value":579},"一个字符串的 子序列 是指这样一个新的字符串：它是由原字符串在不改变字符的相对顺序的情况下删除某些字符（也可以不删除任何字符）后组成的新字符串。",{"type":569,"tag":570,"props":581,"children":582},{},[583],{"type":574,"value":584},"例如，\"ace\" 是 \"abcde\" 的子序列，但 \"aec\" 不是 \"abcde\" 的子序列。\n两个字符串的 公共子序列 是这两个字符串所共同拥有的子序列。",{"type":569,"tag":570,"props":586,"children":587},{},[588],{"type":574,"value":589},"示例 1：",{"type":569,"tag":591,"props":592,"children":595},"pre",{"className":593,"code":594,"language":574,"meta":562,"style":562},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：text1 = \"abcde\", text2 = \"ace\"\n输出：3\n解释：最长公共子序列是 \"ace\" ，它的长度为 3 。\n",[596],{"type":569,"tag":597,"props":598,"children":599},"code",{"__ignoreMap":562},[600,611,620],{"type":569,"tag":601,"props":602,"children":605},"span",{"class":603,"line":604},"line",1,[606],{"type":569,"tag":601,"props":607,"children":608},{},[609],{"type":574,"value":610},"输入：text1 = \"abcde\", text2 = \"ace\"\n",{"type":569,"tag":601,"props":612,"children":614},{"class":603,"line":613},2,[615],{"type":569,"tag":601,"props":616,"children":617},{},[618],{"type":574,"value":619},"输出：3\n",{"type":569,"tag":601,"props":621,"children":623},{"class":603,"line":622},3,[624],{"type":569,"tag":601,"props":625,"children":626},{},[627],{"type":574,"value":628},"解释：最长公共子序列是 \"ace\" ，它的长度为 3 。\n",{"type":569,"tag":570,"props":630,"children":631},{},[632],{"type":574,"value":633},"示例 2：",{"type":569,"tag":591,"props":635,"children":637},{"className":593,"code":636,"language":574,"meta":562,"style":562},"输入：text1 = \"abc\", text2 = \"abc\"\n输出：3\n解释：最长公共子序列是 \"abc\" ，它的长度为 3 。\n",[638],{"type":569,"tag":597,"props":639,"children":640},{"__ignoreMap":562},[641,649,656],{"type":569,"tag":601,"props":642,"children":643},{"class":603,"line":604},[644],{"type":569,"tag":601,"props":645,"children":646},{},[647],{"type":574,"value":648},"输入：text1 = \"abc\", text2 = \"abc\"\n",{"type":569,"tag":601,"props":650,"children":651},{"class":603,"line":613},[652],{"type":569,"tag":601,"props":653,"children":654},{},[655],{"type":574,"value":619},{"type":569,"tag":601,"props":657,"children":658},{"class":603,"line":622},[659],{"type":569,"tag":601,"props":660,"children":661},{},[662],{"type":574,"value":663},"解释：最长公共子序列是 \"abc\" ，它的长度为 3 。\n",{"type":569,"tag":570,"props":665,"children":666},{},[667],{"type":574,"value":668},"示例 3：",{"type":569,"tag":591,"props":670,"children":672},{"className":593,"code":671,"language":574,"meta":562,"style":562},"输入：text1 = \"abc\", text2 = \"def\"\n输出：0\n解释：两个字符串没有公共子序列，返回 0 。\n",[673],{"type":569,"tag":597,"props":674,"children":675},{"__ignoreMap":562},[676,684,692],{"type":569,"tag":601,"props":677,"children":678},{"class":603,"line":604},[679],{"type":569,"tag":601,"props":680,"children":681},{},[682],{"type":574,"value":683},"输入：text1 = \"abc\", text2 = \"def\"\n",{"type":569,"tag":601,"props":685,"children":686},{"class":603,"line":613},[687],{"type":569,"tag":601,"props":688,"children":689},{},[690],{"type":574,"value":691},"输出：0\n",{"type":569,"tag":601,"props":693,"children":694},{"class":603,"line":622},[695],{"type":569,"tag":601,"props":696,"children":697},{},[698],{"type":574,"value":699},"解释：两个字符串没有公共子序列，返回 0 。\n",{"type":569,"tag":570,"props":701,"children":702},{},[703],{"type":574,"value":704},"提示：",{"type":569,"tag":706,"props":707,"children":708},"ul",{},[709,715],{"type":569,"tag":710,"props":711,"children":712},"li",{},[713],{"type":574,"value":714},"1 \u003C= text1.length, text2.length \u003C= 1000",{"type":569,"tag":710,"props":716,"children":717},{},[718],{"type":574,"value":719},"text1 和 text2 仅由小写英文字符组成。",{"type":569,"tag":721,"props":722,"children":724},"h2",{"id":723},"解题思路",[725],{"type":574,"value":723},{"type":569,"tag":570,"props":727,"children":728},{},[729],{"type":574,"value":730},"最长公共子序列问题是典型的二维动态规划问题。",{"type":569,"tag":732,"props":733,"children":735},"h3",{"id":734},"状态",[736],{"type":574,"value":734},{"type":569,"tag":570,"props":738,"children":739},{},[740],{"type":574,"value":741},"假设字符串 text1 和 text2 的长度分别为 m 和 n，创建 m+1 行 n+1 列的二维数组 dp，其中 dp[i][j] 表示 text1[0:i] 和 text2[0:j] 的最长公共子序列的长度",{"type":569,"tag":570,"props":743,"children":744},{},[745],{"type":574,"value":746},"上述表示中，text1[0:i] 表示 text1 的长度为 i 的前缀，text2[0:j] 表示 text2 的长度为 j 的前缀",{"type":569,"tag":732,"props":748,"children":750},{"id":749},"边界",[751],{"type":574,"value":749},{"type":569,"tag":753,"props":754,"children":755},"ol",{},[756,761,766,771],{"type":569,"tag":710,"props":757,"children":758},{},[759],{"type":574,"value":760},"当 i = 0 时，text1[0:i] 为空，空字符串和任何字符串的最长公共子序列的长度都是 0，因此对于任意 0\u003C=j\u003C=n，都有 dp[0][j] = 0；",{"type":569,"tag":710,"props":762,"children":763},{},[764],{"type":574,"value":765},"当 j = 0 时，text2[0:j] 为空，空字符串和任何字符串的最长公共子序列的长度都是 0，因此对于任意 0\u003C=i\u003C=m，都有 dp[i][0] = 0；",{"type":569,"tag":710,"props":767,"children":768},{},[769],{"type":574,"value":770},"因此：当 i = 0 或 j = 0 时，dp[i][j] = 0；",{"type":569,"tag":710,"props":772,"children":773},{},[774,776],{"type":574,"value":775},"当 i > 0 且 j > 0 时，考虑 dp[i][j] 的计算：",{"type":569,"tag":706,"props":777,"children":778},{},[779,792],{"type":569,"tag":710,"props":780,"children":781},{},[782,784,790],{"type":574,"value":783},"当 text1[i-1] = text2[j-1] 时，将这两个相同的字符称为公共字符。考虑 text1[0:i-1] 和 text2[0:j-1] 的最长公共子序列，再增加一个字符（即公共字符）即可得到 text1[0:i] 和 text2[0:j] 的最长公共子序列。因此：",{"type":569,"tag":597,"props":785,"children":787},{"className":786},[],[788],{"type":574,"value":789},"dp[i][j] = dp[i-1][j-1] + 1",{"type":574,"value":791},"；",{"type":569,"tag":710,"props":793,"children":794},{},[795,797,803],{"type":574,"value":796},"当 text1[i-1] != text2[j-1] 时，需要考虑 text1[0:i-1] 和 text2[0:j] 的最长公共子序列；以及 text1[0:i] 和 text2[0:j-1] 的最长公共子序列。要得到 text1[0:i] 和 text2[0:j] 的最长公共子序列，应取两项中长度较大的一项，因此： ",{"type":569,"tag":597,"props":798,"children":800},{"className":799},[],[801],{"type":574,"value":802},"dp[i][j] = max(dp[i-1][j], dp[i][j-1])",{"type":574,"value":804},"。",{"type":569,"tag":732,"props":806,"children":808},{"id":807},"状态转移方程",[809],{"type":574,"value":807},{"type":569,"tag":570,"props":811,"children":812},{},[813],{"type":569,"tag":814,"props":815,"children":818},"img",{"alt":816,"src":817},"function-formula","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.1143_function-formula.png",[],{"type":569,"tag":570,"props":820,"children":821},{},[822,824,830],{"type":574,"value":823},"最终得到 ",{"type":569,"tag":597,"props":825,"children":827},{"className":826},[],[828],{"type":574,"value":829},"dp[m][n]",{"type":574,"value":831}," 即为 text1 和 text2 的最长公共子序列的长度。",{"type":569,"tag":570,"props":833,"children":834},{},[835],{"type":569,"tag":814,"props":836,"children":839},{"alt":837,"src":838},"graphic-solution","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.1143_graphic-solution.png",[],{"type":569,"tag":721,"props":841,"children":843},{"id":842},"实现",[844],{"type":574,"value":842},{"type":569,"tag":732,"props":846,"children":848},{"id":847},"动态规划",[849],{"type":574,"value":847},{"type":569,"tag":591,"props":851,"children":855},{"className":852,"code":853,"language":854,"meta":562,"style":562},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * 二维动态规划\n * @param {string} text1\n * @param {string} text2\n * @return {number}\n */\nvar longestCommonSubsequence = function (text1, text2) {\n  let m = text1.length;\n  let n = text2.length;\n  let dp = new Array(m + 1).fill(0).map(() => new Array(n + 1).fill(0));\n  for (let i = 1; i \u003C= m; i++) {\n    const str1 = text1[i - 1];\n    for (let j = 1; j \u003C= n; j++) {\n      const str2 = text2[j - 1];\n      if (str1 === str2) {\n        dp[i][j] = dp[i - 1][j - 1] + 1;\n      } else {\n        dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);\n      }\n    }\n  }\n  return dp[m][n];\n};\n","js",[856],{"type":569,"tag":597,"props":857,"children":858},{"__ignoreMap":562},[859,868,876,918,951,982,991,1047,1086,1119,1251,1321,1367,1433,1476,1511,1598,1616,1733,1742,1751,1760,1793],{"type":569,"tag":601,"props":860,"children":861},{"class":603,"line":604},[862],{"type":569,"tag":601,"props":863,"children":865},{"style":864},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[866],{"type":574,"value":867},"/**\n",{"type":569,"tag":601,"props":869,"children":870},{"class":603,"line":613},[871],{"type":569,"tag":601,"props":872,"children":873},{"style":864},[874],{"type":574,"value":875}," * 二维动态规划\n",{"type":569,"tag":601,"props":877,"children":878},{"class":603,"line":622},[879,884,890,896,901,907,912],{"type":569,"tag":601,"props":880,"children":881},{"style":864},[882],{"type":574,"value":883}," * ",{"type":569,"tag":601,"props":885,"children":887},{"style":886},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[888],{"type":574,"value":889},"@",{"type":569,"tag":601,"props":891,"children":893},{"style":892},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[894],{"type":574,"value":895},"param",{"type":569,"tag":601,"props":897,"children":898},{"style":886},[899],{"type":574,"value":900}," {",{"type":569,"tag":601,"props":902,"children":904},{"style":903},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[905],{"type":574,"value":906},"string",{"type":569,"tag":601,"props":908,"children":909},{"style":886},[910],{"type":574,"value":911},"}",{"type":569,"tag":601,"props":913,"children":915},{"style":914},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[916],{"type":574,"value":917}," text1\n",{"type":569,"tag":601,"props":919,"children":921},{"class":603,"line":920},4,[922,926,930,934,938,942,946],{"type":569,"tag":601,"props":923,"children":924},{"style":864},[925],{"type":574,"value":883},{"type":569,"tag":601,"props":927,"children":928},{"style":886},[929],{"type":574,"value":889},{"type":569,"tag":601,"props":931,"children":932},{"style":892},[933],{"type":574,"value":895},{"type":569,"tag":601,"props":935,"children":936},{"style":886},[937],{"type":574,"value":900},{"type":569,"tag":601,"props":939,"children":940},{"style":903},[941],{"type":574,"value":906},{"type":569,"tag":601,"props":943,"children":944},{"style":886},[945],{"type":574,"value":911},{"type":569,"tag":601,"props":947,"children":948},{"style":914},[949],{"type":574,"value":950}," text2\n",{"type":569,"tag":601,"props":952,"children":954},{"class":603,"line":953},5,[955,959,963,968,972,977],{"type":569,"tag":601,"props":956,"children":957},{"style":864},[958],{"type":574,"value":883},{"type":569,"tag":601,"props":960,"children":961},{"style":886},[962],{"type":574,"value":889},{"type":569,"tag":601,"props":964,"children":965},{"style":892},[966],{"type":574,"value":967},"return",{"type":569,"tag":601,"props":969,"children":970},{"style":886},[971],{"type":574,"value":900},{"type":569,"tag":601,"props":973,"children":974},{"style":903},[975],{"type":574,"value":976},"number",{"type":569,"tag":601,"props":978,"children":979},{"style":886},[980],{"type":574,"value":981},"}\n",{"type":569,"tag":601,"props":983,"children":985},{"class":603,"line":984},6,[986],{"type":569,"tag":601,"props":987,"children":988},{"style":864},[989],{"type":574,"value":990}," */\n",{"type":569,"tag":601,"props":992,"children":994},{"class":603,"line":993},7,[995,1001,1007,1012,1017,1022,1027,1032,1037,1042],{"type":569,"tag":601,"props":996,"children":998},{"style":997},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[999],{"type":574,"value":1000},"var",{"type":569,"tag":601,"props":1002,"children":1004},{"style":1003},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[1005],{"type":574,"value":1006}," longestCommonSubsequence",{"type":569,"tag":601,"props":1008,"children":1009},{"style":886},[1010],{"type":574,"value":1011}," =",{"type":569,"tag":601,"props":1013,"children":1014},{"style":997},[1015],{"type":574,"value":1016}," function",{"type":569,"tag":601,"props":1018,"children":1019},{"style":886},[1020],{"type":574,"value":1021}," (",{"type":569,"tag":601,"props":1023,"children":1024},{"style":914},[1025],{"type":574,"value":1026},"text1",{"type":569,"tag":601,"props":1028,"children":1029},{"style":886},[1030],{"type":574,"value":1031},",",{"type":569,"tag":601,"props":1033,"children":1034},{"style":914},[1035],{"type":574,"value":1036}," text2",{"type":569,"tag":601,"props":1038,"children":1039},{"style":886},[1040],{"type":574,"value":1041},")",{"type":569,"tag":601,"props":1043,"children":1044},{"style":886},[1045],{"type":574,"value":1046}," {\n",{"type":569,"tag":601,"props":1048,"children":1050},{"class":603,"line":1049},8,[1051,1056,1061,1065,1070,1075,1081],{"type":569,"tag":601,"props":1052,"children":1053},{"style":997},[1054],{"type":574,"value":1055},"  let",{"type":569,"tag":601,"props":1057,"children":1058},{"style":914},[1059],{"type":574,"value":1060}," m",{"type":569,"tag":601,"props":1062,"children":1063},{"style":886},[1064],{"type":574,"value":1011},{"type":569,"tag":601,"props":1066,"children":1067},{"style":914},[1068],{"type":574,"value":1069}," text1",{"type":569,"tag":601,"props":1071,"children":1072},{"style":886},[1073],{"type":574,"value":1074},".",{"type":569,"tag":601,"props":1076,"children":1078},{"style":1077},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1079],{"type":574,"value":1080},"length",{"type":569,"tag":601,"props":1082,"children":1083},{"style":886},[1084],{"type":574,"value":1085},";\n",{"type":569,"tag":601,"props":1087,"children":1089},{"class":603,"line":1088},9,[1090,1094,1099,1103,1107,1111,1115],{"type":569,"tag":601,"props":1091,"children":1092},{"style":997},[1093],{"type":574,"value":1055},{"type":569,"tag":601,"props":1095,"children":1096},{"style":914},[1097],{"type":574,"value":1098}," n",{"type":569,"tag":601,"props":1100,"children":1101},{"style":886},[1102],{"type":574,"value":1011},{"type":569,"tag":601,"props":1104,"children":1105},{"style":914},[1106],{"type":574,"value":1036},{"type":569,"tag":601,"props":1108,"children":1109},{"style":886},[1110],{"type":574,"value":1074},{"type":569,"tag":601,"props":1112,"children":1113},{"style":1077},[1114],{"type":574,"value":1080},{"type":569,"tag":601,"props":1116,"children":1117},{"style":886},[1118],{"type":574,"value":1085},{"type":569,"tag":601,"props":1120,"children":1122},{"class":603,"line":1121},10,[1123,1127,1132,1136,1141,1146,1151,1156,1161,1167,1172,1177,1181,1186,1190,1195,1200,1205,1209,1213,1217,1222,1226,1230,1234,1238,1242,1246],{"type":569,"tag":601,"props":1124,"children":1125},{"style":997},[1126],{"type":574,"value":1055},{"type":569,"tag":601,"props":1128,"children":1129},{"style":914},[1130],{"type":574,"value":1131}," dp",{"type":569,"tag":601,"props":1133,"children":1134},{"style":886},[1135],{"type":574,"value":1011},{"type":569,"tag":601,"props":1137,"children":1138},{"style":997},[1139],{"type":574,"value":1140}," new",{"type":569,"tag":601,"props":1142,"children":1143},{"style":1003},[1144],{"type":574,"value":1145}," Array",{"type":569,"tag":601,"props":1147,"children":1148},{"style":886},[1149],{"type":574,"value":1150},"(",{"type":569,"tag":601,"props":1152,"children":1153},{"style":914},[1154],{"type":574,"value":1155},"m",{"type":569,"tag":601,"props":1157,"children":1158},{"style":997},[1159],{"type":574,"value":1160}," +",{"type":569,"tag":601,"props":1162,"children":1164},{"style":1163},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1165],{"type":574,"value":1166}," 1",{"type":569,"tag":601,"props":1168,"children":1169},{"style":886},[1170],{"type":574,"value":1171},").",{"type":569,"tag":601,"props":1173,"children":1174},{"style":1003},[1175],{"type":574,"value":1176},"fill",{"type":569,"tag":601,"props":1178,"children":1179},{"style":886},[1180],{"type":574,"value":1150},{"type":569,"tag":601,"props":1182,"children":1183},{"style":1163},[1184],{"type":574,"value":1185},"0",{"type":569,"tag":601,"props":1187,"children":1188},{"style":886},[1189],{"type":574,"value":1171},{"type":569,"tag":601,"props":1191,"children":1192},{"style":1003},[1193],{"type":574,"value":1194},"map",{"type":569,"tag":601,"props":1196,"children":1197},{"style":886},[1198],{"type":574,"value":1199},"(()",{"type":569,"tag":601,"props":1201,"children":1202},{"style":886},[1203],{"type":574,"value":1204}," =>",{"type":569,"tag":601,"props":1206,"children":1207},{"style":997},[1208],{"type":574,"value":1140},{"type":569,"tag":601,"props":1210,"children":1211},{"style":1003},[1212],{"type":574,"value":1145},{"type":569,"tag":601,"props":1214,"children":1215},{"style":886},[1216],{"type":574,"value":1150},{"type":569,"tag":601,"props":1218,"children":1219},{"style":914},[1220],{"type":574,"value":1221},"n",{"type":569,"tag":601,"props":1223,"children":1224},{"style":997},[1225],{"type":574,"value":1160},{"type":569,"tag":601,"props":1227,"children":1228},{"style":1163},[1229],{"type":574,"value":1166},{"type":569,"tag":601,"props":1231,"children":1232},{"style":886},[1233],{"type":574,"value":1171},{"type":569,"tag":601,"props":1235,"children":1236},{"style":1003},[1237],{"type":574,"value":1176},{"type":569,"tag":601,"props":1239,"children":1240},{"style":886},[1241],{"type":574,"value":1150},{"type":569,"tag":601,"props":1243,"children":1244},{"style":1163},[1245],{"type":574,"value":1185},{"type":569,"tag":601,"props":1247,"children":1248},{"style":886},[1249],{"type":574,"value":1250},"));\n",{"type":569,"tag":601,"props":1252,"children":1254},{"class":603,"line":1253},11,[1255,1260,1264,1269,1274,1278,1282,1287,1291,1296,1300,1304,1308,1313,1317],{"type":569,"tag":601,"props":1256,"children":1257},{"style":892},[1258],{"type":574,"value":1259},"  for",{"type":569,"tag":601,"props":1261,"children":1262},{"style":886},[1263],{"type":574,"value":1021},{"type":569,"tag":601,"props":1265,"children":1266},{"style":997},[1267],{"type":574,"value":1268},"let",{"type":569,"tag":601,"props":1270,"children":1271},{"style":914},[1272],{"type":574,"value":1273}," i",{"type":569,"tag":601,"props":1275,"children":1276},{"style":886},[1277],{"type":574,"value":1011},{"type":569,"tag":601,"props":1279,"children":1280},{"style":1163},[1281],{"type":574,"value":1166},{"type":569,"tag":601,"props":1283,"children":1284},{"style":886},[1285],{"type":574,"value":1286},";",{"type":569,"tag":601,"props":1288,"children":1289},{"style":914},[1290],{"type":574,"value":1273},{"type":569,"tag":601,"props":1292,"children":1293},{"style":886},[1294],{"type":574,"value":1295}," \u003C=",{"type":569,"tag":601,"props":1297,"children":1298},{"style":914},[1299],{"type":574,"value":1060},{"type":569,"tag":601,"props":1301,"children":1302},{"style":886},[1303],{"type":574,"value":1286},{"type":569,"tag":601,"props":1305,"children":1306},{"style":914},[1307],{"type":574,"value":1273},{"type":569,"tag":601,"props":1309,"children":1310},{"style":997},[1311],{"type":574,"value":1312},"++",{"type":569,"tag":601,"props":1314,"children":1315},{"style":886},[1316],{"type":574,"value":1041},{"type":569,"tag":601,"props":1318,"children":1319},{"style":886},[1320],{"type":574,"value":1046},{"type":569,"tag":601,"props":1322,"children":1324},{"class":603,"line":1323},12,[1325,1330,1335,1339,1343,1348,1353,1358,1362],{"type":569,"tag":601,"props":1326,"children":1327},{"style":997},[1328],{"type":574,"value":1329},"    const",{"type":569,"tag":601,"props":1331,"children":1332},{"style":914},[1333],{"type":574,"value":1334}," str1",{"type":569,"tag":601,"props":1336,"children":1337},{"style":886},[1338],{"type":574,"value":1011},{"type":569,"tag":601,"props":1340,"children":1341},{"style":914},[1342],{"type":574,"value":1069},{"type":569,"tag":601,"props":1344,"children":1345},{"style":886},[1346],{"type":574,"value":1347},"[",{"type":569,"tag":601,"props":1349,"children":1350},{"style":914},[1351],{"type":574,"value":1352},"i",{"type":569,"tag":601,"props":1354,"children":1355},{"style":997},[1356],{"type":574,"value":1357}," -",{"type":569,"tag":601,"props":1359,"children":1360},{"style":1163},[1361],{"type":574,"value":1166},{"type":569,"tag":601,"props":1363,"children":1364},{"style":886},[1365],{"type":574,"value":1366},"];\n",{"type":569,"tag":601,"props":1368,"children":1370},{"class":603,"line":1369},13,[1371,1376,1380,1384,1389,1393,1397,1401,1405,1409,1413,1417,1421,1425,1429],{"type":569,"tag":601,"props":1372,"children":1373},{"style":892},[1374],{"type":574,"value":1375},"    for",{"type":569,"tag":601,"props":1377,"children":1378},{"style":886},[1379],{"type":574,"value":1021},{"type":569,"tag":601,"props":1381,"children":1382},{"style":997},[1383],{"type":574,"value":1268},{"type":569,"tag":601,"props":1385,"children":1386},{"style":914},[1387],{"type":574,"value":1388}," j",{"type":569,"tag":601,"props":1390,"children":1391},{"style":886},[1392],{"type":574,"value":1011},{"type":569,"tag":601,"props":1394,"children":1395},{"style":1163},[1396],{"type":574,"value":1166},{"type":569,"tag":601,"props":1398,"children":1399},{"style":886},[1400],{"type":574,"value":1286},{"type":569,"tag":601,"props":1402,"children":1403},{"style":914},[1404],{"type":574,"value":1388},{"type":569,"tag":601,"props":1406,"children":1407},{"style":886},[1408],{"type":574,"value":1295},{"type":569,"tag":601,"props":1410,"children":1411},{"style":914},[1412],{"type":574,"value":1098},{"type":569,"tag":601,"props":1414,"children":1415},{"style":886},[1416],{"type":574,"value":1286},{"type":569,"tag":601,"props":1418,"children":1419},{"style":914},[1420],{"type":574,"value":1388},{"type":569,"tag":601,"props":1422,"children":1423},{"style":997},[1424],{"type":574,"value":1312},{"type":569,"tag":601,"props":1426,"children":1427},{"style":886},[1428],{"type":574,"value":1041},{"type":569,"tag":601,"props":1430,"children":1431},{"style":886},[1432],{"type":574,"value":1046},{"type":569,"tag":601,"props":1434,"children":1436},{"class":603,"line":1435},14,[1437,1442,1447,1451,1455,1459,1464,1468,1472],{"type":569,"tag":601,"props":1438,"children":1439},{"style":997},[1440],{"type":574,"value":1441},"      const",{"type":569,"tag":601,"props":1443,"children":1444},{"style":914},[1445],{"type":574,"value":1446}," str2",{"type":569,"tag":601,"props":1448,"children":1449},{"style":886},[1450],{"type":574,"value":1011},{"type":569,"tag":601,"props":1452,"children":1453},{"style":914},[1454],{"type":574,"value":1036},{"type":569,"tag":601,"props":1456,"children":1457},{"style":886},[1458],{"type":574,"value":1347},{"type":569,"tag":601,"props":1460,"children":1461},{"style":914},[1462],{"type":574,"value":1463},"j",{"type":569,"tag":601,"props":1465,"children":1466},{"style":997},[1467],{"type":574,"value":1357},{"type":569,"tag":601,"props":1469,"children":1470},{"style":1163},[1471],{"type":574,"value":1166},{"type":569,"tag":601,"props":1473,"children":1474},{"style":886},[1475],{"type":574,"value":1366},{"type":569,"tag":601,"props":1477,"children":1479},{"class":603,"line":1478},15,[1480,1485,1489,1494,1499,1503,1507],{"type":569,"tag":601,"props":1481,"children":1482},{"style":892},[1483],{"type":574,"value":1484},"      if",{"type":569,"tag":601,"props":1486,"children":1487},{"style":886},[1488],{"type":574,"value":1021},{"type":569,"tag":601,"props":1490,"children":1491},{"style":914},[1492],{"type":574,"value":1493},"str1",{"type":569,"tag":601,"props":1495,"children":1496},{"style":997},[1497],{"type":574,"value":1498}," ===",{"type":569,"tag":601,"props":1500,"children":1501},{"style":914},[1502],{"type":574,"value":1446},{"type":569,"tag":601,"props":1504,"children":1505},{"style":886},[1506],{"type":574,"value":1041},{"type":569,"tag":601,"props":1508,"children":1509},{"style":886},[1510],{"type":574,"value":1046},{"type":569,"tag":601,"props":1512,"children":1514},{"class":603,"line":1513},16,[1515,1520,1524,1528,1533,1537,1542,1546,1550,1554,1558,1562,1566,1570,1574,1578,1582,1586,1590,1594],{"type":569,"tag":601,"props":1516,"children":1517},{"style":914},[1518],{"type":574,"value":1519},"        dp",{"type":569,"tag":601,"props":1521,"children":1522},{"style":886},[1523],{"type":574,"value":1347},{"type":569,"tag":601,"props":1525,"children":1526},{"style":914},[1527],{"type":574,"value":1352},{"type":569,"tag":601,"props":1529,"children":1530},{"style":886},[1531],{"type":574,"value":1532},"][",{"type":569,"tag":601,"props":1534,"children":1535},{"style":914},[1536],{"type":574,"value":1463},{"type":569,"tag":601,"props":1538,"children":1539},{"style":886},[1540],{"type":574,"value":1541},"]",{"type":569,"tag":601,"props":1543,"children":1544},{"style":886},[1545],{"type":574,"value":1011},{"type":569,"tag":601,"props":1547,"children":1548},{"style":914},[1549],{"type":574,"value":1131},{"type":569,"tag":601,"props":1551,"children":1552},{"style":886},[1553],{"type":574,"value":1347},{"type":569,"tag":601,"props":1555,"children":1556},{"style":914},[1557],{"type":574,"value":1352},{"type":569,"tag":601,"props":1559,"children":1560},{"style":997},[1561],{"type":574,"value":1357},{"type":569,"tag":601,"props":1563,"children":1564},{"style":1163},[1565],{"type":574,"value":1166},{"type":569,"tag":601,"props":1567,"children":1568},{"style":886},[1569],{"type":574,"value":1532},{"type":569,"tag":601,"props":1571,"children":1572},{"style":914},[1573],{"type":574,"value":1463},{"type":569,"tag":601,"props":1575,"children":1576},{"style":997},[1577],{"type":574,"value":1357},{"type":569,"tag":601,"props":1579,"children":1580},{"style":1163},[1581],{"type":574,"value":1166},{"type":569,"tag":601,"props":1583,"children":1584},{"style":886},[1585],{"type":574,"value":1541},{"type":569,"tag":601,"props":1587,"children":1588},{"style":997},[1589],{"type":574,"value":1160},{"type":569,"tag":601,"props":1591,"children":1592},{"style":1163},[1593],{"type":574,"value":1166},{"type":569,"tag":601,"props":1595,"children":1596},{"style":886},[1597],{"type":574,"value":1085},{"type":569,"tag":601,"props":1599,"children":1601},{"class":603,"line":1600},17,[1602,1607,1612],{"type":569,"tag":601,"props":1603,"children":1604},{"style":886},[1605],{"type":574,"value":1606},"      }",{"type":569,"tag":601,"props":1608,"children":1609},{"style":892},[1610],{"type":574,"value":1611}," else",{"type":569,"tag":601,"props":1613,"children":1614},{"style":886},[1615],{"type":574,"value":1046},{"type":569,"tag":601,"props":1617,"children":1619},{"class":603,"line":1618},18,[1620,1624,1628,1632,1636,1640,1644,1648,1653,1657,1662,1666,1671,1675,1679,1683,1687,1691,1695,1700,1704,1708,1712,1716,1720,1724,1728],{"type":569,"tag":601,"props":1621,"children":1622},{"style":914},[1623],{"type":574,"value":1519},{"type":569,"tag":601,"props":1625,"children":1626},{"style":886},[1627],{"type":574,"value":1347},{"type":569,"tag":601,"props":1629,"children":1630},{"style":914},[1631],{"type":574,"value":1352},{"type":569,"tag":601,"props":1633,"children":1634},{"style":886},[1635],{"type":574,"value":1532},{"type":569,"tag":601,"props":1637,"children":1638},{"style":914},[1639],{"type":574,"value":1463},{"type":569,"tag":601,"props":1641,"children":1642},{"style":886},[1643],{"type":574,"value":1541},{"type":569,"tag":601,"props":1645,"children":1646},{"style":886},[1647],{"type":574,"value":1011},{"type":569,"tag":601,"props":1649,"children":1650},{"style":914},[1651],{"type":574,"value":1652}," Math",{"type":569,"tag":601,"props":1654,"children":1655},{"style":886},[1656],{"type":574,"value":1074},{"type":569,"tag":601,"props":1658,"children":1659},{"style":1003},[1660],{"type":574,"value":1661},"max",{"type":569,"tag":601,"props":1663,"children":1664},{"style":886},[1665],{"type":574,"value":1150},{"type":569,"tag":601,"props":1667,"children":1668},{"style":914},[1669],{"type":574,"value":1670},"dp",{"type":569,"tag":601,"props":1672,"children":1673},{"style":886},[1674],{"type":574,"value":1347},{"type":569,"tag":601,"props":1676,"children":1677},{"style":914},[1678],{"type":574,"value":1352},{"type":569,"tag":601,"props":1680,"children":1681},{"style":997},[1682],{"type":574,"value":1357},{"type":569,"tag":601,"props":1684,"children":1685},{"style":1163},[1686],{"type":574,"value":1166},{"type":569,"tag":601,"props":1688,"children":1689},{"style":886},[1690],{"type":574,"value":1532},{"type":569,"tag":601,"props":1692,"children":1693},{"style":914},[1694],{"type":574,"value":1463},{"type":569,"tag":601,"props":1696,"children":1697},{"style":886},[1698],{"type":574,"value":1699},"],",{"type":569,"tag":601,"props":1701,"children":1702},{"style":914},[1703],{"type":574,"value":1131},{"type":569,"tag":601,"props":1705,"children":1706},{"style":886},[1707],{"type":574,"value":1347},{"type":569,"tag":601,"props":1709,"children":1710},{"style":914},[1711],{"type":574,"value":1352},{"type":569,"tag":601,"props":1713,"children":1714},{"style":886},[1715],{"type":574,"value":1532},{"type":569,"tag":601,"props":1717,"children":1718},{"style":914},[1719],{"type":574,"value":1463},{"type":569,"tag":601,"props":1721,"children":1722},{"style":997},[1723],{"type":574,"value":1357},{"type":569,"tag":601,"props":1725,"children":1726},{"style":1163},[1727],{"type":574,"value":1166},{"type":569,"tag":601,"props":1729,"children":1730},{"style":886},[1731],{"type":574,"value":1732},"]);\n",{"type":569,"tag":601,"props":1734,"children":1736},{"class":603,"line":1735},19,[1737],{"type":569,"tag":601,"props":1738,"children":1739},{"style":886},[1740],{"type":574,"value":1741},"      }\n",{"type":569,"tag":601,"props":1743,"children":1745},{"class":603,"line":1744},20,[1746],{"type":569,"tag":601,"props":1747,"children":1748},{"style":886},[1749],{"type":574,"value":1750},"    }\n",{"type":569,"tag":601,"props":1752,"children":1754},{"class":603,"line":1753},21,[1755],{"type":569,"tag":601,"props":1756,"children":1757},{"style":886},[1758],{"type":574,"value":1759},"  }\n",{"type":569,"tag":601,"props":1761,"children":1763},{"class":603,"line":1762},22,[1764,1769,1773,1777,1781,1785,1789],{"type":569,"tag":601,"props":1765,"children":1766},{"style":892},[1767],{"type":574,"value":1768},"  return",{"type":569,"tag":601,"props":1770,"children":1771},{"style":914},[1772],{"type":574,"value":1131},{"type":569,"tag":601,"props":1774,"children":1775},{"style":886},[1776],{"type":574,"value":1347},{"type":569,"tag":601,"props":1778,"children":1779},{"style":914},[1780],{"type":574,"value":1155},{"type":569,"tag":601,"props":1782,"children":1783},{"style":886},[1784],{"type":574,"value":1532},{"type":569,"tag":601,"props":1786,"children":1787},{"style":914},[1788],{"type":574,"value":1221},{"type":569,"tag":601,"props":1790,"children":1791},{"style":886},[1792],{"type":574,"value":1366},{"type":569,"tag":601,"props":1794,"children":1796},{"class":603,"line":1795},23,[1797],{"type":569,"tag":601,"props":1798,"children":1799},{"style":886},[1800],{"type":574,"value":1801},"};\n",{"type":569,"tag":1803,"props":1804,"children":1805},"style",{},[1806],{"type":574,"value":1807},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":562,"searchDepth":953,"depth":953,"links":1809},[1810,1815],{"id":723,"depth":613,"text":723,"children":1811},[1812,1813,1814],{"id":734,"depth":622,"text":734},{"id":749,"depth":622,"text":749},{"id":807,"depth":622,"text":807},{"id":842,"depth":613,"text":842,"children":1816},[1817],{"id":847,"depth":622,"text":847},"markdown","content:1.algorithm:3.leetcode:3.major:1143.longest-common-subsequence.md","content","1.algorithm/3.leetcode/3.major/1143.longest-common-subsequence.md","md",[1824,1826],{"_path":261,"title":260,"description":1825},"对于字符串 s 和 t，只有在 s = t + t + t + ... + t + t（t 自身连接 1 次或多次）时，我们才认定 “t 能除尽 s”。",{"_path":267,"title":266,"description":1827},"给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。",1717731142612]