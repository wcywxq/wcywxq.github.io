[{"data":1,"prerenderedAt":1809},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/longest-common-subsequence":540,"/algorithm/leetcode/major/longest-common-subsequence-surround":1804},[4,269,298,508,516,525],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":507},"代码考核","/code-assessment",[302,401,500],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,334,350,378,385,392,395,398],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333},"extends","/code-assessment/source/native-api/extends",{"title":335,"_path":336,"children":337},"函数 Function","/code-assessment/source/function",[338,341,344,347],{"title":339,"_path":340},"函数防抖","/code-assessment/source/function/debounce",{"title":342,"_path":343},"函数节流","/code-assessment/source/function/throttle",{"title":345,"_path":346},"函数柯理化","/code-assessment/source/function/curry",{"title":348,"_path":349},"函数睡眠","/code-assessment/source/function/sleep",{"title":351,"_path":352,"children":353},"数组 Array","/code-assessment/source/array",[354,357,360,363,366,369,372,375],{"title":355,"_path":356},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":358,"_path":359},"数组扁平化","/code-assessment/source/array/flat",{"title":361,"_path":362},"原型方法","/code-assessment/source/array/prototype-method",{"title":364,"_path":365},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":367,"_path":368},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":370,"_path":371},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":373,"_path":374},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":376,"_path":377},"二维数组","/code-assessment/source/array/2d-array",{"title":379,"_path":380,"children":381},"字符串 String","/code-assessment/source/string",[382],{"title":383,"_path":384},"repeat()","/code-assessment/source/string/repeat",{"title":386,"_path":387,"children":388},"集合 Set","/code-assessment/source/set",[389],{"title":390,"_path":391},"遍历集合","/code-assessment/source/set/traverse",{"title":393,"_path":394},"获取通用类型","/code-assessment/source/get-generic-type",{"title":396,"_path":397},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":399,"_path":400},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":402,"_path":403,"children":404},"业务场景","/code-assessment/scene",[405,436,446,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497],{"title":406,"_path":407,"children":408},"Promise","/code-assessment/scene/promise",[409,412,415,418,421,424,427,430,433],{"title":410,"_path":411},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":413,"_path":414},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":416,"_path":417},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":419,"_path":420},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":422,"_path":423},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":425,"_path":426},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":428,"_path":429},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":431,"_path":432},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":434,"_path":435},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":437,"_path":438,"children":439},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[440,443],{"title":441,"_path":442},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":444,"_path":445},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":447,"_path":448},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":450,"_path":451},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":453,"_path":454},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":456,"_path":457},"倒计时","/code-assessment/scene/countdown",{"title":459,"_path":460},"日期格式化","/code-assessment/scene/date-format",{"title":462,"_path":463},"实现前端路由","/code-assessment/scene/frontend-route",{"title":465,"_path":466},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":468,"_path":469},"lodash.get","/code-assessment/scene/lodash-get",{"title":471,"_path":472},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":474,"_path":475},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":477,"_path":478},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":480,"_path":481},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":483,"_path":484},"随机数","/code-assessment/scene/random-number",{"title":486,"_path":487},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":489,"_path":490},"sku 算法实现","/code-assessment/scene/sku",{"title":492,"_path":493},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":495,"_path":496},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":498,"_path":499},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":501,"_path":502,"children":503},"Ts 类型挑战","/code-assessment/type-challeges",[504],{"title":505,"_path":506},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":509,"_path":510,"children":511,"icon":515},"项目","/project",[512],{"title":513,"_path":514},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":517,"_path":518,"children":519,"icon":524},"设计模式","/design-mode",[520,521],{"title":517,"_path":518},{"title":522,"_path":523},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":526,"_path":527,"children":528,"icon":539},"后端语言","/backend-languages",[529],{"title":530,"_path":531,"children":532},"Python","/backend-languages/python",[533,536],{"title":534,"_path":535},"基础","/backend-languages/python/base",{"title":537,"_path":538},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":261,"_dir":541,"_draft":542,"_partial":542,"_locale":543,"title":260,"description":544,"url":545,"body":546,"_type":1799,"_id":1800,"_source":1801,"_file":1802,"_extension":1803},"major",false,"","给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。","https://leetcode.cn/problems/longest-common-subsequence",{"type":547,"children":548,"toc":1789},"root",[549,556,561,566,571,610,615,645,650,681,686,701,707,712,718,723,728,733,786,791,800,813,821,826,831,1783],{"type":550,"tag":551,"props":552,"children":553},"element","p",{},[554],{"type":555,"value":544},"text",{"type":550,"tag":551,"props":557,"children":558},{},[559],{"type":555,"value":560},"一个字符串的 子序列 是指这样一个新的字符串：它是由原字符串在不改变字符的相对顺序的情况下删除某些字符（也可以不删除任何字符）后组成的新字符串。",{"type":550,"tag":551,"props":562,"children":563},{},[564],{"type":555,"value":565},"例如，\"ace\" 是 \"abcde\" 的子序列，但 \"aec\" 不是 \"abcde\" 的子序列。\n两个字符串的 公共子序列 是这两个字符串所共同拥有的子序列。",{"type":550,"tag":551,"props":567,"children":568},{},[569],{"type":555,"value":570},"示例 1：",{"type":550,"tag":572,"props":573,"children":576},"pre",{"className":574,"code":575,"language":555,"meta":543,"style":543},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：text1 = \"abcde\", text2 = \"ace\"\n输出：3\n解释：最长公共子序列是 \"ace\" ，它的长度为 3 。\n",[577],{"type":550,"tag":578,"props":579,"children":580},"code",{"__ignoreMap":543},[581,592,601],{"type":550,"tag":582,"props":583,"children":586},"span",{"class":584,"line":585},"line",1,[587],{"type":550,"tag":582,"props":588,"children":589},{},[590],{"type":555,"value":591},"输入：text1 = \"abcde\", text2 = \"ace\"\n",{"type":550,"tag":582,"props":593,"children":595},{"class":584,"line":594},2,[596],{"type":550,"tag":582,"props":597,"children":598},{},[599],{"type":555,"value":600},"输出：3\n",{"type":550,"tag":582,"props":602,"children":604},{"class":584,"line":603},3,[605],{"type":550,"tag":582,"props":606,"children":607},{},[608],{"type":555,"value":609},"解释：最长公共子序列是 \"ace\" ，它的长度为 3 。\n",{"type":550,"tag":551,"props":611,"children":612},{},[613],{"type":555,"value":614},"示例 2：",{"type":550,"tag":572,"props":616,"children":618},{"className":574,"code":617,"language":555,"meta":543,"style":543},"输入：text1 = \"abc\", text2 = \"abc\"\n输出：3\n解释：最长公共子序列是 \"abc\" ，它的长度为 3 。\n",[619],{"type":550,"tag":578,"props":620,"children":621},{"__ignoreMap":543},[622,630,637],{"type":550,"tag":582,"props":623,"children":624},{"class":584,"line":585},[625],{"type":550,"tag":582,"props":626,"children":627},{},[628],{"type":555,"value":629},"输入：text1 = \"abc\", text2 = \"abc\"\n",{"type":550,"tag":582,"props":631,"children":632},{"class":584,"line":594},[633],{"type":550,"tag":582,"props":634,"children":635},{},[636],{"type":555,"value":600},{"type":550,"tag":582,"props":638,"children":639},{"class":584,"line":603},[640],{"type":550,"tag":582,"props":641,"children":642},{},[643],{"type":555,"value":644},"解释：最长公共子序列是 \"abc\" ，它的长度为 3 。\n",{"type":550,"tag":551,"props":646,"children":647},{},[648],{"type":555,"value":649},"示例 3：",{"type":550,"tag":572,"props":651,"children":653},{"className":574,"code":652,"language":555,"meta":543,"style":543},"输入：text1 = \"abc\", text2 = \"def\"\n输出：0\n解释：两个字符串没有公共子序列，返回 0 。\n",[654],{"type":550,"tag":578,"props":655,"children":656},{"__ignoreMap":543},[657,665,673],{"type":550,"tag":582,"props":658,"children":659},{"class":584,"line":585},[660],{"type":550,"tag":582,"props":661,"children":662},{},[663],{"type":555,"value":664},"输入：text1 = \"abc\", text2 = \"def\"\n",{"type":550,"tag":582,"props":666,"children":667},{"class":584,"line":594},[668],{"type":550,"tag":582,"props":669,"children":670},{},[671],{"type":555,"value":672},"输出：0\n",{"type":550,"tag":582,"props":674,"children":675},{"class":584,"line":603},[676],{"type":550,"tag":582,"props":677,"children":678},{},[679],{"type":555,"value":680},"解释：两个字符串没有公共子序列，返回 0 。\n",{"type":550,"tag":551,"props":682,"children":683},{},[684],{"type":555,"value":685},"提示：",{"type":550,"tag":687,"props":688,"children":689},"ul",{},[690,696],{"type":550,"tag":691,"props":692,"children":693},"li",{},[694],{"type":555,"value":695},"1 \u003C= text1.length, text2.length \u003C= 1000",{"type":550,"tag":691,"props":697,"children":698},{},[699],{"type":555,"value":700},"text1 和 text2 仅由小写英文字符组成。",{"type":550,"tag":702,"props":703,"children":705},"h2",{"id":704},"解题思路",[706],{"type":555,"value":704},{"type":550,"tag":551,"props":708,"children":709},{},[710],{"type":555,"value":711},"最长公共子序列问题是典型的二维动态规划问题。",{"type":550,"tag":713,"props":714,"children":716},"h3",{"id":715},"状态",[717],{"type":555,"value":715},{"type":550,"tag":551,"props":719,"children":720},{},[721],{"type":555,"value":722},"假设字符串 text1 和 text2 的长度分别为 m 和 n，创建 m+1 行 n+1 列的二维数组 dp，其中 dp[i][j] 表示 text1[0:i] 和 text2[0:j] 的最长公共子序列的长度",{"type":550,"tag":551,"props":724,"children":725},{},[726],{"type":555,"value":727},"上述表示中，text1[0:i] 表示 text1 的长度为 i 的前缀，text2[0:j] 表示 text2 的长度为 j 的前缀",{"type":550,"tag":713,"props":729,"children":731},{"id":730},"边界",[732],{"type":555,"value":730},{"type":550,"tag":734,"props":735,"children":736},"ol",{},[737,742,747,752],{"type":550,"tag":691,"props":738,"children":739},{},[740],{"type":555,"value":741},"当 i = 0 时，text1[0:i] 为空，空字符串和任何字符串的最长公共子序列的长度都是 0，因此对于任意 0\u003C=j\u003C=n，都有 dp[0][j] = 0；",{"type":550,"tag":691,"props":743,"children":744},{},[745],{"type":555,"value":746},"当 j = 0 时，text2[0:j] 为空，空字符串和任何字符串的最长公共子序列的长度都是 0，因此对于任意 0\u003C=i\u003C=m，都有 dp[i][0] = 0；",{"type":550,"tag":691,"props":748,"children":749},{},[750],{"type":555,"value":751},"因此：当 i = 0 或 j = 0 时，dp[i][j] = 0；",{"type":550,"tag":691,"props":753,"children":754},{},[755,757],{"type":555,"value":756},"当 i > 0 且 j > 0 时，考虑 dp[i][j] 的计算：",{"type":550,"tag":687,"props":758,"children":759},{},[760,773],{"type":550,"tag":691,"props":761,"children":762},{},[763,765,771],{"type":555,"value":764},"当 text1[i-1] = text2[j-1] 时，将这两个相同的字符称为公共字符。考虑 text1[0:i-1] 和 text2[0:j-1] 的最长公共子序列，再增加一个字符（即公共字符）即可得到 text1[0:i] 和 text2[0:j] 的最长公共子序列。因此：",{"type":550,"tag":578,"props":766,"children":768},{"className":767},[],[769],{"type":555,"value":770},"dp[i][j] = dp[i-1][j-1] + 1",{"type":555,"value":772},"；",{"type":550,"tag":691,"props":774,"children":775},{},[776,778,784],{"type":555,"value":777},"当 text1[i-1] != text2[j-1] 时，需要考虑 text1[0:i-1] 和 text2[0:j] 的最长公共子序列；以及 text1[0:i] 和 text2[0:j-1] 的最长公共子序列。要得到 text1[0:i] 和 text2[0:j] 的最长公共子序列，应取两项中长度较大的一项，因此： ",{"type":550,"tag":578,"props":779,"children":781},{"className":780},[],[782],{"type":555,"value":783},"dp[i][j] = max(dp[i-1][j], dp[i][j-1])",{"type":555,"value":785},"。",{"type":550,"tag":713,"props":787,"children":789},{"id":788},"状态转移方程",[790],{"type":555,"value":788},{"type":550,"tag":551,"props":792,"children":793},{},[794],{"type":550,"tag":795,"props":796,"children":799},"img",{"alt":797,"src":798},"function-formula","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.1143_function-formula.png",[],{"type":550,"tag":551,"props":801,"children":802},{},[803,805,811],{"type":555,"value":804},"最终得到 ",{"type":550,"tag":578,"props":806,"children":808},{"className":807},[],[809],{"type":555,"value":810},"dp[m][n]",{"type":555,"value":812}," 即为 text1 和 text2 的最长公共子序列的长度。",{"type":550,"tag":551,"props":814,"children":815},{},[816],{"type":550,"tag":795,"props":817,"children":820},{"alt":818,"src":819},"graphic-solution","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.1143_graphic-solution.png",[],{"type":550,"tag":702,"props":822,"children":824},{"id":823},"实现",[825],{"type":555,"value":823},{"type":550,"tag":713,"props":827,"children":829},{"id":828},"动态规划",[830],{"type":555,"value":828},{"type":550,"tag":572,"props":832,"children":836},{"className":833,"code":834,"language":835,"meta":543,"style":543},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * 二维动态规划\n * @param {string} text1\n * @param {string} text2\n * @return {number}\n */\nvar longestCommonSubsequence = function (text1, text2) {\n  let m = text1.length;\n  let n = text2.length;\n  let dp = new Array(m + 1).fill(0).map(() => new Array(n + 1).fill(0));\n  for (let i = 1; i \u003C= m; i++) {\n    const str1 = text1[i - 1];\n    for (let j = 1; j \u003C= n; j++) {\n      const str2 = text2[j - 1];\n      if (str1 === str2) {\n        dp[i][j] = dp[i - 1][j - 1] + 1;\n      } else {\n        dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);\n      }\n    }\n  }\n  return dp[m][n];\n};\n","js",[837],{"type":550,"tag":578,"props":838,"children":839},{"__ignoreMap":543},[840,849,857,899,932,963,972,1028,1067,1100,1232,1302,1348,1414,1457,1492,1579,1597,1714,1723,1732,1741,1774],{"type":550,"tag":582,"props":841,"children":842},{"class":584,"line":585},[843],{"type":550,"tag":582,"props":844,"children":846},{"style":845},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[847],{"type":555,"value":848},"/**\n",{"type":550,"tag":582,"props":850,"children":851},{"class":584,"line":594},[852],{"type":550,"tag":582,"props":853,"children":854},{"style":845},[855],{"type":555,"value":856}," * 二维动态规划\n",{"type":550,"tag":582,"props":858,"children":859},{"class":584,"line":603},[860,865,871,877,882,888,893],{"type":550,"tag":582,"props":861,"children":862},{"style":845},[863],{"type":555,"value":864}," * ",{"type":550,"tag":582,"props":866,"children":868},{"style":867},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[869],{"type":555,"value":870},"@",{"type":550,"tag":582,"props":872,"children":874},{"style":873},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[875],{"type":555,"value":876},"param",{"type":550,"tag":582,"props":878,"children":879},{"style":867},[880],{"type":555,"value":881}," {",{"type":550,"tag":582,"props":883,"children":885},{"style":884},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[886],{"type":555,"value":887},"string",{"type":550,"tag":582,"props":889,"children":890},{"style":867},[891],{"type":555,"value":892},"}",{"type":550,"tag":582,"props":894,"children":896},{"style":895},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[897],{"type":555,"value":898}," text1\n",{"type":550,"tag":582,"props":900,"children":902},{"class":584,"line":901},4,[903,907,911,915,919,923,927],{"type":550,"tag":582,"props":904,"children":905},{"style":845},[906],{"type":555,"value":864},{"type":550,"tag":582,"props":908,"children":909},{"style":867},[910],{"type":555,"value":870},{"type":550,"tag":582,"props":912,"children":913},{"style":873},[914],{"type":555,"value":876},{"type":550,"tag":582,"props":916,"children":917},{"style":867},[918],{"type":555,"value":881},{"type":550,"tag":582,"props":920,"children":921},{"style":884},[922],{"type":555,"value":887},{"type":550,"tag":582,"props":924,"children":925},{"style":867},[926],{"type":555,"value":892},{"type":550,"tag":582,"props":928,"children":929},{"style":895},[930],{"type":555,"value":931}," text2\n",{"type":550,"tag":582,"props":933,"children":935},{"class":584,"line":934},5,[936,940,944,949,953,958],{"type":550,"tag":582,"props":937,"children":938},{"style":845},[939],{"type":555,"value":864},{"type":550,"tag":582,"props":941,"children":942},{"style":867},[943],{"type":555,"value":870},{"type":550,"tag":582,"props":945,"children":946},{"style":873},[947],{"type":555,"value":948},"return",{"type":550,"tag":582,"props":950,"children":951},{"style":867},[952],{"type":555,"value":881},{"type":550,"tag":582,"props":954,"children":955},{"style":884},[956],{"type":555,"value":957},"number",{"type":550,"tag":582,"props":959,"children":960},{"style":867},[961],{"type":555,"value":962},"}\n",{"type":550,"tag":582,"props":964,"children":966},{"class":584,"line":965},6,[967],{"type":550,"tag":582,"props":968,"children":969},{"style":845},[970],{"type":555,"value":971}," */\n",{"type":550,"tag":582,"props":973,"children":975},{"class":584,"line":974},7,[976,982,988,993,998,1003,1008,1013,1018,1023],{"type":550,"tag":582,"props":977,"children":979},{"style":978},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[980],{"type":555,"value":981},"var",{"type":550,"tag":582,"props":983,"children":985},{"style":984},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[986],{"type":555,"value":987}," longestCommonSubsequence",{"type":550,"tag":582,"props":989,"children":990},{"style":867},[991],{"type":555,"value":992}," =",{"type":550,"tag":582,"props":994,"children":995},{"style":978},[996],{"type":555,"value":997}," function",{"type":550,"tag":582,"props":999,"children":1000},{"style":867},[1001],{"type":555,"value":1002}," (",{"type":550,"tag":582,"props":1004,"children":1005},{"style":895},[1006],{"type":555,"value":1007},"text1",{"type":550,"tag":582,"props":1009,"children":1010},{"style":867},[1011],{"type":555,"value":1012},",",{"type":550,"tag":582,"props":1014,"children":1015},{"style":895},[1016],{"type":555,"value":1017}," text2",{"type":550,"tag":582,"props":1019,"children":1020},{"style":867},[1021],{"type":555,"value":1022},")",{"type":550,"tag":582,"props":1024,"children":1025},{"style":867},[1026],{"type":555,"value":1027}," {\n",{"type":550,"tag":582,"props":1029,"children":1031},{"class":584,"line":1030},8,[1032,1037,1042,1046,1051,1056,1062],{"type":550,"tag":582,"props":1033,"children":1034},{"style":978},[1035],{"type":555,"value":1036},"  let",{"type":550,"tag":582,"props":1038,"children":1039},{"style":895},[1040],{"type":555,"value":1041}," m",{"type":550,"tag":582,"props":1043,"children":1044},{"style":867},[1045],{"type":555,"value":992},{"type":550,"tag":582,"props":1047,"children":1048},{"style":895},[1049],{"type":555,"value":1050}," text1",{"type":550,"tag":582,"props":1052,"children":1053},{"style":867},[1054],{"type":555,"value":1055},".",{"type":550,"tag":582,"props":1057,"children":1059},{"style":1058},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1060],{"type":555,"value":1061},"length",{"type":550,"tag":582,"props":1063,"children":1064},{"style":867},[1065],{"type":555,"value":1066},";\n",{"type":550,"tag":582,"props":1068,"children":1070},{"class":584,"line":1069},9,[1071,1075,1080,1084,1088,1092,1096],{"type":550,"tag":582,"props":1072,"children":1073},{"style":978},[1074],{"type":555,"value":1036},{"type":550,"tag":582,"props":1076,"children":1077},{"style":895},[1078],{"type":555,"value":1079}," n",{"type":550,"tag":582,"props":1081,"children":1082},{"style":867},[1083],{"type":555,"value":992},{"type":550,"tag":582,"props":1085,"children":1086},{"style":895},[1087],{"type":555,"value":1017},{"type":550,"tag":582,"props":1089,"children":1090},{"style":867},[1091],{"type":555,"value":1055},{"type":550,"tag":582,"props":1093,"children":1094},{"style":1058},[1095],{"type":555,"value":1061},{"type":550,"tag":582,"props":1097,"children":1098},{"style":867},[1099],{"type":555,"value":1066},{"type":550,"tag":582,"props":1101,"children":1103},{"class":584,"line":1102},10,[1104,1108,1113,1117,1122,1127,1132,1137,1142,1148,1153,1158,1162,1167,1171,1176,1181,1186,1190,1194,1198,1203,1207,1211,1215,1219,1223,1227],{"type":550,"tag":582,"props":1105,"children":1106},{"style":978},[1107],{"type":555,"value":1036},{"type":550,"tag":582,"props":1109,"children":1110},{"style":895},[1111],{"type":555,"value":1112}," dp",{"type":550,"tag":582,"props":1114,"children":1115},{"style":867},[1116],{"type":555,"value":992},{"type":550,"tag":582,"props":1118,"children":1119},{"style":978},[1120],{"type":555,"value":1121}," new",{"type":550,"tag":582,"props":1123,"children":1124},{"style":984},[1125],{"type":555,"value":1126}," Array",{"type":550,"tag":582,"props":1128,"children":1129},{"style":867},[1130],{"type":555,"value":1131},"(",{"type":550,"tag":582,"props":1133,"children":1134},{"style":895},[1135],{"type":555,"value":1136},"m",{"type":550,"tag":582,"props":1138,"children":1139},{"style":978},[1140],{"type":555,"value":1141}," +",{"type":550,"tag":582,"props":1143,"children":1145},{"style":1144},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1146],{"type":555,"value":1147}," 1",{"type":550,"tag":582,"props":1149,"children":1150},{"style":867},[1151],{"type":555,"value":1152},").",{"type":550,"tag":582,"props":1154,"children":1155},{"style":984},[1156],{"type":555,"value":1157},"fill",{"type":550,"tag":582,"props":1159,"children":1160},{"style":867},[1161],{"type":555,"value":1131},{"type":550,"tag":582,"props":1163,"children":1164},{"style":1144},[1165],{"type":555,"value":1166},"0",{"type":550,"tag":582,"props":1168,"children":1169},{"style":867},[1170],{"type":555,"value":1152},{"type":550,"tag":582,"props":1172,"children":1173},{"style":984},[1174],{"type":555,"value":1175},"map",{"type":550,"tag":582,"props":1177,"children":1178},{"style":867},[1179],{"type":555,"value":1180},"(()",{"type":550,"tag":582,"props":1182,"children":1183},{"style":867},[1184],{"type":555,"value":1185}," =>",{"type":550,"tag":582,"props":1187,"children":1188},{"style":978},[1189],{"type":555,"value":1121},{"type":550,"tag":582,"props":1191,"children":1192},{"style":984},[1193],{"type":555,"value":1126},{"type":550,"tag":582,"props":1195,"children":1196},{"style":867},[1197],{"type":555,"value":1131},{"type":550,"tag":582,"props":1199,"children":1200},{"style":895},[1201],{"type":555,"value":1202},"n",{"type":550,"tag":582,"props":1204,"children":1205},{"style":978},[1206],{"type":555,"value":1141},{"type":550,"tag":582,"props":1208,"children":1209},{"style":1144},[1210],{"type":555,"value":1147},{"type":550,"tag":582,"props":1212,"children":1213},{"style":867},[1214],{"type":555,"value":1152},{"type":550,"tag":582,"props":1216,"children":1217},{"style":984},[1218],{"type":555,"value":1157},{"type":550,"tag":582,"props":1220,"children":1221},{"style":867},[1222],{"type":555,"value":1131},{"type":550,"tag":582,"props":1224,"children":1225},{"style":1144},[1226],{"type":555,"value":1166},{"type":550,"tag":582,"props":1228,"children":1229},{"style":867},[1230],{"type":555,"value":1231},"));\n",{"type":550,"tag":582,"props":1233,"children":1235},{"class":584,"line":1234},11,[1236,1241,1245,1250,1255,1259,1263,1268,1272,1277,1281,1285,1289,1294,1298],{"type":550,"tag":582,"props":1237,"children":1238},{"style":873},[1239],{"type":555,"value":1240},"  for",{"type":550,"tag":582,"props":1242,"children":1243},{"style":867},[1244],{"type":555,"value":1002},{"type":550,"tag":582,"props":1246,"children":1247},{"style":978},[1248],{"type":555,"value":1249},"let",{"type":550,"tag":582,"props":1251,"children":1252},{"style":895},[1253],{"type":555,"value":1254}," i",{"type":550,"tag":582,"props":1256,"children":1257},{"style":867},[1258],{"type":555,"value":992},{"type":550,"tag":582,"props":1260,"children":1261},{"style":1144},[1262],{"type":555,"value":1147},{"type":550,"tag":582,"props":1264,"children":1265},{"style":867},[1266],{"type":555,"value":1267},";",{"type":550,"tag":582,"props":1269,"children":1270},{"style":895},[1271],{"type":555,"value":1254},{"type":550,"tag":582,"props":1273,"children":1274},{"style":867},[1275],{"type":555,"value":1276}," \u003C=",{"type":550,"tag":582,"props":1278,"children":1279},{"style":895},[1280],{"type":555,"value":1041},{"type":550,"tag":582,"props":1282,"children":1283},{"style":867},[1284],{"type":555,"value":1267},{"type":550,"tag":582,"props":1286,"children":1287},{"style":895},[1288],{"type":555,"value":1254},{"type":550,"tag":582,"props":1290,"children":1291},{"style":978},[1292],{"type":555,"value":1293},"++",{"type":550,"tag":582,"props":1295,"children":1296},{"style":867},[1297],{"type":555,"value":1022},{"type":550,"tag":582,"props":1299,"children":1300},{"style":867},[1301],{"type":555,"value":1027},{"type":550,"tag":582,"props":1303,"children":1305},{"class":584,"line":1304},12,[1306,1311,1316,1320,1324,1329,1334,1339,1343],{"type":550,"tag":582,"props":1307,"children":1308},{"style":978},[1309],{"type":555,"value":1310},"    const",{"type":550,"tag":582,"props":1312,"children":1313},{"style":895},[1314],{"type":555,"value":1315}," str1",{"type":550,"tag":582,"props":1317,"children":1318},{"style":867},[1319],{"type":555,"value":992},{"type":550,"tag":582,"props":1321,"children":1322},{"style":895},[1323],{"type":555,"value":1050},{"type":550,"tag":582,"props":1325,"children":1326},{"style":867},[1327],{"type":555,"value":1328},"[",{"type":550,"tag":582,"props":1330,"children":1331},{"style":895},[1332],{"type":555,"value":1333},"i",{"type":550,"tag":582,"props":1335,"children":1336},{"style":978},[1337],{"type":555,"value":1338}," -",{"type":550,"tag":582,"props":1340,"children":1341},{"style":1144},[1342],{"type":555,"value":1147},{"type":550,"tag":582,"props":1344,"children":1345},{"style":867},[1346],{"type":555,"value":1347},"];\n",{"type":550,"tag":582,"props":1349,"children":1351},{"class":584,"line":1350},13,[1352,1357,1361,1365,1370,1374,1378,1382,1386,1390,1394,1398,1402,1406,1410],{"type":550,"tag":582,"props":1353,"children":1354},{"style":873},[1355],{"type":555,"value":1356},"    for",{"type":550,"tag":582,"props":1358,"children":1359},{"style":867},[1360],{"type":555,"value":1002},{"type":550,"tag":582,"props":1362,"children":1363},{"style":978},[1364],{"type":555,"value":1249},{"type":550,"tag":582,"props":1366,"children":1367},{"style":895},[1368],{"type":555,"value":1369}," j",{"type":550,"tag":582,"props":1371,"children":1372},{"style":867},[1373],{"type":555,"value":992},{"type":550,"tag":582,"props":1375,"children":1376},{"style":1144},[1377],{"type":555,"value":1147},{"type":550,"tag":582,"props":1379,"children":1380},{"style":867},[1381],{"type":555,"value":1267},{"type":550,"tag":582,"props":1383,"children":1384},{"style":895},[1385],{"type":555,"value":1369},{"type":550,"tag":582,"props":1387,"children":1388},{"style":867},[1389],{"type":555,"value":1276},{"type":550,"tag":582,"props":1391,"children":1392},{"style":895},[1393],{"type":555,"value":1079},{"type":550,"tag":582,"props":1395,"children":1396},{"style":867},[1397],{"type":555,"value":1267},{"type":550,"tag":582,"props":1399,"children":1400},{"style":895},[1401],{"type":555,"value":1369},{"type":550,"tag":582,"props":1403,"children":1404},{"style":978},[1405],{"type":555,"value":1293},{"type":550,"tag":582,"props":1407,"children":1408},{"style":867},[1409],{"type":555,"value":1022},{"type":550,"tag":582,"props":1411,"children":1412},{"style":867},[1413],{"type":555,"value":1027},{"type":550,"tag":582,"props":1415,"children":1417},{"class":584,"line":1416},14,[1418,1423,1428,1432,1436,1440,1445,1449,1453],{"type":550,"tag":582,"props":1419,"children":1420},{"style":978},[1421],{"type":555,"value":1422},"      const",{"type":550,"tag":582,"props":1424,"children":1425},{"style":895},[1426],{"type":555,"value":1427}," str2",{"type":550,"tag":582,"props":1429,"children":1430},{"style":867},[1431],{"type":555,"value":992},{"type":550,"tag":582,"props":1433,"children":1434},{"style":895},[1435],{"type":555,"value":1017},{"type":550,"tag":582,"props":1437,"children":1438},{"style":867},[1439],{"type":555,"value":1328},{"type":550,"tag":582,"props":1441,"children":1442},{"style":895},[1443],{"type":555,"value":1444},"j",{"type":550,"tag":582,"props":1446,"children":1447},{"style":978},[1448],{"type":555,"value":1338},{"type":550,"tag":582,"props":1450,"children":1451},{"style":1144},[1452],{"type":555,"value":1147},{"type":550,"tag":582,"props":1454,"children":1455},{"style":867},[1456],{"type":555,"value":1347},{"type":550,"tag":582,"props":1458,"children":1460},{"class":584,"line":1459},15,[1461,1466,1470,1475,1480,1484,1488],{"type":550,"tag":582,"props":1462,"children":1463},{"style":873},[1464],{"type":555,"value":1465},"      if",{"type":550,"tag":582,"props":1467,"children":1468},{"style":867},[1469],{"type":555,"value":1002},{"type":550,"tag":582,"props":1471,"children":1472},{"style":895},[1473],{"type":555,"value":1474},"str1",{"type":550,"tag":582,"props":1476,"children":1477},{"style":978},[1478],{"type":555,"value":1479}," ===",{"type":550,"tag":582,"props":1481,"children":1482},{"style":895},[1483],{"type":555,"value":1427},{"type":550,"tag":582,"props":1485,"children":1486},{"style":867},[1487],{"type":555,"value":1022},{"type":550,"tag":582,"props":1489,"children":1490},{"style":867},[1491],{"type":555,"value":1027},{"type":550,"tag":582,"props":1493,"children":1495},{"class":584,"line":1494},16,[1496,1501,1505,1509,1514,1518,1523,1527,1531,1535,1539,1543,1547,1551,1555,1559,1563,1567,1571,1575],{"type":550,"tag":582,"props":1497,"children":1498},{"style":895},[1499],{"type":555,"value":1500},"        dp",{"type":550,"tag":582,"props":1502,"children":1503},{"style":867},[1504],{"type":555,"value":1328},{"type":550,"tag":582,"props":1506,"children":1507},{"style":895},[1508],{"type":555,"value":1333},{"type":550,"tag":582,"props":1510,"children":1511},{"style":867},[1512],{"type":555,"value":1513},"][",{"type":550,"tag":582,"props":1515,"children":1516},{"style":895},[1517],{"type":555,"value":1444},{"type":550,"tag":582,"props":1519,"children":1520},{"style":867},[1521],{"type":555,"value":1522},"]",{"type":550,"tag":582,"props":1524,"children":1525},{"style":867},[1526],{"type":555,"value":992},{"type":550,"tag":582,"props":1528,"children":1529},{"style":895},[1530],{"type":555,"value":1112},{"type":550,"tag":582,"props":1532,"children":1533},{"style":867},[1534],{"type":555,"value":1328},{"type":550,"tag":582,"props":1536,"children":1537},{"style":895},[1538],{"type":555,"value":1333},{"type":550,"tag":582,"props":1540,"children":1541},{"style":978},[1542],{"type":555,"value":1338},{"type":550,"tag":582,"props":1544,"children":1545},{"style":1144},[1546],{"type":555,"value":1147},{"type":550,"tag":582,"props":1548,"children":1549},{"style":867},[1550],{"type":555,"value":1513},{"type":550,"tag":582,"props":1552,"children":1553},{"style":895},[1554],{"type":555,"value":1444},{"type":550,"tag":582,"props":1556,"children":1557},{"style":978},[1558],{"type":555,"value":1338},{"type":550,"tag":582,"props":1560,"children":1561},{"style":1144},[1562],{"type":555,"value":1147},{"type":550,"tag":582,"props":1564,"children":1565},{"style":867},[1566],{"type":555,"value":1522},{"type":550,"tag":582,"props":1568,"children":1569},{"style":978},[1570],{"type":555,"value":1141},{"type":550,"tag":582,"props":1572,"children":1573},{"style":1144},[1574],{"type":555,"value":1147},{"type":550,"tag":582,"props":1576,"children":1577},{"style":867},[1578],{"type":555,"value":1066},{"type":550,"tag":582,"props":1580,"children":1582},{"class":584,"line":1581},17,[1583,1588,1593],{"type":550,"tag":582,"props":1584,"children":1585},{"style":867},[1586],{"type":555,"value":1587},"      }",{"type":550,"tag":582,"props":1589,"children":1590},{"style":873},[1591],{"type":555,"value":1592}," else",{"type":550,"tag":582,"props":1594,"children":1595},{"style":867},[1596],{"type":555,"value":1027},{"type":550,"tag":582,"props":1598,"children":1600},{"class":584,"line":1599},18,[1601,1605,1609,1613,1617,1621,1625,1629,1634,1638,1643,1647,1652,1656,1660,1664,1668,1672,1676,1681,1685,1689,1693,1697,1701,1705,1709],{"type":550,"tag":582,"props":1602,"children":1603},{"style":895},[1604],{"type":555,"value":1500},{"type":550,"tag":582,"props":1606,"children":1607},{"style":867},[1608],{"type":555,"value":1328},{"type":550,"tag":582,"props":1610,"children":1611},{"style":895},[1612],{"type":555,"value":1333},{"type":550,"tag":582,"props":1614,"children":1615},{"style":867},[1616],{"type":555,"value":1513},{"type":550,"tag":582,"props":1618,"children":1619},{"style":895},[1620],{"type":555,"value":1444},{"type":550,"tag":582,"props":1622,"children":1623},{"style":867},[1624],{"type":555,"value":1522},{"type":550,"tag":582,"props":1626,"children":1627},{"style":867},[1628],{"type":555,"value":992},{"type":550,"tag":582,"props":1630,"children":1631},{"style":895},[1632],{"type":555,"value":1633}," Math",{"type":550,"tag":582,"props":1635,"children":1636},{"style":867},[1637],{"type":555,"value":1055},{"type":550,"tag":582,"props":1639,"children":1640},{"style":984},[1641],{"type":555,"value":1642},"max",{"type":550,"tag":582,"props":1644,"children":1645},{"style":867},[1646],{"type":555,"value":1131},{"type":550,"tag":582,"props":1648,"children":1649},{"style":895},[1650],{"type":555,"value":1651},"dp",{"type":550,"tag":582,"props":1653,"children":1654},{"style":867},[1655],{"type":555,"value":1328},{"type":550,"tag":582,"props":1657,"children":1658},{"style":895},[1659],{"type":555,"value":1333},{"type":550,"tag":582,"props":1661,"children":1662},{"style":978},[1663],{"type":555,"value":1338},{"type":550,"tag":582,"props":1665,"children":1666},{"style":1144},[1667],{"type":555,"value":1147},{"type":550,"tag":582,"props":1669,"children":1670},{"style":867},[1671],{"type":555,"value":1513},{"type":550,"tag":582,"props":1673,"children":1674},{"style":895},[1675],{"type":555,"value":1444},{"type":550,"tag":582,"props":1677,"children":1678},{"style":867},[1679],{"type":555,"value":1680},"],",{"type":550,"tag":582,"props":1682,"children":1683},{"style":895},[1684],{"type":555,"value":1112},{"type":550,"tag":582,"props":1686,"children":1687},{"style":867},[1688],{"type":555,"value":1328},{"type":550,"tag":582,"props":1690,"children":1691},{"style":895},[1692],{"type":555,"value":1333},{"type":550,"tag":582,"props":1694,"children":1695},{"style":867},[1696],{"type":555,"value":1513},{"type":550,"tag":582,"props":1698,"children":1699},{"style":895},[1700],{"type":555,"value":1444},{"type":550,"tag":582,"props":1702,"children":1703},{"style":978},[1704],{"type":555,"value":1338},{"type":550,"tag":582,"props":1706,"children":1707},{"style":1144},[1708],{"type":555,"value":1147},{"type":550,"tag":582,"props":1710,"children":1711},{"style":867},[1712],{"type":555,"value":1713},"]);\n",{"type":550,"tag":582,"props":1715,"children":1717},{"class":584,"line":1716},19,[1718],{"type":550,"tag":582,"props":1719,"children":1720},{"style":867},[1721],{"type":555,"value":1722},"      }\n",{"type":550,"tag":582,"props":1724,"children":1726},{"class":584,"line":1725},20,[1727],{"type":550,"tag":582,"props":1728,"children":1729},{"style":867},[1730],{"type":555,"value":1731},"    }\n",{"type":550,"tag":582,"props":1733,"children":1735},{"class":584,"line":1734},21,[1736],{"type":550,"tag":582,"props":1737,"children":1738},{"style":867},[1739],{"type":555,"value":1740},"  }\n",{"type":550,"tag":582,"props":1742,"children":1744},{"class":584,"line":1743},22,[1745,1750,1754,1758,1762,1766,1770],{"type":550,"tag":582,"props":1746,"children":1747},{"style":873},[1748],{"type":555,"value":1749},"  return",{"type":550,"tag":582,"props":1751,"children":1752},{"style":895},[1753],{"type":555,"value":1112},{"type":550,"tag":582,"props":1755,"children":1756},{"style":867},[1757],{"type":555,"value":1328},{"type":550,"tag":582,"props":1759,"children":1760},{"style":895},[1761],{"type":555,"value":1136},{"type":550,"tag":582,"props":1763,"children":1764},{"style":867},[1765],{"type":555,"value":1513},{"type":550,"tag":582,"props":1767,"children":1768},{"style":895},[1769],{"type":555,"value":1202},{"type":550,"tag":582,"props":1771,"children":1772},{"style":867},[1773],{"type":555,"value":1347},{"type":550,"tag":582,"props":1775,"children":1777},{"class":584,"line":1776},23,[1778],{"type":550,"tag":582,"props":1779,"children":1780},{"style":867},[1781],{"type":555,"value":1782},"};\n",{"type":550,"tag":1784,"props":1785,"children":1786},"style",{},[1787],{"type":555,"value":1788},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":543,"searchDepth":934,"depth":934,"links":1790},[1791,1796],{"id":704,"depth":594,"text":704,"children":1792},[1793,1794,1795],{"id":715,"depth":603,"text":715},{"id":730,"depth":603,"text":730},{"id":788,"depth":603,"text":788},{"id":823,"depth":594,"text":823,"children":1797},[1798],{"id":828,"depth":603,"text":828},"markdown","content:1.algorithm:3.leetcode:3.major:1143.longest-common-subsequence.md","content","1.algorithm/3.leetcode/3.major/1143.longest-common-subsequence.md","md",[1805,1807],{"_path":258,"title":257,"description":1806},"对于字符串 s 和 t，只有在 s = t + t + t + ... + t + t（t 自身连接 1 次或多次）时，我们才认定 “t 能除尽 s”。",{"_path":264,"title":263,"description":1808},"给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。",1714099217051]