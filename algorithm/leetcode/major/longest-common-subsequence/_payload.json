[{"data":1,"prerenderedAt":1820},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/longest-common-subsequence":551,"/algorithm/leetcode/major/longest-common-subsequence-surround":1815},[4,272,301,519,527,536],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":518},"代码考核","/code-assessment",[305,410,511],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,343,359,387,394,401,404,407],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337,340],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342},"Promise","/code-assessment/source/native-api/promise",{"title":344,"_path":345,"children":346},"函数 Function","/code-assessment/source/function",[347,350,353,356],{"title":348,"_path":349},"函数防抖","/code-assessment/source/function/debounce",{"title":351,"_path":352},"函数节流","/code-assessment/source/function/throttle",{"title":354,"_path":355},"函数柯理化","/code-assessment/source/function/curry",{"title":357,"_path":358},"函数睡眠","/code-assessment/source/function/sleep",{"title":360,"_path":361,"children":362},"数组 Array","/code-assessment/source/array",[363,366,369,372,375,378,381,384],{"title":364,"_path":365},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":367,"_path":368},"数组扁平化","/code-assessment/source/array/flat",{"title":370,"_path":371},"原型方法","/code-assessment/source/array/prototype-method",{"title":373,"_path":374},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":376,"_path":377},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":379,"_path":380},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":382,"_path":383},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":385,"_path":386},"二维数组","/code-assessment/source/array/2d-array",{"title":388,"_path":389,"children":390},"字符串 String","/code-assessment/source/string",[391],{"title":392,"_path":393},"repeat()","/code-assessment/source/string/repeat",{"title":395,"_path":396,"children":397},"集合 Set","/code-assessment/source/set",[398],{"title":399,"_path":400},"遍历集合","/code-assessment/source/set/traverse",{"title":402,"_path":403},"获取通用类型","/code-assessment/source/get-generic-type",{"title":405,"_path":406},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":408,"_path":409},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":411,"_path":412,"children":413},"业务场景","/code-assessment/scene",[414,444,454,457,460,463,466,469,472,475,478,481,484,487,490,493,496,499,502,505,508],{"title":341,"_path":415,"children":416},"/code-assessment/scene/promise",[417,420,423,426,429,432,435,438,441],{"title":418,"_path":419},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":421,"_path":422},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":424,"_path":425},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":427,"_path":428},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":430,"_path":431},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":433,"_path":434},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":436,"_path":437},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":439,"_path":440},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":442,"_path":443},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":445,"_path":446,"children":447},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[448,451],{"title":449,"_path":450},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":452,"_path":453},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":455,"_path":456},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":458,"_path":459},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":461,"_path":462},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":464,"_path":465},"倒计时","/code-assessment/scene/countdown",{"title":467,"_path":468},"日期格式化","/code-assessment/scene/date-format",{"title":470,"_path":471},"实现前端路由","/code-assessment/scene/frontend-route",{"title":473,"_path":474},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":476,"_path":477},"lodash.get","/code-assessment/scene/lodash-get",{"title":479,"_path":480},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":482,"_path":483},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":485,"_path":486},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":488,"_path":489},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":491,"_path":492},"随机数","/code-assessment/scene/random-number",{"title":494,"_path":495},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":497,"_path":498},"sku 算法实现","/code-assessment/scene/sku",{"title":500,"_path":501},"整数分割","/code-assessment/scene/split-number",{"title":503,"_path":504},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":506,"_path":507},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":509,"_path":510},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":512,"_path":513,"children":514},"Ts 类型挑战","/code-assessment/type-challeges",[515],{"title":516,"_path":517},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":520,"_path":521,"children":522,"icon":526},"项目","/project",[523],{"title":524,"_path":525},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":528,"_path":529,"children":530,"icon":535},"设计模式","/design-mode",[531,532],{"title":528,"_path":529},{"title":533,"_path":534},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":537,"_path":538,"children":539,"icon":550},"后端语言","/backend-languages",[540],{"title":541,"_path":542,"children":543},"Python","/backend-languages/python",[544,547],{"title":545,"_path":546},"基础","/backend-languages/python/base",{"title":548,"_path":549},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":264,"_dir":552,"_draft":553,"_partial":553,"_locale":554,"title":263,"description":555,"url":556,"body":557,"_type":1810,"_id":1811,"_source":1812,"_file":1813,"_extension":1814},"major",false,"","给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。","https://leetcode.cn/problems/longest-common-subsequence",{"type":558,"children":559,"toc":1800},"root",[560,567,572,577,582,621,626,656,661,692,697,712,718,723,729,734,739,744,797,802,811,824,832,837,842,1794],{"type":561,"tag":562,"props":563,"children":564},"element","p",{},[565],{"type":566,"value":555},"text",{"type":561,"tag":562,"props":568,"children":569},{},[570],{"type":566,"value":571},"一个字符串的 子序列 是指这样一个新的字符串：它是由原字符串在不改变字符的相对顺序的情况下删除某些字符（也可以不删除任何字符）后组成的新字符串。",{"type":561,"tag":562,"props":573,"children":574},{},[575],{"type":566,"value":576},"例如，\"ace\" 是 \"abcde\" 的子序列，但 \"aec\" 不是 \"abcde\" 的子序列。\n两个字符串的 公共子序列 是这两个字符串所共同拥有的子序列。",{"type":561,"tag":562,"props":578,"children":579},{},[580],{"type":566,"value":581},"示例 1：",{"type":561,"tag":583,"props":584,"children":587},"pre",{"className":585,"code":586,"language":566,"meta":554,"style":554},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：text1 = \"abcde\", text2 = \"ace\"\n输出：3\n解释：最长公共子序列是 \"ace\" ，它的长度为 3 。\n",[588],{"type":561,"tag":589,"props":590,"children":591},"code",{"__ignoreMap":554},[592,603,612],{"type":561,"tag":593,"props":594,"children":597},"span",{"class":595,"line":596},"line",1,[598],{"type":561,"tag":593,"props":599,"children":600},{},[601],{"type":566,"value":602},"输入：text1 = \"abcde\", text2 = \"ace\"\n",{"type":561,"tag":593,"props":604,"children":606},{"class":595,"line":605},2,[607],{"type":561,"tag":593,"props":608,"children":609},{},[610],{"type":566,"value":611},"输出：3\n",{"type":561,"tag":593,"props":613,"children":615},{"class":595,"line":614},3,[616],{"type":561,"tag":593,"props":617,"children":618},{},[619],{"type":566,"value":620},"解释：最长公共子序列是 \"ace\" ，它的长度为 3 。\n",{"type":561,"tag":562,"props":622,"children":623},{},[624],{"type":566,"value":625},"示例 2：",{"type":561,"tag":583,"props":627,"children":629},{"className":585,"code":628,"language":566,"meta":554,"style":554},"输入：text1 = \"abc\", text2 = \"abc\"\n输出：3\n解释：最长公共子序列是 \"abc\" ，它的长度为 3 。\n",[630],{"type":561,"tag":589,"props":631,"children":632},{"__ignoreMap":554},[633,641,648],{"type":561,"tag":593,"props":634,"children":635},{"class":595,"line":596},[636],{"type":561,"tag":593,"props":637,"children":638},{},[639],{"type":566,"value":640},"输入：text1 = \"abc\", text2 = \"abc\"\n",{"type":561,"tag":593,"props":642,"children":643},{"class":595,"line":605},[644],{"type":561,"tag":593,"props":645,"children":646},{},[647],{"type":566,"value":611},{"type":561,"tag":593,"props":649,"children":650},{"class":595,"line":614},[651],{"type":561,"tag":593,"props":652,"children":653},{},[654],{"type":566,"value":655},"解释：最长公共子序列是 \"abc\" ，它的长度为 3 。\n",{"type":561,"tag":562,"props":657,"children":658},{},[659],{"type":566,"value":660},"示例 3：",{"type":561,"tag":583,"props":662,"children":664},{"className":585,"code":663,"language":566,"meta":554,"style":554},"输入：text1 = \"abc\", text2 = \"def\"\n输出：0\n解释：两个字符串没有公共子序列，返回 0 。\n",[665],{"type":561,"tag":589,"props":666,"children":667},{"__ignoreMap":554},[668,676,684],{"type":561,"tag":593,"props":669,"children":670},{"class":595,"line":596},[671],{"type":561,"tag":593,"props":672,"children":673},{},[674],{"type":566,"value":675},"输入：text1 = \"abc\", text2 = \"def\"\n",{"type":561,"tag":593,"props":677,"children":678},{"class":595,"line":605},[679],{"type":561,"tag":593,"props":680,"children":681},{},[682],{"type":566,"value":683},"输出：0\n",{"type":561,"tag":593,"props":685,"children":686},{"class":595,"line":614},[687],{"type":561,"tag":593,"props":688,"children":689},{},[690],{"type":566,"value":691},"解释：两个字符串没有公共子序列，返回 0 。\n",{"type":561,"tag":562,"props":693,"children":694},{},[695],{"type":566,"value":696},"提示：",{"type":561,"tag":698,"props":699,"children":700},"ul",{},[701,707],{"type":561,"tag":702,"props":703,"children":704},"li",{},[705],{"type":566,"value":706},"1 \u003C= text1.length, text2.length \u003C= 1000",{"type":561,"tag":702,"props":708,"children":709},{},[710],{"type":566,"value":711},"text1 和 text2 仅由小写英文字符组成。",{"type":561,"tag":713,"props":714,"children":716},"h2",{"id":715},"解题思路",[717],{"type":566,"value":715},{"type":561,"tag":562,"props":719,"children":720},{},[721],{"type":566,"value":722},"最长公共子序列问题是典型的二维动态规划问题。",{"type":561,"tag":724,"props":725,"children":727},"h3",{"id":726},"状态",[728],{"type":566,"value":726},{"type":561,"tag":562,"props":730,"children":731},{},[732],{"type":566,"value":733},"假设字符串 text1 和 text2 的长度分别为 m 和 n，创建 m+1 行 n+1 列的二维数组 dp，其中 dp[i][j] 表示 text1[0:i] 和 text2[0:j] 的最长公共子序列的长度",{"type":561,"tag":562,"props":735,"children":736},{},[737],{"type":566,"value":738},"上述表示中，text1[0:i] 表示 text1 的长度为 i 的前缀，text2[0:j] 表示 text2 的长度为 j 的前缀",{"type":561,"tag":724,"props":740,"children":742},{"id":741},"边界",[743],{"type":566,"value":741},{"type":561,"tag":745,"props":746,"children":747},"ol",{},[748,753,758,763],{"type":561,"tag":702,"props":749,"children":750},{},[751],{"type":566,"value":752},"当 i = 0 时，text1[0:i] 为空，空字符串和任何字符串的最长公共子序列的长度都是 0，因此对于任意 0\u003C=j\u003C=n，都有 dp[0][j] = 0；",{"type":561,"tag":702,"props":754,"children":755},{},[756],{"type":566,"value":757},"当 j = 0 时，text2[0:j] 为空，空字符串和任何字符串的最长公共子序列的长度都是 0，因此对于任意 0\u003C=i\u003C=m，都有 dp[i][0] = 0；",{"type":561,"tag":702,"props":759,"children":760},{},[761],{"type":566,"value":762},"因此：当 i = 0 或 j = 0 时，dp[i][j] = 0；",{"type":561,"tag":702,"props":764,"children":765},{},[766,768],{"type":566,"value":767},"当 i > 0 且 j > 0 时，考虑 dp[i][j] 的计算：",{"type":561,"tag":698,"props":769,"children":770},{},[771,784],{"type":561,"tag":702,"props":772,"children":773},{},[774,776,782],{"type":566,"value":775},"当 text1[i-1] = text2[j-1] 时，将这两个相同的字符称为公共字符。考虑 text1[0:i-1] 和 text2[0:j-1] 的最长公共子序列，再增加一个字符（即公共字符）即可得到 text1[0:i] 和 text2[0:j] 的最长公共子序列。因此：",{"type":561,"tag":589,"props":777,"children":779},{"className":778},[],[780],{"type":566,"value":781},"dp[i][j] = dp[i-1][j-1] + 1",{"type":566,"value":783},"；",{"type":561,"tag":702,"props":785,"children":786},{},[787,789,795],{"type":566,"value":788},"当 text1[i-1] != text2[j-1] 时，需要考虑 text1[0:i-1] 和 text2[0:j] 的最长公共子序列；以及 text1[0:i] 和 text2[0:j-1] 的最长公共子序列。要得到 text1[0:i] 和 text2[0:j] 的最长公共子序列，应取两项中长度较大的一项，因此： ",{"type":561,"tag":589,"props":790,"children":792},{"className":791},[],[793],{"type":566,"value":794},"dp[i][j] = max(dp[i-1][j], dp[i][j-1])",{"type":566,"value":796},"。",{"type":561,"tag":724,"props":798,"children":800},{"id":799},"状态转移方程",[801],{"type":566,"value":799},{"type":561,"tag":562,"props":803,"children":804},{},[805],{"type":561,"tag":806,"props":807,"children":810},"img",{"alt":808,"src":809},"function-formula","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.1143_function-formula.png",[],{"type":561,"tag":562,"props":812,"children":813},{},[814,816,822],{"type":566,"value":815},"最终得到 ",{"type":561,"tag":589,"props":817,"children":819},{"className":818},[],[820],{"type":566,"value":821},"dp[m][n]",{"type":566,"value":823}," 即为 text1 和 text2 的最长公共子序列的长度。",{"type":561,"tag":562,"props":825,"children":826},{},[827],{"type":561,"tag":806,"props":828,"children":831},{"alt":829,"src":830},"graphic-solution","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.1143_graphic-solution.png",[],{"type":561,"tag":713,"props":833,"children":835},{"id":834},"实现",[836],{"type":566,"value":834},{"type":561,"tag":724,"props":838,"children":840},{"id":839},"动态规划",[841],{"type":566,"value":839},{"type":561,"tag":583,"props":843,"children":847},{"className":844,"code":845,"language":846,"meta":554,"style":554},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * 二维动态规划\n * @param {string} text1\n * @param {string} text2\n * @return {number}\n */\nvar longestCommonSubsequence = function (text1, text2) {\n  let m = text1.length;\n  let n = text2.length;\n  let dp = new Array(m + 1).fill(0).map(() => new Array(n + 1).fill(0));\n  for (let i = 1; i \u003C= m; i++) {\n    const str1 = text1[i - 1];\n    for (let j = 1; j \u003C= n; j++) {\n      const str2 = text2[j - 1];\n      if (str1 === str2) {\n        dp[i][j] = dp[i - 1][j - 1] + 1;\n      } else {\n        dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);\n      }\n    }\n  }\n  return dp[m][n];\n};\n","js",[848],{"type":561,"tag":589,"props":849,"children":850},{"__ignoreMap":554},[851,860,868,910,943,974,983,1039,1078,1111,1243,1313,1359,1425,1468,1503,1590,1608,1725,1734,1743,1752,1785],{"type":561,"tag":593,"props":852,"children":853},{"class":595,"line":596},[854],{"type":561,"tag":593,"props":855,"children":857},{"style":856},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[858],{"type":566,"value":859},"/**\n",{"type":561,"tag":593,"props":861,"children":862},{"class":595,"line":605},[863],{"type":561,"tag":593,"props":864,"children":865},{"style":856},[866],{"type":566,"value":867}," * 二维动态规划\n",{"type":561,"tag":593,"props":869,"children":870},{"class":595,"line":614},[871,876,882,888,893,899,904],{"type":561,"tag":593,"props":872,"children":873},{"style":856},[874],{"type":566,"value":875}," * ",{"type":561,"tag":593,"props":877,"children":879},{"style":878},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[880],{"type":566,"value":881},"@",{"type":561,"tag":593,"props":883,"children":885},{"style":884},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[886],{"type":566,"value":887},"param",{"type":561,"tag":593,"props":889,"children":890},{"style":878},[891],{"type":566,"value":892}," {",{"type":561,"tag":593,"props":894,"children":896},{"style":895},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[897],{"type":566,"value":898},"string",{"type":561,"tag":593,"props":900,"children":901},{"style":878},[902],{"type":566,"value":903},"}",{"type":561,"tag":593,"props":905,"children":907},{"style":906},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[908],{"type":566,"value":909}," text1\n",{"type":561,"tag":593,"props":911,"children":913},{"class":595,"line":912},4,[914,918,922,926,930,934,938],{"type":561,"tag":593,"props":915,"children":916},{"style":856},[917],{"type":566,"value":875},{"type":561,"tag":593,"props":919,"children":920},{"style":878},[921],{"type":566,"value":881},{"type":561,"tag":593,"props":923,"children":924},{"style":884},[925],{"type":566,"value":887},{"type":561,"tag":593,"props":927,"children":928},{"style":878},[929],{"type":566,"value":892},{"type":561,"tag":593,"props":931,"children":932},{"style":895},[933],{"type":566,"value":898},{"type":561,"tag":593,"props":935,"children":936},{"style":878},[937],{"type":566,"value":903},{"type":561,"tag":593,"props":939,"children":940},{"style":906},[941],{"type":566,"value":942}," text2\n",{"type":561,"tag":593,"props":944,"children":946},{"class":595,"line":945},5,[947,951,955,960,964,969],{"type":561,"tag":593,"props":948,"children":949},{"style":856},[950],{"type":566,"value":875},{"type":561,"tag":593,"props":952,"children":953},{"style":878},[954],{"type":566,"value":881},{"type":561,"tag":593,"props":956,"children":957},{"style":884},[958],{"type":566,"value":959},"return",{"type":561,"tag":593,"props":961,"children":962},{"style":878},[963],{"type":566,"value":892},{"type":561,"tag":593,"props":965,"children":966},{"style":895},[967],{"type":566,"value":968},"number",{"type":561,"tag":593,"props":970,"children":971},{"style":878},[972],{"type":566,"value":973},"}\n",{"type":561,"tag":593,"props":975,"children":977},{"class":595,"line":976},6,[978],{"type":561,"tag":593,"props":979,"children":980},{"style":856},[981],{"type":566,"value":982}," */\n",{"type":561,"tag":593,"props":984,"children":986},{"class":595,"line":985},7,[987,993,999,1004,1009,1014,1019,1024,1029,1034],{"type":561,"tag":593,"props":988,"children":990},{"style":989},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[991],{"type":566,"value":992},"var",{"type":561,"tag":593,"props":994,"children":996},{"style":995},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[997],{"type":566,"value":998}," longestCommonSubsequence",{"type":561,"tag":593,"props":1000,"children":1001},{"style":878},[1002],{"type":566,"value":1003}," =",{"type":561,"tag":593,"props":1005,"children":1006},{"style":989},[1007],{"type":566,"value":1008}," function",{"type":561,"tag":593,"props":1010,"children":1011},{"style":878},[1012],{"type":566,"value":1013}," (",{"type":561,"tag":593,"props":1015,"children":1016},{"style":906},[1017],{"type":566,"value":1018},"text1",{"type":561,"tag":593,"props":1020,"children":1021},{"style":878},[1022],{"type":566,"value":1023},",",{"type":561,"tag":593,"props":1025,"children":1026},{"style":906},[1027],{"type":566,"value":1028}," text2",{"type":561,"tag":593,"props":1030,"children":1031},{"style":878},[1032],{"type":566,"value":1033},")",{"type":561,"tag":593,"props":1035,"children":1036},{"style":878},[1037],{"type":566,"value":1038}," {\n",{"type":561,"tag":593,"props":1040,"children":1042},{"class":595,"line":1041},8,[1043,1048,1053,1057,1062,1067,1073],{"type":561,"tag":593,"props":1044,"children":1045},{"style":989},[1046],{"type":566,"value":1047},"  let",{"type":561,"tag":593,"props":1049,"children":1050},{"style":906},[1051],{"type":566,"value":1052}," m",{"type":561,"tag":593,"props":1054,"children":1055},{"style":878},[1056],{"type":566,"value":1003},{"type":561,"tag":593,"props":1058,"children":1059},{"style":906},[1060],{"type":566,"value":1061}," text1",{"type":561,"tag":593,"props":1063,"children":1064},{"style":878},[1065],{"type":566,"value":1066},".",{"type":561,"tag":593,"props":1068,"children":1070},{"style":1069},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1071],{"type":566,"value":1072},"length",{"type":561,"tag":593,"props":1074,"children":1075},{"style":878},[1076],{"type":566,"value":1077},";\n",{"type":561,"tag":593,"props":1079,"children":1081},{"class":595,"line":1080},9,[1082,1086,1091,1095,1099,1103,1107],{"type":561,"tag":593,"props":1083,"children":1084},{"style":989},[1085],{"type":566,"value":1047},{"type":561,"tag":593,"props":1087,"children":1088},{"style":906},[1089],{"type":566,"value":1090}," n",{"type":561,"tag":593,"props":1092,"children":1093},{"style":878},[1094],{"type":566,"value":1003},{"type":561,"tag":593,"props":1096,"children":1097},{"style":906},[1098],{"type":566,"value":1028},{"type":561,"tag":593,"props":1100,"children":1101},{"style":878},[1102],{"type":566,"value":1066},{"type":561,"tag":593,"props":1104,"children":1105},{"style":1069},[1106],{"type":566,"value":1072},{"type":561,"tag":593,"props":1108,"children":1109},{"style":878},[1110],{"type":566,"value":1077},{"type":561,"tag":593,"props":1112,"children":1114},{"class":595,"line":1113},10,[1115,1119,1124,1128,1133,1138,1143,1148,1153,1159,1164,1169,1173,1178,1182,1187,1192,1197,1201,1205,1209,1214,1218,1222,1226,1230,1234,1238],{"type":561,"tag":593,"props":1116,"children":1117},{"style":989},[1118],{"type":566,"value":1047},{"type":561,"tag":593,"props":1120,"children":1121},{"style":906},[1122],{"type":566,"value":1123}," dp",{"type":561,"tag":593,"props":1125,"children":1126},{"style":878},[1127],{"type":566,"value":1003},{"type":561,"tag":593,"props":1129,"children":1130},{"style":989},[1131],{"type":566,"value":1132}," new",{"type":561,"tag":593,"props":1134,"children":1135},{"style":995},[1136],{"type":566,"value":1137}," Array",{"type":561,"tag":593,"props":1139,"children":1140},{"style":878},[1141],{"type":566,"value":1142},"(",{"type":561,"tag":593,"props":1144,"children":1145},{"style":906},[1146],{"type":566,"value":1147},"m",{"type":561,"tag":593,"props":1149,"children":1150},{"style":989},[1151],{"type":566,"value":1152}," +",{"type":561,"tag":593,"props":1154,"children":1156},{"style":1155},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1157],{"type":566,"value":1158}," 1",{"type":561,"tag":593,"props":1160,"children":1161},{"style":878},[1162],{"type":566,"value":1163},").",{"type":561,"tag":593,"props":1165,"children":1166},{"style":995},[1167],{"type":566,"value":1168},"fill",{"type":561,"tag":593,"props":1170,"children":1171},{"style":878},[1172],{"type":566,"value":1142},{"type":561,"tag":593,"props":1174,"children":1175},{"style":1155},[1176],{"type":566,"value":1177},"0",{"type":561,"tag":593,"props":1179,"children":1180},{"style":878},[1181],{"type":566,"value":1163},{"type":561,"tag":593,"props":1183,"children":1184},{"style":995},[1185],{"type":566,"value":1186},"map",{"type":561,"tag":593,"props":1188,"children":1189},{"style":878},[1190],{"type":566,"value":1191},"(()",{"type":561,"tag":593,"props":1193,"children":1194},{"style":878},[1195],{"type":566,"value":1196}," =>",{"type":561,"tag":593,"props":1198,"children":1199},{"style":989},[1200],{"type":566,"value":1132},{"type":561,"tag":593,"props":1202,"children":1203},{"style":995},[1204],{"type":566,"value":1137},{"type":561,"tag":593,"props":1206,"children":1207},{"style":878},[1208],{"type":566,"value":1142},{"type":561,"tag":593,"props":1210,"children":1211},{"style":906},[1212],{"type":566,"value":1213},"n",{"type":561,"tag":593,"props":1215,"children":1216},{"style":989},[1217],{"type":566,"value":1152},{"type":561,"tag":593,"props":1219,"children":1220},{"style":1155},[1221],{"type":566,"value":1158},{"type":561,"tag":593,"props":1223,"children":1224},{"style":878},[1225],{"type":566,"value":1163},{"type":561,"tag":593,"props":1227,"children":1228},{"style":995},[1229],{"type":566,"value":1168},{"type":561,"tag":593,"props":1231,"children":1232},{"style":878},[1233],{"type":566,"value":1142},{"type":561,"tag":593,"props":1235,"children":1236},{"style":1155},[1237],{"type":566,"value":1177},{"type":561,"tag":593,"props":1239,"children":1240},{"style":878},[1241],{"type":566,"value":1242},"));\n",{"type":561,"tag":593,"props":1244,"children":1246},{"class":595,"line":1245},11,[1247,1252,1256,1261,1266,1270,1274,1279,1283,1288,1292,1296,1300,1305,1309],{"type":561,"tag":593,"props":1248,"children":1249},{"style":884},[1250],{"type":566,"value":1251},"  for",{"type":561,"tag":593,"props":1253,"children":1254},{"style":878},[1255],{"type":566,"value":1013},{"type":561,"tag":593,"props":1257,"children":1258},{"style":989},[1259],{"type":566,"value":1260},"let",{"type":561,"tag":593,"props":1262,"children":1263},{"style":906},[1264],{"type":566,"value":1265}," i",{"type":561,"tag":593,"props":1267,"children":1268},{"style":878},[1269],{"type":566,"value":1003},{"type":561,"tag":593,"props":1271,"children":1272},{"style":1155},[1273],{"type":566,"value":1158},{"type":561,"tag":593,"props":1275,"children":1276},{"style":878},[1277],{"type":566,"value":1278},";",{"type":561,"tag":593,"props":1280,"children":1281},{"style":906},[1282],{"type":566,"value":1265},{"type":561,"tag":593,"props":1284,"children":1285},{"style":878},[1286],{"type":566,"value":1287}," \u003C=",{"type":561,"tag":593,"props":1289,"children":1290},{"style":906},[1291],{"type":566,"value":1052},{"type":561,"tag":593,"props":1293,"children":1294},{"style":878},[1295],{"type":566,"value":1278},{"type":561,"tag":593,"props":1297,"children":1298},{"style":906},[1299],{"type":566,"value":1265},{"type":561,"tag":593,"props":1301,"children":1302},{"style":989},[1303],{"type":566,"value":1304},"++",{"type":561,"tag":593,"props":1306,"children":1307},{"style":878},[1308],{"type":566,"value":1033},{"type":561,"tag":593,"props":1310,"children":1311},{"style":878},[1312],{"type":566,"value":1038},{"type":561,"tag":593,"props":1314,"children":1316},{"class":595,"line":1315},12,[1317,1322,1327,1331,1335,1340,1345,1350,1354],{"type":561,"tag":593,"props":1318,"children":1319},{"style":989},[1320],{"type":566,"value":1321},"    const",{"type":561,"tag":593,"props":1323,"children":1324},{"style":906},[1325],{"type":566,"value":1326}," str1",{"type":561,"tag":593,"props":1328,"children":1329},{"style":878},[1330],{"type":566,"value":1003},{"type":561,"tag":593,"props":1332,"children":1333},{"style":906},[1334],{"type":566,"value":1061},{"type":561,"tag":593,"props":1336,"children":1337},{"style":878},[1338],{"type":566,"value":1339},"[",{"type":561,"tag":593,"props":1341,"children":1342},{"style":906},[1343],{"type":566,"value":1344},"i",{"type":561,"tag":593,"props":1346,"children":1347},{"style":989},[1348],{"type":566,"value":1349}," -",{"type":561,"tag":593,"props":1351,"children":1352},{"style":1155},[1353],{"type":566,"value":1158},{"type":561,"tag":593,"props":1355,"children":1356},{"style":878},[1357],{"type":566,"value":1358},"];\n",{"type":561,"tag":593,"props":1360,"children":1362},{"class":595,"line":1361},13,[1363,1368,1372,1376,1381,1385,1389,1393,1397,1401,1405,1409,1413,1417,1421],{"type":561,"tag":593,"props":1364,"children":1365},{"style":884},[1366],{"type":566,"value":1367},"    for",{"type":561,"tag":593,"props":1369,"children":1370},{"style":878},[1371],{"type":566,"value":1013},{"type":561,"tag":593,"props":1373,"children":1374},{"style":989},[1375],{"type":566,"value":1260},{"type":561,"tag":593,"props":1377,"children":1378},{"style":906},[1379],{"type":566,"value":1380}," j",{"type":561,"tag":593,"props":1382,"children":1383},{"style":878},[1384],{"type":566,"value":1003},{"type":561,"tag":593,"props":1386,"children":1387},{"style":1155},[1388],{"type":566,"value":1158},{"type":561,"tag":593,"props":1390,"children":1391},{"style":878},[1392],{"type":566,"value":1278},{"type":561,"tag":593,"props":1394,"children":1395},{"style":906},[1396],{"type":566,"value":1380},{"type":561,"tag":593,"props":1398,"children":1399},{"style":878},[1400],{"type":566,"value":1287},{"type":561,"tag":593,"props":1402,"children":1403},{"style":906},[1404],{"type":566,"value":1090},{"type":561,"tag":593,"props":1406,"children":1407},{"style":878},[1408],{"type":566,"value":1278},{"type":561,"tag":593,"props":1410,"children":1411},{"style":906},[1412],{"type":566,"value":1380},{"type":561,"tag":593,"props":1414,"children":1415},{"style":989},[1416],{"type":566,"value":1304},{"type":561,"tag":593,"props":1418,"children":1419},{"style":878},[1420],{"type":566,"value":1033},{"type":561,"tag":593,"props":1422,"children":1423},{"style":878},[1424],{"type":566,"value":1038},{"type":561,"tag":593,"props":1426,"children":1428},{"class":595,"line":1427},14,[1429,1434,1439,1443,1447,1451,1456,1460,1464],{"type":561,"tag":593,"props":1430,"children":1431},{"style":989},[1432],{"type":566,"value":1433},"      const",{"type":561,"tag":593,"props":1435,"children":1436},{"style":906},[1437],{"type":566,"value":1438}," str2",{"type":561,"tag":593,"props":1440,"children":1441},{"style":878},[1442],{"type":566,"value":1003},{"type":561,"tag":593,"props":1444,"children":1445},{"style":906},[1446],{"type":566,"value":1028},{"type":561,"tag":593,"props":1448,"children":1449},{"style":878},[1450],{"type":566,"value":1339},{"type":561,"tag":593,"props":1452,"children":1453},{"style":906},[1454],{"type":566,"value":1455},"j",{"type":561,"tag":593,"props":1457,"children":1458},{"style":989},[1459],{"type":566,"value":1349},{"type":561,"tag":593,"props":1461,"children":1462},{"style":1155},[1463],{"type":566,"value":1158},{"type":561,"tag":593,"props":1465,"children":1466},{"style":878},[1467],{"type":566,"value":1358},{"type":561,"tag":593,"props":1469,"children":1471},{"class":595,"line":1470},15,[1472,1477,1481,1486,1491,1495,1499],{"type":561,"tag":593,"props":1473,"children":1474},{"style":884},[1475],{"type":566,"value":1476},"      if",{"type":561,"tag":593,"props":1478,"children":1479},{"style":878},[1480],{"type":566,"value":1013},{"type":561,"tag":593,"props":1482,"children":1483},{"style":906},[1484],{"type":566,"value":1485},"str1",{"type":561,"tag":593,"props":1487,"children":1488},{"style":989},[1489],{"type":566,"value":1490}," ===",{"type":561,"tag":593,"props":1492,"children":1493},{"style":906},[1494],{"type":566,"value":1438},{"type":561,"tag":593,"props":1496,"children":1497},{"style":878},[1498],{"type":566,"value":1033},{"type":561,"tag":593,"props":1500,"children":1501},{"style":878},[1502],{"type":566,"value":1038},{"type":561,"tag":593,"props":1504,"children":1506},{"class":595,"line":1505},16,[1507,1512,1516,1520,1525,1529,1534,1538,1542,1546,1550,1554,1558,1562,1566,1570,1574,1578,1582,1586],{"type":561,"tag":593,"props":1508,"children":1509},{"style":906},[1510],{"type":566,"value":1511},"        dp",{"type":561,"tag":593,"props":1513,"children":1514},{"style":878},[1515],{"type":566,"value":1339},{"type":561,"tag":593,"props":1517,"children":1518},{"style":906},[1519],{"type":566,"value":1344},{"type":561,"tag":593,"props":1521,"children":1522},{"style":878},[1523],{"type":566,"value":1524},"][",{"type":561,"tag":593,"props":1526,"children":1527},{"style":906},[1528],{"type":566,"value":1455},{"type":561,"tag":593,"props":1530,"children":1531},{"style":878},[1532],{"type":566,"value":1533},"]",{"type":561,"tag":593,"props":1535,"children":1536},{"style":878},[1537],{"type":566,"value":1003},{"type":561,"tag":593,"props":1539,"children":1540},{"style":906},[1541],{"type":566,"value":1123},{"type":561,"tag":593,"props":1543,"children":1544},{"style":878},[1545],{"type":566,"value":1339},{"type":561,"tag":593,"props":1547,"children":1548},{"style":906},[1549],{"type":566,"value":1344},{"type":561,"tag":593,"props":1551,"children":1552},{"style":989},[1553],{"type":566,"value":1349},{"type":561,"tag":593,"props":1555,"children":1556},{"style":1155},[1557],{"type":566,"value":1158},{"type":561,"tag":593,"props":1559,"children":1560},{"style":878},[1561],{"type":566,"value":1524},{"type":561,"tag":593,"props":1563,"children":1564},{"style":906},[1565],{"type":566,"value":1455},{"type":561,"tag":593,"props":1567,"children":1568},{"style":989},[1569],{"type":566,"value":1349},{"type":561,"tag":593,"props":1571,"children":1572},{"style":1155},[1573],{"type":566,"value":1158},{"type":561,"tag":593,"props":1575,"children":1576},{"style":878},[1577],{"type":566,"value":1533},{"type":561,"tag":593,"props":1579,"children":1580},{"style":989},[1581],{"type":566,"value":1152},{"type":561,"tag":593,"props":1583,"children":1584},{"style":1155},[1585],{"type":566,"value":1158},{"type":561,"tag":593,"props":1587,"children":1588},{"style":878},[1589],{"type":566,"value":1077},{"type":561,"tag":593,"props":1591,"children":1593},{"class":595,"line":1592},17,[1594,1599,1604],{"type":561,"tag":593,"props":1595,"children":1596},{"style":878},[1597],{"type":566,"value":1598},"      }",{"type":561,"tag":593,"props":1600,"children":1601},{"style":884},[1602],{"type":566,"value":1603}," else",{"type":561,"tag":593,"props":1605,"children":1606},{"style":878},[1607],{"type":566,"value":1038},{"type":561,"tag":593,"props":1609,"children":1611},{"class":595,"line":1610},18,[1612,1616,1620,1624,1628,1632,1636,1640,1645,1649,1654,1658,1663,1667,1671,1675,1679,1683,1687,1692,1696,1700,1704,1708,1712,1716,1720],{"type":561,"tag":593,"props":1613,"children":1614},{"style":906},[1615],{"type":566,"value":1511},{"type":561,"tag":593,"props":1617,"children":1618},{"style":878},[1619],{"type":566,"value":1339},{"type":561,"tag":593,"props":1621,"children":1622},{"style":906},[1623],{"type":566,"value":1344},{"type":561,"tag":593,"props":1625,"children":1626},{"style":878},[1627],{"type":566,"value":1524},{"type":561,"tag":593,"props":1629,"children":1630},{"style":906},[1631],{"type":566,"value":1455},{"type":561,"tag":593,"props":1633,"children":1634},{"style":878},[1635],{"type":566,"value":1533},{"type":561,"tag":593,"props":1637,"children":1638},{"style":878},[1639],{"type":566,"value":1003},{"type":561,"tag":593,"props":1641,"children":1642},{"style":906},[1643],{"type":566,"value":1644}," Math",{"type":561,"tag":593,"props":1646,"children":1647},{"style":878},[1648],{"type":566,"value":1066},{"type":561,"tag":593,"props":1650,"children":1651},{"style":995},[1652],{"type":566,"value":1653},"max",{"type":561,"tag":593,"props":1655,"children":1656},{"style":878},[1657],{"type":566,"value":1142},{"type":561,"tag":593,"props":1659,"children":1660},{"style":906},[1661],{"type":566,"value":1662},"dp",{"type":561,"tag":593,"props":1664,"children":1665},{"style":878},[1666],{"type":566,"value":1339},{"type":561,"tag":593,"props":1668,"children":1669},{"style":906},[1670],{"type":566,"value":1344},{"type":561,"tag":593,"props":1672,"children":1673},{"style":989},[1674],{"type":566,"value":1349},{"type":561,"tag":593,"props":1676,"children":1677},{"style":1155},[1678],{"type":566,"value":1158},{"type":561,"tag":593,"props":1680,"children":1681},{"style":878},[1682],{"type":566,"value":1524},{"type":561,"tag":593,"props":1684,"children":1685},{"style":906},[1686],{"type":566,"value":1455},{"type":561,"tag":593,"props":1688,"children":1689},{"style":878},[1690],{"type":566,"value":1691},"],",{"type":561,"tag":593,"props":1693,"children":1694},{"style":906},[1695],{"type":566,"value":1123},{"type":561,"tag":593,"props":1697,"children":1698},{"style":878},[1699],{"type":566,"value":1339},{"type":561,"tag":593,"props":1701,"children":1702},{"style":906},[1703],{"type":566,"value":1344},{"type":561,"tag":593,"props":1705,"children":1706},{"style":878},[1707],{"type":566,"value":1524},{"type":561,"tag":593,"props":1709,"children":1710},{"style":906},[1711],{"type":566,"value":1455},{"type":561,"tag":593,"props":1713,"children":1714},{"style":989},[1715],{"type":566,"value":1349},{"type":561,"tag":593,"props":1717,"children":1718},{"style":1155},[1719],{"type":566,"value":1158},{"type":561,"tag":593,"props":1721,"children":1722},{"style":878},[1723],{"type":566,"value":1724},"]);\n",{"type":561,"tag":593,"props":1726,"children":1728},{"class":595,"line":1727},19,[1729],{"type":561,"tag":593,"props":1730,"children":1731},{"style":878},[1732],{"type":566,"value":1733},"      }\n",{"type":561,"tag":593,"props":1735,"children":1737},{"class":595,"line":1736},20,[1738],{"type":561,"tag":593,"props":1739,"children":1740},{"style":878},[1741],{"type":566,"value":1742},"    }\n",{"type":561,"tag":593,"props":1744,"children":1746},{"class":595,"line":1745},21,[1747],{"type":561,"tag":593,"props":1748,"children":1749},{"style":878},[1750],{"type":566,"value":1751},"  }\n",{"type":561,"tag":593,"props":1753,"children":1755},{"class":595,"line":1754},22,[1756,1761,1765,1769,1773,1777,1781],{"type":561,"tag":593,"props":1757,"children":1758},{"style":884},[1759],{"type":566,"value":1760},"  return",{"type":561,"tag":593,"props":1762,"children":1763},{"style":906},[1764],{"type":566,"value":1123},{"type":561,"tag":593,"props":1766,"children":1767},{"style":878},[1768],{"type":566,"value":1339},{"type":561,"tag":593,"props":1770,"children":1771},{"style":906},[1772],{"type":566,"value":1147},{"type":561,"tag":593,"props":1774,"children":1775},{"style":878},[1776],{"type":566,"value":1524},{"type":561,"tag":593,"props":1778,"children":1779},{"style":906},[1780],{"type":566,"value":1213},{"type":561,"tag":593,"props":1782,"children":1783},{"style":878},[1784],{"type":566,"value":1358},{"type":561,"tag":593,"props":1786,"children":1788},{"class":595,"line":1787},23,[1789],{"type":561,"tag":593,"props":1790,"children":1791},{"style":878},[1792],{"type":566,"value":1793},"};\n",{"type":561,"tag":1795,"props":1796,"children":1797},"style",{},[1798],{"type":566,"value":1799},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":554,"searchDepth":945,"depth":945,"links":1801},[1802,1807],{"id":715,"depth":605,"text":715,"children":1803},[1804,1805,1806],{"id":726,"depth":614,"text":726},{"id":741,"depth":614,"text":741},{"id":799,"depth":614,"text":799},{"id":834,"depth":605,"text":834,"children":1808},[1809],{"id":839,"depth":614,"text":839},"markdown","content:1.algorithm:3.leetcode:3.major:1143.longest-common-subsequence.md","content","1.algorithm/3.leetcode/3.major/1143.longest-common-subsequence.md","md",[1816,1818],{"_path":261,"title":260,"description":1817},"对于字符串 s 和 t，只有在 s = t + t + t + ... + t + t（t 自身连接 1 次或多次）时，我们才认定 “t 能除尽 s”。",{"_path":267,"title":266,"description":1819},"给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。",1715094972885]