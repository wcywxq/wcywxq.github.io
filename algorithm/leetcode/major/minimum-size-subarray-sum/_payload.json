[{"data":1,"prerenderedAt":1360},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/minimum-size-subarray-sum":543,"/algorithm/leetcode/major/minimum-size-subarray-sum-surround":1355},[4,269,298,511,519,528],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":510},"代码考核","/code-assessment",[302,404,503],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":498,"_path":499},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":501,"_path":502},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":504,"_path":505,"children":506},"Ts 类型挑战","/code-assessment/type-challeges",[507],{"title":508,"_path":509},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":512,"_path":513,"children":514,"icon":518},"项目","/project",[515],{"title":516,"_path":517},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":520,"_path":521,"children":522,"icon":527},"设计模式","/design-mode",[523,524],{"title":520,"_path":521},{"title":525,"_path":526},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":529,"_path":530,"children":531,"icon":542},"后端语言","/backend-languages",[532],{"title":533,"_path":534,"children":535},"Python","/backend-languages/python",[536,539],{"title":537,"_path":538},"基础","/backend-languages/python/base",{"title":540,"_path":541},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":207,"_dir":544,"_draft":545,"_partial":545,"_locale":546,"title":206,"description":547,"url":548,"body":549,"_type":1350,"_id":1351,"_source":1352,"_file":1353,"_extension":1354},"major",false,"","给定一个含有 n 个正整数的数组和一个正整数 target 。","https://leetcode.cn/problems/minimum-size-subarray-sum",{"type":550,"children":551,"toc":1344},"root",[552,559,564,569,608,613,636,641,664,669,689,695,700,706,1338],{"type":553,"tag":554,"props":555,"children":556},"element","p",{},[557],{"type":558,"value":547},"text",{"type":553,"tag":554,"props":560,"children":561},{},[562],{"type":558,"value":563},"找出该数组中满足其总和大于等于 target 的长度最小的 连续\n子数组\n[numsl, numsl+1, ..., numsr-1, numsr] ，并返回其长度。如果不存在符合条件的子数组，返回 0 。",{"type":553,"tag":554,"props":565,"children":566},{},[567],{"type":558,"value":568},"示例 1：",{"type":553,"tag":570,"props":571,"children":574},"pre",{"className":572,"code":573,"language":558,"meta":546,"style":546},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：target = 7, nums = [2,3,1,2,4,3]\n输出：2\n解释：子数组 [4,3] 是该条件下的长度最小的子数组。\n",[575],{"type":553,"tag":576,"props":577,"children":578},"code",{"__ignoreMap":546},[579,590,599],{"type":553,"tag":580,"props":581,"children":584},"span",{"class":582,"line":583},"line",1,[585],{"type":553,"tag":580,"props":586,"children":587},{},[588],{"type":558,"value":589},"输入：target = 7, nums = [2,3,1,2,4,3]\n",{"type":553,"tag":580,"props":591,"children":593},{"class":582,"line":592},2,[594],{"type":553,"tag":580,"props":595,"children":596},{},[597],{"type":558,"value":598},"输出：2\n",{"type":553,"tag":580,"props":600,"children":602},{"class":582,"line":601},3,[603],{"type":553,"tag":580,"props":604,"children":605},{},[606],{"type":558,"value":607},"解释：子数组 [4,3] 是该条件下的长度最小的子数组。\n",{"type":553,"tag":554,"props":609,"children":610},{},[611],{"type":558,"value":612},"示例 2：",{"type":553,"tag":570,"props":614,"children":616},{"className":572,"code":615,"language":558,"meta":546,"style":546},"输入：target = 4, nums = [1,4,4]\n输出：1\n",[617],{"type":553,"tag":576,"props":618,"children":619},{"__ignoreMap":546},[620,628],{"type":553,"tag":580,"props":621,"children":622},{"class":582,"line":583},[623],{"type":553,"tag":580,"props":624,"children":625},{},[626],{"type":558,"value":627},"输入：target = 4, nums = [1,4,4]\n",{"type":553,"tag":580,"props":629,"children":630},{"class":582,"line":592},[631],{"type":553,"tag":580,"props":632,"children":633},{},[634],{"type":558,"value":635},"输出：1\n",{"type":553,"tag":554,"props":637,"children":638},{},[639],{"type":558,"value":640},"示例 3：",{"type":553,"tag":570,"props":642,"children":644},{"className":572,"code":643,"language":558,"meta":546,"style":546},"输入：target = 11, nums = [1,1,1,1,1,1,1,1]\n输出：0\n",[645],{"type":553,"tag":576,"props":646,"children":647},{"__ignoreMap":546},[648,656],{"type":553,"tag":580,"props":649,"children":650},{"class":582,"line":583},[651],{"type":553,"tag":580,"props":652,"children":653},{},[654],{"type":558,"value":655},"输入：target = 11, nums = [1,1,1,1,1,1,1,1]\n",{"type":553,"tag":580,"props":657,"children":658},{"class":582,"line":592},[659],{"type":553,"tag":580,"props":660,"children":661},{},[662],{"type":558,"value":663},"输出：0\n",{"type":553,"tag":554,"props":665,"children":666},{},[667],{"type":558,"value":668},"提示：",{"type":553,"tag":670,"props":671,"children":672},"ul",{},[673,679,684],{"type":553,"tag":674,"props":675,"children":676},"li",{},[677],{"type":558,"value":678},"1 \u003C= target \u003C= 10^9",{"type":553,"tag":674,"props":680,"children":681},{},[682],{"type":558,"value":683},"1 \u003C= nums.length \u003C= 10^5",{"type":553,"tag":674,"props":685,"children":686},{},[687],{"type":558,"value":688},"1 \u003C= nums[i] \u003C= 10^5",{"type":553,"tag":690,"props":691,"children":693},"h2",{"id":692},"解题思路",[694],{"type":558,"value":692},{"type":553,"tag":690,"props":696,"children":698},{"id":697},"实现",[699],{"type":558,"value":697},{"type":553,"tag":701,"props":702,"children":704},"h3",{"id":703},"滑动窗口",[705],{"type":558,"value":703},{"type":553,"tag":570,"props":707,"children":711},{"className":708,"code":709,"language":710,"meta":546,"style":546},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} target\n * @param {number[]} nums\n * @return {number}\n */\nvar minSubArrayLen = function (target, nums) {\n  let minLen = Number.MAX_SAFE_INTEGER;\n  let l = 0;\n  let r = 0;\n  let sum = 0;\n  while (r \u003C nums.length) {\n    sum += nums[r];\n    while (sum >= target) {\n      minLen = Math.min(minLen, r - l + 1);\n      sum -= nums[l];\n      l++;\n    }\n    r++;\n  }\n  return minLen === Number.MAX_SAFE_INTEGER ? 0 : minLen;\n};\n","js",[712],{"type":553,"tag":576,"props":713,"children":714},{"__ignoreMap":546},[715,724,766,799,829,838,894,933,960,985,1010,1055,1087,1123,1192,1223,1241,1250,1267,1276,1329],{"type":553,"tag":580,"props":716,"children":717},{"class":582,"line":583},[718],{"type":553,"tag":580,"props":719,"children":721},{"style":720},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[722],{"type":558,"value":723},"/**\n",{"type":553,"tag":580,"props":725,"children":726},{"class":582,"line":592},[727,732,738,744,749,755,760],{"type":553,"tag":580,"props":728,"children":729},{"style":720},[730],{"type":558,"value":731}," * ",{"type":553,"tag":580,"props":733,"children":735},{"style":734},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[736],{"type":558,"value":737},"@",{"type":553,"tag":580,"props":739,"children":741},{"style":740},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[742],{"type":558,"value":743},"param",{"type":553,"tag":580,"props":745,"children":746},{"style":734},[747],{"type":558,"value":748}," {",{"type":553,"tag":580,"props":750,"children":752},{"style":751},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[753],{"type":558,"value":754},"number",{"type":553,"tag":580,"props":756,"children":757},{"style":734},[758],{"type":558,"value":759},"}",{"type":553,"tag":580,"props":761,"children":763},{"style":762},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[764],{"type":558,"value":765}," target\n",{"type":553,"tag":580,"props":767,"children":768},{"class":582,"line":601},[769,773,777,781,785,790,794],{"type":553,"tag":580,"props":770,"children":771},{"style":720},[772],{"type":558,"value":731},{"type":553,"tag":580,"props":774,"children":775},{"style":734},[776],{"type":558,"value":737},{"type":553,"tag":580,"props":778,"children":779},{"style":740},[780],{"type":558,"value":743},{"type":553,"tag":580,"props":782,"children":783},{"style":734},[784],{"type":558,"value":748},{"type":553,"tag":580,"props":786,"children":787},{"style":751},[788],{"type":558,"value":789},"number[]",{"type":553,"tag":580,"props":791,"children":792},{"style":734},[793],{"type":558,"value":759},{"type":553,"tag":580,"props":795,"children":796},{"style":762},[797],{"type":558,"value":798}," nums\n",{"type":553,"tag":580,"props":800,"children":802},{"class":582,"line":801},4,[803,807,811,816,820,824],{"type":553,"tag":580,"props":804,"children":805},{"style":720},[806],{"type":558,"value":731},{"type":553,"tag":580,"props":808,"children":809},{"style":734},[810],{"type":558,"value":737},{"type":553,"tag":580,"props":812,"children":813},{"style":740},[814],{"type":558,"value":815},"return",{"type":553,"tag":580,"props":817,"children":818},{"style":734},[819],{"type":558,"value":748},{"type":553,"tag":580,"props":821,"children":822},{"style":751},[823],{"type":558,"value":754},{"type":553,"tag":580,"props":825,"children":826},{"style":734},[827],{"type":558,"value":828},"}\n",{"type":553,"tag":580,"props":830,"children":832},{"class":582,"line":831},5,[833],{"type":553,"tag":580,"props":834,"children":835},{"style":720},[836],{"type":558,"value":837}," */\n",{"type":553,"tag":580,"props":839,"children":841},{"class":582,"line":840},6,[842,848,854,859,864,869,874,879,884,889],{"type":553,"tag":580,"props":843,"children":845},{"style":844},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[846],{"type":558,"value":847},"var",{"type":553,"tag":580,"props":849,"children":851},{"style":850},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[852],{"type":558,"value":853}," minSubArrayLen",{"type":553,"tag":580,"props":855,"children":856},{"style":734},[857],{"type":558,"value":858}," =",{"type":553,"tag":580,"props":860,"children":861},{"style":844},[862],{"type":558,"value":863}," function",{"type":553,"tag":580,"props":865,"children":866},{"style":734},[867],{"type":558,"value":868}," (",{"type":553,"tag":580,"props":870,"children":871},{"style":762},[872],{"type":558,"value":873},"target",{"type":553,"tag":580,"props":875,"children":876},{"style":734},[877],{"type":558,"value":878},",",{"type":553,"tag":580,"props":880,"children":881},{"style":762},[882],{"type":558,"value":883}," nums",{"type":553,"tag":580,"props":885,"children":886},{"style":734},[887],{"type":558,"value":888},")",{"type":553,"tag":580,"props":890,"children":891},{"style":734},[892],{"type":558,"value":893}," {\n",{"type":553,"tag":580,"props":895,"children":897},{"class":582,"line":896},7,[898,903,908,912,917,922,928],{"type":553,"tag":580,"props":899,"children":900},{"style":844},[901],{"type":558,"value":902},"  let",{"type":553,"tag":580,"props":904,"children":905},{"style":762},[906],{"type":558,"value":907}," minLen",{"type":553,"tag":580,"props":909,"children":910},{"style":734},[911],{"type":558,"value":858},{"type":553,"tag":580,"props":913,"children":914},{"style":762},[915],{"type":558,"value":916}," Number",{"type":553,"tag":580,"props":918,"children":919},{"style":734},[920],{"type":558,"value":921},".",{"type":553,"tag":580,"props":923,"children":925},{"style":924},"--shiki-light:#393A34;--shiki-default:#393A34;--shiki-dark:#DBD7CAEE",[926],{"type":558,"value":927},"MAX_SAFE_INTEGER",{"type":553,"tag":580,"props":929,"children":930},{"style":734},[931],{"type":558,"value":932},";\n",{"type":553,"tag":580,"props":934,"children":936},{"class":582,"line":935},8,[937,941,946,950,956],{"type":553,"tag":580,"props":938,"children":939},{"style":844},[940],{"type":558,"value":902},{"type":553,"tag":580,"props":942,"children":943},{"style":762},[944],{"type":558,"value":945}," l",{"type":553,"tag":580,"props":947,"children":948},{"style":734},[949],{"type":558,"value":858},{"type":553,"tag":580,"props":951,"children":953},{"style":952},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[954],{"type":558,"value":955}," 0",{"type":553,"tag":580,"props":957,"children":958},{"style":734},[959],{"type":558,"value":932},{"type":553,"tag":580,"props":961,"children":963},{"class":582,"line":962},9,[964,968,973,977,981],{"type":553,"tag":580,"props":965,"children":966},{"style":844},[967],{"type":558,"value":902},{"type":553,"tag":580,"props":969,"children":970},{"style":762},[971],{"type":558,"value":972}," r",{"type":553,"tag":580,"props":974,"children":975},{"style":734},[976],{"type":558,"value":858},{"type":553,"tag":580,"props":978,"children":979},{"style":952},[980],{"type":558,"value":955},{"type":553,"tag":580,"props":982,"children":983},{"style":734},[984],{"type":558,"value":932},{"type":553,"tag":580,"props":986,"children":988},{"class":582,"line":987},10,[989,993,998,1002,1006],{"type":553,"tag":580,"props":990,"children":991},{"style":844},[992],{"type":558,"value":902},{"type":553,"tag":580,"props":994,"children":995},{"style":762},[996],{"type":558,"value":997}," sum",{"type":553,"tag":580,"props":999,"children":1000},{"style":734},[1001],{"type":558,"value":858},{"type":553,"tag":580,"props":1003,"children":1004},{"style":952},[1005],{"type":558,"value":955},{"type":553,"tag":580,"props":1007,"children":1008},{"style":734},[1009],{"type":558,"value":932},{"type":553,"tag":580,"props":1011,"children":1013},{"class":582,"line":1012},11,[1014,1019,1023,1028,1033,1037,1041,1047,1051],{"type":553,"tag":580,"props":1015,"children":1016},{"style":740},[1017],{"type":558,"value":1018},"  while",{"type":553,"tag":580,"props":1020,"children":1021},{"style":734},[1022],{"type":558,"value":868},{"type":553,"tag":580,"props":1024,"children":1025},{"style":762},[1026],{"type":558,"value":1027},"r",{"type":553,"tag":580,"props":1029,"children":1030},{"style":734},[1031],{"type":558,"value":1032}," \u003C",{"type":553,"tag":580,"props":1034,"children":1035},{"style":762},[1036],{"type":558,"value":883},{"type":553,"tag":580,"props":1038,"children":1039},{"style":734},[1040],{"type":558,"value":921},{"type":553,"tag":580,"props":1042,"children":1044},{"style":1043},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1045],{"type":558,"value":1046},"length",{"type":553,"tag":580,"props":1048,"children":1049},{"style":734},[1050],{"type":558,"value":888},{"type":553,"tag":580,"props":1052,"children":1053},{"style":734},[1054],{"type":558,"value":893},{"type":553,"tag":580,"props":1056,"children":1058},{"class":582,"line":1057},12,[1059,1064,1069,1073,1078,1082],{"type":553,"tag":580,"props":1060,"children":1061},{"style":762},[1062],{"type":558,"value":1063},"    sum",{"type":553,"tag":580,"props":1065,"children":1066},{"style":844},[1067],{"type":558,"value":1068}," +=",{"type":553,"tag":580,"props":1070,"children":1071},{"style":762},[1072],{"type":558,"value":883},{"type":553,"tag":580,"props":1074,"children":1075},{"style":734},[1076],{"type":558,"value":1077},"[",{"type":553,"tag":580,"props":1079,"children":1080},{"style":762},[1081],{"type":558,"value":1027},{"type":553,"tag":580,"props":1083,"children":1084},{"style":734},[1085],{"type":558,"value":1086},"];\n",{"type":553,"tag":580,"props":1088,"children":1090},{"class":582,"line":1089},13,[1091,1096,1100,1105,1110,1115,1119],{"type":553,"tag":580,"props":1092,"children":1093},{"style":740},[1094],{"type":558,"value":1095},"    while",{"type":553,"tag":580,"props":1097,"children":1098},{"style":734},[1099],{"type":558,"value":868},{"type":553,"tag":580,"props":1101,"children":1102},{"style":762},[1103],{"type":558,"value":1104},"sum",{"type":553,"tag":580,"props":1106,"children":1107},{"style":734},[1108],{"type":558,"value":1109}," >=",{"type":553,"tag":580,"props":1111,"children":1112},{"style":762},[1113],{"type":558,"value":1114}," target",{"type":553,"tag":580,"props":1116,"children":1117},{"style":734},[1118],{"type":558,"value":888},{"type":553,"tag":580,"props":1120,"children":1121},{"style":734},[1122],{"type":558,"value":893},{"type":553,"tag":580,"props":1124,"children":1126},{"class":582,"line":1125},14,[1127,1132,1136,1141,1145,1150,1155,1160,1164,1168,1173,1177,1182,1187],{"type":553,"tag":580,"props":1128,"children":1129},{"style":762},[1130],{"type":558,"value":1131},"      minLen",{"type":553,"tag":580,"props":1133,"children":1134},{"style":734},[1135],{"type":558,"value":858},{"type":553,"tag":580,"props":1137,"children":1138},{"style":762},[1139],{"type":558,"value":1140}," Math",{"type":553,"tag":580,"props":1142,"children":1143},{"style":734},[1144],{"type":558,"value":921},{"type":553,"tag":580,"props":1146,"children":1147},{"style":850},[1148],{"type":558,"value":1149},"min",{"type":553,"tag":580,"props":1151,"children":1152},{"style":734},[1153],{"type":558,"value":1154},"(",{"type":553,"tag":580,"props":1156,"children":1157},{"style":762},[1158],{"type":558,"value":1159},"minLen",{"type":553,"tag":580,"props":1161,"children":1162},{"style":734},[1163],{"type":558,"value":878},{"type":553,"tag":580,"props":1165,"children":1166},{"style":762},[1167],{"type":558,"value":972},{"type":553,"tag":580,"props":1169,"children":1170},{"style":844},[1171],{"type":558,"value":1172}," -",{"type":553,"tag":580,"props":1174,"children":1175},{"style":762},[1176],{"type":558,"value":945},{"type":553,"tag":580,"props":1178,"children":1179},{"style":844},[1180],{"type":558,"value":1181}," +",{"type":553,"tag":580,"props":1183,"children":1184},{"style":952},[1185],{"type":558,"value":1186}," 1",{"type":553,"tag":580,"props":1188,"children":1189},{"style":734},[1190],{"type":558,"value":1191},");\n",{"type":553,"tag":580,"props":1193,"children":1195},{"class":582,"line":1194},15,[1196,1201,1206,1210,1214,1219],{"type":553,"tag":580,"props":1197,"children":1198},{"style":762},[1199],{"type":558,"value":1200},"      sum",{"type":553,"tag":580,"props":1202,"children":1203},{"style":844},[1204],{"type":558,"value":1205}," -=",{"type":553,"tag":580,"props":1207,"children":1208},{"style":762},[1209],{"type":558,"value":883},{"type":553,"tag":580,"props":1211,"children":1212},{"style":734},[1213],{"type":558,"value":1077},{"type":553,"tag":580,"props":1215,"children":1216},{"style":762},[1217],{"type":558,"value":1218},"l",{"type":553,"tag":580,"props":1220,"children":1221},{"style":734},[1222],{"type":558,"value":1086},{"type":553,"tag":580,"props":1224,"children":1226},{"class":582,"line":1225},16,[1227,1232,1237],{"type":553,"tag":580,"props":1228,"children":1229},{"style":762},[1230],{"type":558,"value":1231},"      l",{"type":553,"tag":580,"props":1233,"children":1234},{"style":844},[1235],{"type":558,"value":1236},"++",{"type":553,"tag":580,"props":1238,"children":1239},{"style":734},[1240],{"type":558,"value":932},{"type":553,"tag":580,"props":1242,"children":1244},{"class":582,"line":1243},17,[1245],{"type":553,"tag":580,"props":1246,"children":1247},{"style":734},[1248],{"type":558,"value":1249},"    }\n",{"type":553,"tag":580,"props":1251,"children":1253},{"class":582,"line":1252},18,[1254,1259,1263],{"type":553,"tag":580,"props":1255,"children":1256},{"style":762},[1257],{"type":558,"value":1258},"    r",{"type":553,"tag":580,"props":1260,"children":1261},{"style":844},[1262],{"type":558,"value":1236},{"type":553,"tag":580,"props":1264,"children":1265},{"style":734},[1266],{"type":558,"value":932},{"type":553,"tag":580,"props":1268,"children":1270},{"class":582,"line":1269},19,[1271],{"type":553,"tag":580,"props":1272,"children":1273},{"style":734},[1274],{"type":558,"value":1275},"  }\n",{"type":553,"tag":580,"props":1277,"children":1279},{"class":582,"line":1278},20,[1280,1285,1289,1294,1298,1302,1307,1312,1316,1321,1325],{"type":553,"tag":580,"props":1281,"children":1282},{"style":740},[1283],{"type":558,"value":1284},"  return",{"type":553,"tag":580,"props":1286,"children":1287},{"style":762},[1288],{"type":558,"value":907},{"type":553,"tag":580,"props":1290,"children":1291},{"style":844},[1292],{"type":558,"value":1293}," ===",{"type":553,"tag":580,"props":1295,"children":1296},{"style":762},[1297],{"type":558,"value":916},{"type":553,"tag":580,"props":1299,"children":1300},{"style":734},[1301],{"type":558,"value":921},{"type":553,"tag":580,"props":1303,"children":1304},{"style":924},[1305],{"type":558,"value":1306},"MAX_SAFE_INTEGER ",{"type":553,"tag":580,"props":1308,"children":1309},{"style":844},[1310],{"type":558,"value":1311},"?",{"type":553,"tag":580,"props":1313,"children":1314},{"style":952},[1315],{"type":558,"value":955},{"type":553,"tag":580,"props":1317,"children":1318},{"style":844},[1319],{"type":558,"value":1320}," :",{"type":553,"tag":580,"props":1322,"children":1323},{"style":762},[1324],{"type":558,"value":907},{"type":553,"tag":580,"props":1326,"children":1327},{"style":734},[1328],{"type":558,"value":932},{"type":553,"tag":580,"props":1330,"children":1332},{"class":582,"line":1331},21,[1333],{"type":553,"tag":580,"props":1334,"children":1335},{"style":734},[1336],{"type":558,"value":1337},"};\n",{"type":553,"tag":1339,"props":1340,"children":1341},"style",{},[1342],{"type":558,"value":1343},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":546,"searchDepth":831,"depth":831,"links":1345},[1346,1347],{"id":692,"depth":592,"text":692},{"id":697,"depth":592,"text":697,"children":1348},[1349],{"id":703,"depth":601,"text":703},"markdown","content:1.algorithm:3.leetcode:3.major:209.minimum-size-subarray-sum.md","content","1.algorithm/3.leetcode/3.major/209.minimum-size-subarray-sum.md","md",[1356,1358],{"_path":204,"title":203,"description":1357},"给你单链表的头节点 head ，请你反转链表，并返回反转后的链表。",{"_path":210,"title":209,"description":1359},"给定整数数组 nums 和整数 k，请返回数组中第 k 个最大的元素。",1714099679249]