[{"data":1,"prerenderedAt":1368},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/minimum-size-subarray-sum":551,"/algorithm/leetcode/major/minimum-size-subarray-sum-surround":1363},[4,272,301,519,527,536],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":518},"代码考核","/code-assessment",[305,410,511],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,343,359,387,394,401,404,407],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337,340],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342},"Promise","/code-assessment/source/native-api/promise",{"title":344,"_path":345,"children":346},"函数 Function","/code-assessment/source/function",[347,350,353,356],{"title":348,"_path":349},"函数防抖","/code-assessment/source/function/debounce",{"title":351,"_path":352},"函数节流","/code-assessment/source/function/throttle",{"title":354,"_path":355},"函数柯理化","/code-assessment/source/function/curry",{"title":357,"_path":358},"函数睡眠","/code-assessment/source/function/sleep",{"title":360,"_path":361,"children":362},"数组 Array","/code-assessment/source/array",[363,366,369,372,375,378,381,384],{"title":364,"_path":365},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":367,"_path":368},"数组扁平化","/code-assessment/source/array/flat",{"title":370,"_path":371},"原型方法","/code-assessment/source/array/prototype-method",{"title":373,"_path":374},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":376,"_path":377},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":379,"_path":380},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":382,"_path":383},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":385,"_path":386},"二维数组","/code-assessment/source/array/2d-array",{"title":388,"_path":389,"children":390},"字符串 String","/code-assessment/source/string",[391],{"title":392,"_path":393},"repeat()","/code-assessment/source/string/repeat",{"title":395,"_path":396,"children":397},"集合 Set","/code-assessment/source/set",[398],{"title":399,"_path":400},"遍历集合","/code-assessment/source/set/traverse",{"title":402,"_path":403},"获取通用类型","/code-assessment/source/get-generic-type",{"title":405,"_path":406},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":408,"_path":409},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":411,"_path":412,"children":413},"业务场景","/code-assessment/scene",[414,444,454,457,460,463,466,469,472,475,478,481,484,487,490,493,496,499,502,505,508],{"title":341,"_path":415,"children":416},"/code-assessment/scene/promise",[417,420,423,426,429,432,435,438,441],{"title":418,"_path":419},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":421,"_path":422},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":424,"_path":425},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":427,"_path":428},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":430,"_path":431},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":433,"_path":434},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":436,"_path":437},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":439,"_path":440},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":442,"_path":443},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":445,"_path":446,"children":447},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[448,451],{"title":449,"_path":450},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":452,"_path":453},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":455,"_path":456},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":458,"_path":459},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":461,"_path":462},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":464,"_path":465},"倒计时","/code-assessment/scene/countdown",{"title":467,"_path":468},"日期格式化","/code-assessment/scene/date-format",{"title":470,"_path":471},"实现前端路由","/code-assessment/scene/frontend-route",{"title":473,"_path":474},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":476,"_path":477},"lodash.get","/code-assessment/scene/lodash-get",{"title":479,"_path":480},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":482,"_path":483},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":485,"_path":486},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":488,"_path":489},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":491,"_path":492},"随机数","/code-assessment/scene/random-number",{"title":494,"_path":495},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":497,"_path":498},"sku 算法实现","/code-assessment/scene/sku",{"title":500,"_path":501},"整数分割","/code-assessment/scene/split-number",{"title":503,"_path":504},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":506,"_path":507},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":509,"_path":510},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":512,"_path":513,"children":514},"Ts 类型挑战","/code-assessment/type-challeges",[515],{"title":516,"_path":517},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":520,"_path":521,"children":522,"icon":526},"项目","/project",[523],{"title":524,"_path":525},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":528,"_path":529,"children":530,"icon":535},"设计模式","/design-mode",[531,532],{"title":528,"_path":529},{"title":533,"_path":534},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":537,"_path":538,"children":539,"icon":550},"后端语言","/backend-languages",[540],{"title":541,"_path":542,"children":543},"Python","/backend-languages/python",[544,547],{"title":545,"_path":546},"基础","/backend-languages/python/base",{"title":548,"_path":549},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":207,"_dir":552,"_draft":553,"_partial":553,"_locale":554,"title":206,"description":555,"url":556,"body":557,"_type":1358,"_id":1359,"_source":1360,"_file":1361,"_extension":1362},"major",false,"","给定一个含有 n 个正整数的数组和一个正整数 target 。","https://leetcode.cn/problems/minimum-size-subarray-sum",{"type":558,"children":559,"toc":1352},"root",[560,567,572,577,616,621,644,649,672,677,697,703,708,714,1346],{"type":561,"tag":562,"props":563,"children":564},"element","p",{},[565],{"type":566,"value":555},"text",{"type":561,"tag":562,"props":568,"children":569},{},[570],{"type":566,"value":571},"找出该数组中满足其总和大于等于 target 的长度最小的 连续\n子数组\n[numsl, numsl+1, ..., numsr-1, numsr] ，并返回其长度。如果不存在符合条件的子数组，返回 0 。",{"type":561,"tag":562,"props":573,"children":574},{},[575],{"type":566,"value":576},"示例 1：",{"type":561,"tag":578,"props":579,"children":582},"pre",{"className":580,"code":581,"language":566,"meta":554,"style":554},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：target = 7, nums = [2,3,1,2,4,3]\n输出：2\n解释：子数组 [4,3] 是该条件下的长度最小的子数组。\n",[583],{"type":561,"tag":584,"props":585,"children":586},"code",{"__ignoreMap":554},[587,598,607],{"type":561,"tag":588,"props":589,"children":592},"span",{"class":590,"line":591},"line",1,[593],{"type":561,"tag":588,"props":594,"children":595},{},[596],{"type":566,"value":597},"输入：target = 7, nums = [2,3,1,2,4,3]\n",{"type":561,"tag":588,"props":599,"children":601},{"class":590,"line":600},2,[602],{"type":561,"tag":588,"props":603,"children":604},{},[605],{"type":566,"value":606},"输出：2\n",{"type":561,"tag":588,"props":608,"children":610},{"class":590,"line":609},3,[611],{"type":561,"tag":588,"props":612,"children":613},{},[614],{"type":566,"value":615},"解释：子数组 [4,3] 是该条件下的长度最小的子数组。\n",{"type":561,"tag":562,"props":617,"children":618},{},[619],{"type":566,"value":620},"示例 2：",{"type":561,"tag":578,"props":622,"children":624},{"className":580,"code":623,"language":566,"meta":554,"style":554},"输入：target = 4, nums = [1,4,4]\n输出：1\n",[625],{"type":561,"tag":584,"props":626,"children":627},{"__ignoreMap":554},[628,636],{"type":561,"tag":588,"props":629,"children":630},{"class":590,"line":591},[631],{"type":561,"tag":588,"props":632,"children":633},{},[634],{"type":566,"value":635},"输入：target = 4, nums = [1,4,4]\n",{"type":561,"tag":588,"props":637,"children":638},{"class":590,"line":600},[639],{"type":561,"tag":588,"props":640,"children":641},{},[642],{"type":566,"value":643},"输出：1\n",{"type":561,"tag":562,"props":645,"children":646},{},[647],{"type":566,"value":648},"示例 3：",{"type":561,"tag":578,"props":650,"children":652},{"className":580,"code":651,"language":566,"meta":554,"style":554},"输入：target = 11, nums = [1,1,1,1,1,1,1,1]\n输出：0\n",[653],{"type":561,"tag":584,"props":654,"children":655},{"__ignoreMap":554},[656,664],{"type":561,"tag":588,"props":657,"children":658},{"class":590,"line":591},[659],{"type":561,"tag":588,"props":660,"children":661},{},[662],{"type":566,"value":663},"输入：target = 11, nums = [1,1,1,1,1,1,1,1]\n",{"type":561,"tag":588,"props":665,"children":666},{"class":590,"line":600},[667],{"type":561,"tag":588,"props":668,"children":669},{},[670],{"type":566,"value":671},"输出：0\n",{"type":561,"tag":562,"props":673,"children":674},{},[675],{"type":566,"value":676},"提示：",{"type":561,"tag":678,"props":679,"children":680},"ul",{},[681,687,692],{"type":561,"tag":682,"props":683,"children":684},"li",{},[685],{"type":566,"value":686},"1 \u003C= target \u003C= 10^9",{"type":561,"tag":682,"props":688,"children":689},{},[690],{"type":566,"value":691},"1 \u003C= nums.length \u003C= 10^5",{"type":561,"tag":682,"props":693,"children":694},{},[695],{"type":566,"value":696},"1 \u003C= nums[i] \u003C= 10^5",{"type":561,"tag":698,"props":699,"children":701},"h2",{"id":700},"解题思路",[702],{"type":566,"value":700},{"type":561,"tag":698,"props":704,"children":706},{"id":705},"实现",[707],{"type":566,"value":705},{"type":561,"tag":709,"props":710,"children":712},"h3",{"id":711},"滑动窗口",[713],{"type":566,"value":711},{"type":561,"tag":578,"props":715,"children":719},{"className":716,"code":717,"language":718,"meta":554,"style":554},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} target\n * @param {number[]} nums\n * @return {number}\n */\nvar minSubArrayLen = function (target, nums) {\n  let minLen = Number.MAX_SAFE_INTEGER;\n  let l = 0;\n  let r = 0;\n  let sum = 0;\n  while (r \u003C nums.length) {\n    sum += nums[r];\n    while (sum >= target) {\n      minLen = Math.min(minLen, r - l + 1);\n      sum -= nums[l];\n      l++;\n    }\n    r++;\n  }\n  return minLen === Number.MAX_SAFE_INTEGER ? 0 : minLen;\n};\n","js",[720],{"type":561,"tag":584,"props":721,"children":722},{"__ignoreMap":554},[723,732,774,807,837,846,902,941,968,993,1018,1063,1095,1131,1200,1231,1249,1258,1275,1284,1337],{"type":561,"tag":588,"props":724,"children":725},{"class":590,"line":591},[726],{"type":561,"tag":588,"props":727,"children":729},{"style":728},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[730],{"type":566,"value":731},"/**\n",{"type":561,"tag":588,"props":733,"children":734},{"class":590,"line":600},[735,740,746,752,757,763,768],{"type":561,"tag":588,"props":736,"children":737},{"style":728},[738],{"type":566,"value":739}," * ",{"type":561,"tag":588,"props":741,"children":743},{"style":742},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[744],{"type":566,"value":745},"@",{"type":561,"tag":588,"props":747,"children":749},{"style":748},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[750],{"type":566,"value":751},"param",{"type":561,"tag":588,"props":753,"children":754},{"style":742},[755],{"type":566,"value":756}," {",{"type":561,"tag":588,"props":758,"children":760},{"style":759},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[761],{"type":566,"value":762},"number",{"type":561,"tag":588,"props":764,"children":765},{"style":742},[766],{"type":566,"value":767},"}",{"type":561,"tag":588,"props":769,"children":771},{"style":770},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[772],{"type":566,"value":773}," target\n",{"type":561,"tag":588,"props":775,"children":776},{"class":590,"line":609},[777,781,785,789,793,798,802],{"type":561,"tag":588,"props":778,"children":779},{"style":728},[780],{"type":566,"value":739},{"type":561,"tag":588,"props":782,"children":783},{"style":742},[784],{"type":566,"value":745},{"type":561,"tag":588,"props":786,"children":787},{"style":748},[788],{"type":566,"value":751},{"type":561,"tag":588,"props":790,"children":791},{"style":742},[792],{"type":566,"value":756},{"type":561,"tag":588,"props":794,"children":795},{"style":759},[796],{"type":566,"value":797},"number[]",{"type":561,"tag":588,"props":799,"children":800},{"style":742},[801],{"type":566,"value":767},{"type":561,"tag":588,"props":803,"children":804},{"style":770},[805],{"type":566,"value":806}," nums\n",{"type":561,"tag":588,"props":808,"children":810},{"class":590,"line":809},4,[811,815,819,824,828,832],{"type":561,"tag":588,"props":812,"children":813},{"style":728},[814],{"type":566,"value":739},{"type":561,"tag":588,"props":816,"children":817},{"style":742},[818],{"type":566,"value":745},{"type":561,"tag":588,"props":820,"children":821},{"style":748},[822],{"type":566,"value":823},"return",{"type":561,"tag":588,"props":825,"children":826},{"style":742},[827],{"type":566,"value":756},{"type":561,"tag":588,"props":829,"children":830},{"style":759},[831],{"type":566,"value":762},{"type":561,"tag":588,"props":833,"children":834},{"style":742},[835],{"type":566,"value":836},"}\n",{"type":561,"tag":588,"props":838,"children":840},{"class":590,"line":839},5,[841],{"type":561,"tag":588,"props":842,"children":843},{"style":728},[844],{"type":566,"value":845}," */\n",{"type":561,"tag":588,"props":847,"children":849},{"class":590,"line":848},6,[850,856,862,867,872,877,882,887,892,897],{"type":561,"tag":588,"props":851,"children":853},{"style":852},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[854],{"type":566,"value":855},"var",{"type":561,"tag":588,"props":857,"children":859},{"style":858},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[860],{"type":566,"value":861}," minSubArrayLen",{"type":561,"tag":588,"props":863,"children":864},{"style":742},[865],{"type":566,"value":866}," =",{"type":561,"tag":588,"props":868,"children":869},{"style":852},[870],{"type":566,"value":871}," function",{"type":561,"tag":588,"props":873,"children":874},{"style":742},[875],{"type":566,"value":876}," (",{"type":561,"tag":588,"props":878,"children":879},{"style":770},[880],{"type":566,"value":881},"target",{"type":561,"tag":588,"props":883,"children":884},{"style":742},[885],{"type":566,"value":886},",",{"type":561,"tag":588,"props":888,"children":889},{"style":770},[890],{"type":566,"value":891}," nums",{"type":561,"tag":588,"props":893,"children":894},{"style":742},[895],{"type":566,"value":896},")",{"type":561,"tag":588,"props":898,"children":899},{"style":742},[900],{"type":566,"value":901}," {\n",{"type":561,"tag":588,"props":903,"children":905},{"class":590,"line":904},7,[906,911,916,920,925,930,936],{"type":561,"tag":588,"props":907,"children":908},{"style":852},[909],{"type":566,"value":910},"  let",{"type":561,"tag":588,"props":912,"children":913},{"style":770},[914],{"type":566,"value":915}," minLen",{"type":561,"tag":588,"props":917,"children":918},{"style":742},[919],{"type":566,"value":866},{"type":561,"tag":588,"props":921,"children":922},{"style":770},[923],{"type":566,"value":924}," Number",{"type":561,"tag":588,"props":926,"children":927},{"style":742},[928],{"type":566,"value":929},".",{"type":561,"tag":588,"props":931,"children":933},{"style":932},"--shiki-light:#393A34;--shiki-default:#393A34;--shiki-dark:#DBD7CAEE",[934],{"type":566,"value":935},"MAX_SAFE_INTEGER",{"type":561,"tag":588,"props":937,"children":938},{"style":742},[939],{"type":566,"value":940},";\n",{"type":561,"tag":588,"props":942,"children":944},{"class":590,"line":943},8,[945,949,954,958,964],{"type":561,"tag":588,"props":946,"children":947},{"style":852},[948],{"type":566,"value":910},{"type":561,"tag":588,"props":950,"children":951},{"style":770},[952],{"type":566,"value":953}," l",{"type":561,"tag":588,"props":955,"children":956},{"style":742},[957],{"type":566,"value":866},{"type":561,"tag":588,"props":959,"children":961},{"style":960},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[962],{"type":566,"value":963}," 0",{"type":561,"tag":588,"props":965,"children":966},{"style":742},[967],{"type":566,"value":940},{"type":561,"tag":588,"props":969,"children":971},{"class":590,"line":970},9,[972,976,981,985,989],{"type":561,"tag":588,"props":973,"children":974},{"style":852},[975],{"type":566,"value":910},{"type":561,"tag":588,"props":977,"children":978},{"style":770},[979],{"type":566,"value":980}," r",{"type":561,"tag":588,"props":982,"children":983},{"style":742},[984],{"type":566,"value":866},{"type":561,"tag":588,"props":986,"children":987},{"style":960},[988],{"type":566,"value":963},{"type":561,"tag":588,"props":990,"children":991},{"style":742},[992],{"type":566,"value":940},{"type":561,"tag":588,"props":994,"children":996},{"class":590,"line":995},10,[997,1001,1006,1010,1014],{"type":561,"tag":588,"props":998,"children":999},{"style":852},[1000],{"type":566,"value":910},{"type":561,"tag":588,"props":1002,"children":1003},{"style":770},[1004],{"type":566,"value":1005}," sum",{"type":561,"tag":588,"props":1007,"children":1008},{"style":742},[1009],{"type":566,"value":866},{"type":561,"tag":588,"props":1011,"children":1012},{"style":960},[1013],{"type":566,"value":963},{"type":561,"tag":588,"props":1015,"children":1016},{"style":742},[1017],{"type":566,"value":940},{"type":561,"tag":588,"props":1019,"children":1021},{"class":590,"line":1020},11,[1022,1027,1031,1036,1041,1045,1049,1055,1059],{"type":561,"tag":588,"props":1023,"children":1024},{"style":748},[1025],{"type":566,"value":1026},"  while",{"type":561,"tag":588,"props":1028,"children":1029},{"style":742},[1030],{"type":566,"value":876},{"type":561,"tag":588,"props":1032,"children":1033},{"style":770},[1034],{"type":566,"value":1035},"r",{"type":561,"tag":588,"props":1037,"children":1038},{"style":742},[1039],{"type":566,"value":1040}," \u003C",{"type":561,"tag":588,"props":1042,"children":1043},{"style":770},[1044],{"type":566,"value":891},{"type":561,"tag":588,"props":1046,"children":1047},{"style":742},[1048],{"type":566,"value":929},{"type":561,"tag":588,"props":1050,"children":1052},{"style":1051},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1053],{"type":566,"value":1054},"length",{"type":561,"tag":588,"props":1056,"children":1057},{"style":742},[1058],{"type":566,"value":896},{"type":561,"tag":588,"props":1060,"children":1061},{"style":742},[1062],{"type":566,"value":901},{"type":561,"tag":588,"props":1064,"children":1066},{"class":590,"line":1065},12,[1067,1072,1077,1081,1086,1090],{"type":561,"tag":588,"props":1068,"children":1069},{"style":770},[1070],{"type":566,"value":1071},"    sum",{"type":561,"tag":588,"props":1073,"children":1074},{"style":852},[1075],{"type":566,"value":1076}," +=",{"type":561,"tag":588,"props":1078,"children":1079},{"style":770},[1080],{"type":566,"value":891},{"type":561,"tag":588,"props":1082,"children":1083},{"style":742},[1084],{"type":566,"value":1085},"[",{"type":561,"tag":588,"props":1087,"children":1088},{"style":770},[1089],{"type":566,"value":1035},{"type":561,"tag":588,"props":1091,"children":1092},{"style":742},[1093],{"type":566,"value":1094},"];\n",{"type":561,"tag":588,"props":1096,"children":1098},{"class":590,"line":1097},13,[1099,1104,1108,1113,1118,1123,1127],{"type":561,"tag":588,"props":1100,"children":1101},{"style":748},[1102],{"type":566,"value":1103},"    while",{"type":561,"tag":588,"props":1105,"children":1106},{"style":742},[1107],{"type":566,"value":876},{"type":561,"tag":588,"props":1109,"children":1110},{"style":770},[1111],{"type":566,"value":1112},"sum",{"type":561,"tag":588,"props":1114,"children":1115},{"style":742},[1116],{"type":566,"value":1117}," >=",{"type":561,"tag":588,"props":1119,"children":1120},{"style":770},[1121],{"type":566,"value":1122}," target",{"type":561,"tag":588,"props":1124,"children":1125},{"style":742},[1126],{"type":566,"value":896},{"type":561,"tag":588,"props":1128,"children":1129},{"style":742},[1130],{"type":566,"value":901},{"type":561,"tag":588,"props":1132,"children":1134},{"class":590,"line":1133},14,[1135,1140,1144,1149,1153,1158,1163,1168,1172,1176,1181,1185,1190,1195],{"type":561,"tag":588,"props":1136,"children":1137},{"style":770},[1138],{"type":566,"value":1139},"      minLen",{"type":561,"tag":588,"props":1141,"children":1142},{"style":742},[1143],{"type":566,"value":866},{"type":561,"tag":588,"props":1145,"children":1146},{"style":770},[1147],{"type":566,"value":1148}," Math",{"type":561,"tag":588,"props":1150,"children":1151},{"style":742},[1152],{"type":566,"value":929},{"type":561,"tag":588,"props":1154,"children":1155},{"style":858},[1156],{"type":566,"value":1157},"min",{"type":561,"tag":588,"props":1159,"children":1160},{"style":742},[1161],{"type":566,"value":1162},"(",{"type":561,"tag":588,"props":1164,"children":1165},{"style":770},[1166],{"type":566,"value":1167},"minLen",{"type":561,"tag":588,"props":1169,"children":1170},{"style":742},[1171],{"type":566,"value":886},{"type":561,"tag":588,"props":1173,"children":1174},{"style":770},[1175],{"type":566,"value":980},{"type":561,"tag":588,"props":1177,"children":1178},{"style":852},[1179],{"type":566,"value":1180}," -",{"type":561,"tag":588,"props":1182,"children":1183},{"style":770},[1184],{"type":566,"value":953},{"type":561,"tag":588,"props":1186,"children":1187},{"style":852},[1188],{"type":566,"value":1189}," +",{"type":561,"tag":588,"props":1191,"children":1192},{"style":960},[1193],{"type":566,"value":1194}," 1",{"type":561,"tag":588,"props":1196,"children":1197},{"style":742},[1198],{"type":566,"value":1199},");\n",{"type":561,"tag":588,"props":1201,"children":1203},{"class":590,"line":1202},15,[1204,1209,1214,1218,1222,1227],{"type":561,"tag":588,"props":1205,"children":1206},{"style":770},[1207],{"type":566,"value":1208},"      sum",{"type":561,"tag":588,"props":1210,"children":1211},{"style":852},[1212],{"type":566,"value":1213}," -=",{"type":561,"tag":588,"props":1215,"children":1216},{"style":770},[1217],{"type":566,"value":891},{"type":561,"tag":588,"props":1219,"children":1220},{"style":742},[1221],{"type":566,"value":1085},{"type":561,"tag":588,"props":1223,"children":1224},{"style":770},[1225],{"type":566,"value":1226},"l",{"type":561,"tag":588,"props":1228,"children":1229},{"style":742},[1230],{"type":566,"value":1094},{"type":561,"tag":588,"props":1232,"children":1234},{"class":590,"line":1233},16,[1235,1240,1245],{"type":561,"tag":588,"props":1236,"children":1237},{"style":770},[1238],{"type":566,"value":1239},"      l",{"type":561,"tag":588,"props":1241,"children":1242},{"style":852},[1243],{"type":566,"value":1244},"++",{"type":561,"tag":588,"props":1246,"children":1247},{"style":742},[1248],{"type":566,"value":940},{"type":561,"tag":588,"props":1250,"children":1252},{"class":590,"line":1251},17,[1253],{"type":561,"tag":588,"props":1254,"children":1255},{"style":742},[1256],{"type":566,"value":1257},"    }\n",{"type":561,"tag":588,"props":1259,"children":1261},{"class":590,"line":1260},18,[1262,1267,1271],{"type":561,"tag":588,"props":1263,"children":1264},{"style":770},[1265],{"type":566,"value":1266},"    r",{"type":561,"tag":588,"props":1268,"children":1269},{"style":852},[1270],{"type":566,"value":1244},{"type":561,"tag":588,"props":1272,"children":1273},{"style":742},[1274],{"type":566,"value":940},{"type":561,"tag":588,"props":1276,"children":1278},{"class":590,"line":1277},19,[1279],{"type":561,"tag":588,"props":1280,"children":1281},{"style":742},[1282],{"type":566,"value":1283},"  }\n",{"type":561,"tag":588,"props":1285,"children":1287},{"class":590,"line":1286},20,[1288,1293,1297,1302,1306,1310,1315,1320,1324,1329,1333],{"type":561,"tag":588,"props":1289,"children":1290},{"style":748},[1291],{"type":566,"value":1292},"  return",{"type":561,"tag":588,"props":1294,"children":1295},{"style":770},[1296],{"type":566,"value":915},{"type":561,"tag":588,"props":1298,"children":1299},{"style":852},[1300],{"type":566,"value":1301}," ===",{"type":561,"tag":588,"props":1303,"children":1304},{"style":770},[1305],{"type":566,"value":924},{"type":561,"tag":588,"props":1307,"children":1308},{"style":742},[1309],{"type":566,"value":929},{"type":561,"tag":588,"props":1311,"children":1312},{"style":932},[1313],{"type":566,"value":1314},"MAX_SAFE_INTEGER ",{"type":561,"tag":588,"props":1316,"children":1317},{"style":852},[1318],{"type":566,"value":1319},"?",{"type":561,"tag":588,"props":1321,"children":1322},{"style":960},[1323],{"type":566,"value":963},{"type":561,"tag":588,"props":1325,"children":1326},{"style":852},[1327],{"type":566,"value":1328}," :",{"type":561,"tag":588,"props":1330,"children":1331},{"style":770},[1332],{"type":566,"value":915},{"type":561,"tag":588,"props":1334,"children":1335},{"style":742},[1336],{"type":566,"value":940},{"type":561,"tag":588,"props":1338,"children":1340},{"class":590,"line":1339},21,[1341],{"type":561,"tag":588,"props":1342,"children":1343},{"style":742},[1344],{"type":566,"value":1345},"};\n",{"type":561,"tag":1347,"props":1348,"children":1349},"style",{},[1350],{"type":566,"value":1351},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":554,"searchDepth":839,"depth":839,"links":1353},[1354,1355],{"id":700,"depth":600,"text":700},{"id":705,"depth":600,"text":705,"children":1356},[1357],{"id":711,"depth":609,"text":711},"markdown","content:1.algorithm:3.leetcode:3.major:209.minimum-size-subarray-sum.md","content","1.algorithm/3.leetcode/3.major/209.minimum-size-subarray-sum.md","md",[1364,1366],{"_path":204,"title":203,"description":1365},"给你单链表的头节点 head ，请你反转链表，并返回反转后的链表。",{"_path":210,"title":209,"description":1367},"给定整数数组 nums 和整数 k，请返回数组中第 k 个最大的元素。",1715092076876]