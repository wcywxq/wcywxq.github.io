[{"data":1,"prerenderedAt":1357},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/minimum-size-subarray-sum":540,"/algorithm/leetcode/major/minimum-size-subarray-sum-surround":1352},[4,269,298,508,516,525],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":507},"代码考核","/code-assessment",[302,401,500],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,334,350,378,385,392,395,398],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333},"extends","/code-assessment/source/native-api/extends",{"title":335,"_path":336,"children":337},"函数 Function","/code-assessment/source/function",[338,341,344,347],{"title":339,"_path":340},"函数防抖","/code-assessment/source/function/debounce",{"title":342,"_path":343},"函数节流","/code-assessment/source/function/throttle",{"title":345,"_path":346},"函数柯理化","/code-assessment/source/function/curry",{"title":348,"_path":349},"函数睡眠","/code-assessment/source/function/sleep",{"title":351,"_path":352,"children":353},"数组 Array","/code-assessment/source/array",[354,357,360,363,366,369,372,375],{"title":355,"_path":356},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":358,"_path":359},"数组扁平化","/code-assessment/source/array/flat",{"title":361,"_path":362},"原型方法","/code-assessment/source/array/prototype-method",{"title":364,"_path":365},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":367,"_path":368},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":370,"_path":371},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":373,"_path":374},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":376,"_path":377},"二维数组","/code-assessment/source/array/2d-array",{"title":379,"_path":380,"children":381},"字符串 String","/code-assessment/source/string",[382],{"title":383,"_path":384},"repeat()","/code-assessment/source/string/repeat",{"title":386,"_path":387,"children":388},"集合 Set","/code-assessment/source/set",[389],{"title":390,"_path":391},"遍历集合","/code-assessment/source/set/traverse",{"title":393,"_path":394},"获取通用类型","/code-assessment/source/get-generic-type",{"title":396,"_path":397},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":399,"_path":400},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":402,"_path":403,"children":404},"业务场景","/code-assessment/scene",[405,436,446,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497],{"title":406,"_path":407,"children":408},"Promise","/code-assessment/scene/promise",[409,412,415,418,421,424,427,430,433],{"title":410,"_path":411},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":413,"_path":414},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":416,"_path":417},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":419,"_path":420},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":422,"_path":423},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":425,"_path":426},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":428,"_path":429},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":431,"_path":432},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":434,"_path":435},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":437,"_path":438,"children":439},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[440,443],{"title":441,"_path":442},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":444,"_path":445},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":447,"_path":448},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":450,"_path":451},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":453,"_path":454},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":456,"_path":457},"倒计时","/code-assessment/scene/countdown",{"title":459,"_path":460},"日期格式化","/code-assessment/scene/date-format",{"title":462,"_path":463},"实现前端路由","/code-assessment/scene/frontend-route",{"title":465,"_path":466},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":468,"_path":469},"lodash.get","/code-assessment/scene/lodash-get",{"title":471,"_path":472},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":474,"_path":475},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":477,"_path":478},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":480,"_path":481},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":483,"_path":484},"随机数","/code-assessment/scene/random-number",{"title":486,"_path":487},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":489,"_path":490},"sku 算法实现","/code-assessment/scene/sku",{"title":492,"_path":493},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":495,"_path":496},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":498,"_path":499},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":501,"_path":502,"children":503},"Ts 类型挑战","/code-assessment/type-challeges",[504],{"title":505,"_path":506},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":509,"_path":510,"children":511,"icon":515},"项目","/project",[512],{"title":513,"_path":514},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":517,"_path":518,"children":519,"icon":524},"设计模式","/design-mode",[520,521],{"title":517,"_path":518},{"title":522,"_path":523},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":526,"_path":527,"children":528,"icon":539},"后端语言","/backend-languages",[529],{"title":530,"_path":531,"children":532},"Python","/backend-languages/python",[533,536],{"title":534,"_path":535},"基础","/backend-languages/python/base",{"title":537,"_path":538},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":207,"_dir":541,"_draft":542,"_partial":542,"_locale":543,"title":206,"description":544,"url":545,"body":546,"_type":1347,"_id":1348,"_source":1349,"_file":1350,"_extension":1351},"major",false,"","给定一个含有 n 个正整数的数组和一个正整数 target 。","https://leetcode.cn/problems/minimum-size-subarray-sum",{"type":547,"children":548,"toc":1341},"root",[549,556,561,566,605,610,633,638,661,666,686,692,697,703,1335],{"type":550,"tag":551,"props":552,"children":553},"element","p",{},[554],{"type":555,"value":544},"text",{"type":550,"tag":551,"props":557,"children":558},{},[559],{"type":555,"value":560},"找出该数组中满足其总和大于等于 target 的长度最小的 连续\n子数组\n[numsl, numsl+1, ..., numsr-1, numsr] ，并返回其长度。如果不存在符合条件的子数组，返回 0 。",{"type":550,"tag":551,"props":562,"children":563},{},[564],{"type":555,"value":565},"示例 1：",{"type":550,"tag":567,"props":568,"children":571},"pre",{"className":569,"code":570,"language":555,"meta":543,"style":543},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：target = 7, nums = [2,3,1,2,4,3]\n输出：2\n解释：子数组 [4,3] 是该条件下的长度最小的子数组。\n",[572],{"type":550,"tag":573,"props":574,"children":575},"code",{"__ignoreMap":543},[576,587,596],{"type":550,"tag":577,"props":578,"children":581},"span",{"class":579,"line":580},"line",1,[582],{"type":550,"tag":577,"props":583,"children":584},{},[585],{"type":555,"value":586},"输入：target = 7, nums = [2,3,1,2,4,3]\n",{"type":550,"tag":577,"props":588,"children":590},{"class":579,"line":589},2,[591],{"type":550,"tag":577,"props":592,"children":593},{},[594],{"type":555,"value":595},"输出：2\n",{"type":550,"tag":577,"props":597,"children":599},{"class":579,"line":598},3,[600],{"type":550,"tag":577,"props":601,"children":602},{},[603],{"type":555,"value":604},"解释：子数组 [4,3] 是该条件下的长度最小的子数组。\n",{"type":550,"tag":551,"props":606,"children":607},{},[608],{"type":555,"value":609},"示例 2：",{"type":550,"tag":567,"props":611,"children":613},{"className":569,"code":612,"language":555,"meta":543,"style":543},"输入：target = 4, nums = [1,4,4]\n输出：1\n",[614],{"type":550,"tag":573,"props":615,"children":616},{"__ignoreMap":543},[617,625],{"type":550,"tag":577,"props":618,"children":619},{"class":579,"line":580},[620],{"type":550,"tag":577,"props":621,"children":622},{},[623],{"type":555,"value":624},"输入：target = 4, nums = [1,4,4]\n",{"type":550,"tag":577,"props":626,"children":627},{"class":579,"line":589},[628],{"type":550,"tag":577,"props":629,"children":630},{},[631],{"type":555,"value":632},"输出：1\n",{"type":550,"tag":551,"props":634,"children":635},{},[636],{"type":555,"value":637},"示例 3：",{"type":550,"tag":567,"props":639,"children":641},{"className":569,"code":640,"language":555,"meta":543,"style":543},"输入：target = 11, nums = [1,1,1,1,1,1,1,1]\n输出：0\n",[642],{"type":550,"tag":573,"props":643,"children":644},{"__ignoreMap":543},[645,653],{"type":550,"tag":577,"props":646,"children":647},{"class":579,"line":580},[648],{"type":550,"tag":577,"props":649,"children":650},{},[651],{"type":555,"value":652},"输入：target = 11, nums = [1,1,1,1,1,1,1,1]\n",{"type":550,"tag":577,"props":654,"children":655},{"class":579,"line":589},[656],{"type":550,"tag":577,"props":657,"children":658},{},[659],{"type":555,"value":660},"输出：0\n",{"type":550,"tag":551,"props":662,"children":663},{},[664],{"type":555,"value":665},"提示：",{"type":550,"tag":667,"props":668,"children":669},"ul",{},[670,676,681],{"type":550,"tag":671,"props":672,"children":673},"li",{},[674],{"type":555,"value":675},"1 \u003C= target \u003C= 10^9",{"type":550,"tag":671,"props":677,"children":678},{},[679],{"type":555,"value":680},"1 \u003C= nums.length \u003C= 10^5",{"type":550,"tag":671,"props":682,"children":683},{},[684],{"type":555,"value":685},"1 \u003C= nums[i] \u003C= 10^5",{"type":550,"tag":687,"props":688,"children":690},"h2",{"id":689},"解题思路",[691],{"type":555,"value":689},{"type":550,"tag":687,"props":693,"children":695},{"id":694},"实现",[696],{"type":555,"value":694},{"type":550,"tag":698,"props":699,"children":701},"h3",{"id":700},"滑动窗口",[702],{"type":555,"value":700},{"type":550,"tag":567,"props":704,"children":708},{"className":705,"code":706,"language":707,"meta":543,"style":543},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} target\n * @param {number[]} nums\n * @return {number}\n */\nvar minSubArrayLen = function (target, nums) {\n  let minLen = Number.MAX_SAFE_INTEGER;\n  let l = 0;\n  let r = 0;\n  let sum = 0;\n  while (r \u003C nums.length) {\n    sum += nums[r];\n    while (sum >= target) {\n      minLen = Math.min(minLen, r - l + 1);\n      sum -= nums[l];\n      l++;\n    }\n    r++;\n  }\n  return minLen === Number.MAX_SAFE_INTEGER ? 0 : minLen;\n};\n","js",[709],{"type":550,"tag":573,"props":710,"children":711},{"__ignoreMap":543},[712,721,763,796,826,835,891,930,957,982,1007,1052,1084,1120,1189,1220,1238,1247,1264,1273,1326],{"type":550,"tag":577,"props":713,"children":714},{"class":579,"line":580},[715],{"type":550,"tag":577,"props":716,"children":718},{"style":717},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[719],{"type":555,"value":720},"/**\n",{"type":550,"tag":577,"props":722,"children":723},{"class":579,"line":589},[724,729,735,741,746,752,757],{"type":550,"tag":577,"props":725,"children":726},{"style":717},[727],{"type":555,"value":728}," * ",{"type":550,"tag":577,"props":730,"children":732},{"style":731},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[733],{"type":555,"value":734},"@",{"type":550,"tag":577,"props":736,"children":738},{"style":737},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[739],{"type":555,"value":740},"param",{"type":550,"tag":577,"props":742,"children":743},{"style":731},[744],{"type":555,"value":745}," {",{"type":550,"tag":577,"props":747,"children":749},{"style":748},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[750],{"type":555,"value":751},"number",{"type":550,"tag":577,"props":753,"children":754},{"style":731},[755],{"type":555,"value":756},"}",{"type":550,"tag":577,"props":758,"children":760},{"style":759},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[761],{"type":555,"value":762}," target\n",{"type":550,"tag":577,"props":764,"children":765},{"class":579,"line":598},[766,770,774,778,782,787,791],{"type":550,"tag":577,"props":767,"children":768},{"style":717},[769],{"type":555,"value":728},{"type":550,"tag":577,"props":771,"children":772},{"style":731},[773],{"type":555,"value":734},{"type":550,"tag":577,"props":775,"children":776},{"style":737},[777],{"type":555,"value":740},{"type":550,"tag":577,"props":779,"children":780},{"style":731},[781],{"type":555,"value":745},{"type":550,"tag":577,"props":783,"children":784},{"style":748},[785],{"type":555,"value":786},"number[]",{"type":550,"tag":577,"props":788,"children":789},{"style":731},[790],{"type":555,"value":756},{"type":550,"tag":577,"props":792,"children":793},{"style":759},[794],{"type":555,"value":795}," nums\n",{"type":550,"tag":577,"props":797,"children":799},{"class":579,"line":798},4,[800,804,808,813,817,821],{"type":550,"tag":577,"props":801,"children":802},{"style":717},[803],{"type":555,"value":728},{"type":550,"tag":577,"props":805,"children":806},{"style":731},[807],{"type":555,"value":734},{"type":550,"tag":577,"props":809,"children":810},{"style":737},[811],{"type":555,"value":812},"return",{"type":550,"tag":577,"props":814,"children":815},{"style":731},[816],{"type":555,"value":745},{"type":550,"tag":577,"props":818,"children":819},{"style":748},[820],{"type":555,"value":751},{"type":550,"tag":577,"props":822,"children":823},{"style":731},[824],{"type":555,"value":825},"}\n",{"type":550,"tag":577,"props":827,"children":829},{"class":579,"line":828},5,[830],{"type":550,"tag":577,"props":831,"children":832},{"style":717},[833],{"type":555,"value":834}," */\n",{"type":550,"tag":577,"props":836,"children":838},{"class":579,"line":837},6,[839,845,851,856,861,866,871,876,881,886],{"type":550,"tag":577,"props":840,"children":842},{"style":841},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[843],{"type":555,"value":844},"var",{"type":550,"tag":577,"props":846,"children":848},{"style":847},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[849],{"type":555,"value":850}," minSubArrayLen",{"type":550,"tag":577,"props":852,"children":853},{"style":731},[854],{"type":555,"value":855}," =",{"type":550,"tag":577,"props":857,"children":858},{"style":841},[859],{"type":555,"value":860}," function",{"type":550,"tag":577,"props":862,"children":863},{"style":731},[864],{"type":555,"value":865}," (",{"type":550,"tag":577,"props":867,"children":868},{"style":759},[869],{"type":555,"value":870},"target",{"type":550,"tag":577,"props":872,"children":873},{"style":731},[874],{"type":555,"value":875},",",{"type":550,"tag":577,"props":877,"children":878},{"style":759},[879],{"type":555,"value":880}," nums",{"type":550,"tag":577,"props":882,"children":883},{"style":731},[884],{"type":555,"value":885},")",{"type":550,"tag":577,"props":887,"children":888},{"style":731},[889],{"type":555,"value":890}," {\n",{"type":550,"tag":577,"props":892,"children":894},{"class":579,"line":893},7,[895,900,905,909,914,919,925],{"type":550,"tag":577,"props":896,"children":897},{"style":841},[898],{"type":555,"value":899},"  let",{"type":550,"tag":577,"props":901,"children":902},{"style":759},[903],{"type":555,"value":904}," minLen",{"type":550,"tag":577,"props":906,"children":907},{"style":731},[908],{"type":555,"value":855},{"type":550,"tag":577,"props":910,"children":911},{"style":759},[912],{"type":555,"value":913}," Number",{"type":550,"tag":577,"props":915,"children":916},{"style":731},[917],{"type":555,"value":918},".",{"type":550,"tag":577,"props":920,"children":922},{"style":921},"--shiki-light:#393A34;--shiki-default:#393A34;--shiki-dark:#DBD7CAEE",[923],{"type":555,"value":924},"MAX_SAFE_INTEGER",{"type":550,"tag":577,"props":926,"children":927},{"style":731},[928],{"type":555,"value":929},";\n",{"type":550,"tag":577,"props":931,"children":933},{"class":579,"line":932},8,[934,938,943,947,953],{"type":550,"tag":577,"props":935,"children":936},{"style":841},[937],{"type":555,"value":899},{"type":550,"tag":577,"props":939,"children":940},{"style":759},[941],{"type":555,"value":942}," l",{"type":550,"tag":577,"props":944,"children":945},{"style":731},[946],{"type":555,"value":855},{"type":550,"tag":577,"props":948,"children":950},{"style":949},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[951],{"type":555,"value":952}," 0",{"type":550,"tag":577,"props":954,"children":955},{"style":731},[956],{"type":555,"value":929},{"type":550,"tag":577,"props":958,"children":960},{"class":579,"line":959},9,[961,965,970,974,978],{"type":550,"tag":577,"props":962,"children":963},{"style":841},[964],{"type":555,"value":899},{"type":550,"tag":577,"props":966,"children":967},{"style":759},[968],{"type":555,"value":969}," r",{"type":550,"tag":577,"props":971,"children":972},{"style":731},[973],{"type":555,"value":855},{"type":550,"tag":577,"props":975,"children":976},{"style":949},[977],{"type":555,"value":952},{"type":550,"tag":577,"props":979,"children":980},{"style":731},[981],{"type":555,"value":929},{"type":550,"tag":577,"props":983,"children":985},{"class":579,"line":984},10,[986,990,995,999,1003],{"type":550,"tag":577,"props":987,"children":988},{"style":841},[989],{"type":555,"value":899},{"type":550,"tag":577,"props":991,"children":992},{"style":759},[993],{"type":555,"value":994}," sum",{"type":550,"tag":577,"props":996,"children":997},{"style":731},[998],{"type":555,"value":855},{"type":550,"tag":577,"props":1000,"children":1001},{"style":949},[1002],{"type":555,"value":952},{"type":550,"tag":577,"props":1004,"children":1005},{"style":731},[1006],{"type":555,"value":929},{"type":550,"tag":577,"props":1008,"children":1010},{"class":579,"line":1009},11,[1011,1016,1020,1025,1030,1034,1038,1044,1048],{"type":550,"tag":577,"props":1012,"children":1013},{"style":737},[1014],{"type":555,"value":1015},"  while",{"type":550,"tag":577,"props":1017,"children":1018},{"style":731},[1019],{"type":555,"value":865},{"type":550,"tag":577,"props":1021,"children":1022},{"style":759},[1023],{"type":555,"value":1024},"r",{"type":550,"tag":577,"props":1026,"children":1027},{"style":731},[1028],{"type":555,"value":1029}," \u003C",{"type":550,"tag":577,"props":1031,"children":1032},{"style":759},[1033],{"type":555,"value":880},{"type":550,"tag":577,"props":1035,"children":1036},{"style":731},[1037],{"type":555,"value":918},{"type":550,"tag":577,"props":1039,"children":1041},{"style":1040},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1042],{"type":555,"value":1043},"length",{"type":550,"tag":577,"props":1045,"children":1046},{"style":731},[1047],{"type":555,"value":885},{"type":550,"tag":577,"props":1049,"children":1050},{"style":731},[1051],{"type":555,"value":890},{"type":550,"tag":577,"props":1053,"children":1055},{"class":579,"line":1054},12,[1056,1061,1066,1070,1075,1079],{"type":550,"tag":577,"props":1057,"children":1058},{"style":759},[1059],{"type":555,"value":1060},"    sum",{"type":550,"tag":577,"props":1062,"children":1063},{"style":841},[1064],{"type":555,"value":1065}," +=",{"type":550,"tag":577,"props":1067,"children":1068},{"style":759},[1069],{"type":555,"value":880},{"type":550,"tag":577,"props":1071,"children":1072},{"style":731},[1073],{"type":555,"value":1074},"[",{"type":550,"tag":577,"props":1076,"children":1077},{"style":759},[1078],{"type":555,"value":1024},{"type":550,"tag":577,"props":1080,"children":1081},{"style":731},[1082],{"type":555,"value":1083},"];\n",{"type":550,"tag":577,"props":1085,"children":1087},{"class":579,"line":1086},13,[1088,1093,1097,1102,1107,1112,1116],{"type":550,"tag":577,"props":1089,"children":1090},{"style":737},[1091],{"type":555,"value":1092},"    while",{"type":550,"tag":577,"props":1094,"children":1095},{"style":731},[1096],{"type":555,"value":865},{"type":550,"tag":577,"props":1098,"children":1099},{"style":759},[1100],{"type":555,"value":1101},"sum",{"type":550,"tag":577,"props":1103,"children":1104},{"style":731},[1105],{"type":555,"value":1106}," >=",{"type":550,"tag":577,"props":1108,"children":1109},{"style":759},[1110],{"type":555,"value":1111}," target",{"type":550,"tag":577,"props":1113,"children":1114},{"style":731},[1115],{"type":555,"value":885},{"type":550,"tag":577,"props":1117,"children":1118},{"style":731},[1119],{"type":555,"value":890},{"type":550,"tag":577,"props":1121,"children":1123},{"class":579,"line":1122},14,[1124,1129,1133,1138,1142,1147,1152,1157,1161,1165,1170,1174,1179,1184],{"type":550,"tag":577,"props":1125,"children":1126},{"style":759},[1127],{"type":555,"value":1128},"      minLen",{"type":550,"tag":577,"props":1130,"children":1131},{"style":731},[1132],{"type":555,"value":855},{"type":550,"tag":577,"props":1134,"children":1135},{"style":759},[1136],{"type":555,"value":1137}," Math",{"type":550,"tag":577,"props":1139,"children":1140},{"style":731},[1141],{"type":555,"value":918},{"type":550,"tag":577,"props":1143,"children":1144},{"style":847},[1145],{"type":555,"value":1146},"min",{"type":550,"tag":577,"props":1148,"children":1149},{"style":731},[1150],{"type":555,"value":1151},"(",{"type":550,"tag":577,"props":1153,"children":1154},{"style":759},[1155],{"type":555,"value":1156},"minLen",{"type":550,"tag":577,"props":1158,"children":1159},{"style":731},[1160],{"type":555,"value":875},{"type":550,"tag":577,"props":1162,"children":1163},{"style":759},[1164],{"type":555,"value":969},{"type":550,"tag":577,"props":1166,"children":1167},{"style":841},[1168],{"type":555,"value":1169}," -",{"type":550,"tag":577,"props":1171,"children":1172},{"style":759},[1173],{"type":555,"value":942},{"type":550,"tag":577,"props":1175,"children":1176},{"style":841},[1177],{"type":555,"value":1178}," +",{"type":550,"tag":577,"props":1180,"children":1181},{"style":949},[1182],{"type":555,"value":1183}," 1",{"type":550,"tag":577,"props":1185,"children":1186},{"style":731},[1187],{"type":555,"value":1188},");\n",{"type":550,"tag":577,"props":1190,"children":1192},{"class":579,"line":1191},15,[1193,1198,1203,1207,1211,1216],{"type":550,"tag":577,"props":1194,"children":1195},{"style":759},[1196],{"type":555,"value":1197},"      sum",{"type":550,"tag":577,"props":1199,"children":1200},{"style":841},[1201],{"type":555,"value":1202}," -=",{"type":550,"tag":577,"props":1204,"children":1205},{"style":759},[1206],{"type":555,"value":880},{"type":550,"tag":577,"props":1208,"children":1209},{"style":731},[1210],{"type":555,"value":1074},{"type":550,"tag":577,"props":1212,"children":1213},{"style":759},[1214],{"type":555,"value":1215},"l",{"type":550,"tag":577,"props":1217,"children":1218},{"style":731},[1219],{"type":555,"value":1083},{"type":550,"tag":577,"props":1221,"children":1223},{"class":579,"line":1222},16,[1224,1229,1234],{"type":550,"tag":577,"props":1225,"children":1226},{"style":759},[1227],{"type":555,"value":1228},"      l",{"type":550,"tag":577,"props":1230,"children":1231},{"style":841},[1232],{"type":555,"value":1233},"++",{"type":550,"tag":577,"props":1235,"children":1236},{"style":731},[1237],{"type":555,"value":929},{"type":550,"tag":577,"props":1239,"children":1241},{"class":579,"line":1240},17,[1242],{"type":550,"tag":577,"props":1243,"children":1244},{"style":731},[1245],{"type":555,"value":1246},"    }\n",{"type":550,"tag":577,"props":1248,"children":1250},{"class":579,"line":1249},18,[1251,1256,1260],{"type":550,"tag":577,"props":1252,"children":1253},{"style":759},[1254],{"type":555,"value":1255},"    r",{"type":550,"tag":577,"props":1257,"children":1258},{"style":841},[1259],{"type":555,"value":1233},{"type":550,"tag":577,"props":1261,"children":1262},{"style":731},[1263],{"type":555,"value":929},{"type":550,"tag":577,"props":1265,"children":1267},{"class":579,"line":1266},19,[1268],{"type":550,"tag":577,"props":1269,"children":1270},{"style":731},[1271],{"type":555,"value":1272},"  }\n",{"type":550,"tag":577,"props":1274,"children":1276},{"class":579,"line":1275},20,[1277,1282,1286,1291,1295,1299,1304,1309,1313,1318,1322],{"type":550,"tag":577,"props":1278,"children":1279},{"style":737},[1280],{"type":555,"value":1281},"  return",{"type":550,"tag":577,"props":1283,"children":1284},{"style":759},[1285],{"type":555,"value":904},{"type":550,"tag":577,"props":1287,"children":1288},{"style":841},[1289],{"type":555,"value":1290}," ===",{"type":550,"tag":577,"props":1292,"children":1293},{"style":759},[1294],{"type":555,"value":913},{"type":550,"tag":577,"props":1296,"children":1297},{"style":731},[1298],{"type":555,"value":918},{"type":550,"tag":577,"props":1300,"children":1301},{"style":921},[1302],{"type":555,"value":1303},"MAX_SAFE_INTEGER ",{"type":550,"tag":577,"props":1305,"children":1306},{"style":841},[1307],{"type":555,"value":1308},"?",{"type":550,"tag":577,"props":1310,"children":1311},{"style":949},[1312],{"type":555,"value":952},{"type":550,"tag":577,"props":1314,"children":1315},{"style":841},[1316],{"type":555,"value":1317}," :",{"type":550,"tag":577,"props":1319,"children":1320},{"style":759},[1321],{"type":555,"value":904},{"type":550,"tag":577,"props":1323,"children":1324},{"style":731},[1325],{"type":555,"value":929},{"type":550,"tag":577,"props":1327,"children":1329},{"class":579,"line":1328},21,[1330],{"type":550,"tag":577,"props":1331,"children":1332},{"style":731},[1333],{"type":555,"value":1334},"};\n",{"type":550,"tag":1336,"props":1337,"children":1338},"style",{},[1339],{"type":555,"value":1340},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":543,"searchDepth":828,"depth":828,"links":1342},[1343,1344],{"id":689,"depth":589,"text":689},{"id":694,"depth":589,"text":694,"children":1345},[1346],{"id":700,"depth":598,"text":700},"markdown","content:1.algorithm:3.leetcode:3.major:209.minimum-size-subarray-sum.md","content","1.algorithm/3.leetcode/3.major/209.minimum-size-subarray-sum.md","md",[1353,1355],{"_path":204,"title":203,"description":1354},"给你单链表的头节点 head ，请你反转链表，并返回反转后的链表。",{"_path":210,"title":209,"description":1356},"给定整数数组 nums 和整数 k，请返回数组中第 k 个最大的元素。",1714099215467]