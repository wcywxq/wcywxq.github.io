[{"data":1,"prerenderedAt":1233},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/minimum-size-subarray-sum":452,"/algorithm/leetcode/major/minimum-size-subarray-sum-surround":1228},[4,259,287,431,438],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately",{"title":260,"_path":261,"children":262},"前端八股文","/frontend-endorsement",[263,274],{"title":264,"_path":265,"children":266},"构建工具","/frontend-endorsement/build-tools",[267],{"title":268,"_path":269,"children":270},"Webpack","/frontend-endorsement/build-tools/webpack",[271],{"title":272,"_path":273},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":275,"_path":276,"children":277},"Html","/frontend-endorsement/html",[278,281,284],{"title":279,"_path":280},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":282,"_path":283},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":285,"_path":286},"离线存储","/frontend-endorsement/html/offline-storage",{"title":288,"_path":289,"children":290},"前端代码考核","/frontend-code-assessment",[291,340,424],{"title":292,"_path":293,"children":294},"源码实现","/frontend-code-assessment/source",[295,320,333],{"title":296,"_path":297,"children":298},"原生 api","/frontend-code-assessment/source/native-api",[299,302,305,308,311,314,317],{"title":300,"_path":301},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":303,"_path":304},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":306,"_path":307},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":309,"_path":310},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":312,"_path":313},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":315,"_path":316},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":318,"_path":319},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":321,"_path":322,"children":323},"数组 Array","/frontend-code-assessment/source/array",[324,327,330],{"title":325,"_path":326},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":328,"_path":329},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":331,"_path":332},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":334,"_path":335,"children":336},"字符串 String","/frontend-code-assessment/source/string",[337],{"title":338,"_path":339},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":341,"_path":342,"children":343},"业务场景","/frontend-code-assessment/scene",[344,366,373,376,379,382,385,388,391,394,397,400,403,406,409,412,415,418,421],{"title":345,"_path":346,"children":347},"Promise","/frontend-code-assessment/scene/promise",[348,351,354,357,360,363],{"title":349,"_path":350},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":352,"_path":353},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":355,"_path":356},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":358,"_path":359},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":361,"_path":362},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":364,"_path":365},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":367,"_path":368,"children":369},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[370],{"title":371,"_path":372},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":374,"_path":375},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":377,"_path":378},"倒计时","/frontend-code-assessment/scene/countdown",{"title":380,"_path":381},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":383,"_path":384},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":386,"_path":387},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":389,"_path":390},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":392,"_path":393},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":395,"_path":396},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":398,"_path":399},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":401,"_path":402},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":404,"_path":405},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":407,"_path":408},"随机数","/frontend-code-assessment/scene/random-number",{"title":410,"_path":411},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":413,"_path":414},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":416,"_path":417},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":419,"_path":420},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":422,"_path":423},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":425,"_path":426,"children":427},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[428],{"title":429,"_path":430},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":432,"_path":433,"children":434},"项目","/pro",[435],{"title":436,"_path":437},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":439,"_path":440,"children":441},"后端语言","/backend-languages",[442],{"title":443,"_path":444,"children":445},"Python","/backend-languages/python",[446,449],{"title":447,"_path":448},"基础","/backend-languages/python/base",{"title":450,"_path":451},"函数","/backend-languages/python/function",{"_path":198,"_dir":453,"_draft":454,"_partial":454,"_locale":455,"title":197,"description":456,"url":457,"body":458,"_type":1223,"_id":1224,"_source":1225,"_file":1226,"_extension":1227},"major",false,"","给定一个含有 n 个正整数的数组和一个正整数 target 。","https://leetcode.cn/problems/minimum-size-subarray-sum",{"type":459,"children":460,"toc":1217},"root",[461,468,473,478,517,522,545,550,573,578,598,604,609,615,1211],{"type":462,"tag":463,"props":464,"children":465},"element","p",{},[466],{"type":467,"value":456},"text",{"type":462,"tag":463,"props":469,"children":470},{},[471],{"type":467,"value":472},"找出该数组中满足其总和大于等于 target 的长度最小的 连续\n子数组\n[numsl, numsl+1, ..., numsr-1, numsr] ，并返回其长度。如果不存在符合条件的子数组，返回 0 。",{"type":462,"tag":463,"props":474,"children":475},{},[476],{"type":467,"value":477},"示例 1：",{"type":462,"tag":479,"props":480,"children":483},"pre",{"className":481,"code":482,"language":467,"meta":455,"style":455},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：target = 7, nums = [2,3,1,2,4,3]\n输出：2\n解释：子数组 [4,3] 是该条件下的长度最小的子数组。\n",[484],{"type":462,"tag":485,"props":486,"children":487},"code",{"__ignoreMap":455},[488,499,508],{"type":462,"tag":489,"props":490,"children":493},"span",{"class":491,"line":492},"line",1,[494],{"type":462,"tag":489,"props":495,"children":496},{},[497],{"type":467,"value":498},"输入：target = 7, nums = [2,3,1,2,4,3]\n",{"type":462,"tag":489,"props":500,"children":502},{"class":491,"line":501},2,[503],{"type":462,"tag":489,"props":504,"children":505},{},[506],{"type":467,"value":507},"输出：2\n",{"type":462,"tag":489,"props":509,"children":511},{"class":491,"line":510},3,[512],{"type":462,"tag":489,"props":513,"children":514},{},[515],{"type":467,"value":516},"解释：子数组 [4,3] 是该条件下的长度最小的子数组。\n",{"type":462,"tag":463,"props":518,"children":519},{},[520],{"type":467,"value":521},"示例 2：",{"type":462,"tag":479,"props":523,"children":525},{"className":481,"code":524,"language":467,"meta":455,"style":455},"输入：target = 4, nums = [1,4,4]\n输出：1\n",[526],{"type":462,"tag":485,"props":527,"children":528},{"__ignoreMap":455},[529,537],{"type":462,"tag":489,"props":530,"children":531},{"class":491,"line":492},[532],{"type":462,"tag":489,"props":533,"children":534},{},[535],{"type":467,"value":536},"输入：target = 4, nums = [1,4,4]\n",{"type":462,"tag":489,"props":538,"children":539},{"class":491,"line":501},[540],{"type":462,"tag":489,"props":541,"children":542},{},[543],{"type":467,"value":544},"输出：1\n",{"type":462,"tag":463,"props":546,"children":547},{},[548],{"type":467,"value":549},"示例 3：",{"type":462,"tag":479,"props":551,"children":553},{"className":481,"code":552,"language":467,"meta":455,"style":455},"输入：target = 11, nums = [1,1,1,1,1,1,1,1]\n输出：0\n",[554],{"type":462,"tag":485,"props":555,"children":556},{"__ignoreMap":455},[557,565],{"type":462,"tag":489,"props":558,"children":559},{"class":491,"line":492},[560],{"type":462,"tag":489,"props":561,"children":562},{},[563],{"type":467,"value":564},"输入：target = 11, nums = [1,1,1,1,1,1,1,1]\n",{"type":462,"tag":489,"props":566,"children":567},{"class":491,"line":501},[568],{"type":462,"tag":489,"props":569,"children":570},{},[571],{"type":467,"value":572},"输出：0\n",{"type":462,"tag":463,"props":574,"children":575},{},[576],{"type":467,"value":577},"提示：",{"type":462,"tag":579,"props":580,"children":581},"ul",{},[582,588,593],{"type":462,"tag":583,"props":584,"children":585},"li",{},[586],{"type":467,"value":587},"1 \u003C= target \u003C= 10^9",{"type":462,"tag":583,"props":589,"children":590},{},[591],{"type":467,"value":592},"1 \u003C= nums.length \u003C= 10^5",{"type":462,"tag":583,"props":594,"children":595},{},[596],{"type":467,"value":597},"1 \u003C= nums[i] \u003C= 10^5",{"type":462,"tag":599,"props":600,"children":602},"h2",{"id":601},"解题思路",[603],{"type":467,"value":601},{"type":462,"tag":599,"props":605,"children":607},{"id":606},"实现",[608],{"type":467,"value":606},{"type":462,"tag":610,"props":611,"children":613},"h3",{"id":612},"滑动窗口",[614],{"type":467,"value":612},{"type":462,"tag":479,"props":616,"children":620},{"className":617,"code":618,"language":619,"meta":455,"style":455},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number} target\n * @param {number[]} nums\n * @return {number}\n */\nvar minSubArrayLen = function (target, nums) {\n  let minLen = Number.MAX_SAFE_INTEGER;\n  let l = 0;\n  let r = 0;\n  let sum = 0;\n  while (r \u003C nums.length) {\n    sum += nums[r];\n    while (sum >= target) {\n      minLen = Math.min(minLen, r - l + 1);\n      sum -= nums[l];\n      l++;\n    }\n    r++;\n  }\n  return minLen === Number.MAX_SAFE_INTEGER ? 0 : minLen;\n};\n","js",[621],{"type":462,"tag":485,"props":622,"children":623},{"__ignoreMap":455},[624,633,659,680,698,707,762,802,829,854,879,916,952,984,1057,1092,1110,1119,1136,1145,1198],{"type":462,"tag":489,"props":625,"children":626},{"class":491,"line":492},[627],{"type":462,"tag":489,"props":628,"children":630},{"style":629},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[631],{"type":467,"value":632},"/**\n",{"type":462,"tag":489,"props":634,"children":635},{"class":491,"line":501},[636,641,647,653],{"type":462,"tag":489,"props":637,"children":638},{"style":629},[639],{"type":467,"value":640}," * ",{"type":462,"tag":489,"props":642,"children":644},{"style":643},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[645],{"type":467,"value":646},"@param",{"type":462,"tag":489,"props":648,"children":650},{"style":649},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[651],{"type":467,"value":652}," {number}",{"type":462,"tag":489,"props":654,"children":656},{"style":655},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[657],{"type":467,"value":658}," target\n",{"type":462,"tag":489,"props":660,"children":661},{"class":491,"line":510},[662,666,670,675],{"type":462,"tag":489,"props":663,"children":664},{"style":629},[665],{"type":467,"value":640},{"type":462,"tag":489,"props":667,"children":668},{"style":643},[669],{"type":467,"value":646},{"type":462,"tag":489,"props":671,"children":672},{"style":649},[673],{"type":467,"value":674}," {number[]}",{"type":462,"tag":489,"props":676,"children":677},{"style":655},[678],{"type":467,"value":679}," nums\n",{"type":462,"tag":489,"props":681,"children":683},{"class":491,"line":682},4,[684,688,693],{"type":462,"tag":489,"props":685,"children":686},{"style":629},[687],{"type":467,"value":640},{"type":462,"tag":489,"props":689,"children":690},{"style":643},[691],{"type":467,"value":692},"@return",{"type":462,"tag":489,"props":694,"children":695},{"style":649},[696],{"type":467,"value":697}," {number}\n",{"type":462,"tag":489,"props":699,"children":701},{"class":491,"line":700},5,[702],{"type":462,"tag":489,"props":703,"children":704},{"style":629},[705],{"type":467,"value":706}," */\n",{"type":462,"tag":489,"props":708,"children":710},{"class":491,"line":709},6,[711,717,723,729,734,740,746,752,757],{"type":462,"tag":489,"props":712,"children":714},{"style":713},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[715],{"type":467,"value":716},"var",{"type":462,"tag":489,"props":718,"children":720},{"style":719},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[721],{"type":467,"value":722}," minSubArrayLen",{"type":462,"tag":489,"props":724,"children":726},{"style":725},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[727],{"type":467,"value":728}," =",{"type":462,"tag":489,"props":730,"children":731},{"style":713},[732],{"type":467,"value":733}," function",{"type":462,"tag":489,"props":735,"children":737},{"style":736},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[738],{"type":467,"value":739}," (",{"type":462,"tag":489,"props":741,"children":743},{"style":742},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[744],{"type":467,"value":745},"target",{"type":462,"tag":489,"props":747,"children":749},{"style":748},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[750],{"type":467,"value":751},",",{"type":462,"tag":489,"props":753,"children":754},{"style":742},[755],{"type":467,"value":756}," nums",{"type":462,"tag":489,"props":758,"children":759},{"style":736},[760],{"type":467,"value":761},") {\n",{"type":462,"tag":489,"props":763,"children":765},{"class":491,"line":764},7,[766,771,777,781,786,792,797],{"type":462,"tag":489,"props":767,"children":768},{"style":713},[769],{"type":467,"value":770},"  let",{"type":462,"tag":489,"props":772,"children":774},{"style":773},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[775],{"type":467,"value":776}," minLen",{"type":462,"tag":489,"props":778,"children":779},{"style":725},[780],{"type":467,"value":728},{"type":462,"tag":489,"props":782,"children":783},{"style":773},[784],{"type":467,"value":785}," Number",{"type":462,"tag":489,"props":787,"children":789},{"style":788},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[790],{"type":467,"value":791},".",{"type":462,"tag":489,"props":793,"children":794},{"style":736},[795],{"type":467,"value":796},"MAX_SAFE_INTEGER",{"type":462,"tag":489,"props":798,"children":799},{"style":748},[800],{"type":467,"value":801},";\n",{"type":462,"tag":489,"props":803,"children":805},{"class":491,"line":804},8,[806,810,815,819,825],{"type":462,"tag":489,"props":807,"children":808},{"style":713},[809],{"type":467,"value":770},{"type":462,"tag":489,"props":811,"children":812},{"style":773},[813],{"type":467,"value":814}," l",{"type":462,"tag":489,"props":816,"children":817},{"style":725},[818],{"type":467,"value":728},{"type":462,"tag":489,"props":820,"children":822},{"style":821},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[823],{"type":467,"value":824}," 0",{"type":462,"tag":489,"props":826,"children":827},{"style":748},[828],{"type":467,"value":801},{"type":462,"tag":489,"props":830,"children":832},{"class":491,"line":831},9,[833,837,842,846,850],{"type":462,"tag":489,"props":834,"children":835},{"style":713},[836],{"type":467,"value":770},{"type":462,"tag":489,"props":838,"children":839},{"style":773},[840],{"type":467,"value":841}," r",{"type":462,"tag":489,"props":843,"children":844},{"style":725},[845],{"type":467,"value":728},{"type":462,"tag":489,"props":847,"children":848},{"style":821},[849],{"type":467,"value":824},{"type":462,"tag":489,"props":851,"children":852},{"style":748},[853],{"type":467,"value":801},{"type":462,"tag":489,"props":855,"children":857},{"class":491,"line":856},10,[858,862,867,871,875],{"type":462,"tag":489,"props":859,"children":860},{"style":713},[861],{"type":467,"value":770},{"type":462,"tag":489,"props":863,"children":864},{"style":773},[865],{"type":467,"value":866}," sum",{"type":462,"tag":489,"props":868,"children":869},{"style":725},[870],{"type":467,"value":728},{"type":462,"tag":489,"props":872,"children":873},{"style":821},[874],{"type":467,"value":824},{"type":462,"tag":489,"props":876,"children":877},{"style":748},[878],{"type":467,"value":801},{"type":462,"tag":489,"props":880,"children":882},{"class":491,"line":881},11,[883,889,893,898,903,907,911],{"type":462,"tag":489,"props":884,"children":886},{"style":885},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[887],{"type":467,"value":888},"  while",{"type":462,"tag":489,"props":890,"children":891},{"style":736},[892],{"type":467,"value":739},{"type":462,"tag":489,"props":894,"children":895},{"style":773},[896],{"type":467,"value":897},"r",{"type":462,"tag":489,"props":899,"children":900},{"style":725},[901],{"type":467,"value":902}," \u003C",{"type":462,"tag":489,"props":904,"children":905},{"style":773},[906],{"type":467,"value":756},{"type":462,"tag":489,"props":908,"children":909},{"style":788},[910],{"type":467,"value":791},{"type":462,"tag":489,"props":912,"children":913},{"style":736},[914],{"type":467,"value":915},"length) {\n",{"type":462,"tag":489,"props":917,"children":919},{"class":491,"line":918},12,[920,925,930,934,939,943,948],{"type":462,"tag":489,"props":921,"children":922},{"style":773},[923],{"type":467,"value":924},"    sum",{"type":462,"tag":489,"props":926,"children":927},{"style":725},[928],{"type":467,"value":929}," +=",{"type":462,"tag":489,"props":931,"children":932},{"style":773},[933],{"type":467,"value":756},{"type":462,"tag":489,"props":935,"children":936},{"style":736},[937],{"type":467,"value":938},"[",{"type":462,"tag":489,"props":940,"children":941},{"style":773},[942],{"type":467,"value":897},{"type":462,"tag":489,"props":944,"children":945},{"style":736},[946],{"type":467,"value":947},"]",{"type":462,"tag":489,"props":949,"children":950},{"style":748},[951],{"type":467,"value":801},{"type":462,"tag":489,"props":953,"children":955},{"class":491,"line":954},13,[956,961,965,970,975,980],{"type":462,"tag":489,"props":957,"children":958},{"style":885},[959],{"type":467,"value":960},"    while",{"type":462,"tag":489,"props":962,"children":963},{"style":736},[964],{"type":467,"value":739},{"type":462,"tag":489,"props":966,"children":967},{"style":773},[968],{"type":467,"value":969},"sum",{"type":462,"tag":489,"props":971,"children":972},{"style":725},[973],{"type":467,"value":974}," >=",{"type":462,"tag":489,"props":976,"children":977},{"style":773},[978],{"type":467,"value":979}," target",{"type":462,"tag":489,"props":981,"children":982},{"style":736},[983],{"type":467,"value":761},{"type":462,"tag":489,"props":985,"children":987},{"class":491,"line":986},14,[988,993,997,1002,1006,1011,1016,1021,1025,1029,1034,1038,1043,1048,1053],{"type":462,"tag":489,"props":989,"children":990},{"style":773},[991],{"type":467,"value":992},"      minLen",{"type":462,"tag":489,"props":994,"children":995},{"style":725},[996],{"type":467,"value":728},{"type":462,"tag":489,"props":998,"children":999},{"style":773},[1000],{"type":467,"value":1001}," Math",{"type":462,"tag":489,"props":1003,"children":1004},{"style":788},[1005],{"type":467,"value":791},{"type":462,"tag":489,"props":1007,"children":1008},{"style":719},[1009],{"type":467,"value":1010},"min",{"type":462,"tag":489,"props":1012,"children":1013},{"style":736},[1014],{"type":467,"value":1015},"(",{"type":462,"tag":489,"props":1017,"children":1018},{"style":773},[1019],{"type":467,"value":1020},"minLen",{"type":462,"tag":489,"props":1022,"children":1023},{"style":748},[1024],{"type":467,"value":751},{"type":462,"tag":489,"props":1026,"children":1027},{"style":773},[1028],{"type":467,"value":841},{"type":462,"tag":489,"props":1030,"children":1031},{"style":725},[1032],{"type":467,"value":1033}," -",{"type":462,"tag":489,"props":1035,"children":1036},{"style":773},[1037],{"type":467,"value":814},{"type":462,"tag":489,"props":1039,"children":1040},{"style":725},[1041],{"type":467,"value":1042}," +",{"type":462,"tag":489,"props":1044,"children":1045},{"style":821},[1046],{"type":467,"value":1047}," 1",{"type":462,"tag":489,"props":1049,"children":1050},{"style":736},[1051],{"type":467,"value":1052},")",{"type":462,"tag":489,"props":1054,"children":1055},{"style":748},[1056],{"type":467,"value":801},{"type":462,"tag":489,"props":1058,"children":1060},{"class":491,"line":1059},15,[1061,1066,1071,1075,1079,1084,1088],{"type":462,"tag":489,"props":1062,"children":1063},{"style":773},[1064],{"type":467,"value":1065},"      sum",{"type":462,"tag":489,"props":1067,"children":1068},{"style":725},[1069],{"type":467,"value":1070}," -=",{"type":462,"tag":489,"props":1072,"children":1073},{"style":773},[1074],{"type":467,"value":756},{"type":462,"tag":489,"props":1076,"children":1077},{"style":736},[1078],{"type":467,"value":938},{"type":462,"tag":489,"props":1080,"children":1081},{"style":773},[1082],{"type":467,"value":1083},"l",{"type":462,"tag":489,"props":1085,"children":1086},{"style":736},[1087],{"type":467,"value":947},{"type":462,"tag":489,"props":1089,"children":1090},{"style":748},[1091],{"type":467,"value":801},{"type":462,"tag":489,"props":1093,"children":1095},{"class":491,"line":1094},16,[1096,1101,1106],{"type":462,"tag":489,"props":1097,"children":1098},{"style":773},[1099],{"type":467,"value":1100},"      l",{"type":462,"tag":489,"props":1102,"children":1103},{"style":725},[1104],{"type":467,"value":1105},"++",{"type":462,"tag":489,"props":1107,"children":1108},{"style":748},[1109],{"type":467,"value":801},{"type":462,"tag":489,"props":1111,"children":1113},{"class":491,"line":1112},17,[1114],{"type":462,"tag":489,"props":1115,"children":1116},{"style":736},[1117],{"type":467,"value":1118},"    }\n",{"type":462,"tag":489,"props":1120,"children":1122},{"class":491,"line":1121},18,[1123,1128,1132],{"type":462,"tag":489,"props":1124,"children":1125},{"style":773},[1126],{"type":467,"value":1127},"    r",{"type":462,"tag":489,"props":1129,"children":1130},{"style":725},[1131],{"type":467,"value":1105},{"type":462,"tag":489,"props":1133,"children":1134},{"style":748},[1135],{"type":467,"value":801},{"type":462,"tag":489,"props":1137,"children":1139},{"class":491,"line":1138},19,[1140],{"type":462,"tag":489,"props":1141,"children":1142},{"style":736},[1143],{"type":467,"value":1144},"  }\n",{"type":462,"tag":489,"props":1146,"children":1148},{"class":491,"line":1147},20,[1149,1154,1158,1163,1167,1171,1176,1181,1185,1190,1194],{"type":462,"tag":489,"props":1150,"children":1151},{"style":885},[1152],{"type":467,"value":1153},"  return",{"type":462,"tag":489,"props":1155,"children":1156},{"style":773},[1157],{"type":467,"value":776},{"type":462,"tag":489,"props":1159,"children":1160},{"style":725},[1161],{"type":467,"value":1162}," ===",{"type":462,"tag":489,"props":1164,"children":1165},{"style":773},[1166],{"type":467,"value":785},{"type":462,"tag":489,"props":1168,"children":1169},{"style":788},[1170],{"type":467,"value":791},{"type":462,"tag":489,"props":1172,"children":1173},{"style":736},[1174],{"type":467,"value":1175},"MAX_SAFE_INTEGER ",{"type":462,"tag":489,"props":1177,"children":1178},{"style":725},[1179],{"type":467,"value":1180},"?",{"type":462,"tag":489,"props":1182,"children":1183},{"style":821},[1184],{"type":467,"value":824},{"type":462,"tag":489,"props":1186,"children":1187},{"style":725},[1188],{"type":467,"value":1189}," :",{"type":462,"tag":489,"props":1191,"children":1192},{"style":773},[1193],{"type":467,"value":776},{"type":462,"tag":489,"props":1195,"children":1196},{"style":748},[1197],{"type":467,"value":801},{"type":462,"tag":489,"props":1199,"children":1201},{"class":491,"line":1200},21,[1202,1207],{"type":462,"tag":489,"props":1203,"children":1204},{"style":736},[1205],{"type":467,"value":1206},"}",{"type":462,"tag":489,"props":1208,"children":1209},{"style":748},[1210],{"type":467,"value":801},{"type":462,"tag":1212,"props":1213,"children":1214},"style",{},[1215],{"type":467,"value":1216},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":455,"searchDepth":700,"depth":700,"links":1218},[1219,1220],{"id":601,"depth":501,"text":601},{"id":606,"depth":501,"text":606,"children":1221},[1222],{"id":612,"depth":510,"text":612},"markdown","content:1.algorithm:3.leetcode:3.major:209.minimum-size-subarray-sum.md","content","1.algorithm/3.leetcode/3.major/209.minimum-size-subarray-sum.md","md",[1229,1231],{"_path":195,"title":194,"description":1230},"给你单链表的头节点 head ，请你反转链表，并返回反转后的链表。",{"_path":201,"title":200,"description":1232},"给定整数数组 nums 和整数 k，请返回数组中第 k 个最大的元素。",1713457423521]