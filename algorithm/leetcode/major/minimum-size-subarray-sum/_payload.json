[{"data":1,"prerenderedAt":1366},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/minimum-size-subarray-sum":549,"/algorithm/leetcode/major/minimum-size-subarray-sum-surround":1361},[4,272,301,517,525,534],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":516},"代码考核","/code-assessment",[305,407,509],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,340,356,384,391,398,401,404],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342,"children":343},"函数 Function","/code-assessment/source/function",[344,347,350,353],{"title":345,"_path":346},"函数防抖","/code-assessment/source/function/debounce",{"title":348,"_path":349},"函数节流","/code-assessment/source/function/throttle",{"title":351,"_path":352},"函数柯理化","/code-assessment/source/function/curry",{"title":354,"_path":355},"函数睡眠","/code-assessment/source/function/sleep",{"title":357,"_path":358,"children":359},"数组 Array","/code-assessment/source/array",[360,363,366,369,372,375,378,381],{"title":361,"_path":362},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":364,"_path":365},"数组扁平化","/code-assessment/source/array/flat",{"title":367,"_path":368},"原型方法","/code-assessment/source/array/prototype-method",{"title":370,"_path":371},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":373,"_path":374},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":376,"_path":377},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":379,"_path":380},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":382,"_path":383},"二维数组","/code-assessment/source/array/2d-array",{"title":385,"_path":386,"children":387},"字符串 String","/code-assessment/source/string",[388],{"title":389,"_path":390},"repeat()","/code-assessment/source/string/repeat",{"title":392,"_path":393,"children":394},"集合 Set","/code-assessment/source/set",[395],{"title":396,"_path":397},"遍历集合","/code-assessment/source/set/traverse",{"title":399,"_path":400},"获取通用类型","/code-assessment/source/get-generic-type",{"title":402,"_path":403},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":405,"_path":406},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":408,"_path":409,"children":410},"业务场景","/code-assessment/scene",[411,442,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506],{"title":412,"_path":413,"children":414},"Promise","/code-assessment/scene/promise",[415,418,421,424,427,430,433,436,439],{"title":416,"_path":417},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":419,"_path":420},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":422,"_path":423},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":425,"_path":426},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":428,"_path":429},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":431,"_path":432},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":434,"_path":435},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":437,"_path":438},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":440,"_path":441},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":443,"_path":444,"children":445},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[446,449],{"title":447,"_path":448},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":450,"_path":451},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":453,"_path":454},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":456,"_path":457},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":459,"_path":460},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":462,"_path":463},"倒计时","/code-assessment/scene/countdown",{"title":465,"_path":466},"日期格式化","/code-assessment/scene/date-format",{"title":468,"_path":469},"实现前端路由","/code-assessment/scene/frontend-route",{"title":471,"_path":472},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":474,"_path":475},"lodash.get","/code-assessment/scene/lodash-get",{"title":477,"_path":478},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":480,"_path":481},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":483,"_path":484},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":486,"_path":487},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":489,"_path":490},"随机数","/code-assessment/scene/random-number",{"title":492,"_path":493},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":495,"_path":496},"sku 算法实现","/code-assessment/scene/sku",{"title":498,"_path":499},"整数分割","/code-assessment/scene/split-number",{"title":501,"_path":502},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":504,"_path":505},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":507,"_path":508},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":510,"_path":511,"children":512},"Ts 类型挑战","/code-assessment/type-challeges",[513],{"title":514,"_path":515},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":518,"_path":519,"children":520,"icon":524},"项目","/project",[521],{"title":522,"_path":523},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":526,"_path":527,"children":528,"icon":533},"设计模式","/design-mode",[529,530],{"title":526,"_path":527},{"title":531,"_path":532},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":535,"_path":536,"children":537,"icon":548},"后端语言","/backend-languages",[538],{"title":539,"_path":540,"children":541},"Python","/backend-languages/python",[542,545],{"title":543,"_path":544},"基础","/backend-languages/python/base",{"title":546,"_path":547},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":207,"_dir":550,"_draft":551,"_partial":551,"_locale":552,"title":206,"description":553,"url":554,"body":555,"_type":1356,"_id":1357,"_source":1358,"_file":1359,"_extension":1360},"major",false,"","给定一个含有 n 个正整数的数组和一个正整数 target 。","https://leetcode.cn/problems/minimum-size-subarray-sum",{"type":556,"children":557,"toc":1350},"root",[558,565,570,575,614,619,642,647,670,675,695,701,706,712,1344],{"type":559,"tag":560,"props":561,"children":562},"element","p",{},[563],{"type":564,"value":553},"text",{"type":559,"tag":560,"props":566,"children":567},{},[568],{"type":564,"value":569},"找出该数组中满足其总和大于等于 target 的长度最小的 连续\n子数组\n[numsl, numsl+1, ..., numsr-1, numsr] ，并返回其长度。如果不存在符合条件的子数组，返回 0 。",{"type":559,"tag":560,"props":571,"children":572},{},[573],{"type":564,"value":574},"示例 1：",{"type":559,"tag":576,"props":577,"children":580},"pre",{"className":578,"code":579,"language":564,"meta":552,"style":552},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：target = 7, nums = [2,3,1,2,4,3]\n输出：2\n解释：子数组 [4,3] 是该条件下的长度最小的子数组。\n",[581],{"type":559,"tag":582,"props":583,"children":584},"code",{"__ignoreMap":552},[585,596,605],{"type":559,"tag":586,"props":587,"children":590},"span",{"class":588,"line":589},"line",1,[591],{"type":559,"tag":586,"props":592,"children":593},{},[594],{"type":564,"value":595},"输入：target = 7, nums = [2,3,1,2,4,3]\n",{"type":559,"tag":586,"props":597,"children":599},{"class":588,"line":598},2,[600],{"type":559,"tag":586,"props":601,"children":602},{},[603],{"type":564,"value":604},"输出：2\n",{"type":559,"tag":586,"props":606,"children":608},{"class":588,"line":607},3,[609],{"type":559,"tag":586,"props":610,"children":611},{},[612],{"type":564,"value":613},"解释：子数组 [4,3] 是该条件下的长度最小的子数组。\n",{"type":559,"tag":560,"props":615,"children":616},{},[617],{"type":564,"value":618},"示例 2：",{"type":559,"tag":576,"props":620,"children":622},{"className":578,"code":621,"language":564,"meta":552,"style":552},"输入：target = 4, nums = [1,4,4]\n输出：1\n",[623],{"type":559,"tag":582,"props":624,"children":625},{"__ignoreMap":552},[626,634],{"type":559,"tag":586,"props":627,"children":628},{"class":588,"line":589},[629],{"type":559,"tag":586,"props":630,"children":631},{},[632],{"type":564,"value":633},"输入：target = 4, nums = [1,4,4]\n",{"type":559,"tag":586,"props":635,"children":636},{"class":588,"line":598},[637],{"type":559,"tag":586,"props":638,"children":639},{},[640],{"type":564,"value":641},"输出：1\n",{"type":559,"tag":560,"props":643,"children":644},{},[645],{"type":564,"value":646},"示例 3：",{"type":559,"tag":576,"props":648,"children":650},{"className":578,"code":649,"language":564,"meta":552,"style":552},"输入：target = 11, nums = [1,1,1,1,1,1,1,1]\n输出：0\n",[651],{"type":559,"tag":582,"props":652,"children":653},{"__ignoreMap":552},[654,662],{"type":559,"tag":586,"props":655,"children":656},{"class":588,"line":589},[657],{"type":559,"tag":586,"props":658,"children":659},{},[660],{"type":564,"value":661},"输入：target = 11, nums = [1,1,1,1,1,1,1,1]\n",{"type":559,"tag":586,"props":663,"children":664},{"class":588,"line":598},[665],{"type":559,"tag":586,"props":666,"children":667},{},[668],{"type":564,"value":669},"输出：0\n",{"type":559,"tag":560,"props":671,"children":672},{},[673],{"type":564,"value":674},"提示：",{"type":559,"tag":676,"props":677,"children":678},"ul",{},[679,685,690],{"type":559,"tag":680,"props":681,"children":682},"li",{},[683],{"type":564,"value":684},"1 \u003C= target \u003C= 10^9",{"type":559,"tag":680,"props":686,"children":687},{},[688],{"type":564,"value":689},"1 \u003C= nums.length \u003C= 10^5",{"type":559,"tag":680,"props":691,"children":692},{},[693],{"type":564,"value":694},"1 \u003C= nums[i] \u003C= 10^5",{"type":559,"tag":696,"props":697,"children":699},"h2",{"id":698},"解题思路",[700],{"type":564,"value":698},{"type":559,"tag":696,"props":702,"children":704},{"id":703},"实现",[705],{"type":564,"value":703},{"type":559,"tag":707,"props":708,"children":710},"h3",{"id":709},"滑动窗口",[711],{"type":564,"value":709},{"type":559,"tag":576,"props":713,"children":717},{"className":714,"code":715,"language":716,"meta":552,"style":552},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} target\n * @param {number[]} nums\n * @return {number}\n */\nvar minSubArrayLen = function (target, nums) {\n  let minLen = Number.MAX_SAFE_INTEGER;\n  let l = 0;\n  let r = 0;\n  let sum = 0;\n  while (r \u003C nums.length) {\n    sum += nums[r];\n    while (sum >= target) {\n      minLen = Math.min(minLen, r - l + 1);\n      sum -= nums[l];\n      l++;\n    }\n    r++;\n  }\n  return minLen === Number.MAX_SAFE_INTEGER ? 0 : minLen;\n};\n","js",[718],{"type":559,"tag":582,"props":719,"children":720},{"__ignoreMap":552},[721,730,772,805,835,844,900,939,966,991,1016,1061,1093,1129,1198,1229,1247,1256,1273,1282,1335],{"type":559,"tag":586,"props":722,"children":723},{"class":588,"line":589},[724],{"type":559,"tag":586,"props":725,"children":727},{"style":726},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[728],{"type":564,"value":729},"/**\n",{"type":559,"tag":586,"props":731,"children":732},{"class":588,"line":598},[733,738,744,750,755,761,766],{"type":559,"tag":586,"props":734,"children":735},{"style":726},[736],{"type":564,"value":737}," * ",{"type":559,"tag":586,"props":739,"children":741},{"style":740},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[742],{"type":564,"value":743},"@",{"type":559,"tag":586,"props":745,"children":747},{"style":746},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[748],{"type":564,"value":749},"param",{"type":559,"tag":586,"props":751,"children":752},{"style":740},[753],{"type":564,"value":754}," {",{"type":559,"tag":586,"props":756,"children":758},{"style":757},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[759],{"type":564,"value":760},"number",{"type":559,"tag":586,"props":762,"children":763},{"style":740},[764],{"type":564,"value":765},"}",{"type":559,"tag":586,"props":767,"children":769},{"style":768},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[770],{"type":564,"value":771}," target\n",{"type":559,"tag":586,"props":773,"children":774},{"class":588,"line":607},[775,779,783,787,791,796,800],{"type":559,"tag":586,"props":776,"children":777},{"style":726},[778],{"type":564,"value":737},{"type":559,"tag":586,"props":780,"children":781},{"style":740},[782],{"type":564,"value":743},{"type":559,"tag":586,"props":784,"children":785},{"style":746},[786],{"type":564,"value":749},{"type":559,"tag":586,"props":788,"children":789},{"style":740},[790],{"type":564,"value":754},{"type":559,"tag":586,"props":792,"children":793},{"style":757},[794],{"type":564,"value":795},"number[]",{"type":559,"tag":586,"props":797,"children":798},{"style":740},[799],{"type":564,"value":765},{"type":559,"tag":586,"props":801,"children":802},{"style":768},[803],{"type":564,"value":804}," nums\n",{"type":559,"tag":586,"props":806,"children":808},{"class":588,"line":807},4,[809,813,817,822,826,830],{"type":559,"tag":586,"props":810,"children":811},{"style":726},[812],{"type":564,"value":737},{"type":559,"tag":586,"props":814,"children":815},{"style":740},[816],{"type":564,"value":743},{"type":559,"tag":586,"props":818,"children":819},{"style":746},[820],{"type":564,"value":821},"return",{"type":559,"tag":586,"props":823,"children":824},{"style":740},[825],{"type":564,"value":754},{"type":559,"tag":586,"props":827,"children":828},{"style":757},[829],{"type":564,"value":760},{"type":559,"tag":586,"props":831,"children":832},{"style":740},[833],{"type":564,"value":834},"}\n",{"type":559,"tag":586,"props":836,"children":838},{"class":588,"line":837},5,[839],{"type":559,"tag":586,"props":840,"children":841},{"style":726},[842],{"type":564,"value":843}," */\n",{"type":559,"tag":586,"props":845,"children":847},{"class":588,"line":846},6,[848,854,860,865,870,875,880,885,890,895],{"type":559,"tag":586,"props":849,"children":851},{"style":850},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[852],{"type":564,"value":853},"var",{"type":559,"tag":586,"props":855,"children":857},{"style":856},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[858],{"type":564,"value":859}," minSubArrayLen",{"type":559,"tag":586,"props":861,"children":862},{"style":740},[863],{"type":564,"value":864}," =",{"type":559,"tag":586,"props":866,"children":867},{"style":850},[868],{"type":564,"value":869}," function",{"type":559,"tag":586,"props":871,"children":872},{"style":740},[873],{"type":564,"value":874}," (",{"type":559,"tag":586,"props":876,"children":877},{"style":768},[878],{"type":564,"value":879},"target",{"type":559,"tag":586,"props":881,"children":882},{"style":740},[883],{"type":564,"value":884},",",{"type":559,"tag":586,"props":886,"children":887},{"style":768},[888],{"type":564,"value":889}," nums",{"type":559,"tag":586,"props":891,"children":892},{"style":740},[893],{"type":564,"value":894},")",{"type":559,"tag":586,"props":896,"children":897},{"style":740},[898],{"type":564,"value":899}," {\n",{"type":559,"tag":586,"props":901,"children":903},{"class":588,"line":902},7,[904,909,914,918,923,928,934],{"type":559,"tag":586,"props":905,"children":906},{"style":850},[907],{"type":564,"value":908},"  let",{"type":559,"tag":586,"props":910,"children":911},{"style":768},[912],{"type":564,"value":913}," minLen",{"type":559,"tag":586,"props":915,"children":916},{"style":740},[917],{"type":564,"value":864},{"type":559,"tag":586,"props":919,"children":920},{"style":768},[921],{"type":564,"value":922}," Number",{"type":559,"tag":586,"props":924,"children":925},{"style":740},[926],{"type":564,"value":927},".",{"type":559,"tag":586,"props":929,"children":931},{"style":930},"--shiki-light:#393A34;--shiki-default:#393A34;--shiki-dark:#DBD7CAEE",[932],{"type":564,"value":933},"MAX_SAFE_INTEGER",{"type":559,"tag":586,"props":935,"children":936},{"style":740},[937],{"type":564,"value":938},";\n",{"type":559,"tag":586,"props":940,"children":942},{"class":588,"line":941},8,[943,947,952,956,962],{"type":559,"tag":586,"props":944,"children":945},{"style":850},[946],{"type":564,"value":908},{"type":559,"tag":586,"props":948,"children":949},{"style":768},[950],{"type":564,"value":951}," l",{"type":559,"tag":586,"props":953,"children":954},{"style":740},[955],{"type":564,"value":864},{"type":559,"tag":586,"props":957,"children":959},{"style":958},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[960],{"type":564,"value":961}," 0",{"type":559,"tag":586,"props":963,"children":964},{"style":740},[965],{"type":564,"value":938},{"type":559,"tag":586,"props":967,"children":969},{"class":588,"line":968},9,[970,974,979,983,987],{"type":559,"tag":586,"props":971,"children":972},{"style":850},[973],{"type":564,"value":908},{"type":559,"tag":586,"props":975,"children":976},{"style":768},[977],{"type":564,"value":978}," r",{"type":559,"tag":586,"props":980,"children":981},{"style":740},[982],{"type":564,"value":864},{"type":559,"tag":586,"props":984,"children":985},{"style":958},[986],{"type":564,"value":961},{"type":559,"tag":586,"props":988,"children":989},{"style":740},[990],{"type":564,"value":938},{"type":559,"tag":586,"props":992,"children":994},{"class":588,"line":993},10,[995,999,1004,1008,1012],{"type":559,"tag":586,"props":996,"children":997},{"style":850},[998],{"type":564,"value":908},{"type":559,"tag":586,"props":1000,"children":1001},{"style":768},[1002],{"type":564,"value":1003}," sum",{"type":559,"tag":586,"props":1005,"children":1006},{"style":740},[1007],{"type":564,"value":864},{"type":559,"tag":586,"props":1009,"children":1010},{"style":958},[1011],{"type":564,"value":961},{"type":559,"tag":586,"props":1013,"children":1014},{"style":740},[1015],{"type":564,"value":938},{"type":559,"tag":586,"props":1017,"children":1019},{"class":588,"line":1018},11,[1020,1025,1029,1034,1039,1043,1047,1053,1057],{"type":559,"tag":586,"props":1021,"children":1022},{"style":746},[1023],{"type":564,"value":1024},"  while",{"type":559,"tag":586,"props":1026,"children":1027},{"style":740},[1028],{"type":564,"value":874},{"type":559,"tag":586,"props":1030,"children":1031},{"style":768},[1032],{"type":564,"value":1033},"r",{"type":559,"tag":586,"props":1035,"children":1036},{"style":740},[1037],{"type":564,"value":1038}," \u003C",{"type":559,"tag":586,"props":1040,"children":1041},{"style":768},[1042],{"type":564,"value":889},{"type":559,"tag":586,"props":1044,"children":1045},{"style":740},[1046],{"type":564,"value":927},{"type":559,"tag":586,"props":1048,"children":1050},{"style":1049},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1051],{"type":564,"value":1052},"length",{"type":559,"tag":586,"props":1054,"children":1055},{"style":740},[1056],{"type":564,"value":894},{"type":559,"tag":586,"props":1058,"children":1059},{"style":740},[1060],{"type":564,"value":899},{"type":559,"tag":586,"props":1062,"children":1064},{"class":588,"line":1063},12,[1065,1070,1075,1079,1084,1088],{"type":559,"tag":586,"props":1066,"children":1067},{"style":768},[1068],{"type":564,"value":1069},"    sum",{"type":559,"tag":586,"props":1071,"children":1072},{"style":850},[1073],{"type":564,"value":1074}," +=",{"type":559,"tag":586,"props":1076,"children":1077},{"style":768},[1078],{"type":564,"value":889},{"type":559,"tag":586,"props":1080,"children":1081},{"style":740},[1082],{"type":564,"value":1083},"[",{"type":559,"tag":586,"props":1085,"children":1086},{"style":768},[1087],{"type":564,"value":1033},{"type":559,"tag":586,"props":1089,"children":1090},{"style":740},[1091],{"type":564,"value":1092},"];\n",{"type":559,"tag":586,"props":1094,"children":1096},{"class":588,"line":1095},13,[1097,1102,1106,1111,1116,1121,1125],{"type":559,"tag":586,"props":1098,"children":1099},{"style":746},[1100],{"type":564,"value":1101},"    while",{"type":559,"tag":586,"props":1103,"children":1104},{"style":740},[1105],{"type":564,"value":874},{"type":559,"tag":586,"props":1107,"children":1108},{"style":768},[1109],{"type":564,"value":1110},"sum",{"type":559,"tag":586,"props":1112,"children":1113},{"style":740},[1114],{"type":564,"value":1115}," >=",{"type":559,"tag":586,"props":1117,"children":1118},{"style":768},[1119],{"type":564,"value":1120}," target",{"type":559,"tag":586,"props":1122,"children":1123},{"style":740},[1124],{"type":564,"value":894},{"type":559,"tag":586,"props":1126,"children":1127},{"style":740},[1128],{"type":564,"value":899},{"type":559,"tag":586,"props":1130,"children":1132},{"class":588,"line":1131},14,[1133,1138,1142,1147,1151,1156,1161,1166,1170,1174,1179,1183,1188,1193],{"type":559,"tag":586,"props":1134,"children":1135},{"style":768},[1136],{"type":564,"value":1137},"      minLen",{"type":559,"tag":586,"props":1139,"children":1140},{"style":740},[1141],{"type":564,"value":864},{"type":559,"tag":586,"props":1143,"children":1144},{"style":768},[1145],{"type":564,"value":1146}," Math",{"type":559,"tag":586,"props":1148,"children":1149},{"style":740},[1150],{"type":564,"value":927},{"type":559,"tag":586,"props":1152,"children":1153},{"style":856},[1154],{"type":564,"value":1155},"min",{"type":559,"tag":586,"props":1157,"children":1158},{"style":740},[1159],{"type":564,"value":1160},"(",{"type":559,"tag":586,"props":1162,"children":1163},{"style":768},[1164],{"type":564,"value":1165},"minLen",{"type":559,"tag":586,"props":1167,"children":1168},{"style":740},[1169],{"type":564,"value":884},{"type":559,"tag":586,"props":1171,"children":1172},{"style":768},[1173],{"type":564,"value":978},{"type":559,"tag":586,"props":1175,"children":1176},{"style":850},[1177],{"type":564,"value":1178}," -",{"type":559,"tag":586,"props":1180,"children":1181},{"style":768},[1182],{"type":564,"value":951},{"type":559,"tag":586,"props":1184,"children":1185},{"style":850},[1186],{"type":564,"value":1187}," +",{"type":559,"tag":586,"props":1189,"children":1190},{"style":958},[1191],{"type":564,"value":1192}," 1",{"type":559,"tag":586,"props":1194,"children":1195},{"style":740},[1196],{"type":564,"value":1197},");\n",{"type":559,"tag":586,"props":1199,"children":1201},{"class":588,"line":1200},15,[1202,1207,1212,1216,1220,1225],{"type":559,"tag":586,"props":1203,"children":1204},{"style":768},[1205],{"type":564,"value":1206},"      sum",{"type":559,"tag":586,"props":1208,"children":1209},{"style":850},[1210],{"type":564,"value":1211}," -=",{"type":559,"tag":586,"props":1213,"children":1214},{"style":768},[1215],{"type":564,"value":889},{"type":559,"tag":586,"props":1217,"children":1218},{"style":740},[1219],{"type":564,"value":1083},{"type":559,"tag":586,"props":1221,"children":1222},{"style":768},[1223],{"type":564,"value":1224},"l",{"type":559,"tag":586,"props":1226,"children":1227},{"style":740},[1228],{"type":564,"value":1092},{"type":559,"tag":586,"props":1230,"children":1232},{"class":588,"line":1231},16,[1233,1238,1243],{"type":559,"tag":586,"props":1234,"children":1235},{"style":768},[1236],{"type":564,"value":1237},"      l",{"type":559,"tag":586,"props":1239,"children":1240},{"style":850},[1241],{"type":564,"value":1242},"++",{"type":559,"tag":586,"props":1244,"children":1245},{"style":740},[1246],{"type":564,"value":938},{"type":559,"tag":586,"props":1248,"children":1250},{"class":588,"line":1249},17,[1251],{"type":559,"tag":586,"props":1252,"children":1253},{"style":740},[1254],{"type":564,"value":1255},"    }\n",{"type":559,"tag":586,"props":1257,"children":1259},{"class":588,"line":1258},18,[1260,1265,1269],{"type":559,"tag":586,"props":1261,"children":1262},{"style":768},[1263],{"type":564,"value":1264},"    r",{"type":559,"tag":586,"props":1266,"children":1267},{"style":850},[1268],{"type":564,"value":1242},{"type":559,"tag":586,"props":1270,"children":1271},{"style":740},[1272],{"type":564,"value":938},{"type":559,"tag":586,"props":1274,"children":1276},{"class":588,"line":1275},19,[1277],{"type":559,"tag":586,"props":1278,"children":1279},{"style":740},[1280],{"type":564,"value":1281},"  }\n",{"type":559,"tag":586,"props":1283,"children":1285},{"class":588,"line":1284},20,[1286,1291,1295,1300,1304,1308,1313,1318,1322,1327,1331],{"type":559,"tag":586,"props":1287,"children":1288},{"style":746},[1289],{"type":564,"value":1290},"  return",{"type":559,"tag":586,"props":1292,"children":1293},{"style":768},[1294],{"type":564,"value":913},{"type":559,"tag":586,"props":1296,"children":1297},{"style":850},[1298],{"type":564,"value":1299}," ===",{"type":559,"tag":586,"props":1301,"children":1302},{"style":768},[1303],{"type":564,"value":922},{"type":559,"tag":586,"props":1305,"children":1306},{"style":740},[1307],{"type":564,"value":927},{"type":559,"tag":586,"props":1309,"children":1310},{"style":930},[1311],{"type":564,"value":1312},"MAX_SAFE_INTEGER ",{"type":559,"tag":586,"props":1314,"children":1315},{"style":850},[1316],{"type":564,"value":1317},"?",{"type":559,"tag":586,"props":1319,"children":1320},{"style":958},[1321],{"type":564,"value":961},{"type":559,"tag":586,"props":1323,"children":1324},{"style":850},[1325],{"type":564,"value":1326}," :",{"type":559,"tag":586,"props":1328,"children":1329},{"style":768},[1330],{"type":564,"value":913},{"type":559,"tag":586,"props":1332,"children":1333},{"style":740},[1334],{"type":564,"value":938},{"type":559,"tag":586,"props":1336,"children":1338},{"class":588,"line":1337},21,[1339],{"type":559,"tag":586,"props":1340,"children":1341},{"style":740},[1342],{"type":564,"value":1343},"};\n",{"type":559,"tag":1345,"props":1346,"children":1347},"style",{},[1348],{"type":564,"value":1349},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":552,"searchDepth":837,"depth":837,"links":1351},[1352,1353],{"id":698,"depth":598,"text":698},{"id":703,"depth":598,"text":703,"children":1354},[1355],{"id":709,"depth":607,"text":709},"markdown","content:1.algorithm:3.leetcode:3.major:209.minimum-size-subarray-sum.md","content","1.algorithm/3.leetcode/3.major/209.minimum-size-subarray-sum.md","md",[1362,1364],{"_path":204,"title":203,"description":1363},"给你单链表的头节点 head ，请你反转链表，并返回反转后的链表。",{"_path":210,"title":209,"description":1365},"给定整数数组 nums 和整数 k，请返回数组中第 k 个最大的元素。",1715007496600]