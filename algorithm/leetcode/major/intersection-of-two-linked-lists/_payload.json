[{"data":1,"prerenderedAt":2672},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/intersection-of-two-linked-lists":552,"/algorithm/leetcode/major/intersection-of-two-linked-lists-surround":2667},[4,272,311,529,537],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":310},"八股文","/endorsement",[276,286,297],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"构建工具","/endorsement/build-tools",[290],{"title":291,"_path":292,"children":293},"Webpack","/endorsement/build-tools/webpack",[294],{"title":295,"_path":296},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":298,"_path":299,"children":300},"Html","/endorsement/html",[301,304,307],{"title":302,"_path":303},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":305,"_path":306},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":308,"_path":309},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":312,"_path":313,"children":314,"icon":528},"代码考核","/code-assessment",[315,420,521],{"title":316,"_path":317,"children":318},"源码实现","/code-assessment/source",[319,353,369,397,404,411,414,417],{"title":320,"_path":321,"children":322},"原生 api","/code-assessment/source/native-api",[323,326,329,332,335,338,341,344,347,350],{"title":324,"_path":325},"polyfill","/code-assessment/source/native-api/polyfill",{"title":327,"_path":328},"ajax","/code-assessment/source/native-api/ajax",{"title":330,"_path":331},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":333,"_path":334},"new 操作符","/code-assessment/source/native-api/new",{"title":336,"_path":337},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":339,"_path":340},"定时器","/code-assessment/source/native-api/timer",{"title":342,"_path":343},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":345,"_path":346},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":348,"_path":349},"extends","/code-assessment/source/native-api/extends",{"title":351,"_path":352},"Promise","/code-assessment/source/native-api/promise",{"title":354,"_path":355,"children":356},"函数 Function","/code-assessment/source/function",[357,360,363,366],{"title":358,"_path":359},"函数防抖","/code-assessment/source/function/debounce",{"title":361,"_path":362},"函数节流","/code-assessment/source/function/throttle",{"title":364,"_path":365},"函数柯理化","/code-assessment/source/function/curry",{"title":367,"_path":368},"函数睡眠","/code-assessment/source/function/sleep",{"title":370,"_path":371,"children":372},"数组 Array","/code-assessment/source/array",[373,376,379,382,385,388,391,394],{"title":374,"_path":375},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":377,"_path":378},"数组扁平化","/code-assessment/source/array/flat",{"title":380,"_path":381},"原型方法","/code-assessment/source/array/prototype-method",{"title":383,"_path":384},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":386,"_path":387},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":389,"_path":390},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":392,"_path":393},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":395,"_path":396},"二维数组","/code-assessment/source/array/2d-array",{"title":398,"_path":399,"children":400},"字符串 String","/code-assessment/source/string",[401],{"title":402,"_path":403},"repeat()","/code-assessment/source/string/repeat",{"title":405,"_path":406,"children":407},"集合 Set","/code-assessment/source/set",[408],{"title":409,"_path":410},"遍历集合","/code-assessment/source/set/traverse",{"title":412,"_path":413},"获取通用类型","/code-assessment/source/get-generic-type",{"title":415,"_path":416},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":418,"_path":419},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":421,"_path":422,"children":423},"业务场景","/code-assessment/scene",[424,454,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518],{"title":351,"_path":425,"children":426},"/code-assessment/scene/promise",[427,430,433,436,439,442,445,448,451],{"title":428,"_path":429},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":431,"_path":432},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":434,"_path":435},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":437,"_path":438},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":440,"_path":441},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":443,"_path":444},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":446,"_path":447},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":449,"_path":450},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":452,"_path":453},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":455,"_path":456,"children":457},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[458,461],{"title":459,"_path":460},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":462,"_path":463},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":465,"_path":466},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":468,"_path":469},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":471,"_path":472},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":474,"_path":475},"倒计时","/code-assessment/scene/countdown",{"title":477,"_path":478},"日期格式化","/code-assessment/scene/date-format",{"title":480,"_path":481},"实现前端路由","/code-assessment/scene/frontend-route",{"title":483,"_path":484},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":486,"_path":487},"lodash.get","/code-assessment/scene/lodash-get",{"title":489,"_path":490},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":492,"_path":493},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":495,"_path":496},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":498,"_path":499},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":501,"_path":502},"随机数","/code-assessment/scene/random-number",{"title":504,"_path":505},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":507,"_path":508},"sku 算法实现","/code-assessment/scene/sku",{"title":510,"_path":511},"整数分割","/code-assessment/scene/split-number",{"title":513,"_path":514},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":516,"_path":517},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":519,"_path":520},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":522,"_path":523,"children":524},"Ts 类型挑战","/code-assessment/type-challeges",[525],{"title":526,"_path":527},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":530,"_path":531,"children":532,"icon":536},"项目","/project",[533],{"title":534,"_path":535},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":538,"_path":539,"children":540,"icon":551},"后端语言","/backend-languages",[541],{"title":542,"_path":543,"children":544},"Python","/backend-languages/python",[545,548],{"title":546,"_path":547},"基础","/backend-languages/python/base",{"title":549,"_path":550},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":189,"_dir":553,"_draft":554,"_partial":554,"_locale":555,"title":188,"description":556,"url":557,"body":558,"_type":2662,"_id":2663,"_source":2664,"_file":2665,"_extension":2666},"major",false,"","给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。","https://leetcode.cn/problems/intersection-of-two-linked-lists",{"type":559,"children":560,"toc":2654},"root",[561,568,573,582,587,592,597,602,632,642,708,718,765,770,778,825,830,873,878,884,889,895,1520,1525,2037,2042,2648],{"type":562,"tag":563,"props":564,"children":565},"element","p",{},[566],{"type":567,"value":556},"text",{"type":562,"tag":563,"props":569,"children":570},{},[571],{"type":567,"value":572},"图示两个链表在节点 c1 开始相交：",{"type":562,"tag":563,"props":574,"children":575},{},[576],{"type":562,"tag":577,"props":578,"children":581},"img",{"alt":579,"src":580},"statement","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.160_statement.png",[],{"type":562,"tag":563,"props":583,"children":584},{},[585],{"type":567,"value":586},"题目数据 保证 整个链式结构中不存在环。",{"type":562,"tag":563,"props":588,"children":589},{},[590],{"type":567,"value":591},"注意，函数返回结果后，链表必须 保持其原始结构 。",{"type":562,"tag":563,"props":593,"children":594},{},[595],{"type":567,"value":596},"自定义评测：",{"type":562,"tag":563,"props":598,"children":599},{},[600],{"type":567,"value":601},"评测系统 的输入如下（你设计的程序 不适用 此输入）：",{"type":562,"tag":603,"props":604,"children":605},"ul",{},[606,612,617,622,627],{"type":562,"tag":607,"props":608,"children":609},"li",{},[610],{"type":567,"value":611},"intersectVal - 相交的起始节点的值。如果不存在相交节点，这一值为 0",{"type":562,"tag":607,"props":613,"children":614},{},[615],{"type":567,"value":616},"listA - 第一个链表",{"type":562,"tag":607,"props":618,"children":619},{},[620],{"type":567,"value":621},"listB - 第二个链表",{"type":562,"tag":607,"props":623,"children":624},{},[625],{"type":567,"value":626},"skipA - 在 listA 中（从头节点开始）跳到交叉节点的节点数",{"type":562,"tag":607,"props":628,"children":629},{},[630],{"type":567,"value":631},"skipB - 在 listB 中（从头节点开始）跳到交叉节点的节点数\n评测系统将根据这些输入创建链式数据结构，并将两个头节点 headA 和 headB 传递给你的程序。如果程序能够正确返回相交节点，那么你的解决方案将被 视作正确答案 。",{"type":562,"tag":563,"props":633,"children":634},{},[635,637],{"type":567,"value":636},"示例 1：\n",{"type":562,"tag":577,"props":638,"children":641},{"alt":639,"src":640},"example_1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.160_example_1.png",[],{"type":562,"tag":643,"props":644,"children":647},"pre",{"className":645,"code":646,"language":567,"meta":555,"style":555},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：intersectVal = 8, listA = [4,1,8,4,5], listB = [5,6,1,8,4,5], skipA = 2, skipB = 3\n输出：Intersected at '8'\n解释：相交节点的值为 8 （注意，如果两个链表相交则不能为 0）。\n从各自的表头开始算起，链表 A 为 [4,1,8,4,5]，链表 B 为 [5,6,1,8,4,5]。\n在 A 中，相交节点前有 2 个节点；在 B 中，相交节点前有 3 个节点。\n— 请注意相交节点的值不为 1，因为在链表 A 和链表 B 之中值为 1 的节点 (A 中第二个节点和 B 中第三个节点) 是不同的节点。换句话说，它们在内存中指向两个不同的位置，而链表 A 和链表 B 中值为 8 的节点 (A 中第三个节点，B 中第四个节点) 在内存中指向相同的位置。\n",[648],{"type":562,"tag":649,"props":650,"children":651},"code",{"__ignoreMap":555},[652,663,672,681,690,699],{"type":562,"tag":653,"props":654,"children":657},"span",{"class":655,"line":656},"line",1,[658],{"type":562,"tag":653,"props":659,"children":660},{},[661],{"type":567,"value":662},"输入：intersectVal = 8, listA = [4,1,8,4,5], listB = [5,6,1,8,4,5], skipA = 2, skipB = 3\n",{"type":562,"tag":653,"props":664,"children":666},{"class":655,"line":665},2,[667],{"type":562,"tag":653,"props":668,"children":669},{},[670],{"type":567,"value":671},"输出：Intersected at '8'\n",{"type":562,"tag":653,"props":673,"children":675},{"class":655,"line":674},3,[676],{"type":562,"tag":653,"props":677,"children":678},{},[679],{"type":567,"value":680},"解释：相交节点的值为 8 （注意，如果两个链表相交则不能为 0）。\n",{"type":562,"tag":653,"props":682,"children":684},{"class":655,"line":683},4,[685],{"type":562,"tag":653,"props":686,"children":687},{},[688],{"type":567,"value":689},"从各自的表头开始算起，链表 A 为 [4,1,8,4,5]，链表 B 为 [5,6,1,8,4,5]。\n",{"type":562,"tag":653,"props":691,"children":693},{"class":655,"line":692},5,[694],{"type":562,"tag":653,"props":695,"children":696},{},[697],{"type":567,"value":698},"在 A 中，相交节点前有 2 个节点；在 B 中，相交节点前有 3 个节点。\n",{"type":562,"tag":653,"props":700,"children":702},{"class":655,"line":701},6,[703],{"type":562,"tag":653,"props":704,"children":705},{},[706],{"type":567,"value":707},"— 请注意相交节点的值不为 1，因为在链表 A 和链表 B 之中值为 1 的节点 (A 中第二个节点和 B 中第三个节点) 是不同的节点。换句话说，它们在内存中指向两个不同的位置，而链表 A 和链表 B 中值为 8 的节点 (A 中第三个节点，B 中第四个节点) 在内存中指向相同的位置。\n",{"type":562,"tag":563,"props":709,"children":710},{},[711,713],{"type":567,"value":712},"示例 2：\n",{"type":562,"tag":577,"props":714,"children":717},{"alt":715,"src":716},"example_2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.160_example_2.png",[],{"type":562,"tag":643,"props":719,"children":721},{"className":645,"code":720,"language":567,"meta":555,"style":555},"输入：intersectVal = 2, listA = [1,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1\n输出：Intersected at '2'\n解释：相交节点的值为 2 （注意，如果两个链表相交则不能为 0）。\n从各自的表头开始算起，链表 A 为 [1,9,1,2,4]，链表 B 为 [3,2,4]。\n在 A 中，相交节点前有 3 个节点；在 B 中，相交节点前有 1 个节点。\n",[722],{"type":562,"tag":649,"props":723,"children":724},{"__ignoreMap":555},[725,733,741,749,757],{"type":562,"tag":653,"props":726,"children":727},{"class":655,"line":656},[728],{"type":562,"tag":653,"props":729,"children":730},{},[731],{"type":567,"value":732},"输入：intersectVal = 2, listA = [1,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1\n",{"type":562,"tag":653,"props":734,"children":735},{"class":655,"line":665},[736],{"type":562,"tag":653,"props":737,"children":738},{},[739],{"type":567,"value":740},"输出：Intersected at '2'\n",{"type":562,"tag":653,"props":742,"children":743},{"class":655,"line":674},[744],{"type":562,"tag":653,"props":745,"children":746},{},[747],{"type":567,"value":748},"解释：相交节点的值为 2 （注意，如果两个链表相交则不能为 0）。\n",{"type":562,"tag":653,"props":750,"children":751},{"class":655,"line":683},[752],{"type":562,"tag":653,"props":753,"children":754},{},[755],{"type":567,"value":756},"从各自的表头开始算起，链表 A 为 [1,9,1,2,4]，链表 B 为 [3,2,4]。\n",{"type":562,"tag":653,"props":758,"children":759},{"class":655,"line":692},[760],{"type":562,"tag":653,"props":761,"children":762},{},[763],{"type":567,"value":764},"在 A 中，相交节点前有 3 个节点；在 B 中，相交节点前有 1 个节点。\n",{"type":562,"tag":563,"props":766,"children":767},{},[768],{"type":567,"value":769},"示例 3：",{"type":562,"tag":563,"props":771,"children":772},{},[773],{"type":562,"tag":577,"props":774,"children":777},{"alt":775,"src":776},"example_3","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.160_example_3.png",[],{"type":562,"tag":643,"props":779,"children":781},{"className":645,"code":780,"language":567,"meta":555,"style":555},"输入：intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2\n输出：null\n解释：从各自的表头开始算起，链表 A 为 [2,6,4]，链表 B 为 [1,5]。\n由于这两个链表不相交，所以 intersectVal 必须为 0，而 skipA 和 skipB 可以是任意值。\n这两个链表不相交，因此返回 null 。\n",[782],{"type":562,"tag":649,"props":783,"children":784},{"__ignoreMap":555},[785,793,801,809,817],{"type":562,"tag":653,"props":786,"children":787},{"class":655,"line":656},[788],{"type":562,"tag":653,"props":789,"children":790},{},[791],{"type":567,"value":792},"输入：intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2\n",{"type":562,"tag":653,"props":794,"children":795},{"class":655,"line":665},[796],{"type":562,"tag":653,"props":797,"children":798},{},[799],{"type":567,"value":800},"输出：null\n",{"type":562,"tag":653,"props":802,"children":803},{"class":655,"line":674},[804],{"type":562,"tag":653,"props":805,"children":806},{},[807],{"type":567,"value":808},"解释：从各自的表头开始算起，链表 A 为 [2,6,4]，链表 B 为 [1,5]。\n",{"type":562,"tag":653,"props":810,"children":811},{"class":655,"line":683},[812],{"type":562,"tag":653,"props":813,"children":814},{},[815],{"type":567,"value":816},"由于这两个链表不相交，所以 intersectVal 必须为 0，而 skipA 和 skipB 可以是任意值。\n",{"type":562,"tag":653,"props":818,"children":819},{"class":655,"line":692},[820],{"type":562,"tag":653,"props":821,"children":822},{},[823],{"type":567,"value":824},"这两个链表不相交，因此返回 null 。\n",{"type":562,"tag":563,"props":826,"children":827},{},[828],{"type":567,"value":829},"提示：",{"type":562,"tag":603,"props":831,"children":832},{},[833,838,843,848,853,858,863,868],{"type":562,"tag":607,"props":834,"children":835},{},[836],{"type":567,"value":837},"listA 中节点数目为 m",{"type":562,"tag":607,"props":839,"children":840},{},[841],{"type":567,"value":842},"listB 中节点数目为 n",{"type":562,"tag":607,"props":844,"children":845},{},[846],{"type":567,"value":847},"1 \u003C= m, n \u003C= 3 * 10^4",{"type":562,"tag":607,"props":849,"children":850},{},[851],{"type":567,"value":852},"1 \u003C= Node.val \u003C= 10^5",{"type":562,"tag":607,"props":854,"children":855},{},[856],{"type":567,"value":857},"0 \u003C= skipA \u003C= m",{"type":562,"tag":607,"props":859,"children":860},{},[861],{"type":567,"value":862},"0 \u003C= skipB \u003C= n",{"type":562,"tag":607,"props":864,"children":865},{},[866],{"type":567,"value":867},"如果 listA 和 listB 没有交点，intersectVal 为 0",{"type":562,"tag":607,"props":869,"children":870},{},[871],{"type":567,"value":872},"如果 listA 和 listB 有交点，intersectVal == listA[skipA] == listB[skipB]",{"type":562,"tag":563,"props":874,"children":875},{},[876],{"type":567,"value":877},"进阶：你能否设计一个时间复杂度 O(m + n) 、仅用 O(1) 内存的解决方案？",{"type":562,"tag":879,"props":880,"children":882},"h2",{"id":881},"解题思路",[883],{"type":567,"value":881},{"type":562,"tag":879,"props":885,"children":887},{"id":886},"实现",[888],{"type":567,"value":886},{"type":562,"tag":890,"props":891,"children":893},"h3",{"id":892},"暴力破解",[894],{"type":567,"value":892},{"type":562,"tag":643,"props":896,"children":900},{"className":897,"code":898,"language":899,"meta":555,"style":555},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n */\nfunction ListNode(val) {\n  this.val = val;\n  this.next = null;\n}\n\n/**\n * @param {ListNode} headA\n * @param {ListNode} headB\n * @return {ListNode}\n */\nvar getIntersectionNode = function (headA, headB) {\n  if (!headA || !headB) return null;\n  let pA = headA;\n  while (pA) {\n    let pB = headB;\n    while (pB) {\n      if (pA === pB) return pA;\n      pB = pB.next;\n    }\n    pA = pA.next;\n  }\n  return pA;\n};\n","js",[901],{"type":562,"tag":649,"props":902,"children":903},{"__ignoreMap":555},[904,913,921,929,966,999,1028,1037,1047,1055,1096,1129,1158,1166,1217,1271,1298,1324,1350,1376,1418,1447,1456,1485,1494,1511],{"type":562,"tag":653,"props":905,"children":906},{"class":655,"line":656},[907],{"type":562,"tag":653,"props":908,"children":910},{"style":909},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[911],{"type":567,"value":912},"/**\n",{"type":562,"tag":653,"props":914,"children":915},{"class":655,"line":665},[916],{"type":562,"tag":653,"props":917,"children":918},{"style":909},[919],{"type":567,"value":920}," * Definition for singly-linked list.\n",{"type":562,"tag":653,"props":922,"children":923},{"class":655,"line":674},[924],{"type":562,"tag":653,"props":925,"children":926},{"style":909},[927],{"type":567,"value":928}," */\n",{"type":562,"tag":653,"props":930,"children":931},{"class":655,"line":683},[932,938,944,950,956,961],{"type":562,"tag":653,"props":933,"children":935},{"style":934},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[936],{"type":567,"value":937},"function",{"type":562,"tag":653,"props":939,"children":941},{"style":940},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[942],{"type":567,"value":943}," ListNode",{"type":562,"tag":653,"props":945,"children":947},{"style":946},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[948],{"type":567,"value":949},"(",{"type":562,"tag":653,"props":951,"children":953},{"style":952},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[954],{"type":567,"value":955},"val",{"type":562,"tag":653,"props":957,"children":958},{"style":946},[959],{"type":567,"value":960},")",{"type":562,"tag":653,"props":962,"children":963},{"style":946},[964],{"type":567,"value":965}," {\n",{"type":562,"tag":653,"props":967,"children":968},{"class":655,"line":692},[969,975,980,984,989,994],{"type":562,"tag":653,"props":970,"children":972},{"style":971},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[973],{"type":567,"value":974},"  this",{"type":562,"tag":653,"props":976,"children":977},{"style":946},[978],{"type":567,"value":979},".",{"type":562,"tag":653,"props":981,"children":982},{"style":952},[983],{"type":567,"value":955},{"type":562,"tag":653,"props":985,"children":986},{"style":946},[987],{"type":567,"value":988}," =",{"type":562,"tag":653,"props":990,"children":991},{"style":952},[992],{"type":567,"value":993}," val",{"type":562,"tag":653,"props":995,"children":996},{"style":946},[997],{"type":567,"value":998},";\n",{"type":562,"tag":653,"props":1000,"children":1001},{"class":655,"line":701},[1002,1006,1010,1015,1019,1024],{"type":562,"tag":653,"props":1003,"children":1004},{"style":971},[1005],{"type":567,"value":974},{"type":562,"tag":653,"props":1007,"children":1008},{"style":946},[1009],{"type":567,"value":979},{"type":562,"tag":653,"props":1011,"children":1012},{"style":952},[1013],{"type":567,"value":1014},"next",{"type":562,"tag":653,"props":1016,"children":1017},{"style":946},[1018],{"type":567,"value":988},{"type":562,"tag":653,"props":1020,"children":1021},{"style":934},[1022],{"type":567,"value":1023}," null",{"type":562,"tag":653,"props":1025,"children":1026},{"style":946},[1027],{"type":567,"value":998},{"type":562,"tag":653,"props":1029,"children":1031},{"class":655,"line":1030},7,[1032],{"type":562,"tag":653,"props":1033,"children":1034},{"style":946},[1035],{"type":567,"value":1036},"}\n",{"type":562,"tag":653,"props":1038,"children":1040},{"class":655,"line":1039},8,[1041],{"type":562,"tag":653,"props":1042,"children":1044},{"emptyLinePlaceholder":1043},true,[1045],{"type":567,"value":1046},"\n",{"type":562,"tag":653,"props":1048,"children":1050},{"class":655,"line":1049},9,[1051],{"type":562,"tag":653,"props":1052,"children":1053},{"style":909},[1054],{"type":567,"value":912},{"type":562,"tag":653,"props":1056,"children":1058},{"class":655,"line":1057},10,[1059,1064,1069,1075,1080,1086,1091],{"type":562,"tag":653,"props":1060,"children":1061},{"style":909},[1062],{"type":567,"value":1063}," * ",{"type":562,"tag":653,"props":1065,"children":1066},{"style":946},[1067],{"type":567,"value":1068},"@",{"type":562,"tag":653,"props":1070,"children":1072},{"style":1071},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[1073],{"type":567,"value":1074},"param",{"type":562,"tag":653,"props":1076,"children":1077},{"style":946},[1078],{"type":567,"value":1079}," {",{"type":562,"tag":653,"props":1081,"children":1083},{"style":1082},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[1084],{"type":567,"value":1085},"ListNode",{"type":562,"tag":653,"props":1087,"children":1088},{"style":946},[1089],{"type":567,"value":1090},"}",{"type":562,"tag":653,"props":1092,"children":1093},{"style":952},[1094],{"type":567,"value":1095}," headA\n",{"type":562,"tag":653,"props":1097,"children":1099},{"class":655,"line":1098},11,[1100,1104,1108,1112,1116,1120,1124],{"type":562,"tag":653,"props":1101,"children":1102},{"style":909},[1103],{"type":567,"value":1063},{"type":562,"tag":653,"props":1105,"children":1106},{"style":946},[1107],{"type":567,"value":1068},{"type":562,"tag":653,"props":1109,"children":1110},{"style":1071},[1111],{"type":567,"value":1074},{"type":562,"tag":653,"props":1113,"children":1114},{"style":946},[1115],{"type":567,"value":1079},{"type":562,"tag":653,"props":1117,"children":1118},{"style":1082},[1119],{"type":567,"value":1085},{"type":562,"tag":653,"props":1121,"children":1122},{"style":946},[1123],{"type":567,"value":1090},{"type":562,"tag":653,"props":1125,"children":1126},{"style":952},[1127],{"type":567,"value":1128}," headB\n",{"type":562,"tag":653,"props":1130,"children":1132},{"class":655,"line":1131},12,[1133,1137,1141,1146,1150,1154],{"type":562,"tag":653,"props":1134,"children":1135},{"style":909},[1136],{"type":567,"value":1063},{"type":562,"tag":653,"props":1138,"children":1139},{"style":946},[1140],{"type":567,"value":1068},{"type":562,"tag":653,"props":1142,"children":1143},{"style":1071},[1144],{"type":567,"value":1145},"return",{"type":562,"tag":653,"props":1147,"children":1148},{"style":946},[1149],{"type":567,"value":1079},{"type":562,"tag":653,"props":1151,"children":1152},{"style":1082},[1153],{"type":567,"value":1085},{"type":562,"tag":653,"props":1155,"children":1156},{"style":946},[1157],{"type":567,"value":1036},{"type":562,"tag":653,"props":1159,"children":1161},{"class":655,"line":1160},13,[1162],{"type":562,"tag":653,"props":1163,"children":1164},{"style":909},[1165],{"type":567,"value":928},{"type":562,"tag":653,"props":1167,"children":1169},{"class":655,"line":1168},14,[1170,1175,1180,1184,1189,1194,1199,1204,1209,1213],{"type":562,"tag":653,"props":1171,"children":1172},{"style":934},[1173],{"type":567,"value":1174},"var",{"type":562,"tag":653,"props":1176,"children":1177},{"style":940},[1178],{"type":567,"value":1179}," getIntersectionNode",{"type":562,"tag":653,"props":1181,"children":1182},{"style":946},[1183],{"type":567,"value":988},{"type":562,"tag":653,"props":1185,"children":1186},{"style":934},[1187],{"type":567,"value":1188}," function",{"type":562,"tag":653,"props":1190,"children":1191},{"style":946},[1192],{"type":567,"value":1193}," (",{"type":562,"tag":653,"props":1195,"children":1196},{"style":952},[1197],{"type":567,"value":1198},"headA",{"type":562,"tag":653,"props":1200,"children":1201},{"style":946},[1202],{"type":567,"value":1203},",",{"type":562,"tag":653,"props":1205,"children":1206},{"style":952},[1207],{"type":567,"value":1208}," headB",{"type":562,"tag":653,"props":1210,"children":1211},{"style":946},[1212],{"type":567,"value":960},{"type":562,"tag":653,"props":1214,"children":1215},{"style":946},[1216],{"type":567,"value":965},{"type":562,"tag":653,"props":1218,"children":1220},{"class":655,"line":1219},15,[1221,1226,1230,1235,1239,1244,1249,1254,1258,1263,1267],{"type":562,"tag":653,"props":1222,"children":1223},{"style":1071},[1224],{"type":567,"value":1225},"  if",{"type":562,"tag":653,"props":1227,"children":1228},{"style":946},[1229],{"type":567,"value":1193},{"type":562,"tag":653,"props":1231,"children":1232},{"style":934},[1233],{"type":567,"value":1234},"!",{"type":562,"tag":653,"props":1236,"children":1237},{"style":952},[1238],{"type":567,"value":1198},{"type":562,"tag":653,"props":1240,"children":1241},{"style":934},[1242],{"type":567,"value":1243}," ||",{"type":562,"tag":653,"props":1245,"children":1246},{"style":934},[1247],{"type":567,"value":1248}," !",{"type":562,"tag":653,"props":1250,"children":1251},{"style":952},[1252],{"type":567,"value":1253},"headB",{"type":562,"tag":653,"props":1255,"children":1256},{"style":946},[1257],{"type":567,"value":960},{"type":562,"tag":653,"props":1259,"children":1260},{"style":1071},[1261],{"type":567,"value":1262}," return",{"type":562,"tag":653,"props":1264,"children":1265},{"style":934},[1266],{"type":567,"value":1023},{"type":562,"tag":653,"props":1268,"children":1269},{"style":946},[1270],{"type":567,"value":998},{"type":562,"tag":653,"props":1272,"children":1274},{"class":655,"line":1273},16,[1275,1280,1285,1289,1294],{"type":562,"tag":653,"props":1276,"children":1277},{"style":934},[1278],{"type":567,"value":1279},"  let",{"type":562,"tag":653,"props":1281,"children":1282},{"style":952},[1283],{"type":567,"value":1284}," pA",{"type":562,"tag":653,"props":1286,"children":1287},{"style":946},[1288],{"type":567,"value":988},{"type":562,"tag":653,"props":1290,"children":1291},{"style":952},[1292],{"type":567,"value":1293}," headA",{"type":562,"tag":653,"props":1295,"children":1296},{"style":946},[1297],{"type":567,"value":998},{"type":562,"tag":653,"props":1299,"children":1301},{"class":655,"line":1300},17,[1302,1307,1311,1316,1320],{"type":562,"tag":653,"props":1303,"children":1304},{"style":1071},[1305],{"type":567,"value":1306},"  while",{"type":562,"tag":653,"props":1308,"children":1309},{"style":946},[1310],{"type":567,"value":1193},{"type":562,"tag":653,"props":1312,"children":1313},{"style":952},[1314],{"type":567,"value":1315},"pA",{"type":562,"tag":653,"props":1317,"children":1318},{"style":946},[1319],{"type":567,"value":960},{"type":562,"tag":653,"props":1321,"children":1322},{"style":946},[1323],{"type":567,"value":965},{"type":562,"tag":653,"props":1325,"children":1327},{"class":655,"line":1326},18,[1328,1333,1338,1342,1346],{"type":562,"tag":653,"props":1329,"children":1330},{"style":934},[1331],{"type":567,"value":1332},"    let",{"type":562,"tag":653,"props":1334,"children":1335},{"style":952},[1336],{"type":567,"value":1337}," pB",{"type":562,"tag":653,"props":1339,"children":1340},{"style":946},[1341],{"type":567,"value":988},{"type":562,"tag":653,"props":1343,"children":1344},{"style":952},[1345],{"type":567,"value":1208},{"type":562,"tag":653,"props":1347,"children":1348},{"style":946},[1349],{"type":567,"value":998},{"type":562,"tag":653,"props":1351,"children":1353},{"class":655,"line":1352},19,[1354,1359,1363,1368,1372],{"type":562,"tag":653,"props":1355,"children":1356},{"style":1071},[1357],{"type":567,"value":1358},"    while",{"type":562,"tag":653,"props":1360,"children":1361},{"style":946},[1362],{"type":567,"value":1193},{"type":562,"tag":653,"props":1364,"children":1365},{"style":952},[1366],{"type":567,"value":1367},"pB",{"type":562,"tag":653,"props":1369,"children":1370},{"style":946},[1371],{"type":567,"value":960},{"type":562,"tag":653,"props":1373,"children":1374},{"style":946},[1375],{"type":567,"value":965},{"type":562,"tag":653,"props":1377,"children":1379},{"class":655,"line":1378},20,[1380,1385,1389,1393,1398,1402,1406,1410,1414],{"type":562,"tag":653,"props":1381,"children":1382},{"style":1071},[1383],{"type":567,"value":1384},"      if",{"type":562,"tag":653,"props":1386,"children":1387},{"style":946},[1388],{"type":567,"value":1193},{"type":562,"tag":653,"props":1390,"children":1391},{"style":952},[1392],{"type":567,"value":1315},{"type":562,"tag":653,"props":1394,"children":1395},{"style":934},[1396],{"type":567,"value":1397}," ===",{"type":562,"tag":653,"props":1399,"children":1400},{"style":952},[1401],{"type":567,"value":1337},{"type":562,"tag":653,"props":1403,"children":1404},{"style":946},[1405],{"type":567,"value":960},{"type":562,"tag":653,"props":1407,"children":1408},{"style":1071},[1409],{"type":567,"value":1262},{"type":562,"tag":653,"props":1411,"children":1412},{"style":952},[1413],{"type":567,"value":1284},{"type":562,"tag":653,"props":1415,"children":1416},{"style":946},[1417],{"type":567,"value":998},{"type":562,"tag":653,"props":1419,"children":1421},{"class":655,"line":1420},21,[1422,1427,1431,1435,1439,1443],{"type":562,"tag":653,"props":1423,"children":1424},{"style":952},[1425],{"type":567,"value":1426},"      pB",{"type":562,"tag":653,"props":1428,"children":1429},{"style":946},[1430],{"type":567,"value":988},{"type":562,"tag":653,"props":1432,"children":1433},{"style":952},[1434],{"type":567,"value":1337},{"type":562,"tag":653,"props":1436,"children":1437},{"style":946},[1438],{"type":567,"value":979},{"type":562,"tag":653,"props":1440,"children":1441},{"style":952},[1442],{"type":567,"value":1014},{"type":562,"tag":653,"props":1444,"children":1445},{"style":946},[1446],{"type":567,"value":998},{"type":562,"tag":653,"props":1448,"children":1450},{"class":655,"line":1449},22,[1451],{"type":562,"tag":653,"props":1452,"children":1453},{"style":946},[1454],{"type":567,"value":1455},"    }\n",{"type":562,"tag":653,"props":1457,"children":1459},{"class":655,"line":1458},23,[1460,1465,1469,1473,1477,1481],{"type":562,"tag":653,"props":1461,"children":1462},{"style":952},[1463],{"type":567,"value":1464},"    pA",{"type":562,"tag":653,"props":1466,"children":1467},{"style":946},[1468],{"type":567,"value":988},{"type":562,"tag":653,"props":1470,"children":1471},{"style":952},[1472],{"type":567,"value":1284},{"type":562,"tag":653,"props":1474,"children":1475},{"style":946},[1476],{"type":567,"value":979},{"type":562,"tag":653,"props":1478,"children":1479},{"style":952},[1480],{"type":567,"value":1014},{"type":562,"tag":653,"props":1482,"children":1483},{"style":946},[1484],{"type":567,"value":998},{"type":562,"tag":653,"props":1486,"children":1488},{"class":655,"line":1487},24,[1489],{"type":562,"tag":653,"props":1490,"children":1491},{"style":946},[1492],{"type":567,"value":1493},"  }\n",{"type":562,"tag":653,"props":1495,"children":1497},{"class":655,"line":1496},25,[1498,1503,1507],{"type":562,"tag":653,"props":1499,"children":1500},{"style":1071},[1501],{"type":567,"value":1502},"  return",{"type":562,"tag":653,"props":1504,"children":1505},{"style":952},[1506],{"type":567,"value":1284},{"type":562,"tag":653,"props":1508,"children":1509},{"style":946},[1510],{"type":567,"value":998},{"type":562,"tag":653,"props":1512,"children":1514},{"class":655,"line":1513},26,[1515],{"type":562,"tag":653,"props":1516,"children":1517},{"style":946},[1518],{"type":567,"value":1519},"};\n",{"type":562,"tag":890,"props":1521,"children":1523},{"id":1522},"双指针",[1524],{"type":567,"value":1522},{"type":562,"tag":643,"props":1526,"children":1528},{"className":897,"code":1527,"language":899,"meta":555,"style":555},"/**\n * Definition for singly-linked list.\n */\nfunction ListNode(val) {\n  this.val = val;\n  this.next = null;\n}\n\n/**\n * @param {ListNode} headA\n * @param {ListNode} headB\n * @return {ListNode}\n */\nvar getIntersectionNode = function (headA, headB) {\n  if (!headA || !headB) return null;\n  let pA = headA;\n  let pB = headB;\n  while (pA !== pB) {\n    pA = pA ? pA.next : headB;\n    pB = pB ? pB.next : headA;\n  }\n  return pA;\n};\n",[1529],{"type":562,"tag":649,"props":1530,"children":1531},{"__ignoreMap":555},[1532,1539,1546,1553,1580,1607,1634,1641,1648,1655,1686,1717,1744,1751,1794,1841,1864,1887,1919,1964,2008,2015,2030],{"type":562,"tag":653,"props":1533,"children":1534},{"class":655,"line":656},[1535],{"type":562,"tag":653,"props":1536,"children":1537},{"style":909},[1538],{"type":567,"value":912},{"type":562,"tag":653,"props":1540,"children":1541},{"class":655,"line":665},[1542],{"type":562,"tag":653,"props":1543,"children":1544},{"style":909},[1545],{"type":567,"value":920},{"type":562,"tag":653,"props":1547,"children":1548},{"class":655,"line":674},[1549],{"type":562,"tag":653,"props":1550,"children":1551},{"style":909},[1552],{"type":567,"value":928},{"type":562,"tag":653,"props":1554,"children":1555},{"class":655,"line":683},[1556,1560,1564,1568,1572,1576],{"type":562,"tag":653,"props":1557,"children":1558},{"style":934},[1559],{"type":567,"value":937},{"type":562,"tag":653,"props":1561,"children":1562},{"style":940},[1563],{"type":567,"value":943},{"type":562,"tag":653,"props":1565,"children":1566},{"style":946},[1567],{"type":567,"value":949},{"type":562,"tag":653,"props":1569,"children":1570},{"style":952},[1571],{"type":567,"value":955},{"type":562,"tag":653,"props":1573,"children":1574},{"style":946},[1575],{"type":567,"value":960},{"type":562,"tag":653,"props":1577,"children":1578},{"style":946},[1579],{"type":567,"value":965},{"type":562,"tag":653,"props":1581,"children":1582},{"class":655,"line":692},[1583,1587,1591,1595,1599,1603],{"type":562,"tag":653,"props":1584,"children":1585},{"style":971},[1586],{"type":567,"value":974},{"type":562,"tag":653,"props":1588,"children":1589},{"style":946},[1590],{"type":567,"value":979},{"type":562,"tag":653,"props":1592,"children":1593},{"style":952},[1594],{"type":567,"value":955},{"type":562,"tag":653,"props":1596,"children":1597},{"style":946},[1598],{"type":567,"value":988},{"type":562,"tag":653,"props":1600,"children":1601},{"style":952},[1602],{"type":567,"value":993},{"type":562,"tag":653,"props":1604,"children":1605},{"style":946},[1606],{"type":567,"value":998},{"type":562,"tag":653,"props":1608,"children":1609},{"class":655,"line":701},[1610,1614,1618,1622,1626,1630],{"type":562,"tag":653,"props":1611,"children":1612},{"style":971},[1613],{"type":567,"value":974},{"type":562,"tag":653,"props":1615,"children":1616},{"style":946},[1617],{"type":567,"value":979},{"type":562,"tag":653,"props":1619,"children":1620},{"style":952},[1621],{"type":567,"value":1014},{"type":562,"tag":653,"props":1623,"children":1624},{"style":946},[1625],{"type":567,"value":988},{"type":562,"tag":653,"props":1627,"children":1628},{"style":934},[1629],{"type":567,"value":1023},{"type":562,"tag":653,"props":1631,"children":1632},{"style":946},[1633],{"type":567,"value":998},{"type":562,"tag":653,"props":1635,"children":1636},{"class":655,"line":1030},[1637],{"type":562,"tag":653,"props":1638,"children":1639},{"style":946},[1640],{"type":567,"value":1036},{"type":562,"tag":653,"props":1642,"children":1643},{"class":655,"line":1039},[1644],{"type":562,"tag":653,"props":1645,"children":1646},{"emptyLinePlaceholder":1043},[1647],{"type":567,"value":1046},{"type":562,"tag":653,"props":1649,"children":1650},{"class":655,"line":1049},[1651],{"type":562,"tag":653,"props":1652,"children":1653},{"style":909},[1654],{"type":567,"value":912},{"type":562,"tag":653,"props":1656,"children":1657},{"class":655,"line":1057},[1658,1662,1666,1670,1674,1678,1682],{"type":562,"tag":653,"props":1659,"children":1660},{"style":909},[1661],{"type":567,"value":1063},{"type":562,"tag":653,"props":1663,"children":1664},{"style":946},[1665],{"type":567,"value":1068},{"type":562,"tag":653,"props":1667,"children":1668},{"style":1071},[1669],{"type":567,"value":1074},{"type":562,"tag":653,"props":1671,"children":1672},{"style":946},[1673],{"type":567,"value":1079},{"type":562,"tag":653,"props":1675,"children":1676},{"style":1082},[1677],{"type":567,"value":1085},{"type":562,"tag":653,"props":1679,"children":1680},{"style":946},[1681],{"type":567,"value":1090},{"type":562,"tag":653,"props":1683,"children":1684},{"style":952},[1685],{"type":567,"value":1095},{"type":562,"tag":653,"props":1687,"children":1688},{"class":655,"line":1098},[1689,1693,1697,1701,1705,1709,1713],{"type":562,"tag":653,"props":1690,"children":1691},{"style":909},[1692],{"type":567,"value":1063},{"type":562,"tag":653,"props":1694,"children":1695},{"style":946},[1696],{"type":567,"value":1068},{"type":562,"tag":653,"props":1698,"children":1699},{"style":1071},[1700],{"type":567,"value":1074},{"type":562,"tag":653,"props":1702,"children":1703},{"style":946},[1704],{"type":567,"value":1079},{"type":562,"tag":653,"props":1706,"children":1707},{"style":1082},[1708],{"type":567,"value":1085},{"type":562,"tag":653,"props":1710,"children":1711},{"style":946},[1712],{"type":567,"value":1090},{"type":562,"tag":653,"props":1714,"children":1715},{"style":952},[1716],{"type":567,"value":1128},{"type":562,"tag":653,"props":1718,"children":1719},{"class":655,"line":1131},[1720,1724,1728,1732,1736,1740],{"type":562,"tag":653,"props":1721,"children":1722},{"style":909},[1723],{"type":567,"value":1063},{"type":562,"tag":653,"props":1725,"children":1726},{"style":946},[1727],{"type":567,"value":1068},{"type":562,"tag":653,"props":1729,"children":1730},{"style":1071},[1731],{"type":567,"value":1145},{"type":562,"tag":653,"props":1733,"children":1734},{"style":946},[1735],{"type":567,"value":1079},{"type":562,"tag":653,"props":1737,"children":1738},{"style":1082},[1739],{"type":567,"value":1085},{"type":562,"tag":653,"props":1741,"children":1742},{"style":946},[1743],{"type":567,"value":1036},{"type":562,"tag":653,"props":1745,"children":1746},{"class":655,"line":1160},[1747],{"type":562,"tag":653,"props":1748,"children":1749},{"style":909},[1750],{"type":567,"value":928},{"type":562,"tag":653,"props":1752,"children":1753},{"class":655,"line":1168},[1754,1758,1762,1766,1770,1774,1778,1782,1786,1790],{"type":562,"tag":653,"props":1755,"children":1756},{"style":934},[1757],{"type":567,"value":1174},{"type":562,"tag":653,"props":1759,"children":1760},{"style":940},[1761],{"type":567,"value":1179},{"type":562,"tag":653,"props":1763,"children":1764},{"style":946},[1765],{"type":567,"value":988},{"type":562,"tag":653,"props":1767,"children":1768},{"style":934},[1769],{"type":567,"value":1188},{"type":562,"tag":653,"props":1771,"children":1772},{"style":946},[1773],{"type":567,"value":1193},{"type":562,"tag":653,"props":1775,"children":1776},{"style":952},[1777],{"type":567,"value":1198},{"type":562,"tag":653,"props":1779,"children":1780},{"style":946},[1781],{"type":567,"value":1203},{"type":562,"tag":653,"props":1783,"children":1784},{"style":952},[1785],{"type":567,"value":1208},{"type":562,"tag":653,"props":1787,"children":1788},{"style":946},[1789],{"type":567,"value":960},{"type":562,"tag":653,"props":1791,"children":1792},{"style":946},[1793],{"type":567,"value":965},{"type":562,"tag":653,"props":1795,"children":1796},{"class":655,"line":1219},[1797,1801,1805,1809,1813,1817,1821,1825,1829,1833,1837],{"type":562,"tag":653,"props":1798,"children":1799},{"style":1071},[1800],{"type":567,"value":1225},{"type":562,"tag":653,"props":1802,"children":1803},{"style":946},[1804],{"type":567,"value":1193},{"type":562,"tag":653,"props":1806,"children":1807},{"style":934},[1808],{"type":567,"value":1234},{"type":562,"tag":653,"props":1810,"children":1811},{"style":952},[1812],{"type":567,"value":1198},{"type":562,"tag":653,"props":1814,"children":1815},{"style":934},[1816],{"type":567,"value":1243},{"type":562,"tag":653,"props":1818,"children":1819},{"style":934},[1820],{"type":567,"value":1248},{"type":562,"tag":653,"props":1822,"children":1823},{"style":952},[1824],{"type":567,"value":1253},{"type":562,"tag":653,"props":1826,"children":1827},{"style":946},[1828],{"type":567,"value":960},{"type":562,"tag":653,"props":1830,"children":1831},{"style":1071},[1832],{"type":567,"value":1262},{"type":562,"tag":653,"props":1834,"children":1835},{"style":934},[1836],{"type":567,"value":1023},{"type":562,"tag":653,"props":1838,"children":1839},{"style":946},[1840],{"type":567,"value":998},{"type":562,"tag":653,"props":1842,"children":1843},{"class":655,"line":1273},[1844,1848,1852,1856,1860],{"type":562,"tag":653,"props":1845,"children":1846},{"style":934},[1847],{"type":567,"value":1279},{"type":562,"tag":653,"props":1849,"children":1850},{"style":952},[1851],{"type":567,"value":1284},{"type":562,"tag":653,"props":1853,"children":1854},{"style":946},[1855],{"type":567,"value":988},{"type":562,"tag":653,"props":1857,"children":1858},{"style":952},[1859],{"type":567,"value":1293},{"type":562,"tag":653,"props":1861,"children":1862},{"style":946},[1863],{"type":567,"value":998},{"type":562,"tag":653,"props":1865,"children":1866},{"class":655,"line":1300},[1867,1871,1875,1879,1883],{"type":562,"tag":653,"props":1868,"children":1869},{"style":934},[1870],{"type":567,"value":1279},{"type":562,"tag":653,"props":1872,"children":1873},{"style":952},[1874],{"type":567,"value":1337},{"type":562,"tag":653,"props":1876,"children":1877},{"style":946},[1878],{"type":567,"value":988},{"type":562,"tag":653,"props":1880,"children":1881},{"style":952},[1882],{"type":567,"value":1208},{"type":562,"tag":653,"props":1884,"children":1885},{"style":946},[1886],{"type":567,"value":998},{"type":562,"tag":653,"props":1888,"children":1889},{"class":655,"line":1326},[1890,1894,1898,1902,1907,1911,1915],{"type":562,"tag":653,"props":1891,"children":1892},{"style":1071},[1893],{"type":567,"value":1306},{"type":562,"tag":653,"props":1895,"children":1896},{"style":946},[1897],{"type":567,"value":1193},{"type":562,"tag":653,"props":1899,"children":1900},{"style":952},[1901],{"type":567,"value":1315},{"type":562,"tag":653,"props":1903,"children":1904},{"style":934},[1905],{"type":567,"value":1906}," !==",{"type":562,"tag":653,"props":1908,"children":1909},{"style":952},[1910],{"type":567,"value":1337},{"type":562,"tag":653,"props":1912,"children":1913},{"style":946},[1914],{"type":567,"value":960},{"type":562,"tag":653,"props":1916,"children":1917},{"style":946},[1918],{"type":567,"value":965},{"type":562,"tag":653,"props":1920,"children":1921},{"class":655,"line":1352},[1922,1926,1930,1934,1939,1943,1947,1951,1956,1960],{"type":562,"tag":653,"props":1923,"children":1924},{"style":952},[1925],{"type":567,"value":1464},{"type":562,"tag":653,"props":1927,"children":1928},{"style":946},[1929],{"type":567,"value":988},{"type":562,"tag":653,"props":1931,"children":1932},{"style":952},[1933],{"type":567,"value":1284},{"type":562,"tag":653,"props":1935,"children":1936},{"style":934},[1937],{"type":567,"value":1938}," ?",{"type":562,"tag":653,"props":1940,"children":1941},{"style":952},[1942],{"type":567,"value":1284},{"type":562,"tag":653,"props":1944,"children":1945},{"style":946},[1946],{"type":567,"value":979},{"type":562,"tag":653,"props":1948,"children":1949},{"style":952},[1950],{"type":567,"value":1014},{"type":562,"tag":653,"props":1952,"children":1953},{"style":934},[1954],{"type":567,"value":1955}," :",{"type":562,"tag":653,"props":1957,"children":1958},{"style":952},[1959],{"type":567,"value":1208},{"type":562,"tag":653,"props":1961,"children":1962},{"style":946},[1963],{"type":567,"value":998},{"type":562,"tag":653,"props":1965,"children":1966},{"class":655,"line":1378},[1967,1972,1976,1980,1984,1988,1992,1996,2000,2004],{"type":562,"tag":653,"props":1968,"children":1969},{"style":952},[1970],{"type":567,"value":1971},"    pB",{"type":562,"tag":653,"props":1973,"children":1974},{"style":946},[1975],{"type":567,"value":988},{"type":562,"tag":653,"props":1977,"children":1978},{"style":952},[1979],{"type":567,"value":1337},{"type":562,"tag":653,"props":1981,"children":1982},{"style":934},[1983],{"type":567,"value":1938},{"type":562,"tag":653,"props":1985,"children":1986},{"style":952},[1987],{"type":567,"value":1337},{"type":562,"tag":653,"props":1989,"children":1990},{"style":946},[1991],{"type":567,"value":979},{"type":562,"tag":653,"props":1993,"children":1994},{"style":952},[1995],{"type":567,"value":1014},{"type":562,"tag":653,"props":1997,"children":1998},{"style":934},[1999],{"type":567,"value":1955},{"type":562,"tag":653,"props":2001,"children":2002},{"style":952},[2003],{"type":567,"value":1293},{"type":562,"tag":653,"props":2005,"children":2006},{"style":946},[2007],{"type":567,"value":998},{"type":562,"tag":653,"props":2009,"children":2010},{"class":655,"line":1420},[2011],{"type":562,"tag":653,"props":2012,"children":2013},{"style":946},[2014],{"type":567,"value":1493},{"type":562,"tag":653,"props":2016,"children":2017},{"class":655,"line":1449},[2018,2022,2026],{"type":562,"tag":653,"props":2019,"children":2020},{"style":1071},[2021],{"type":567,"value":1502},{"type":562,"tag":653,"props":2023,"children":2024},{"style":952},[2025],{"type":567,"value":1284},{"type":562,"tag":653,"props":2027,"children":2028},{"style":946},[2029],{"type":567,"value":998},{"type":562,"tag":653,"props":2031,"children":2032},{"class":655,"line":1458},[2033],{"type":562,"tag":653,"props":2034,"children":2035},{"style":946},[2036],{"type":567,"value":1519},{"type":562,"tag":890,"props":2038,"children":2040},{"id":2039},"哈希法",[2041],{"type":567,"value":2039},{"type":562,"tag":643,"props":2043,"children":2045},{"className":897,"code":2044,"language":899,"meta":555,"style":555},"/**\n * Definition for singly-linked list.\n */\nfunction ListNode(val) {\n  this.val = val;\n  this.next = null;\n}\n\n/**\n * @param {ListNode} headA\n * @param {ListNode} headB\n * @return {ListNode}\n */\nvar getIntersectionNode = function (headA, headB) {\n  if (!headA || !headB) return null;\n  let map = new Map();\n  let pA = headA;\n  let pB = headB;\n  while (pA) {\n    map.set(pA, 1);\n    pA = pA.next;\n  }\n  while (pB) {\n    if (map.has(pB)) return pB;\n    pB = pB.next;\n  }\n};\n",[2046],{"type":562,"tag":649,"props":2047,"children":2048},{"__ignoreMap":555},[2049,2056,2063,2070,2097,2124,2151,2158,2165,2172,2203,2234,2261,2268,2311,2358,2389,2412,2435,2458,2498,2525,2532,2555,2606,2633,2640],{"type":562,"tag":653,"props":2050,"children":2051},{"class":655,"line":656},[2052],{"type":562,"tag":653,"props":2053,"children":2054},{"style":909},[2055],{"type":567,"value":912},{"type":562,"tag":653,"props":2057,"children":2058},{"class":655,"line":665},[2059],{"type":562,"tag":653,"props":2060,"children":2061},{"style":909},[2062],{"type":567,"value":920},{"type":562,"tag":653,"props":2064,"children":2065},{"class":655,"line":674},[2066],{"type":562,"tag":653,"props":2067,"children":2068},{"style":909},[2069],{"type":567,"value":928},{"type":562,"tag":653,"props":2071,"children":2072},{"class":655,"line":683},[2073,2077,2081,2085,2089,2093],{"type":562,"tag":653,"props":2074,"children":2075},{"style":934},[2076],{"type":567,"value":937},{"type":562,"tag":653,"props":2078,"children":2079},{"style":940},[2080],{"type":567,"value":943},{"type":562,"tag":653,"props":2082,"children":2083},{"style":946},[2084],{"type":567,"value":949},{"type":562,"tag":653,"props":2086,"children":2087},{"style":952},[2088],{"type":567,"value":955},{"type":562,"tag":653,"props":2090,"children":2091},{"style":946},[2092],{"type":567,"value":960},{"type":562,"tag":653,"props":2094,"children":2095},{"style":946},[2096],{"type":567,"value":965},{"type":562,"tag":653,"props":2098,"children":2099},{"class":655,"line":692},[2100,2104,2108,2112,2116,2120],{"type":562,"tag":653,"props":2101,"children":2102},{"style":971},[2103],{"type":567,"value":974},{"type":562,"tag":653,"props":2105,"children":2106},{"style":946},[2107],{"type":567,"value":979},{"type":562,"tag":653,"props":2109,"children":2110},{"style":952},[2111],{"type":567,"value":955},{"type":562,"tag":653,"props":2113,"children":2114},{"style":946},[2115],{"type":567,"value":988},{"type":562,"tag":653,"props":2117,"children":2118},{"style":952},[2119],{"type":567,"value":993},{"type":562,"tag":653,"props":2121,"children":2122},{"style":946},[2123],{"type":567,"value":998},{"type":562,"tag":653,"props":2125,"children":2126},{"class":655,"line":701},[2127,2131,2135,2139,2143,2147],{"type":562,"tag":653,"props":2128,"children":2129},{"style":971},[2130],{"type":567,"value":974},{"type":562,"tag":653,"props":2132,"children":2133},{"style":946},[2134],{"type":567,"value":979},{"type":562,"tag":653,"props":2136,"children":2137},{"style":952},[2138],{"type":567,"value":1014},{"type":562,"tag":653,"props":2140,"children":2141},{"style":946},[2142],{"type":567,"value":988},{"type":562,"tag":653,"props":2144,"children":2145},{"style":934},[2146],{"type":567,"value":1023},{"type":562,"tag":653,"props":2148,"children":2149},{"style":946},[2150],{"type":567,"value":998},{"type":562,"tag":653,"props":2152,"children":2153},{"class":655,"line":1030},[2154],{"type":562,"tag":653,"props":2155,"children":2156},{"style":946},[2157],{"type":567,"value":1036},{"type":562,"tag":653,"props":2159,"children":2160},{"class":655,"line":1039},[2161],{"type":562,"tag":653,"props":2162,"children":2163},{"emptyLinePlaceholder":1043},[2164],{"type":567,"value":1046},{"type":562,"tag":653,"props":2166,"children":2167},{"class":655,"line":1049},[2168],{"type":562,"tag":653,"props":2169,"children":2170},{"style":909},[2171],{"type":567,"value":912},{"type":562,"tag":653,"props":2173,"children":2174},{"class":655,"line":1057},[2175,2179,2183,2187,2191,2195,2199],{"type":562,"tag":653,"props":2176,"children":2177},{"style":909},[2178],{"type":567,"value":1063},{"type":562,"tag":653,"props":2180,"children":2181},{"style":946},[2182],{"type":567,"value":1068},{"type":562,"tag":653,"props":2184,"children":2185},{"style":1071},[2186],{"type":567,"value":1074},{"type":562,"tag":653,"props":2188,"children":2189},{"style":946},[2190],{"type":567,"value":1079},{"type":562,"tag":653,"props":2192,"children":2193},{"style":1082},[2194],{"type":567,"value":1085},{"type":562,"tag":653,"props":2196,"children":2197},{"style":946},[2198],{"type":567,"value":1090},{"type":562,"tag":653,"props":2200,"children":2201},{"style":952},[2202],{"type":567,"value":1095},{"type":562,"tag":653,"props":2204,"children":2205},{"class":655,"line":1098},[2206,2210,2214,2218,2222,2226,2230],{"type":562,"tag":653,"props":2207,"children":2208},{"style":909},[2209],{"type":567,"value":1063},{"type":562,"tag":653,"props":2211,"children":2212},{"style":946},[2213],{"type":567,"value":1068},{"type":562,"tag":653,"props":2215,"children":2216},{"style":1071},[2217],{"type":567,"value":1074},{"type":562,"tag":653,"props":2219,"children":2220},{"style":946},[2221],{"type":567,"value":1079},{"type":562,"tag":653,"props":2223,"children":2224},{"style":1082},[2225],{"type":567,"value":1085},{"type":562,"tag":653,"props":2227,"children":2228},{"style":946},[2229],{"type":567,"value":1090},{"type":562,"tag":653,"props":2231,"children":2232},{"style":952},[2233],{"type":567,"value":1128},{"type":562,"tag":653,"props":2235,"children":2236},{"class":655,"line":1131},[2237,2241,2245,2249,2253,2257],{"type":562,"tag":653,"props":2238,"children":2239},{"style":909},[2240],{"type":567,"value":1063},{"type":562,"tag":653,"props":2242,"children":2243},{"style":946},[2244],{"type":567,"value":1068},{"type":562,"tag":653,"props":2246,"children":2247},{"style":1071},[2248],{"type":567,"value":1145},{"type":562,"tag":653,"props":2250,"children":2251},{"style":946},[2252],{"type":567,"value":1079},{"type":562,"tag":653,"props":2254,"children":2255},{"style":1082},[2256],{"type":567,"value":1085},{"type":562,"tag":653,"props":2258,"children":2259},{"style":946},[2260],{"type":567,"value":1036},{"type":562,"tag":653,"props":2262,"children":2263},{"class":655,"line":1160},[2264],{"type":562,"tag":653,"props":2265,"children":2266},{"style":909},[2267],{"type":567,"value":928},{"type":562,"tag":653,"props":2269,"children":2270},{"class":655,"line":1168},[2271,2275,2279,2283,2287,2291,2295,2299,2303,2307],{"type":562,"tag":653,"props":2272,"children":2273},{"style":934},[2274],{"type":567,"value":1174},{"type":562,"tag":653,"props":2276,"children":2277},{"style":940},[2278],{"type":567,"value":1179},{"type":562,"tag":653,"props":2280,"children":2281},{"style":946},[2282],{"type":567,"value":988},{"type":562,"tag":653,"props":2284,"children":2285},{"style":934},[2286],{"type":567,"value":1188},{"type":562,"tag":653,"props":2288,"children":2289},{"style":946},[2290],{"type":567,"value":1193},{"type":562,"tag":653,"props":2292,"children":2293},{"style":952},[2294],{"type":567,"value":1198},{"type":562,"tag":653,"props":2296,"children":2297},{"style":946},[2298],{"type":567,"value":1203},{"type":562,"tag":653,"props":2300,"children":2301},{"style":952},[2302],{"type":567,"value":1208},{"type":562,"tag":653,"props":2304,"children":2305},{"style":946},[2306],{"type":567,"value":960},{"type":562,"tag":653,"props":2308,"children":2309},{"style":946},[2310],{"type":567,"value":965},{"type":562,"tag":653,"props":2312,"children":2313},{"class":655,"line":1219},[2314,2318,2322,2326,2330,2334,2338,2342,2346,2350,2354],{"type":562,"tag":653,"props":2315,"children":2316},{"style":1071},[2317],{"type":567,"value":1225},{"type":562,"tag":653,"props":2319,"children":2320},{"style":946},[2321],{"type":567,"value":1193},{"type":562,"tag":653,"props":2323,"children":2324},{"style":934},[2325],{"type":567,"value":1234},{"type":562,"tag":653,"props":2327,"children":2328},{"style":952},[2329],{"type":567,"value":1198},{"type":562,"tag":653,"props":2331,"children":2332},{"style":934},[2333],{"type":567,"value":1243},{"type":562,"tag":653,"props":2335,"children":2336},{"style":934},[2337],{"type":567,"value":1248},{"type":562,"tag":653,"props":2339,"children":2340},{"style":952},[2341],{"type":567,"value":1253},{"type":562,"tag":653,"props":2343,"children":2344},{"style":946},[2345],{"type":567,"value":960},{"type":562,"tag":653,"props":2347,"children":2348},{"style":1071},[2349],{"type":567,"value":1262},{"type":562,"tag":653,"props":2351,"children":2352},{"style":934},[2353],{"type":567,"value":1023},{"type":562,"tag":653,"props":2355,"children":2356},{"style":946},[2357],{"type":567,"value":998},{"type":562,"tag":653,"props":2359,"children":2360},{"class":655,"line":1273},[2361,2365,2370,2374,2379,2384],{"type":562,"tag":653,"props":2362,"children":2363},{"style":934},[2364],{"type":567,"value":1279},{"type":562,"tag":653,"props":2366,"children":2367},{"style":952},[2368],{"type":567,"value":2369}," map",{"type":562,"tag":653,"props":2371,"children":2372},{"style":946},[2373],{"type":567,"value":988},{"type":562,"tag":653,"props":2375,"children":2376},{"style":934},[2377],{"type":567,"value":2378}," new",{"type":562,"tag":653,"props":2380,"children":2381},{"style":940},[2382],{"type":567,"value":2383}," Map",{"type":562,"tag":653,"props":2385,"children":2386},{"style":946},[2387],{"type":567,"value":2388},"();\n",{"type":562,"tag":653,"props":2390,"children":2391},{"class":655,"line":1300},[2392,2396,2400,2404,2408],{"type":562,"tag":653,"props":2393,"children":2394},{"style":934},[2395],{"type":567,"value":1279},{"type":562,"tag":653,"props":2397,"children":2398},{"style":952},[2399],{"type":567,"value":1284},{"type":562,"tag":653,"props":2401,"children":2402},{"style":946},[2403],{"type":567,"value":988},{"type":562,"tag":653,"props":2405,"children":2406},{"style":952},[2407],{"type":567,"value":1293},{"type":562,"tag":653,"props":2409,"children":2410},{"style":946},[2411],{"type":567,"value":998},{"type":562,"tag":653,"props":2413,"children":2414},{"class":655,"line":1326},[2415,2419,2423,2427,2431],{"type":562,"tag":653,"props":2416,"children":2417},{"style":934},[2418],{"type":567,"value":1279},{"type":562,"tag":653,"props":2420,"children":2421},{"style":952},[2422],{"type":567,"value":1337},{"type":562,"tag":653,"props":2424,"children":2425},{"style":946},[2426],{"type":567,"value":988},{"type":562,"tag":653,"props":2428,"children":2429},{"style":952},[2430],{"type":567,"value":1208},{"type":562,"tag":653,"props":2432,"children":2433},{"style":946},[2434],{"type":567,"value":998},{"type":562,"tag":653,"props":2436,"children":2437},{"class":655,"line":1352},[2438,2442,2446,2450,2454],{"type":562,"tag":653,"props":2439,"children":2440},{"style":1071},[2441],{"type":567,"value":1306},{"type":562,"tag":653,"props":2443,"children":2444},{"style":946},[2445],{"type":567,"value":1193},{"type":562,"tag":653,"props":2447,"children":2448},{"style":952},[2449],{"type":567,"value":1315},{"type":562,"tag":653,"props":2451,"children":2452},{"style":946},[2453],{"type":567,"value":960},{"type":562,"tag":653,"props":2455,"children":2456},{"style":946},[2457],{"type":567,"value":965},{"type":562,"tag":653,"props":2459,"children":2460},{"class":655,"line":1378},[2461,2466,2470,2475,2479,2483,2487,2493],{"type":562,"tag":653,"props":2462,"children":2463},{"style":952},[2464],{"type":567,"value":2465},"    map",{"type":562,"tag":653,"props":2467,"children":2468},{"style":946},[2469],{"type":567,"value":979},{"type":562,"tag":653,"props":2471,"children":2472},{"style":940},[2473],{"type":567,"value":2474},"set",{"type":562,"tag":653,"props":2476,"children":2477},{"style":946},[2478],{"type":567,"value":949},{"type":562,"tag":653,"props":2480,"children":2481},{"style":952},[2482],{"type":567,"value":1315},{"type":562,"tag":653,"props":2484,"children":2485},{"style":946},[2486],{"type":567,"value":1203},{"type":562,"tag":653,"props":2488,"children":2490},{"style":2489},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[2491],{"type":567,"value":2492}," 1",{"type":562,"tag":653,"props":2494,"children":2495},{"style":946},[2496],{"type":567,"value":2497},");\n",{"type":562,"tag":653,"props":2499,"children":2500},{"class":655,"line":1420},[2501,2505,2509,2513,2517,2521],{"type":562,"tag":653,"props":2502,"children":2503},{"style":952},[2504],{"type":567,"value":1464},{"type":562,"tag":653,"props":2506,"children":2507},{"style":946},[2508],{"type":567,"value":988},{"type":562,"tag":653,"props":2510,"children":2511},{"style":952},[2512],{"type":567,"value":1284},{"type":562,"tag":653,"props":2514,"children":2515},{"style":946},[2516],{"type":567,"value":979},{"type":562,"tag":653,"props":2518,"children":2519},{"style":952},[2520],{"type":567,"value":1014},{"type":562,"tag":653,"props":2522,"children":2523},{"style":946},[2524],{"type":567,"value":998},{"type":562,"tag":653,"props":2526,"children":2527},{"class":655,"line":1449},[2528],{"type":562,"tag":653,"props":2529,"children":2530},{"style":946},[2531],{"type":567,"value":1493},{"type":562,"tag":653,"props":2533,"children":2534},{"class":655,"line":1458},[2535,2539,2543,2547,2551],{"type":562,"tag":653,"props":2536,"children":2537},{"style":1071},[2538],{"type":567,"value":1306},{"type":562,"tag":653,"props":2540,"children":2541},{"style":946},[2542],{"type":567,"value":1193},{"type":562,"tag":653,"props":2544,"children":2545},{"style":952},[2546],{"type":567,"value":1367},{"type":562,"tag":653,"props":2548,"children":2549},{"style":946},[2550],{"type":567,"value":960},{"type":562,"tag":653,"props":2552,"children":2553},{"style":946},[2554],{"type":567,"value":965},{"type":562,"tag":653,"props":2556,"children":2557},{"class":655,"line":1487},[2558,2563,2567,2572,2576,2581,2585,2589,2594,2598,2602],{"type":562,"tag":653,"props":2559,"children":2560},{"style":1071},[2561],{"type":567,"value":2562},"    if",{"type":562,"tag":653,"props":2564,"children":2565},{"style":946},[2566],{"type":567,"value":1193},{"type":562,"tag":653,"props":2568,"children":2569},{"style":952},[2570],{"type":567,"value":2571},"map",{"type":562,"tag":653,"props":2573,"children":2574},{"style":946},[2575],{"type":567,"value":979},{"type":562,"tag":653,"props":2577,"children":2578},{"style":940},[2579],{"type":567,"value":2580},"has",{"type":562,"tag":653,"props":2582,"children":2583},{"style":946},[2584],{"type":567,"value":949},{"type":562,"tag":653,"props":2586,"children":2587},{"style":952},[2588],{"type":567,"value":1367},{"type":562,"tag":653,"props":2590,"children":2591},{"style":946},[2592],{"type":567,"value":2593},"))",{"type":562,"tag":653,"props":2595,"children":2596},{"style":1071},[2597],{"type":567,"value":1262},{"type":562,"tag":653,"props":2599,"children":2600},{"style":952},[2601],{"type":567,"value":1337},{"type":562,"tag":653,"props":2603,"children":2604},{"style":946},[2605],{"type":567,"value":998},{"type":562,"tag":653,"props":2607,"children":2608},{"class":655,"line":1496},[2609,2613,2617,2621,2625,2629],{"type":562,"tag":653,"props":2610,"children":2611},{"style":952},[2612],{"type":567,"value":1971},{"type":562,"tag":653,"props":2614,"children":2615},{"style":946},[2616],{"type":567,"value":988},{"type":562,"tag":653,"props":2618,"children":2619},{"style":952},[2620],{"type":567,"value":1337},{"type":562,"tag":653,"props":2622,"children":2623},{"style":946},[2624],{"type":567,"value":979},{"type":562,"tag":653,"props":2626,"children":2627},{"style":952},[2628],{"type":567,"value":1014},{"type":562,"tag":653,"props":2630,"children":2631},{"style":946},[2632],{"type":567,"value":998},{"type":562,"tag":653,"props":2634,"children":2635},{"class":655,"line":1513},[2636],{"type":562,"tag":653,"props":2637,"children":2638},{"style":946},[2639],{"type":567,"value":1493},{"type":562,"tag":653,"props":2641,"children":2643},{"class":655,"line":2642},27,[2644],{"type":562,"tag":653,"props":2645,"children":2646},{"style":946},[2647],{"type":567,"value":1519},{"type":562,"tag":2649,"props":2650,"children":2651},"style",{},[2652],{"type":567,"value":2653},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":555,"searchDepth":692,"depth":692,"links":2655},[2656,2657],{"id":881,"depth":665,"text":881},{"id":886,"depth":665,"text":886,"children":2658},[2659,2660,2661],{"id":892,"depth":674,"text":892},{"id":1522,"depth":674,"text":1522},{"id":2039,"depth":674,"text":2039},"markdown","content:1.algorithm:3.leetcode:3.major:160.intersection-of-two-linked-lists.md","content","1.algorithm/3.leetcode/3.major/160.intersection-of-two-linked-lists.md","md",[2668,2670],{"_path":186,"title":185,"description":2669},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",{"_path":192,"title":191,"description":2671},"峰值元素是指其值严格大于左右相邻值的元素。",1716810726428]