[{"data":1,"prerenderedAt":2644},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/intersection-of-two-linked-lists":524,"/algorithm/leetcode/major/intersection-of-two-linked-lists-surround":2639},[4,269,298,492,500,509],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":491},"代码考核","/code-assessment",[302,391,484],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,375,382,385,388],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357,360,363,366,369,372],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"原型方法","/code-assessment/source/array/prototype-method",{"title":361,"_path":362},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":364,"_path":365},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":367,"_path":368},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":370,"_path":371},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":373,"_path":374},"二维数组","/code-assessment/source/array/2d-array",{"title":376,"_path":377,"children":378},"字符串 String","/code-assessment/source/string",[379],{"title":380,"_path":381},"repeat()","/code-assessment/source/string/repeat",{"title":383,"_path":384},"获取通用类型","/code-assessment/source/get-generic-type",{"title":386,"_path":387},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":389,"_path":390},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":392,"_path":393,"children":394},"业务场景","/code-assessment/scene",[395,420,430,433,436,439,442,445,448,451,454,457,460,463,466,469,472,475,478,481],{"title":396,"_path":397,"children":398},"Promise","/code-assessment/scene/promise",[399,402,405,408,411,414,417],{"title":400,"_path":401},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":403,"_path":404},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":406,"_path":407},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":409,"_path":410},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":412,"_path":413},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":415,"_path":416},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":418,"_path":419},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":421,"_path":422,"children":423},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[424,427],{"title":425,"_path":426},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":428,"_path":429},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":431,"_path":432},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":434,"_path":435},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":437,"_path":438},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":440,"_path":441},"倒计时","/code-assessment/scene/countdown",{"title":443,"_path":444},"日期格式化","/code-assessment/scene/date-format",{"title":446,"_path":447},"实现前端路由","/code-assessment/scene/frontend-route",{"title":449,"_path":450},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":452,"_path":453},"lodash.get","/code-assessment/scene/lodash-get",{"title":455,"_path":456},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":458,"_path":459},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":461,"_path":462},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":464,"_path":465},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":467,"_path":468},"随机数","/code-assessment/scene/random-number",{"title":470,"_path":471},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":473,"_path":474},"sku 算法实现","/code-assessment/scene/sku",{"title":476,"_path":477},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":479,"_path":480},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":482,"_path":483},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":485,"_path":486,"children":487},"Ts 类型挑战","/code-assessment/type-challeges",[488],{"title":489,"_path":490},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":493,"_path":494,"children":495,"icon":499},"项目","/project",[496],{"title":497,"_path":498},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":501,"_path":502,"children":503,"icon":508},"设计模式","/design-mode",[504,505],{"title":501,"_path":502},{"title":506,"_path":507},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":510,"_path":511,"children":512,"icon":523},"后端语言","/backend-languages",[513],{"title":514,"_path":515,"children":516},"Python","/backend-languages/python",[517,520],{"title":518,"_path":519},"基础","/backend-languages/python/base",{"title":521,"_path":522},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":189,"_dir":525,"_draft":526,"_partial":526,"_locale":527,"title":188,"description":528,"url":529,"body":530,"_type":2634,"_id":2635,"_source":2636,"_file":2637,"_extension":2638},"major",false,"","给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。","https://leetcode.cn/problems/intersection-of-two-linked-lists",{"type":531,"children":532,"toc":2626},"root",[533,540,545,554,559,564,569,574,604,614,680,690,737,742,750,797,802,845,850,856,861,867,1492,1497,2009,2014,2620],{"type":534,"tag":535,"props":536,"children":537},"element","p",{},[538],{"type":539,"value":528},"text",{"type":534,"tag":535,"props":541,"children":542},{},[543],{"type":539,"value":544},"图示两个链表在节点 c1 开始相交：",{"type":534,"tag":535,"props":546,"children":547},{},[548],{"type":534,"tag":549,"props":550,"children":553},"img",{"alt":551,"src":552},"statement","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.160_statement.png",[],{"type":534,"tag":535,"props":555,"children":556},{},[557],{"type":539,"value":558},"题目数据 保证 整个链式结构中不存在环。",{"type":534,"tag":535,"props":560,"children":561},{},[562],{"type":539,"value":563},"注意，函数返回结果后，链表必须 保持其原始结构 。",{"type":534,"tag":535,"props":565,"children":566},{},[567],{"type":539,"value":568},"自定义评测：",{"type":534,"tag":535,"props":570,"children":571},{},[572],{"type":539,"value":573},"评测系统 的输入如下（你设计的程序 不适用 此输入）：",{"type":534,"tag":575,"props":576,"children":577},"ul",{},[578,584,589,594,599],{"type":534,"tag":579,"props":580,"children":581},"li",{},[582],{"type":539,"value":583},"intersectVal - 相交的起始节点的值。如果不存在相交节点，这一值为 0",{"type":534,"tag":579,"props":585,"children":586},{},[587],{"type":539,"value":588},"listA - 第一个链表",{"type":534,"tag":579,"props":590,"children":591},{},[592],{"type":539,"value":593},"listB - 第二个链表",{"type":534,"tag":579,"props":595,"children":596},{},[597],{"type":539,"value":598},"skipA - 在 listA 中（从头节点开始）跳到交叉节点的节点数",{"type":534,"tag":579,"props":600,"children":601},{},[602],{"type":539,"value":603},"skipB - 在 listB 中（从头节点开始）跳到交叉节点的节点数\n评测系统将根据这些输入创建链式数据结构，并将两个头节点 headA 和 headB 传递给你的程序。如果程序能够正确返回相交节点，那么你的解决方案将被 视作正确答案 。",{"type":534,"tag":535,"props":605,"children":606},{},[607,609],{"type":539,"value":608},"示例 1：\n",{"type":534,"tag":549,"props":610,"children":613},{"alt":611,"src":612},"example_1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.160_example_1.png",[],{"type":534,"tag":615,"props":616,"children":619},"pre",{"className":617,"code":618,"language":539,"meta":527,"style":527},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：intersectVal = 8, listA = [4,1,8,4,5], listB = [5,6,1,8,4,5], skipA = 2, skipB = 3\n输出：Intersected at '8'\n解释：相交节点的值为 8 （注意，如果两个链表相交则不能为 0）。\n从各自的表头开始算起，链表 A 为 [4,1,8,4,5]，链表 B 为 [5,6,1,8,4,5]。\n在 A 中，相交节点前有 2 个节点；在 B 中，相交节点前有 3 个节点。\n— 请注意相交节点的值不为 1，因为在链表 A 和链表 B 之中值为 1 的节点 (A 中第二个节点和 B 中第三个节点) 是不同的节点。换句话说，它们在内存中指向两个不同的位置，而链表 A 和链表 B 中值为 8 的节点 (A 中第三个节点，B 中第四个节点) 在内存中指向相同的位置。\n",[620],{"type":534,"tag":621,"props":622,"children":623},"code",{"__ignoreMap":527},[624,635,644,653,662,671],{"type":534,"tag":625,"props":626,"children":629},"span",{"class":627,"line":628},"line",1,[630],{"type":534,"tag":625,"props":631,"children":632},{},[633],{"type":539,"value":634},"输入：intersectVal = 8, listA = [4,1,8,4,5], listB = [5,6,1,8,4,5], skipA = 2, skipB = 3\n",{"type":534,"tag":625,"props":636,"children":638},{"class":627,"line":637},2,[639],{"type":534,"tag":625,"props":640,"children":641},{},[642],{"type":539,"value":643},"输出：Intersected at '8'\n",{"type":534,"tag":625,"props":645,"children":647},{"class":627,"line":646},3,[648],{"type":534,"tag":625,"props":649,"children":650},{},[651],{"type":539,"value":652},"解释：相交节点的值为 8 （注意，如果两个链表相交则不能为 0）。\n",{"type":534,"tag":625,"props":654,"children":656},{"class":627,"line":655},4,[657],{"type":534,"tag":625,"props":658,"children":659},{},[660],{"type":539,"value":661},"从各自的表头开始算起，链表 A 为 [4,1,8,4,5]，链表 B 为 [5,6,1,8,4,5]。\n",{"type":534,"tag":625,"props":663,"children":665},{"class":627,"line":664},5,[666],{"type":534,"tag":625,"props":667,"children":668},{},[669],{"type":539,"value":670},"在 A 中，相交节点前有 2 个节点；在 B 中，相交节点前有 3 个节点。\n",{"type":534,"tag":625,"props":672,"children":674},{"class":627,"line":673},6,[675],{"type":534,"tag":625,"props":676,"children":677},{},[678],{"type":539,"value":679},"— 请注意相交节点的值不为 1，因为在链表 A 和链表 B 之中值为 1 的节点 (A 中第二个节点和 B 中第三个节点) 是不同的节点。换句话说，它们在内存中指向两个不同的位置，而链表 A 和链表 B 中值为 8 的节点 (A 中第三个节点，B 中第四个节点) 在内存中指向相同的位置。\n",{"type":534,"tag":535,"props":681,"children":682},{},[683,685],{"type":539,"value":684},"示例 2：\n",{"type":534,"tag":549,"props":686,"children":689},{"alt":687,"src":688},"example_2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.160_example_2.png",[],{"type":534,"tag":615,"props":691,"children":693},{"className":617,"code":692,"language":539,"meta":527,"style":527},"输入：intersectVal = 2, listA = [1,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1\n输出：Intersected at '2'\n解释：相交节点的值为 2 （注意，如果两个链表相交则不能为 0）。\n从各自的表头开始算起，链表 A 为 [1,9,1,2,4]，链表 B 为 [3,2,4]。\n在 A 中，相交节点前有 3 个节点；在 B 中，相交节点前有 1 个节点。\n",[694],{"type":534,"tag":621,"props":695,"children":696},{"__ignoreMap":527},[697,705,713,721,729],{"type":534,"tag":625,"props":698,"children":699},{"class":627,"line":628},[700],{"type":534,"tag":625,"props":701,"children":702},{},[703],{"type":539,"value":704},"输入：intersectVal = 2, listA = [1,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1\n",{"type":534,"tag":625,"props":706,"children":707},{"class":627,"line":637},[708],{"type":534,"tag":625,"props":709,"children":710},{},[711],{"type":539,"value":712},"输出：Intersected at '2'\n",{"type":534,"tag":625,"props":714,"children":715},{"class":627,"line":646},[716],{"type":534,"tag":625,"props":717,"children":718},{},[719],{"type":539,"value":720},"解释：相交节点的值为 2 （注意，如果两个链表相交则不能为 0）。\n",{"type":534,"tag":625,"props":722,"children":723},{"class":627,"line":655},[724],{"type":534,"tag":625,"props":725,"children":726},{},[727],{"type":539,"value":728},"从各自的表头开始算起，链表 A 为 [1,9,1,2,4]，链表 B 为 [3,2,4]。\n",{"type":534,"tag":625,"props":730,"children":731},{"class":627,"line":664},[732],{"type":534,"tag":625,"props":733,"children":734},{},[735],{"type":539,"value":736},"在 A 中，相交节点前有 3 个节点；在 B 中，相交节点前有 1 个节点。\n",{"type":534,"tag":535,"props":738,"children":739},{},[740],{"type":539,"value":741},"示例 3：",{"type":534,"tag":535,"props":743,"children":744},{},[745],{"type":534,"tag":549,"props":746,"children":749},{"alt":747,"src":748},"example_3","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.160_example_3.png",[],{"type":534,"tag":615,"props":751,"children":753},{"className":617,"code":752,"language":539,"meta":527,"style":527},"输入：intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2\n输出：null\n解释：从各自的表头开始算起，链表 A 为 [2,6,4]，链表 B 为 [1,5]。\n由于这两个链表不相交，所以 intersectVal 必须为 0，而 skipA 和 skipB 可以是任意值。\n这两个链表不相交，因此返回 null 。\n",[754],{"type":534,"tag":621,"props":755,"children":756},{"__ignoreMap":527},[757,765,773,781,789],{"type":534,"tag":625,"props":758,"children":759},{"class":627,"line":628},[760],{"type":534,"tag":625,"props":761,"children":762},{},[763],{"type":539,"value":764},"输入：intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2\n",{"type":534,"tag":625,"props":766,"children":767},{"class":627,"line":637},[768],{"type":534,"tag":625,"props":769,"children":770},{},[771],{"type":539,"value":772},"输出：null\n",{"type":534,"tag":625,"props":774,"children":775},{"class":627,"line":646},[776],{"type":534,"tag":625,"props":777,"children":778},{},[779],{"type":539,"value":780},"解释：从各自的表头开始算起，链表 A 为 [2,6,4]，链表 B 为 [1,5]。\n",{"type":534,"tag":625,"props":782,"children":783},{"class":627,"line":655},[784],{"type":534,"tag":625,"props":785,"children":786},{},[787],{"type":539,"value":788},"由于这两个链表不相交，所以 intersectVal 必须为 0，而 skipA 和 skipB 可以是任意值。\n",{"type":534,"tag":625,"props":790,"children":791},{"class":627,"line":664},[792],{"type":534,"tag":625,"props":793,"children":794},{},[795],{"type":539,"value":796},"这两个链表不相交，因此返回 null 。\n",{"type":534,"tag":535,"props":798,"children":799},{},[800],{"type":539,"value":801},"提示：",{"type":534,"tag":575,"props":803,"children":804},{},[805,810,815,820,825,830,835,840],{"type":534,"tag":579,"props":806,"children":807},{},[808],{"type":539,"value":809},"listA 中节点数目为 m",{"type":534,"tag":579,"props":811,"children":812},{},[813],{"type":539,"value":814},"listB 中节点数目为 n",{"type":534,"tag":579,"props":816,"children":817},{},[818],{"type":539,"value":819},"1 \u003C= m, n \u003C= 3 * 10^4",{"type":534,"tag":579,"props":821,"children":822},{},[823],{"type":539,"value":824},"1 \u003C= Node.val \u003C= 10^5",{"type":534,"tag":579,"props":826,"children":827},{},[828],{"type":539,"value":829},"0 \u003C= skipA \u003C= m",{"type":534,"tag":579,"props":831,"children":832},{},[833],{"type":539,"value":834},"0 \u003C= skipB \u003C= n",{"type":534,"tag":579,"props":836,"children":837},{},[838],{"type":539,"value":839},"如果 listA 和 listB 没有交点，intersectVal 为 0",{"type":534,"tag":579,"props":841,"children":842},{},[843],{"type":539,"value":844},"如果 listA 和 listB 有交点，intersectVal == listA[skipA] == listB[skipB]",{"type":534,"tag":535,"props":846,"children":847},{},[848],{"type":539,"value":849},"进阶：你能否设计一个时间复杂度 O(m + n) 、仅用 O(1) 内存的解决方案？",{"type":534,"tag":851,"props":852,"children":854},"h2",{"id":853},"解题思路",[855],{"type":539,"value":853},{"type":534,"tag":851,"props":857,"children":859},{"id":858},"实现",[860],{"type":539,"value":858},{"type":534,"tag":862,"props":863,"children":865},"h3",{"id":864},"暴力破解",[866],{"type":539,"value":864},{"type":534,"tag":615,"props":868,"children":872},{"className":869,"code":870,"language":871,"meta":527,"style":527},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n */\nfunction ListNode(val) {\n  this.val = val;\n  this.next = null;\n}\n\n/**\n * @param {ListNode} headA\n * @param {ListNode} headB\n * @return {ListNode}\n */\nvar getIntersectionNode = function (headA, headB) {\n  if (!headA || !headB) return null;\n  let pA = headA;\n  while (pA) {\n    let pB = headB;\n    while (pB) {\n      if (pA === pB) return pA;\n      pB = pB.next;\n    }\n    pA = pA.next;\n  }\n  return pA;\n};\n","js",[873],{"type":534,"tag":621,"props":874,"children":875},{"__ignoreMap":527},[876,885,893,901,938,971,1000,1009,1019,1027,1068,1101,1130,1138,1189,1243,1270,1296,1322,1348,1390,1419,1428,1457,1466,1483],{"type":534,"tag":625,"props":877,"children":878},{"class":627,"line":628},[879],{"type":534,"tag":625,"props":880,"children":882},{"style":881},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[883],{"type":539,"value":884},"/**\n",{"type":534,"tag":625,"props":886,"children":887},{"class":627,"line":637},[888],{"type":534,"tag":625,"props":889,"children":890},{"style":881},[891],{"type":539,"value":892}," * Definition for singly-linked list.\n",{"type":534,"tag":625,"props":894,"children":895},{"class":627,"line":646},[896],{"type":534,"tag":625,"props":897,"children":898},{"style":881},[899],{"type":539,"value":900}," */\n",{"type":534,"tag":625,"props":902,"children":903},{"class":627,"line":655},[904,910,916,922,928,933],{"type":534,"tag":625,"props":905,"children":907},{"style":906},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[908],{"type":539,"value":909},"function",{"type":534,"tag":625,"props":911,"children":913},{"style":912},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[914],{"type":539,"value":915}," ListNode",{"type":534,"tag":625,"props":917,"children":919},{"style":918},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[920],{"type":539,"value":921},"(",{"type":534,"tag":625,"props":923,"children":925},{"style":924},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[926],{"type":539,"value":927},"val",{"type":534,"tag":625,"props":929,"children":930},{"style":918},[931],{"type":539,"value":932},")",{"type":534,"tag":625,"props":934,"children":935},{"style":918},[936],{"type":539,"value":937}," {\n",{"type":534,"tag":625,"props":939,"children":940},{"class":627,"line":664},[941,947,952,956,961,966],{"type":534,"tag":625,"props":942,"children":944},{"style":943},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[945],{"type":539,"value":946},"  this",{"type":534,"tag":625,"props":948,"children":949},{"style":918},[950],{"type":539,"value":951},".",{"type":534,"tag":625,"props":953,"children":954},{"style":924},[955],{"type":539,"value":927},{"type":534,"tag":625,"props":957,"children":958},{"style":918},[959],{"type":539,"value":960}," =",{"type":534,"tag":625,"props":962,"children":963},{"style":924},[964],{"type":539,"value":965}," val",{"type":534,"tag":625,"props":967,"children":968},{"style":918},[969],{"type":539,"value":970},";\n",{"type":534,"tag":625,"props":972,"children":973},{"class":627,"line":673},[974,978,982,987,991,996],{"type":534,"tag":625,"props":975,"children":976},{"style":943},[977],{"type":539,"value":946},{"type":534,"tag":625,"props":979,"children":980},{"style":918},[981],{"type":539,"value":951},{"type":534,"tag":625,"props":983,"children":984},{"style":924},[985],{"type":539,"value":986},"next",{"type":534,"tag":625,"props":988,"children":989},{"style":918},[990],{"type":539,"value":960},{"type":534,"tag":625,"props":992,"children":993},{"style":906},[994],{"type":539,"value":995}," null",{"type":534,"tag":625,"props":997,"children":998},{"style":918},[999],{"type":539,"value":970},{"type":534,"tag":625,"props":1001,"children":1003},{"class":627,"line":1002},7,[1004],{"type":534,"tag":625,"props":1005,"children":1006},{"style":918},[1007],{"type":539,"value":1008},"}\n",{"type":534,"tag":625,"props":1010,"children":1012},{"class":627,"line":1011},8,[1013],{"type":534,"tag":625,"props":1014,"children":1016},{"emptyLinePlaceholder":1015},true,[1017],{"type":539,"value":1018},"\n",{"type":534,"tag":625,"props":1020,"children":1022},{"class":627,"line":1021},9,[1023],{"type":534,"tag":625,"props":1024,"children":1025},{"style":881},[1026],{"type":539,"value":884},{"type":534,"tag":625,"props":1028,"children":1030},{"class":627,"line":1029},10,[1031,1036,1041,1047,1052,1058,1063],{"type":534,"tag":625,"props":1032,"children":1033},{"style":881},[1034],{"type":539,"value":1035}," * ",{"type":534,"tag":625,"props":1037,"children":1038},{"style":918},[1039],{"type":539,"value":1040},"@",{"type":534,"tag":625,"props":1042,"children":1044},{"style":1043},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[1045],{"type":539,"value":1046},"param",{"type":534,"tag":625,"props":1048,"children":1049},{"style":918},[1050],{"type":539,"value":1051}," {",{"type":534,"tag":625,"props":1053,"children":1055},{"style":1054},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[1056],{"type":539,"value":1057},"ListNode",{"type":534,"tag":625,"props":1059,"children":1060},{"style":918},[1061],{"type":539,"value":1062},"}",{"type":534,"tag":625,"props":1064,"children":1065},{"style":924},[1066],{"type":539,"value":1067}," headA\n",{"type":534,"tag":625,"props":1069,"children":1071},{"class":627,"line":1070},11,[1072,1076,1080,1084,1088,1092,1096],{"type":534,"tag":625,"props":1073,"children":1074},{"style":881},[1075],{"type":539,"value":1035},{"type":534,"tag":625,"props":1077,"children":1078},{"style":918},[1079],{"type":539,"value":1040},{"type":534,"tag":625,"props":1081,"children":1082},{"style":1043},[1083],{"type":539,"value":1046},{"type":534,"tag":625,"props":1085,"children":1086},{"style":918},[1087],{"type":539,"value":1051},{"type":534,"tag":625,"props":1089,"children":1090},{"style":1054},[1091],{"type":539,"value":1057},{"type":534,"tag":625,"props":1093,"children":1094},{"style":918},[1095],{"type":539,"value":1062},{"type":534,"tag":625,"props":1097,"children":1098},{"style":924},[1099],{"type":539,"value":1100}," headB\n",{"type":534,"tag":625,"props":1102,"children":1104},{"class":627,"line":1103},12,[1105,1109,1113,1118,1122,1126],{"type":534,"tag":625,"props":1106,"children":1107},{"style":881},[1108],{"type":539,"value":1035},{"type":534,"tag":625,"props":1110,"children":1111},{"style":918},[1112],{"type":539,"value":1040},{"type":534,"tag":625,"props":1114,"children":1115},{"style":1043},[1116],{"type":539,"value":1117},"return",{"type":534,"tag":625,"props":1119,"children":1120},{"style":918},[1121],{"type":539,"value":1051},{"type":534,"tag":625,"props":1123,"children":1124},{"style":1054},[1125],{"type":539,"value":1057},{"type":534,"tag":625,"props":1127,"children":1128},{"style":918},[1129],{"type":539,"value":1008},{"type":534,"tag":625,"props":1131,"children":1133},{"class":627,"line":1132},13,[1134],{"type":534,"tag":625,"props":1135,"children":1136},{"style":881},[1137],{"type":539,"value":900},{"type":534,"tag":625,"props":1139,"children":1141},{"class":627,"line":1140},14,[1142,1147,1152,1156,1161,1166,1171,1176,1181,1185],{"type":534,"tag":625,"props":1143,"children":1144},{"style":906},[1145],{"type":539,"value":1146},"var",{"type":534,"tag":625,"props":1148,"children":1149},{"style":912},[1150],{"type":539,"value":1151}," getIntersectionNode",{"type":534,"tag":625,"props":1153,"children":1154},{"style":918},[1155],{"type":539,"value":960},{"type":534,"tag":625,"props":1157,"children":1158},{"style":906},[1159],{"type":539,"value":1160}," function",{"type":534,"tag":625,"props":1162,"children":1163},{"style":918},[1164],{"type":539,"value":1165}," (",{"type":534,"tag":625,"props":1167,"children":1168},{"style":924},[1169],{"type":539,"value":1170},"headA",{"type":534,"tag":625,"props":1172,"children":1173},{"style":918},[1174],{"type":539,"value":1175},",",{"type":534,"tag":625,"props":1177,"children":1178},{"style":924},[1179],{"type":539,"value":1180}," headB",{"type":534,"tag":625,"props":1182,"children":1183},{"style":918},[1184],{"type":539,"value":932},{"type":534,"tag":625,"props":1186,"children":1187},{"style":918},[1188],{"type":539,"value":937},{"type":534,"tag":625,"props":1190,"children":1192},{"class":627,"line":1191},15,[1193,1198,1202,1207,1211,1216,1221,1226,1230,1235,1239],{"type":534,"tag":625,"props":1194,"children":1195},{"style":1043},[1196],{"type":539,"value":1197},"  if",{"type":534,"tag":625,"props":1199,"children":1200},{"style":918},[1201],{"type":539,"value":1165},{"type":534,"tag":625,"props":1203,"children":1204},{"style":906},[1205],{"type":539,"value":1206},"!",{"type":534,"tag":625,"props":1208,"children":1209},{"style":924},[1210],{"type":539,"value":1170},{"type":534,"tag":625,"props":1212,"children":1213},{"style":906},[1214],{"type":539,"value":1215}," ||",{"type":534,"tag":625,"props":1217,"children":1218},{"style":906},[1219],{"type":539,"value":1220}," !",{"type":534,"tag":625,"props":1222,"children":1223},{"style":924},[1224],{"type":539,"value":1225},"headB",{"type":534,"tag":625,"props":1227,"children":1228},{"style":918},[1229],{"type":539,"value":932},{"type":534,"tag":625,"props":1231,"children":1232},{"style":1043},[1233],{"type":539,"value":1234}," return",{"type":534,"tag":625,"props":1236,"children":1237},{"style":906},[1238],{"type":539,"value":995},{"type":534,"tag":625,"props":1240,"children":1241},{"style":918},[1242],{"type":539,"value":970},{"type":534,"tag":625,"props":1244,"children":1246},{"class":627,"line":1245},16,[1247,1252,1257,1261,1266],{"type":534,"tag":625,"props":1248,"children":1249},{"style":906},[1250],{"type":539,"value":1251},"  let",{"type":534,"tag":625,"props":1253,"children":1254},{"style":924},[1255],{"type":539,"value":1256}," pA",{"type":534,"tag":625,"props":1258,"children":1259},{"style":918},[1260],{"type":539,"value":960},{"type":534,"tag":625,"props":1262,"children":1263},{"style":924},[1264],{"type":539,"value":1265}," headA",{"type":534,"tag":625,"props":1267,"children":1268},{"style":918},[1269],{"type":539,"value":970},{"type":534,"tag":625,"props":1271,"children":1273},{"class":627,"line":1272},17,[1274,1279,1283,1288,1292],{"type":534,"tag":625,"props":1275,"children":1276},{"style":1043},[1277],{"type":539,"value":1278},"  while",{"type":534,"tag":625,"props":1280,"children":1281},{"style":918},[1282],{"type":539,"value":1165},{"type":534,"tag":625,"props":1284,"children":1285},{"style":924},[1286],{"type":539,"value":1287},"pA",{"type":534,"tag":625,"props":1289,"children":1290},{"style":918},[1291],{"type":539,"value":932},{"type":534,"tag":625,"props":1293,"children":1294},{"style":918},[1295],{"type":539,"value":937},{"type":534,"tag":625,"props":1297,"children":1299},{"class":627,"line":1298},18,[1300,1305,1310,1314,1318],{"type":534,"tag":625,"props":1301,"children":1302},{"style":906},[1303],{"type":539,"value":1304},"    let",{"type":534,"tag":625,"props":1306,"children":1307},{"style":924},[1308],{"type":539,"value":1309}," pB",{"type":534,"tag":625,"props":1311,"children":1312},{"style":918},[1313],{"type":539,"value":960},{"type":534,"tag":625,"props":1315,"children":1316},{"style":924},[1317],{"type":539,"value":1180},{"type":534,"tag":625,"props":1319,"children":1320},{"style":918},[1321],{"type":539,"value":970},{"type":534,"tag":625,"props":1323,"children":1325},{"class":627,"line":1324},19,[1326,1331,1335,1340,1344],{"type":534,"tag":625,"props":1327,"children":1328},{"style":1043},[1329],{"type":539,"value":1330},"    while",{"type":534,"tag":625,"props":1332,"children":1333},{"style":918},[1334],{"type":539,"value":1165},{"type":534,"tag":625,"props":1336,"children":1337},{"style":924},[1338],{"type":539,"value":1339},"pB",{"type":534,"tag":625,"props":1341,"children":1342},{"style":918},[1343],{"type":539,"value":932},{"type":534,"tag":625,"props":1345,"children":1346},{"style":918},[1347],{"type":539,"value":937},{"type":534,"tag":625,"props":1349,"children":1351},{"class":627,"line":1350},20,[1352,1357,1361,1365,1370,1374,1378,1382,1386],{"type":534,"tag":625,"props":1353,"children":1354},{"style":1043},[1355],{"type":539,"value":1356},"      if",{"type":534,"tag":625,"props":1358,"children":1359},{"style":918},[1360],{"type":539,"value":1165},{"type":534,"tag":625,"props":1362,"children":1363},{"style":924},[1364],{"type":539,"value":1287},{"type":534,"tag":625,"props":1366,"children":1367},{"style":906},[1368],{"type":539,"value":1369}," ===",{"type":534,"tag":625,"props":1371,"children":1372},{"style":924},[1373],{"type":539,"value":1309},{"type":534,"tag":625,"props":1375,"children":1376},{"style":918},[1377],{"type":539,"value":932},{"type":534,"tag":625,"props":1379,"children":1380},{"style":1043},[1381],{"type":539,"value":1234},{"type":534,"tag":625,"props":1383,"children":1384},{"style":924},[1385],{"type":539,"value":1256},{"type":534,"tag":625,"props":1387,"children":1388},{"style":918},[1389],{"type":539,"value":970},{"type":534,"tag":625,"props":1391,"children":1393},{"class":627,"line":1392},21,[1394,1399,1403,1407,1411,1415],{"type":534,"tag":625,"props":1395,"children":1396},{"style":924},[1397],{"type":539,"value":1398},"      pB",{"type":534,"tag":625,"props":1400,"children":1401},{"style":918},[1402],{"type":539,"value":960},{"type":534,"tag":625,"props":1404,"children":1405},{"style":924},[1406],{"type":539,"value":1309},{"type":534,"tag":625,"props":1408,"children":1409},{"style":918},[1410],{"type":539,"value":951},{"type":534,"tag":625,"props":1412,"children":1413},{"style":924},[1414],{"type":539,"value":986},{"type":534,"tag":625,"props":1416,"children":1417},{"style":918},[1418],{"type":539,"value":970},{"type":534,"tag":625,"props":1420,"children":1422},{"class":627,"line":1421},22,[1423],{"type":534,"tag":625,"props":1424,"children":1425},{"style":918},[1426],{"type":539,"value":1427},"    }\n",{"type":534,"tag":625,"props":1429,"children":1431},{"class":627,"line":1430},23,[1432,1437,1441,1445,1449,1453],{"type":534,"tag":625,"props":1433,"children":1434},{"style":924},[1435],{"type":539,"value":1436},"    pA",{"type":534,"tag":625,"props":1438,"children":1439},{"style":918},[1440],{"type":539,"value":960},{"type":534,"tag":625,"props":1442,"children":1443},{"style":924},[1444],{"type":539,"value":1256},{"type":534,"tag":625,"props":1446,"children":1447},{"style":918},[1448],{"type":539,"value":951},{"type":534,"tag":625,"props":1450,"children":1451},{"style":924},[1452],{"type":539,"value":986},{"type":534,"tag":625,"props":1454,"children":1455},{"style":918},[1456],{"type":539,"value":970},{"type":534,"tag":625,"props":1458,"children":1460},{"class":627,"line":1459},24,[1461],{"type":534,"tag":625,"props":1462,"children":1463},{"style":918},[1464],{"type":539,"value":1465},"  }\n",{"type":534,"tag":625,"props":1467,"children":1469},{"class":627,"line":1468},25,[1470,1475,1479],{"type":534,"tag":625,"props":1471,"children":1472},{"style":1043},[1473],{"type":539,"value":1474},"  return",{"type":534,"tag":625,"props":1476,"children":1477},{"style":924},[1478],{"type":539,"value":1256},{"type":534,"tag":625,"props":1480,"children":1481},{"style":918},[1482],{"type":539,"value":970},{"type":534,"tag":625,"props":1484,"children":1486},{"class":627,"line":1485},26,[1487],{"type":534,"tag":625,"props":1488,"children":1489},{"style":918},[1490],{"type":539,"value":1491},"};\n",{"type":534,"tag":862,"props":1493,"children":1495},{"id":1494},"双指针",[1496],{"type":539,"value":1494},{"type":534,"tag":615,"props":1498,"children":1500},{"className":869,"code":1499,"language":871,"meta":527,"style":527},"/**\n * Definition for singly-linked list.\n */\nfunction ListNode(val) {\n  this.val = val;\n  this.next = null;\n}\n\n/**\n * @param {ListNode} headA\n * @param {ListNode} headB\n * @return {ListNode}\n */\nvar getIntersectionNode = function (headA, headB) {\n  if (!headA || !headB) return null;\n  let pA = headA;\n  let pB = headB;\n  while (pA !== pB) {\n    pA = pA ? pA.next : headB;\n    pB = pB ? pB.next : headA;\n  }\n  return pA;\n};\n",[1501],{"type":534,"tag":621,"props":1502,"children":1503},{"__ignoreMap":527},[1504,1511,1518,1525,1552,1579,1606,1613,1620,1627,1658,1689,1716,1723,1766,1813,1836,1859,1891,1936,1980,1987,2002],{"type":534,"tag":625,"props":1505,"children":1506},{"class":627,"line":628},[1507],{"type":534,"tag":625,"props":1508,"children":1509},{"style":881},[1510],{"type":539,"value":884},{"type":534,"tag":625,"props":1512,"children":1513},{"class":627,"line":637},[1514],{"type":534,"tag":625,"props":1515,"children":1516},{"style":881},[1517],{"type":539,"value":892},{"type":534,"tag":625,"props":1519,"children":1520},{"class":627,"line":646},[1521],{"type":534,"tag":625,"props":1522,"children":1523},{"style":881},[1524],{"type":539,"value":900},{"type":534,"tag":625,"props":1526,"children":1527},{"class":627,"line":655},[1528,1532,1536,1540,1544,1548],{"type":534,"tag":625,"props":1529,"children":1530},{"style":906},[1531],{"type":539,"value":909},{"type":534,"tag":625,"props":1533,"children":1534},{"style":912},[1535],{"type":539,"value":915},{"type":534,"tag":625,"props":1537,"children":1538},{"style":918},[1539],{"type":539,"value":921},{"type":534,"tag":625,"props":1541,"children":1542},{"style":924},[1543],{"type":539,"value":927},{"type":534,"tag":625,"props":1545,"children":1546},{"style":918},[1547],{"type":539,"value":932},{"type":534,"tag":625,"props":1549,"children":1550},{"style":918},[1551],{"type":539,"value":937},{"type":534,"tag":625,"props":1553,"children":1554},{"class":627,"line":664},[1555,1559,1563,1567,1571,1575],{"type":534,"tag":625,"props":1556,"children":1557},{"style":943},[1558],{"type":539,"value":946},{"type":534,"tag":625,"props":1560,"children":1561},{"style":918},[1562],{"type":539,"value":951},{"type":534,"tag":625,"props":1564,"children":1565},{"style":924},[1566],{"type":539,"value":927},{"type":534,"tag":625,"props":1568,"children":1569},{"style":918},[1570],{"type":539,"value":960},{"type":534,"tag":625,"props":1572,"children":1573},{"style":924},[1574],{"type":539,"value":965},{"type":534,"tag":625,"props":1576,"children":1577},{"style":918},[1578],{"type":539,"value":970},{"type":534,"tag":625,"props":1580,"children":1581},{"class":627,"line":673},[1582,1586,1590,1594,1598,1602],{"type":534,"tag":625,"props":1583,"children":1584},{"style":943},[1585],{"type":539,"value":946},{"type":534,"tag":625,"props":1587,"children":1588},{"style":918},[1589],{"type":539,"value":951},{"type":534,"tag":625,"props":1591,"children":1592},{"style":924},[1593],{"type":539,"value":986},{"type":534,"tag":625,"props":1595,"children":1596},{"style":918},[1597],{"type":539,"value":960},{"type":534,"tag":625,"props":1599,"children":1600},{"style":906},[1601],{"type":539,"value":995},{"type":534,"tag":625,"props":1603,"children":1604},{"style":918},[1605],{"type":539,"value":970},{"type":534,"tag":625,"props":1607,"children":1608},{"class":627,"line":1002},[1609],{"type":534,"tag":625,"props":1610,"children":1611},{"style":918},[1612],{"type":539,"value":1008},{"type":534,"tag":625,"props":1614,"children":1615},{"class":627,"line":1011},[1616],{"type":534,"tag":625,"props":1617,"children":1618},{"emptyLinePlaceholder":1015},[1619],{"type":539,"value":1018},{"type":534,"tag":625,"props":1621,"children":1622},{"class":627,"line":1021},[1623],{"type":534,"tag":625,"props":1624,"children":1625},{"style":881},[1626],{"type":539,"value":884},{"type":534,"tag":625,"props":1628,"children":1629},{"class":627,"line":1029},[1630,1634,1638,1642,1646,1650,1654],{"type":534,"tag":625,"props":1631,"children":1632},{"style":881},[1633],{"type":539,"value":1035},{"type":534,"tag":625,"props":1635,"children":1636},{"style":918},[1637],{"type":539,"value":1040},{"type":534,"tag":625,"props":1639,"children":1640},{"style":1043},[1641],{"type":539,"value":1046},{"type":534,"tag":625,"props":1643,"children":1644},{"style":918},[1645],{"type":539,"value":1051},{"type":534,"tag":625,"props":1647,"children":1648},{"style":1054},[1649],{"type":539,"value":1057},{"type":534,"tag":625,"props":1651,"children":1652},{"style":918},[1653],{"type":539,"value":1062},{"type":534,"tag":625,"props":1655,"children":1656},{"style":924},[1657],{"type":539,"value":1067},{"type":534,"tag":625,"props":1659,"children":1660},{"class":627,"line":1070},[1661,1665,1669,1673,1677,1681,1685],{"type":534,"tag":625,"props":1662,"children":1663},{"style":881},[1664],{"type":539,"value":1035},{"type":534,"tag":625,"props":1666,"children":1667},{"style":918},[1668],{"type":539,"value":1040},{"type":534,"tag":625,"props":1670,"children":1671},{"style":1043},[1672],{"type":539,"value":1046},{"type":534,"tag":625,"props":1674,"children":1675},{"style":918},[1676],{"type":539,"value":1051},{"type":534,"tag":625,"props":1678,"children":1679},{"style":1054},[1680],{"type":539,"value":1057},{"type":534,"tag":625,"props":1682,"children":1683},{"style":918},[1684],{"type":539,"value":1062},{"type":534,"tag":625,"props":1686,"children":1687},{"style":924},[1688],{"type":539,"value":1100},{"type":534,"tag":625,"props":1690,"children":1691},{"class":627,"line":1103},[1692,1696,1700,1704,1708,1712],{"type":534,"tag":625,"props":1693,"children":1694},{"style":881},[1695],{"type":539,"value":1035},{"type":534,"tag":625,"props":1697,"children":1698},{"style":918},[1699],{"type":539,"value":1040},{"type":534,"tag":625,"props":1701,"children":1702},{"style":1043},[1703],{"type":539,"value":1117},{"type":534,"tag":625,"props":1705,"children":1706},{"style":918},[1707],{"type":539,"value":1051},{"type":534,"tag":625,"props":1709,"children":1710},{"style":1054},[1711],{"type":539,"value":1057},{"type":534,"tag":625,"props":1713,"children":1714},{"style":918},[1715],{"type":539,"value":1008},{"type":534,"tag":625,"props":1717,"children":1718},{"class":627,"line":1132},[1719],{"type":534,"tag":625,"props":1720,"children":1721},{"style":881},[1722],{"type":539,"value":900},{"type":534,"tag":625,"props":1724,"children":1725},{"class":627,"line":1140},[1726,1730,1734,1738,1742,1746,1750,1754,1758,1762],{"type":534,"tag":625,"props":1727,"children":1728},{"style":906},[1729],{"type":539,"value":1146},{"type":534,"tag":625,"props":1731,"children":1732},{"style":912},[1733],{"type":539,"value":1151},{"type":534,"tag":625,"props":1735,"children":1736},{"style":918},[1737],{"type":539,"value":960},{"type":534,"tag":625,"props":1739,"children":1740},{"style":906},[1741],{"type":539,"value":1160},{"type":534,"tag":625,"props":1743,"children":1744},{"style":918},[1745],{"type":539,"value":1165},{"type":534,"tag":625,"props":1747,"children":1748},{"style":924},[1749],{"type":539,"value":1170},{"type":534,"tag":625,"props":1751,"children":1752},{"style":918},[1753],{"type":539,"value":1175},{"type":534,"tag":625,"props":1755,"children":1756},{"style":924},[1757],{"type":539,"value":1180},{"type":534,"tag":625,"props":1759,"children":1760},{"style":918},[1761],{"type":539,"value":932},{"type":534,"tag":625,"props":1763,"children":1764},{"style":918},[1765],{"type":539,"value":937},{"type":534,"tag":625,"props":1767,"children":1768},{"class":627,"line":1191},[1769,1773,1777,1781,1785,1789,1793,1797,1801,1805,1809],{"type":534,"tag":625,"props":1770,"children":1771},{"style":1043},[1772],{"type":539,"value":1197},{"type":534,"tag":625,"props":1774,"children":1775},{"style":918},[1776],{"type":539,"value":1165},{"type":534,"tag":625,"props":1778,"children":1779},{"style":906},[1780],{"type":539,"value":1206},{"type":534,"tag":625,"props":1782,"children":1783},{"style":924},[1784],{"type":539,"value":1170},{"type":534,"tag":625,"props":1786,"children":1787},{"style":906},[1788],{"type":539,"value":1215},{"type":534,"tag":625,"props":1790,"children":1791},{"style":906},[1792],{"type":539,"value":1220},{"type":534,"tag":625,"props":1794,"children":1795},{"style":924},[1796],{"type":539,"value":1225},{"type":534,"tag":625,"props":1798,"children":1799},{"style":918},[1800],{"type":539,"value":932},{"type":534,"tag":625,"props":1802,"children":1803},{"style":1043},[1804],{"type":539,"value":1234},{"type":534,"tag":625,"props":1806,"children":1807},{"style":906},[1808],{"type":539,"value":995},{"type":534,"tag":625,"props":1810,"children":1811},{"style":918},[1812],{"type":539,"value":970},{"type":534,"tag":625,"props":1814,"children":1815},{"class":627,"line":1245},[1816,1820,1824,1828,1832],{"type":534,"tag":625,"props":1817,"children":1818},{"style":906},[1819],{"type":539,"value":1251},{"type":534,"tag":625,"props":1821,"children":1822},{"style":924},[1823],{"type":539,"value":1256},{"type":534,"tag":625,"props":1825,"children":1826},{"style":918},[1827],{"type":539,"value":960},{"type":534,"tag":625,"props":1829,"children":1830},{"style":924},[1831],{"type":539,"value":1265},{"type":534,"tag":625,"props":1833,"children":1834},{"style":918},[1835],{"type":539,"value":970},{"type":534,"tag":625,"props":1837,"children":1838},{"class":627,"line":1272},[1839,1843,1847,1851,1855],{"type":534,"tag":625,"props":1840,"children":1841},{"style":906},[1842],{"type":539,"value":1251},{"type":534,"tag":625,"props":1844,"children":1845},{"style":924},[1846],{"type":539,"value":1309},{"type":534,"tag":625,"props":1848,"children":1849},{"style":918},[1850],{"type":539,"value":960},{"type":534,"tag":625,"props":1852,"children":1853},{"style":924},[1854],{"type":539,"value":1180},{"type":534,"tag":625,"props":1856,"children":1857},{"style":918},[1858],{"type":539,"value":970},{"type":534,"tag":625,"props":1860,"children":1861},{"class":627,"line":1298},[1862,1866,1870,1874,1879,1883,1887],{"type":534,"tag":625,"props":1863,"children":1864},{"style":1043},[1865],{"type":539,"value":1278},{"type":534,"tag":625,"props":1867,"children":1868},{"style":918},[1869],{"type":539,"value":1165},{"type":534,"tag":625,"props":1871,"children":1872},{"style":924},[1873],{"type":539,"value":1287},{"type":534,"tag":625,"props":1875,"children":1876},{"style":906},[1877],{"type":539,"value":1878}," !==",{"type":534,"tag":625,"props":1880,"children":1881},{"style":924},[1882],{"type":539,"value":1309},{"type":534,"tag":625,"props":1884,"children":1885},{"style":918},[1886],{"type":539,"value":932},{"type":534,"tag":625,"props":1888,"children":1889},{"style":918},[1890],{"type":539,"value":937},{"type":534,"tag":625,"props":1892,"children":1893},{"class":627,"line":1324},[1894,1898,1902,1906,1911,1915,1919,1923,1928,1932],{"type":534,"tag":625,"props":1895,"children":1896},{"style":924},[1897],{"type":539,"value":1436},{"type":534,"tag":625,"props":1899,"children":1900},{"style":918},[1901],{"type":539,"value":960},{"type":534,"tag":625,"props":1903,"children":1904},{"style":924},[1905],{"type":539,"value":1256},{"type":534,"tag":625,"props":1907,"children":1908},{"style":906},[1909],{"type":539,"value":1910}," ?",{"type":534,"tag":625,"props":1912,"children":1913},{"style":924},[1914],{"type":539,"value":1256},{"type":534,"tag":625,"props":1916,"children":1917},{"style":918},[1918],{"type":539,"value":951},{"type":534,"tag":625,"props":1920,"children":1921},{"style":924},[1922],{"type":539,"value":986},{"type":534,"tag":625,"props":1924,"children":1925},{"style":906},[1926],{"type":539,"value":1927}," :",{"type":534,"tag":625,"props":1929,"children":1930},{"style":924},[1931],{"type":539,"value":1180},{"type":534,"tag":625,"props":1933,"children":1934},{"style":918},[1935],{"type":539,"value":970},{"type":534,"tag":625,"props":1937,"children":1938},{"class":627,"line":1350},[1939,1944,1948,1952,1956,1960,1964,1968,1972,1976],{"type":534,"tag":625,"props":1940,"children":1941},{"style":924},[1942],{"type":539,"value":1943},"    pB",{"type":534,"tag":625,"props":1945,"children":1946},{"style":918},[1947],{"type":539,"value":960},{"type":534,"tag":625,"props":1949,"children":1950},{"style":924},[1951],{"type":539,"value":1309},{"type":534,"tag":625,"props":1953,"children":1954},{"style":906},[1955],{"type":539,"value":1910},{"type":534,"tag":625,"props":1957,"children":1958},{"style":924},[1959],{"type":539,"value":1309},{"type":534,"tag":625,"props":1961,"children":1962},{"style":918},[1963],{"type":539,"value":951},{"type":534,"tag":625,"props":1965,"children":1966},{"style":924},[1967],{"type":539,"value":986},{"type":534,"tag":625,"props":1969,"children":1970},{"style":906},[1971],{"type":539,"value":1927},{"type":534,"tag":625,"props":1973,"children":1974},{"style":924},[1975],{"type":539,"value":1265},{"type":534,"tag":625,"props":1977,"children":1978},{"style":918},[1979],{"type":539,"value":970},{"type":534,"tag":625,"props":1981,"children":1982},{"class":627,"line":1392},[1983],{"type":534,"tag":625,"props":1984,"children":1985},{"style":918},[1986],{"type":539,"value":1465},{"type":534,"tag":625,"props":1988,"children":1989},{"class":627,"line":1421},[1990,1994,1998],{"type":534,"tag":625,"props":1991,"children":1992},{"style":1043},[1993],{"type":539,"value":1474},{"type":534,"tag":625,"props":1995,"children":1996},{"style":924},[1997],{"type":539,"value":1256},{"type":534,"tag":625,"props":1999,"children":2000},{"style":918},[2001],{"type":539,"value":970},{"type":534,"tag":625,"props":2003,"children":2004},{"class":627,"line":1430},[2005],{"type":534,"tag":625,"props":2006,"children":2007},{"style":918},[2008],{"type":539,"value":1491},{"type":534,"tag":862,"props":2010,"children":2012},{"id":2011},"哈希法",[2013],{"type":539,"value":2011},{"type":534,"tag":615,"props":2015,"children":2017},{"className":869,"code":2016,"language":871,"meta":527,"style":527},"/**\n * Definition for singly-linked list.\n */\nfunction ListNode(val) {\n  this.val = val;\n  this.next = null;\n}\n\n/**\n * @param {ListNode} headA\n * @param {ListNode} headB\n * @return {ListNode}\n */\nvar getIntersectionNode = function (headA, headB) {\n  if (!headA || !headB) return null;\n  let map = new Map();\n  let pA = headA;\n  let pB = headB;\n  while (pA) {\n    map.set(pA, 1);\n    pA = pA.next;\n  }\n  while (pB) {\n    if (map.has(pB)) return pB;\n    pB = pB.next;\n  }\n};\n",[2018],{"type":534,"tag":621,"props":2019,"children":2020},{"__ignoreMap":527},[2021,2028,2035,2042,2069,2096,2123,2130,2137,2144,2175,2206,2233,2240,2283,2330,2361,2384,2407,2430,2470,2497,2504,2527,2578,2605,2612],{"type":534,"tag":625,"props":2022,"children":2023},{"class":627,"line":628},[2024],{"type":534,"tag":625,"props":2025,"children":2026},{"style":881},[2027],{"type":539,"value":884},{"type":534,"tag":625,"props":2029,"children":2030},{"class":627,"line":637},[2031],{"type":534,"tag":625,"props":2032,"children":2033},{"style":881},[2034],{"type":539,"value":892},{"type":534,"tag":625,"props":2036,"children":2037},{"class":627,"line":646},[2038],{"type":534,"tag":625,"props":2039,"children":2040},{"style":881},[2041],{"type":539,"value":900},{"type":534,"tag":625,"props":2043,"children":2044},{"class":627,"line":655},[2045,2049,2053,2057,2061,2065],{"type":534,"tag":625,"props":2046,"children":2047},{"style":906},[2048],{"type":539,"value":909},{"type":534,"tag":625,"props":2050,"children":2051},{"style":912},[2052],{"type":539,"value":915},{"type":534,"tag":625,"props":2054,"children":2055},{"style":918},[2056],{"type":539,"value":921},{"type":534,"tag":625,"props":2058,"children":2059},{"style":924},[2060],{"type":539,"value":927},{"type":534,"tag":625,"props":2062,"children":2063},{"style":918},[2064],{"type":539,"value":932},{"type":534,"tag":625,"props":2066,"children":2067},{"style":918},[2068],{"type":539,"value":937},{"type":534,"tag":625,"props":2070,"children":2071},{"class":627,"line":664},[2072,2076,2080,2084,2088,2092],{"type":534,"tag":625,"props":2073,"children":2074},{"style":943},[2075],{"type":539,"value":946},{"type":534,"tag":625,"props":2077,"children":2078},{"style":918},[2079],{"type":539,"value":951},{"type":534,"tag":625,"props":2081,"children":2082},{"style":924},[2083],{"type":539,"value":927},{"type":534,"tag":625,"props":2085,"children":2086},{"style":918},[2087],{"type":539,"value":960},{"type":534,"tag":625,"props":2089,"children":2090},{"style":924},[2091],{"type":539,"value":965},{"type":534,"tag":625,"props":2093,"children":2094},{"style":918},[2095],{"type":539,"value":970},{"type":534,"tag":625,"props":2097,"children":2098},{"class":627,"line":673},[2099,2103,2107,2111,2115,2119],{"type":534,"tag":625,"props":2100,"children":2101},{"style":943},[2102],{"type":539,"value":946},{"type":534,"tag":625,"props":2104,"children":2105},{"style":918},[2106],{"type":539,"value":951},{"type":534,"tag":625,"props":2108,"children":2109},{"style":924},[2110],{"type":539,"value":986},{"type":534,"tag":625,"props":2112,"children":2113},{"style":918},[2114],{"type":539,"value":960},{"type":534,"tag":625,"props":2116,"children":2117},{"style":906},[2118],{"type":539,"value":995},{"type":534,"tag":625,"props":2120,"children":2121},{"style":918},[2122],{"type":539,"value":970},{"type":534,"tag":625,"props":2124,"children":2125},{"class":627,"line":1002},[2126],{"type":534,"tag":625,"props":2127,"children":2128},{"style":918},[2129],{"type":539,"value":1008},{"type":534,"tag":625,"props":2131,"children":2132},{"class":627,"line":1011},[2133],{"type":534,"tag":625,"props":2134,"children":2135},{"emptyLinePlaceholder":1015},[2136],{"type":539,"value":1018},{"type":534,"tag":625,"props":2138,"children":2139},{"class":627,"line":1021},[2140],{"type":534,"tag":625,"props":2141,"children":2142},{"style":881},[2143],{"type":539,"value":884},{"type":534,"tag":625,"props":2145,"children":2146},{"class":627,"line":1029},[2147,2151,2155,2159,2163,2167,2171],{"type":534,"tag":625,"props":2148,"children":2149},{"style":881},[2150],{"type":539,"value":1035},{"type":534,"tag":625,"props":2152,"children":2153},{"style":918},[2154],{"type":539,"value":1040},{"type":534,"tag":625,"props":2156,"children":2157},{"style":1043},[2158],{"type":539,"value":1046},{"type":534,"tag":625,"props":2160,"children":2161},{"style":918},[2162],{"type":539,"value":1051},{"type":534,"tag":625,"props":2164,"children":2165},{"style":1054},[2166],{"type":539,"value":1057},{"type":534,"tag":625,"props":2168,"children":2169},{"style":918},[2170],{"type":539,"value":1062},{"type":534,"tag":625,"props":2172,"children":2173},{"style":924},[2174],{"type":539,"value":1067},{"type":534,"tag":625,"props":2176,"children":2177},{"class":627,"line":1070},[2178,2182,2186,2190,2194,2198,2202],{"type":534,"tag":625,"props":2179,"children":2180},{"style":881},[2181],{"type":539,"value":1035},{"type":534,"tag":625,"props":2183,"children":2184},{"style":918},[2185],{"type":539,"value":1040},{"type":534,"tag":625,"props":2187,"children":2188},{"style":1043},[2189],{"type":539,"value":1046},{"type":534,"tag":625,"props":2191,"children":2192},{"style":918},[2193],{"type":539,"value":1051},{"type":534,"tag":625,"props":2195,"children":2196},{"style":1054},[2197],{"type":539,"value":1057},{"type":534,"tag":625,"props":2199,"children":2200},{"style":918},[2201],{"type":539,"value":1062},{"type":534,"tag":625,"props":2203,"children":2204},{"style":924},[2205],{"type":539,"value":1100},{"type":534,"tag":625,"props":2207,"children":2208},{"class":627,"line":1103},[2209,2213,2217,2221,2225,2229],{"type":534,"tag":625,"props":2210,"children":2211},{"style":881},[2212],{"type":539,"value":1035},{"type":534,"tag":625,"props":2214,"children":2215},{"style":918},[2216],{"type":539,"value":1040},{"type":534,"tag":625,"props":2218,"children":2219},{"style":1043},[2220],{"type":539,"value":1117},{"type":534,"tag":625,"props":2222,"children":2223},{"style":918},[2224],{"type":539,"value":1051},{"type":534,"tag":625,"props":2226,"children":2227},{"style":1054},[2228],{"type":539,"value":1057},{"type":534,"tag":625,"props":2230,"children":2231},{"style":918},[2232],{"type":539,"value":1008},{"type":534,"tag":625,"props":2234,"children":2235},{"class":627,"line":1132},[2236],{"type":534,"tag":625,"props":2237,"children":2238},{"style":881},[2239],{"type":539,"value":900},{"type":534,"tag":625,"props":2241,"children":2242},{"class":627,"line":1140},[2243,2247,2251,2255,2259,2263,2267,2271,2275,2279],{"type":534,"tag":625,"props":2244,"children":2245},{"style":906},[2246],{"type":539,"value":1146},{"type":534,"tag":625,"props":2248,"children":2249},{"style":912},[2250],{"type":539,"value":1151},{"type":534,"tag":625,"props":2252,"children":2253},{"style":918},[2254],{"type":539,"value":960},{"type":534,"tag":625,"props":2256,"children":2257},{"style":906},[2258],{"type":539,"value":1160},{"type":534,"tag":625,"props":2260,"children":2261},{"style":918},[2262],{"type":539,"value":1165},{"type":534,"tag":625,"props":2264,"children":2265},{"style":924},[2266],{"type":539,"value":1170},{"type":534,"tag":625,"props":2268,"children":2269},{"style":918},[2270],{"type":539,"value":1175},{"type":534,"tag":625,"props":2272,"children":2273},{"style":924},[2274],{"type":539,"value":1180},{"type":534,"tag":625,"props":2276,"children":2277},{"style":918},[2278],{"type":539,"value":932},{"type":534,"tag":625,"props":2280,"children":2281},{"style":918},[2282],{"type":539,"value":937},{"type":534,"tag":625,"props":2284,"children":2285},{"class":627,"line":1191},[2286,2290,2294,2298,2302,2306,2310,2314,2318,2322,2326],{"type":534,"tag":625,"props":2287,"children":2288},{"style":1043},[2289],{"type":539,"value":1197},{"type":534,"tag":625,"props":2291,"children":2292},{"style":918},[2293],{"type":539,"value":1165},{"type":534,"tag":625,"props":2295,"children":2296},{"style":906},[2297],{"type":539,"value":1206},{"type":534,"tag":625,"props":2299,"children":2300},{"style":924},[2301],{"type":539,"value":1170},{"type":534,"tag":625,"props":2303,"children":2304},{"style":906},[2305],{"type":539,"value":1215},{"type":534,"tag":625,"props":2307,"children":2308},{"style":906},[2309],{"type":539,"value":1220},{"type":534,"tag":625,"props":2311,"children":2312},{"style":924},[2313],{"type":539,"value":1225},{"type":534,"tag":625,"props":2315,"children":2316},{"style":918},[2317],{"type":539,"value":932},{"type":534,"tag":625,"props":2319,"children":2320},{"style":1043},[2321],{"type":539,"value":1234},{"type":534,"tag":625,"props":2323,"children":2324},{"style":906},[2325],{"type":539,"value":995},{"type":534,"tag":625,"props":2327,"children":2328},{"style":918},[2329],{"type":539,"value":970},{"type":534,"tag":625,"props":2331,"children":2332},{"class":627,"line":1245},[2333,2337,2342,2346,2351,2356],{"type":534,"tag":625,"props":2334,"children":2335},{"style":906},[2336],{"type":539,"value":1251},{"type":534,"tag":625,"props":2338,"children":2339},{"style":924},[2340],{"type":539,"value":2341}," map",{"type":534,"tag":625,"props":2343,"children":2344},{"style":918},[2345],{"type":539,"value":960},{"type":534,"tag":625,"props":2347,"children":2348},{"style":906},[2349],{"type":539,"value":2350}," new",{"type":534,"tag":625,"props":2352,"children":2353},{"style":912},[2354],{"type":539,"value":2355}," Map",{"type":534,"tag":625,"props":2357,"children":2358},{"style":918},[2359],{"type":539,"value":2360},"();\n",{"type":534,"tag":625,"props":2362,"children":2363},{"class":627,"line":1272},[2364,2368,2372,2376,2380],{"type":534,"tag":625,"props":2365,"children":2366},{"style":906},[2367],{"type":539,"value":1251},{"type":534,"tag":625,"props":2369,"children":2370},{"style":924},[2371],{"type":539,"value":1256},{"type":534,"tag":625,"props":2373,"children":2374},{"style":918},[2375],{"type":539,"value":960},{"type":534,"tag":625,"props":2377,"children":2378},{"style":924},[2379],{"type":539,"value":1265},{"type":534,"tag":625,"props":2381,"children":2382},{"style":918},[2383],{"type":539,"value":970},{"type":534,"tag":625,"props":2385,"children":2386},{"class":627,"line":1298},[2387,2391,2395,2399,2403],{"type":534,"tag":625,"props":2388,"children":2389},{"style":906},[2390],{"type":539,"value":1251},{"type":534,"tag":625,"props":2392,"children":2393},{"style":924},[2394],{"type":539,"value":1309},{"type":534,"tag":625,"props":2396,"children":2397},{"style":918},[2398],{"type":539,"value":960},{"type":534,"tag":625,"props":2400,"children":2401},{"style":924},[2402],{"type":539,"value":1180},{"type":534,"tag":625,"props":2404,"children":2405},{"style":918},[2406],{"type":539,"value":970},{"type":534,"tag":625,"props":2408,"children":2409},{"class":627,"line":1324},[2410,2414,2418,2422,2426],{"type":534,"tag":625,"props":2411,"children":2412},{"style":1043},[2413],{"type":539,"value":1278},{"type":534,"tag":625,"props":2415,"children":2416},{"style":918},[2417],{"type":539,"value":1165},{"type":534,"tag":625,"props":2419,"children":2420},{"style":924},[2421],{"type":539,"value":1287},{"type":534,"tag":625,"props":2423,"children":2424},{"style":918},[2425],{"type":539,"value":932},{"type":534,"tag":625,"props":2427,"children":2428},{"style":918},[2429],{"type":539,"value":937},{"type":534,"tag":625,"props":2431,"children":2432},{"class":627,"line":1350},[2433,2438,2442,2447,2451,2455,2459,2465],{"type":534,"tag":625,"props":2434,"children":2435},{"style":924},[2436],{"type":539,"value":2437},"    map",{"type":534,"tag":625,"props":2439,"children":2440},{"style":918},[2441],{"type":539,"value":951},{"type":534,"tag":625,"props":2443,"children":2444},{"style":912},[2445],{"type":539,"value":2446},"set",{"type":534,"tag":625,"props":2448,"children":2449},{"style":918},[2450],{"type":539,"value":921},{"type":534,"tag":625,"props":2452,"children":2453},{"style":924},[2454],{"type":539,"value":1287},{"type":534,"tag":625,"props":2456,"children":2457},{"style":918},[2458],{"type":539,"value":1175},{"type":534,"tag":625,"props":2460,"children":2462},{"style":2461},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[2463],{"type":539,"value":2464}," 1",{"type":534,"tag":625,"props":2466,"children":2467},{"style":918},[2468],{"type":539,"value":2469},");\n",{"type":534,"tag":625,"props":2471,"children":2472},{"class":627,"line":1392},[2473,2477,2481,2485,2489,2493],{"type":534,"tag":625,"props":2474,"children":2475},{"style":924},[2476],{"type":539,"value":1436},{"type":534,"tag":625,"props":2478,"children":2479},{"style":918},[2480],{"type":539,"value":960},{"type":534,"tag":625,"props":2482,"children":2483},{"style":924},[2484],{"type":539,"value":1256},{"type":534,"tag":625,"props":2486,"children":2487},{"style":918},[2488],{"type":539,"value":951},{"type":534,"tag":625,"props":2490,"children":2491},{"style":924},[2492],{"type":539,"value":986},{"type":534,"tag":625,"props":2494,"children":2495},{"style":918},[2496],{"type":539,"value":970},{"type":534,"tag":625,"props":2498,"children":2499},{"class":627,"line":1421},[2500],{"type":534,"tag":625,"props":2501,"children":2502},{"style":918},[2503],{"type":539,"value":1465},{"type":534,"tag":625,"props":2505,"children":2506},{"class":627,"line":1430},[2507,2511,2515,2519,2523],{"type":534,"tag":625,"props":2508,"children":2509},{"style":1043},[2510],{"type":539,"value":1278},{"type":534,"tag":625,"props":2512,"children":2513},{"style":918},[2514],{"type":539,"value":1165},{"type":534,"tag":625,"props":2516,"children":2517},{"style":924},[2518],{"type":539,"value":1339},{"type":534,"tag":625,"props":2520,"children":2521},{"style":918},[2522],{"type":539,"value":932},{"type":534,"tag":625,"props":2524,"children":2525},{"style":918},[2526],{"type":539,"value":937},{"type":534,"tag":625,"props":2528,"children":2529},{"class":627,"line":1459},[2530,2535,2539,2544,2548,2553,2557,2561,2566,2570,2574],{"type":534,"tag":625,"props":2531,"children":2532},{"style":1043},[2533],{"type":539,"value":2534},"    if",{"type":534,"tag":625,"props":2536,"children":2537},{"style":918},[2538],{"type":539,"value":1165},{"type":534,"tag":625,"props":2540,"children":2541},{"style":924},[2542],{"type":539,"value":2543},"map",{"type":534,"tag":625,"props":2545,"children":2546},{"style":918},[2547],{"type":539,"value":951},{"type":534,"tag":625,"props":2549,"children":2550},{"style":912},[2551],{"type":539,"value":2552},"has",{"type":534,"tag":625,"props":2554,"children":2555},{"style":918},[2556],{"type":539,"value":921},{"type":534,"tag":625,"props":2558,"children":2559},{"style":924},[2560],{"type":539,"value":1339},{"type":534,"tag":625,"props":2562,"children":2563},{"style":918},[2564],{"type":539,"value":2565},"))",{"type":534,"tag":625,"props":2567,"children":2568},{"style":1043},[2569],{"type":539,"value":1234},{"type":534,"tag":625,"props":2571,"children":2572},{"style":924},[2573],{"type":539,"value":1309},{"type":534,"tag":625,"props":2575,"children":2576},{"style":918},[2577],{"type":539,"value":970},{"type":534,"tag":625,"props":2579,"children":2580},{"class":627,"line":1468},[2581,2585,2589,2593,2597,2601],{"type":534,"tag":625,"props":2582,"children":2583},{"style":924},[2584],{"type":539,"value":1943},{"type":534,"tag":625,"props":2586,"children":2587},{"style":918},[2588],{"type":539,"value":960},{"type":534,"tag":625,"props":2590,"children":2591},{"style":924},[2592],{"type":539,"value":1309},{"type":534,"tag":625,"props":2594,"children":2595},{"style":918},[2596],{"type":539,"value":951},{"type":534,"tag":625,"props":2598,"children":2599},{"style":924},[2600],{"type":539,"value":986},{"type":534,"tag":625,"props":2602,"children":2603},{"style":918},[2604],{"type":539,"value":970},{"type":534,"tag":625,"props":2606,"children":2607},{"class":627,"line":1485},[2608],{"type":534,"tag":625,"props":2609,"children":2610},{"style":918},[2611],{"type":539,"value":1465},{"type":534,"tag":625,"props":2613,"children":2615},{"class":627,"line":2614},27,[2616],{"type":534,"tag":625,"props":2617,"children":2618},{"style":918},[2619],{"type":539,"value":1491},{"type":534,"tag":2621,"props":2622,"children":2623},"style",{},[2624],{"type":539,"value":2625},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":527,"searchDepth":664,"depth":664,"links":2627},[2628,2629],{"id":853,"depth":637,"text":853},{"id":858,"depth":637,"text":858,"children":2630},[2631,2632,2633],{"id":864,"depth":646,"text":864},{"id":1494,"depth":646,"text":1494},{"id":2011,"depth":646,"text":2011},"markdown","content:1.algorithm:3.leetcode:3.major:160.intersection-of-two-linked-lists.md","content","1.algorithm/3.leetcode/3.major/160.intersection-of-two-linked-lists.md","md",[2640,2642],{"_path":186,"title":185,"description":2641},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",{"_path":192,"title":191,"description":2643},"峰值元素是指其值严格大于左右相邻值的元素。",1714096144259]