[{"data":1,"prerenderedAt":2671},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/intersection-of-two-linked-lists":551,"/algorithm/leetcode/major/intersection-of-two-linked-lists-surround":2666},[4,272,301,519,527,536],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":518},"代码考核","/code-assessment",[305,410,511],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,343,359,387,394,401,404,407],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337,340],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342},"Promise","/code-assessment/source/native-api/promise",{"title":344,"_path":345,"children":346},"函数 Function","/code-assessment/source/function",[347,350,353,356],{"title":348,"_path":349},"函数防抖","/code-assessment/source/function/debounce",{"title":351,"_path":352},"函数节流","/code-assessment/source/function/throttle",{"title":354,"_path":355},"函数柯理化","/code-assessment/source/function/curry",{"title":357,"_path":358},"函数睡眠","/code-assessment/source/function/sleep",{"title":360,"_path":361,"children":362},"数组 Array","/code-assessment/source/array",[363,366,369,372,375,378,381,384],{"title":364,"_path":365},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":367,"_path":368},"数组扁平化","/code-assessment/source/array/flat",{"title":370,"_path":371},"原型方法","/code-assessment/source/array/prototype-method",{"title":373,"_path":374},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":376,"_path":377},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":379,"_path":380},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":382,"_path":383},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":385,"_path":386},"二维数组","/code-assessment/source/array/2d-array",{"title":388,"_path":389,"children":390},"字符串 String","/code-assessment/source/string",[391],{"title":392,"_path":393},"repeat()","/code-assessment/source/string/repeat",{"title":395,"_path":396,"children":397},"集合 Set","/code-assessment/source/set",[398],{"title":399,"_path":400},"遍历集合","/code-assessment/source/set/traverse",{"title":402,"_path":403},"获取通用类型","/code-assessment/source/get-generic-type",{"title":405,"_path":406},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":408,"_path":409},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":411,"_path":412,"children":413},"业务场景","/code-assessment/scene",[414,444,454,457,460,463,466,469,472,475,478,481,484,487,490,493,496,499,502,505,508],{"title":341,"_path":415,"children":416},"/code-assessment/scene/promise",[417,420,423,426,429,432,435,438,441],{"title":418,"_path":419},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":421,"_path":422},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":424,"_path":425},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":427,"_path":428},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":430,"_path":431},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":433,"_path":434},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":436,"_path":437},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":439,"_path":440},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":442,"_path":443},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":445,"_path":446,"children":447},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[448,451],{"title":449,"_path":450},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":452,"_path":453},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":455,"_path":456},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":458,"_path":459},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":461,"_path":462},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":464,"_path":465},"倒计时","/code-assessment/scene/countdown",{"title":467,"_path":468},"日期格式化","/code-assessment/scene/date-format",{"title":470,"_path":471},"实现前端路由","/code-assessment/scene/frontend-route",{"title":473,"_path":474},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":476,"_path":477},"lodash.get","/code-assessment/scene/lodash-get",{"title":479,"_path":480},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":482,"_path":483},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":485,"_path":486},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":488,"_path":489},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":491,"_path":492},"随机数","/code-assessment/scene/random-number",{"title":494,"_path":495},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":497,"_path":498},"sku 算法实现","/code-assessment/scene/sku",{"title":500,"_path":501},"整数分割","/code-assessment/scene/split-number",{"title":503,"_path":504},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":506,"_path":507},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":509,"_path":510},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":512,"_path":513,"children":514},"Ts 类型挑战","/code-assessment/type-challeges",[515],{"title":516,"_path":517},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":520,"_path":521,"children":522,"icon":526},"项目","/project",[523],{"title":524,"_path":525},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":528,"_path":529,"children":530,"icon":535},"设计模式","/design-mode",[531,532],{"title":528,"_path":529},{"title":533,"_path":534},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":537,"_path":538,"children":539,"icon":550},"后端语言","/backend-languages",[540],{"title":541,"_path":542,"children":543},"Python","/backend-languages/python",[544,547],{"title":545,"_path":546},"基础","/backend-languages/python/base",{"title":548,"_path":549},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":189,"_dir":552,"_draft":553,"_partial":553,"_locale":554,"title":188,"description":555,"url":556,"body":557,"_type":2661,"_id":2662,"_source":2663,"_file":2664,"_extension":2665},"major",false,"","给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。","https://leetcode.cn/problems/intersection-of-two-linked-lists",{"type":558,"children":559,"toc":2653},"root",[560,567,572,581,586,591,596,601,631,641,707,717,764,769,777,824,829,872,877,883,888,894,1519,1524,2036,2041,2647],{"type":561,"tag":562,"props":563,"children":564},"element","p",{},[565],{"type":566,"value":555},"text",{"type":561,"tag":562,"props":568,"children":569},{},[570],{"type":566,"value":571},"图示两个链表在节点 c1 开始相交：",{"type":561,"tag":562,"props":573,"children":574},{},[575],{"type":561,"tag":576,"props":577,"children":580},"img",{"alt":578,"src":579},"statement","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.160_statement.png",[],{"type":561,"tag":562,"props":582,"children":583},{},[584],{"type":566,"value":585},"题目数据 保证 整个链式结构中不存在环。",{"type":561,"tag":562,"props":587,"children":588},{},[589],{"type":566,"value":590},"注意，函数返回结果后，链表必须 保持其原始结构 。",{"type":561,"tag":562,"props":592,"children":593},{},[594],{"type":566,"value":595},"自定义评测：",{"type":561,"tag":562,"props":597,"children":598},{},[599],{"type":566,"value":600},"评测系统 的输入如下（你设计的程序 不适用 此输入）：",{"type":561,"tag":602,"props":603,"children":604},"ul",{},[605,611,616,621,626],{"type":561,"tag":606,"props":607,"children":608},"li",{},[609],{"type":566,"value":610},"intersectVal - 相交的起始节点的值。如果不存在相交节点，这一值为 0",{"type":561,"tag":606,"props":612,"children":613},{},[614],{"type":566,"value":615},"listA - 第一个链表",{"type":561,"tag":606,"props":617,"children":618},{},[619],{"type":566,"value":620},"listB - 第二个链表",{"type":561,"tag":606,"props":622,"children":623},{},[624],{"type":566,"value":625},"skipA - 在 listA 中（从头节点开始）跳到交叉节点的节点数",{"type":561,"tag":606,"props":627,"children":628},{},[629],{"type":566,"value":630},"skipB - 在 listB 中（从头节点开始）跳到交叉节点的节点数\n评测系统将根据这些输入创建链式数据结构，并将两个头节点 headA 和 headB 传递给你的程序。如果程序能够正确返回相交节点，那么你的解决方案将被 视作正确答案 。",{"type":561,"tag":562,"props":632,"children":633},{},[634,636],{"type":566,"value":635},"示例 1：\n",{"type":561,"tag":576,"props":637,"children":640},{"alt":638,"src":639},"example_1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.160_example_1.png",[],{"type":561,"tag":642,"props":643,"children":646},"pre",{"className":644,"code":645,"language":566,"meta":554,"style":554},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：intersectVal = 8, listA = [4,1,8,4,5], listB = [5,6,1,8,4,5], skipA = 2, skipB = 3\n输出：Intersected at '8'\n解释：相交节点的值为 8 （注意，如果两个链表相交则不能为 0）。\n从各自的表头开始算起，链表 A 为 [4,1,8,4,5]，链表 B 为 [5,6,1,8,4,5]。\n在 A 中，相交节点前有 2 个节点；在 B 中，相交节点前有 3 个节点。\n— 请注意相交节点的值不为 1，因为在链表 A 和链表 B 之中值为 1 的节点 (A 中第二个节点和 B 中第三个节点) 是不同的节点。换句话说，它们在内存中指向两个不同的位置，而链表 A 和链表 B 中值为 8 的节点 (A 中第三个节点，B 中第四个节点) 在内存中指向相同的位置。\n",[647],{"type":561,"tag":648,"props":649,"children":650},"code",{"__ignoreMap":554},[651,662,671,680,689,698],{"type":561,"tag":652,"props":653,"children":656},"span",{"class":654,"line":655},"line",1,[657],{"type":561,"tag":652,"props":658,"children":659},{},[660],{"type":566,"value":661},"输入：intersectVal = 8, listA = [4,1,8,4,5], listB = [5,6,1,8,4,5], skipA = 2, skipB = 3\n",{"type":561,"tag":652,"props":663,"children":665},{"class":654,"line":664},2,[666],{"type":561,"tag":652,"props":667,"children":668},{},[669],{"type":566,"value":670},"输出：Intersected at '8'\n",{"type":561,"tag":652,"props":672,"children":674},{"class":654,"line":673},3,[675],{"type":561,"tag":652,"props":676,"children":677},{},[678],{"type":566,"value":679},"解释：相交节点的值为 8 （注意，如果两个链表相交则不能为 0）。\n",{"type":561,"tag":652,"props":681,"children":683},{"class":654,"line":682},4,[684],{"type":561,"tag":652,"props":685,"children":686},{},[687],{"type":566,"value":688},"从各自的表头开始算起，链表 A 为 [4,1,8,4,5]，链表 B 为 [5,6,1,8,4,5]。\n",{"type":561,"tag":652,"props":690,"children":692},{"class":654,"line":691},5,[693],{"type":561,"tag":652,"props":694,"children":695},{},[696],{"type":566,"value":697},"在 A 中，相交节点前有 2 个节点；在 B 中，相交节点前有 3 个节点。\n",{"type":561,"tag":652,"props":699,"children":701},{"class":654,"line":700},6,[702],{"type":561,"tag":652,"props":703,"children":704},{},[705],{"type":566,"value":706},"— 请注意相交节点的值不为 1，因为在链表 A 和链表 B 之中值为 1 的节点 (A 中第二个节点和 B 中第三个节点) 是不同的节点。换句话说，它们在内存中指向两个不同的位置，而链表 A 和链表 B 中值为 8 的节点 (A 中第三个节点，B 中第四个节点) 在内存中指向相同的位置。\n",{"type":561,"tag":562,"props":708,"children":709},{},[710,712],{"type":566,"value":711},"示例 2：\n",{"type":561,"tag":576,"props":713,"children":716},{"alt":714,"src":715},"example_2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.160_example_2.png",[],{"type":561,"tag":642,"props":718,"children":720},{"className":644,"code":719,"language":566,"meta":554,"style":554},"输入：intersectVal = 2, listA = [1,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1\n输出：Intersected at '2'\n解释：相交节点的值为 2 （注意，如果两个链表相交则不能为 0）。\n从各自的表头开始算起，链表 A 为 [1,9,1,2,4]，链表 B 为 [3,2,4]。\n在 A 中，相交节点前有 3 个节点；在 B 中，相交节点前有 1 个节点。\n",[721],{"type":561,"tag":648,"props":722,"children":723},{"__ignoreMap":554},[724,732,740,748,756],{"type":561,"tag":652,"props":725,"children":726},{"class":654,"line":655},[727],{"type":561,"tag":652,"props":728,"children":729},{},[730],{"type":566,"value":731},"输入：intersectVal = 2, listA = [1,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1\n",{"type":561,"tag":652,"props":733,"children":734},{"class":654,"line":664},[735],{"type":561,"tag":652,"props":736,"children":737},{},[738],{"type":566,"value":739},"输出：Intersected at '2'\n",{"type":561,"tag":652,"props":741,"children":742},{"class":654,"line":673},[743],{"type":561,"tag":652,"props":744,"children":745},{},[746],{"type":566,"value":747},"解释：相交节点的值为 2 （注意，如果两个链表相交则不能为 0）。\n",{"type":561,"tag":652,"props":749,"children":750},{"class":654,"line":682},[751],{"type":561,"tag":652,"props":752,"children":753},{},[754],{"type":566,"value":755},"从各自的表头开始算起，链表 A 为 [1,9,1,2,4]，链表 B 为 [3,2,4]。\n",{"type":561,"tag":652,"props":757,"children":758},{"class":654,"line":691},[759],{"type":561,"tag":652,"props":760,"children":761},{},[762],{"type":566,"value":763},"在 A 中，相交节点前有 3 个节点；在 B 中，相交节点前有 1 个节点。\n",{"type":561,"tag":562,"props":765,"children":766},{},[767],{"type":566,"value":768},"示例 3：",{"type":561,"tag":562,"props":770,"children":771},{},[772],{"type":561,"tag":576,"props":773,"children":776},{"alt":774,"src":775},"example_3","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.160_example_3.png",[],{"type":561,"tag":642,"props":778,"children":780},{"className":644,"code":779,"language":566,"meta":554,"style":554},"输入：intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2\n输出：null\n解释：从各自的表头开始算起，链表 A 为 [2,6,4]，链表 B 为 [1,5]。\n由于这两个链表不相交，所以 intersectVal 必须为 0，而 skipA 和 skipB 可以是任意值。\n这两个链表不相交，因此返回 null 。\n",[781],{"type":561,"tag":648,"props":782,"children":783},{"__ignoreMap":554},[784,792,800,808,816],{"type":561,"tag":652,"props":785,"children":786},{"class":654,"line":655},[787],{"type":561,"tag":652,"props":788,"children":789},{},[790],{"type":566,"value":791},"输入：intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2\n",{"type":561,"tag":652,"props":793,"children":794},{"class":654,"line":664},[795],{"type":561,"tag":652,"props":796,"children":797},{},[798],{"type":566,"value":799},"输出：null\n",{"type":561,"tag":652,"props":801,"children":802},{"class":654,"line":673},[803],{"type":561,"tag":652,"props":804,"children":805},{},[806],{"type":566,"value":807},"解释：从各自的表头开始算起，链表 A 为 [2,6,4]，链表 B 为 [1,5]。\n",{"type":561,"tag":652,"props":809,"children":810},{"class":654,"line":682},[811],{"type":561,"tag":652,"props":812,"children":813},{},[814],{"type":566,"value":815},"由于这两个链表不相交，所以 intersectVal 必须为 0，而 skipA 和 skipB 可以是任意值。\n",{"type":561,"tag":652,"props":817,"children":818},{"class":654,"line":691},[819],{"type":561,"tag":652,"props":820,"children":821},{},[822],{"type":566,"value":823},"这两个链表不相交，因此返回 null 。\n",{"type":561,"tag":562,"props":825,"children":826},{},[827],{"type":566,"value":828},"提示：",{"type":561,"tag":602,"props":830,"children":831},{},[832,837,842,847,852,857,862,867],{"type":561,"tag":606,"props":833,"children":834},{},[835],{"type":566,"value":836},"listA 中节点数目为 m",{"type":561,"tag":606,"props":838,"children":839},{},[840],{"type":566,"value":841},"listB 中节点数目为 n",{"type":561,"tag":606,"props":843,"children":844},{},[845],{"type":566,"value":846},"1 \u003C= m, n \u003C= 3 * 10^4",{"type":561,"tag":606,"props":848,"children":849},{},[850],{"type":566,"value":851},"1 \u003C= Node.val \u003C= 10^5",{"type":561,"tag":606,"props":853,"children":854},{},[855],{"type":566,"value":856},"0 \u003C= skipA \u003C= m",{"type":561,"tag":606,"props":858,"children":859},{},[860],{"type":566,"value":861},"0 \u003C= skipB \u003C= n",{"type":561,"tag":606,"props":863,"children":864},{},[865],{"type":566,"value":866},"如果 listA 和 listB 没有交点，intersectVal 为 0",{"type":561,"tag":606,"props":868,"children":869},{},[870],{"type":566,"value":871},"如果 listA 和 listB 有交点，intersectVal == listA[skipA] == listB[skipB]",{"type":561,"tag":562,"props":873,"children":874},{},[875],{"type":566,"value":876},"进阶：你能否设计一个时间复杂度 O(m + n) 、仅用 O(1) 内存的解决方案？",{"type":561,"tag":878,"props":879,"children":881},"h2",{"id":880},"解题思路",[882],{"type":566,"value":880},{"type":561,"tag":878,"props":884,"children":886},{"id":885},"实现",[887],{"type":566,"value":885},{"type":561,"tag":889,"props":890,"children":892},"h3",{"id":891},"暴力破解",[893],{"type":566,"value":891},{"type":561,"tag":642,"props":895,"children":899},{"className":896,"code":897,"language":898,"meta":554,"style":554},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n */\nfunction ListNode(val) {\n  this.val = val;\n  this.next = null;\n}\n\n/**\n * @param {ListNode} headA\n * @param {ListNode} headB\n * @return {ListNode}\n */\nvar getIntersectionNode = function (headA, headB) {\n  if (!headA || !headB) return null;\n  let pA = headA;\n  while (pA) {\n    let pB = headB;\n    while (pB) {\n      if (pA === pB) return pA;\n      pB = pB.next;\n    }\n    pA = pA.next;\n  }\n  return pA;\n};\n","js",[900],{"type":561,"tag":648,"props":901,"children":902},{"__ignoreMap":554},[903,912,920,928,965,998,1027,1036,1046,1054,1095,1128,1157,1165,1216,1270,1297,1323,1349,1375,1417,1446,1455,1484,1493,1510],{"type":561,"tag":652,"props":904,"children":905},{"class":654,"line":655},[906],{"type":561,"tag":652,"props":907,"children":909},{"style":908},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[910],{"type":566,"value":911},"/**\n",{"type":561,"tag":652,"props":913,"children":914},{"class":654,"line":664},[915],{"type":561,"tag":652,"props":916,"children":917},{"style":908},[918],{"type":566,"value":919}," * Definition for singly-linked list.\n",{"type":561,"tag":652,"props":921,"children":922},{"class":654,"line":673},[923],{"type":561,"tag":652,"props":924,"children":925},{"style":908},[926],{"type":566,"value":927}," */\n",{"type":561,"tag":652,"props":929,"children":930},{"class":654,"line":682},[931,937,943,949,955,960],{"type":561,"tag":652,"props":932,"children":934},{"style":933},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[935],{"type":566,"value":936},"function",{"type":561,"tag":652,"props":938,"children":940},{"style":939},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[941],{"type":566,"value":942}," ListNode",{"type":561,"tag":652,"props":944,"children":946},{"style":945},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[947],{"type":566,"value":948},"(",{"type":561,"tag":652,"props":950,"children":952},{"style":951},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[953],{"type":566,"value":954},"val",{"type":561,"tag":652,"props":956,"children":957},{"style":945},[958],{"type":566,"value":959},")",{"type":561,"tag":652,"props":961,"children":962},{"style":945},[963],{"type":566,"value":964}," {\n",{"type":561,"tag":652,"props":966,"children":967},{"class":654,"line":691},[968,974,979,983,988,993],{"type":561,"tag":652,"props":969,"children":971},{"style":970},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[972],{"type":566,"value":973},"  this",{"type":561,"tag":652,"props":975,"children":976},{"style":945},[977],{"type":566,"value":978},".",{"type":561,"tag":652,"props":980,"children":981},{"style":951},[982],{"type":566,"value":954},{"type":561,"tag":652,"props":984,"children":985},{"style":945},[986],{"type":566,"value":987}," =",{"type":561,"tag":652,"props":989,"children":990},{"style":951},[991],{"type":566,"value":992}," val",{"type":561,"tag":652,"props":994,"children":995},{"style":945},[996],{"type":566,"value":997},";\n",{"type":561,"tag":652,"props":999,"children":1000},{"class":654,"line":700},[1001,1005,1009,1014,1018,1023],{"type":561,"tag":652,"props":1002,"children":1003},{"style":970},[1004],{"type":566,"value":973},{"type":561,"tag":652,"props":1006,"children":1007},{"style":945},[1008],{"type":566,"value":978},{"type":561,"tag":652,"props":1010,"children":1011},{"style":951},[1012],{"type":566,"value":1013},"next",{"type":561,"tag":652,"props":1015,"children":1016},{"style":945},[1017],{"type":566,"value":987},{"type":561,"tag":652,"props":1019,"children":1020},{"style":933},[1021],{"type":566,"value":1022}," null",{"type":561,"tag":652,"props":1024,"children":1025},{"style":945},[1026],{"type":566,"value":997},{"type":561,"tag":652,"props":1028,"children":1030},{"class":654,"line":1029},7,[1031],{"type":561,"tag":652,"props":1032,"children":1033},{"style":945},[1034],{"type":566,"value":1035},"}\n",{"type":561,"tag":652,"props":1037,"children":1039},{"class":654,"line":1038},8,[1040],{"type":561,"tag":652,"props":1041,"children":1043},{"emptyLinePlaceholder":1042},true,[1044],{"type":566,"value":1045},"\n",{"type":561,"tag":652,"props":1047,"children":1049},{"class":654,"line":1048},9,[1050],{"type":561,"tag":652,"props":1051,"children":1052},{"style":908},[1053],{"type":566,"value":911},{"type":561,"tag":652,"props":1055,"children":1057},{"class":654,"line":1056},10,[1058,1063,1068,1074,1079,1085,1090],{"type":561,"tag":652,"props":1059,"children":1060},{"style":908},[1061],{"type":566,"value":1062}," * ",{"type":561,"tag":652,"props":1064,"children":1065},{"style":945},[1066],{"type":566,"value":1067},"@",{"type":561,"tag":652,"props":1069,"children":1071},{"style":1070},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[1072],{"type":566,"value":1073},"param",{"type":561,"tag":652,"props":1075,"children":1076},{"style":945},[1077],{"type":566,"value":1078}," {",{"type":561,"tag":652,"props":1080,"children":1082},{"style":1081},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[1083],{"type":566,"value":1084},"ListNode",{"type":561,"tag":652,"props":1086,"children":1087},{"style":945},[1088],{"type":566,"value":1089},"}",{"type":561,"tag":652,"props":1091,"children":1092},{"style":951},[1093],{"type":566,"value":1094}," headA\n",{"type":561,"tag":652,"props":1096,"children":1098},{"class":654,"line":1097},11,[1099,1103,1107,1111,1115,1119,1123],{"type":561,"tag":652,"props":1100,"children":1101},{"style":908},[1102],{"type":566,"value":1062},{"type":561,"tag":652,"props":1104,"children":1105},{"style":945},[1106],{"type":566,"value":1067},{"type":561,"tag":652,"props":1108,"children":1109},{"style":1070},[1110],{"type":566,"value":1073},{"type":561,"tag":652,"props":1112,"children":1113},{"style":945},[1114],{"type":566,"value":1078},{"type":561,"tag":652,"props":1116,"children":1117},{"style":1081},[1118],{"type":566,"value":1084},{"type":561,"tag":652,"props":1120,"children":1121},{"style":945},[1122],{"type":566,"value":1089},{"type":561,"tag":652,"props":1124,"children":1125},{"style":951},[1126],{"type":566,"value":1127}," headB\n",{"type":561,"tag":652,"props":1129,"children":1131},{"class":654,"line":1130},12,[1132,1136,1140,1145,1149,1153],{"type":561,"tag":652,"props":1133,"children":1134},{"style":908},[1135],{"type":566,"value":1062},{"type":561,"tag":652,"props":1137,"children":1138},{"style":945},[1139],{"type":566,"value":1067},{"type":561,"tag":652,"props":1141,"children":1142},{"style":1070},[1143],{"type":566,"value":1144},"return",{"type":561,"tag":652,"props":1146,"children":1147},{"style":945},[1148],{"type":566,"value":1078},{"type":561,"tag":652,"props":1150,"children":1151},{"style":1081},[1152],{"type":566,"value":1084},{"type":561,"tag":652,"props":1154,"children":1155},{"style":945},[1156],{"type":566,"value":1035},{"type":561,"tag":652,"props":1158,"children":1160},{"class":654,"line":1159},13,[1161],{"type":561,"tag":652,"props":1162,"children":1163},{"style":908},[1164],{"type":566,"value":927},{"type":561,"tag":652,"props":1166,"children":1168},{"class":654,"line":1167},14,[1169,1174,1179,1183,1188,1193,1198,1203,1208,1212],{"type":561,"tag":652,"props":1170,"children":1171},{"style":933},[1172],{"type":566,"value":1173},"var",{"type":561,"tag":652,"props":1175,"children":1176},{"style":939},[1177],{"type":566,"value":1178}," getIntersectionNode",{"type":561,"tag":652,"props":1180,"children":1181},{"style":945},[1182],{"type":566,"value":987},{"type":561,"tag":652,"props":1184,"children":1185},{"style":933},[1186],{"type":566,"value":1187}," function",{"type":561,"tag":652,"props":1189,"children":1190},{"style":945},[1191],{"type":566,"value":1192}," (",{"type":561,"tag":652,"props":1194,"children":1195},{"style":951},[1196],{"type":566,"value":1197},"headA",{"type":561,"tag":652,"props":1199,"children":1200},{"style":945},[1201],{"type":566,"value":1202},",",{"type":561,"tag":652,"props":1204,"children":1205},{"style":951},[1206],{"type":566,"value":1207}," headB",{"type":561,"tag":652,"props":1209,"children":1210},{"style":945},[1211],{"type":566,"value":959},{"type":561,"tag":652,"props":1213,"children":1214},{"style":945},[1215],{"type":566,"value":964},{"type":561,"tag":652,"props":1217,"children":1219},{"class":654,"line":1218},15,[1220,1225,1229,1234,1238,1243,1248,1253,1257,1262,1266],{"type":561,"tag":652,"props":1221,"children":1222},{"style":1070},[1223],{"type":566,"value":1224},"  if",{"type":561,"tag":652,"props":1226,"children":1227},{"style":945},[1228],{"type":566,"value":1192},{"type":561,"tag":652,"props":1230,"children":1231},{"style":933},[1232],{"type":566,"value":1233},"!",{"type":561,"tag":652,"props":1235,"children":1236},{"style":951},[1237],{"type":566,"value":1197},{"type":561,"tag":652,"props":1239,"children":1240},{"style":933},[1241],{"type":566,"value":1242}," ||",{"type":561,"tag":652,"props":1244,"children":1245},{"style":933},[1246],{"type":566,"value":1247}," !",{"type":561,"tag":652,"props":1249,"children":1250},{"style":951},[1251],{"type":566,"value":1252},"headB",{"type":561,"tag":652,"props":1254,"children":1255},{"style":945},[1256],{"type":566,"value":959},{"type":561,"tag":652,"props":1258,"children":1259},{"style":1070},[1260],{"type":566,"value":1261}," return",{"type":561,"tag":652,"props":1263,"children":1264},{"style":933},[1265],{"type":566,"value":1022},{"type":561,"tag":652,"props":1267,"children":1268},{"style":945},[1269],{"type":566,"value":997},{"type":561,"tag":652,"props":1271,"children":1273},{"class":654,"line":1272},16,[1274,1279,1284,1288,1293],{"type":561,"tag":652,"props":1275,"children":1276},{"style":933},[1277],{"type":566,"value":1278},"  let",{"type":561,"tag":652,"props":1280,"children":1281},{"style":951},[1282],{"type":566,"value":1283}," pA",{"type":561,"tag":652,"props":1285,"children":1286},{"style":945},[1287],{"type":566,"value":987},{"type":561,"tag":652,"props":1289,"children":1290},{"style":951},[1291],{"type":566,"value":1292}," headA",{"type":561,"tag":652,"props":1294,"children":1295},{"style":945},[1296],{"type":566,"value":997},{"type":561,"tag":652,"props":1298,"children":1300},{"class":654,"line":1299},17,[1301,1306,1310,1315,1319],{"type":561,"tag":652,"props":1302,"children":1303},{"style":1070},[1304],{"type":566,"value":1305},"  while",{"type":561,"tag":652,"props":1307,"children":1308},{"style":945},[1309],{"type":566,"value":1192},{"type":561,"tag":652,"props":1311,"children":1312},{"style":951},[1313],{"type":566,"value":1314},"pA",{"type":561,"tag":652,"props":1316,"children":1317},{"style":945},[1318],{"type":566,"value":959},{"type":561,"tag":652,"props":1320,"children":1321},{"style":945},[1322],{"type":566,"value":964},{"type":561,"tag":652,"props":1324,"children":1326},{"class":654,"line":1325},18,[1327,1332,1337,1341,1345],{"type":561,"tag":652,"props":1328,"children":1329},{"style":933},[1330],{"type":566,"value":1331},"    let",{"type":561,"tag":652,"props":1333,"children":1334},{"style":951},[1335],{"type":566,"value":1336}," pB",{"type":561,"tag":652,"props":1338,"children":1339},{"style":945},[1340],{"type":566,"value":987},{"type":561,"tag":652,"props":1342,"children":1343},{"style":951},[1344],{"type":566,"value":1207},{"type":561,"tag":652,"props":1346,"children":1347},{"style":945},[1348],{"type":566,"value":997},{"type":561,"tag":652,"props":1350,"children":1352},{"class":654,"line":1351},19,[1353,1358,1362,1367,1371],{"type":561,"tag":652,"props":1354,"children":1355},{"style":1070},[1356],{"type":566,"value":1357},"    while",{"type":561,"tag":652,"props":1359,"children":1360},{"style":945},[1361],{"type":566,"value":1192},{"type":561,"tag":652,"props":1363,"children":1364},{"style":951},[1365],{"type":566,"value":1366},"pB",{"type":561,"tag":652,"props":1368,"children":1369},{"style":945},[1370],{"type":566,"value":959},{"type":561,"tag":652,"props":1372,"children":1373},{"style":945},[1374],{"type":566,"value":964},{"type":561,"tag":652,"props":1376,"children":1378},{"class":654,"line":1377},20,[1379,1384,1388,1392,1397,1401,1405,1409,1413],{"type":561,"tag":652,"props":1380,"children":1381},{"style":1070},[1382],{"type":566,"value":1383},"      if",{"type":561,"tag":652,"props":1385,"children":1386},{"style":945},[1387],{"type":566,"value":1192},{"type":561,"tag":652,"props":1389,"children":1390},{"style":951},[1391],{"type":566,"value":1314},{"type":561,"tag":652,"props":1393,"children":1394},{"style":933},[1395],{"type":566,"value":1396}," ===",{"type":561,"tag":652,"props":1398,"children":1399},{"style":951},[1400],{"type":566,"value":1336},{"type":561,"tag":652,"props":1402,"children":1403},{"style":945},[1404],{"type":566,"value":959},{"type":561,"tag":652,"props":1406,"children":1407},{"style":1070},[1408],{"type":566,"value":1261},{"type":561,"tag":652,"props":1410,"children":1411},{"style":951},[1412],{"type":566,"value":1283},{"type":561,"tag":652,"props":1414,"children":1415},{"style":945},[1416],{"type":566,"value":997},{"type":561,"tag":652,"props":1418,"children":1420},{"class":654,"line":1419},21,[1421,1426,1430,1434,1438,1442],{"type":561,"tag":652,"props":1422,"children":1423},{"style":951},[1424],{"type":566,"value":1425},"      pB",{"type":561,"tag":652,"props":1427,"children":1428},{"style":945},[1429],{"type":566,"value":987},{"type":561,"tag":652,"props":1431,"children":1432},{"style":951},[1433],{"type":566,"value":1336},{"type":561,"tag":652,"props":1435,"children":1436},{"style":945},[1437],{"type":566,"value":978},{"type":561,"tag":652,"props":1439,"children":1440},{"style":951},[1441],{"type":566,"value":1013},{"type":561,"tag":652,"props":1443,"children":1444},{"style":945},[1445],{"type":566,"value":997},{"type":561,"tag":652,"props":1447,"children":1449},{"class":654,"line":1448},22,[1450],{"type":561,"tag":652,"props":1451,"children":1452},{"style":945},[1453],{"type":566,"value":1454},"    }\n",{"type":561,"tag":652,"props":1456,"children":1458},{"class":654,"line":1457},23,[1459,1464,1468,1472,1476,1480],{"type":561,"tag":652,"props":1460,"children":1461},{"style":951},[1462],{"type":566,"value":1463},"    pA",{"type":561,"tag":652,"props":1465,"children":1466},{"style":945},[1467],{"type":566,"value":987},{"type":561,"tag":652,"props":1469,"children":1470},{"style":951},[1471],{"type":566,"value":1283},{"type":561,"tag":652,"props":1473,"children":1474},{"style":945},[1475],{"type":566,"value":978},{"type":561,"tag":652,"props":1477,"children":1478},{"style":951},[1479],{"type":566,"value":1013},{"type":561,"tag":652,"props":1481,"children":1482},{"style":945},[1483],{"type":566,"value":997},{"type":561,"tag":652,"props":1485,"children":1487},{"class":654,"line":1486},24,[1488],{"type":561,"tag":652,"props":1489,"children":1490},{"style":945},[1491],{"type":566,"value":1492},"  }\n",{"type":561,"tag":652,"props":1494,"children":1496},{"class":654,"line":1495},25,[1497,1502,1506],{"type":561,"tag":652,"props":1498,"children":1499},{"style":1070},[1500],{"type":566,"value":1501},"  return",{"type":561,"tag":652,"props":1503,"children":1504},{"style":951},[1505],{"type":566,"value":1283},{"type":561,"tag":652,"props":1507,"children":1508},{"style":945},[1509],{"type":566,"value":997},{"type":561,"tag":652,"props":1511,"children":1513},{"class":654,"line":1512},26,[1514],{"type":561,"tag":652,"props":1515,"children":1516},{"style":945},[1517],{"type":566,"value":1518},"};\n",{"type":561,"tag":889,"props":1520,"children":1522},{"id":1521},"双指针",[1523],{"type":566,"value":1521},{"type":561,"tag":642,"props":1525,"children":1527},{"className":896,"code":1526,"language":898,"meta":554,"style":554},"/**\n * Definition for singly-linked list.\n */\nfunction ListNode(val) {\n  this.val = val;\n  this.next = null;\n}\n\n/**\n * @param {ListNode} headA\n * @param {ListNode} headB\n * @return {ListNode}\n */\nvar getIntersectionNode = function (headA, headB) {\n  if (!headA || !headB) return null;\n  let pA = headA;\n  let pB = headB;\n  while (pA !== pB) {\n    pA = pA ? pA.next : headB;\n    pB = pB ? pB.next : headA;\n  }\n  return pA;\n};\n",[1528],{"type":561,"tag":648,"props":1529,"children":1530},{"__ignoreMap":554},[1531,1538,1545,1552,1579,1606,1633,1640,1647,1654,1685,1716,1743,1750,1793,1840,1863,1886,1918,1963,2007,2014,2029],{"type":561,"tag":652,"props":1532,"children":1533},{"class":654,"line":655},[1534],{"type":561,"tag":652,"props":1535,"children":1536},{"style":908},[1537],{"type":566,"value":911},{"type":561,"tag":652,"props":1539,"children":1540},{"class":654,"line":664},[1541],{"type":561,"tag":652,"props":1542,"children":1543},{"style":908},[1544],{"type":566,"value":919},{"type":561,"tag":652,"props":1546,"children":1547},{"class":654,"line":673},[1548],{"type":561,"tag":652,"props":1549,"children":1550},{"style":908},[1551],{"type":566,"value":927},{"type":561,"tag":652,"props":1553,"children":1554},{"class":654,"line":682},[1555,1559,1563,1567,1571,1575],{"type":561,"tag":652,"props":1556,"children":1557},{"style":933},[1558],{"type":566,"value":936},{"type":561,"tag":652,"props":1560,"children":1561},{"style":939},[1562],{"type":566,"value":942},{"type":561,"tag":652,"props":1564,"children":1565},{"style":945},[1566],{"type":566,"value":948},{"type":561,"tag":652,"props":1568,"children":1569},{"style":951},[1570],{"type":566,"value":954},{"type":561,"tag":652,"props":1572,"children":1573},{"style":945},[1574],{"type":566,"value":959},{"type":561,"tag":652,"props":1576,"children":1577},{"style":945},[1578],{"type":566,"value":964},{"type":561,"tag":652,"props":1580,"children":1581},{"class":654,"line":691},[1582,1586,1590,1594,1598,1602],{"type":561,"tag":652,"props":1583,"children":1584},{"style":970},[1585],{"type":566,"value":973},{"type":561,"tag":652,"props":1587,"children":1588},{"style":945},[1589],{"type":566,"value":978},{"type":561,"tag":652,"props":1591,"children":1592},{"style":951},[1593],{"type":566,"value":954},{"type":561,"tag":652,"props":1595,"children":1596},{"style":945},[1597],{"type":566,"value":987},{"type":561,"tag":652,"props":1599,"children":1600},{"style":951},[1601],{"type":566,"value":992},{"type":561,"tag":652,"props":1603,"children":1604},{"style":945},[1605],{"type":566,"value":997},{"type":561,"tag":652,"props":1607,"children":1608},{"class":654,"line":700},[1609,1613,1617,1621,1625,1629],{"type":561,"tag":652,"props":1610,"children":1611},{"style":970},[1612],{"type":566,"value":973},{"type":561,"tag":652,"props":1614,"children":1615},{"style":945},[1616],{"type":566,"value":978},{"type":561,"tag":652,"props":1618,"children":1619},{"style":951},[1620],{"type":566,"value":1013},{"type":561,"tag":652,"props":1622,"children":1623},{"style":945},[1624],{"type":566,"value":987},{"type":561,"tag":652,"props":1626,"children":1627},{"style":933},[1628],{"type":566,"value":1022},{"type":561,"tag":652,"props":1630,"children":1631},{"style":945},[1632],{"type":566,"value":997},{"type":561,"tag":652,"props":1634,"children":1635},{"class":654,"line":1029},[1636],{"type":561,"tag":652,"props":1637,"children":1638},{"style":945},[1639],{"type":566,"value":1035},{"type":561,"tag":652,"props":1641,"children":1642},{"class":654,"line":1038},[1643],{"type":561,"tag":652,"props":1644,"children":1645},{"emptyLinePlaceholder":1042},[1646],{"type":566,"value":1045},{"type":561,"tag":652,"props":1648,"children":1649},{"class":654,"line":1048},[1650],{"type":561,"tag":652,"props":1651,"children":1652},{"style":908},[1653],{"type":566,"value":911},{"type":561,"tag":652,"props":1655,"children":1656},{"class":654,"line":1056},[1657,1661,1665,1669,1673,1677,1681],{"type":561,"tag":652,"props":1658,"children":1659},{"style":908},[1660],{"type":566,"value":1062},{"type":561,"tag":652,"props":1662,"children":1663},{"style":945},[1664],{"type":566,"value":1067},{"type":561,"tag":652,"props":1666,"children":1667},{"style":1070},[1668],{"type":566,"value":1073},{"type":561,"tag":652,"props":1670,"children":1671},{"style":945},[1672],{"type":566,"value":1078},{"type":561,"tag":652,"props":1674,"children":1675},{"style":1081},[1676],{"type":566,"value":1084},{"type":561,"tag":652,"props":1678,"children":1679},{"style":945},[1680],{"type":566,"value":1089},{"type":561,"tag":652,"props":1682,"children":1683},{"style":951},[1684],{"type":566,"value":1094},{"type":561,"tag":652,"props":1686,"children":1687},{"class":654,"line":1097},[1688,1692,1696,1700,1704,1708,1712],{"type":561,"tag":652,"props":1689,"children":1690},{"style":908},[1691],{"type":566,"value":1062},{"type":561,"tag":652,"props":1693,"children":1694},{"style":945},[1695],{"type":566,"value":1067},{"type":561,"tag":652,"props":1697,"children":1698},{"style":1070},[1699],{"type":566,"value":1073},{"type":561,"tag":652,"props":1701,"children":1702},{"style":945},[1703],{"type":566,"value":1078},{"type":561,"tag":652,"props":1705,"children":1706},{"style":1081},[1707],{"type":566,"value":1084},{"type":561,"tag":652,"props":1709,"children":1710},{"style":945},[1711],{"type":566,"value":1089},{"type":561,"tag":652,"props":1713,"children":1714},{"style":951},[1715],{"type":566,"value":1127},{"type":561,"tag":652,"props":1717,"children":1718},{"class":654,"line":1130},[1719,1723,1727,1731,1735,1739],{"type":561,"tag":652,"props":1720,"children":1721},{"style":908},[1722],{"type":566,"value":1062},{"type":561,"tag":652,"props":1724,"children":1725},{"style":945},[1726],{"type":566,"value":1067},{"type":561,"tag":652,"props":1728,"children":1729},{"style":1070},[1730],{"type":566,"value":1144},{"type":561,"tag":652,"props":1732,"children":1733},{"style":945},[1734],{"type":566,"value":1078},{"type":561,"tag":652,"props":1736,"children":1737},{"style":1081},[1738],{"type":566,"value":1084},{"type":561,"tag":652,"props":1740,"children":1741},{"style":945},[1742],{"type":566,"value":1035},{"type":561,"tag":652,"props":1744,"children":1745},{"class":654,"line":1159},[1746],{"type":561,"tag":652,"props":1747,"children":1748},{"style":908},[1749],{"type":566,"value":927},{"type":561,"tag":652,"props":1751,"children":1752},{"class":654,"line":1167},[1753,1757,1761,1765,1769,1773,1777,1781,1785,1789],{"type":561,"tag":652,"props":1754,"children":1755},{"style":933},[1756],{"type":566,"value":1173},{"type":561,"tag":652,"props":1758,"children":1759},{"style":939},[1760],{"type":566,"value":1178},{"type":561,"tag":652,"props":1762,"children":1763},{"style":945},[1764],{"type":566,"value":987},{"type":561,"tag":652,"props":1766,"children":1767},{"style":933},[1768],{"type":566,"value":1187},{"type":561,"tag":652,"props":1770,"children":1771},{"style":945},[1772],{"type":566,"value":1192},{"type":561,"tag":652,"props":1774,"children":1775},{"style":951},[1776],{"type":566,"value":1197},{"type":561,"tag":652,"props":1778,"children":1779},{"style":945},[1780],{"type":566,"value":1202},{"type":561,"tag":652,"props":1782,"children":1783},{"style":951},[1784],{"type":566,"value":1207},{"type":561,"tag":652,"props":1786,"children":1787},{"style":945},[1788],{"type":566,"value":959},{"type":561,"tag":652,"props":1790,"children":1791},{"style":945},[1792],{"type":566,"value":964},{"type":561,"tag":652,"props":1794,"children":1795},{"class":654,"line":1218},[1796,1800,1804,1808,1812,1816,1820,1824,1828,1832,1836],{"type":561,"tag":652,"props":1797,"children":1798},{"style":1070},[1799],{"type":566,"value":1224},{"type":561,"tag":652,"props":1801,"children":1802},{"style":945},[1803],{"type":566,"value":1192},{"type":561,"tag":652,"props":1805,"children":1806},{"style":933},[1807],{"type":566,"value":1233},{"type":561,"tag":652,"props":1809,"children":1810},{"style":951},[1811],{"type":566,"value":1197},{"type":561,"tag":652,"props":1813,"children":1814},{"style":933},[1815],{"type":566,"value":1242},{"type":561,"tag":652,"props":1817,"children":1818},{"style":933},[1819],{"type":566,"value":1247},{"type":561,"tag":652,"props":1821,"children":1822},{"style":951},[1823],{"type":566,"value":1252},{"type":561,"tag":652,"props":1825,"children":1826},{"style":945},[1827],{"type":566,"value":959},{"type":561,"tag":652,"props":1829,"children":1830},{"style":1070},[1831],{"type":566,"value":1261},{"type":561,"tag":652,"props":1833,"children":1834},{"style":933},[1835],{"type":566,"value":1022},{"type":561,"tag":652,"props":1837,"children":1838},{"style":945},[1839],{"type":566,"value":997},{"type":561,"tag":652,"props":1841,"children":1842},{"class":654,"line":1272},[1843,1847,1851,1855,1859],{"type":561,"tag":652,"props":1844,"children":1845},{"style":933},[1846],{"type":566,"value":1278},{"type":561,"tag":652,"props":1848,"children":1849},{"style":951},[1850],{"type":566,"value":1283},{"type":561,"tag":652,"props":1852,"children":1853},{"style":945},[1854],{"type":566,"value":987},{"type":561,"tag":652,"props":1856,"children":1857},{"style":951},[1858],{"type":566,"value":1292},{"type":561,"tag":652,"props":1860,"children":1861},{"style":945},[1862],{"type":566,"value":997},{"type":561,"tag":652,"props":1864,"children":1865},{"class":654,"line":1299},[1866,1870,1874,1878,1882],{"type":561,"tag":652,"props":1867,"children":1868},{"style":933},[1869],{"type":566,"value":1278},{"type":561,"tag":652,"props":1871,"children":1872},{"style":951},[1873],{"type":566,"value":1336},{"type":561,"tag":652,"props":1875,"children":1876},{"style":945},[1877],{"type":566,"value":987},{"type":561,"tag":652,"props":1879,"children":1880},{"style":951},[1881],{"type":566,"value":1207},{"type":561,"tag":652,"props":1883,"children":1884},{"style":945},[1885],{"type":566,"value":997},{"type":561,"tag":652,"props":1887,"children":1888},{"class":654,"line":1325},[1889,1893,1897,1901,1906,1910,1914],{"type":561,"tag":652,"props":1890,"children":1891},{"style":1070},[1892],{"type":566,"value":1305},{"type":561,"tag":652,"props":1894,"children":1895},{"style":945},[1896],{"type":566,"value":1192},{"type":561,"tag":652,"props":1898,"children":1899},{"style":951},[1900],{"type":566,"value":1314},{"type":561,"tag":652,"props":1902,"children":1903},{"style":933},[1904],{"type":566,"value":1905}," !==",{"type":561,"tag":652,"props":1907,"children":1908},{"style":951},[1909],{"type":566,"value":1336},{"type":561,"tag":652,"props":1911,"children":1912},{"style":945},[1913],{"type":566,"value":959},{"type":561,"tag":652,"props":1915,"children":1916},{"style":945},[1917],{"type":566,"value":964},{"type":561,"tag":652,"props":1919,"children":1920},{"class":654,"line":1351},[1921,1925,1929,1933,1938,1942,1946,1950,1955,1959],{"type":561,"tag":652,"props":1922,"children":1923},{"style":951},[1924],{"type":566,"value":1463},{"type":561,"tag":652,"props":1926,"children":1927},{"style":945},[1928],{"type":566,"value":987},{"type":561,"tag":652,"props":1930,"children":1931},{"style":951},[1932],{"type":566,"value":1283},{"type":561,"tag":652,"props":1934,"children":1935},{"style":933},[1936],{"type":566,"value":1937}," ?",{"type":561,"tag":652,"props":1939,"children":1940},{"style":951},[1941],{"type":566,"value":1283},{"type":561,"tag":652,"props":1943,"children":1944},{"style":945},[1945],{"type":566,"value":978},{"type":561,"tag":652,"props":1947,"children":1948},{"style":951},[1949],{"type":566,"value":1013},{"type":561,"tag":652,"props":1951,"children":1952},{"style":933},[1953],{"type":566,"value":1954}," :",{"type":561,"tag":652,"props":1956,"children":1957},{"style":951},[1958],{"type":566,"value":1207},{"type":561,"tag":652,"props":1960,"children":1961},{"style":945},[1962],{"type":566,"value":997},{"type":561,"tag":652,"props":1964,"children":1965},{"class":654,"line":1377},[1966,1971,1975,1979,1983,1987,1991,1995,1999,2003],{"type":561,"tag":652,"props":1967,"children":1968},{"style":951},[1969],{"type":566,"value":1970},"    pB",{"type":561,"tag":652,"props":1972,"children":1973},{"style":945},[1974],{"type":566,"value":987},{"type":561,"tag":652,"props":1976,"children":1977},{"style":951},[1978],{"type":566,"value":1336},{"type":561,"tag":652,"props":1980,"children":1981},{"style":933},[1982],{"type":566,"value":1937},{"type":561,"tag":652,"props":1984,"children":1985},{"style":951},[1986],{"type":566,"value":1336},{"type":561,"tag":652,"props":1988,"children":1989},{"style":945},[1990],{"type":566,"value":978},{"type":561,"tag":652,"props":1992,"children":1993},{"style":951},[1994],{"type":566,"value":1013},{"type":561,"tag":652,"props":1996,"children":1997},{"style":933},[1998],{"type":566,"value":1954},{"type":561,"tag":652,"props":2000,"children":2001},{"style":951},[2002],{"type":566,"value":1292},{"type":561,"tag":652,"props":2004,"children":2005},{"style":945},[2006],{"type":566,"value":997},{"type":561,"tag":652,"props":2008,"children":2009},{"class":654,"line":1419},[2010],{"type":561,"tag":652,"props":2011,"children":2012},{"style":945},[2013],{"type":566,"value":1492},{"type":561,"tag":652,"props":2015,"children":2016},{"class":654,"line":1448},[2017,2021,2025],{"type":561,"tag":652,"props":2018,"children":2019},{"style":1070},[2020],{"type":566,"value":1501},{"type":561,"tag":652,"props":2022,"children":2023},{"style":951},[2024],{"type":566,"value":1283},{"type":561,"tag":652,"props":2026,"children":2027},{"style":945},[2028],{"type":566,"value":997},{"type":561,"tag":652,"props":2030,"children":2031},{"class":654,"line":1457},[2032],{"type":561,"tag":652,"props":2033,"children":2034},{"style":945},[2035],{"type":566,"value":1518},{"type":561,"tag":889,"props":2037,"children":2039},{"id":2038},"哈希法",[2040],{"type":566,"value":2038},{"type":561,"tag":642,"props":2042,"children":2044},{"className":896,"code":2043,"language":898,"meta":554,"style":554},"/**\n * Definition for singly-linked list.\n */\nfunction ListNode(val) {\n  this.val = val;\n  this.next = null;\n}\n\n/**\n * @param {ListNode} headA\n * @param {ListNode} headB\n * @return {ListNode}\n */\nvar getIntersectionNode = function (headA, headB) {\n  if (!headA || !headB) return null;\n  let map = new Map();\n  let pA = headA;\n  let pB = headB;\n  while (pA) {\n    map.set(pA, 1);\n    pA = pA.next;\n  }\n  while (pB) {\n    if (map.has(pB)) return pB;\n    pB = pB.next;\n  }\n};\n",[2045],{"type":561,"tag":648,"props":2046,"children":2047},{"__ignoreMap":554},[2048,2055,2062,2069,2096,2123,2150,2157,2164,2171,2202,2233,2260,2267,2310,2357,2388,2411,2434,2457,2497,2524,2531,2554,2605,2632,2639],{"type":561,"tag":652,"props":2049,"children":2050},{"class":654,"line":655},[2051],{"type":561,"tag":652,"props":2052,"children":2053},{"style":908},[2054],{"type":566,"value":911},{"type":561,"tag":652,"props":2056,"children":2057},{"class":654,"line":664},[2058],{"type":561,"tag":652,"props":2059,"children":2060},{"style":908},[2061],{"type":566,"value":919},{"type":561,"tag":652,"props":2063,"children":2064},{"class":654,"line":673},[2065],{"type":561,"tag":652,"props":2066,"children":2067},{"style":908},[2068],{"type":566,"value":927},{"type":561,"tag":652,"props":2070,"children":2071},{"class":654,"line":682},[2072,2076,2080,2084,2088,2092],{"type":561,"tag":652,"props":2073,"children":2074},{"style":933},[2075],{"type":566,"value":936},{"type":561,"tag":652,"props":2077,"children":2078},{"style":939},[2079],{"type":566,"value":942},{"type":561,"tag":652,"props":2081,"children":2082},{"style":945},[2083],{"type":566,"value":948},{"type":561,"tag":652,"props":2085,"children":2086},{"style":951},[2087],{"type":566,"value":954},{"type":561,"tag":652,"props":2089,"children":2090},{"style":945},[2091],{"type":566,"value":959},{"type":561,"tag":652,"props":2093,"children":2094},{"style":945},[2095],{"type":566,"value":964},{"type":561,"tag":652,"props":2097,"children":2098},{"class":654,"line":691},[2099,2103,2107,2111,2115,2119],{"type":561,"tag":652,"props":2100,"children":2101},{"style":970},[2102],{"type":566,"value":973},{"type":561,"tag":652,"props":2104,"children":2105},{"style":945},[2106],{"type":566,"value":978},{"type":561,"tag":652,"props":2108,"children":2109},{"style":951},[2110],{"type":566,"value":954},{"type":561,"tag":652,"props":2112,"children":2113},{"style":945},[2114],{"type":566,"value":987},{"type":561,"tag":652,"props":2116,"children":2117},{"style":951},[2118],{"type":566,"value":992},{"type":561,"tag":652,"props":2120,"children":2121},{"style":945},[2122],{"type":566,"value":997},{"type":561,"tag":652,"props":2124,"children":2125},{"class":654,"line":700},[2126,2130,2134,2138,2142,2146],{"type":561,"tag":652,"props":2127,"children":2128},{"style":970},[2129],{"type":566,"value":973},{"type":561,"tag":652,"props":2131,"children":2132},{"style":945},[2133],{"type":566,"value":978},{"type":561,"tag":652,"props":2135,"children":2136},{"style":951},[2137],{"type":566,"value":1013},{"type":561,"tag":652,"props":2139,"children":2140},{"style":945},[2141],{"type":566,"value":987},{"type":561,"tag":652,"props":2143,"children":2144},{"style":933},[2145],{"type":566,"value":1022},{"type":561,"tag":652,"props":2147,"children":2148},{"style":945},[2149],{"type":566,"value":997},{"type":561,"tag":652,"props":2151,"children":2152},{"class":654,"line":1029},[2153],{"type":561,"tag":652,"props":2154,"children":2155},{"style":945},[2156],{"type":566,"value":1035},{"type":561,"tag":652,"props":2158,"children":2159},{"class":654,"line":1038},[2160],{"type":561,"tag":652,"props":2161,"children":2162},{"emptyLinePlaceholder":1042},[2163],{"type":566,"value":1045},{"type":561,"tag":652,"props":2165,"children":2166},{"class":654,"line":1048},[2167],{"type":561,"tag":652,"props":2168,"children":2169},{"style":908},[2170],{"type":566,"value":911},{"type":561,"tag":652,"props":2172,"children":2173},{"class":654,"line":1056},[2174,2178,2182,2186,2190,2194,2198],{"type":561,"tag":652,"props":2175,"children":2176},{"style":908},[2177],{"type":566,"value":1062},{"type":561,"tag":652,"props":2179,"children":2180},{"style":945},[2181],{"type":566,"value":1067},{"type":561,"tag":652,"props":2183,"children":2184},{"style":1070},[2185],{"type":566,"value":1073},{"type":561,"tag":652,"props":2187,"children":2188},{"style":945},[2189],{"type":566,"value":1078},{"type":561,"tag":652,"props":2191,"children":2192},{"style":1081},[2193],{"type":566,"value":1084},{"type":561,"tag":652,"props":2195,"children":2196},{"style":945},[2197],{"type":566,"value":1089},{"type":561,"tag":652,"props":2199,"children":2200},{"style":951},[2201],{"type":566,"value":1094},{"type":561,"tag":652,"props":2203,"children":2204},{"class":654,"line":1097},[2205,2209,2213,2217,2221,2225,2229],{"type":561,"tag":652,"props":2206,"children":2207},{"style":908},[2208],{"type":566,"value":1062},{"type":561,"tag":652,"props":2210,"children":2211},{"style":945},[2212],{"type":566,"value":1067},{"type":561,"tag":652,"props":2214,"children":2215},{"style":1070},[2216],{"type":566,"value":1073},{"type":561,"tag":652,"props":2218,"children":2219},{"style":945},[2220],{"type":566,"value":1078},{"type":561,"tag":652,"props":2222,"children":2223},{"style":1081},[2224],{"type":566,"value":1084},{"type":561,"tag":652,"props":2226,"children":2227},{"style":945},[2228],{"type":566,"value":1089},{"type":561,"tag":652,"props":2230,"children":2231},{"style":951},[2232],{"type":566,"value":1127},{"type":561,"tag":652,"props":2234,"children":2235},{"class":654,"line":1130},[2236,2240,2244,2248,2252,2256],{"type":561,"tag":652,"props":2237,"children":2238},{"style":908},[2239],{"type":566,"value":1062},{"type":561,"tag":652,"props":2241,"children":2242},{"style":945},[2243],{"type":566,"value":1067},{"type":561,"tag":652,"props":2245,"children":2246},{"style":1070},[2247],{"type":566,"value":1144},{"type":561,"tag":652,"props":2249,"children":2250},{"style":945},[2251],{"type":566,"value":1078},{"type":561,"tag":652,"props":2253,"children":2254},{"style":1081},[2255],{"type":566,"value":1084},{"type":561,"tag":652,"props":2257,"children":2258},{"style":945},[2259],{"type":566,"value":1035},{"type":561,"tag":652,"props":2261,"children":2262},{"class":654,"line":1159},[2263],{"type":561,"tag":652,"props":2264,"children":2265},{"style":908},[2266],{"type":566,"value":927},{"type":561,"tag":652,"props":2268,"children":2269},{"class":654,"line":1167},[2270,2274,2278,2282,2286,2290,2294,2298,2302,2306],{"type":561,"tag":652,"props":2271,"children":2272},{"style":933},[2273],{"type":566,"value":1173},{"type":561,"tag":652,"props":2275,"children":2276},{"style":939},[2277],{"type":566,"value":1178},{"type":561,"tag":652,"props":2279,"children":2280},{"style":945},[2281],{"type":566,"value":987},{"type":561,"tag":652,"props":2283,"children":2284},{"style":933},[2285],{"type":566,"value":1187},{"type":561,"tag":652,"props":2287,"children":2288},{"style":945},[2289],{"type":566,"value":1192},{"type":561,"tag":652,"props":2291,"children":2292},{"style":951},[2293],{"type":566,"value":1197},{"type":561,"tag":652,"props":2295,"children":2296},{"style":945},[2297],{"type":566,"value":1202},{"type":561,"tag":652,"props":2299,"children":2300},{"style":951},[2301],{"type":566,"value":1207},{"type":561,"tag":652,"props":2303,"children":2304},{"style":945},[2305],{"type":566,"value":959},{"type":561,"tag":652,"props":2307,"children":2308},{"style":945},[2309],{"type":566,"value":964},{"type":561,"tag":652,"props":2311,"children":2312},{"class":654,"line":1218},[2313,2317,2321,2325,2329,2333,2337,2341,2345,2349,2353],{"type":561,"tag":652,"props":2314,"children":2315},{"style":1070},[2316],{"type":566,"value":1224},{"type":561,"tag":652,"props":2318,"children":2319},{"style":945},[2320],{"type":566,"value":1192},{"type":561,"tag":652,"props":2322,"children":2323},{"style":933},[2324],{"type":566,"value":1233},{"type":561,"tag":652,"props":2326,"children":2327},{"style":951},[2328],{"type":566,"value":1197},{"type":561,"tag":652,"props":2330,"children":2331},{"style":933},[2332],{"type":566,"value":1242},{"type":561,"tag":652,"props":2334,"children":2335},{"style":933},[2336],{"type":566,"value":1247},{"type":561,"tag":652,"props":2338,"children":2339},{"style":951},[2340],{"type":566,"value":1252},{"type":561,"tag":652,"props":2342,"children":2343},{"style":945},[2344],{"type":566,"value":959},{"type":561,"tag":652,"props":2346,"children":2347},{"style":1070},[2348],{"type":566,"value":1261},{"type":561,"tag":652,"props":2350,"children":2351},{"style":933},[2352],{"type":566,"value":1022},{"type":561,"tag":652,"props":2354,"children":2355},{"style":945},[2356],{"type":566,"value":997},{"type":561,"tag":652,"props":2358,"children":2359},{"class":654,"line":1272},[2360,2364,2369,2373,2378,2383],{"type":561,"tag":652,"props":2361,"children":2362},{"style":933},[2363],{"type":566,"value":1278},{"type":561,"tag":652,"props":2365,"children":2366},{"style":951},[2367],{"type":566,"value":2368}," map",{"type":561,"tag":652,"props":2370,"children":2371},{"style":945},[2372],{"type":566,"value":987},{"type":561,"tag":652,"props":2374,"children":2375},{"style":933},[2376],{"type":566,"value":2377}," new",{"type":561,"tag":652,"props":2379,"children":2380},{"style":939},[2381],{"type":566,"value":2382}," Map",{"type":561,"tag":652,"props":2384,"children":2385},{"style":945},[2386],{"type":566,"value":2387},"();\n",{"type":561,"tag":652,"props":2389,"children":2390},{"class":654,"line":1299},[2391,2395,2399,2403,2407],{"type":561,"tag":652,"props":2392,"children":2393},{"style":933},[2394],{"type":566,"value":1278},{"type":561,"tag":652,"props":2396,"children":2397},{"style":951},[2398],{"type":566,"value":1283},{"type":561,"tag":652,"props":2400,"children":2401},{"style":945},[2402],{"type":566,"value":987},{"type":561,"tag":652,"props":2404,"children":2405},{"style":951},[2406],{"type":566,"value":1292},{"type":561,"tag":652,"props":2408,"children":2409},{"style":945},[2410],{"type":566,"value":997},{"type":561,"tag":652,"props":2412,"children":2413},{"class":654,"line":1325},[2414,2418,2422,2426,2430],{"type":561,"tag":652,"props":2415,"children":2416},{"style":933},[2417],{"type":566,"value":1278},{"type":561,"tag":652,"props":2419,"children":2420},{"style":951},[2421],{"type":566,"value":1336},{"type":561,"tag":652,"props":2423,"children":2424},{"style":945},[2425],{"type":566,"value":987},{"type":561,"tag":652,"props":2427,"children":2428},{"style":951},[2429],{"type":566,"value":1207},{"type":561,"tag":652,"props":2431,"children":2432},{"style":945},[2433],{"type":566,"value":997},{"type":561,"tag":652,"props":2435,"children":2436},{"class":654,"line":1351},[2437,2441,2445,2449,2453],{"type":561,"tag":652,"props":2438,"children":2439},{"style":1070},[2440],{"type":566,"value":1305},{"type":561,"tag":652,"props":2442,"children":2443},{"style":945},[2444],{"type":566,"value":1192},{"type":561,"tag":652,"props":2446,"children":2447},{"style":951},[2448],{"type":566,"value":1314},{"type":561,"tag":652,"props":2450,"children":2451},{"style":945},[2452],{"type":566,"value":959},{"type":561,"tag":652,"props":2454,"children":2455},{"style":945},[2456],{"type":566,"value":964},{"type":561,"tag":652,"props":2458,"children":2459},{"class":654,"line":1377},[2460,2465,2469,2474,2478,2482,2486,2492],{"type":561,"tag":652,"props":2461,"children":2462},{"style":951},[2463],{"type":566,"value":2464},"    map",{"type":561,"tag":652,"props":2466,"children":2467},{"style":945},[2468],{"type":566,"value":978},{"type":561,"tag":652,"props":2470,"children":2471},{"style":939},[2472],{"type":566,"value":2473},"set",{"type":561,"tag":652,"props":2475,"children":2476},{"style":945},[2477],{"type":566,"value":948},{"type":561,"tag":652,"props":2479,"children":2480},{"style":951},[2481],{"type":566,"value":1314},{"type":561,"tag":652,"props":2483,"children":2484},{"style":945},[2485],{"type":566,"value":1202},{"type":561,"tag":652,"props":2487,"children":2489},{"style":2488},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[2490],{"type":566,"value":2491}," 1",{"type":561,"tag":652,"props":2493,"children":2494},{"style":945},[2495],{"type":566,"value":2496},");\n",{"type":561,"tag":652,"props":2498,"children":2499},{"class":654,"line":1419},[2500,2504,2508,2512,2516,2520],{"type":561,"tag":652,"props":2501,"children":2502},{"style":951},[2503],{"type":566,"value":1463},{"type":561,"tag":652,"props":2505,"children":2506},{"style":945},[2507],{"type":566,"value":987},{"type":561,"tag":652,"props":2509,"children":2510},{"style":951},[2511],{"type":566,"value":1283},{"type":561,"tag":652,"props":2513,"children":2514},{"style":945},[2515],{"type":566,"value":978},{"type":561,"tag":652,"props":2517,"children":2518},{"style":951},[2519],{"type":566,"value":1013},{"type":561,"tag":652,"props":2521,"children":2522},{"style":945},[2523],{"type":566,"value":997},{"type":561,"tag":652,"props":2525,"children":2526},{"class":654,"line":1448},[2527],{"type":561,"tag":652,"props":2528,"children":2529},{"style":945},[2530],{"type":566,"value":1492},{"type":561,"tag":652,"props":2532,"children":2533},{"class":654,"line":1457},[2534,2538,2542,2546,2550],{"type":561,"tag":652,"props":2535,"children":2536},{"style":1070},[2537],{"type":566,"value":1305},{"type":561,"tag":652,"props":2539,"children":2540},{"style":945},[2541],{"type":566,"value":1192},{"type":561,"tag":652,"props":2543,"children":2544},{"style":951},[2545],{"type":566,"value":1366},{"type":561,"tag":652,"props":2547,"children":2548},{"style":945},[2549],{"type":566,"value":959},{"type":561,"tag":652,"props":2551,"children":2552},{"style":945},[2553],{"type":566,"value":964},{"type":561,"tag":652,"props":2555,"children":2556},{"class":654,"line":1486},[2557,2562,2566,2571,2575,2580,2584,2588,2593,2597,2601],{"type":561,"tag":652,"props":2558,"children":2559},{"style":1070},[2560],{"type":566,"value":2561},"    if",{"type":561,"tag":652,"props":2563,"children":2564},{"style":945},[2565],{"type":566,"value":1192},{"type":561,"tag":652,"props":2567,"children":2568},{"style":951},[2569],{"type":566,"value":2570},"map",{"type":561,"tag":652,"props":2572,"children":2573},{"style":945},[2574],{"type":566,"value":978},{"type":561,"tag":652,"props":2576,"children":2577},{"style":939},[2578],{"type":566,"value":2579},"has",{"type":561,"tag":652,"props":2581,"children":2582},{"style":945},[2583],{"type":566,"value":948},{"type":561,"tag":652,"props":2585,"children":2586},{"style":951},[2587],{"type":566,"value":1366},{"type":561,"tag":652,"props":2589,"children":2590},{"style":945},[2591],{"type":566,"value":2592},"))",{"type":561,"tag":652,"props":2594,"children":2595},{"style":1070},[2596],{"type":566,"value":1261},{"type":561,"tag":652,"props":2598,"children":2599},{"style":951},[2600],{"type":566,"value":1336},{"type":561,"tag":652,"props":2602,"children":2603},{"style":945},[2604],{"type":566,"value":997},{"type":561,"tag":652,"props":2606,"children":2607},{"class":654,"line":1495},[2608,2612,2616,2620,2624,2628],{"type":561,"tag":652,"props":2609,"children":2610},{"style":951},[2611],{"type":566,"value":1970},{"type":561,"tag":652,"props":2613,"children":2614},{"style":945},[2615],{"type":566,"value":987},{"type":561,"tag":652,"props":2617,"children":2618},{"style":951},[2619],{"type":566,"value":1336},{"type":561,"tag":652,"props":2621,"children":2622},{"style":945},[2623],{"type":566,"value":978},{"type":561,"tag":652,"props":2625,"children":2626},{"style":951},[2627],{"type":566,"value":1013},{"type":561,"tag":652,"props":2629,"children":2630},{"style":945},[2631],{"type":566,"value":997},{"type":561,"tag":652,"props":2633,"children":2634},{"class":654,"line":1512},[2635],{"type":561,"tag":652,"props":2636,"children":2637},{"style":945},[2638],{"type":566,"value":1492},{"type":561,"tag":652,"props":2640,"children":2642},{"class":654,"line":2641},27,[2643],{"type":561,"tag":652,"props":2644,"children":2645},{"style":945},[2646],{"type":566,"value":1518},{"type":561,"tag":2648,"props":2649,"children":2650},"style",{},[2651],{"type":566,"value":2652},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":554,"searchDepth":691,"depth":691,"links":2654},[2655,2656],{"id":880,"depth":664,"text":880},{"id":885,"depth":664,"text":885,"children":2657},[2658,2659,2660],{"id":891,"depth":673,"text":891},{"id":1521,"depth":673,"text":1521},{"id":2038,"depth":673,"text":2038},"markdown","content:1.algorithm:3.leetcode:3.major:160.intersection-of-two-linked-lists.md","content","1.algorithm/3.leetcode/3.major/160.intersection-of-two-linked-lists.md","md",[2667,2669],{"_path":186,"title":185,"description":2668},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",{"_path":192,"title":191,"description":2670},"峰值元素是指其值严格大于左右相邻值的元素。",1715092076729]