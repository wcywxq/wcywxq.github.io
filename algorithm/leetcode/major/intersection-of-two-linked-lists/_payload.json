[{"data":1,"prerenderedAt":2679},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/intersection-of-two-linked-lists":559,"/algorithm/leetcode/major/intersection-of-two-linked-lists-surround":2674},[4,272,318,536,544],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":317},"八股文","/endorsement",[276,286,293,304],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"JavaScript","/endorsement/javascript",[290],{"title":291,"_path":292},"语法和数据类型","/endorsement/javascript/grammar-data-types",{"title":294,"_path":295,"children":296},"构建工具","/endorsement/build-tools",[297],{"title":298,"_path":299,"children":300},"Webpack","/endorsement/build-tools/webpack",[301],{"title":302,"_path":303},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":305,"_path":306,"children":307},"Html","/endorsement/html",[308,311,314],{"title":309,"_path":310},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":312,"_path":313},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":315,"_path":316},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":319,"_path":320,"children":321,"icon":535},"代码考核","/code-assessment",[322,427,528],{"title":323,"_path":324,"children":325},"源码实现","/code-assessment/source",[326,360,376,404,411,418,421,424],{"title":327,"_path":328,"children":329},"原生 api","/code-assessment/source/native-api",[330,333,336,339,342,345,348,351,354,357],{"title":331,"_path":332},"polyfill","/code-assessment/source/native-api/polyfill",{"title":334,"_path":335},"ajax","/code-assessment/source/native-api/ajax",{"title":337,"_path":338},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":340,"_path":341},"new 操作符","/code-assessment/source/native-api/new",{"title":343,"_path":344},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":346,"_path":347},"定时器","/code-assessment/source/native-api/timer",{"title":349,"_path":350},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":352,"_path":353},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":355,"_path":356},"extends","/code-assessment/source/native-api/extends",{"title":358,"_path":359},"Promise","/code-assessment/source/native-api/promise",{"title":361,"_path":362,"children":363},"函数 Function","/code-assessment/source/function",[364,367,370,373],{"title":365,"_path":366},"函数防抖","/code-assessment/source/function/debounce",{"title":368,"_path":369},"函数节流","/code-assessment/source/function/throttle",{"title":371,"_path":372},"函数柯理化","/code-assessment/source/function/curry",{"title":374,"_path":375},"函数睡眠","/code-assessment/source/function/sleep",{"title":377,"_path":378,"children":379},"数组 Array","/code-assessment/source/array",[380,383,386,389,392,395,398,401],{"title":381,"_path":382},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":384,"_path":385},"数组扁平化","/code-assessment/source/array/flat",{"title":387,"_path":388},"原型方法","/code-assessment/source/array/prototype-method",{"title":390,"_path":391},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":393,"_path":394},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":396,"_path":397},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":399,"_path":400},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":402,"_path":403},"二维数组","/code-assessment/source/array/2d-array",{"title":405,"_path":406,"children":407},"字符串 String","/code-assessment/source/string",[408],{"title":409,"_path":410},"repeat()","/code-assessment/source/string/repeat",{"title":412,"_path":413,"children":414},"集合 Set","/code-assessment/source/set",[415],{"title":416,"_path":417},"遍历集合","/code-assessment/source/set/traverse",{"title":419,"_path":420},"获取通用类型","/code-assessment/source/get-generic-type",{"title":422,"_path":423},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":425,"_path":426},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":428,"_path":429,"children":430},"业务场景","/code-assessment/scene",[431,461,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525],{"title":358,"_path":432,"children":433},"/code-assessment/scene/promise",[434,437,440,443,446,449,452,455,458],{"title":435,"_path":436},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":438,"_path":439},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":441,"_path":442},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":444,"_path":445},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":447,"_path":448},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":450,"_path":451},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":453,"_path":454},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":456,"_path":457},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":459,"_path":460},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":462,"_path":463,"children":464},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[465,468],{"title":466,"_path":467},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":469,"_path":470},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":472,"_path":473},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":475,"_path":476},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":478,"_path":479},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":481,"_path":482},"倒计时","/code-assessment/scene/countdown",{"title":484,"_path":485},"日期格式化","/code-assessment/scene/date-format",{"title":487,"_path":488},"实现前端路由","/code-assessment/scene/frontend-route",{"title":490,"_path":491},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":493,"_path":494},"lodash.get","/code-assessment/scene/lodash-get",{"title":496,"_path":497},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":499,"_path":500},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":502,"_path":503},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":505,"_path":506},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":508,"_path":509},"随机数","/code-assessment/scene/random-number",{"title":511,"_path":512},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":514,"_path":515},"sku 算法实现","/code-assessment/scene/sku",{"title":517,"_path":518},"整数分割","/code-assessment/scene/split-number",{"title":520,"_path":521},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":523,"_path":524},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":526,"_path":527},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":529,"_path":530,"children":531},"Ts 类型挑战","/code-assessment/type-challeges",[532],{"title":533,"_path":534},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":537,"_path":538,"children":539,"icon":543},"项目","/project",[540],{"title":541,"_path":542},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":545,"_path":546,"children":547,"icon":558},"后端语言","/backend-languages",[548],{"title":549,"_path":550,"children":551},"Python","/backend-languages/python",[552,555],{"title":553,"_path":554},"基础","/backend-languages/python/base",{"title":556,"_path":557},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":189,"_dir":560,"_draft":561,"_partial":561,"_locale":562,"title":188,"description":563,"url":564,"body":565,"_type":2669,"_id":2670,"_source":2671,"_file":2672,"_extension":2673},"major",false,"","给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。","https://leetcode.cn/problems/intersection-of-two-linked-lists",{"type":566,"children":567,"toc":2661},"root",[568,575,580,589,594,599,604,609,639,649,715,725,772,777,785,832,837,880,885,891,896,902,1527,1532,2044,2049,2655],{"type":569,"tag":570,"props":571,"children":572},"element","p",{},[573],{"type":574,"value":563},"text",{"type":569,"tag":570,"props":576,"children":577},{},[578],{"type":574,"value":579},"图示两个链表在节点 c1 开始相交：",{"type":569,"tag":570,"props":581,"children":582},{},[583],{"type":569,"tag":584,"props":585,"children":588},"img",{"alt":586,"src":587},"statement","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.160_statement.png",[],{"type":569,"tag":570,"props":590,"children":591},{},[592],{"type":574,"value":593},"题目数据 保证 整个链式结构中不存在环。",{"type":569,"tag":570,"props":595,"children":596},{},[597],{"type":574,"value":598},"注意，函数返回结果后，链表必须 保持其原始结构 。",{"type":569,"tag":570,"props":600,"children":601},{},[602],{"type":574,"value":603},"自定义评测：",{"type":569,"tag":570,"props":605,"children":606},{},[607],{"type":574,"value":608},"评测系统 的输入如下（你设计的程序 不适用 此输入）：",{"type":569,"tag":610,"props":611,"children":612},"ul",{},[613,619,624,629,634],{"type":569,"tag":614,"props":615,"children":616},"li",{},[617],{"type":574,"value":618},"intersectVal - 相交的起始节点的值。如果不存在相交节点，这一值为 0",{"type":569,"tag":614,"props":620,"children":621},{},[622],{"type":574,"value":623},"listA - 第一个链表",{"type":569,"tag":614,"props":625,"children":626},{},[627],{"type":574,"value":628},"listB - 第二个链表",{"type":569,"tag":614,"props":630,"children":631},{},[632],{"type":574,"value":633},"skipA - 在 listA 中（从头节点开始）跳到交叉节点的节点数",{"type":569,"tag":614,"props":635,"children":636},{},[637],{"type":574,"value":638},"skipB - 在 listB 中（从头节点开始）跳到交叉节点的节点数\n评测系统将根据这些输入创建链式数据结构，并将两个头节点 headA 和 headB 传递给你的程序。如果程序能够正确返回相交节点，那么你的解决方案将被 视作正确答案 。",{"type":569,"tag":570,"props":640,"children":641},{},[642,644],{"type":574,"value":643},"示例 1：\n",{"type":569,"tag":584,"props":645,"children":648},{"alt":646,"src":647},"example_1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.160_example_1.png",[],{"type":569,"tag":650,"props":651,"children":654},"pre",{"className":652,"code":653,"language":574,"meta":562,"style":562},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：intersectVal = 8, listA = [4,1,8,4,5], listB = [5,6,1,8,4,5], skipA = 2, skipB = 3\n输出：Intersected at '8'\n解释：相交节点的值为 8 （注意，如果两个链表相交则不能为 0）。\n从各自的表头开始算起，链表 A 为 [4,1,8,4,5]，链表 B 为 [5,6,1,8,4,5]。\n在 A 中，相交节点前有 2 个节点；在 B 中，相交节点前有 3 个节点。\n— 请注意相交节点的值不为 1，因为在链表 A 和链表 B 之中值为 1 的节点 (A 中第二个节点和 B 中第三个节点) 是不同的节点。换句话说，它们在内存中指向两个不同的位置，而链表 A 和链表 B 中值为 8 的节点 (A 中第三个节点，B 中第四个节点) 在内存中指向相同的位置。\n",[655],{"type":569,"tag":656,"props":657,"children":658},"code",{"__ignoreMap":562},[659,670,679,688,697,706],{"type":569,"tag":660,"props":661,"children":664},"span",{"class":662,"line":663},"line",1,[665],{"type":569,"tag":660,"props":666,"children":667},{},[668],{"type":574,"value":669},"输入：intersectVal = 8, listA = [4,1,8,4,5], listB = [5,6,1,8,4,5], skipA = 2, skipB = 3\n",{"type":569,"tag":660,"props":671,"children":673},{"class":662,"line":672},2,[674],{"type":569,"tag":660,"props":675,"children":676},{},[677],{"type":574,"value":678},"输出：Intersected at '8'\n",{"type":569,"tag":660,"props":680,"children":682},{"class":662,"line":681},3,[683],{"type":569,"tag":660,"props":684,"children":685},{},[686],{"type":574,"value":687},"解释：相交节点的值为 8 （注意，如果两个链表相交则不能为 0）。\n",{"type":569,"tag":660,"props":689,"children":691},{"class":662,"line":690},4,[692],{"type":569,"tag":660,"props":693,"children":694},{},[695],{"type":574,"value":696},"从各自的表头开始算起，链表 A 为 [4,1,8,4,5]，链表 B 为 [5,6,1,8,4,5]。\n",{"type":569,"tag":660,"props":698,"children":700},{"class":662,"line":699},5,[701],{"type":569,"tag":660,"props":702,"children":703},{},[704],{"type":574,"value":705},"在 A 中，相交节点前有 2 个节点；在 B 中，相交节点前有 3 个节点。\n",{"type":569,"tag":660,"props":707,"children":709},{"class":662,"line":708},6,[710],{"type":569,"tag":660,"props":711,"children":712},{},[713],{"type":574,"value":714},"— 请注意相交节点的值不为 1，因为在链表 A 和链表 B 之中值为 1 的节点 (A 中第二个节点和 B 中第三个节点) 是不同的节点。换句话说，它们在内存中指向两个不同的位置，而链表 A 和链表 B 中值为 8 的节点 (A 中第三个节点，B 中第四个节点) 在内存中指向相同的位置。\n",{"type":569,"tag":570,"props":716,"children":717},{},[718,720],{"type":574,"value":719},"示例 2：\n",{"type":569,"tag":584,"props":721,"children":724},{"alt":722,"src":723},"example_2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.160_example_2.png",[],{"type":569,"tag":650,"props":726,"children":728},{"className":652,"code":727,"language":574,"meta":562,"style":562},"输入：intersectVal = 2, listA = [1,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1\n输出：Intersected at '2'\n解释：相交节点的值为 2 （注意，如果两个链表相交则不能为 0）。\n从各自的表头开始算起，链表 A 为 [1,9,1,2,4]，链表 B 为 [3,2,4]。\n在 A 中，相交节点前有 3 个节点；在 B 中，相交节点前有 1 个节点。\n",[729],{"type":569,"tag":656,"props":730,"children":731},{"__ignoreMap":562},[732,740,748,756,764],{"type":569,"tag":660,"props":733,"children":734},{"class":662,"line":663},[735],{"type":569,"tag":660,"props":736,"children":737},{},[738],{"type":574,"value":739},"输入：intersectVal = 2, listA = [1,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1\n",{"type":569,"tag":660,"props":741,"children":742},{"class":662,"line":672},[743],{"type":569,"tag":660,"props":744,"children":745},{},[746],{"type":574,"value":747},"输出：Intersected at '2'\n",{"type":569,"tag":660,"props":749,"children":750},{"class":662,"line":681},[751],{"type":569,"tag":660,"props":752,"children":753},{},[754],{"type":574,"value":755},"解释：相交节点的值为 2 （注意，如果两个链表相交则不能为 0）。\n",{"type":569,"tag":660,"props":757,"children":758},{"class":662,"line":690},[759],{"type":569,"tag":660,"props":760,"children":761},{},[762],{"type":574,"value":763},"从各自的表头开始算起，链表 A 为 [1,9,1,2,4]，链表 B 为 [3,2,4]。\n",{"type":569,"tag":660,"props":765,"children":766},{"class":662,"line":699},[767],{"type":569,"tag":660,"props":768,"children":769},{},[770],{"type":574,"value":771},"在 A 中，相交节点前有 3 个节点；在 B 中，相交节点前有 1 个节点。\n",{"type":569,"tag":570,"props":773,"children":774},{},[775],{"type":574,"value":776},"示例 3：",{"type":569,"tag":570,"props":778,"children":779},{},[780],{"type":569,"tag":584,"props":781,"children":784},{"alt":782,"src":783},"example_3","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.160_example_3.png",[],{"type":569,"tag":650,"props":786,"children":788},{"className":652,"code":787,"language":574,"meta":562,"style":562},"输入：intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2\n输出：null\n解释：从各自的表头开始算起，链表 A 为 [2,6,4]，链表 B 为 [1,5]。\n由于这两个链表不相交，所以 intersectVal 必须为 0，而 skipA 和 skipB 可以是任意值。\n这两个链表不相交，因此返回 null 。\n",[789],{"type":569,"tag":656,"props":790,"children":791},{"__ignoreMap":562},[792,800,808,816,824],{"type":569,"tag":660,"props":793,"children":794},{"class":662,"line":663},[795],{"type":569,"tag":660,"props":796,"children":797},{},[798],{"type":574,"value":799},"输入：intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2\n",{"type":569,"tag":660,"props":801,"children":802},{"class":662,"line":672},[803],{"type":569,"tag":660,"props":804,"children":805},{},[806],{"type":574,"value":807},"输出：null\n",{"type":569,"tag":660,"props":809,"children":810},{"class":662,"line":681},[811],{"type":569,"tag":660,"props":812,"children":813},{},[814],{"type":574,"value":815},"解释：从各自的表头开始算起，链表 A 为 [2,6,4]，链表 B 为 [1,5]。\n",{"type":569,"tag":660,"props":817,"children":818},{"class":662,"line":690},[819],{"type":569,"tag":660,"props":820,"children":821},{},[822],{"type":574,"value":823},"由于这两个链表不相交，所以 intersectVal 必须为 0，而 skipA 和 skipB 可以是任意值。\n",{"type":569,"tag":660,"props":825,"children":826},{"class":662,"line":699},[827],{"type":569,"tag":660,"props":828,"children":829},{},[830],{"type":574,"value":831},"这两个链表不相交，因此返回 null 。\n",{"type":569,"tag":570,"props":833,"children":834},{},[835],{"type":574,"value":836},"提示：",{"type":569,"tag":610,"props":838,"children":839},{},[840,845,850,855,860,865,870,875],{"type":569,"tag":614,"props":841,"children":842},{},[843],{"type":574,"value":844},"listA 中节点数目为 m",{"type":569,"tag":614,"props":846,"children":847},{},[848],{"type":574,"value":849},"listB 中节点数目为 n",{"type":569,"tag":614,"props":851,"children":852},{},[853],{"type":574,"value":854},"1 \u003C= m, n \u003C= 3 * 10^4",{"type":569,"tag":614,"props":856,"children":857},{},[858],{"type":574,"value":859},"1 \u003C= Node.val \u003C= 10^5",{"type":569,"tag":614,"props":861,"children":862},{},[863],{"type":574,"value":864},"0 \u003C= skipA \u003C= m",{"type":569,"tag":614,"props":866,"children":867},{},[868],{"type":574,"value":869},"0 \u003C= skipB \u003C= n",{"type":569,"tag":614,"props":871,"children":872},{},[873],{"type":574,"value":874},"如果 listA 和 listB 没有交点，intersectVal 为 0",{"type":569,"tag":614,"props":876,"children":877},{},[878],{"type":574,"value":879},"如果 listA 和 listB 有交点，intersectVal == listA[skipA] == listB[skipB]",{"type":569,"tag":570,"props":881,"children":882},{},[883],{"type":574,"value":884},"进阶：你能否设计一个时间复杂度 O(m + n) 、仅用 O(1) 内存的解决方案？",{"type":569,"tag":886,"props":887,"children":889},"h2",{"id":888},"解题思路",[890],{"type":574,"value":888},{"type":569,"tag":886,"props":892,"children":894},{"id":893},"实现",[895],{"type":574,"value":893},{"type":569,"tag":897,"props":898,"children":900},"h3",{"id":899},"暴力破解",[901],{"type":574,"value":899},{"type":569,"tag":650,"props":903,"children":907},{"className":904,"code":905,"language":906,"meta":562,"style":562},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n */\nfunction ListNode(val) {\n  this.val = val;\n  this.next = null;\n}\n\n/**\n * @param {ListNode} headA\n * @param {ListNode} headB\n * @return {ListNode}\n */\nvar getIntersectionNode = function (headA, headB) {\n  if (!headA || !headB) return null;\n  let pA = headA;\n  while (pA) {\n    let pB = headB;\n    while (pB) {\n      if (pA === pB) return pA;\n      pB = pB.next;\n    }\n    pA = pA.next;\n  }\n  return pA;\n};\n","js",[908],{"type":569,"tag":656,"props":909,"children":910},{"__ignoreMap":562},[911,920,928,936,973,1006,1035,1044,1054,1062,1103,1136,1165,1173,1224,1278,1305,1331,1357,1383,1425,1454,1463,1492,1501,1518],{"type":569,"tag":660,"props":912,"children":913},{"class":662,"line":663},[914],{"type":569,"tag":660,"props":915,"children":917},{"style":916},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[918],{"type":574,"value":919},"/**\n",{"type":569,"tag":660,"props":921,"children":922},{"class":662,"line":672},[923],{"type":569,"tag":660,"props":924,"children":925},{"style":916},[926],{"type":574,"value":927}," * Definition for singly-linked list.\n",{"type":569,"tag":660,"props":929,"children":930},{"class":662,"line":681},[931],{"type":569,"tag":660,"props":932,"children":933},{"style":916},[934],{"type":574,"value":935}," */\n",{"type":569,"tag":660,"props":937,"children":938},{"class":662,"line":690},[939,945,951,957,963,968],{"type":569,"tag":660,"props":940,"children":942},{"style":941},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[943],{"type":574,"value":944},"function",{"type":569,"tag":660,"props":946,"children":948},{"style":947},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[949],{"type":574,"value":950}," ListNode",{"type":569,"tag":660,"props":952,"children":954},{"style":953},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[955],{"type":574,"value":956},"(",{"type":569,"tag":660,"props":958,"children":960},{"style":959},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[961],{"type":574,"value":962},"val",{"type":569,"tag":660,"props":964,"children":965},{"style":953},[966],{"type":574,"value":967},")",{"type":569,"tag":660,"props":969,"children":970},{"style":953},[971],{"type":574,"value":972}," {\n",{"type":569,"tag":660,"props":974,"children":975},{"class":662,"line":699},[976,982,987,991,996,1001],{"type":569,"tag":660,"props":977,"children":979},{"style":978},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[980],{"type":574,"value":981},"  this",{"type":569,"tag":660,"props":983,"children":984},{"style":953},[985],{"type":574,"value":986},".",{"type":569,"tag":660,"props":988,"children":989},{"style":959},[990],{"type":574,"value":962},{"type":569,"tag":660,"props":992,"children":993},{"style":953},[994],{"type":574,"value":995}," =",{"type":569,"tag":660,"props":997,"children":998},{"style":959},[999],{"type":574,"value":1000}," val",{"type":569,"tag":660,"props":1002,"children":1003},{"style":953},[1004],{"type":574,"value":1005},";\n",{"type":569,"tag":660,"props":1007,"children":1008},{"class":662,"line":708},[1009,1013,1017,1022,1026,1031],{"type":569,"tag":660,"props":1010,"children":1011},{"style":978},[1012],{"type":574,"value":981},{"type":569,"tag":660,"props":1014,"children":1015},{"style":953},[1016],{"type":574,"value":986},{"type":569,"tag":660,"props":1018,"children":1019},{"style":959},[1020],{"type":574,"value":1021},"next",{"type":569,"tag":660,"props":1023,"children":1024},{"style":953},[1025],{"type":574,"value":995},{"type":569,"tag":660,"props":1027,"children":1028},{"style":941},[1029],{"type":574,"value":1030}," null",{"type":569,"tag":660,"props":1032,"children":1033},{"style":953},[1034],{"type":574,"value":1005},{"type":569,"tag":660,"props":1036,"children":1038},{"class":662,"line":1037},7,[1039],{"type":569,"tag":660,"props":1040,"children":1041},{"style":953},[1042],{"type":574,"value":1043},"}\n",{"type":569,"tag":660,"props":1045,"children":1047},{"class":662,"line":1046},8,[1048],{"type":569,"tag":660,"props":1049,"children":1051},{"emptyLinePlaceholder":1050},true,[1052],{"type":574,"value":1053},"\n",{"type":569,"tag":660,"props":1055,"children":1057},{"class":662,"line":1056},9,[1058],{"type":569,"tag":660,"props":1059,"children":1060},{"style":916},[1061],{"type":574,"value":919},{"type":569,"tag":660,"props":1063,"children":1065},{"class":662,"line":1064},10,[1066,1071,1076,1082,1087,1093,1098],{"type":569,"tag":660,"props":1067,"children":1068},{"style":916},[1069],{"type":574,"value":1070}," * ",{"type":569,"tag":660,"props":1072,"children":1073},{"style":953},[1074],{"type":574,"value":1075},"@",{"type":569,"tag":660,"props":1077,"children":1079},{"style":1078},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[1080],{"type":574,"value":1081},"param",{"type":569,"tag":660,"props":1083,"children":1084},{"style":953},[1085],{"type":574,"value":1086}," {",{"type":569,"tag":660,"props":1088,"children":1090},{"style":1089},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[1091],{"type":574,"value":1092},"ListNode",{"type":569,"tag":660,"props":1094,"children":1095},{"style":953},[1096],{"type":574,"value":1097},"}",{"type":569,"tag":660,"props":1099,"children":1100},{"style":959},[1101],{"type":574,"value":1102}," headA\n",{"type":569,"tag":660,"props":1104,"children":1106},{"class":662,"line":1105},11,[1107,1111,1115,1119,1123,1127,1131],{"type":569,"tag":660,"props":1108,"children":1109},{"style":916},[1110],{"type":574,"value":1070},{"type":569,"tag":660,"props":1112,"children":1113},{"style":953},[1114],{"type":574,"value":1075},{"type":569,"tag":660,"props":1116,"children":1117},{"style":1078},[1118],{"type":574,"value":1081},{"type":569,"tag":660,"props":1120,"children":1121},{"style":953},[1122],{"type":574,"value":1086},{"type":569,"tag":660,"props":1124,"children":1125},{"style":1089},[1126],{"type":574,"value":1092},{"type":569,"tag":660,"props":1128,"children":1129},{"style":953},[1130],{"type":574,"value":1097},{"type":569,"tag":660,"props":1132,"children":1133},{"style":959},[1134],{"type":574,"value":1135}," headB\n",{"type":569,"tag":660,"props":1137,"children":1139},{"class":662,"line":1138},12,[1140,1144,1148,1153,1157,1161],{"type":569,"tag":660,"props":1141,"children":1142},{"style":916},[1143],{"type":574,"value":1070},{"type":569,"tag":660,"props":1145,"children":1146},{"style":953},[1147],{"type":574,"value":1075},{"type":569,"tag":660,"props":1149,"children":1150},{"style":1078},[1151],{"type":574,"value":1152},"return",{"type":569,"tag":660,"props":1154,"children":1155},{"style":953},[1156],{"type":574,"value":1086},{"type":569,"tag":660,"props":1158,"children":1159},{"style":1089},[1160],{"type":574,"value":1092},{"type":569,"tag":660,"props":1162,"children":1163},{"style":953},[1164],{"type":574,"value":1043},{"type":569,"tag":660,"props":1166,"children":1168},{"class":662,"line":1167},13,[1169],{"type":569,"tag":660,"props":1170,"children":1171},{"style":916},[1172],{"type":574,"value":935},{"type":569,"tag":660,"props":1174,"children":1176},{"class":662,"line":1175},14,[1177,1182,1187,1191,1196,1201,1206,1211,1216,1220],{"type":569,"tag":660,"props":1178,"children":1179},{"style":941},[1180],{"type":574,"value":1181},"var",{"type":569,"tag":660,"props":1183,"children":1184},{"style":947},[1185],{"type":574,"value":1186}," getIntersectionNode",{"type":569,"tag":660,"props":1188,"children":1189},{"style":953},[1190],{"type":574,"value":995},{"type":569,"tag":660,"props":1192,"children":1193},{"style":941},[1194],{"type":574,"value":1195}," function",{"type":569,"tag":660,"props":1197,"children":1198},{"style":953},[1199],{"type":574,"value":1200}," (",{"type":569,"tag":660,"props":1202,"children":1203},{"style":959},[1204],{"type":574,"value":1205},"headA",{"type":569,"tag":660,"props":1207,"children":1208},{"style":953},[1209],{"type":574,"value":1210},",",{"type":569,"tag":660,"props":1212,"children":1213},{"style":959},[1214],{"type":574,"value":1215}," headB",{"type":569,"tag":660,"props":1217,"children":1218},{"style":953},[1219],{"type":574,"value":967},{"type":569,"tag":660,"props":1221,"children":1222},{"style":953},[1223],{"type":574,"value":972},{"type":569,"tag":660,"props":1225,"children":1227},{"class":662,"line":1226},15,[1228,1233,1237,1242,1246,1251,1256,1261,1265,1270,1274],{"type":569,"tag":660,"props":1229,"children":1230},{"style":1078},[1231],{"type":574,"value":1232},"  if",{"type":569,"tag":660,"props":1234,"children":1235},{"style":953},[1236],{"type":574,"value":1200},{"type":569,"tag":660,"props":1238,"children":1239},{"style":941},[1240],{"type":574,"value":1241},"!",{"type":569,"tag":660,"props":1243,"children":1244},{"style":959},[1245],{"type":574,"value":1205},{"type":569,"tag":660,"props":1247,"children":1248},{"style":941},[1249],{"type":574,"value":1250}," ||",{"type":569,"tag":660,"props":1252,"children":1253},{"style":941},[1254],{"type":574,"value":1255}," !",{"type":569,"tag":660,"props":1257,"children":1258},{"style":959},[1259],{"type":574,"value":1260},"headB",{"type":569,"tag":660,"props":1262,"children":1263},{"style":953},[1264],{"type":574,"value":967},{"type":569,"tag":660,"props":1266,"children":1267},{"style":1078},[1268],{"type":574,"value":1269}," return",{"type":569,"tag":660,"props":1271,"children":1272},{"style":941},[1273],{"type":574,"value":1030},{"type":569,"tag":660,"props":1275,"children":1276},{"style":953},[1277],{"type":574,"value":1005},{"type":569,"tag":660,"props":1279,"children":1281},{"class":662,"line":1280},16,[1282,1287,1292,1296,1301],{"type":569,"tag":660,"props":1283,"children":1284},{"style":941},[1285],{"type":574,"value":1286},"  let",{"type":569,"tag":660,"props":1288,"children":1289},{"style":959},[1290],{"type":574,"value":1291}," pA",{"type":569,"tag":660,"props":1293,"children":1294},{"style":953},[1295],{"type":574,"value":995},{"type":569,"tag":660,"props":1297,"children":1298},{"style":959},[1299],{"type":574,"value":1300}," headA",{"type":569,"tag":660,"props":1302,"children":1303},{"style":953},[1304],{"type":574,"value":1005},{"type":569,"tag":660,"props":1306,"children":1308},{"class":662,"line":1307},17,[1309,1314,1318,1323,1327],{"type":569,"tag":660,"props":1310,"children":1311},{"style":1078},[1312],{"type":574,"value":1313},"  while",{"type":569,"tag":660,"props":1315,"children":1316},{"style":953},[1317],{"type":574,"value":1200},{"type":569,"tag":660,"props":1319,"children":1320},{"style":959},[1321],{"type":574,"value":1322},"pA",{"type":569,"tag":660,"props":1324,"children":1325},{"style":953},[1326],{"type":574,"value":967},{"type":569,"tag":660,"props":1328,"children":1329},{"style":953},[1330],{"type":574,"value":972},{"type":569,"tag":660,"props":1332,"children":1334},{"class":662,"line":1333},18,[1335,1340,1345,1349,1353],{"type":569,"tag":660,"props":1336,"children":1337},{"style":941},[1338],{"type":574,"value":1339},"    let",{"type":569,"tag":660,"props":1341,"children":1342},{"style":959},[1343],{"type":574,"value":1344}," pB",{"type":569,"tag":660,"props":1346,"children":1347},{"style":953},[1348],{"type":574,"value":995},{"type":569,"tag":660,"props":1350,"children":1351},{"style":959},[1352],{"type":574,"value":1215},{"type":569,"tag":660,"props":1354,"children":1355},{"style":953},[1356],{"type":574,"value":1005},{"type":569,"tag":660,"props":1358,"children":1360},{"class":662,"line":1359},19,[1361,1366,1370,1375,1379],{"type":569,"tag":660,"props":1362,"children":1363},{"style":1078},[1364],{"type":574,"value":1365},"    while",{"type":569,"tag":660,"props":1367,"children":1368},{"style":953},[1369],{"type":574,"value":1200},{"type":569,"tag":660,"props":1371,"children":1372},{"style":959},[1373],{"type":574,"value":1374},"pB",{"type":569,"tag":660,"props":1376,"children":1377},{"style":953},[1378],{"type":574,"value":967},{"type":569,"tag":660,"props":1380,"children":1381},{"style":953},[1382],{"type":574,"value":972},{"type":569,"tag":660,"props":1384,"children":1386},{"class":662,"line":1385},20,[1387,1392,1396,1400,1405,1409,1413,1417,1421],{"type":569,"tag":660,"props":1388,"children":1389},{"style":1078},[1390],{"type":574,"value":1391},"      if",{"type":569,"tag":660,"props":1393,"children":1394},{"style":953},[1395],{"type":574,"value":1200},{"type":569,"tag":660,"props":1397,"children":1398},{"style":959},[1399],{"type":574,"value":1322},{"type":569,"tag":660,"props":1401,"children":1402},{"style":941},[1403],{"type":574,"value":1404}," ===",{"type":569,"tag":660,"props":1406,"children":1407},{"style":959},[1408],{"type":574,"value":1344},{"type":569,"tag":660,"props":1410,"children":1411},{"style":953},[1412],{"type":574,"value":967},{"type":569,"tag":660,"props":1414,"children":1415},{"style":1078},[1416],{"type":574,"value":1269},{"type":569,"tag":660,"props":1418,"children":1419},{"style":959},[1420],{"type":574,"value":1291},{"type":569,"tag":660,"props":1422,"children":1423},{"style":953},[1424],{"type":574,"value":1005},{"type":569,"tag":660,"props":1426,"children":1428},{"class":662,"line":1427},21,[1429,1434,1438,1442,1446,1450],{"type":569,"tag":660,"props":1430,"children":1431},{"style":959},[1432],{"type":574,"value":1433},"      pB",{"type":569,"tag":660,"props":1435,"children":1436},{"style":953},[1437],{"type":574,"value":995},{"type":569,"tag":660,"props":1439,"children":1440},{"style":959},[1441],{"type":574,"value":1344},{"type":569,"tag":660,"props":1443,"children":1444},{"style":953},[1445],{"type":574,"value":986},{"type":569,"tag":660,"props":1447,"children":1448},{"style":959},[1449],{"type":574,"value":1021},{"type":569,"tag":660,"props":1451,"children":1452},{"style":953},[1453],{"type":574,"value":1005},{"type":569,"tag":660,"props":1455,"children":1457},{"class":662,"line":1456},22,[1458],{"type":569,"tag":660,"props":1459,"children":1460},{"style":953},[1461],{"type":574,"value":1462},"    }\n",{"type":569,"tag":660,"props":1464,"children":1466},{"class":662,"line":1465},23,[1467,1472,1476,1480,1484,1488],{"type":569,"tag":660,"props":1468,"children":1469},{"style":959},[1470],{"type":574,"value":1471},"    pA",{"type":569,"tag":660,"props":1473,"children":1474},{"style":953},[1475],{"type":574,"value":995},{"type":569,"tag":660,"props":1477,"children":1478},{"style":959},[1479],{"type":574,"value":1291},{"type":569,"tag":660,"props":1481,"children":1482},{"style":953},[1483],{"type":574,"value":986},{"type":569,"tag":660,"props":1485,"children":1486},{"style":959},[1487],{"type":574,"value":1021},{"type":569,"tag":660,"props":1489,"children":1490},{"style":953},[1491],{"type":574,"value":1005},{"type":569,"tag":660,"props":1493,"children":1495},{"class":662,"line":1494},24,[1496],{"type":569,"tag":660,"props":1497,"children":1498},{"style":953},[1499],{"type":574,"value":1500},"  }\n",{"type":569,"tag":660,"props":1502,"children":1504},{"class":662,"line":1503},25,[1505,1510,1514],{"type":569,"tag":660,"props":1506,"children":1507},{"style":1078},[1508],{"type":574,"value":1509},"  return",{"type":569,"tag":660,"props":1511,"children":1512},{"style":959},[1513],{"type":574,"value":1291},{"type":569,"tag":660,"props":1515,"children":1516},{"style":953},[1517],{"type":574,"value":1005},{"type":569,"tag":660,"props":1519,"children":1521},{"class":662,"line":1520},26,[1522],{"type":569,"tag":660,"props":1523,"children":1524},{"style":953},[1525],{"type":574,"value":1526},"};\n",{"type":569,"tag":897,"props":1528,"children":1530},{"id":1529},"双指针",[1531],{"type":574,"value":1529},{"type":569,"tag":650,"props":1533,"children":1535},{"className":904,"code":1534,"language":906,"meta":562,"style":562},"/**\n * Definition for singly-linked list.\n */\nfunction ListNode(val) {\n  this.val = val;\n  this.next = null;\n}\n\n/**\n * @param {ListNode} headA\n * @param {ListNode} headB\n * @return {ListNode}\n */\nvar getIntersectionNode = function (headA, headB) {\n  if (!headA || !headB) return null;\n  let pA = headA;\n  let pB = headB;\n  while (pA !== pB) {\n    pA = pA ? pA.next : headB;\n    pB = pB ? pB.next : headA;\n  }\n  return pA;\n};\n",[1536],{"type":569,"tag":656,"props":1537,"children":1538},{"__ignoreMap":562},[1539,1546,1553,1560,1587,1614,1641,1648,1655,1662,1693,1724,1751,1758,1801,1848,1871,1894,1926,1971,2015,2022,2037],{"type":569,"tag":660,"props":1540,"children":1541},{"class":662,"line":663},[1542],{"type":569,"tag":660,"props":1543,"children":1544},{"style":916},[1545],{"type":574,"value":919},{"type":569,"tag":660,"props":1547,"children":1548},{"class":662,"line":672},[1549],{"type":569,"tag":660,"props":1550,"children":1551},{"style":916},[1552],{"type":574,"value":927},{"type":569,"tag":660,"props":1554,"children":1555},{"class":662,"line":681},[1556],{"type":569,"tag":660,"props":1557,"children":1558},{"style":916},[1559],{"type":574,"value":935},{"type":569,"tag":660,"props":1561,"children":1562},{"class":662,"line":690},[1563,1567,1571,1575,1579,1583],{"type":569,"tag":660,"props":1564,"children":1565},{"style":941},[1566],{"type":574,"value":944},{"type":569,"tag":660,"props":1568,"children":1569},{"style":947},[1570],{"type":574,"value":950},{"type":569,"tag":660,"props":1572,"children":1573},{"style":953},[1574],{"type":574,"value":956},{"type":569,"tag":660,"props":1576,"children":1577},{"style":959},[1578],{"type":574,"value":962},{"type":569,"tag":660,"props":1580,"children":1581},{"style":953},[1582],{"type":574,"value":967},{"type":569,"tag":660,"props":1584,"children":1585},{"style":953},[1586],{"type":574,"value":972},{"type":569,"tag":660,"props":1588,"children":1589},{"class":662,"line":699},[1590,1594,1598,1602,1606,1610],{"type":569,"tag":660,"props":1591,"children":1592},{"style":978},[1593],{"type":574,"value":981},{"type":569,"tag":660,"props":1595,"children":1596},{"style":953},[1597],{"type":574,"value":986},{"type":569,"tag":660,"props":1599,"children":1600},{"style":959},[1601],{"type":574,"value":962},{"type":569,"tag":660,"props":1603,"children":1604},{"style":953},[1605],{"type":574,"value":995},{"type":569,"tag":660,"props":1607,"children":1608},{"style":959},[1609],{"type":574,"value":1000},{"type":569,"tag":660,"props":1611,"children":1612},{"style":953},[1613],{"type":574,"value":1005},{"type":569,"tag":660,"props":1615,"children":1616},{"class":662,"line":708},[1617,1621,1625,1629,1633,1637],{"type":569,"tag":660,"props":1618,"children":1619},{"style":978},[1620],{"type":574,"value":981},{"type":569,"tag":660,"props":1622,"children":1623},{"style":953},[1624],{"type":574,"value":986},{"type":569,"tag":660,"props":1626,"children":1627},{"style":959},[1628],{"type":574,"value":1021},{"type":569,"tag":660,"props":1630,"children":1631},{"style":953},[1632],{"type":574,"value":995},{"type":569,"tag":660,"props":1634,"children":1635},{"style":941},[1636],{"type":574,"value":1030},{"type":569,"tag":660,"props":1638,"children":1639},{"style":953},[1640],{"type":574,"value":1005},{"type":569,"tag":660,"props":1642,"children":1643},{"class":662,"line":1037},[1644],{"type":569,"tag":660,"props":1645,"children":1646},{"style":953},[1647],{"type":574,"value":1043},{"type":569,"tag":660,"props":1649,"children":1650},{"class":662,"line":1046},[1651],{"type":569,"tag":660,"props":1652,"children":1653},{"emptyLinePlaceholder":1050},[1654],{"type":574,"value":1053},{"type":569,"tag":660,"props":1656,"children":1657},{"class":662,"line":1056},[1658],{"type":569,"tag":660,"props":1659,"children":1660},{"style":916},[1661],{"type":574,"value":919},{"type":569,"tag":660,"props":1663,"children":1664},{"class":662,"line":1064},[1665,1669,1673,1677,1681,1685,1689],{"type":569,"tag":660,"props":1666,"children":1667},{"style":916},[1668],{"type":574,"value":1070},{"type":569,"tag":660,"props":1670,"children":1671},{"style":953},[1672],{"type":574,"value":1075},{"type":569,"tag":660,"props":1674,"children":1675},{"style":1078},[1676],{"type":574,"value":1081},{"type":569,"tag":660,"props":1678,"children":1679},{"style":953},[1680],{"type":574,"value":1086},{"type":569,"tag":660,"props":1682,"children":1683},{"style":1089},[1684],{"type":574,"value":1092},{"type":569,"tag":660,"props":1686,"children":1687},{"style":953},[1688],{"type":574,"value":1097},{"type":569,"tag":660,"props":1690,"children":1691},{"style":959},[1692],{"type":574,"value":1102},{"type":569,"tag":660,"props":1694,"children":1695},{"class":662,"line":1105},[1696,1700,1704,1708,1712,1716,1720],{"type":569,"tag":660,"props":1697,"children":1698},{"style":916},[1699],{"type":574,"value":1070},{"type":569,"tag":660,"props":1701,"children":1702},{"style":953},[1703],{"type":574,"value":1075},{"type":569,"tag":660,"props":1705,"children":1706},{"style":1078},[1707],{"type":574,"value":1081},{"type":569,"tag":660,"props":1709,"children":1710},{"style":953},[1711],{"type":574,"value":1086},{"type":569,"tag":660,"props":1713,"children":1714},{"style":1089},[1715],{"type":574,"value":1092},{"type":569,"tag":660,"props":1717,"children":1718},{"style":953},[1719],{"type":574,"value":1097},{"type":569,"tag":660,"props":1721,"children":1722},{"style":959},[1723],{"type":574,"value":1135},{"type":569,"tag":660,"props":1725,"children":1726},{"class":662,"line":1138},[1727,1731,1735,1739,1743,1747],{"type":569,"tag":660,"props":1728,"children":1729},{"style":916},[1730],{"type":574,"value":1070},{"type":569,"tag":660,"props":1732,"children":1733},{"style":953},[1734],{"type":574,"value":1075},{"type":569,"tag":660,"props":1736,"children":1737},{"style":1078},[1738],{"type":574,"value":1152},{"type":569,"tag":660,"props":1740,"children":1741},{"style":953},[1742],{"type":574,"value":1086},{"type":569,"tag":660,"props":1744,"children":1745},{"style":1089},[1746],{"type":574,"value":1092},{"type":569,"tag":660,"props":1748,"children":1749},{"style":953},[1750],{"type":574,"value":1043},{"type":569,"tag":660,"props":1752,"children":1753},{"class":662,"line":1167},[1754],{"type":569,"tag":660,"props":1755,"children":1756},{"style":916},[1757],{"type":574,"value":935},{"type":569,"tag":660,"props":1759,"children":1760},{"class":662,"line":1175},[1761,1765,1769,1773,1777,1781,1785,1789,1793,1797],{"type":569,"tag":660,"props":1762,"children":1763},{"style":941},[1764],{"type":574,"value":1181},{"type":569,"tag":660,"props":1766,"children":1767},{"style":947},[1768],{"type":574,"value":1186},{"type":569,"tag":660,"props":1770,"children":1771},{"style":953},[1772],{"type":574,"value":995},{"type":569,"tag":660,"props":1774,"children":1775},{"style":941},[1776],{"type":574,"value":1195},{"type":569,"tag":660,"props":1778,"children":1779},{"style":953},[1780],{"type":574,"value":1200},{"type":569,"tag":660,"props":1782,"children":1783},{"style":959},[1784],{"type":574,"value":1205},{"type":569,"tag":660,"props":1786,"children":1787},{"style":953},[1788],{"type":574,"value":1210},{"type":569,"tag":660,"props":1790,"children":1791},{"style":959},[1792],{"type":574,"value":1215},{"type":569,"tag":660,"props":1794,"children":1795},{"style":953},[1796],{"type":574,"value":967},{"type":569,"tag":660,"props":1798,"children":1799},{"style":953},[1800],{"type":574,"value":972},{"type":569,"tag":660,"props":1802,"children":1803},{"class":662,"line":1226},[1804,1808,1812,1816,1820,1824,1828,1832,1836,1840,1844],{"type":569,"tag":660,"props":1805,"children":1806},{"style":1078},[1807],{"type":574,"value":1232},{"type":569,"tag":660,"props":1809,"children":1810},{"style":953},[1811],{"type":574,"value":1200},{"type":569,"tag":660,"props":1813,"children":1814},{"style":941},[1815],{"type":574,"value":1241},{"type":569,"tag":660,"props":1817,"children":1818},{"style":959},[1819],{"type":574,"value":1205},{"type":569,"tag":660,"props":1821,"children":1822},{"style":941},[1823],{"type":574,"value":1250},{"type":569,"tag":660,"props":1825,"children":1826},{"style":941},[1827],{"type":574,"value":1255},{"type":569,"tag":660,"props":1829,"children":1830},{"style":959},[1831],{"type":574,"value":1260},{"type":569,"tag":660,"props":1833,"children":1834},{"style":953},[1835],{"type":574,"value":967},{"type":569,"tag":660,"props":1837,"children":1838},{"style":1078},[1839],{"type":574,"value":1269},{"type":569,"tag":660,"props":1841,"children":1842},{"style":941},[1843],{"type":574,"value":1030},{"type":569,"tag":660,"props":1845,"children":1846},{"style":953},[1847],{"type":574,"value":1005},{"type":569,"tag":660,"props":1849,"children":1850},{"class":662,"line":1280},[1851,1855,1859,1863,1867],{"type":569,"tag":660,"props":1852,"children":1853},{"style":941},[1854],{"type":574,"value":1286},{"type":569,"tag":660,"props":1856,"children":1857},{"style":959},[1858],{"type":574,"value":1291},{"type":569,"tag":660,"props":1860,"children":1861},{"style":953},[1862],{"type":574,"value":995},{"type":569,"tag":660,"props":1864,"children":1865},{"style":959},[1866],{"type":574,"value":1300},{"type":569,"tag":660,"props":1868,"children":1869},{"style":953},[1870],{"type":574,"value":1005},{"type":569,"tag":660,"props":1872,"children":1873},{"class":662,"line":1307},[1874,1878,1882,1886,1890],{"type":569,"tag":660,"props":1875,"children":1876},{"style":941},[1877],{"type":574,"value":1286},{"type":569,"tag":660,"props":1879,"children":1880},{"style":959},[1881],{"type":574,"value":1344},{"type":569,"tag":660,"props":1883,"children":1884},{"style":953},[1885],{"type":574,"value":995},{"type":569,"tag":660,"props":1887,"children":1888},{"style":959},[1889],{"type":574,"value":1215},{"type":569,"tag":660,"props":1891,"children":1892},{"style":953},[1893],{"type":574,"value":1005},{"type":569,"tag":660,"props":1895,"children":1896},{"class":662,"line":1333},[1897,1901,1905,1909,1914,1918,1922],{"type":569,"tag":660,"props":1898,"children":1899},{"style":1078},[1900],{"type":574,"value":1313},{"type":569,"tag":660,"props":1902,"children":1903},{"style":953},[1904],{"type":574,"value":1200},{"type":569,"tag":660,"props":1906,"children":1907},{"style":959},[1908],{"type":574,"value":1322},{"type":569,"tag":660,"props":1910,"children":1911},{"style":941},[1912],{"type":574,"value":1913}," !==",{"type":569,"tag":660,"props":1915,"children":1916},{"style":959},[1917],{"type":574,"value":1344},{"type":569,"tag":660,"props":1919,"children":1920},{"style":953},[1921],{"type":574,"value":967},{"type":569,"tag":660,"props":1923,"children":1924},{"style":953},[1925],{"type":574,"value":972},{"type":569,"tag":660,"props":1927,"children":1928},{"class":662,"line":1359},[1929,1933,1937,1941,1946,1950,1954,1958,1963,1967],{"type":569,"tag":660,"props":1930,"children":1931},{"style":959},[1932],{"type":574,"value":1471},{"type":569,"tag":660,"props":1934,"children":1935},{"style":953},[1936],{"type":574,"value":995},{"type":569,"tag":660,"props":1938,"children":1939},{"style":959},[1940],{"type":574,"value":1291},{"type":569,"tag":660,"props":1942,"children":1943},{"style":941},[1944],{"type":574,"value":1945}," ?",{"type":569,"tag":660,"props":1947,"children":1948},{"style":959},[1949],{"type":574,"value":1291},{"type":569,"tag":660,"props":1951,"children":1952},{"style":953},[1953],{"type":574,"value":986},{"type":569,"tag":660,"props":1955,"children":1956},{"style":959},[1957],{"type":574,"value":1021},{"type":569,"tag":660,"props":1959,"children":1960},{"style":941},[1961],{"type":574,"value":1962}," :",{"type":569,"tag":660,"props":1964,"children":1965},{"style":959},[1966],{"type":574,"value":1215},{"type":569,"tag":660,"props":1968,"children":1969},{"style":953},[1970],{"type":574,"value":1005},{"type":569,"tag":660,"props":1972,"children":1973},{"class":662,"line":1385},[1974,1979,1983,1987,1991,1995,1999,2003,2007,2011],{"type":569,"tag":660,"props":1975,"children":1976},{"style":959},[1977],{"type":574,"value":1978},"    pB",{"type":569,"tag":660,"props":1980,"children":1981},{"style":953},[1982],{"type":574,"value":995},{"type":569,"tag":660,"props":1984,"children":1985},{"style":959},[1986],{"type":574,"value":1344},{"type":569,"tag":660,"props":1988,"children":1989},{"style":941},[1990],{"type":574,"value":1945},{"type":569,"tag":660,"props":1992,"children":1993},{"style":959},[1994],{"type":574,"value":1344},{"type":569,"tag":660,"props":1996,"children":1997},{"style":953},[1998],{"type":574,"value":986},{"type":569,"tag":660,"props":2000,"children":2001},{"style":959},[2002],{"type":574,"value":1021},{"type":569,"tag":660,"props":2004,"children":2005},{"style":941},[2006],{"type":574,"value":1962},{"type":569,"tag":660,"props":2008,"children":2009},{"style":959},[2010],{"type":574,"value":1300},{"type":569,"tag":660,"props":2012,"children":2013},{"style":953},[2014],{"type":574,"value":1005},{"type":569,"tag":660,"props":2016,"children":2017},{"class":662,"line":1427},[2018],{"type":569,"tag":660,"props":2019,"children":2020},{"style":953},[2021],{"type":574,"value":1500},{"type":569,"tag":660,"props":2023,"children":2024},{"class":662,"line":1456},[2025,2029,2033],{"type":569,"tag":660,"props":2026,"children":2027},{"style":1078},[2028],{"type":574,"value":1509},{"type":569,"tag":660,"props":2030,"children":2031},{"style":959},[2032],{"type":574,"value":1291},{"type":569,"tag":660,"props":2034,"children":2035},{"style":953},[2036],{"type":574,"value":1005},{"type":569,"tag":660,"props":2038,"children":2039},{"class":662,"line":1465},[2040],{"type":569,"tag":660,"props":2041,"children":2042},{"style":953},[2043],{"type":574,"value":1526},{"type":569,"tag":897,"props":2045,"children":2047},{"id":2046},"哈希法",[2048],{"type":574,"value":2046},{"type":569,"tag":650,"props":2050,"children":2052},{"className":904,"code":2051,"language":906,"meta":562,"style":562},"/**\n * Definition for singly-linked list.\n */\nfunction ListNode(val) {\n  this.val = val;\n  this.next = null;\n}\n\n/**\n * @param {ListNode} headA\n * @param {ListNode} headB\n * @return {ListNode}\n */\nvar getIntersectionNode = function (headA, headB) {\n  if (!headA || !headB) return null;\n  let map = new Map();\n  let pA = headA;\n  let pB = headB;\n  while (pA) {\n    map.set(pA, 1);\n    pA = pA.next;\n  }\n  while (pB) {\n    if (map.has(pB)) return pB;\n    pB = pB.next;\n  }\n};\n",[2053],{"type":569,"tag":656,"props":2054,"children":2055},{"__ignoreMap":562},[2056,2063,2070,2077,2104,2131,2158,2165,2172,2179,2210,2241,2268,2275,2318,2365,2396,2419,2442,2465,2505,2532,2539,2562,2613,2640,2647],{"type":569,"tag":660,"props":2057,"children":2058},{"class":662,"line":663},[2059],{"type":569,"tag":660,"props":2060,"children":2061},{"style":916},[2062],{"type":574,"value":919},{"type":569,"tag":660,"props":2064,"children":2065},{"class":662,"line":672},[2066],{"type":569,"tag":660,"props":2067,"children":2068},{"style":916},[2069],{"type":574,"value":927},{"type":569,"tag":660,"props":2071,"children":2072},{"class":662,"line":681},[2073],{"type":569,"tag":660,"props":2074,"children":2075},{"style":916},[2076],{"type":574,"value":935},{"type":569,"tag":660,"props":2078,"children":2079},{"class":662,"line":690},[2080,2084,2088,2092,2096,2100],{"type":569,"tag":660,"props":2081,"children":2082},{"style":941},[2083],{"type":574,"value":944},{"type":569,"tag":660,"props":2085,"children":2086},{"style":947},[2087],{"type":574,"value":950},{"type":569,"tag":660,"props":2089,"children":2090},{"style":953},[2091],{"type":574,"value":956},{"type":569,"tag":660,"props":2093,"children":2094},{"style":959},[2095],{"type":574,"value":962},{"type":569,"tag":660,"props":2097,"children":2098},{"style":953},[2099],{"type":574,"value":967},{"type":569,"tag":660,"props":2101,"children":2102},{"style":953},[2103],{"type":574,"value":972},{"type":569,"tag":660,"props":2105,"children":2106},{"class":662,"line":699},[2107,2111,2115,2119,2123,2127],{"type":569,"tag":660,"props":2108,"children":2109},{"style":978},[2110],{"type":574,"value":981},{"type":569,"tag":660,"props":2112,"children":2113},{"style":953},[2114],{"type":574,"value":986},{"type":569,"tag":660,"props":2116,"children":2117},{"style":959},[2118],{"type":574,"value":962},{"type":569,"tag":660,"props":2120,"children":2121},{"style":953},[2122],{"type":574,"value":995},{"type":569,"tag":660,"props":2124,"children":2125},{"style":959},[2126],{"type":574,"value":1000},{"type":569,"tag":660,"props":2128,"children":2129},{"style":953},[2130],{"type":574,"value":1005},{"type":569,"tag":660,"props":2132,"children":2133},{"class":662,"line":708},[2134,2138,2142,2146,2150,2154],{"type":569,"tag":660,"props":2135,"children":2136},{"style":978},[2137],{"type":574,"value":981},{"type":569,"tag":660,"props":2139,"children":2140},{"style":953},[2141],{"type":574,"value":986},{"type":569,"tag":660,"props":2143,"children":2144},{"style":959},[2145],{"type":574,"value":1021},{"type":569,"tag":660,"props":2147,"children":2148},{"style":953},[2149],{"type":574,"value":995},{"type":569,"tag":660,"props":2151,"children":2152},{"style":941},[2153],{"type":574,"value":1030},{"type":569,"tag":660,"props":2155,"children":2156},{"style":953},[2157],{"type":574,"value":1005},{"type":569,"tag":660,"props":2159,"children":2160},{"class":662,"line":1037},[2161],{"type":569,"tag":660,"props":2162,"children":2163},{"style":953},[2164],{"type":574,"value":1043},{"type":569,"tag":660,"props":2166,"children":2167},{"class":662,"line":1046},[2168],{"type":569,"tag":660,"props":2169,"children":2170},{"emptyLinePlaceholder":1050},[2171],{"type":574,"value":1053},{"type":569,"tag":660,"props":2173,"children":2174},{"class":662,"line":1056},[2175],{"type":569,"tag":660,"props":2176,"children":2177},{"style":916},[2178],{"type":574,"value":919},{"type":569,"tag":660,"props":2180,"children":2181},{"class":662,"line":1064},[2182,2186,2190,2194,2198,2202,2206],{"type":569,"tag":660,"props":2183,"children":2184},{"style":916},[2185],{"type":574,"value":1070},{"type":569,"tag":660,"props":2187,"children":2188},{"style":953},[2189],{"type":574,"value":1075},{"type":569,"tag":660,"props":2191,"children":2192},{"style":1078},[2193],{"type":574,"value":1081},{"type":569,"tag":660,"props":2195,"children":2196},{"style":953},[2197],{"type":574,"value":1086},{"type":569,"tag":660,"props":2199,"children":2200},{"style":1089},[2201],{"type":574,"value":1092},{"type":569,"tag":660,"props":2203,"children":2204},{"style":953},[2205],{"type":574,"value":1097},{"type":569,"tag":660,"props":2207,"children":2208},{"style":959},[2209],{"type":574,"value":1102},{"type":569,"tag":660,"props":2211,"children":2212},{"class":662,"line":1105},[2213,2217,2221,2225,2229,2233,2237],{"type":569,"tag":660,"props":2214,"children":2215},{"style":916},[2216],{"type":574,"value":1070},{"type":569,"tag":660,"props":2218,"children":2219},{"style":953},[2220],{"type":574,"value":1075},{"type":569,"tag":660,"props":2222,"children":2223},{"style":1078},[2224],{"type":574,"value":1081},{"type":569,"tag":660,"props":2226,"children":2227},{"style":953},[2228],{"type":574,"value":1086},{"type":569,"tag":660,"props":2230,"children":2231},{"style":1089},[2232],{"type":574,"value":1092},{"type":569,"tag":660,"props":2234,"children":2235},{"style":953},[2236],{"type":574,"value":1097},{"type":569,"tag":660,"props":2238,"children":2239},{"style":959},[2240],{"type":574,"value":1135},{"type":569,"tag":660,"props":2242,"children":2243},{"class":662,"line":1138},[2244,2248,2252,2256,2260,2264],{"type":569,"tag":660,"props":2245,"children":2246},{"style":916},[2247],{"type":574,"value":1070},{"type":569,"tag":660,"props":2249,"children":2250},{"style":953},[2251],{"type":574,"value":1075},{"type":569,"tag":660,"props":2253,"children":2254},{"style":1078},[2255],{"type":574,"value":1152},{"type":569,"tag":660,"props":2257,"children":2258},{"style":953},[2259],{"type":574,"value":1086},{"type":569,"tag":660,"props":2261,"children":2262},{"style":1089},[2263],{"type":574,"value":1092},{"type":569,"tag":660,"props":2265,"children":2266},{"style":953},[2267],{"type":574,"value":1043},{"type":569,"tag":660,"props":2269,"children":2270},{"class":662,"line":1167},[2271],{"type":569,"tag":660,"props":2272,"children":2273},{"style":916},[2274],{"type":574,"value":935},{"type":569,"tag":660,"props":2276,"children":2277},{"class":662,"line":1175},[2278,2282,2286,2290,2294,2298,2302,2306,2310,2314],{"type":569,"tag":660,"props":2279,"children":2280},{"style":941},[2281],{"type":574,"value":1181},{"type":569,"tag":660,"props":2283,"children":2284},{"style":947},[2285],{"type":574,"value":1186},{"type":569,"tag":660,"props":2287,"children":2288},{"style":953},[2289],{"type":574,"value":995},{"type":569,"tag":660,"props":2291,"children":2292},{"style":941},[2293],{"type":574,"value":1195},{"type":569,"tag":660,"props":2295,"children":2296},{"style":953},[2297],{"type":574,"value":1200},{"type":569,"tag":660,"props":2299,"children":2300},{"style":959},[2301],{"type":574,"value":1205},{"type":569,"tag":660,"props":2303,"children":2304},{"style":953},[2305],{"type":574,"value":1210},{"type":569,"tag":660,"props":2307,"children":2308},{"style":959},[2309],{"type":574,"value":1215},{"type":569,"tag":660,"props":2311,"children":2312},{"style":953},[2313],{"type":574,"value":967},{"type":569,"tag":660,"props":2315,"children":2316},{"style":953},[2317],{"type":574,"value":972},{"type":569,"tag":660,"props":2319,"children":2320},{"class":662,"line":1226},[2321,2325,2329,2333,2337,2341,2345,2349,2353,2357,2361],{"type":569,"tag":660,"props":2322,"children":2323},{"style":1078},[2324],{"type":574,"value":1232},{"type":569,"tag":660,"props":2326,"children":2327},{"style":953},[2328],{"type":574,"value":1200},{"type":569,"tag":660,"props":2330,"children":2331},{"style":941},[2332],{"type":574,"value":1241},{"type":569,"tag":660,"props":2334,"children":2335},{"style":959},[2336],{"type":574,"value":1205},{"type":569,"tag":660,"props":2338,"children":2339},{"style":941},[2340],{"type":574,"value":1250},{"type":569,"tag":660,"props":2342,"children":2343},{"style":941},[2344],{"type":574,"value":1255},{"type":569,"tag":660,"props":2346,"children":2347},{"style":959},[2348],{"type":574,"value":1260},{"type":569,"tag":660,"props":2350,"children":2351},{"style":953},[2352],{"type":574,"value":967},{"type":569,"tag":660,"props":2354,"children":2355},{"style":1078},[2356],{"type":574,"value":1269},{"type":569,"tag":660,"props":2358,"children":2359},{"style":941},[2360],{"type":574,"value":1030},{"type":569,"tag":660,"props":2362,"children":2363},{"style":953},[2364],{"type":574,"value":1005},{"type":569,"tag":660,"props":2366,"children":2367},{"class":662,"line":1280},[2368,2372,2377,2381,2386,2391],{"type":569,"tag":660,"props":2369,"children":2370},{"style":941},[2371],{"type":574,"value":1286},{"type":569,"tag":660,"props":2373,"children":2374},{"style":959},[2375],{"type":574,"value":2376}," map",{"type":569,"tag":660,"props":2378,"children":2379},{"style":953},[2380],{"type":574,"value":995},{"type":569,"tag":660,"props":2382,"children":2383},{"style":941},[2384],{"type":574,"value":2385}," new",{"type":569,"tag":660,"props":2387,"children":2388},{"style":947},[2389],{"type":574,"value":2390}," Map",{"type":569,"tag":660,"props":2392,"children":2393},{"style":953},[2394],{"type":574,"value":2395},"();\n",{"type":569,"tag":660,"props":2397,"children":2398},{"class":662,"line":1307},[2399,2403,2407,2411,2415],{"type":569,"tag":660,"props":2400,"children":2401},{"style":941},[2402],{"type":574,"value":1286},{"type":569,"tag":660,"props":2404,"children":2405},{"style":959},[2406],{"type":574,"value":1291},{"type":569,"tag":660,"props":2408,"children":2409},{"style":953},[2410],{"type":574,"value":995},{"type":569,"tag":660,"props":2412,"children":2413},{"style":959},[2414],{"type":574,"value":1300},{"type":569,"tag":660,"props":2416,"children":2417},{"style":953},[2418],{"type":574,"value":1005},{"type":569,"tag":660,"props":2420,"children":2421},{"class":662,"line":1333},[2422,2426,2430,2434,2438],{"type":569,"tag":660,"props":2423,"children":2424},{"style":941},[2425],{"type":574,"value":1286},{"type":569,"tag":660,"props":2427,"children":2428},{"style":959},[2429],{"type":574,"value":1344},{"type":569,"tag":660,"props":2431,"children":2432},{"style":953},[2433],{"type":574,"value":995},{"type":569,"tag":660,"props":2435,"children":2436},{"style":959},[2437],{"type":574,"value":1215},{"type":569,"tag":660,"props":2439,"children":2440},{"style":953},[2441],{"type":574,"value":1005},{"type":569,"tag":660,"props":2443,"children":2444},{"class":662,"line":1359},[2445,2449,2453,2457,2461],{"type":569,"tag":660,"props":2446,"children":2447},{"style":1078},[2448],{"type":574,"value":1313},{"type":569,"tag":660,"props":2450,"children":2451},{"style":953},[2452],{"type":574,"value":1200},{"type":569,"tag":660,"props":2454,"children":2455},{"style":959},[2456],{"type":574,"value":1322},{"type":569,"tag":660,"props":2458,"children":2459},{"style":953},[2460],{"type":574,"value":967},{"type":569,"tag":660,"props":2462,"children":2463},{"style":953},[2464],{"type":574,"value":972},{"type":569,"tag":660,"props":2466,"children":2467},{"class":662,"line":1385},[2468,2473,2477,2482,2486,2490,2494,2500],{"type":569,"tag":660,"props":2469,"children":2470},{"style":959},[2471],{"type":574,"value":2472},"    map",{"type":569,"tag":660,"props":2474,"children":2475},{"style":953},[2476],{"type":574,"value":986},{"type":569,"tag":660,"props":2478,"children":2479},{"style":947},[2480],{"type":574,"value":2481},"set",{"type":569,"tag":660,"props":2483,"children":2484},{"style":953},[2485],{"type":574,"value":956},{"type":569,"tag":660,"props":2487,"children":2488},{"style":959},[2489],{"type":574,"value":1322},{"type":569,"tag":660,"props":2491,"children":2492},{"style":953},[2493],{"type":574,"value":1210},{"type":569,"tag":660,"props":2495,"children":2497},{"style":2496},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[2498],{"type":574,"value":2499}," 1",{"type":569,"tag":660,"props":2501,"children":2502},{"style":953},[2503],{"type":574,"value":2504},");\n",{"type":569,"tag":660,"props":2506,"children":2507},{"class":662,"line":1427},[2508,2512,2516,2520,2524,2528],{"type":569,"tag":660,"props":2509,"children":2510},{"style":959},[2511],{"type":574,"value":1471},{"type":569,"tag":660,"props":2513,"children":2514},{"style":953},[2515],{"type":574,"value":995},{"type":569,"tag":660,"props":2517,"children":2518},{"style":959},[2519],{"type":574,"value":1291},{"type":569,"tag":660,"props":2521,"children":2522},{"style":953},[2523],{"type":574,"value":986},{"type":569,"tag":660,"props":2525,"children":2526},{"style":959},[2527],{"type":574,"value":1021},{"type":569,"tag":660,"props":2529,"children":2530},{"style":953},[2531],{"type":574,"value":1005},{"type":569,"tag":660,"props":2533,"children":2534},{"class":662,"line":1456},[2535],{"type":569,"tag":660,"props":2536,"children":2537},{"style":953},[2538],{"type":574,"value":1500},{"type":569,"tag":660,"props":2540,"children":2541},{"class":662,"line":1465},[2542,2546,2550,2554,2558],{"type":569,"tag":660,"props":2543,"children":2544},{"style":1078},[2545],{"type":574,"value":1313},{"type":569,"tag":660,"props":2547,"children":2548},{"style":953},[2549],{"type":574,"value":1200},{"type":569,"tag":660,"props":2551,"children":2552},{"style":959},[2553],{"type":574,"value":1374},{"type":569,"tag":660,"props":2555,"children":2556},{"style":953},[2557],{"type":574,"value":967},{"type":569,"tag":660,"props":2559,"children":2560},{"style":953},[2561],{"type":574,"value":972},{"type":569,"tag":660,"props":2563,"children":2564},{"class":662,"line":1494},[2565,2570,2574,2579,2583,2588,2592,2596,2601,2605,2609],{"type":569,"tag":660,"props":2566,"children":2567},{"style":1078},[2568],{"type":574,"value":2569},"    if",{"type":569,"tag":660,"props":2571,"children":2572},{"style":953},[2573],{"type":574,"value":1200},{"type":569,"tag":660,"props":2575,"children":2576},{"style":959},[2577],{"type":574,"value":2578},"map",{"type":569,"tag":660,"props":2580,"children":2581},{"style":953},[2582],{"type":574,"value":986},{"type":569,"tag":660,"props":2584,"children":2585},{"style":947},[2586],{"type":574,"value":2587},"has",{"type":569,"tag":660,"props":2589,"children":2590},{"style":953},[2591],{"type":574,"value":956},{"type":569,"tag":660,"props":2593,"children":2594},{"style":959},[2595],{"type":574,"value":1374},{"type":569,"tag":660,"props":2597,"children":2598},{"style":953},[2599],{"type":574,"value":2600},"))",{"type":569,"tag":660,"props":2602,"children":2603},{"style":1078},[2604],{"type":574,"value":1269},{"type":569,"tag":660,"props":2606,"children":2607},{"style":959},[2608],{"type":574,"value":1344},{"type":569,"tag":660,"props":2610,"children":2611},{"style":953},[2612],{"type":574,"value":1005},{"type":569,"tag":660,"props":2614,"children":2615},{"class":662,"line":1503},[2616,2620,2624,2628,2632,2636],{"type":569,"tag":660,"props":2617,"children":2618},{"style":959},[2619],{"type":574,"value":1978},{"type":569,"tag":660,"props":2621,"children":2622},{"style":953},[2623],{"type":574,"value":995},{"type":569,"tag":660,"props":2625,"children":2626},{"style":959},[2627],{"type":574,"value":1344},{"type":569,"tag":660,"props":2629,"children":2630},{"style":953},[2631],{"type":574,"value":986},{"type":569,"tag":660,"props":2633,"children":2634},{"style":959},[2635],{"type":574,"value":1021},{"type":569,"tag":660,"props":2637,"children":2638},{"style":953},[2639],{"type":574,"value":1005},{"type":569,"tag":660,"props":2641,"children":2642},{"class":662,"line":1520},[2643],{"type":569,"tag":660,"props":2644,"children":2645},{"style":953},[2646],{"type":574,"value":1500},{"type":569,"tag":660,"props":2648,"children":2650},{"class":662,"line":2649},27,[2651],{"type":569,"tag":660,"props":2652,"children":2653},{"style":953},[2654],{"type":574,"value":1526},{"type":569,"tag":2656,"props":2657,"children":2658},"style",{},[2659],{"type":574,"value":2660},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":562,"searchDepth":699,"depth":699,"links":2662},[2663,2664],{"id":888,"depth":672,"text":888},{"id":893,"depth":672,"text":893,"children":2665},[2666,2667,2668],{"id":899,"depth":681,"text":899},{"id":1529,"depth":681,"text":1529},{"id":2046,"depth":681,"text":2046},"markdown","content:1.algorithm:3.leetcode:3.major:160.intersection-of-two-linked-lists.md","content","1.algorithm/3.leetcode/3.major/160.intersection-of-two-linked-lists.md","md",[2675,2677],{"_path":186,"title":185,"description":2676},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",{"_path":192,"title":191,"description":2678},"峰值元素是指其值严格大于左右相邻值的元素。",1717734306727]