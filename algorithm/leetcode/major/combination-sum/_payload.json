[{"data":1,"prerenderedAt":1443},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/combination-sum":552,"/algorithm/leetcode/major/combination-sum-surround":1438},[4,272,311,529,537],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":310},"八股文","/endorsement",[276,286,297],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"构建工具","/endorsement/build-tools",[290],{"title":291,"_path":292,"children":293},"Webpack","/endorsement/build-tools/webpack",[294],{"title":295,"_path":296},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":298,"_path":299,"children":300},"Html","/endorsement/html",[301,304,307],{"title":302,"_path":303},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":305,"_path":306},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":308,"_path":309},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":312,"_path":313,"children":314,"icon":528},"代码考核","/code-assessment",[315,420,521],{"title":316,"_path":317,"children":318},"源码实现","/code-assessment/source",[319,353,369,397,404,411,414,417],{"title":320,"_path":321,"children":322},"原生 api","/code-assessment/source/native-api",[323,326,329,332,335,338,341,344,347,350],{"title":324,"_path":325},"polyfill","/code-assessment/source/native-api/polyfill",{"title":327,"_path":328},"ajax","/code-assessment/source/native-api/ajax",{"title":330,"_path":331},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":333,"_path":334},"new 操作符","/code-assessment/source/native-api/new",{"title":336,"_path":337},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":339,"_path":340},"定时器","/code-assessment/source/native-api/timer",{"title":342,"_path":343},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":345,"_path":346},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":348,"_path":349},"extends","/code-assessment/source/native-api/extends",{"title":351,"_path":352},"Promise","/code-assessment/source/native-api/promise",{"title":354,"_path":355,"children":356},"函数 Function","/code-assessment/source/function",[357,360,363,366],{"title":358,"_path":359},"函数防抖","/code-assessment/source/function/debounce",{"title":361,"_path":362},"函数节流","/code-assessment/source/function/throttle",{"title":364,"_path":365},"函数柯理化","/code-assessment/source/function/curry",{"title":367,"_path":368},"函数睡眠","/code-assessment/source/function/sleep",{"title":370,"_path":371,"children":372},"数组 Array","/code-assessment/source/array",[373,376,379,382,385,388,391,394],{"title":374,"_path":375},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":377,"_path":378},"数组扁平化","/code-assessment/source/array/flat",{"title":380,"_path":381},"原型方法","/code-assessment/source/array/prototype-method",{"title":383,"_path":384},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":386,"_path":387},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":389,"_path":390},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":392,"_path":393},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":395,"_path":396},"二维数组","/code-assessment/source/array/2d-array",{"title":398,"_path":399,"children":400},"字符串 String","/code-assessment/source/string",[401],{"title":402,"_path":403},"repeat()","/code-assessment/source/string/repeat",{"title":405,"_path":406,"children":407},"集合 Set","/code-assessment/source/set",[408],{"title":409,"_path":410},"遍历集合","/code-assessment/source/set/traverse",{"title":412,"_path":413},"获取通用类型","/code-assessment/source/get-generic-type",{"title":415,"_path":416},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":418,"_path":419},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":421,"_path":422,"children":423},"业务场景","/code-assessment/scene",[424,454,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518],{"title":351,"_path":425,"children":426},"/code-assessment/scene/promise",[427,430,433,436,439,442,445,448,451],{"title":428,"_path":429},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":431,"_path":432},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":434,"_path":435},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":437,"_path":438},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":440,"_path":441},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":443,"_path":444},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":446,"_path":447},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":449,"_path":450},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":452,"_path":453},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":455,"_path":456,"children":457},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[458,461],{"title":459,"_path":460},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":462,"_path":463},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":465,"_path":466},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":468,"_path":469},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":471,"_path":472},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":474,"_path":475},"倒计时","/code-assessment/scene/countdown",{"title":477,"_path":478},"日期格式化","/code-assessment/scene/date-format",{"title":480,"_path":481},"实现前端路由","/code-assessment/scene/frontend-route",{"title":483,"_path":484},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":486,"_path":487},"lodash.get","/code-assessment/scene/lodash-get",{"title":489,"_path":490},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":492,"_path":493},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":495,"_path":496},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":498,"_path":499},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":501,"_path":502},"随机数","/code-assessment/scene/random-number",{"title":504,"_path":505},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":507,"_path":508},"sku 算法实现","/code-assessment/scene/sku",{"title":510,"_path":511},"整数分割","/code-assessment/scene/split-number",{"title":513,"_path":514},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":516,"_path":517},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":519,"_path":520},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":522,"_path":523,"children":524},"Ts 类型挑战","/code-assessment/type-challeges",[525],{"title":526,"_path":527},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":530,"_path":531,"children":532,"icon":536},"项目","/project",[533],{"title":534,"_path":535},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":538,"_path":539,"children":540,"icon":551},"后端语言","/backend-languages",[541],{"title":542,"_path":543,"children":544},"Python","/backend-languages/python",[545,548],{"title":546,"_path":547},"基础","/backend-languages/python/base",{"title":549,"_path":550},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":117,"_dir":553,"_draft":554,"_partial":554,"_locale":555,"title":116,"description":556,"url":557,"body":558,"_type":1433,"_id":1434,"_source":1435,"_file":1436,"_extension":1437},"major",false,"","给你一个 无重复元素 的整数数组 candidates 和一个目标整数 target ，找出 candidates 中可以使数字和为目标数 target 的 所有 不同组合 ，并以列表形式返回。你可以按 任意顺序 返回这些组合。","https://leetcode.cn/problems/combination-sum",{"type":559,"children":560,"toc":1427},"root",[561,568,573,578,583,649,654,677,682,705,710,735,741,746,752,1421],{"type":562,"tag":563,"props":564,"children":565},"element","p",{},[566],{"type":567,"value":556},"text",{"type":562,"tag":563,"props":569,"children":570},{},[571],{"type":567,"value":572},"candidates 中的 同一个 数字可以 无限制重复被选取 。如果至少一个数字的被选数量不同，则两种组合是不同的。",{"type":562,"tag":563,"props":574,"children":575},{},[576],{"type":567,"value":577},"对于给定的输入，保证和为 target 的不同组合数少于 150 个。",{"type":562,"tag":563,"props":579,"children":580},{},[581],{"type":567,"value":582},"示例 1：",{"type":562,"tag":584,"props":585,"children":588},"pre",{"className":586,"code":587,"language":567,"meta":555,"style":555},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：candidates = [2,3,6,7], target = 7\n输出：[[2,2,3],[7]]\n解释：\n2 和 3 可以形成一组候选，2 + 2 + 3 = 7 。注意 2 可以使用多次。\n7 也是一个候选， 7 = 7 。\n仅有这两种组合。\n",[589],{"type":562,"tag":590,"props":591,"children":592},"code",{"__ignoreMap":555},[593,604,613,622,631,640],{"type":562,"tag":594,"props":595,"children":598},"span",{"class":596,"line":597},"line",1,[599],{"type":562,"tag":594,"props":600,"children":601},{},[602],{"type":567,"value":603},"输入：candidates = [2,3,6,7], target = 7\n",{"type":562,"tag":594,"props":605,"children":607},{"class":596,"line":606},2,[608],{"type":562,"tag":594,"props":609,"children":610},{},[611],{"type":567,"value":612},"输出：[[2,2,3],[7]]\n",{"type":562,"tag":594,"props":614,"children":616},{"class":596,"line":615},3,[617],{"type":562,"tag":594,"props":618,"children":619},{},[620],{"type":567,"value":621},"解释：\n",{"type":562,"tag":594,"props":623,"children":625},{"class":596,"line":624},4,[626],{"type":562,"tag":594,"props":627,"children":628},{},[629],{"type":567,"value":630},"2 和 3 可以形成一组候选，2 + 2 + 3 = 7 。注意 2 可以使用多次。\n",{"type":562,"tag":594,"props":632,"children":634},{"class":596,"line":633},5,[635],{"type":562,"tag":594,"props":636,"children":637},{},[638],{"type":567,"value":639},"7 也是一个候选， 7 = 7 。\n",{"type":562,"tag":594,"props":641,"children":643},{"class":596,"line":642},6,[644],{"type":562,"tag":594,"props":645,"children":646},{},[647],{"type":567,"value":648},"仅有这两种组合。\n",{"type":562,"tag":563,"props":650,"children":651},{},[652],{"type":567,"value":653},"示例 2：",{"type":562,"tag":584,"props":655,"children":657},{"className":586,"code":656,"language":567,"meta":555,"style":555},"输入: candidates = [2,3,5], target = 8\n输出: [[2,2,2,2],[2,3,3],[3,5]]\n",[658],{"type":562,"tag":590,"props":659,"children":660},{"__ignoreMap":555},[661,669],{"type":562,"tag":594,"props":662,"children":663},{"class":596,"line":597},[664],{"type":562,"tag":594,"props":665,"children":666},{},[667],{"type":567,"value":668},"输入: candidates = [2,3,5], target = 8\n",{"type":562,"tag":594,"props":670,"children":671},{"class":596,"line":606},[672],{"type":562,"tag":594,"props":673,"children":674},{},[675],{"type":567,"value":676},"输出: [[2,2,2,2],[2,3,3],[3,5]]\n",{"type":562,"tag":563,"props":678,"children":679},{},[680],{"type":567,"value":681},"示例 3：",{"type":562,"tag":584,"props":683,"children":685},{"className":586,"code":684,"language":567,"meta":555,"style":555},"输入: candidates = [2], target = 1\n输出: []\n",[686],{"type":562,"tag":590,"props":687,"children":688},{"__ignoreMap":555},[689,697],{"type":562,"tag":594,"props":690,"children":691},{"class":596,"line":597},[692],{"type":562,"tag":594,"props":693,"children":694},{},[695],{"type":567,"value":696},"输入: candidates = [2], target = 1\n",{"type":562,"tag":594,"props":698,"children":699},{"class":596,"line":606},[700],{"type":562,"tag":594,"props":701,"children":702},{},[703],{"type":567,"value":704},"输出: []\n",{"type":562,"tag":563,"props":706,"children":707},{},[708],{"type":567,"value":709},"提示：",{"type":562,"tag":711,"props":712,"children":713},"ul",{},[714,720,725,730],{"type":562,"tag":715,"props":716,"children":717},"li",{},[718],{"type":567,"value":719},"1 \u003C= candidates.length \u003C= 30",{"type":562,"tag":715,"props":721,"children":722},{},[723],{"type":567,"value":724},"2 \u003C= candidates[i] \u003C= 40",{"type":562,"tag":715,"props":726,"children":727},{},[728],{"type":567,"value":729},"candidates 的所有元素 互不相同",{"type":562,"tag":715,"props":731,"children":732},{},[733],{"type":567,"value":734},"1 \u003C= target \u003C= 40",{"type":562,"tag":736,"props":737,"children":739},"h2",{"id":738},"解题思路",[740],{"type":567,"value":738},{"type":562,"tag":736,"props":742,"children":744},{"id":743},"实现",[745],{"type":567,"value":743},{"type":562,"tag":747,"props":748,"children":750},"h3",{"id":749},"回溯",[751],{"type":567,"value":749},{"type":562,"tag":584,"props":753,"children":757},{"className":754,"code":755,"language":756,"meta":555,"style":555},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} candidates\n * @param {number} target\n * @return {number[][]}\n */\nvar combinationSum = function (candidates, target) {\n  // 寻找可行解问题，可以尝试进行搜索回溯\n  const res = [];\n  const dfs = (target, combine, idx) => {\n    if (target === 0) {\n      res.push(combine);\n      return;\n    }\n    for (let i = idx; i \u003C candidates.length; i++) {\n      if (target - candidates[i] >= 0) {\n        dfs(target - candidates[i], [...combine, candidates[i]], i);\n      }\n    }\n  };\n  dfs(target, [], 0);\n  return res;\n};\n","js",[758],{"type":562,"tag":590,"props":759,"children":760},{"__ignoreMap":555},[761,770,812,845,875,883,938,947,970,1027,1063,1097,1111,1120,1201,1259,1335,1344,1352,1361,1395,1412],{"type":562,"tag":594,"props":762,"children":763},{"class":596,"line":597},[764],{"type":562,"tag":594,"props":765,"children":767},{"style":766},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[768],{"type":567,"value":769},"/**\n",{"type":562,"tag":594,"props":771,"children":772},{"class":596,"line":606},[773,778,784,790,795,801,806],{"type":562,"tag":594,"props":774,"children":775},{"style":766},[776],{"type":567,"value":777}," * ",{"type":562,"tag":594,"props":779,"children":781},{"style":780},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[782],{"type":567,"value":783},"@",{"type":562,"tag":594,"props":785,"children":787},{"style":786},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[788],{"type":567,"value":789},"param",{"type":562,"tag":594,"props":791,"children":792},{"style":780},[793],{"type":567,"value":794}," {",{"type":562,"tag":594,"props":796,"children":798},{"style":797},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[799],{"type":567,"value":800},"number[]",{"type":562,"tag":594,"props":802,"children":803},{"style":780},[804],{"type":567,"value":805},"}",{"type":562,"tag":594,"props":807,"children":809},{"style":808},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[810],{"type":567,"value":811}," candidates\n",{"type":562,"tag":594,"props":813,"children":814},{"class":596,"line":615},[815,819,823,827,831,836,840],{"type":562,"tag":594,"props":816,"children":817},{"style":766},[818],{"type":567,"value":777},{"type":562,"tag":594,"props":820,"children":821},{"style":780},[822],{"type":567,"value":783},{"type":562,"tag":594,"props":824,"children":825},{"style":786},[826],{"type":567,"value":789},{"type":562,"tag":594,"props":828,"children":829},{"style":780},[830],{"type":567,"value":794},{"type":562,"tag":594,"props":832,"children":833},{"style":797},[834],{"type":567,"value":835},"number",{"type":562,"tag":594,"props":837,"children":838},{"style":780},[839],{"type":567,"value":805},{"type":562,"tag":594,"props":841,"children":842},{"style":808},[843],{"type":567,"value":844}," target\n",{"type":562,"tag":594,"props":846,"children":847},{"class":596,"line":624},[848,852,856,861,865,870],{"type":562,"tag":594,"props":849,"children":850},{"style":766},[851],{"type":567,"value":777},{"type":562,"tag":594,"props":853,"children":854},{"style":780},[855],{"type":567,"value":783},{"type":562,"tag":594,"props":857,"children":858},{"style":786},[859],{"type":567,"value":860},"return",{"type":562,"tag":594,"props":862,"children":863},{"style":780},[864],{"type":567,"value":794},{"type":562,"tag":594,"props":866,"children":867},{"style":797},[868],{"type":567,"value":869},"number[][]",{"type":562,"tag":594,"props":871,"children":872},{"style":780},[873],{"type":567,"value":874},"}\n",{"type":562,"tag":594,"props":876,"children":877},{"class":596,"line":633},[878],{"type":562,"tag":594,"props":879,"children":880},{"style":766},[881],{"type":567,"value":882}," */\n",{"type":562,"tag":594,"props":884,"children":885},{"class":596,"line":642},[886,892,898,903,908,913,918,923,928,933],{"type":562,"tag":594,"props":887,"children":889},{"style":888},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[890],{"type":567,"value":891},"var",{"type":562,"tag":594,"props":893,"children":895},{"style":894},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[896],{"type":567,"value":897}," combinationSum",{"type":562,"tag":594,"props":899,"children":900},{"style":780},[901],{"type":567,"value":902}," =",{"type":562,"tag":594,"props":904,"children":905},{"style":888},[906],{"type":567,"value":907}," function",{"type":562,"tag":594,"props":909,"children":910},{"style":780},[911],{"type":567,"value":912}," (",{"type":562,"tag":594,"props":914,"children":915},{"style":808},[916],{"type":567,"value":917},"candidates",{"type":562,"tag":594,"props":919,"children":920},{"style":780},[921],{"type":567,"value":922},",",{"type":562,"tag":594,"props":924,"children":925},{"style":808},[926],{"type":567,"value":927}," target",{"type":562,"tag":594,"props":929,"children":930},{"style":780},[931],{"type":567,"value":932},")",{"type":562,"tag":594,"props":934,"children":935},{"style":780},[936],{"type":567,"value":937}," {\n",{"type":562,"tag":594,"props":939,"children":941},{"class":596,"line":940},7,[942],{"type":562,"tag":594,"props":943,"children":944},{"style":766},[945],{"type":567,"value":946},"  // 寻找可行解问题，可以尝试进行搜索回溯\n",{"type":562,"tag":594,"props":948,"children":950},{"class":596,"line":949},8,[951,956,961,965],{"type":562,"tag":594,"props":952,"children":953},{"style":888},[954],{"type":567,"value":955},"  const",{"type":562,"tag":594,"props":957,"children":958},{"style":808},[959],{"type":567,"value":960}," res",{"type":562,"tag":594,"props":962,"children":963},{"style":780},[964],{"type":567,"value":902},{"type":562,"tag":594,"props":966,"children":967},{"style":780},[968],{"type":567,"value":969}," [];\n",{"type":562,"tag":594,"props":971,"children":973},{"class":596,"line":972},9,[974,978,983,987,991,996,1000,1005,1009,1014,1018,1023],{"type":562,"tag":594,"props":975,"children":976},{"style":888},[977],{"type":567,"value":955},{"type":562,"tag":594,"props":979,"children":980},{"style":894},[981],{"type":567,"value":982}," dfs",{"type":562,"tag":594,"props":984,"children":985},{"style":780},[986],{"type":567,"value":902},{"type":562,"tag":594,"props":988,"children":989},{"style":780},[990],{"type":567,"value":912},{"type":562,"tag":594,"props":992,"children":993},{"style":808},[994],{"type":567,"value":995},"target",{"type":562,"tag":594,"props":997,"children":998},{"style":780},[999],{"type":567,"value":922},{"type":562,"tag":594,"props":1001,"children":1002},{"style":808},[1003],{"type":567,"value":1004}," combine",{"type":562,"tag":594,"props":1006,"children":1007},{"style":780},[1008],{"type":567,"value":922},{"type":562,"tag":594,"props":1010,"children":1011},{"style":808},[1012],{"type":567,"value":1013}," idx",{"type":562,"tag":594,"props":1015,"children":1016},{"style":780},[1017],{"type":567,"value":932},{"type":562,"tag":594,"props":1019,"children":1020},{"style":780},[1021],{"type":567,"value":1022}," =>",{"type":562,"tag":594,"props":1024,"children":1025},{"style":780},[1026],{"type":567,"value":937},{"type":562,"tag":594,"props":1028,"children":1030},{"class":596,"line":1029},10,[1031,1036,1040,1044,1049,1055,1059],{"type":562,"tag":594,"props":1032,"children":1033},{"style":786},[1034],{"type":567,"value":1035},"    if",{"type":562,"tag":594,"props":1037,"children":1038},{"style":780},[1039],{"type":567,"value":912},{"type":562,"tag":594,"props":1041,"children":1042},{"style":808},[1043],{"type":567,"value":995},{"type":562,"tag":594,"props":1045,"children":1046},{"style":888},[1047],{"type":567,"value":1048}," ===",{"type":562,"tag":594,"props":1050,"children":1052},{"style":1051},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1053],{"type":567,"value":1054}," 0",{"type":562,"tag":594,"props":1056,"children":1057},{"style":780},[1058],{"type":567,"value":932},{"type":562,"tag":594,"props":1060,"children":1061},{"style":780},[1062],{"type":567,"value":937},{"type":562,"tag":594,"props":1064,"children":1066},{"class":596,"line":1065},11,[1067,1072,1077,1082,1087,1092],{"type":562,"tag":594,"props":1068,"children":1069},{"style":808},[1070],{"type":567,"value":1071},"      res",{"type":562,"tag":594,"props":1073,"children":1074},{"style":780},[1075],{"type":567,"value":1076},".",{"type":562,"tag":594,"props":1078,"children":1079},{"style":894},[1080],{"type":567,"value":1081},"push",{"type":562,"tag":594,"props":1083,"children":1084},{"style":780},[1085],{"type":567,"value":1086},"(",{"type":562,"tag":594,"props":1088,"children":1089},{"style":808},[1090],{"type":567,"value":1091},"combine",{"type":562,"tag":594,"props":1093,"children":1094},{"style":780},[1095],{"type":567,"value":1096},");\n",{"type":562,"tag":594,"props":1098,"children":1100},{"class":596,"line":1099},12,[1101,1106],{"type":562,"tag":594,"props":1102,"children":1103},{"style":786},[1104],{"type":567,"value":1105},"      return",{"type":562,"tag":594,"props":1107,"children":1108},{"style":780},[1109],{"type":567,"value":1110},";\n",{"type":562,"tag":594,"props":1112,"children":1114},{"class":596,"line":1113},13,[1115],{"type":562,"tag":594,"props":1116,"children":1117},{"style":780},[1118],{"type":567,"value":1119},"    }\n",{"type":562,"tag":594,"props":1121,"children":1123},{"class":596,"line":1122},14,[1124,1129,1133,1138,1143,1147,1151,1156,1160,1165,1170,1174,1180,1184,1188,1193,1197],{"type":562,"tag":594,"props":1125,"children":1126},{"style":786},[1127],{"type":567,"value":1128},"    for",{"type":562,"tag":594,"props":1130,"children":1131},{"style":780},[1132],{"type":567,"value":912},{"type":562,"tag":594,"props":1134,"children":1135},{"style":888},[1136],{"type":567,"value":1137},"let",{"type":562,"tag":594,"props":1139,"children":1140},{"style":808},[1141],{"type":567,"value":1142}," i",{"type":562,"tag":594,"props":1144,"children":1145},{"style":780},[1146],{"type":567,"value":902},{"type":562,"tag":594,"props":1148,"children":1149},{"style":808},[1150],{"type":567,"value":1013},{"type":562,"tag":594,"props":1152,"children":1153},{"style":780},[1154],{"type":567,"value":1155},";",{"type":562,"tag":594,"props":1157,"children":1158},{"style":808},[1159],{"type":567,"value":1142},{"type":562,"tag":594,"props":1161,"children":1162},{"style":780},[1163],{"type":567,"value":1164}," \u003C",{"type":562,"tag":594,"props":1166,"children":1167},{"style":808},[1168],{"type":567,"value":1169}," candidates",{"type":562,"tag":594,"props":1171,"children":1172},{"style":780},[1173],{"type":567,"value":1076},{"type":562,"tag":594,"props":1175,"children":1177},{"style":1176},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1178],{"type":567,"value":1179},"length",{"type":562,"tag":594,"props":1181,"children":1182},{"style":780},[1183],{"type":567,"value":1155},{"type":562,"tag":594,"props":1185,"children":1186},{"style":808},[1187],{"type":567,"value":1142},{"type":562,"tag":594,"props":1189,"children":1190},{"style":888},[1191],{"type":567,"value":1192},"++",{"type":562,"tag":594,"props":1194,"children":1195},{"style":780},[1196],{"type":567,"value":932},{"type":562,"tag":594,"props":1198,"children":1199},{"style":780},[1200],{"type":567,"value":937},{"type":562,"tag":594,"props":1202,"children":1204},{"class":596,"line":1203},15,[1205,1210,1214,1218,1223,1227,1232,1237,1242,1247,1251,1255],{"type":562,"tag":594,"props":1206,"children":1207},{"style":786},[1208],{"type":567,"value":1209},"      if",{"type":562,"tag":594,"props":1211,"children":1212},{"style":780},[1213],{"type":567,"value":912},{"type":562,"tag":594,"props":1215,"children":1216},{"style":808},[1217],{"type":567,"value":995},{"type":562,"tag":594,"props":1219,"children":1220},{"style":888},[1221],{"type":567,"value":1222}," -",{"type":562,"tag":594,"props":1224,"children":1225},{"style":808},[1226],{"type":567,"value":1169},{"type":562,"tag":594,"props":1228,"children":1229},{"style":780},[1230],{"type":567,"value":1231},"[",{"type":562,"tag":594,"props":1233,"children":1234},{"style":808},[1235],{"type":567,"value":1236},"i",{"type":562,"tag":594,"props":1238,"children":1239},{"style":780},[1240],{"type":567,"value":1241},"]",{"type":562,"tag":594,"props":1243,"children":1244},{"style":780},[1245],{"type":567,"value":1246}," >=",{"type":562,"tag":594,"props":1248,"children":1249},{"style":1051},[1250],{"type":567,"value":1054},{"type":562,"tag":594,"props":1252,"children":1253},{"style":780},[1254],{"type":567,"value":932},{"type":562,"tag":594,"props":1256,"children":1257},{"style":780},[1258],{"type":567,"value":937},{"type":562,"tag":594,"props":1260,"children":1262},{"class":596,"line":1261},16,[1263,1268,1272,1276,1280,1284,1288,1292,1297,1302,1306,1310,1314,1318,1322,1327,1331],{"type":562,"tag":594,"props":1264,"children":1265},{"style":894},[1266],{"type":567,"value":1267},"        dfs",{"type":562,"tag":594,"props":1269,"children":1270},{"style":780},[1271],{"type":567,"value":1086},{"type":562,"tag":594,"props":1273,"children":1274},{"style":808},[1275],{"type":567,"value":995},{"type":562,"tag":594,"props":1277,"children":1278},{"style":888},[1279],{"type":567,"value":1222},{"type":562,"tag":594,"props":1281,"children":1282},{"style":808},[1283],{"type":567,"value":1169},{"type":562,"tag":594,"props":1285,"children":1286},{"style":780},[1287],{"type":567,"value":1231},{"type":562,"tag":594,"props":1289,"children":1290},{"style":808},[1291],{"type":567,"value":1236},{"type":562,"tag":594,"props":1293,"children":1294},{"style":780},[1295],{"type":567,"value":1296},"],",{"type":562,"tag":594,"props":1298,"children":1299},{"style":780},[1300],{"type":567,"value":1301}," [...",{"type":562,"tag":594,"props":1303,"children":1304},{"style":808},[1305],{"type":567,"value":1091},{"type":562,"tag":594,"props":1307,"children":1308},{"style":780},[1309],{"type":567,"value":922},{"type":562,"tag":594,"props":1311,"children":1312},{"style":808},[1313],{"type":567,"value":1169},{"type":562,"tag":594,"props":1315,"children":1316},{"style":780},[1317],{"type":567,"value":1231},{"type":562,"tag":594,"props":1319,"children":1320},{"style":808},[1321],{"type":567,"value":1236},{"type":562,"tag":594,"props":1323,"children":1324},{"style":780},[1325],{"type":567,"value":1326},"]],",{"type":562,"tag":594,"props":1328,"children":1329},{"style":808},[1330],{"type":567,"value":1142},{"type":562,"tag":594,"props":1332,"children":1333},{"style":780},[1334],{"type":567,"value":1096},{"type":562,"tag":594,"props":1336,"children":1338},{"class":596,"line":1337},17,[1339],{"type":562,"tag":594,"props":1340,"children":1341},{"style":780},[1342],{"type":567,"value":1343},"      }\n",{"type":562,"tag":594,"props":1345,"children":1347},{"class":596,"line":1346},18,[1348],{"type":562,"tag":594,"props":1349,"children":1350},{"style":780},[1351],{"type":567,"value":1119},{"type":562,"tag":594,"props":1353,"children":1355},{"class":596,"line":1354},19,[1356],{"type":562,"tag":594,"props":1357,"children":1358},{"style":780},[1359],{"type":567,"value":1360},"  };\n",{"type":562,"tag":594,"props":1362,"children":1364},{"class":596,"line":1363},20,[1365,1370,1374,1378,1382,1387,1391],{"type":562,"tag":594,"props":1366,"children":1367},{"style":894},[1368],{"type":567,"value":1369},"  dfs",{"type":562,"tag":594,"props":1371,"children":1372},{"style":780},[1373],{"type":567,"value":1086},{"type":562,"tag":594,"props":1375,"children":1376},{"style":808},[1377],{"type":567,"value":995},{"type":562,"tag":594,"props":1379,"children":1380},{"style":780},[1381],{"type":567,"value":922},{"type":562,"tag":594,"props":1383,"children":1384},{"style":780},[1385],{"type":567,"value":1386}," [],",{"type":562,"tag":594,"props":1388,"children":1389},{"style":1051},[1390],{"type":567,"value":1054},{"type":562,"tag":594,"props":1392,"children":1393},{"style":780},[1394],{"type":567,"value":1096},{"type":562,"tag":594,"props":1396,"children":1398},{"class":596,"line":1397},21,[1399,1404,1408],{"type":562,"tag":594,"props":1400,"children":1401},{"style":786},[1402],{"type":567,"value":1403},"  return",{"type":562,"tag":594,"props":1405,"children":1406},{"style":808},[1407],{"type":567,"value":960},{"type":562,"tag":594,"props":1409,"children":1410},{"style":780},[1411],{"type":567,"value":1110},{"type":562,"tag":594,"props":1413,"children":1415},{"class":596,"line":1414},22,[1416],{"type":562,"tag":594,"props":1417,"children":1418},{"style":780},[1419],{"type":567,"value":1420},"};\n",{"type":562,"tag":1422,"props":1423,"children":1424},"style",{},[1425],{"type":567,"value":1426},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":555,"searchDepth":633,"depth":633,"links":1428},[1429,1430],{"id":738,"depth":606,"text":738},{"id":743,"depth":606,"text":743,"children":1431},[1432],{"id":749,"depth":615,"text":749},"markdown","content:1.algorithm:3.leetcode:3.major:39.combination-sum.md","content","1.algorithm/3.leetcode/3.major/39.combination-sum.md","md",[1439,1441],{"_path":114,"title":113,"description":1440},"给你一个按照非递减顺序排列的整数数组 nums，和一个目标值 target。请你找出给定目标值在数组中的开始位置和结束位置。",{"_path":120,"title":119,"description":1442},"给定 n 个非负整数表示每个宽度为 1 的柱子的高度图，计算按此排列的柱子，下雨之后能接多少雨水。",1715137597820]