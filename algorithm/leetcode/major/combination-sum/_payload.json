[{"data":1,"prerenderedAt":1391},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/combination-sum":500,"/algorithm/leetcode/major/combination-sum-surround":1386},[4,269,298,468,476,485],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":467},"代码考核","/code-assessment",[302,367,460],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369,"children":370},"业务场景","/code-assessment/scene",[371,396,406,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457],{"title":372,"_path":373,"children":374},"Promise","/code-assessment/scene/promise",[375,378,381,384,387,390,393],{"title":376,"_path":377},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":379,"_path":380},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":382,"_path":383},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":385,"_path":386},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":388,"_path":389},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":391,"_path":392},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":394,"_path":395},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":397,"_path":398,"children":399},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[400,403],{"title":401,"_path":402},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":404,"_path":405},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":407,"_path":408},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":410,"_path":411},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":413,"_path":414},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":416,"_path":417},"倒计时","/code-assessment/scene/countdown",{"title":419,"_path":420},"日期格式化","/code-assessment/scene/date-format",{"title":422,"_path":423},"实现前端路由","/code-assessment/scene/frontend-route",{"title":425,"_path":426},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":428,"_path":429},"lodash.get","/code-assessment/scene/lodash-get",{"title":431,"_path":432},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":434,"_path":435},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":437,"_path":438},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":440,"_path":441},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":443,"_path":444},"随机数","/code-assessment/scene/random-number",{"title":446,"_path":447},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":449,"_path":450},"sku 算法实现","/code-assessment/scene/sku",{"title":452,"_path":453},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":455,"_path":456},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":458,"_path":459},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":461,"_path":462,"children":463},"Ts 类型挑战","/code-assessment/type-challeges",[464],{"title":465,"_path":466},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":469,"_path":470,"children":471,"icon":475},"项目","/project",[472],{"title":473,"_path":474},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":477,"_path":478,"children":479,"icon":484},"设计模式","/design-mode",[480,481],{"title":477,"_path":478},{"title":482,"_path":483},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":486,"_path":487,"children":488,"icon":499},"后端语言","/backend-languages",[489],{"title":490,"_path":491,"children":492},"Python","/backend-languages/python",[493,496],{"title":494,"_path":495},"基础","/backend-languages/python/base",{"title":497,"_path":498},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":117,"_dir":501,"_draft":502,"_partial":502,"_locale":503,"title":116,"description":504,"url":505,"body":506,"_type":1381,"_id":1382,"_source":1383,"_file":1384,"_extension":1385},"major",false,"","给你一个 无重复元素 的整数数组 candidates 和一个目标整数 target ，找出 candidates 中可以使数字和为目标数 target 的 所有 不同组合 ，并以列表形式返回。你可以按 任意顺序 返回这些组合。","https://leetcode.cn/problems/combination-sum",{"type":507,"children":508,"toc":1375},"root",[509,516,521,526,531,597,602,625,630,653,658,683,689,694,700,1369],{"type":510,"tag":511,"props":512,"children":513},"element","p",{},[514],{"type":515,"value":504},"text",{"type":510,"tag":511,"props":517,"children":518},{},[519],{"type":515,"value":520},"candidates 中的 同一个 数字可以 无限制重复被选取 。如果至少一个数字的被选数量不同，则两种组合是不同的。",{"type":510,"tag":511,"props":522,"children":523},{},[524],{"type":515,"value":525},"对于给定的输入，保证和为 target 的不同组合数少于 150 个。",{"type":510,"tag":511,"props":527,"children":528},{},[529],{"type":515,"value":530},"示例 1：",{"type":510,"tag":532,"props":533,"children":536},"pre",{"className":534,"code":535,"language":515,"meta":503,"style":503},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：candidates = [2,3,6,7], target = 7\n输出：[[2,2,3],[7]]\n解释：\n2 和 3 可以形成一组候选，2 + 2 + 3 = 7 。注意 2 可以使用多次。\n7 也是一个候选， 7 = 7 。\n仅有这两种组合。\n",[537],{"type":510,"tag":538,"props":539,"children":540},"code",{"__ignoreMap":503},[541,552,561,570,579,588],{"type":510,"tag":542,"props":543,"children":546},"span",{"class":544,"line":545},"line",1,[547],{"type":510,"tag":542,"props":548,"children":549},{},[550],{"type":515,"value":551},"输入：candidates = [2,3,6,7], target = 7\n",{"type":510,"tag":542,"props":553,"children":555},{"class":544,"line":554},2,[556],{"type":510,"tag":542,"props":557,"children":558},{},[559],{"type":515,"value":560},"输出：[[2,2,3],[7]]\n",{"type":510,"tag":542,"props":562,"children":564},{"class":544,"line":563},3,[565],{"type":510,"tag":542,"props":566,"children":567},{},[568],{"type":515,"value":569},"解释：\n",{"type":510,"tag":542,"props":571,"children":573},{"class":544,"line":572},4,[574],{"type":510,"tag":542,"props":575,"children":576},{},[577],{"type":515,"value":578},"2 和 3 可以形成一组候选，2 + 2 + 3 = 7 。注意 2 可以使用多次。\n",{"type":510,"tag":542,"props":580,"children":582},{"class":544,"line":581},5,[583],{"type":510,"tag":542,"props":584,"children":585},{},[586],{"type":515,"value":587},"7 也是一个候选， 7 = 7 。\n",{"type":510,"tag":542,"props":589,"children":591},{"class":544,"line":590},6,[592],{"type":510,"tag":542,"props":593,"children":594},{},[595],{"type":515,"value":596},"仅有这两种组合。\n",{"type":510,"tag":511,"props":598,"children":599},{},[600],{"type":515,"value":601},"示例 2：",{"type":510,"tag":532,"props":603,"children":605},{"className":534,"code":604,"language":515,"meta":503,"style":503},"输入: candidates = [2,3,5], target = 8\n输出: [[2,2,2,2],[2,3,3],[3,5]]\n",[606],{"type":510,"tag":538,"props":607,"children":608},{"__ignoreMap":503},[609,617],{"type":510,"tag":542,"props":610,"children":611},{"class":544,"line":545},[612],{"type":510,"tag":542,"props":613,"children":614},{},[615],{"type":515,"value":616},"输入: candidates = [2,3,5], target = 8\n",{"type":510,"tag":542,"props":618,"children":619},{"class":544,"line":554},[620],{"type":510,"tag":542,"props":621,"children":622},{},[623],{"type":515,"value":624},"输出: [[2,2,2,2],[2,3,3],[3,5]]\n",{"type":510,"tag":511,"props":626,"children":627},{},[628],{"type":515,"value":629},"示例 3：",{"type":510,"tag":532,"props":631,"children":633},{"className":534,"code":632,"language":515,"meta":503,"style":503},"输入: candidates = [2], target = 1\n输出: []\n",[634],{"type":510,"tag":538,"props":635,"children":636},{"__ignoreMap":503},[637,645],{"type":510,"tag":542,"props":638,"children":639},{"class":544,"line":545},[640],{"type":510,"tag":542,"props":641,"children":642},{},[643],{"type":515,"value":644},"输入: candidates = [2], target = 1\n",{"type":510,"tag":542,"props":646,"children":647},{"class":544,"line":554},[648],{"type":510,"tag":542,"props":649,"children":650},{},[651],{"type":515,"value":652},"输出: []\n",{"type":510,"tag":511,"props":654,"children":655},{},[656],{"type":515,"value":657},"提示：",{"type":510,"tag":659,"props":660,"children":661},"ul",{},[662,668,673,678],{"type":510,"tag":663,"props":664,"children":665},"li",{},[666],{"type":515,"value":667},"1 \u003C= candidates.length \u003C= 30",{"type":510,"tag":663,"props":669,"children":670},{},[671],{"type":515,"value":672},"2 \u003C= candidates[i] \u003C= 40",{"type":510,"tag":663,"props":674,"children":675},{},[676],{"type":515,"value":677},"candidates 的所有元素 互不相同",{"type":510,"tag":663,"props":679,"children":680},{},[681],{"type":515,"value":682},"1 \u003C= target \u003C= 40",{"type":510,"tag":684,"props":685,"children":687},"h2",{"id":686},"解题思路",[688],{"type":515,"value":686},{"type":510,"tag":684,"props":690,"children":692},{"id":691},"实现",[693],{"type":515,"value":691},{"type":510,"tag":695,"props":696,"children":698},"h3",{"id":697},"回溯",[699],{"type":515,"value":697},{"type":510,"tag":532,"props":701,"children":705},{"className":702,"code":703,"language":704,"meta":503,"style":503},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} candidates\n * @param {number} target\n * @return {number[][]}\n */\nvar combinationSum = function (candidates, target) {\n  // 寻找可行解问题，可以尝试进行搜索回溯\n  const res = [];\n  const dfs = (target, combine, idx) => {\n    if (target === 0) {\n      res.push(combine);\n      return;\n    }\n    for (let i = idx; i \u003C candidates.length; i++) {\n      if (target - candidates[i] >= 0) {\n        dfs(target - candidates[i], [...combine, candidates[i]], i);\n      }\n    }\n  };\n  dfs(target, [], 0);\n  return res;\n};\n","js",[706],{"type":510,"tag":538,"props":707,"children":708},{"__ignoreMap":503},[709,718,760,793,823,831,886,895,918,975,1011,1045,1059,1068,1149,1207,1283,1292,1300,1309,1343,1360],{"type":510,"tag":542,"props":710,"children":711},{"class":544,"line":545},[712],{"type":510,"tag":542,"props":713,"children":715},{"style":714},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[716],{"type":515,"value":717},"/**\n",{"type":510,"tag":542,"props":719,"children":720},{"class":544,"line":554},[721,726,732,738,743,749,754],{"type":510,"tag":542,"props":722,"children":723},{"style":714},[724],{"type":515,"value":725}," * ",{"type":510,"tag":542,"props":727,"children":729},{"style":728},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[730],{"type":515,"value":731},"@",{"type":510,"tag":542,"props":733,"children":735},{"style":734},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[736],{"type":515,"value":737},"param",{"type":510,"tag":542,"props":739,"children":740},{"style":728},[741],{"type":515,"value":742}," {",{"type":510,"tag":542,"props":744,"children":746},{"style":745},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[747],{"type":515,"value":748},"number[]",{"type":510,"tag":542,"props":750,"children":751},{"style":728},[752],{"type":515,"value":753},"}",{"type":510,"tag":542,"props":755,"children":757},{"style":756},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[758],{"type":515,"value":759}," candidates\n",{"type":510,"tag":542,"props":761,"children":762},{"class":544,"line":563},[763,767,771,775,779,784,788],{"type":510,"tag":542,"props":764,"children":765},{"style":714},[766],{"type":515,"value":725},{"type":510,"tag":542,"props":768,"children":769},{"style":728},[770],{"type":515,"value":731},{"type":510,"tag":542,"props":772,"children":773},{"style":734},[774],{"type":515,"value":737},{"type":510,"tag":542,"props":776,"children":777},{"style":728},[778],{"type":515,"value":742},{"type":510,"tag":542,"props":780,"children":781},{"style":745},[782],{"type":515,"value":783},"number",{"type":510,"tag":542,"props":785,"children":786},{"style":728},[787],{"type":515,"value":753},{"type":510,"tag":542,"props":789,"children":790},{"style":756},[791],{"type":515,"value":792}," target\n",{"type":510,"tag":542,"props":794,"children":795},{"class":544,"line":572},[796,800,804,809,813,818],{"type":510,"tag":542,"props":797,"children":798},{"style":714},[799],{"type":515,"value":725},{"type":510,"tag":542,"props":801,"children":802},{"style":728},[803],{"type":515,"value":731},{"type":510,"tag":542,"props":805,"children":806},{"style":734},[807],{"type":515,"value":808},"return",{"type":510,"tag":542,"props":810,"children":811},{"style":728},[812],{"type":515,"value":742},{"type":510,"tag":542,"props":814,"children":815},{"style":745},[816],{"type":515,"value":817},"number[][]",{"type":510,"tag":542,"props":819,"children":820},{"style":728},[821],{"type":515,"value":822},"}\n",{"type":510,"tag":542,"props":824,"children":825},{"class":544,"line":581},[826],{"type":510,"tag":542,"props":827,"children":828},{"style":714},[829],{"type":515,"value":830}," */\n",{"type":510,"tag":542,"props":832,"children":833},{"class":544,"line":590},[834,840,846,851,856,861,866,871,876,881],{"type":510,"tag":542,"props":835,"children":837},{"style":836},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[838],{"type":515,"value":839},"var",{"type":510,"tag":542,"props":841,"children":843},{"style":842},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[844],{"type":515,"value":845}," combinationSum",{"type":510,"tag":542,"props":847,"children":848},{"style":728},[849],{"type":515,"value":850}," =",{"type":510,"tag":542,"props":852,"children":853},{"style":836},[854],{"type":515,"value":855}," function",{"type":510,"tag":542,"props":857,"children":858},{"style":728},[859],{"type":515,"value":860}," (",{"type":510,"tag":542,"props":862,"children":863},{"style":756},[864],{"type":515,"value":865},"candidates",{"type":510,"tag":542,"props":867,"children":868},{"style":728},[869],{"type":515,"value":870},",",{"type":510,"tag":542,"props":872,"children":873},{"style":756},[874],{"type":515,"value":875}," target",{"type":510,"tag":542,"props":877,"children":878},{"style":728},[879],{"type":515,"value":880},")",{"type":510,"tag":542,"props":882,"children":883},{"style":728},[884],{"type":515,"value":885}," {\n",{"type":510,"tag":542,"props":887,"children":889},{"class":544,"line":888},7,[890],{"type":510,"tag":542,"props":891,"children":892},{"style":714},[893],{"type":515,"value":894},"  // 寻找可行解问题，可以尝试进行搜索回溯\n",{"type":510,"tag":542,"props":896,"children":898},{"class":544,"line":897},8,[899,904,909,913],{"type":510,"tag":542,"props":900,"children":901},{"style":836},[902],{"type":515,"value":903},"  const",{"type":510,"tag":542,"props":905,"children":906},{"style":756},[907],{"type":515,"value":908}," res",{"type":510,"tag":542,"props":910,"children":911},{"style":728},[912],{"type":515,"value":850},{"type":510,"tag":542,"props":914,"children":915},{"style":728},[916],{"type":515,"value":917}," [];\n",{"type":510,"tag":542,"props":919,"children":921},{"class":544,"line":920},9,[922,926,931,935,939,944,948,953,957,962,966,971],{"type":510,"tag":542,"props":923,"children":924},{"style":836},[925],{"type":515,"value":903},{"type":510,"tag":542,"props":927,"children":928},{"style":842},[929],{"type":515,"value":930}," dfs",{"type":510,"tag":542,"props":932,"children":933},{"style":728},[934],{"type":515,"value":850},{"type":510,"tag":542,"props":936,"children":937},{"style":728},[938],{"type":515,"value":860},{"type":510,"tag":542,"props":940,"children":941},{"style":756},[942],{"type":515,"value":943},"target",{"type":510,"tag":542,"props":945,"children":946},{"style":728},[947],{"type":515,"value":870},{"type":510,"tag":542,"props":949,"children":950},{"style":756},[951],{"type":515,"value":952}," combine",{"type":510,"tag":542,"props":954,"children":955},{"style":728},[956],{"type":515,"value":870},{"type":510,"tag":542,"props":958,"children":959},{"style":756},[960],{"type":515,"value":961}," idx",{"type":510,"tag":542,"props":963,"children":964},{"style":728},[965],{"type":515,"value":880},{"type":510,"tag":542,"props":967,"children":968},{"style":728},[969],{"type":515,"value":970}," =>",{"type":510,"tag":542,"props":972,"children":973},{"style":728},[974],{"type":515,"value":885},{"type":510,"tag":542,"props":976,"children":978},{"class":544,"line":977},10,[979,984,988,992,997,1003,1007],{"type":510,"tag":542,"props":980,"children":981},{"style":734},[982],{"type":515,"value":983},"    if",{"type":510,"tag":542,"props":985,"children":986},{"style":728},[987],{"type":515,"value":860},{"type":510,"tag":542,"props":989,"children":990},{"style":756},[991],{"type":515,"value":943},{"type":510,"tag":542,"props":993,"children":994},{"style":836},[995],{"type":515,"value":996}," ===",{"type":510,"tag":542,"props":998,"children":1000},{"style":999},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1001],{"type":515,"value":1002}," 0",{"type":510,"tag":542,"props":1004,"children":1005},{"style":728},[1006],{"type":515,"value":880},{"type":510,"tag":542,"props":1008,"children":1009},{"style":728},[1010],{"type":515,"value":885},{"type":510,"tag":542,"props":1012,"children":1014},{"class":544,"line":1013},11,[1015,1020,1025,1030,1035,1040],{"type":510,"tag":542,"props":1016,"children":1017},{"style":756},[1018],{"type":515,"value":1019},"      res",{"type":510,"tag":542,"props":1021,"children":1022},{"style":728},[1023],{"type":515,"value":1024},".",{"type":510,"tag":542,"props":1026,"children":1027},{"style":842},[1028],{"type":515,"value":1029},"push",{"type":510,"tag":542,"props":1031,"children":1032},{"style":728},[1033],{"type":515,"value":1034},"(",{"type":510,"tag":542,"props":1036,"children":1037},{"style":756},[1038],{"type":515,"value":1039},"combine",{"type":510,"tag":542,"props":1041,"children":1042},{"style":728},[1043],{"type":515,"value":1044},");\n",{"type":510,"tag":542,"props":1046,"children":1048},{"class":544,"line":1047},12,[1049,1054],{"type":510,"tag":542,"props":1050,"children":1051},{"style":734},[1052],{"type":515,"value":1053},"      return",{"type":510,"tag":542,"props":1055,"children":1056},{"style":728},[1057],{"type":515,"value":1058},";\n",{"type":510,"tag":542,"props":1060,"children":1062},{"class":544,"line":1061},13,[1063],{"type":510,"tag":542,"props":1064,"children":1065},{"style":728},[1066],{"type":515,"value":1067},"    }\n",{"type":510,"tag":542,"props":1069,"children":1071},{"class":544,"line":1070},14,[1072,1077,1081,1086,1091,1095,1099,1104,1108,1113,1118,1122,1128,1132,1136,1141,1145],{"type":510,"tag":542,"props":1073,"children":1074},{"style":734},[1075],{"type":515,"value":1076},"    for",{"type":510,"tag":542,"props":1078,"children":1079},{"style":728},[1080],{"type":515,"value":860},{"type":510,"tag":542,"props":1082,"children":1083},{"style":836},[1084],{"type":515,"value":1085},"let",{"type":510,"tag":542,"props":1087,"children":1088},{"style":756},[1089],{"type":515,"value":1090}," i",{"type":510,"tag":542,"props":1092,"children":1093},{"style":728},[1094],{"type":515,"value":850},{"type":510,"tag":542,"props":1096,"children":1097},{"style":756},[1098],{"type":515,"value":961},{"type":510,"tag":542,"props":1100,"children":1101},{"style":728},[1102],{"type":515,"value":1103},";",{"type":510,"tag":542,"props":1105,"children":1106},{"style":756},[1107],{"type":515,"value":1090},{"type":510,"tag":542,"props":1109,"children":1110},{"style":728},[1111],{"type":515,"value":1112}," \u003C",{"type":510,"tag":542,"props":1114,"children":1115},{"style":756},[1116],{"type":515,"value":1117}," candidates",{"type":510,"tag":542,"props":1119,"children":1120},{"style":728},[1121],{"type":515,"value":1024},{"type":510,"tag":542,"props":1123,"children":1125},{"style":1124},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1126],{"type":515,"value":1127},"length",{"type":510,"tag":542,"props":1129,"children":1130},{"style":728},[1131],{"type":515,"value":1103},{"type":510,"tag":542,"props":1133,"children":1134},{"style":756},[1135],{"type":515,"value":1090},{"type":510,"tag":542,"props":1137,"children":1138},{"style":836},[1139],{"type":515,"value":1140},"++",{"type":510,"tag":542,"props":1142,"children":1143},{"style":728},[1144],{"type":515,"value":880},{"type":510,"tag":542,"props":1146,"children":1147},{"style":728},[1148],{"type":515,"value":885},{"type":510,"tag":542,"props":1150,"children":1152},{"class":544,"line":1151},15,[1153,1158,1162,1166,1171,1175,1180,1185,1190,1195,1199,1203],{"type":510,"tag":542,"props":1154,"children":1155},{"style":734},[1156],{"type":515,"value":1157},"      if",{"type":510,"tag":542,"props":1159,"children":1160},{"style":728},[1161],{"type":515,"value":860},{"type":510,"tag":542,"props":1163,"children":1164},{"style":756},[1165],{"type":515,"value":943},{"type":510,"tag":542,"props":1167,"children":1168},{"style":836},[1169],{"type":515,"value":1170}," -",{"type":510,"tag":542,"props":1172,"children":1173},{"style":756},[1174],{"type":515,"value":1117},{"type":510,"tag":542,"props":1176,"children":1177},{"style":728},[1178],{"type":515,"value":1179},"[",{"type":510,"tag":542,"props":1181,"children":1182},{"style":756},[1183],{"type":515,"value":1184},"i",{"type":510,"tag":542,"props":1186,"children":1187},{"style":728},[1188],{"type":515,"value":1189},"]",{"type":510,"tag":542,"props":1191,"children":1192},{"style":728},[1193],{"type":515,"value":1194}," >=",{"type":510,"tag":542,"props":1196,"children":1197},{"style":999},[1198],{"type":515,"value":1002},{"type":510,"tag":542,"props":1200,"children":1201},{"style":728},[1202],{"type":515,"value":880},{"type":510,"tag":542,"props":1204,"children":1205},{"style":728},[1206],{"type":515,"value":885},{"type":510,"tag":542,"props":1208,"children":1210},{"class":544,"line":1209},16,[1211,1216,1220,1224,1228,1232,1236,1240,1245,1250,1254,1258,1262,1266,1270,1275,1279],{"type":510,"tag":542,"props":1212,"children":1213},{"style":842},[1214],{"type":515,"value":1215},"        dfs",{"type":510,"tag":542,"props":1217,"children":1218},{"style":728},[1219],{"type":515,"value":1034},{"type":510,"tag":542,"props":1221,"children":1222},{"style":756},[1223],{"type":515,"value":943},{"type":510,"tag":542,"props":1225,"children":1226},{"style":836},[1227],{"type":515,"value":1170},{"type":510,"tag":542,"props":1229,"children":1230},{"style":756},[1231],{"type":515,"value":1117},{"type":510,"tag":542,"props":1233,"children":1234},{"style":728},[1235],{"type":515,"value":1179},{"type":510,"tag":542,"props":1237,"children":1238},{"style":756},[1239],{"type":515,"value":1184},{"type":510,"tag":542,"props":1241,"children":1242},{"style":728},[1243],{"type":515,"value":1244},"],",{"type":510,"tag":542,"props":1246,"children":1247},{"style":728},[1248],{"type":515,"value":1249}," [...",{"type":510,"tag":542,"props":1251,"children":1252},{"style":756},[1253],{"type":515,"value":1039},{"type":510,"tag":542,"props":1255,"children":1256},{"style":728},[1257],{"type":515,"value":870},{"type":510,"tag":542,"props":1259,"children":1260},{"style":756},[1261],{"type":515,"value":1117},{"type":510,"tag":542,"props":1263,"children":1264},{"style":728},[1265],{"type":515,"value":1179},{"type":510,"tag":542,"props":1267,"children":1268},{"style":756},[1269],{"type":515,"value":1184},{"type":510,"tag":542,"props":1271,"children":1272},{"style":728},[1273],{"type":515,"value":1274},"]],",{"type":510,"tag":542,"props":1276,"children":1277},{"style":756},[1278],{"type":515,"value":1090},{"type":510,"tag":542,"props":1280,"children":1281},{"style":728},[1282],{"type":515,"value":1044},{"type":510,"tag":542,"props":1284,"children":1286},{"class":544,"line":1285},17,[1287],{"type":510,"tag":542,"props":1288,"children":1289},{"style":728},[1290],{"type":515,"value":1291},"      }\n",{"type":510,"tag":542,"props":1293,"children":1295},{"class":544,"line":1294},18,[1296],{"type":510,"tag":542,"props":1297,"children":1298},{"style":728},[1299],{"type":515,"value":1067},{"type":510,"tag":542,"props":1301,"children":1303},{"class":544,"line":1302},19,[1304],{"type":510,"tag":542,"props":1305,"children":1306},{"style":728},[1307],{"type":515,"value":1308},"  };\n",{"type":510,"tag":542,"props":1310,"children":1312},{"class":544,"line":1311},20,[1313,1318,1322,1326,1330,1335,1339],{"type":510,"tag":542,"props":1314,"children":1315},{"style":842},[1316],{"type":515,"value":1317},"  dfs",{"type":510,"tag":542,"props":1319,"children":1320},{"style":728},[1321],{"type":515,"value":1034},{"type":510,"tag":542,"props":1323,"children":1324},{"style":756},[1325],{"type":515,"value":943},{"type":510,"tag":542,"props":1327,"children":1328},{"style":728},[1329],{"type":515,"value":870},{"type":510,"tag":542,"props":1331,"children":1332},{"style":728},[1333],{"type":515,"value":1334}," [],",{"type":510,"tag":542,"props":1336,"children":1337},{"style":999},[1338],{"type":515,"value":1002},{"type":510,"tag":542,"props":1340,"children":1341},{"style":728},[1342],{"type":515,"value":1044},{"type":510,"tag":542,"props":1344,"children":1346},{"class":544,"line":1345},21,[1347,1352,1356],{"type":510,"tag":542,"props":1348,"children":1349},{"style":734},[1350],{"type":515,"value":1351},"  return",{"type":510,"tag":542,"props":1353,"children":1354},{"style":756},[1355],{"type":515,"value":908},{"type":510,"tag":542,"props":1357,"children":1358},{"style":728},[1359],{"type":515,"value":1058},{"type":510,"tag":542,"props":1361,"children":1363},{"class":544,"line":1362},22,[1364],{"type":510,"tag":542,"props":1365,"children":1366},{"style":728},[1367],{"type":515,"value":1368},"};\n",{"type":510,"tag":1370,"props":1371,"children":1372},"style",{},[1373],{"type":515,"value":1374},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":503,"searchDepth":581,"depth":581,"links":1376},[1377,1378],{"id":686,"depth":554,"text":686},{"id":691,"depth":554,"text":691,"children":1379},[1380],{"id":697,"depth":563,"text":697},"markdown","content:1.algorithm:3.leetcode:3.major:39.combination-sum.md","content","1.algorithm/3.leetcode/3.major/39.combination-sum.md","md",[1387,1389],{"_path":114,"title":113,"description":1388},"给你一个按照非递减顺序排列的整数数组 nums，和一个目标值 target。请你找出给定目标值在数组中的开始位置和结束位置。",{"_path":120,"title":119,"description":1390},"给定 n 个非负整数表示每个宽度为 1 的柱子的高度图，计算按此排列的柱子，下雨之后能接多少雨水。",1714054336016]