[{"data":1,"prerenderedAt":1397},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/combination-sum":506,"/algorithm/leetcode/major/combination-sum-surround":1392},[4,269,298,474,482,491],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":473},"代码考核","/code-assessment",[302,373,466],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":374,"_path":375,"children":376},"业务场景","/code-assessment/scene",[377,402,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463],{"title":378,"_path":379,"children":380},"Promise","/code-assessment/scene/promise",[381,384,387,390,393,396,399],{"title":382,"_path":383},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":385,"_path":386},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":388,"_path":389},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":391,"_path":392},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":394,"_path":395},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":397,"_path":398},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":400,"_path":401},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":403,"_path":404,"children":405},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[406,409],{"title":407,"_path":408},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":410,"_path":411},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":413,"_path":414},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":416,"_path":417},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":419,"_path":420},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":422,"_path":423},"倒计时","/code-assessment/scene/countdown",{"title":425,"_path":426},"日期格式化","/code-assessment/scene/date-format",{"title":428,"_path":429},"实现前端路由","/code-assessment/scene/frontend-route",{"title":431,"_path":432},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":434,"_path":435},"lodash.get","/code-assessment/scene/lodash-get",{"title":437,"_path":438},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":440,"_path":441},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":443,"_path":444},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":446,"_path":447},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":449,"_path":450},"随机数","/code-assessment/scene/random-number",{"title":452,"_path":453},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":455,"_path":456},"sku 算法实现","/code-assessment/scene/sku",{"title":458,"_path":459},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":461,"_path":462},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":464,"_path":465},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":467,"_path":468,"children":469},"Ts 类型挑战","/code-assessment/type-challeges",[470],{"title":471,"_path":472},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":475,"_path":476,"children":477,"icon":481},"项目","/project",[478],{"title":479,"_path":480},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":483,"_path":484,"children":485,"icon":490},"设计模式","/design-mode",[486,487],{"title":483,"_path":484},{"title":488,"_path":489},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":492,"_path":493,"children":494,"icon":505},"后端语言","/backend-languages",[495],{"title":496,"_path":497,"children":498},"Python","/backend-languages/python",[499,502],{"title":500,"_path":501},"基础","/backend-languages/python/base",{"title":503,"_path":504},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":117,"_dir":507,"_draft":508,"_partial":508,"_locale":509,"title":116,"description":510,"url":511,"body":512,"_type":1387,"_id":1388,"_source":1389,"_file":1390,"_extension":1391},"major",false,"","给你一个 无重复元素 的整数数组 candidates 和一个目标整数 target ，找出 candidates 中可以使数字和为目标数 target 的 所有 不同组合 ，并以列表形式返回。你可以按 任意顺序 返回这些组合。","https://leetcode.cn/problems/combination-sum",{"type":513,"children":514,"toc":1381},"root",[515,522,527,532,537,603,608,631,636,659,664,689,695,700,706,1375],{"type":516,"tag":517,"props":518,"children":519},"element","p",{},[520],{"type":521,"value":510},"text",{"type":516,"tag":517,"props":523,"children":524},{},[525],{"type":521,"value":526},"candidates 中的 同一个 数字可以 无限制重复被选取 。如果至少一个数字的被选数量不同，则两种组合是不同的。",{"type":516,"tag":517,"props":528,"children":529},{},[530],{"type":521,"value":531},"对于给定的输入，保证和为 target 的不同组合数少于 150 个。",{"type":516,"tag":517,"props":533,"children":534},{},[535],{"type":521,"value":536},"示例 1：",{"type":516,"tag":538,"props":539,"children":542},"pre",{"className":540,"code":541,"language":521,"meta":509,"style":509},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：candidates = [2,3,6,7], target = 7\n输出：[[2,2,3],[7]]\n解释：\n2 和 3 可以形成一组候选，2 + 2 + 3 = 7 。注意 2 可以使用多次。\n7 也是一个候选， 7 = 7 。\n仅有这两种组合。\n",[543],{"type":516,"tag":544,"props":545,"children":546},"code",{"__ignoreMap":509},[547,558,567,576,585,594],{"type":516,"tag":548,"props":549,"children":552},"span",{"class":550,"line":551},"line",1,[553],{"type":516,"tag":548,"props":554,"children":555},{},[556],{"type":521,"value":557},"输入：candidates = [2,3,6,7], target = 7\n",{"type":516,"tag":548,"props":559,"children":561},{"class":550,"line":560},2,[562],{"type":516,"tag":548,"props":563,"children":564},{},[565],{"type":521,"value":566},"输出：[[2,2,3],[7]]\n",{"type":516,"tag":548,"props":568,"children":570},{"class":550,"line":569},3,[571],{"type":516,"tag":548,"props":572,"children":573},{},[574],{"type":521,"value":575},"解释：\n",{"type":516,"tag":548,"props":577,"children":579},{"class":550,"line":578},4,[580],{"type":516,"tag":548,"props":581,"children":582},{},[583],{"type":521,"value":584},"2 和 3 可以形成一组候选，2 + 2 + 3 = 7 。注意 2 可以使用多次。\n",{"type":516,"tag":548,"props":586,"children":588},{"class":550,"line":587},5,[589],{"type":516,"tag":548,"props":590,"children":591},{},[592],{"type":521,"value":593},"7 也是一个候选， 7 = 7 。\n",{"type":516,"tag":548,"props":595,"children":597},{"class":550,"line":596},6,[598],{"type":516,"tag":548,"props":599,"children":600},{},[601],{"type":521,"value":602},"仅有这两种组合。\n",{"type":516,"tag":517,"props":604,"children":605},{},[606],{"type":521,"value":607},"示例 2：",{"type":516,"tag":538,"props":609,"children":611},{"className":540,"code":610,"language":521,"meta":509,"style":509},"输入: candidates = [2,3,5], target = 8\n输出: [[2,2,2,2],[2,3,3],[3,5]]\n",[612],{"type":516,"tag":544,"props":613,"children":614},{"__ignoreMap":509},[615,623],{"type":516,"tag":548,"props":616,"children":617},{"class":550,"line":551},[618],{"type":516,"tag":548,"props":619,"children":620},{},[621],{"type":521,"value":622},"输入: candidates = [2,3,5], target = 8\n",{"type":516,"tag":548,"props":624,"children":625},{"class":550,"line":560},[626],{"type":516,"tag":548,"props":627,"children":628},{},[629],{"type":521,"value":630},"输出: [[2,2,2,2],[2,3,3],[3,5]]\n",{"type":516,"tag":517,"props":632,"children":633},{},[634],{"type":521,"value":635},"示例 3：",{"type":516,"tag":538,"props":637,"children":639},{"className":540,"code":638,"language":521,"meta":509,"style":509},"输入: candidates = [2], target = 1\n输出: []\n",[640],{"type":516,"tag":544,"props":641,"children":642},{"__ignoreMap":509},[643,651],{"type":516,"tag":548,"props":644,"children":645},{"class":550,"line":551},[646],{"type":516,"tag":548,"props":647,"children":648},{},[649],{"type":521,"value":650},"输入: candidates = [2], target = 1\n",{"type":516,"tag":548,"props":652,"children":653},{"class":550,"line":560},[654],{"type":516,"tag":548,"props":655,"children":656},{},[657],{"type":521,"value":658},"输出: []\n",{"type":516,"tag":517,"props":660,"children":661},{},[662],{"type":521,"value":663},"提示：",{"type":516,"tag":665,"props":666,"children":667},"ul",{},[668,674,679,684],{"type":516,"tag":669,"props":670,"children":671},"li",{},[672],{"type":521,"value":673},"1 \u003C= candidates.length \u003C= 30",{"type":516,"tag":669,"props":675,"children":676},{},[677],{"type":521,"value":678},"2 \u003C= candidates[i] \u003C= 40",{"type":516,"tag":669,"props":680,"children":681},{},[682],{"type":521,"value":683},"candidates 的所有元素 互不相同",{"type":516,"tag":669,"props":685,"children":686},{},[687],{"type":521,"value":688},"1 \u003C= target \u003C= 40",{"type":516,"tag":690,"props":691,"children":693},"h2",{"id":692},"解题思路",[694],{"type":521,"value":692},{"type":516,"tag":690,"props":696,"children":698},{"id":697},"实现",[699],{"type":521,"value":697},{"type":516,"tag":701,"props":702,"children":704},"h3",{"id":703},"回溯",[705],{"type":521,"value":703},{"type":516,"tag":538,"props":707,"children":711},{"className":708,"code":709,"language":710,"meta":509,"style":509},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} candidates\n * @param {number} target\n * @return {number[][]}\n */\nvar combinationSum = function (candidates, target) {\n  // 寻找可行解问题，可以尝试进行搜索回溯\n  const res = [];\n  const dfs = (target, combine, idx) => {\n    if (target === 0) {\n      res.push(combine);\n      return;\n    }\n    for (let i = idx; i \u003C candidates.length; i++) {\n      if (target - candidates[i] >= 0) {\n        dfs(target - candidates[i], [...combine, candidates[i]], i);\n      }\n    }\n  };\n  dfs(target, [], 0);\n  return res;\n};\n","js",[712],{"type":516,"tag":544,"props":713,"children":714},{"__ignoreMap":509},[715,724,766,799,829,837,892,901,924,981,1017,1051,1065,1074,1155,1213,1289,1298,1306,1315,1349,1366],{"type":516,"tag":548,"props":716,"children":717},{"class":550,"line":551},[718],{"type":516,"tag":548,"props":719,"children":721},{"style":720},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[722],{"type":521,"value":723},"/**\n",{"type":516,"tag":548,"props":725,"children":726},{"class":550,"line":560},[727,732,738,744,749,755,760],{"type":516,"tag":548,"props":728,"children":729},{"style":720},[730],{"type":521,"value":731}," * ",{"type":516,"tag":548,"props":733,"children":735},{"style":734},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[736],{"type":521,"value":737},"@",{"type":516,"tag":548,"props":739,"children":741},{"style":740},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[742],{"type":521,"value":743},"param",{"type":516,"tag":548,"props":745,"children":746},{"style":734},[747],{"type":521,"value":748}," {",{"type":516,"tag":548,"props":750,"children":752},{"style":751},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[753],{"type":521,"value":754},"number[]",{"type":516,"tag":548,"props":756,"children":757},{"style":734},[758],{"type":521,"value":759},"}",{"type":516,"tag":548,"props":761,"children":763},{"style":762},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[764],{"type":521,"value":765}," candidates\n",{"type":516,"tag":548,"props":767,"children":768},{"class":550,"line":569},[769,773,777,781,785,790,794],{"type":516,"tag":548,"props":770,"children":771},{"style":720},[772],{"type":521,"value":731},{"type":516,"tag":548,"props":774,"children":775},{"style":734},[776],{"type":521,"value":737},{"type":516,"tag":548,"props":778,"children":779},{"style":740},[780],{"type":521,"value":743},{"type":516,"tag":548,"props":782,"children":783},{"style":734},[784],{"type":521,"value":748},{"type":516,"tag":548,"props":786,"children":787},{"style":751},[788],{"type":521,"value":789},"number",{"type":516,"tag":548,"props":791,"children":792},{"style":734},[793],{"type":521,"value":759},{"type":516,"tag":548,"props":795,"children":796},{"style":762},[797],{"type":521,"value":798}," target\n",{"type":516,"tag":548,"props":800,"children":801},{"class":550,"line":578},[802,806,810,815,819,824],{"type":516,"tag":548,"props":803,"children":804},{"style":720},[805],{"type":521,"value":731},{"type":516,"tag":548,"props":807,"children":808},{"style":734},[809],{"type":521,"value":737},{"type":516,"tag":548,"props":811,"children":812},{"style":740},[813],{"type":521,"value":814},"return",{"type":516,"tag":548,"props":816,"children":817},{"style":734},[818],{"type":521,"value":748},{"type":516,"tag":548,"props":820,"children":821},{"style":751},[822],{"type":521,"value":823},"number[][]",{"type":516,"tag":548,"props":825,"children":826},{"style":734},[827],{"type":521,"value":828},"}\n",{"type":516,"tag":548,"props":830,"children":831},{"class":550,"line":587},[832],{"type":516,"tag":548,"props":833,"children":834},{"style":720},[835],{"type":521,"value":836}," */\n",{"type":516,"tag":548,"props":838,"children":839},{"class":550,"line":596},[840,846,852,857,862,867,872,877,882,887],{"type":516,"tag":548,"props":841,"children":843},{"style":842},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[844],{"type":521,"value":845},"var",{"type":516,"tag":548,"props":847,"children":849},{"style":848},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[850],{"type":521,"value":851}," combinationSum",{"type":516,"tag":548,"props":853,"children":854},{"style":734},[855],{"type":521,"value":856}," =",{"type":516,"tag":548,"props":858,"children":859},{"style":842},[860],{"type":521,"value":861}," function",{"type":516,"tag":548,"props":863,"children":864},{"style":734},[865],{"type":521,"value":866}," (",{"type":516,"tag":548,"props":868,"children":869},{"style":762},[870],{"type":521,"value":871},"candidates",{"type":516,"tag":548,"props":873,"children":874},{"style":734},[875],{"type":521,"value":876},",",{"type":516,"tag":548,"props":878,"children":879},{"style":762},[880],{"type":521,"value":881}," target",{"type":516,"tag":548,"props":883,"children":884},{"style":734},[885],{"type":521,"value":886},")",{"type":516,"tag":548,"props":888,"children":889},{"style":734},[890],{"type":521,"value":891}," {\n",{"type":516,"tag":548,"props":893,"children":895},{"class":550,"line":894},7,[896],{"type":516,"tag":548,"props":897,"children":898},{"style":720},[899],{"type":521,"value":900},"  // 寻找可行解问题，可以尝试进行搜索回溯\n",{"type":516,"tag":548,"props":902,"children":904},{"class":550,"line":903},8,[905,910,915,919],{"type":516,"tag":548,"props":906,"children":907},{"style":842},[908],{"type":521,"value":909},"  const",{"type":516,"tag":548,"props":911,"children":912},{"style":762},[913],{"type":521,"value":914}," res",{"type":516,"tag":548,"props":916,"children":917},{"style":734},[918],{"type":521,"value":856},{"type":516,"tag":548,"props":920,"children":921},{"style":734},[922],{"type":521,"value":923}," [];\n",{"type":516,"tag":548,"props":925,"children":927},{"class":550,"line":926},9,[928,932,937,941,945,950,954,959,963,968,972,977],{"type":516,"tag":548,"props":929,"children":930},{"style":842},[931],{"type":521,"value":909},{"type":516,"tag":548,"props":933,"children":934},{"style":848},[935],{"type":521,"value":936}," dfs",{"type":516,"tag":548,"props":938,"children":939},{"style":734},[940],{"type":521,"value":856},{"type":516,"tag":548,"props":942,"children":943},{"style":734},[944],{"type":521,"value":866},{"type":516,"tag":548,"props":946,"children":947},{"style":762},[948],{"type":521,"value":949},"target",{"type":516,"tag":548,"props":951,"children":952},{"style":734},[953],{"type":521,"value":876},{"type":516,"tag":548,"props":955,"children":956},{"style":762},[957],{"type":521,"value":958}," combine",{"type":516,"tag":548,"props":960,"children":961},{"style":734},[962],{"type":521,"value":876},{"type":516,"tag":548,"props":964,"children":965},{"style":762},[966],{"type":521,"value":967}," idx",{"type":516,"tag":548,"props":969,"children":970},{"style":734},[971],{"type":521,"value":886},{"type":516,"tag":548,"props":973,"children":974},{"style":734},[975],{"type":521,"value":976}," =>",{"type":516,"tag":548,"props":978,"children":979},{"style":734},[980],{"type":521,"value":891},{"type":516,"tag":548,"props":982,"children":984},{"class":550,"line":983},10,[985,990,994,998,1003,1009,1013],{"type":516,"tag":548,"props":986,"children":987},{"style":740},[988],{"type":521,"value":989},"    if",{"type":516,"tag":548,"props":991,"children":992},{"style":734},[993],{"type":521,"value":866},{"type":516,"tag":548,"props":995,"children":996},{"style":762},[997],{"type":521,"value":949},{"type":516,"tag":548,"props":999,"children":1000},{"style":842},[1001],{"type":521,"value":1002}," ===",{"type":516,"tag":548,"props":1004,"children":1006},{"style":1005},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1007],{"type":521,"value":1008}," 0",{"type":516,"tag":548,"props":1010,"children":1011},{"style":734},[1012],{"type":521,"value":886},{"type":516,"tag":548,"props":1014,"children":1015},{"style":734},[1016],{"type":521,"value":891},{"type":516,"tag":548,"props":1018,"children":1020},{"class":550,"line":1019},11,[1021,1026,1031,1036,1041,1046],{"type":516,"tag":548,"props":1022,"children":1023},{"style":762},[1024],{"type":521,"value":1025},"      res",{"type":516,"tag":548,"props":1027,"children":1028},{"style":734},[1029],{"type":521,"value":1030},".",{"type":516,"tag":548,"props":1032,"children":1033},{"style":848},[1034],{"type":521,"value":1035},"push",{"type":516,"tag":548,"props":1037,"children":1038},{"style":734},[1039],{"type":521,"value":1040},"(",{"type":516,"tag":548,"props":1042,"children":1043},{"style":762},[1044],{"type":521,"value":1045},"combine",{"type":516,"tag":548,"props":1047,"children":1048},{"style":734},[1049],{"type":521,"value":1050},");\n",{"type":516,"tag":548,"props":1052,"children":1054},{"class":550,"line":1053},12,[1055,1060],{"type":516,"tag":548,"props":1056,"children":1057},{"style":740},[1058],{"type":521,"value":1059},"      return",{"type":516,"tag":548,"props":1061,"children":1062},{"style":734},[1063],{"type":521,"value":1064},";\n",{"type":516,"tag":548,"props":1066,"children":1068},{"class":550,"line":1067},13,[1069],{"type":516,"tag":548,"props":1070,"children":1071},{"style":734},[1072],{"type":521,"value":1073},"    }\n",{"type":516,"tag":548,"props":1075,"children":1077},{"class":550,"line":1076},14,[1078,1083,1087,1092,1097,1101,1105,1110,1114,1119,1124,1128,1134,1138,1142,1147,1151],{"type":516,"tag":548,"props":1079,"children":1080},{"style":740},[1081],{"type":521,"value":1082},"    for",{"type":516,"tag":548,"props":1084,"children":1085},{"style":734},[1086],{"type":521,"value":866},{"type":516,"tag":548,"props":1088,"children":1089},{"style":842},[1090],{"type":521,"value":1091},"let",{"type":516,"tag":548,"props":1093,"children":1094},{"style":762},[1095],{"type":521,"value":1096}," i",{"type":516,"tag":548,"props":1098,"children":1099},{"style":734},[1100],{"type":521,"value":856},{"type":516,"tag":548,"props":1102,"children":1103},{"style":762},[1104],{"type":521,"value":967},{"type":516,"tag":548,"props":1106,"children":1107},{"style":734},[1108],{"type":521,"value":1109},";",{"type":516,"tag":548,"props":1111,"children":1112},{"style":762},[1113],{"type":521,"value":1096},{"type":516,"tag":548,"props":1115,"children":1116},{"style":734},[1117],{"type":521,"value":1118}," \u003C",{"type":516,"tag":548,"props":1120,"children":1121},{"style":762},[1122],{"type":521,"value":1123}," candidates",{"type":516,"tag":548,"props":1125,"children":1126},{"style":734},[1127],{"type":521,"value":1030},{"type":516,"tag":548,"props":1129,"children":1131},{"style":1130},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1132],{"type":521,"value":1133},"length",{"type":516,"tag":548,"props":1135,"children":1136},{"style":734},[1137],{"type":521,"value":1109},{"type":516,"tag":548,"props":1139,"children":1140},{"style":762},[1141],{"type":521,"value":1096},{"type":516,"tag":548,"props":1143,"children":1144},{"style":842},[1145],{"type":521,"value":1146},"++",{"type":516,"tag":548,"props":1148,"children":1149},{"style":734},[1150],{"type":521,"value":886},{"type":516,"tag":548,"props":1152,"children":1153},{"style":734},[1154],{"type":521,"value":891},{"type":516,"tag":548,"props":1156,"children":1158},{"class":550,"line":1157},15,[1159,1164,1168,1172,1177,1181,1186,1191,1196,1201,1205,1209],{"type":516,"tag":548,"props":1160,"children":1161},{"style":740},[1162],{"type":521,"value":1163},"      if",{"type":516,"tag":548,"props":1165,"children":1166},{"style":734},[1167],{"type":521,"value":866},{"type":516,"tag":548,"props":1169,"children":1170},{"style":762},[1171],{"type":521,"value":949},{"type":516,"tag":548,"props":1173,"children":1174},{"style":842},[1175],{"type":521,"value":1176}," -",{"type":516,"tag":548,"props":1178,"children":1179},{"style":762},[1180],{"type":521,"value":1123},{"type":516,"tag":548,"props":1182,"children":1183},{"style":734},[1184],{"type":521,"value":1185},"[",{"type":516,"tag":548,"props":1187,"children":1188},{"style":762},[1189],{"type":521,"value":1190},"i",{"type":516,"tag":548,"props":1192,"children":1193},{"style":734},[1194],{"type":521,"value":1195},"]",{"type":516,"tag":548,"props":1197,"children":1198},{"style":734},[1199],{"type":521,"value":1200}," >=",{"type":516,"tag":548,"props":1202,"children":1203},{"style":1005},[1204],{"type":521,"value":1008},{"type":516,"tag":548,"props":1206,"children":1207},{"style":734},[1208],{"type":521,"value":886},{"type":516,"tag":548,"props":1210,"children":1211},{"style":734},[1212],{"type":521,"value":891},{"type":516,"tag":548,"props":1214,"children":1216},{"class":550,"line":1215},16,[1217,1222,1226,1230,1234,1238,1242,1246,1251,1256,1260,1264,1268,1272,1276,1281,1285],{"type":516,"tag":548,"props":1218,"children":1219},{"style":848},[1220],{"type":521,"value":1221},"        dfs",{"type":516,"tag":548,"props":1223,"children":1224},{"style":734},[1225],{"type":521,"value":1040},{"type":516,"tag":548,"props":1227,"children":1228},{"style":762},[1229],{"type":521,"value":949},{"type":516,"tag":548,"props":1231,"children":1232},{"style":842},[1233],{"type":521,"value":1176},{"type":516,"tag":548,"props":1235,"children":1236},{"style":762},[1237],{"type":521,"value":1123},{"type":516,"tag":548,"props":1239,"children":1240},{"style":734},[1241],{"type":521,"value":1185},{"type":516,"tag":548,"props":1243,"children":1244},{"style":762},[1245],{"type":521,"value":1190},{"type":516,"tag":548,"props":1247,"children":1248},{"style":734},[1249],{"type":521,"value":1250},"],",{"type":516,"tag":548,"props":1252,"children":1253},{"style":734},[1254],{"type":521,"value":1255}," [...",{"type":516,"tag":548,"props":1257,"children":1258},{"style":762},[1259],{"type":521,"value":1045},{"type":516,"tag":548,"props":1261,"children":1262},{"style":734},[1263],{"type":521,"value":876},{"type":516,"tag":548,"props":1265,"children":1266},{"style":762},[1267],{"type":521,"value":1123},{"type":516,"tag":548,"props":1269,"children":1270},{"style":734},[1271],{"type":521,"value":1185},{"type":516,"tag":548,"props":1273,"children":1274},{"style":762},[1275],{"type":521,"value":1190},{"type":516,"tag":548,"props":1277,"children":1278},{"style":734},[1279],{"type":521,"value":1280},"]],",{"type":516,"tag":548,"props":1282,"children":1283},{"style":762},[1284],{"type":521,"value":1096},{"type":516,"tag":548,"props":1286,"children":1287},{"style":734},[1288],{"type":521,"value":1050},{"type":516,"tag":548,"props":1290,"children":1292},{"class":550,"line":1291},17,[1293],{"type":516,"tag":548,"props":1294,"children":1295},{"style":734},[1296],{"type":521,"value":1297},"      }\n",{"type":516,"tag":548,"props":1299,"children":1301},{"class":550,"line":1300},18,[1302],{"type":516,"tag":548,"props":1303,"children":1304},{"style":734},[1305],{"type":521,"value":1073},{"type":516,"tag":548,"props":1307,"children":1309},{"class":550,"line":1308},19,[1310],{"type":516,"tag":548,"props":1311,"children":1312},{"style":734},[1313],{"type":521,"value":1314},"  };\n",{"type":516,"tag":548,"props":1316,"children":1318},{"class":550,"line":1317},20,[1319,1324,1328,1332,1336,1341,1345],{"type":516,"tag":548,"props":1320,"children":1321},{"style":848},[1322],{"type":521,"value":1323},"  dfs",{"type":516,"tag":548,"props":1325,"children":1326},{"style":734},[1327],{"type":521,"value":1040},{"type":516,"tag":548,"props":1329,"children":1330},{"style":762},[1331],{"type":521,"value":949},{"type":516,"tag":548,"props":1333,"children":1334},{"style":734},[1335],{"type":521,"value":876},{"type":516,"tag":548,"props":1337,"children":1338},{"style":734},[1339],{"type":521,"value":1340}," [],",{"type":516,"tag":548,"props":1342,"children":1343},{"style":1005},[1344],{"type":521,"value":1008},{"type":516,"tag":548,"props":1346,"children":1347},{"style":734},[1348],{"type":521,"value":1050},{"type":516,"tag":548,"props":1350,"children":1352},{"class":550,"line":1351},21,[1353,1358,1362],{"type":516,"tag":548,"props":1354,"children":1355},{"style":740},[1356],{"type":521,"value":1357},"  return",{"type":516,"tag":548,"props":1359,"children":1360},{"style":762},[1361],{"type":521,"value":914},{"type":516,"tag":548,"props":1363,"children":1364},{"style":734},[1365],{"type":521,"value":1064},{"type":516,"tag":548,"props":1367,"children":1369},{"class":550,"line":1368},22,[1370],{"type":516,"tag":548,"props":1371,"children":1372},{"style":734},[1373],{"type":521,"value":1374},"};\n",{"type":516,"tag":1376,"props":1377,"children":1378},"style",{},[1379],{"type":521,"value":1380},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":509,"searchDepth":587,"depth":587,"links":1382},[1383,1384],{"id":692,"depth":560,"text":692},{"id":697,"depth":560,"text":697,"children":1385},[1386],{"id":703,"depth":569,"text":703},"markdown","content:1.algorithm:3.leetcode:3.major:39.combination-sum.md","content","1.algorithm/3.leetcode/3.major/39.combination-sum.md","md",[1393,1395],{"_path":114,"title":113,"description":1394},"给你一个按照非递减顺序排列的整数数组 nums，和一个目标值 target。请你找出给定目标值在数组中的开始位置和结束位置。",{"_path":120,"title":119,"description":1396},"给定 n 个非负整数表示每个宽度为 1 的柱子的高度图，计算按此排列的柱子，下雨之后能接多少雨水。",1714058125479]