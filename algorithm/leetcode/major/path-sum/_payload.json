[{"data":1,"prerenderedAt":1397},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/path-sum":460,"/algorithm/leetcode/major/path-sum-surround":1392},[4,263,292,437,445],{"title":5,"_path":6,"children":7,"icon":262},"算法","/algorithm",[8,25],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27,"children":28},"Leetcode 力扣","/algorithm/leetcode",[29,35,48],{"title":30,"_path":31,"children":32},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[33],{"title":34,"_path":31},"刷题索引",{"title":36,"_path":37,"children":38},"剑指 offer","/algorithm/leetcode/sword-ofter",[39,42,45],{"title":40,"_path":41},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":43,"_path":44},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":46,"_path":47},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":49,"_path":50,"children":51},"主题单","/algorithm/leetcode/major",[52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259],{"title":53,"_path":54},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":56,"_path":57},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":59,"_path":60},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":62,"_path":63},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":65,"_path":66},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":68,"_path":69},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":71,"_path":72},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":74,"_path":75},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":77,"_path":78},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":80,"_path":81},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":83,"_path":84},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":86,"_path":87},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":89,"_path":90},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":92,"_path":93},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":95,"_path":96},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":98,"_path":99},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":101,"_path":102},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":104,"_path":105},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":107,"_path":108},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":110,"_path":111},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":113,"_path":114},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":116,"_path":117},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":119,"_path":120},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":122,"_path":123},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":125,"_path":126},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":128,"_path":129},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":131,"_path":132},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":134,"_path":135},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":137,"_path":138},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":140,"_path":141},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":143,"_path":144},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":146,"_path":147},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":149,"_path":150},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":152,"_path":153},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":155,"_path":156},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":158,"_path":159},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":161,"_path":162},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":164,"_path":165},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":167,"_path":168},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":170,"_path":171},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":173,"_path":174},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":176,"_path":177},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":179,"_path":180},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":182,"_path":183},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":185,"_path":186},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":188,"_path":189},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":191,"_path":192},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":194,"_path":195},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":197,"_path":198},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":200,"_path":201},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":203,"_path":204},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":206,"_path":207},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":209,"_path":210},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":212,"_path":213},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":215,"_path":216},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":218,"_path":219},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":221,"_path":222},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":224,"_path":225},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":227,"_path":228},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":230,"_path":231},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":233,"_path":234},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":236,"_path":237},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":239,"_path":240},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":242,"_path":243},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":245,"_path":246},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":248,"_path":249},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":251,"_path":252},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":254,"_path":255},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":257,"_path":258},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":260,"_path":261},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":264,"_path":265,"children":266,"icon":291},"前端八股文","/frontend-endorsement",[267,278],{"title":268,"_path":269,"children":270},"构建工具","/frontend-endorsement/build-tools",[271],{"title":272,"_path":273,"children":274},"Webpack","/frontend-endorsement/build-tools/webpack",[275],{"title":276,"_path":277},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":279,"_path":280,"children":281},"Html","/frontend-endorsement/html",[282,285,288],{"title":283,"_path":284},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":286,"_path":287},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":289,"_path":290},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":293,"_path":294,"children":295,"icon":436},"前端代码考核","/frontend-code-assessment",[296,345,429],{"title":297,"_path":298,"children":299},"源码实现","/frontend-code-assessment/source",[300,325,338],{"title":301,"_path":302,"children":303},"原生 api","/frontend-code-assessment/source/native-api",[304,307,310,313,316,319,322],{"title":305,"_path":306},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":308,"_path":309},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":311,"_path":312},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":314,"_path":315},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":317,"_path":318},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":320,"_path":321},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":323,"_path":324},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":326,"_path":327,"children":328},"数组 Array","/frontend-code-assessment/source/array",[329,332,335],{"title":330,"_path":331},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":333,"_path":334},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":336,"_path":337},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":339,"_path":340,"children":341},"字符串 String","/frontend-code-assessment/source/string",[342],{"title":343,"_path":344},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":346,"_path":347,"children":348},"业务场景","/frontend-code-assessment/scene",[349,371,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426],{"title":350,"_path":351,"children":352},"Promise","/frontend-code-assessment/scene/promise",[353,356,359,362,365,368],{"title":354,"_path":355},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":357,"_path":358},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":360,"_path":361},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":363,"_path":364},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":366,"_path":367},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":369,"_path":370},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":372,"_path":373,"children":374},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[375],{"title":376,"_path":377},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":379,"_path":380},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":382,"_path":383},"倒计时","/frontend-code-assessment/scene/countdown",{"title":385,"_path":386},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":388,"_path":389},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":391,"_path":392},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":394,"_path":395},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":397,"_path":398},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":400,"_path":401},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":403,"_path":404},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":406,"_path":407},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":409,"_path":410},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":412,"_path":413},"随机数","/frontend-code-assessment/scene/random-number",{"title":415,"_path":416},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":418,"_path":419},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":421,"_path":422},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":424,"_path":425},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":427,"_path":428},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":430,"_path":431,"children":432},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[433],{"title":434,"_path":435},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":438,"_path":439,"children":440,"icon":444},"项目","/pro",[441],{"title":442,"_path":443},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":446,"_path":447,"children":448,"icon":459},"后端语言","/backend-languages",[449],{"title":450,"_path":451,"children":452},"Python","/backend-languages/python",[453,456],{"title":454,"_path":455},"基础","/backend-languages/python/base",{"title":457,"_path":458},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":156,"_dir":461,"_draft":462,"_partial":462,"_locale":463,"title":155,"description":464,"url":465,"body":466,"_type":1387,"_id":1388,"_source":1389,"_file":1390,"_extension":1391},"major",false,"","给你二叉树的根节点 root 和一个表示目标和的整数 targetSum 。判断该树中是否存在 根节点到叶子节点 的路径，这条路径上所有节点值相加等于目标和 targetSum 。如果存在，返回 true ；否则，返回 false 。","https://leetcode.cn/problems/path-sum",{"type":467,"children":468,"toc":1381},"root",[469,476,481,486,495,534,539,547,605,610,640,645,665,671,676,683,1375],{"type":470,"tag":471,"props":472,"children":473},"element","p",{},[474],{"type":475,"value":464},"text",{"type":470,"tag":471,"props":477,"children":478},{},[479],{"type":475,"value":480},"叶子节点 是指没有子节点的节点。",{"type":470,"tag":471,"props":482,"children":483},{},[484],{"type":475,"value":485},"示例 1：",{"type":470,"tag":471,"props":487,"children":488},{},[489],{"type":470,"tag":490,"props":491,"children":494},"img",{"alt":492,"src":493},"pathsum1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.112_pathsum1.png",[],{"type":470,"tag":496,"props":497,"children":500},"pre",{"className":498,"code":499,"language":475,"meta":463,"style":463},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n输出：true\n解释：等于目标和的根节点到叶节点路径如上图所示。\n",[501],{"type":470,"tag":502,"props":503,"children":504},"code",{"__ignoreMap":463},[505,516,525],{"type":470,"tag":506,"props":507,"children":510},"span",{"class":508,"line":509},"line",1,[511],{"type":470,"tag":506,"props":512,"children":513},{},[514],{"type":475,"value":515},"输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n",{"type":470,"tag":506,"props":517,"children":519},{"class":508,"line":518},2,[520],{"type":470,"tag":506,"props":521,"children":522},{},[523],{"type":475,"value":524},"输出：true\n",{"type":470,"tag":506,"props":526,"children":528},{"class":508,"line":527},3,[529],{"type":470,"tag":506,"props":530,"children":531},{},[532],{"type":475,"value":533},"解释：等于目标和的根节点到叶节点路径如上图所示。\n",{"type":470,"tag":471,"props":535,"children":536},{},[537],{"type":475,"value":538},"示例 2：",{"type":470,"tag":471,"props":540,"children":541},{},[542],{"type":470,"tag":490,"props":543,"children":546},{"alt":544,"src":545},"pathsum2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.112_pathsum2.png",[],{"type":470,"tag":496,"props":548,"children":550},{"className":498,"code":549,"language":475,"meta":463,"style":463},"输入：root = [1,2,3], targetSum = 5\n输出：false\n解释：树中存在两条根节点到叶子节点的路径：\n(1 --> 2): 和为 3\n(1 --> 3): 和为 4\n不存在 sum = 5 的根节点到叶子节点的路径。\n",[551],{"type":470,"tag":502,"props":552,"children":553},{"__ignoreMap":463},[554,562,570,578,587,596],{"type":470,"tag":506,"props":555,"children":556},{"class":508,"line":509},[557],{"type":470,"tag":506,"props":558,"children":559},{},[560],{"type":475,"value":561},"输入：root = [1,2,3], targetSum = 5\n",{"type":470,"tag":506,"props":563,"children":564},{"class":508,"line":518},[565],{"type":470,"tag":506,"props":566,"children":567},{},[568],{"type":475,"value":569},"输出：false\n",{"type":470,"tag":506,"props":571,"children":572},{"class":508,"line":527},[573],{"type":470,"tag":506,"props":574,"children":575},{},[576],{"type":475,"value":577},"解释：树中存在两条根节点到叶子节点的路径：\n",{"type":470,"tag":506,"props":579,"children":581},{"class":508,"line":580},4,[582],{"type":470,"tag":506,"props":583,"children":584},{},[585],{"type":475,"value":586},"(1 --> 2): 和为 3\n",{"type":470,"tag":506,"props":588,"children":590},{"class":508,"line":589},5,[591],{"type":470,"tag":506,"props":592,"children":593},{},[594],{"type":475,"value":595},"(1 --> 3): 和为 4\n",{"type":470,"tag":506,"props":597,"children":599},{"class":508,"line":598},6,[600],{"type":470,"tag":506,"props":601,"children":602},{},[603],{"type":475,"value":604},"不存在 sum = 5 的根节点到叶子节点的路径。\n",{"type":470,"tag":471,"props":606,"children":607},{},[608],{"type":475,"value":609},"示例 3：",{"type":470,"tag":496,"props":611,"children":613},{"className":498,"code":612,"language":475,"meta":463,"style":463},"输入：root = [], targetSum = 0\n输出：false\n解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",[614],{"type":470,"tag":502,"props":615,"children":616},{"__ignoreMap":463},[617,625,632],{"type":470,"tag":506,"props":618,"children":619},{"class":508,"line":509},[620],{"type":470,"tag":506,"props":621,"children":622},{},[623],{"type":475,"value":624},"输入：root = [], targetSum = 0\n",{"type":470,"tag":506,"props":626,"children":627},{"class":508,"line":518},[628],{"type":470,"tag":506,"props":629,"children":630},{},[631],{"type":475,"value":569},{"type":470,"tag":506,"props":633,"children":634},{"class":508,"line":527},[635],{"type":470,"tag":506,"props":636,"children":637},{},[638],{"type":475,"value":639},"解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",{"type":470,"tag":471,"props":641,"children":642},{},[643],{"type":475,"value":644},"提示：",{"type":470,"tag":646,"props":647,"children":648},"ul",{},[649,655,660],{"type":470,"tag":650,"props":651,"children":652},"li",{},[653],{"type":475,"value":654},"树中节点的数目在范围 [0, 5000] 内",{"type":470,"tag":650,"props":656,"children":657},{},[658],{"type":475,"value":659},"-1000 \u003C= Node.val \u003C= 1000",{"type":470,"tag":650,"props":661,"children":662},{},[663],{"type":475,"value":664},"-1000 \u003C= targetSum \u003C= 1000",{"type":470,"tag":666,"props":667,"children":669},"h2",{"id":668},"解题思路",[670],{"type":475,"value":668},{"type":470,"tag":666,"props":672,"children":674},{"id":673},"实现",[675],{"type":475,"value":673},{"type":470,"tag":677,"props":678,"children":680},"h3",{"id":679},"深度优先搜索-dfs",[681],{"type":475,"value":682},"深度优先搜索 - dfs",{"type":470,"tag":496,"props":684,"children":688},{"className":685,"code":686,"language":687,"meta":463,"style":463},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {boolean}\n */\nvar hasPathSum = function (root, targetSum) {\n  if (root === null) return false;\n  if (root.left === null && root.right === null) return root.val === targetSum;\n  return (\n    hasPathSum(root.left, targetSum - root.val) ||\n    hasPathSum(root.right, targetSum - root.val)\n  );\n};\n","js",[689],{"type":470,"tag":502,"props":690,"children":691},{"__ignoreMap":463},[692,701,709,717,769,835,888,941,950,960,968,995,1017,1035,1043,1088,1133,1223,1237,1296,1349,1362],{"type":470,"tag":506,"props":693,"children":694},{"class":508,"line":509},[695],{"type":470,"tag":506,"props":696,"children":698},{"style":697},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[699],{"type":475,"value":700},"/**\n",{"type":470,"tag":506,"props":702,"children":703},{"class":508,"line":518},[704],{"type":470,"tag":506,"props":705,"children":706},{"style":697},[707],{"type":475,"value":708}," * Definition for a binary tree node.\n",{"type":470,"tag":506,"props":710,"children":711},{"class":508,"line":527},[712],{"type":470,"tag":506,"props":713,"children":714},{"style":697},[715],{"type":475,"value":716}," */\n",{"type":470,"tag":506,"props":718,"children":719},{"class":508,"line":580},[720,726,732,738,744,750,755,759,764],{"type":470,"tag":506,"props":721,"children":723},{"style":722},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[724],{"type":475,"value":725},"function",{"type":470,"tag":506,"props":727,"children":729},{"style":728},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[730],{"type":475,"value":731}," TreeNode",{"type":470,"tag":506,"props":733,"children":735},{"style":734},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[736],{"type":475,"value":737},"(",{"type":470,"tag":506,"props":739,"children":741},{"style":740},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[742],{"type":475,"value":743},"val",{"type":470,"tag":506,"props":745,"children":747},{"style":746},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[748],{"type":475,"value":749},",",{"type":470,"tag":506,"props":751,"children":752},{"style":740},[753],{"type":475,"value":754}," left",{"type":470,"tag":506,"props":756,"children":757},{"style":746},[758],{"type":475,"value":749},{"type":470,"tag":506,"props":760,"children":761},{"style":740},[762],{"type":475,"value":763}," right",{"type":470,"tag":506,"props":765,"children":766},{"style":734},[767],{"type":475,"value":768},") {\n",{"type":470,"tag":506,"props":770,"children":771},{"class":508,"line":589},[772,778,784,789,795,800,805,811,816,821,826,830],{"type":470,"tag":506,"props":773,"children":775},{"style":774},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[776],{"type":475,"value":777},"  this",{"type":470,"tag":506,"props":779,"children":781},{"style":780},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[782],{"type":475,"value":783},".",{"type":470,"tag":506,"props":785,"children":787},{"style":786},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[788],{"type":475,"value":743},{"type":470,"tag":506,"props":790,"children":792},{"style":791},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[793],{"type":475,"value":794}," =",{"type":470,"tag":506,"props":796,"children":797},{"style":786},[798],{"type":475,"value":799}," val",{"type":470,"tag":506,"props":801,"children":802},{"style":791},[803],{"type":475,"value":804}," ===",{"type":470,"tag":506,"props":806,"children":808},{"style":807},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[809],{"type":475,"value":810}," undefined",{"type":470,"tag":506,"props":812,"children":813},{"style":791},[814],{"type":475,"value":815}," ?",{"type":470,"tag":506,"props":817,"children":818},{"style":807},[819],{"type":475,"value":820}," 0",{"type":470,"tag":506,"props":822,"children":823},{"style":791},[824],{"type":475,"value":825}," :",{"type":470,"tag":506,"props":827,"children":828},{"style":786},[829],{"type":475,"value":799},{"type":470,"tag":506,"props":831,"children":832},{"style":746},[833],{"type":475,"value":834},";\n",{"type":470,"tag":506,"props":836,"children":837},{"class":508,"line":598},[838,842,846,851,855,859,863,867,871,876,880,884],{"type":470,"tag":506,"props":839,"children":840},{"style":774},[841],{"type":475,"value":777},{"type":470,"tag":506,"props":843,"children":844},{"style":780},[845],{"type":475,"value":783},{"type":470,"tag":506,"props":847,"children":848},{"style":786},[849],{"type":475,"value":850},"left",{"type":470,"tag":506,"props":852,"children":853},{"style":791},[854],{"type":475,"value":794},{"type":470,"tag":506,"props":856,"children":857},{"style":786},[858],{"type":475,"value":754},{"type":470,"tag":506,"props":860,"children":861},{"style":791},[862],{"type":475,"value":804},{"type":470,"tag":506,"props":864,"children":865},{"style":807},[866],{"type":475,"value":810},{"type":470,"tag":506,"props":868,"children":869},{"style":791},[870],{"type":475,"value":815},{"type":470,"tag":506,"props":872,"children":873},{"style":807},[874],{"type":475,"value":875}," null",{"type":470,"tag":506,"props":877,"children":878},{"style":791},[879],{"type":475,"value":825},{"type":470,"tag":506,"props":881,"children":882},{"style":786},[883],{"type":475,"value":754},{"type":470,"tag":506,"props":885,"children":886},{"style":746},[887],{"type":475,"value":834},{"type":470,"tag":506,"props":889,"children":891},{"class":508,"line":890},7,[892,896,900,905,909,913,917,921,925,929,933,937],{"type":470,"tag":506,"props":893,"children":894},{"style":774},[895],{"type":475,"value":777},{"type":470,"tag":506,"props":897,"children":898},{"style":780},[899],{"type":475,"value":783},{"type":470,"tag":506,"props":901,"children":902},{"style":786},[903],{"type":475,"value":904},"right",{"type":470,"tag":506,"props":906,"children":907},{"style":791},[908],{"type":475,"value":794},{"type":470,"tag":506,"props":910,"children":911},{"style":786},[912],{"type":475,"value":763},{"type":470,"tag":506,"props":914,"children":915},{"style":791},[916],{"type":475,"value":804},{"type":470,"tag":506,"props":918,"children":919},{"style":807},[920],{"type":475,"value":810},{"type":470,"tag":506,"props":922,"children":923},{"style":791},[924],{"type":475,"value":815},{"type":470,"tag":506,"props":926,"children":927},{"style":807},[928],{"type":475,"value":875},{"type":470,"tag":506,"props":930,"children":931},{"style":791},[932],{"type":475,"value":825},{"type":470,"tag":506,"props":934,"children":935},{"style":786},[936],{"type":475,"value":763},{"type":470,"tag":506,"props":938,"children":939},{"style":746},[940],{"type":475,"value":834},{"type":470,"tag":506,"props":942,"children":944},{"class":508,"line":943},8,[945],{"type":470,"tag":506,"props":946,"children":947},{"style":734},[948],{"type":475,"value":949},"}\n",{"type":470,"tag":506,"props":951,"children":953},{"class":508,"line":952},9,[954],{"type":470,"tag":506,"props":955,"children":957},{"emptyLinePlaceholder":956},true,[958],{"type":475,"value":959},"\n",{"type":470,"tag":506,"props":961,"children":963},{"class":508,"line":962},10,[964],{"type":470,"tag":506,"props":965,"children":966},{"style":697},[967],{"type":475,"value":700},{"type":470,"tag":506,"props":969,"children":971},{"class":508,"line":970},11,[972,977,983,989],{"type":470,"tag":506,"props":973,"children":974},{"style":697},[975],{"type":475,"value":976}," * ",{"type":470,"tag":506,"props":978,"children":980},{"style":979},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[981],{"type":475,"value":982},"@param",{"type":470,"tag":506,"props":984,"children":986},{"style":985},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[987],{"type":475,"value":988}," {TreeNode}",{"type":470,"tag":506,"props":990,"children":992},{"style":991},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[993],{"type":475,"value":994}," root\n",{"type":470,"tag":506,"props":996,"children":998},{"class":508,"line":997},12,[999,1003,1007,1012],{"type":470,"tag":506,"props":1000,"children":1001},{"style":697},[1002],{"type":475,"value":976},{"type":470,"tag":506,"props":1004,"children":1005},{"style":979},[1006],{"type":475,"value":982},{"type":470,"tag":506,"props":1008,"children":1009},{"style":985},[1010],{"type":475,"value":1011}," {number}",{"type":470,"tag":506,"props":1013,"children":1014},{"style":991},[1015],{"type":475,"value":1016}," targetSum\n",{"type":470,"tag":506,"props":1018,"children":1020},{"class":508,"line":1019},13,[1021,1025,1030],{"type":470,"tag":506,"props":1022,"children":1023},{"style":697},[1024],{"type":475,"value":976},{"type":470,"tag":506,"props":1026,"children":1027},{"style":979},[1028],{"type":475,"value":1029},"@return",{"type":470,"tag":506,"props":1031,"children":1032},{"style":985},[1033],{"type":475,"value":1034}," {boolean}\n",{"type":470,"tag":506,"props":1036,"children":1038},{"class":508,"line":1037},14,[1039],{"type":470,"tag":506,"props":1040,"children":1041},{"style":697},[1042],{"type":475,"value":716},{"type":470,"tag":506,"props":1044,"children":1046},{"class":508,"line":1045},15,[1047,1052,1057,1061,1066,1071,1075,1079,1084],{"type":470,"tag":506,"props":1048,"children":1049},{"style":722},[1050],{"type":475,"value":1051},"var",{"type":470,"tag":506,"props":1053,"children":1054},{"style":728},[1055],{"type":475,"value":1056}," hasPathSum",{"type":470,"tag":506,"props":1058,"children":1059},{"style":791},[1060],{"type":475,"value":794},{"type":470,"tag":506,"props":1062,"children":1063},{"style":722},[1064],{"type":475,"value":1065}," function",{"type":470,"tag":506,"props":1067,"children":1068},{"style":734},[1069],{"type":475,"value":1070}," (",{"type":470,"tag":506,"props":1072,"children":1073},{"style":740},[1074],{"type":475,"value":467},{"type":470,"tag":506,"props":1076,"children":1077},{"style":746},[1078],{"type":475,"value":749},{"type":470,"tag":506,"props":1080,"children":1081},{"style":740},[1082],{"type":475,"value":1083}," targetSum",{"type":470,"tag":506,"props":1085,"children":1086},{"style":734},[1087],{"type":475,"value":768},{"type":470,"tag":506,"props":1089,"children":1091},{"class":508,"line":1090},16,[1092,1098,1102,1106,1110,1114,1119,1124,1129],{"type":470,"tag":506,"props":1093,"children":1095},{"style":1094},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[1096],{"type":475,"value":1097},"  if",{"type":470,"tag":506,"props":1099,"children":1100},{"style":734},[1101],{"type":475,"value":1070},{"type":470,"tag":506,"props":1103,"children":1104},{"style":786},[1105],{"type":475,"value":467},{"type":470,"tag":506,"props":1107,"children":1108},{"style":791},[1109],{"type":475,"value":804},{"type":470,"tag":506,"props":1111,"children":1112},{"style":807},[1113],{"type":475,"value":875},{"type":470,"tag":506,"props":1115,"children":1116},{"style":734},[1117],{"type":475,"value":1118},") ",{"type":470,"tag":506,"props":1120,"children":1121},{"style":1094},[1122],{"type":475,"value":1123},"return",{"type":470,"tag":506,"props":1125,"children":1126},{"style":807},[1127],{"type":475,"value":1128}," false",{"type":470,"tag":506,"props":1130,"children":1131},{"style":746},[1132],{"type":475,"value":834},{"type":470,"tag":506,"props":1134,"children":1136},{"class":508,"line":1135},17,[1137,1141,1145,1149,1153,1157,1161,1165,1170,1175,1179,1183,1187,1191,1195,1199,1203,1207,1211,1215,1219],{"type":470,"tag":506,"props":1138,"children":1139},{"style":1094},[1140],{"type":475,"value":1097},{"type":470,"tag":506,"props":1142,"children":1143},{"style":734},[1144],{"type":475,"value":1070},{"type":470,"tag":506,"props":1146,"children":1147},{"style":786},[1148],{"type":475,"value":467},{"type":470,"tag":506,"props":1150,"children":1151},{"style":780},[1152],{"type":475,"value":783},{"type":470,"tag":506,"props":1154,"children":1155},{"style":786},[1156],{"type":475,"value":850},{"type":470,"tag":506,"props":1158,"children":1159},{"style":791},[1160],{"type":475,"value":804},{"type":470,"tag":506,"props":1162,"children":1163},{"style":807},[1164],{"type":475,"value":875},{"type":470,"tag":506,"props":1166,"children":1167},{"style":791},[1168],{"type":475,"value":1169}," &&",{"type":470,"tag":506,"props":1171,"children":1172},{"style":786},[1173],{"type":475,"value":1174}," root",{"type":470,"tag":506,"props":1176,"children":1177},{"style":780},[1178],{"type":475,"value":783},{"type":470,"tag":506,"props":1180,"children":1181},{"style":786},[1182],{"type":475,"value":904},{"type":470,"tag":506,"props":1184,"children":1185},{"style":791},[1186],{"type":475,"value":804},{"type":470,"tag":506,"props":1188,"children":1189},{"style":807},[1190],{"type":475,"value":875},{"type":470,"tag":506,"props":1192,"children":1193},{"style":734},[1194],{"type":475,"value":1118},{"type":470,"tag":506,"props":1196,"children":1197},{"style":1094},[1198],{"type":475,"value":1123},{"type":470,"tag":506,"props":1200,"children":1201},{"style":786},[1202],{"type":475,"value":1174},{"type":470,"tag":506,"props":1204,"children":1205},{"style":780},[1206],{"type":475,"value":783},{"type":470,"tag":506,"props":1208,"children":1209},{"style":786},[1210],{"type":475,"value":743},{"type":470,"tag":506,"props":1212,"children":1213},{"style":791},[1214],{"type":475,"value":804},{"type":470,"tag":506,"props":1216,"children":1217},{"style":786},[1218],{"type":475,"value":1083},{"type":470,"tag":506,"props":1220,"children":1221},{"style":746},[1222],{"type":475,"value":834},{"type":470,"tag":506,"props":1224,"children":1226},{"class":508,"line":1225},18,[1227,1232],{"type":470,"tag":506,"props":1228,"children":1229},{"style":1094},[1230],{"type":475,"value":1231},"  return",{"type":470,"tag":506,"props":1233,"children":1234},{"style":734},[1235],{"type":475,"value":1236}," (\n",{"type":470,"tag":506,"props":1238,"children":1240},{"class":508,"line":1239},19,[1241,1246,1250,1254,1258,1262,1266,1270,1275,1279,1283,1287,1291],{"type":470,"tag":506,"props":1242,"children":1243},{"style":728},[1244],{"type":475,"value":1245},"    hasPathSum",{"type":470,"tag":506,"props":1247,"children":1248},{"style":734},[1249],{"type":475,"value":737},{"type":470,"tag":506,"props":1251,"children":1252},{"style":786},[1253],{"type":475,"value":467},{"type":470,"tag":506,"props":1255,"children":1256},{"style":780},[1257],{"type":475,"value":783},{"type":470,"tag":506,"props":1259,"children":1260},{"style":786},[1261],{"type":475,"value":850},{"type":470,"tag":506,"props":1263,"children":1264},{"style":746},[1265],{"type":475,"value":749},{"type":470,"tag":506,"props":1267,"children":1268},{"style":786},[1269],{"type":475,"value":1083},{"type":470,"tag":506,"props":1271,"children":1272},{"style":791},[1273],{"type":475,"value":1274}," -",{"type":470,"tag":506,"props":1276,"children":1277},{"style":786},[1278],{"type":475,"value":1174},{"type":470,"tag":506,"props":1280,"children":1281},{"style":780},[1282],{"type":475,"value":783},{"type":470,"tag":506,"props":1284,"children":1285},{"style":786},[1286],{"type":475,"value":743},{"type":470,"tag":506,"props":1288,"children":1289},{"style":734},[1290],{"type":475,"value":1118},{"type":470,"tag":506,"props":1292,"children":1293},{"style":791},[1294],{"type":475,"value":1295},"||\n",{"type":470,"tag":506,"props":1297,"children":1299},{"class":508,"line":1298},20,[1300,1304,1308,1312,1316,1320,1324,1328,1332,1336,1340,1344],{"type":470,"tag":506,"props":1301,"children":1302},{"style":728},[1303],{"type":475,"value":1245},{"type":470,"tag":506,"props":1305,"children":1306},{"style":734},[1307],{"type":475,"value":737},{"type":470,"tag":506,"props":1309,"children":1310},{"style":786},[1311],{"type":475,"value":467},{"type":470,"tag":506,"props":1313,"children":1314},{"style":780},[1315],{"type":475,"value":783},{"type":470,"tag":506,"props":1317,"children":1318},{"style":786},[1319],{"type":475,"value":904},{"type":470,"tag":506,"props":1321,"children":1322},{"style":746},[1323],{"type":475,"value":749},{"type":470,"tag":506,"props":1325,"children":1326},{"style":786},[1327],{"type":475,"value":1083},{"type":470,"tag":506,"props":1329,"children":1330},{"style":791},[1331],{"type":475,"value":1274},{"type":470,"tag":506,"props":1333,"children":1334},{"style":786},[1335],{"type":475,"value":1174},{"type":470,"tag":506,"props":1337,"children":1338},{"style":780},[1339],{"type":475,"value":783},{"type":470,"tag":506,"props":1341,"children":1342},{"style":786},[1343],{"type":475,"value":743},{"type":470,"tag":506,"props":1345,"children":1346},{"style":734},[1347],{"type":475,"value":1348},")\n",{"type":470,"tag":506,"props":1350,"children":1352},{"class":508,"line":1351},21,[1353,1358],{"type":470,"tag":506,"props":1354,"children":1355},{"style":734},[1356],{"type":475,"value":1357},"  )",{"type":470,"tag":506,"props":1359,"children":1360},{"style":746},[1361],{"type":475,"value":834},{"type":470,"tag":506,"props":1363,"children":1365},{"class":508,"line":1364},22,[1366,1371],{"type":470,"tag":506,"props":1367,"children":1368},{"style":734},[1369],{"type":475,"value":1370},"}",{"type":470,"tag":506,"props":1372,"children":1373},{"style":746},[1374],{"type":475,"value":834},{"type":470,"tag":1376,"props":1377,"children":1378},"style",{},[1379],{"type":475,"value":1380},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":463,"searchDepth":589,"depth":589,"links":1382},[1383,1384],{"id":668,"depth":518,"text":668},{"id":673,"depth":518,"text":673,"children":1385},[1386],{"id":679,"depth":527,"text":682},"markdown","content:1.algorithm:3.leetcode:3.major:112.path-sum.md","content","1.algorithm/3.leetcode/3.major/112.path-sum.md","md",[1393,1395],{"_path":153,"title":152,"description":1394},"给定一个二叉树，找出其最小深度。",{"_path":159,"title":158,"description":1396},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",1713626053529]