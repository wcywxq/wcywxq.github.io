[{"data":1,"prerenderedAt":1516},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/path-sum":546,"/algorithm/leetcode/major/path-sum-surround":1511},[4,269,298,514,522,531],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":513},"代码考核","/code-assessment",[302,404,506],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"整数分割","/code-assessment/scene/split-number",{"title":498,"_path":499},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":501,"_path":502},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":504,"_path":505},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":507,"_path":508,"children":509},"Ts 类型挑战","/code-assessment/type-challeges",[510],{"title":511,"_path":512},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":515,"_path":516,"children":517,"icon":521},"项目","/project",[518],{"title":519,"_path":520},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":523,"_path":524,"children":525,"icon":530},"设计模式","/design-mode",[526,527],{"title":523,"_path":524},{"title":528,"_path":529},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":532,"_path":533,"children":534,"icon":545},"后端语言","/backend-languages",[535],{"title":536,"_path":537,"children":538},"Python","/backend-languages/python",[539,542],{"title":540,"_path":541},"基础","/backend-languages/python/base",{"title":543,"_path":544},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":162,"_dir":547,"_draft":548,"_partial":548,"_locale":549,"title":161,"description":550,"url":551,"body":552,"_type":1506,"_id":1507,"_source":1508,"_file":1509,"_extension":1510},"major",false,"","给你二叉树的根节点 root 和一个表示目标和的整数 targetSum 。判断该树中是否存在 根节点到叶子节点 的路径，这条路径上所有节点值相加等于目标和 targetSum 。如果存在，返回 true ；否则，返回 false 。","https://leetcode.cn/problems/path-sum",{"type":553,"children":554,"toc":1500},"root",[555,562,567,572,581,620,625,633,691,696,726,731,751,757,762,769,1494],{"type":556,"tag":557,"props":558,"children":559},"element","p",{},[560],{"type":561,"value":550},"text",{"type":556,"tag":557,"props":563,"children":564},{},[565],{"type":561,"value":566},"叶子节点 是指没有子节点的节点。",{"type":556,"tag":557,"props":568,"children":569},{},[570],{"type":561,"value":571},"示例 1：",{"type":556,"tag":557,"props":573,"children":574},{},[575],{"type":556,"tag":576,"props":577,"children":580},"img",{"alt":578,"src":579},"pathsum1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.112_pathsum1.png",[],{"type":556,"tag":582,"props":583,"children":586},"pre",{"className":584,"code":585,"language":561,"meta":549,"style":549},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n输出：true\n解释：等于目标和的根节点到叶节点路径如上图所示。\n",[587],{"type":556,"tag":588,"props":589,"children":590},"code",{"__ignoreMap":549},[591,602,611],{"type":556,"tag":592,"props":593,"children":596},"span",{"class":594,"line":595},"line",1,[597],{"type":556,"tag":592,"props":598,"children":599},{},[600],{"type":561,"value":601},"输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n",{"type":556,"tag":592,"props":603,"children":605},{"class":594,"line":604},2,[606],{"type":556,"tag":592,"props":607,"children":608},{},[609],{"type":561,"value":610},"输出：true\n",{"type":556,"tag":592,"props":612,"children":614},{"class":594,"line":613},3,[615],{"type":556,"tag":592,"props":616,"children":617},{},[618],{"type":561,"value":619},"解释：等于目标和的根节点到叶节点路径如上图所示。\n",{"type":556,"tag":557,"props":621,"children":622},{},[623],{"type":561,"value":624},"示例 2：",{"type":556,"tag":557,"props":626,"children":627},{},[628],{"type":556,"tag":576,"props":629,"children":632},{"alt":630,"src":631},"pathsum2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.112_pathsum2.png",[],{"type":556,"tag":582,"props":634,"children":636},{"className":584,"code":635,"language":561,"meta":549,"style":549},"输入：root = [1,2,3], targetSum = 5\n输出：false\n解释：树中存在两条根节点到叶子节点的路径：\n(1 --> 2): 和为 3\n(1 --> 3): 和为 4\n不存在 sum = 5 的根节点到叶子节点的路径。\n",[637],{"type":556,"tag":588,"props":638,"children":639},{"__ignoreMap":549},[640,648,656,664,673,682],{"type":556,"tag":592,"props":641,"children":642},{"class":594,"line":595},[643],{"type":556,"tag":592,"props":644,"children":645},{},[646],{"type":561,"value":647},"输入：root = [1,2,3], targetSum = 5\n",{"type":556,"tag":592,"props":649,"children":650},{"class":594,"line":604},[651],{"type":556,"tag":592,"props":652,"children":653},{},[654],{"type":561,"value":655},"输出：false\n",{"type":556,"tag":592,"props":657,"children":658},{"class":594,"line":613},[659],{"type":556,"tag":592,"props":660,"children":661},{},[662],{"type":561,"value":663},"解释：树中存在两条根节点到叶子节点的路径：\n",{"type":556,"tag":592,"props":665,"children":667},{"class":594,"line":666},4,[668],{"type":556,"tag":592,"props":669,"children":670},{},[671],{"type":561,"value":672},"(1 --> 2): 和为 3\n",{"type":556,"tag":592,"props":674,"children":676},{"class":594,"line":675},5,[677],{"type":556,"tag":592,"props":678,"children":679},{},[680],{"type":561,"value":681},"(1 --> 3): 和为 4\n",{"type":556,"tag":592,"props":683,"children":685},{"class":594,"line":684},6,[686],{"type":556,"tag":592,"props":687,"children":688},{},[689],{"type":561,"value":690},"不存在 sum = 5 的根节点到叶子节点的路径。\n",{"type":556,"tag":557,"props":692,"children":693},{},[694],{"type":561,"value":695},"示例 3：",{"type":556,"tag":582,"props":697,"children":699},{"className":584,"code":698,"language":561,"meta":549,"style":549},"输入：root = [], targetSum = 0\n输出：false\n解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",[700],{"type":556,"tag":588,"props":701,"children":702},{"__ignoreMap":549},[703,711,718],{"type":556,"tag":592,"props":704,"children":705},{"class":594,"line":595},[706],{"type":556,"tag":592,"props":707,"children":708},{},[709],{"type":561,"value":710},"输入：root = [], targetSum = 0\n",{"type":556,"tag":592,"props":712,"children":713},{"class":594,"line":604},[714],{"type":556,"tag":592,"props":715,"children":716},{},[717],{"type":561,"value":655},{"type":556,"tag":592,"props":719,"children":720},{"class":594,"line":613},[721],{"type":556,"tag":592,"props":722,"children":723},{},[724],{"type":561,"value":725},"解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",{"type":556,"tag":557,"props":727,"children":728},{},[729],{"type":561,"value":730},"提示：",{"type":556,"tag":732,"props":733,"children":734},"ul",{},[735,741,746],{"type":556,"tag":736,"props":737,"children":738},"li",{},[739],{"type":561,"value":740},"树中节点的数目在范围 [0, 5000] 内",{"type":556,"tag":736,"props":742,"children":743},{},[744],{"type":561,"value":745},"-1000 \u003C= Node.val \u003C= 1000",{"type":556,"tag":736,"props":747,"children":748},{},[749],{"type":561,"value":750},"-1000 \u003C= targetSum \u003C= 1000",{"type":556,"tag":752,"props":753,"children":755},"h2",{"id":754},"解题思路",[756],{"type":561,"value":754},{"type":556,"tag":752,"props":758,"children":760},{"id":759},"实现",[761],{"type":561,"value":759},{"type":556,"tag":763,"props":764,"children":766},"h3",{"id":765},"深度优先搜索-dfs",[767],{"type":561,"value":768},"深度优先搜索 - dfs",{"type":556,"tag":582,"props":770,"children":774},{"className":771,"code":772,"language":773,"meta":549,"style":549},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {boolean}\n */\nvar hasPathSum = function (root, targetSum) {\n  if (root === null) return false;\n  if (root.left === null && root.right === null) return root.val === targetSum;\n  return (\n    hasPathSum(root.left, targetSum - root.val) ||\n    hasPathSum(root.right, targetSum - root.val)\n  );\n};\n","js",[775],{"type":556,"tag":588,"props":776,"children":777},{"__ignoreMap":549},[778,787,795,803,859,922,975,1028,1037,1047,1055,1096,1130,1160,1168,1217,1260,1350,1364,1423,1476,1485],{"type":556,"tag":592,"props":779,"children":780},{"class":594,"line":595},[781],{"type":556,"tag":592,"props":782,"children":784},{"style":783},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[785],{"type":561,"value":786},"/**\n",{"type":556,"tag":592,"props":788,"children":789},{"class":594,"line":604},[790],{"type":556,"tag":592,"props":791,"children":792},{"style":783},[793],{"type":561,"value":794}," * Definition for a binary tree node.\n",{"type":556,"tag":592,"props":796,"children":797},{"class":594,"line":613},[798],{"type":556,"tag":592,"props":799,"children":800},{"style":783},[801],{"type":561,"value":802}," */\n",{"type":556,"tag":592,"props":804,"children":805},{"class":594,"line":666},[806,812,818,824,830,835,840,844,849,854],{"type":556,"tag":592,"props":807,"children":809},{"style":808},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[810],{"type":561,"value":811},"function",{"type":556,"tag":592,"props":813,"children":815},{"style":814},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[816],{"type":561,"value":817}," TreeNode",{"type":556,"tag":592,"props":819,"children":821},{"style":820},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[822],{"type":561,"value":823},"(",{"type":556,"tag":592,"props":825,"children":827},{"style":826},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[828],{"type":561,"value":829},"val",{"type":556,"tag":592,"props":831,"children":832},{"style":820},[833],{"type":561,"value":834},",",{"type":556,"tag":592,"props":836,"children":837},{"style":826},[838],{"type":561,"value":839}," left",{"type":556,"tag":592,"props":841,"children":842},{"style":820},[843],{"type":561,"value":834},{"type":556,"tag":592,"props":845,"children":846},{"style":826},[847],{"type":561,"value":848}," right",{"type":556,"tag":592,"props":850,"children":851},{"style":820},[852],{"type":561,"value":853},")",{"type":556,"tag":592,"props":855,"children":856},{"style":820},[857],{"type":561,"value":858}," {\n",{"type":556,"tag":592,"props":860,"children":861},{"class":594,"line":675},[862,868,873,877,882,887,892,897,902,908,913,917],{"type":556,"tag":592,"props":863,"children":865},{"style":864},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[866],{"type":561,"value":867},"  this",{"type":556,"tag":592,"props":869,"children":870},{"style":820},[871],{"type":561,"value":872},".",{"type":556,"tag":592,"props":874,"children":875},{"style":826},[876],{"type":561,"value":829},{"type":556,"tag":592,"props":878,"children":879},{"style":820},[880],{"type":561,"value":881}," =",{"type":556,"tag":592,"props":883,"children":884},{"style":826},[885],{"type":561,"value":886}," val",{"type":556,"tag":592,"props":888,"children":889},{"style":808},[890],{"type":561,"value":891}," ===",{"type":556,"tag":592,"props":893,"children":894},{"style":808},[895],{"type":561,"value":896}," undefined",{"type":556,"tag":592,"props":898,"children":899},{"style":808},[900],{"type":561,"value":901}," ?",{"type":556,"tag":592,"props":903,"children":905},{"style":904},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[906],{"type":561,"value":907}," 0",{"type":556,"tag":592,"props":909,"children":910},{"style":808},[911],{"type":561,"value":912}," :",{"type":556,"tag":592,"props":914,"children":915},{"style":826},[916],{"type":561,"value":886},{"type":556,"tag":592,"props":918,"children":919},{"style":820},[920],{"type":561,"value":921},";\n",{"type":556,"tag":592,"props":923,"children":924},{"class":594,"line":684},[925,929,933,938,942,946,950,954,958,963,967,971],{"type":556,"tag":592,"props":926,"children":927},{"style":864},[928],{"type":561,"value":867},{"type":556,"tag":592,"props":930,"children":931},{"style":820},[932],{"type":561,"value":872},{"type":556,"tag":592,"props":934,"children":935},{"style":826},[936],{"type":561,"value":937},"left",{"type":556,"tag":592,"props":939,"children":940},{"style":820},[941],{"type":561,"value":881},{"type":556,"tag":592,"props":943,"children":944},{"style":826},[945],{"type":561,"value":839},{"type":556,"tag":592,"props":947,"children":948},{"style":808},[949],{"type":561,"value":891},{"type":556,"tag":592,"props":951,"children":952},{"style":808},[953],{"type":561,"value":896},{"type":556,"tag":592,"props":955,"children":956},{"style":808},[957],{"type":561,"value":901},{"type":556,"tag":592,"props":959,"children":960},{"style":808},[961],{"type":561,"value":962}," null",{"type":556,"tag":592,"props":964,"children":965},{"style":808},[966],{"type":561,"value":912},{"type":556,"tag":592,"props":968,"children":969},{"style":826},[970],{"type":561,"value":839},{"type":556,"tag":592,"props":972,"children":973},{"style":820},[974],{"type":561,"value":921},{"type":556,"tag":592,"props":976,"children":978},{"class":594,"line":977},7,[979,983,987,992,996,1000,1004,1008,1012,1016,1020,1024],{"type":556,"tag":592,"props":980,"children":981},{"style":864},[982],{"type":561,"value":867},{"type":556,"tag":592,"props":984,"children":985},{"style":820},[986],{"type":561,"value":872},{"type":556,"tag":592,"props":988,"children":989},{"style":826},[990],{"type":561,"value":991},"right",{"type":556,"tag":592,"props":993,"children":994},{"style":820},[995],{"type":561,"value":881},{"type":556,"tag":592,"props":997,"children":998},{"style":826},[999],{"type":561,"value":848},{"type":556,"tag":592,"props":1001,"children":1002},{"style":808},[1003],{"type":561,"value":891},{"type":556,"tag":592,"props":1005,"children":1006},{"style":808},[1007],{"type":561,"value":896},{"type":556,"tag":592,"props":1009,"children":1010},{"style":808},[1011],{"type":561,"value":901},{"type":556,"tag":592,"props":1013,"children":1014},{"style":808},[1015],{"type":561,"value":962},{"type":556,"tag":592,"props":1017,"children":1018},{"style":808},[1019],{"type":561,"value":912},{"type":556,"tag":592,"props":1021,"children":1022},{"style":826},[1023],{"type":561,"value":848},{"type":556,"tag":592,"props":1025,"children":1026},{"style":820},[1027],{"type":561,"value":921},{"type":556,"tag":592,"props":1029,"children":1031},{"class":594,"line":1030},8,[1032],{"type":556,"tag":592,"props":1033,"children":1034},{"style":820},[1035],{"type":561,"value":1036},"}\n",{"type":556,"tag":592,"props":1038,"children":1040},{"class":594,"line":1039},9,[1041],{"type":556,"tag":592,"props":1042,"children":1044},{"emptyLinePlaceholder":1043},true,[1045],{"type":561,"value":1046},"\n",{"type":556,"tag":592,"props":1048,"children":1050},{"class":594,"line":1049},10,[1051],{"type":556,"tag":592,"props":1052,"children":1053},{"style":783},[1054],{"type":561,"value":786},{"type":556,"tag":592,"props":1056,"children":1058},{"class":594,"line":1057},11,[1059,1064,1069,1075,1080,1086,1091],{"type":556,"tag":592,"props":1060,"children":1061},{"style":783},[1062],{"type":561,"value":1063}," * ",{"type":556,"tag":592,"props":1065,"children":1066},{"style":820},[1067],{"type":561,"value":1068},"@",{"type":556,"tag":592,"props":1070,"children":1072},{"style":1071},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[1073],{"type":561,"value":1074},"param",{"type":556,"tag":592,"props":1076,"children":1077},{"style":820},[1078],{"type":561,"value":1079}," {",{"type":556,"tag":592,"props":1081,"children":1083},{"style":1082},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[1084],{"type":561,"value":1085},"TreeNode",{"type":556,"tag":592,"props":1087,"children":1088},{"style":820},[1089],{"type":561,"value":1090},"}",{"type":556,"tag":592,"props":1092,"children":1093},{"style":826},[1094],{"type":561,"value":1095}," root\n",{"type":556,"tag":592,"props":1097,"children":1099},{"class":594,"line":1098},12,[1100,1104,1108,1112,1116,1121,1125],{"type":556,"tag":592,"props":1101,"children":1102},{"style":783},[1103],{"type":561,"value":1063},{"type":556,"tag":592,"props":1105,"children":1106},{"style":820},[1107],{"type":561,"value":1068},{"type":556,"tag":592,"props":1109,"children":1110},{"style":1071},[1111],{"type":561,"value":1074},{"type":556,"tag":592,"props":1113,"children":1114},{"style":820},[1115],{"type":561,"value":1079},{"type":556,"tag":592,"props":1117,"children":1118},{"style":1082},[1119],{"type":561,"value":1120},"number",{"type":556,"tag":592,"props":1122,"children":1123},{"style":820},[1124],{"type":561,"value":1090},{"type":556,"tag":592,"props":1126,"children":1127},{"style":826},[1128],{"type":561,"value":1129}," targetSum\n",{"type":556,"tag":592,"props":1131,"children":1133},{"class":594,"line":1132},13,[1134,1138,1142,1147,1151,1156],{"type":556,"tag":592,"props":1135,"children":1136},{"style":783},[1137],{"type":561,"value":1063},{"type":556,"tag":592,"props":1139,"children":1140},{"style":820},[1141],{"type":561,"value":1068},{"type":556,"tag":592,"props":1143,"children":1144},{"style":1071},[1145],{"type":561,"value":1146},"return",{"type":556,"tag":592,"props":1148,"children":1149},{"style":820},[1150],{"type":561,"value":1079},{"type":556,"tag":592,"props":1152,"children":1153},{"style":1082},[1154],{"type":561,"value":1155},"boolean",{"type":556,"tag":592,"props":1157,"children":1158},{"style":820},[1159],{"type":561,"value":1036},{"type":556,"tag":592,"props":1161,"children":1163},{"class":594,"line":1162},14,[1164],{"type":556,"tag":592,"props":1165,"children":1166},{"style":783},[1167],{"type":561,"value":802},{"type":556,"tag":592,"props":1169,"children":1171},{"class":594,"line":1170},15,[1172,1177,1182,1186,1191,1196,1200,1204,1209,1213],{"type":556,"tag":592,"props":1173,"children":1174},{"style":808},[1175],{"type":561,"value":1176},"var",{"type":556,"tag":592,"props":1178,"children":1179},{"style":814},[1180],{"type":561,"value":1181}," hasPathSum",{"type":556,"tag":592,"props":1183,"children":1184},{"style":820},[1185],{"type":561,"value":881},{"type":556,"tag":592,"props":1187,"children":1188},{"style":808},[1189],{"type":561,"value":1190}," function",{"type":556,"tag":592,"props":1192,"children":1193},{"style":820},[1194],{"type":561,"value":1195}," (",{"type":556,"tag":592,"props":1197,"children":1198},{"style":826},[1199],{"type":561,"value":553},{"type":556,"tag":592,"props":1201,"children":1202},{"style":820},[1203],{"type":561,"value":834},{"type":556,"tag":592,"props":1205,"children":1206},{"style":826},[1207],{"type":561,"value":1208}," targetSum",{"type":556,"tag":592,"props":1210,"children":1211},{"style":820},[1212],{"type":561,"value":853},{"type":556,"tag":592,"props":1214,"children":1215},{"style":820},[1216],{"type":561,"value":858},{"type":556,"tag":592,"props":1218,"children":1220},{"class":594,"line":1219},16,[1221,1226,1230,1234,1238,1242,1246,1251,1256],{"type":556,"tag":592,"props":1222,"children":1223},{"style":1071},[1224],{"type":561,"value":1225},"  if",{"type":556,"tag":592,"props":1227,"children":1228},{"style":820},[1229],{"type":561,"value":1195},{"type":556,"tag":592,"props":1231,"children":1232},{"style":826},[1233],{"type":561,"value":553},{"type":556,"tag":592,"props":1235,"children":1236},{"style":808},[1237],{"type":561,"value":891},{"type":556,"tag":592,"props":1239,"children":1240},{"style":808},[1241],{"type":561,"value":962},{"type":556,"tag":592,"props":1243,"children":1244},{"style":820},[1245],{"type":561,"value":853},{"type":556,"tag":592,"props":1247,"children":1248},{"style":1071},[1249],{"type":561,"value":1250}," return",{"type":556,"tag":592,"props":1252,"children":1253},{"style":1071},[1254],{"type":561,"value":1255}," false",{"type":556,"tag":592,"props":1257,"children":1258},{"style":820},[1259],{"type":561,"value":921},{"type":556,"tag":592,"props":1261,"children":1263},{"class":594,"line":1262},17,[1264,1268,1272,1276,1280,1284,1288,1292,1297,1302,1306,1310,1314,1318,1322,1326,1330,1334,1338,1342,1346],{"type":556,"tag":592,"props":1265,"children":1266},{"style":1071},[1267],{"type":561,"value":1225},{"type":556,"tag":592,"props":1269,"children":1270},{"style":820},[1271],{"type":561,"value":1195},{"type":556,"tag":592,"props":1273,"children":1274},{"style":826},[1275],{"type":561,"value":553},{"type":556,"tag":592,"props":1277,"children":1278},{"style":820},[1279],{"type":561,"value":872},{"type":556,"tag":592,"props":1281,"children":1282},{"style":826},[1283],{"type":561,"value":937},{"type":556,"tag":592,"props":1285,"children":1286},{"style":808},[1287],{"type":561,"value":891},{"type":556,"tag":592,"props":1289,"children":1290},{"style":808},[1291],{"type":561,"value":962},{"type":556,"tag":592,"props":1293,"children":1294},{"style":808},[1295],{"type":561,"value":1296}," &&",{"type":556,"tag":592,"props":1298,"children":1299},{"style":826},[1300],{"type":561,"value":1301}," root",{"type":556,"tag":592,"props":1303,"children":1304},{"style":820},[1305],{"type":561,"value":872},{"type":556,"tag":592,"props":1307,"children":1308},{"style":826},[1309],{"type":561,"value":991},{"type":556,"tag":592,"props":1311,"children":1312},{"style":808},[1313],{"type":561,"value":891},{"type":556,"tag":592,"props":1315,"children":1316},{"style":808},[1317],{"type":561,"value":962},{"type":556,"tag":592,"props":1319,"children":1320},{"style":820},[1321],{"type":561,"value":853},{"type":556,"tag":592,"props":1323,"children":1324},{"style":1071},[1325],{"type":561,"value":1250},{"type":556,"tag":592,"props":1327,"children":1328},{"style":826},[1329],{"type":561,"value":1301},{"type":556,"tag":592,"props":1331,"children":1332},{"style":820},[1333],{"type":561,"value":872},{"type":556,"tag":592,"props":1335,"children":1336},{"style":826},[1337],{"type":561,"value":829},{"type":556,"tag":592,"props":1339,"children":1340},{"style":808},[1341],{"type":561,"value":891},{"type":556,"tag":592,"props":1343,"children":1344},{"style":826},[1345],{"type":561,"value":1208},{"type":556,"tag":592,"props":1347,"children":1348},{"style":820},[1349],{"type":561,"value":921},{"type":556,"tag":592,"props":1351,"children":1353},{"class":594,"line":1352},18,[1354,1359],{"type":556,"tag":592,"props":1355,"children":1356},{"style":1071},[1357],{"type":561,"value":1358},"  return",{"type":556,"tag":592,"props":1360,"children":1361},{"style":820},[1362],{"type":561,"value":1363}," (\n",{"type":556,"tag":592,"props":1365,"children":1367},{"class":594,"line":1366},19,[1368,1373,1377,1381,1385,1389,1393,1397,1402,1406,1410,1414,1418],{"type":556,"tag":592,"props":1369,"children":1370},{"style":814},[1371],{"type":561,"value":1372},"    hasPathSum",{"type":556,"tag":592,"props":1374,"children":1375},{"style":820},[1376],{"type":561,"value":823},{"type":556,"tag":592,"props":1378,"children":1379},{"style":826},[1380],{"type":561,"value":553},{"type":556,"tag":592,"props":1382,"children":1383},{"style":820},[1384],{"type":561,"value":872},{"type":556,"tag":592,"props":1386,"children":1387},{"style":826},[1388],{"type":561,"value":937},{"type":556,"tag":592,"props":1390,"children":1391},{"style":820},[1392],{"type":561,"value":834},{"type":556,"tag":592,"props":1394,"children":1395},{"style":826},[1396],{"type":561,"value":1208},{"type":556,"tag":592,"props":1398,"children":1399},{"style":808},[1400],{"type":561,"value":1401}," -",{"type":556,"tag":592,"props":1403,"children":1404},{"style":826},[1405],{"type":561,"value":1301},{"type":556,"tag":592,"props":1407,"children":1408},{"style":820},[1409],{"type":561,"value":872},{"type":556,"tag":592,"props":1411,"children":1412},{"style":826},[1413],{"type":561,"value":829},{"type":556,"tag":592,"props":1415,"children":1416},{"style":820},[1417],{"type":561,"value":853},{"type":556,"tag":592,"props":1419,"children":1420},{"style":808},[1421],{"type":561,"value":1422}," ||\n",{"type":556,"tag":592,"props":1424,"children":1426},{"class":594,"line":1425},20,[1427,1431,1435,1439,1443,1447,1451,1455,1459,1463,1467,1471],{"type":556,"tag":592,"props":1428,"children":1429},{"style":814},[1430],{"type":561,"value":1372},{"type":556,"tag":592,"props":1432,"children":1433},{"style":820},[1434],{"type":561,"value":823},{"type":556,"tag":592,"props":1436,"children":1437},{"style":826},[1438],{"type":561,"value":553},{"type":556,"tag":592,"props":1440,"children":1441},{"style":820},[1442],{"type":561,"value":872},{"type":556,"tag":592,"props":1444,"children":1445},{"style":826},[1446],{"type":561,"value":991},{"type":556,"tag":592,"props":1448,"children":1449},{"style":820},[1450],{"type":561,"value":834},{"type":556,"tag":592,"props":1452,"children":1453},{"style":826},[1454],{"type":561,"value":1208},{"type":556,"tag":592,"props":1456,"children":1457},{"style":808},[1458],{"type":561,"value":1401},{"type":556,"tag":592,"props":1460,"children":1461},{"style":826},[1462],{"type":561,"value":1301},{"type":556,"tag":592,"props":1464,"children":1465},{"style":820},[1466],{"type":561,"value":872},{"type":556,"tag":592,"props":1468,"children":1469},{"style":826},[1470],{"type":561,"value":829},{"type":556,"tag":592,"props":1472,"children":1473},{"style":820},[1474],{"type":561,"value":1475},")\n",{"type":556,"tag":592,"props":1477,"children":1479},{"class":594,"line":1478},21,[1480],{"type":556,"tag":592,"props":1481,"children":1482},{"style":820},[1483],{"type":561,"value":1484},"  );\n",{"type":556,"tag":592,"props":1486,"children":1488},{"class":594,"line":1487},22,[1489],{"type":556,"tag":592,"props":1490,"children":1491},{"style":820},[1492],{"type":561,"value":1493},"};\n",{"type":556,"tag":1495,"props":1496,"children":1497},"style",{},[1498],{"type":561,"value":1499},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":549,"searchDepth":675,"depth":675,"links":1501},[1502,1503],{"id":754,"depth":604,"text":754},{"id":759,"depth":604,"text":759,"children":1504},[1505],{"id":765,"depth":613,"text":768},"markdown","content:1.algorithm:3.leetcode:3.major:112.path-sum.md","content","1.algorithm/3.leetcode/3.major/112.path-sum.md","md",[1512,1514],{"_path":159,"title":158,"description":1513},"给定一个二叉树，找出其最小深度。",{"_path":165,"title":164,"description":1515},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",1714279833811]