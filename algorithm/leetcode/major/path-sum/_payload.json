[{"data":1,"prerenderedAt":1519},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/path-sum":549,"/algorithm/leetcode/major/path-sum-surround":1514},[4,272,301,517,525,534],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":516},"代码考核","/code-assessment",[305,407,509],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,340,356,384,391,398,401,404],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342,"children":343},"函数 Function","/code-assessment/source/function",[344,347,350,353],{"title":345,"_path":346},"函数防抖","/code-assessment/source/function/debounce",{"title":348,"_path":349},"函数节流","/code-assessment/source/function/throttle",{"title":351,"_path":352},"函数柯理化","/code-assessment/source/function/curry",{"title":354,"_path":355},"函数睡眠","/code-assessment/source/function/sleep",{"title":357,"_path":358,"children":359},"数组 Array","/code-assessment/source/array",[360,363,366,369,372,375,378,381],{"title":361,"_path":362},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":364,"_path":365},"数组扁平化","/code-assessment/source/array/flat",{"title":367,"_path":368},"原型方法","/code-assessment/source/array/prototype-method",{"title":370,"_path":371},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":373,"_path":374},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":376,"_path":377},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":379,"_path":380},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":382,"_path":383},"二维数组","/code-assessment/source/array/2d-array",{"title":385,"_path":386,"children":387},"字符串 String","/code-assessment/source/string",[388],{"title":389,"_path":390},"repeat()","/code-assessment/source/string/repeat",{"title":392,"_path":393,"children":394},"集合 Set","/code-assessment/source/set",[395],{"title":396,"_path":397},"遍历集合","/code-assessment/source/set/traverse",{"title":399,"_path":400},"获取通用类型","/code-assessment/source/get-generic-type",{"title":402,"_path":403},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":405,"_path":406},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":408,"_path":409,"children":410},"业务场景","/code-assessment/scene",[411,442,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506],{"title":412,"_path":413,"children":414},"Promise","/code-assessment/scene/promise",[415,418,421,424,427,430,433,436,439],{"title":416,"_path":417},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":419,"_path":420},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":422,"_path":423},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":425,"_path":426},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":428,"_path":429},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":431,"_path":432},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":434,"_path":435},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":437,"_path":438},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":440,"_path":441},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":443,"_path":444,"children":445},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[446,449],{"title":447,"_path":448},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":450,"_path":451},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":453,"_path":454},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":456,"_path":457},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":459,"_path":460},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":462,"_path":463},"倒计时","/code-assessment/scene/countdown",{"title":465,"_path":466},"日期格式化","/code-assessment/scene/date-format",{"title":468,"_path":469},"实现前端路由","/code-assessment/scene/frontend-route",{"title":471,"_path":472},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":474,"_path":475},"lodash.get","/code-assessment/scene/lodash-get",{"title":477,"_path":478},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":480,"_path":481},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":483,"_path":484},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":486,"_path":487},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":489,"_path":490},"随机数","/code-assessment/scene/random-number",{"title":492,"_path":493},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":495,"_path":496},"sku 算法实现","/code-assessment/scene/sku",{"title":498,"_path":499},"整数分割","/code-assessment/scene/split-number",{"title":501,"_path":502},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":504,"_path":505},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":507,"_path":508},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":510,"_path":511,"children":512},"Ts 类型挑战","/code-assessment/type-challeges",[513],{"title":514,"_path":515},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":518,"_path":519,"children":520,"icon":524},"项目","/project",[521],{"title":522,"_path":523},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":526,"_path":527,"children":528,"icon":533},"设计模式","/design-mode",[529,530],{"title":526,"_path":527},{"title":531,"_path":532},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":535,"_path":536,"children":537,"icon":548},"后端语言","/backend-languages",[538],{"title":539,"_path":540,"children":541},"Python","/backend-languages/python",[542,545],{"title":543,"_path":544},"基础","/backend-languages/python/base",{"title":546,"_path":547},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":162,"_dir":550,"_draft":551,"_partial":551,"_locale":552,"title":161,"description":553,"url":554,"body":555,"_type":1509,"_id":1510,"_source":1511,"_file":1512,"_extension":1513},"major",false,"","给你二叉树的根节点 root 和一个表示目标和的整数 targetSum 。判断该树中是否存在 根节点到叶子节点 的路径，这条路径上所有节点值相加等于目标和 targetSum 。如果存在，返回 true ；否则，返回 false 。","https://leetcode.cn/problems/path-sum",{"type":556,"children":557,"toc":1503},"root",[558,565,570,575,584,623,628,636,694,699,729,734,754,760,765,772,1497],{"type":559,"tag":560,"props":561,"children":562},"element","p",{},[563],{"type":564,"value":553},"text",{"type":559,"tag":560,"props":566,"children":567},{},[568],{"type":564,"value":569},"叶子节点 是指没有子节点的节点。",{"type":559,"tag":560,"props":571,"children":572},{},[573],{"type":564,"value":574},"示例 1：",{"type":559,"tag":560,"props":576,"children":577},{},[578],{"type":559,"tag":579,"props":580,"children":583},"img",{"alt":581,"src":582},"pathsum1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.112_pathsum1.png",[],{"type":559,"tag":585,"props":586,"children":589},"pre",{"className":587,"code":588,"language":564,"meta":552,"style":552},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n输出：true\n解释：等于目标和的根节点到叶节点路径如上图所示。\n",[590],{"type":559,"tag":591,"props":592,"children":593},"code",{"__ignoreMap":552},[594,605,614],{"type":559,"tag":595,"props":596,"children":599},"span",{"class":597,"line":598},"line",1,[600],{"type":559,"tag":595,"props":601,"children":602},{},[603],{"type":564,"value":604},"输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n",{"type":559,"tag":595,"props":606,"children":608},{"class":597,"line":607},2,[609],{"type":559,"tag":595,"props":610,"children":611},{},[612],{"type":564,"value":613},"输出：true\n",{"type":559,"tag":595,"props":615,"children":617},{"class":597,"line":616},3,[618],{"type":559,"tag":595,"props":619,"children":620},{},[621],{"type":564,"value":622},"解释：等于目标和的根节点到叶节点路径如上图所示。\n",{"type":559,"tag":560,"props":624,"children":625},{},[626],{"type":564,"value":627},"示例 2：",{"type":559,"tag":560,"props":629,"children":630},{},[631],{"type":559,"tag":579,"props":632,"children":635},{"alt":633,"src":634},"pathsum2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.112_pathsum2.png",[],{"type":559,"tag":585,"props":637,"children":639},{"className":587,"code":638,"language":564,"meta":552,"style":552},"输入：root = [1,2,3], targetSum = 5\n输出：false\n解释：树中存在两条根节点到叶子节点的路径：\n(1 --> 2): 和为 3\n(1 --> 3): 和为 4\n不存在 sum = 5 的根节点到叶子节点的路径。\n",[640],{"type":559,"tag":591,"props":641,"children":642},{"__ignoreMap":552},[643,651,659,667,676,685],{"type":559,"tag":595,"props":644,"children":645},{"class":597,"line":598},[646],{"type":559,"tag":595,"props":647,"children":648},{},[649],{"type":564,"value":650},"输入：root = [1,2,3], targetSum = 5\n",{"type":559,"tag":595,"props":652,"children":653},{"class":597,"line":607},[654],{"type":559,"tag":595,"props":655,"children":656},{},[657],{"type":564,"value":658},"输出：false\n",{"type":559,"tag":595,"props":660,"children":661},{"class":597,"line":616},[662],{"type":559,"tag":595,"props":663,"children":664},{},[665],{"type":564,"value":666},"解释：树中存在两条根节点到叶子节点的路径：\n",{"type":559,"tag":595,"props":668,"children":670},{"class":597,"line":669},4,[671],{"type":559,"tag":595,"props":672,"children":673},{},[674],{"type":564,"value":675},"(1 --> 2): 和为 3\n",{"type":559,"tag":595,"props":677,"children":679},{"class":597,"line":678},5,[680],{"type":559,"tag":595,"props":681,"children":682},{},[683],{"type":564,"value":684},"(1 --> 3): 和为 4\n",{"type":559,"tag":595,"props":686,"children":688},{"class":597,"line":687},6,[689],{"type":559,"tag":595,"props":690,"children":691},{},[692],{"type":564,"value":693},"不存在 sum = 5 的根节点到叶子节点的路径。\n",{"type":559,"tag":560,"props":695,"children":696},{},[697],{"type":564,"value":698},"示例 3：",{"type":559,"tag":585,"props":700,"children":702},{"className":587,"code":701,"language":564,"meta":552,"style":552},"输入：root = [], targetSum = 0\n输出：false\n解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",[703],{"type":559,"tag":591,"props":704,"children":705},{"__ignoreMap":552},[706,714,721],{"type":559,"tag":595,"props":707,"children":708},{"class":597,"line":598},[709],{"type":559,"tag":595,"props":710,"children":711},{},[712],{"type":564,"value":713},"输入：root = [], targetSum = 0\n",{"type":559,"tag":595,"props":715,"children":716},{"class":597,"line":607},[717],{"type":559,"tag":595,"props":718,"children":719},{},[720],{"type":564,"value":658},{"type":559,"tag":595,"props":722,"children":723},{"class":597,"line":616},[724],{"type":559,"tag":595,"props":725,"children":726},{},[727],{"type":564,"value":728},"解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",{"type":559,"tag":560,"props":730,"children":731},{},[732],{"type":564,"value":733},"提示：",{"type":559,"tag":735,"props":736,"children":737},"ul",{},[738,744,749],{"type":559,"tag":739,"props":740,"children":741},"li",{},[742],{"type":564,"value":743},"树中节点的数目在范围 [0, 5000] 内",{"type":559,"tag":739,"props":745,"children":746},{},[747],{"type":564,"value":748},"-1000 \u003C= Node.val \u003C= 1000",{"type":559,"tag":739,"props":750,"children":751},{},[752],{"type":564,"value":753},"-1000 \u003C= targetSum \u003C= 1000",{"type":559,"tag":755,"props":756,"children":758},"h2",{"id":757},"解题思路",[759],{"type":564,"value":757},{"type":559,"tag":755,"props":761,"children":763},{"id":762},"实现",[764],{"type":564,"value":762},{"type":559,"tag":766,"props":767,"children":769},"h3",{"id":768},"深度优先搜索-dfs",[770],{"type":564,"value":771},"深度优先搜索 - dfs",{"type":559,"tag":585,"props":773,"children":777},{"className":774,"code":775,"language":776,"meta":552,"style":552},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {boolean}\n */\nvar hasPathSum = function (root, targetSum) {\n  if (root === null) return false;\n  if (root.left === null && root.right === null) return root.val === targetSum;\n  return (\n    hasPathSum(root.left, targetSum - root.val) ||\n    hasPathSum(root.right, targetSum - root.val)\n  );\n};\n","js",[778],{"type":559,"tag":591,"props":779,"children":780},{"__ignoreMap":552},[781,790,798,806,862,925,978,1031,1040,1050,1058,1099,1133,1163,1171,1220,1263,1353,1367,1426,1479,1488],{"type":559,"tag":595,"props":782,"children":783},{"class":597,"line":598},[784],{"type":559,"tag":595,"props":785,"children":787},{"style":786},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[788],{"type":564,"value":789},"/**\n",{"type":559,"tag":595,"props":791,"children":792},{"class":597,"line":607},[793],{"type":559,"tag":595,"props":794,"children":795},{"style":786},[796],{"type":564,"value":797}," * Definition for a binary tree node.\n",{"type":559,"tag":595,"props":799,"children":800},{"class":597,"line":616},[801],{"type":559,"tag":595,"props":802,"children":803},{"style":786},[804],{"type":564,"value":805}," */\n",{"type":559,"tag":595,"props":807,"children":808},{"class":597,"line":669},[809,815,821,827,833,838,843,847,852,857],{"type":559,"tag":595,"props":810,"children":812},{"style":811},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[813],{"type":564,"value":814},"function",{"type":559,"tag":595,"props":816,"children":818},{"style":817},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[819],{"type":564,"value":820}," TreeNode",{"type":559,"tag":595,"props":822,"children":824},{"style":823},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[825],{"type":564,"value":826},"(",{"type":559,"tag":595,"props":828,"children":830},{"style":829},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[831],{"type":564,"value":832},"val",{"type":559,"tag":595,"props":834,"children":835},{"style":823},[836],{"type":564,"value":837},",",{"type":559,"tag":595,"props":839,"children":840},{"style":829},[841],{"type":564,"value":842}," left",{"type":559,"tag":595,"props":844,"children":845},{"style":823},[846],{"type":564,"value":837},{"type":559,"tag":595,"props":848,"children":849},{"style":829},[850],{"type":564,"value":851}," right",{"type":559,"tag":595,"props":853,"children":854},{"style":823},[855],{"type":564,"value":856},")",{"type":559,"tag":595,"props":858,"children":859},{"style":823},[860],{"type":564,"value":861}," {\n",{"type":559,"tag":595,"props":863,"children":864},{"class":597,"line":678},[865,871,876,880,885,890,895,900,905,911,916,920],{"type":559,"tag":595,"props":866,"children":868},{"style":867},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[869],{"type":564,"value":870},"  this",{"type":559,"tag":595,"props":872,"children":873},{"style":823},[874],{"type":564,"value":875},".",{"type":559,"tag":595,"props":877,"children":878},{"style":829},[879],{"type":564,"value":832},{"type":559,"tag":595,"props":881,"children":882},{"style":823},[883],{"type":564,"value":884}," =",{"type":559,"tag":595,"props":886,"children":887},{"style":829},[888],{"type":564,"value":889}," val",{"type":559,"tag":595,"props":891,"children":892},{"style":811},[893],{"type":564,"value":894}," ===",{"type":559,"tag":595,"props":896,"children":897},{"style":811},[898],{"type":564,"value":899}," undefined",{"type":559,"tag":595,"props":901,"children":902},{"style":811},[903],{"type":564,"value":904}," ?",{"type":559,"tag":595,"props":906,"children":908},{"style":907},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[909],{"type":564,"value":910}," 0",{"type":559,"tag":595,"props":912,"children":913},{"style":811},[914],{"type":564,"value":915}," :",{"type":559,"tag":595,"props":917,"children":918},{"style":829},[919],{"type":564,"value":889},{"type":559,"tag":595,"props":921,"children":922},{"style":823},[923],{"type":564,"value":924},";\n",{"type":559,"tag":595,"props":926,"children":927},{"class":597,"line":687},[928,932,936,941,945,949,953,957,961,966,970,974],{"type":559,"tag":595,"props":929,"children":930},{"style":867},[931],{"type":564,"value":870},{"type":559,"tag":595,"props":933,"children":934},{"style":823},[935],{"type":564,"value":875},{"type":559,"tag":595,"props":937,"children":938},{"style":829},[939],{"type":564,"value":940},"left",{"type":559,"tag":595,"props":942,"children":943},{"style":823},[944],{"type":564,"value":884},{"type":559,"tag":595,"props":946,"children":947},{"style":829},[948],{"type":564,"value":842},{"type":559,"tag":595,"props":950,"children":951},{"style":811},[952],{"type":564,"value":894},{"type":559,"tag":595,"props":954,"children":955},{"style":811},[956],{"type":564,"value":899},{"type":559,"tag":595,"props":958,"children":959},{"style":811},[960],{"type":564,"value":904},{"type":559,"tag":595,"props":962,"children":963},{"style":811},[964],{"type":564,"value":965}," null",{"type":559,"tag":595,"props":967,"children":968},{"style":811},[969],{"type":564,"value":915},{"type":559,"tag":595,"props":971,"children":972},{"style":829},[973],{"type":564,"value":842},{"type":559,"tag":595,"props":975,"children":976},{"style":823},[977],{"type":564,"value":924},{"type":559,"tag":595,"props":979,"children":981},{"class":597,"line":980},7,[982,986,990,995,999,1003,1007,1011,1015,1019,1023,1027],{"type":559,"tag":595,"props":983,"children":984},{"style":867},[985],{"type":564,"value":870},{"type":559,"tag":595,"props":987,"children":988},{"style":823},[989],{"type":564,"value":875},{"type":559,"tag":595,"props":991,"children":992},{"style":829},[993],{"type":564,"value":994},"right",{"type":559,"tag":595,"props":996,"children":997},{"style":823},[998],{"type":564,"value":884},{"type":559,"tag":595,"props":1000,"children":1001},{"style":829},[1002],{"type":564,"value":851},{"type":559,"tag":595,"props":1004,"children":1005},{"style":811},[1006],{"type":564,"value":894},{"type":559,"tag":595,"props":1008,"children":1009},{"style":811},[1010],{"type":564,"value":899},{"type":559,"tag":595,"props":1012,"children":1013},{"style":811},[1014],{"type":564,"value":904},{"type":559,"tag":595,"props":1016,"children":1017},{"style":811},[1018],{"type":564,"value":965},{"type":559,"tag":595,"props":1020,"children":1021},{"style":811},[1022],{"type":564,"value":915},{"type":559,"tag":595,"props":1024,"children":1025},{"style":829},[1026],{"type":564,"value":851},{"type":559,"tag":595,"props":1028,"children":1029},{"style":823},[1030],{"type":564,"value":924},{"type":559,"tag":595,"props":1032,"children":1034},{"class":597,"line":1033},8,[1035],{"type":559,"tag":595,"props":1036,"children":1037},{"style":823},[1038],{"type":564,"value":1039},"}\n",{"type":559,"tag":595,"props":1041,"children":1043},{"class":597,"line":1042},9,[1044],{"type":559,"tag":595,"props":1045,"children":1047},{"emptyLinePlaceholder":1046},true,[1048],{"type":564,"value":1049},"\n",{"type":559,"tag":595,"props":1051,"children":1053},{"class":597,"line":1052},10,[1054],{"type":559,"tag":595,"props":1055,"children":1056},{"style":786},[1057],{"type":564,"value":789},{"type":559,"tag":595,"props":1059,"children":1061},{"class":597,"line":1060},11,[1062,1067,1072,1078,1083,1089,1094],{"type":559,"tag":595,"props":1063,"children":1064},{"style":786},[1065],{"type":564,"value":1066}," * ",{"type":559,"tag":595,"props":1068,"children":1069},{"style":823},[1070],{"type":564,"value":1071},"@",{"type":559,"tag":595,"props":1073,"children":1075},{"style":1074},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[1076],{"type":564,"value":1077},"param",{"type":559,"tag":595,"props":1079,"children":1080},{"style":823},[1081],{"type":564,"value":1082}," {",{"type":559,"tag":595,"props":1084,"children":1086},{"style":1085},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[1087],{"type":564,"value":1088},"TreeNode",{"type":559,"tag":595,"props":1090,"children":1091},{"style":823},[1092],{"type":564,"value":1093},"}",{"type":559,"tag":595,"props":1095,"children":1096},{"style":829},[1097],{"type":564,"value":1098}," root\n",{"type":559,"tag":595,"props":1100,"children":1102},{"class":597,"line":1101},12,[1103,1107,1111,1115,1119,1124,1128],{"type":559,"tag":595,"props":1104,"children":1105},{"style":786},[1106],{"type":564,"value":1066},{"type":559,"tag":595,"props":1108,"children":1109},{"style":823},[1110],{"type":564,"value":1071},{"type":559,"tag":595,"props":1112,"children":1113},{"style":1074},[1114],{"type":564,"value":1077},{"type":559,"tag":595,"props":1116,"children":1117},{"style":823},[1118],{"type":564,"value":1082},{"type":559,"tag":595,"props":1120,"children":1121},{"style":1085},[1122],{"type":564,"value":1123},"number",{"type":559,"tag":595,"props":1125,"children":1126},{"style":823},[1127],{"type":564,"value":1093},{"type":559,"tag":595,"props":1129,"children":1130},{"style":829},[1131],{"type":564,"value":1132}," targetSum\n",{"type":559,"tag":595,"props":1134,"children":1136},{"class":597,"line":1135},13,[1137,1141,1145,1150,1154,1159],{"type":559,"tag":595,"props":1138,"children":1139},{"style":786},[1140],{"type":564,"value":1066},{"type":559,"tag":595,"props":1142,"children":1143},{"style":823},[1144],{"type":564,"value":1071},{"type":559,"tag":595,"props":1146,"children":1147},{"style":1074},[1148],{"type":564,"value":1149},"return",{"type":559,"tag":595,"props":1151,"children":1152},{"style":823},[1153],{"type":564,"value":1082},{"type":559,"tag":595,"props":1155,"children":1156},{"style":1085},[1157],{"type":564,"value":1158},"boolean",{"type":559,"tag":595,"props":1160,"children":1161},{"style":823},[1162],{"type":564,"value":1039},{"type":559,"tag":595,"props":1164,"children":1166},{"class":597,"line":1165},14,[1167],{"type":559,"tag":595,"props":1168,"children":1169},{"style":786},[1170],{"type":564,"value":805},{"type":559,"tag":595,"props":1172,"children":1174},{"class":597,"line":1173},15,[1175,1180,1185,1189,1194,1199,1203,1207,1212,1216],{"type":559,"tag":595,"props":1176,"children":1177},{"style":811},[1178],{"type":564,"value":1179},"var",{"type":559,"tag":595,"props":1181,"children":1182},{"style":817},[1183],{"type":564,"value":1184}," hasPathSum",{"type":559,"tag":595,"props":1186,"children":1187},{"style":823},[1188],{"type":564,"value":884},{"type":559,"tag":595,"props":1190,"children":1191},{"style":811},[1192],{"type":564,"value":1193}," function",{"type":559,"tag":595,"props":1195,"children":1196},{"style":823},[1197],{"type":564,"value":1198}," (",{"type":559,"tag":595,"props":1200,"children":1201},{"style":829},[1202],{"type":564,"value":556},{"type":559,"tag":595,"props":1204,"children":1205},{"style":823},[1206],{"type":564,"value":837},{"type":559,"tag":595,"props":1208,"children":1209},{"style":829},[1210],{"type":564,"value":1211}," targetSum",{"type":559,"tag":595,"props":1213,"children":1214},{"style":823},[1215],{"type":564,"value":856},{"type":559,"tag":595,"props":1217,"children":1218},{"style":823},[1219],{"type":564,"value":861},{"type":559,"tag":595,"props":1221,"children":1223},{"class":597,"line":1222},16,[1224,1229,1233,1237,1241,1245,1249,1254,1259],{"type":559,"tag":595,"props":1225,"children":1226},{"style":1074},[1227],{"type":564,"value":1228},"  if",{"type":559,"tag":595,"props":1230,"children":1231},{"style":823},[1232],{"type":564,"value":1198},{"type":559,"tag":595,"props":1234,"children":1235},{"style":829},[1236],{"type":564,"value":556},{"type":559,"tag":595,"props":1238,"children":1239},{"style":811},[1240],{"type":564,"value":894},{"type":559,"tag":595,"props":1242,"children":1243},{"style":811},[1244],{"type":564,"value":965},{"type":559,"tag":595,"props":1246,"children":1247},{"style":823},[1248],{"type":564,"value":856},{"type":559,"tag":595,"props":1250,"children":1251},{"style":1074},[1252],{"type":564,"value":1253}," return",{"type":559,"tag":595,"props":1255,"children":1256},{"style":1074},[1257],{"type":564,"value":1258}," false",{"type":559,"tag":595,"props":1260,"children":1261},{"style":823},[1262],{"type":564,"value":924},{"type":559,"tag":595,"props":1264,"children":1266},{"class":597,"line":1265},17,[1267,1271,1275,1279,1283,1287,1291,1295,1300,1305,1309,1313,1317,1321,1325,1329,1333,1337,1341,1345,1349],{"type":559,"tag":595,"props":1268,"children":1269},{"style":1074},[1270],{"type":564,"value":1228},{"type":559,"tag":595,"props":1272,"children":1273},{"style":823},[1274],{"type":564,"value":1198},{"type":559,"tag":595,"props":1276,"children":1277},{"style":829},[1278],{"type":564,"value":556},{"type":559,"tag":595,"props":1280,"children":1281},{"style":823},[1282],{"type":564,"value":875},{"type":559,"tag":595,"props":1284,"children":1285},{"style":829},[1286],{"type":564,"value":940},{"type":559,"tag":595,"props":1288,"children":1289},{"style":811},[1290],{"type":564,"value":894},{"type":559,"tag":595,"props":1292,"children":1293},{"style":811},[1294],{"type":564,"value":965},{"type":559,"tag":595,"props":1296,"children":1297},{"style":811},[1298],{"type":564,"value":1299}," &&",{"type":559,"tag":595,"props":1301,"children":1302},{"style":829},[1303],{"type":564,"value":1304}," root",{"type":559,"tag":595,"props":1306,"children":1307},{"style":823},[1308],{"type":564,"value":875},{"type":559,"tag":595,"props":1310,"children":1311},{"style":829},[1312],{"type":564,"value":994},{"type":559,"tag":595,"props":1314,"children":1315},{"style":811},[1316],{"type":564,"value":894},{"type":559,"tag":595,"props":1318,"children":1319},{"style":811},[1320],{"type":564,"value":965},{"type":559,"tag":595,"props":1322,"children":1323},{"style":823},[1324],{"type":564,"value":856},{"type":559,"tag":595,"props":1326,"children":1327},{"style":1074},[1328],{"type":564,"value":1253},{"type":559,"tag":595,"props":1330,"children":1331},{"style":829},[1332],{"type":564,"value":1304},{"type":559,"tag":595,"props":1334,"children":1335},{"style":823},[1336],{"type":564,"value":875},{"type":559,"tag":595,"props":1338,"children":1339},{"style":829},[1340],{"type":564,"value":832},{"type":559,"tag":595,"props":1342,"children":1343},{"style":811},[1344],{"type":564,"value":894},{"type":559,"tag":595,"props":1346,"children":1347},{"style":829},[1348],{"type":564,"value":1211},{"type":559,"tag":595,"props":1350,"children":1351},{"style":823},[1352],{"type":564,"value":924},{"type":559,"tag":595,"props":1354,"children":1356},{"class":597,"line":1355},18,[1357,1362],{"type":559,"tag":595,"props":1358,"children":1359},{"style":1074},[1360],{"type":564,"value":1361},"  return",{"type":559,"tag":595,"props":1363,"children":1364},{"style":823},[1365],{"type":564,"value":1366}," (\n",{"type":559,"tag":595,"props":1368,"children":1370},{"class":597,"line":1369},19,[1371,1376,1380,1384,1388,1392,1396,1400,1405,1409,1413,1417,1421],{"type":559,"tag":595,"props":1372,"children":1373},{"style":817},[1374],{"type":564,"value":1375},"    hasPathSum",{"type":559,"tag":595,"props":1377,"children":1378},{"style":823},[1379],{"type":564,"value":826},{"type":559,"tag":595,"props":1381,"children":1382},{"style":829},[1383],{"type":564,"value":556},{"type":559,"tag":595,"props":1385,"children":1386},{"style":823},[1387],{"type":564,"value":875},{"type":559,"tag":595,"props":1389,"children":1390},{"style":829},[1391],{"type":564,"value":940},{"type":559,"tag":595,"props":1393,"children":1394},{"style":823},[1395],{"type":564,"value":837},{"type":559,"tag":595,"props":1397,"children":1398},{"style":829},[1399],{"type":564,"value":1211},{"type":559,"tag":595,"props":1401,"children":1402},{"style":811},[1403],{"type":564,"value":1404}," -",{"type":559,"tag":595,"props":1406,"children":1407},{"style":829},[1408],{"type":564,"value":1304},{"type":559,"tag":595,"props":1410,"children":1411},{"style":823},[1412],{"type":564,"value":875},{"type":559,"tag":595,"props":1414,"children":1415},{"style":829},[1416],{"type":564,"value":832},{"type":559,"tag":595,"props":1418,"children":1419},{"style":823},[1420],{"type":564,"value":856},{"type":559,"tag":595,"props":1422,"children":1423},{"style":811},[1424],{"type":564,"value":1425}," ||\n",{"type":559,"tag":595,"props":1427,"children":1429},{"class":597,"line":1428},20,[1430,1434,1438,1442,1446,1450,1454,1458,1462,1466,1470,1474],{"type":559,"tag":595,"props":1431,"children":1432},{"style":817},[1433],{"type":564,"value":1375},{"type":559,"tag":595,"props":1435,"children":1436},{"style":823},[1437],{"type":564,"value":826},{"type":559,"tag":595,"props":1439,"children":1440},{"style":829},[1441],{"type":564,"value":556},{"type":559,"tag":595,"props":1443,"children":1444},{"style":823},[1445],{"type":564,"value":875},{"type":559,"tag":595,"props":1447,"children":1448},{"style":829},[1449],{"type":564,"value":994},{"type":559,"tag":595,"props":1451,"children":1452},{"style":823},[1453],{"type":564,"value":837},{"type":559,"tag":595,"props":1455,"children":1456},{"style":829},[1457],{"type":564,"value":1211},{"type":559,"tag":595,"props":1459,"children":1460},{"style":811},[1461],{"type":564,"value":1404},{"type":559,"tag":595,"props":1463,"children":1464},{"style":829},[1465],{"type":564,"value":1304},{"type":559,"tag":595,"props":1467,"children":1468},{"style":823},[1469],{"type":564,"value":875},{"type":559,"tag":595,"props":1471,"children":1472},{"style":829},[1473],{"type":564,"value":832},{"type":559,"tag":595,"props":1475,"children":1476},{"style":823},[1477],{"type":564,"value":1478},")\n",{"type":559,"tag":595,"props":1480,"children":1482},{"class":597,"line":1481},21,[1483],{"type":559,"tag":595,"props":1484,"children":1485},{"style":823},[1486],{"type":564,"value":1487},"  );\n",{"type":559,"tag":595,"props":1489,"children":1491},{"class":597,"line":1490},22,[1492],{"type":559,"tag":595,"props":1493,"children":1494},{"style":823},[1495],{"type":564,"value":1496},"};\n",{"type":559,"tag":1498,"props":1499,"children":1500},"style",{},[1501],{"type":564,"value":1502},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":552,"searchDepth":678,"depth":678,"links":1504},[1505,1506],{"id":757,"depth":607,"text":757},{"id":762,"depth":607,"text":762,"children":1507},[1508],{"id":768,"depth":616,"text":771},"markdown","content:1.algorithm:3.leetcode:3.major:112.path-sum.md","content","1.algorithm/3.leetcode/3.major/112.path-sum.md","md",[1515,1517],{"_path":159,"title":158,"description":1516},"给定一个二叉树，找出其最小深度。",{"_path":165,"title":164,"description":1518},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",1715008125106]