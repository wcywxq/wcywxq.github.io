[{"data":1,"prerenderedAt":1510},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/path-sum":540,"/algorithm/leetcode/major/path-sum-surround":1505},[4,269,298,508,516,525],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":507},"代码考核","/code-assessment",[302,401,500],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,334,350,378,385,392,395,398],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333},"extends","/code-assessment/source/native-api/extends",{"title":335,"_path":336,"children":337},"函数 Function","/code-assessment/source/function",[338,341,344,347],{"title":339,"_path":340},"函数防抖","/code-assessment/source/function/debounce",{"title":342,"_path":343},"函数节流","/code-assessment/source/function/throttle",{"title":345,"_path":346},"函数柯理化","/code-assessment/source/function/curry",{"title":348,"_path":349},"函数睡眠","/code-assessment/source/function/sleep",{"title":351,"_path":352,"children":353},"数组 Array","/code-assessment/source/array",[354,357,360,363,366,369,372,375],{"title":355,"_path":356},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":358,"_path":359},"数组扁平化","/code-assessment/source/array/flat",{"title":361,"_path":362},"原型方法","/code-assessment/source/array/prototype-method",{"title":364,"_path":365},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":367,"_path":368},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":370,"_path":371},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":373,"_path":374},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":376,"_path":377},"二维数组","/code-assessment/source/array/2d-array",{"title":379,"_path":380,"children":381},"字符串 String","/code-assessment/source/string",[382],{"title":383,"_path":384},"repeat()","/code-assessment/source/string/repeat",{"title":386,"_path":387,"children":388},"集合 Set","/code-assessment/source/set",[389],{"title":390,"_path":391},"遍历集合","/code-assessment/source/set/traverse",{"title":393,"_path":394},"获取通用类型","/code-assessment/source/get-generic-type",{"title":396,"_path":397},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":399,"_path":400},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":402,"_path":403,"children":404},"业务场景","/code-assessment/scene",[405,436,446,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497],{"title":406,"_path":407,"children":408},"Promise","/code-assessment/scene/promise",[409,412,415,418,421,424,427,430,433],{"title":410,"_path":411},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":413,"_path":414},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":416,"_path":417},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":419,"_path":420},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":422,"_path":423},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":425,"_path":426},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":428,"_path":429},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":431,"_path":432},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":434,"_path":435},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":437,"_path":438,"children":439},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[440,443],{"title":441,"_path":442},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":444,"_path":445},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":447,"_path":448},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":450,"_path":451},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":453,"_path":454},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":456,"_path":457},"倒计时","/code-assessment/scene/countdown",{"title":459,"_path":460},"日期格式化","/code-assessment/scene/date-format",{"title":462,"_path":463},"实现前端路由","/code-assessment/scene/frontend-route",{"title":465,"_path":466},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":468,"_path":469},"lodash.get","/code-assessment/scene/lodash-get",{"title":471,"_path":472},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":474,"_path":475},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":477,"_path":478},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":480,"_path":481},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":483,"_path":484},"随机数","/code-assessment/scene/random-number",{"title":486,"_path":487},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":489,"_path":490},"sku 算法实现","/code-assessment/scene/sku",{"title":492,"_path":493},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":495,"_path":496},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":498,"_path":499},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":501,"_path":502,"children":503},"Ts 类型挑战","/code-assessment/type-challeges",[504],{"title":505,"_path":506},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":509,"_path":510,"children":511,"icon":515},"项目","/project",[512],{"title":513,"_path":514},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":517,"_path":518,"children":519,"icon":524},"设计模式","/design-mode",[520,521],{"title":517,"_path":518},{"title":522,"_path":523},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":526,"_path":527,"children":528,"icon":539},"后端语言","/backend-languages",[529],{"title":530,"_path":531,"children":532},"Python","/backend-languages/python",[533,536],{"title":534,"_path":535},"基础","/backend-languages/python/base",{"title":537,"_path":538},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":162,"_dir":541,"_draft":542,"_partial":542,"_locale":543,"title":161,"description":544,"url":545,"body":546,"_type":1500,"_id":1501,"_source":1502,"_file":1503,"_extension":1504},"major",false,"","给你二叉树的根节点 root 和一个表示目标和的整数 targetSum 。判断该树中是否存在 根节点到叶子节点 的路径，这条路径上所有节点值相加等于目标和 targetSum 。如果存在，返回 true ；否则，返回 false 。","https://leetcode.cn/problems/path-sum",{"type":547,"children":548,"toc":1494},"root",[549,556,561,566,575,614,619,627,685,690,720,725,745,751,756,763,1488],{"type":550,"tag":551,"props":552,"children":553},"element","p",{},[554],{"type":555,"value":544},"text",{"type":550,"tag":551,"props":557,"children":558},{},[559],{"type":555,"value":560},"叶子节点 是指没有子节点的节点。",{"type":550,"tag":551,"props":562,"children":563},{},[564],{"type":555,"value":565},"示例 1：",{"type":550,"tag":551,"props":567,"children":568},{},[569],{"type":550,"tag":570,"props":571,"children":574},"img",{"alt":572,"src":573},"pathsum1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.112_pathsum1.png",[],{"type":550,"tag":576,"props":577,"children":580},"pre",{"className":578,"code":579,"language":555,"meta":543,"style":543},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n输出：true\n解释：等于目标和的根节点到叶节点路径如上图所示。\n",[581],{"type":550,"tag":582,"props":583,"children":584},"code",{"__ignoreMap":543},[585,596,605],{"type":550,"tag":586,"props":587,"children":590},"span",{"class":588,"line":589},"line",1,[591],{"type":550,"tag":586,"props":592,"children":593},{},[594],{"type":555,"value":595},"输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n",{"type":550,"tag":586,"props":597,"children":599},{"class":588,"line":598},2,[600],{"type":550,"tag":586,"props":601,"children":602},{},[603],{"type":555,"value":604},"输出：true\n",{"type":550,"tag":586,"props":606,"children":608},{"class":588,"line":607},3,[609],{"type":550,"tag":586,"props":610,"children":611},{},[612],{"type":555,"value":613},"解释：等于目标和的根节点到叶节点路径如上图所示。\n",{"type":550,"tag":551,"props":615,"children":616},{},[617],{"type":555,"value":618},"示例 2：",{"type":550,"tag":551,"props":620,"children":621},{},[622],{"type":550,"tag":570,"props":623,"children":626},{"alt":624,"src":625},"pathsum2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.112_pathsum2.png",[],{"type":550,"tag":576,"props":628,"children":630},{"className":578,"code":629,"language":555,"meta":543,"style":543},"输入：root = [1,2,3], targetSum = 5\n输出：false\n解释：树中存在两条根节点到叶子节点的路径：\n(1 --> 2): 和为 3\n(1 --> 3): 和为 4\n不存在 sum = 5 的根节点到叶子节点的路径。\n",[631],{"type":550,"tag":582,"props":632,"children":633},{"__ignoreMap":543},[634,642,650,658,667,676],{"type":550,"tag":586,"props":635,"children":636},{"class":588,"line":589},[637],{"type":550,"tag":586,"props":638,"children":639},{},[640],{"type":555,"value":641},"输入：root = [1,2,3], targetSum = 5\n",{"type":550,"tag":586,"props":643,"children":644},{"class":588,"line":598},[645],{"type":550,"tag":586,"props":646,"children":647},{},[648],{"type":555,"value":649},"输出：false\n",{"type":550,"tag":586,"props":651,"children":652},{"class":588,"line":607},[653],{"type":550,"tag":586,"props":654,"children":655},{},[656],{"type":555,"value":657},"解释：树中存在两条根节点到叶子节点的路径：\n",{"type":550,"tag":586,"props":659,"children":661},{"class":588,"line":660},4,[662],{"type":550,"tag":586,"props":663,"children":664},{},[665],{"type":555,"value":666},"(1 --> 2): 和为 3\n",{"type":550,"tag":586,"props":668,"children":670},{"class":588,"line":669},5,[671],{"type":550,"tag":586,"props":672,"children":673},{},[674],{"type":555,"value":675},"(1 --> 3): 和为 4\n",{"type":550,"tag":586,"props":677,"children":679},{"class":588,"line":678},6,[680],{"type":550,"tag":586,"props":681,"children":682},{},[683],{"type":555,"value":684},"不存在 sum = 5 的根节点到叶子节点的路径。\n",{"type":550,"tag":551,"props":686,"children":687},{},[688],{"type":555,"value":689},"示例 3：",{"type":550,"tag":576,"props":691,"children":693},{"className":578,"code":692,"language":555,"meta":543,"style":543},"输入：root = [], targetSum = 0\n输出：false\n解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",[694],{"type":550,"tag":582,"props":695,"children":696},{"__ignoreMap":543},[697,705,712],{"type":550,"tag":586,"props":698,"children":699},{"class":588,"line":589},[700],{"type":550,"tag":586,"props":701,"children":702},{},[703],{"type":555,"value":704},"输入：root = [], targetSum = 0\n",{"type":550,"tag":586,"props":706,"children":707},{"class":588,"line":598},[708],{"type":550,"tag":586,"props":709,"children":710},{},[711],{"type":555,"value":649},{"type":550,"tag":586,"props":713,"children":714},{"class":588,"line":607},[715],{"type":550,"tag":586,"props":716,"children":717},{},[718],{"type":555,"value":719},"解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",{"type":550,"tag":551,"props":721,"children":722},{},[723],{"type":555,"value":724},"提示：",{"type":550,"tag":726,"props":727,"children":728},"ul",{},[729,735,740],{"type":550,"tag":730,"props":731,"children":732},"li",{},[733],{"type":555,"value":734},"树中节点的数目在范围 [0, 5000] 内",{"type":550,"tag":730,"props":736,"children":737},{},[738],{"type":555,"value":739},"-1000 \u003C= Node.val \u003C= 1000",{"type":550,"tag":730,"props":741,"children":742},{},[743],{"type":555,"value":744},"-1000 \u003C= targetSum \u003C= 1000",{"type":550,"tag":746,"props":747,"children":749},"h2",{"id":748},"解题思路",[750],{"type":555,"value":748},{"type":550,"tag":746,"props":752,"children":754},{"id":753},"实现",[755],{"type":555,"value":753},{"type":550,"tag":757,"props":758,"children":760},"h3",{"id":759},"深度优先搜索-dfs",[761],{"type":555,"value":762},"深度优先搜索 - dfs",{"type":550,"tag":576,"props":764,"children":768},{"className":765,"code":766,"language":767,"meta":543,"style":543},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {boolean}\n */\nvar hasPathSum = function (root, targetSum) {\n  if (root === null) return false;\n  if (root.left === null && root.right === null) return root.val === targetSum;\n  return (\n    hasPathSum(root.left, targetSum - root.val) ||\n    hasPathSum(root.right, targetSum - root.val)\n  );\n};\n","js",[769],{"type":550,"tag":582,"props":770,"children":771},{"__ignoreMap":543},[772,781,789,797,853,916,969,1022,1031,1041,1049,1090,1124,1154,1162,1211,1254,1344,1358,1417,1470,1479],{"type":550,"tag":586,"props":773,"children":774},{"class":588,"line":589},[775],{"type":550,"tag":586,"props":776,"children":778},{"style":777},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[779],{"type":555,"value":780},"/**\n",{"type":550,"tag":586,"props":782,"children":783},{"class":588,"line":598},[784],{"type":550,"tag":586,"props":785,"children":786},{"style":777},[787],{"type":555,"value":788}," * Definition for a binary tree node.\n",{"type":550,"tag":586,"props":790,"children":791},{"class":588,"line":607},[792],{"type":550,"tag":586,"props":793,"children":794},{"style":777},[795],{"type":555,"value":796}," */\n",{"type":550,"tag":586,"props":798,"children":799},{"class":588,"line":660},[800,806,812,818,824,829,834,838,843,848],{"type":550,"tag":586,"props":801,"children":803},{"style":802},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[804],{"type":555,"value":805},"function",{"type":550,"tag":586,"props":807,"children":809},{"style":808},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[810],{"type":555,"value":811}," TreeNode",{"type":550,"tag":586,"props":813,"children":815},{"style":814},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[816],{"type":555,"value":817},"(",{"type":550,"tag":586,"props":819,"children":821},{"style":820},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[822],{"type":555,"value":823},"val",{"type":550,"tag":586,"props":825,"children":826},{"style":814},[827],{"type":555,"value":828},",",{"type":550,"tag":586,"props":830,"children":831},{"style":820},[832],{"type":555,"value":833}," left",{"type":550,"tag":586,"props":835,"children":836},{"style":814},[837],{"type":555,"value":828},{"type":550,"tag":586,"props":839,"children":840},{"style":820},[841],{"type":555,"value":842}," right",{"type":550,"tag":586,"props":844,"children":845},{"style":814},[846],{"type":555,"value":847},")",{"type":550,"tag":586,"props":849,"children":850},{"style":814},[851],{"type":555,"value":852}," {\n",{"type":550,"tag":586,"props":854,"children":855},{"class":588,"line":669},[856,862,867,871,876,881,886,891,896,902,907,911],{"type":550,"tag":586,"props":857,"children":859},{"style":858},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[860],{"type":555,"value":861},"  this",{"type":550,"tag":586,"props":863,"children":864},{"style":814},[865],{"type":555,"value":866},".",{"type":550,"tag":586,"props":868,"children":869},{"style":820},[870],{"type":555,"value":823},{"type":550,"tag":586,"props":872,"children":873},{"style":814},[874],{"type":555,"value":875}," =",{"type":550,"tag":586,"props":877,"children":878},{"style":820},[879],{"type":555,"value":880}," val",{"type":550,"tag":586,"props":882,"children":883},{"style":802},[884],{"type":555,"value":885}," ===",{"type":550,"tag":586,"props":887,"children":888},{"style":802},[889],{"type":555,"value":890}," undefined",{"type":550,"tag":586,"props":892,"children":893},{"style":802},[894],{"type":555,"value":895}," ?",{"type":550,"tag":586,"props":897,"children":899},{"style":898},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[900],{"type":555,"value":901}," 0",{"type":550,"tag":586,"props":903,"children":904},{"style":802},[905],{"type":555,"value":906}," :",{"type":550,"tag":586,"props":908,"children":909},{"style":820},[910],{"type":555,"value":880},{"type":550,"tag":586,"props":912,"children":913},{"style":814},[914],{"type":555,"value":915},";\n",{"type":550,"tag":586,"props":917,"children":918},{"class":588,"line":678},[919,923,927,932,936,940,944,948,952,957,961,965],{"type":550,"tag":586,"props":920,"children":921},{"style":858},[922],{"type":555,"value":861},{"type":550,"tag":586,"props":924,"children":925},{"style":814},[926],{"type":555,"value":866},{"type":550,"tag":586,"props":928,"children":929},{"style":820},[930],{"type":555,"value":931},"left",{"type":550,"tag":586,"props":933,"children":934},{"style":814},[935],{"type":555,"value":875},{"type":550,"tag":586,"props":937,"children":938},{"style":820},[939],{"type":555,"value":833},{"type":550,"tag":586,"props":941,"children":942},{"style":802},[943],{"type":555,"value":885},{"type":550,"tag":586,"props":945,"children":946},{"style":802},[947],{"type":555,"value":890},{"type":550,"tag":586,"props":949,"children":950},{"style":802},[951],{"type":555,"value":895},{"type":550,"tag":586,"props":953,"children":954},{"style":802},[955],{"type":555,"value":956}," null",{"type":550,"tag":586,"props":958,"children":959},{"style":802},[960],{"type":555,"value":906},{"type":550,"tag":586,"props":962,"children":963},{"style":820},[964],{"type":555,"value":833},{"type":550,"tag":586,"props":966,"children":967},{"style":814},[968],{"type":555,"value":915},{"type":550,"tag":586,"props":970,"children":972},{"class":588,"line":971},7,[973,977,981,986,990,994,998,1002,1006,1010,1014,1018],{"type":550,"tag":586,"props":974,"children":975},{"style":858},[976],{"type":555,"value":861},{"type":550,"tag":586,"props":978,"children":979},{"style":814},[980],{"type":555,"value":866},{"type":550,"tag":586,"props":982,"children":983},{"style":820},[984],{"type":555,"value":985},"right",{"type":550,"tag":586,"props":987,"children":988},{"style":814},[989],{"type":555,"value":875},{"type":550,"tag":586,"props":991,"children":992},{"style":820},[993],{"type":555,"value":842},{"type":550,"tag":586,"props":995,"children":996},{"style":802},[997],{"type":555,"value":885},{"type":550,"tag":586,"props":999,"children":1000},{"style":802},[1001],{"type":555,"value":890},{"type":550,"tag":586,"props":1003,"children":1004},{"style":802},[1005],{"type":555,"value":895},{"type":550,"tag":586,"props":1007,"children":1008},{"style":802},[1009],{"type":555,"value":956},{"type":550,"tag":586,"props":1011,"children":1012},{"style":802},[1013],{"type":555,"value":906},{"type":550,"tag":586,"props":1015,"children":1016},{"style":820},[1017],{"type":555,"value":842},{"type":550,"tag":586,"props":1019,"children":1020},{"style":814},[1021],{"type":555,"value":915},{"type":550,"tag":586,"props":1023,"children":1025},{"class":588,"line":1024},8,[1026],{"type":550,"tag":586,"props":1027,"children":1028},{"style":814},[1029],{"type":555,"value":1030},"}\n",{"type":550,"tag":586,"props":1032,"children":1034},{"class":588,"line":1033},9,[1035],{"type":550,"tag":586,"props":1036,"children":1038},{"emptyLinePlaceholder":1037},true,[1039],{"type":555,"value":1040},"\n",{"type":550,"tag":586,"props":1042,"children":1044},{"class":588,"line":1043},10,[1045],{"type":550,"tag":586,"props":1046,"children":1047},{"style":777},[1048],{"type":555,"value":780},{"type":550,"tag":586,"props":1050,"children":1052},{"class":588,"line":1051},11,[1053,1058,1063,1069,1074,1080,1085],{"type":550,"tag":586,"props":1054,"children":1055},{"style":777},[1056],{"type":555,"value":1057}," * ",{"type":550,"tag":586,"props":1059,"children":1060},{"style":814},[1061],{"type":555,"value":1062},"@",{"type":550,"tag":586,"props":1064,"children":1066},{"style":1065},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[1067],{"type":555,"value":1068},"param",{"type":550,"tag":586,"props":1070,"children":1071},{"style":814},[1072],{"type":555,"value":1073}," {",{"type":550,"tag":586,"props":1075,"children":1077},{"style":1076},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[1078],{"type":555,"value":1079},"TreeNode",{"type":550,"tag":586,"props":1081,"children":1082},{"style":814},[1083],{"type":555,"value":1084},"}",{"type":550,"tag":586,"props":1086,"children":1087},{"style":820},[1088],{"type":555,"value":1089}," root\n",{"type":550,"tag":586,"props":1091,"children":1093},{"class":588,"line":1092},12,[1094,1098,1102,1106,1110,1115,1119],{"type":550,"tag":586,"props":1095,"children":1096},{"style":777},[1097],{"type":555,"value":1057},{"type":550,"tag":586,"props":1099,"children":1100},{"style":814},[1101],{"type":555,"value":1062},{"type":550,"tag":586,"props":1103,"children":1104},{"style":1065},[1105],{"type":555,"value":1068},{"type":550,"tag":586,"props":1107,"children":1108},{"style":814},[1109],{"type":555,"value":1073},{"type":550,"tag":586,"props":1111,"children":1112},{"style":1076},[1113],{"type":555,"value":1114},"number",{"type":550,"tag":586,"props":1116,"children":1117},{"style":814},[1118],{"type":555,"value":1084},{"type":550,"tag":586,"props":1120,"children":1121},{"style":820},[1122],{"type":555,"value":1123}," targetSum\n",{"type":550,"tag":586,"props":1125,"children":1127},{"class":588,"line":1126},13,[1128,1132,1136,1141,1145,1150],{"type":550,"tag":586,"props":1129,"children":1130},{"style":777},[1131],{"type":555,"value":1057},{"type":550,"tag":586,"props":1133,"children":1134},{"style":814},[1135],{"type":555,"value":1062},{"type":550,"tag":586,"props":1137,"children":1138},{"style":1065},[1139],{"type":555,"value":1140},"return",{"type":550,"tag":586,"props":1142,"children":1143},{"style":814},[1144],{"type":555,"value":1073},{"type":550,"tag":586,"props":1146,"children":1147},{"style":1076},[1148],{"type":555,"value":1149},"boolean",{"type":550,"tag":586,"props":1151,"children":1152},{"style":814},[1153],{"type":555,"value":1030},{"type":550,"tag":586,"props":1155,"children":1157},{"class":588,"line":1156},14,[1158],{"type":550,"tag":586,"props":1159,"children":1160},{"style":777},[1161],{"type":555,"value":796},{"type":550,"tag":586,"props":1163,"children":1165},{"class":588,"line":1164},15,[1166,1171,1176,1180,1185,1190,1194,1198,1203,1207],{"type":550,"tag":586,"props":1167,"children":1168},{"style":802},[1169],{"type":555,"value":1170},"var",{"type":550,"tag":586,"props":1172,"children":1173},{"style":808},[1174],{"type":555,"value":1175}," hasPathSum",{"type":550,"tag":586,"props":1177,"children":1178},{"style":814},[1179],{"type":555,"value":875},{"type":550,"tag":586,"props":1181,"children":1182},{"style":802},[1183],{"type":555,"value":1184}," function",{"type":550,"tag":586,"props":1186,"children":1187},{"style":814},[1188],{"type":555,"value":1189}," (",{"type":550,"tag":586,"props":1191,"children":1192},{"style":820},[1193],{"type":555,"value":547},{"type":550,"tag":586,"props":1195,"children":1196},{"style":814},[1197],{"type":555,"value":828},{"type":550,"tag":586,"props":1199,"children":1200},{"style":820},[1201],{"type":555,"value":1202}," targetSum",{"type":550,"tag":586,"props":1204,"children":1205},{"style":814},[1206],{"type":555,"value":847},{"type":550,"tag":586,"props":1208,"children":1209},{"style":814},[1210],{"type":555,"value":852},{"type":550,"tag":586,"props":1212,"children":1214},{"class":588,"line":1213},16,[1215,1220,1224,1228,1232,1236,1240,1245,1250],{"type":550,"tag":586,"props":1216,"children":1217},{"style":1065},[1218],{"type":555,"value":1219},"  if",{"type":550,"tag":586,"props":1221,"children":1222},{"style":814},[1223],{"type":555,"value":1189},{"type":550,"tag":586,"props":1225,"children":1226},{"style":820},[1227],{"type":555,"value":547},{"type":550,"tag":586,"props":1229,"children":1230},{"style":802},[1231],{"type":555,"value":885},{"type":550,"tag":586,"props":1233,"children":1234},{"style":802},[1235],{"type":555,"value":956},{"type":550,"tag":586,"props":1237,"children":1238},{"style":814},[1239],{"type":555,"value":847},{"type":550,"tag":586,"props":1241,"children":1242},{"style":1065},[1243],{"type":555,"value":1244}," return",{"type":550,"tag":586,"props":1246,"children":1247},{"style":1065},[1248],{"type":555,"value":1249}," false",{"type":550,"tag":586,"props":1251,"children":1252},{"style":814},[1253],{"type":555,"value":915},{"type":550,"tag":586,"props":1255,"children":1257},{"class":588,"line":1256},17,[1258,1262,1266,1270,1274,1278,1282,1286,1291,1296,1300,1304,1308,1312,1316,1320,1324,1328,1332,1336,1340],{"type":550,"tag":586,"props":1259,"children":1260},{"style":1065},[1261],{"type":555,"value":1219},{"type":550,"tag":586,"props":1263,"children":1264},{"style":814},[1265],{"type":555,"value":1189},{"type":550,"tag":586,"props":1267,"children":1268},{"style":820},[1269],{"type":555,"value":547},{"type":550,"tag":586,"props":1271,"children":1272},{"style":814},[1273],{"type":555,"value":866},{"type":550,"tag":586,"props":1275,"children":1276},{"style":820},[1277],{"type":555,"value":931},{"type":550,"tag":586,"props":1279,"children":1280},{"style":802},[1281],{"type":555,"value":885},{"type":550,"tag":586,"props":1283,"children":1284},{"style":802},[1285],{"type":555,"value":956},{"type":550,"tag":586,"props":1287,"children":1288},{"style":802},[1289],{"type":555,"value":1290}," &&",{"type":550,"tag":586,"props":1292,"children":1293},{"style":820},[1294],{"type":555,"value":1295}," root",{"type":550,"tag":586,"props":1297,"children":1298},{"style":814},[1299],{"type":555,"value":866},{"type":550,"tag":586,"props":1301,"children":1302},{"style":820},[1303],{"type":555,"value":985},{"type":550,"tag":586,"props":1305,"children":1306},{"style":802},[1307],{"type":555,"value":885},{"type":550,"tag":586,"props":1309,"children":1310},{"style":802},[1311],{"type":555,"value":956},{"type":550,"tag":586,"props":1313,"children":1314},{"style":814},[1315],{"type":555,"value":847},{"type":550,"tag":586,"props":1317,"children":1318},{"style":1065},[1319],{"type":555,"value":1244},{"type":550,"tag":586,"props":1321,"children":1322},{"style":820},[1323],{"type":555,"value":1295},{"type":550,"tag":586,"props":1325,"children":1326},{"style":814},[1327],{"type":555,"value":866},{"type":550,"tag":586,"props":1329,"children":1330},{"style":820},[1331],{"type":555,"value":823},{"type":550,"tag":586,"props":1333,"children":1334},{"style":802},[1335],{"type":555,"value":885},{"type":550,"tag":586,"props":1337,"children":1338},{"style":820},[1339],{"type":555,"value":1202},{"type":550,"tag":586,"props":1341,"children":1342},{"style":814},[1343],{"type":555,"value":915},{"type":550,"tag":586,"props":1345,"children":1347},{"class":588,"line":1346},18,[1348,1353],{"type":550,"tag":586,"props":1349,"children":1350},{"style":1065},[1351],{"type":555,"value":1352},"  return",{"type":550,"tag":586,"props":1354,"children":1355},{"style":814},[1356],{"type":555,"value":1357}," (\n",{"type":550,"tag":586,"props":1359,"children":1361},{"class":588,"line":1360},19,[1362,1367,1371,1375,1379,1383,1387,1391,1396,1400,1404,1408,1412],{"type":550,"tag":586,"props":1363,"children":1364},{"style":808},[1365],{"type":555,"value":1366},"    hasPathSum",{"type":550,"tag":586,"props":1368,"children":1369},{"style":814},[1370],{"type":555,"value":817},{"type":550,"tag":586,"props":1372,"children":1373},{"style":820},[1374],{"type":555,"value":547},{"type":550,"tag":586,"props":1376,"children":1377},{"style":814},[1378],{"type":555,"value":866},{"type":550,"tag":586,"props":1380,"children":1381},{"style":820},[1382],{"type":555,"value":931},{"type":550,"tag":586,"props":1384,"children":1385},{"style":814},[1386],{"type":555,"value":828},{"type":550,"tag":586,"props":1388,"children":1389},{"style":820},[1390],{"type":555,"value":1202},{"type":550,"tag":586,"props":1392,"children":1393},{"style":802},[1394],{"type":555,"value":1395}," -",{"type":550,"tag":586,"props":1397,"children":1398},{"style":820},[1399],{"type":555,"value":1295},{"type":550,"tag":586,"props":1401,"children":1402},{"style":814},[1403],{"type":555,"value":866},{"type":550,"tag":586,"props":1405,"children":1406},{"style":820},[1407],{"type":555,"value":823},{"type":550,"tag":586,"props":1409,"children":1410},{"style":814},[1411],{"type":555,"value":847},{"type":550,"tag":586,"props":1413,"children":1414},{"style":802},[1415],{"type":555,"value":1416}," ||\n",{"type":550,"tag":586,"props":1418,"children":1420},{"class":588,"line":1419},20,[1421,1425,1429,1433,1437,1441,1445,1449,1453,1457,1461,1465],{"type":550,"tag":586,"props":1422,"children":1423},{"style":808},[1424],{"type":555,"value":1366},{"type":550,"tag":586,"props":1426,"children":1427},{"style":814},[1428],{"type":555,"value":817},{"type":550,"tag":586,"props":1430,"children":1431},{"style":820},[1432],{"type":555,"value":547},{"type":550,"tag":586,"props":1434,"children":1435},{"style":814},[1436],{"type":555,"value":866},{"type":550,"tag":586,"props":1438,"children":1439},{"style":820},[1440],{"type":555,"value":985},{"type":550,"tag":586,"props":1442,"children":1443},{"style":814},[1444],{"type":555,"value":828},{"type":550,"tag":586,"props":1446,"children":1447},{"style":820},[1448],{"type":555,"value":1202},{"type":550,"tag":586,"props":1450,"children":1451},{"style":802},[1452],{"type":555,"value":1395},{"type":550,"tag":586,"props":1454,"children":1455},{"style":820},[1456],{"type":555,"value":1295},{"type":550,"tag":586,"props":1458,"children":1459},{"style":814},[1460],{"type":555,"value":866},{"type":550,"tag":586,"props":1462,"children":1463},{"style":820},[1464],{"type":555,"value":823},{"type":550,"tag":586,"props":1466,"children":1467},{"style":814},[1468],{"type":555,"value":1469},")\n",{"type":550,"tag":586,"props":1471,"children":1473},{"class":588,"line":1472},21,[1474],{"type":550,"tag":586,"props":1475,"children":1476},{"style":814},[1477],{"type":555,"value":1478},"  );\n",{"type":550,"tag":586,"props":1480,"children":1482},{"class":588,"line":1481},22,[1483],{"type":550,"tag":586,"props":1484,"children":1485},{"style":814},[1486],{"type":555,"value":1487},"};\n",{"type":550,"tag":1489,"props":1490,"children":1491},"style",{},[1492],{"type":555,"value":1493},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":543,"searchDepth":669,"depth":669,"links":1495},[1496,1497],{"id":748,"depth":598,"text":748},{"id":753,"depth":598,"text":753,"children":1498},[1499],{"id":759,"depth":607,"text":762},"markdown","content:1.algorithm:3.leetcode:3.major:112.path-sum.md","content","1.algorithm/3.leetcode/3.major/112.path-sum.md","md",[1506,1508],{"_path":159,"title":158,"description":1507},"给定一个二叉树，找出其最小深度。",{"_path":165,"title":164,"description":1509},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",1714099214312]