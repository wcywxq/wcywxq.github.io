[{"data":1,"prerenderedAt":1403},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/path-sum":466,"/algorithm/leetcode/major/path-sum-surround":1398},[4,269,298,443,451],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"前端八股文","/frontend-endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/frontend-endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/frontend-endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/frontend-endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":442},"前端代码考核","/frontend-code-assessment",[302,351,435],{"title":303,"_path":304,"children":305},"源码实现","/frontend-code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/frontend-code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/frontend-code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/frontend-code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/frontend-code-assessment/scene",[355,377,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432],{"title":356,"_path":357,"children":358},"Promise","/frontend-code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[381],{"title":382,"_path":383},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":385,"_path":386},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":388,"_path":389},"倒计时","/frontend-code-assessment/scene/countdown",{"title":391,"_path":392},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":394,"_path":395},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":397,"_path":398},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":400,"_path":401},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":403,"_path":404},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":406,"_path":407},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":409,"_path":410},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":412,"_path":413},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":415,"_path":416},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":418,"_path":419},"随机数","/frontend-code-assessment/scene/random-number",{"title":421,"_path":422},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":424,"_path":425},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":427,"_path":428},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":430,"_path":431},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":433,"_path":434},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":436,"_path":437,"children":438},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[439],{"title":440,"_path":441},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":444,"_path":445,"children":446,"icon":450},"项目","/pro",[447],{"title":448,"_path":449},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":452,"_path":453,"children":454,"icon":465},"后端语言","/backend-languages",[455],{"title":456,"_path":457,"children":458},"Python","/backend-languages/python",[459,462],{"title":460,"_path":461},"基础","/backend-languages/python/base",{"title":463,"_path":464},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":162,"_dir":467,"_draft":468,"_partial":468,"_locale":469,"title":161,"description":470,"url":471,"body":472,"_type":1393,"_id":1394,"_source":1395,"_file":1396,"_extension":1397},"major",false,"","给你二叉树的根节点 root 和一个表示目标和的整数 targetSum 。判断该树中是否存在 根节点到叶子节点 的路径，这条路径上所有节点值相加等于目标和 targetSum 。如果存在，返回 true ；否则，返回 false 。","https://leetcode.cn/problems/path-sum",{"type":473,"children":474,"toc":1387},"root",[475,482,487,492,501,540,545,553,611,616,646,651,671,677,682,689,1381],{"type":476,"tag":477,"props":478,"children":479},"element","p",{},[480],{"type":481,"value":470},"text",{"type":476,"tag":477,"props":483,"children":484},{},[485],{"type":481,"value":486},"叶子节点 是指没有子节点的节点。",{"type":476,"tag":477,"props":488,"children":489},{},[490],{"type":481,"value":491},"示例 1：",{"type":476,"tag":477,"props":493,"children":494},{},[495],{"type":476,"tag":496,"props":497,"children":500},"img",{"alt":498,"src":499},"pathsum1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.112_pathsum1.png",[],{"type":476,"tag":502,"props":503,"children":506},"pre",{"className":504,"code":505,"language":481,"meta":469,"style":469},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n输出：true\n解释：等于目标和的根节点到叶节点路径如上图所示。\n",[507],{"type":476,"tag":508,"props":509,"children":510},"code",{"__ignoreMap":469},[511,522,531],{"type":476,"tag":512,"props":513,"children":516},"span",{"class":514,"line":515},"line",1,[517],{"type":476,"tag":512,"props":518,"children":519},{},[520],{"type":481,"value":521},"输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n",{"type":476,"tag":512,"props":523,"children":525},{"class":514,"line":524},2,[526],{"type":476,"tag":512,"props":527,"children":528},{},[529],{"type":481,"value":530},"输出：true\n",{"type":476,"tag":512,"props":532,"children":534},{"class":514,"line":533},3,[535],{"type":476,"tag":512,"props":536,"children":537},{},[538],{"type":481,"value":539},"解释：等于目标和的根节点到叶节点路径如上图所示。\n",{"type":476,"tag":477,"props":541,"children":542},{},[543],{"type":481,"value":544},"示例 2：",{"type":476,"tag":477,"props":546,"children":547},{},[548],{"type":476,"tag":496,"props":549,"children":552},{"alt":550,"src":551},"pathsum2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.112_pathsum2.png",[],{"type":476,"tag":502,"props":554,"children":556},{"className":504,"code":555,"language":481,"meta":469,"style":469},"输入：root = [1,2,3], targetSum = 5\n输出：false\n解释：树中存在两条根节点到叶子节点的路径：\n(1 --> 2): 和为 3\n(1 --> 3): 和为 4\n不存在 sum = 5 的根节点到叶子节点的路径。\n",[557],{"type":476,"tag":508,"props":558,"children":559},{"__ignoreMap":469},[560,568,576,584,593,602],{"type":476,"tag":512,"props":561,"children":562},{"class":514,"line":515},[563],{"type":476,"tag":512,"props":564,"children":565},{},[566],{"type":481,"value":567},"输入：root = [1,2,3], targetSum = 5\n",{"type":476,"tag":512,"props":569,"children":570},{"class":514,"line":524},[571],{"type":476,"tag":512,"props":572,"children":573},{},[574],{"type":481,"value":575},"输出：false\n",{"type":476,"tag":512,"props":577,"children":578},{"class":514,"line":533},[579],{"type":476,"tag":512,"props":580,"children":581},{},[582],{"type":481,"value":583},"解释：树中存在两条根节点到叶子节点的路径：\n",{"type":476,"tag":512,"props":585,"children":587},{"class":514,"line":586},4,[588],{"type":476,"tag":512,"props":589,"children":590},{},[591],{"type":481,"value":592},"(1 --> 2): 和为 3\n",{"type":476,"tag":512,"props":594,"children":596},{"class":514,"line":595},5,[597],{"type":476,"tag":512,"props":598,"children":599},{},[600],{"type":481,"value":601},"(1 --> 3): 和为 4\n",{"type":476,"tag":512,"props":603,"children":605},{"class":514,"line":604},6,[606],{"type":476,"tag":512,"props":607,"children":608},{},[609],{"type":481,"value":610},"不存在 sum = 5 的根节点到叶子节点的路径。\n",{"type":476,"tag":477,"props":612,"children":613},{},[614],{"type":481,"value":615},"示例 3：",{"type":476,"tag":502,"props":617,"children":619},{"className":504,"code":618,"language":481,"meta":469,"style":469},"输入：root = [], targetSum = 0\n输出：false\n解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",[620],{"type":476,"tag":508,"props":621,"children":622},{"__ignoreMap":469},[623,631,638],{"type":476,"tag":512,"props":624,"children":625},{"class":514,"line":515},[626],{"type":476,"tag":512,"props":627,"children":628},{},[629],{"type":481,"value":630},"输入：root = [], targetSum = 0\n",{"type":476,"tag":512,"props":632,"children":633},{"class":514,"line":524},[634],{"type":476,"tag":512,"props":635,"children":636},{},[637],{"type":481,"value":575},{"type":476,"tag":512,"props":639,"children":640},{"class":514,"line":533},[641],{"type":476,"tag":512,"props":642,"children":643},{},[644],{"type":481,"value":645},"解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",{"type":476,"tag":477,"props":647,"children":648},{},[649],{"type":481,"value":650},"提示：",{"type":476,"tag":652,"props":653,"children":654},"ul",{},[655,661,666],{"type":476,"tag":656,"props":657,"children":658},"li",{},[659],{"type":481,"value":660},"树中节点的数目在范围 [0, 5000] 内",{"type":476,"tag":656,"props":662,"children":663},{},[664],{"type":481,"value":665},"-1000 \u003C= Node.val \u003C= 1000",{"type":476,"tag":656,"props":667,"children":668},{},[669],{"type":481,"value":670},"-1000 \u003C= targetSum \u003C= 1000",{"type":476,"tag":672,"props":673,"children":675},"h2",{"id":674},"解题思路",[676],{"type":481,"value":674},{"type":476,"tag":672,"props":678,"children":680},{"id":679},"实现",[681],{"type":481,"value":679},{"type":476,"tag":683,"props":684,"children":686},"h3",{"id":685},"深度优先搜索-dfs",[687],{"type":481,"value":688},"深度优先搜索 - dfs",{"type":476,"tag":502,"props":690,"children":694},{"className":691,"code":692,"language":693,"meta":469,"style":469},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {boolean}\n */\nvar hasPathSum = function (root, targetSum) {\n  if (root === null) return false;\n  if (root.left === null && root.right === null) return root.val === targetSum;\n  return (\n    hasPathSum(root.left, targetSum - root.val) ||\n    hasPathSum(root.right, targetSum - root.val)\n  );\n};\n","js",[695],{"type":476,"tag":508,"props":696,"children":697},{"__ignoreMap":469},[698,707,715,723,775,841,894,947,956,966,974,1001,1023,1041,1049,1094,1139,1229,1243,1302,1355,1368],{"type":476,"tag":512,"props":699,"children":700},{"class":514,"line":515},[701],{"type":476,"tag":512,"props":702,"children":704},{"style":703},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[705],{"type":481,"value":706},"/**\n",{"type":476,"tag":512,"props":708,"children":709},{"class":514,"line":524},[710],{"type":476,"tag":512,"props":711,"children":712},{"style":703},[713],{"type":481,"value":714}," * Definition for a binary tree node.\n",{"type":476,"tag":512,"props":716,"children":717},{"class":514,"line":533},[718],{"type":476,"tag":512,"props":719,"children":720},{"style":703},[721],{"type":481,"value":722}," */\n",{"type":476,"tag":512,"props":724,"children":725},{"class":514,"line":586},[726,732,738,744,750,756,761,765,770],{"type":476,"tag":512,"props":727,"children":729},{"style":728},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[730],{"type":481,"value":731},"function",{"type":476,"tag":512,"props":733,"children":735},{"style":734},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[736],{"type":481,"value":737}," TreeNode",{"type":476,"tag":512,"props":739,"children":741},{"style":740},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[742],{"type":481,"value":743},"(",{"type":476,"tag":512,"props":745,"children":747},{"style":746},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[748],{"type":481,"value":749},"val",{"type":476,"tag":512,"props":751,"children":753},{"style":752},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[754],{"type":481,"value":755},",",{"type":476,"tag":512,"props":757,"children":758},{"style":746},[759],{"type":481,"value":760}," left",{"type":476,"tag":512,"props":762,"children":763},{"style":752},[764],{"type":481,"value":755},{"type":476,"tag":512,"props":766,"children":767},{"style":746},[768],{"type":481,"value":769}," right",{"type":476,"tag":512,"props":771,"children":772},{"style":740},[773],{"type":481,"value":774},") {\n",{"type":476,"tag":512,"props":776,"children":777},{"class":514,"line":595},[778,784,790,795,801,806,811,817,822,827,832,836],{"type":476,"tag":512,"props":779,"children":781},{"style":780},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[782],{"type":481,"value":783},"  this",{"type":476,"tag":512,"props":785,"children":787},{"style":786},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[788],{"type":481,"value":789},".",{"type":476,"tag":512,"props":791,"children":793},{"style":792},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[794],{"type":481,"value":749},{"type":476,"tag":512,"props":796,"children":798},{"style":797},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[799],{"type":481,"value":800}," =",{"type":476,"tag":512,"props":802,"children":803},{"style":792},[804],{"type":481,"value":805}," val",{"type":476,"tag":512,"props":807,"children":808},{"style":797},[809],{"type":481,"value":810}," ===",{"type":476,"tag":512,"props":812,"children":814},{"style":813},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[815],{"type":481,"value":816}," undefined",{"type":476,"tag":512,"props":818,"children":819},{"style":797},[820],{"type":481,"value":821}," ?",{"type":476,"tag":512,"props":823,"children":824},{"style":813},[825],{"type":481,"value":826}," 0",{"type":476,"tag":512,"props":828,"children":829},{"style":797},[830],{"type":481,"value":831}," :",{"type":476,"tag":512,"props":833,"children":834},{"style":792},[835],{"type":481,"value":805},{"type":476,"tag":512,"props":837,"children":838},{"style":752},[839],{"type":481,"value":840},";\n",{"type":476,"tag":512,"props":842,"children":843},{"class":514,"line":604},[844,848,852,857,861,865,869,873,877,882,886,890],{"type":476,"tag":512,"props":845,"children":846},{"style":780},[847],{"type":481,"value":783},{"type":476,"tag":512,"props":849,"children":850},{"style":786},[851],{"type":481,"value":789},{"type":476,"tag":512,"props":853,"children":854},{"style":792},[855],{"type":481,"value":856},"left",{"type":476,"tag":512,"props":858,"children":859},{"style":797},[860],{"type":481,"value":800},{"type":476,"tag":512,"props":862,"children":863},{"style":792},[864],{"type":481,"value":760},{"type":476,"tag":512,"props":866,"children":867},{"style":797},[868],{"type":481,"value":810},{"type":476,"tag":512,"props":870,"children":871},{"style":813},[872],{"type":481,"value":816},{"type":476,"tag":512,"props":874,"children":875},{"style":797},[876],{"type":481,"value":821},{"type":476,"tag":512,"props":878,"children":879},{"style":813},[880],{"type":481,"value":881}," null",{"type":476,"tag":512,"props":883,"children":884},{"style":797},[885],{"type":481,"value":831},{"type":476,"tag":512,"props":887,"children":888},{"style":792},[889],{"type":481,"value":760},{"type":476,"tag":512,"props":891,"children":892},{"style":752},[893],{"type":481,"value":840},{"type":476,"tag":512,"props":895,"children":897},{"class":514,"line":896},7,[898,902,906,911,915,919,923,927,931,935,939,943],{"type":476,"tag":512,"props":899,"children":900},{"style":780},[901],{"type":481,"value":783},{"type":476,"tag":512,"props":903,"children":904},{"style":786},[905],{"type":481,"value":789},{"type":476,"tag":512,"props":907,"children":908},{"style":792},[909],{"type":481,"value":910},"right",{"type":476,"tag":512,"props":912,"children":913},{"style":797},[914],{"type":481,"value":800},{"type":476,"tag":512,"props":916,"children":917},{"style":792},[918],{"type":481,"value":769},{"type":476,"tag":512,"props":920,"children":921},{"style":797},[922],{"type":481,"value":810},{"type":476,"tag":512,"props":924,"children":925},{"style":813},[926],{"type":481,"value":816},{"type":476,"tag":512,"props":928,"children":929},{"style":797},[930],{"type":481,"value":821},{"type":476,"tag":512,"props":932,"children":933},{"style":813},[934],{"type":481,"value":881},{"type":476,"tag":512,"props":936,"children":937},{"style":797},[938],{"type":481,"value":831},{"type":476,"tag":512,"props":940,"children":941},{"style":792},[942],{"type":481,"value":769},{"type":476,"tag":512,"props":944,"children":945},{"style":752},[946],{"type":481,"value":840},{"type":476,"tag":512,"props":948,"children":950},{"class":514,"line":949},8,[951],{"type":476,"tag":512,"props":952,"children":953},{"style":740},[954],{"type":481,"value":955},"}\n",{"type":476,"tag":512,"props":957,"children":959},{"class":514,"line":958},9,[960],{"type":476,"tag":512,"props":961,"children":963},{"emptyLinePlaceholder":962},true,[964],{"type":481,"value":965},"\n",{"type":476,"tag":512,"props":967,"children":969},{"class":514,"line":968},10,[970],{"type":476,"tag":512,"props":971,"children":972},{"style":703},[973],{"type":481,"value":706},{"type":476,"tag":512,"props":975,"children":977},{"class":514,"line":976},11,[978,983,989,995],{"type":476,"tag":512,"props":979,"children":980},{"style":703},[981],{"type":481,"value":982}," * ",{"type":476,"tag":512,"props":984,"children":986},{"style":985},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[987],{"type":481,"value":988},"@param",{"type":476,"tag":512,"props":990,"children":992},{"style":991},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[993],{"type":481,"value":994}," {TreeNode}",{"type":476,"tag":512,"props":996,"children":998},{"style":997},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[999],{"type":481,"value":1000}," root\n",{"type":476,"tag":512,"props":1002,"children":1004},{"class":514,"line":1003},12,[1005,1009,1013,1018],{"type":476,"tag":512,"props":1006,"children":1007},{"style":703},[1008],{"type":481,"value":982},{"type":476,"tag":512,"props":1010,"children":1011},{"style":985},[1012],{"type":481,"value":988},{"type":476,"tag":512,"props":1014,"children":1015},{"style":991},[1016],{"type":481,"value":1017}," {number}",{"type":476,"tag":512,"props":1019,"children":1020},{"style":997},[1021],{"type":481,"value":1022}," targetSum\n",{"type":476,"tag":512,"props":1024,"children":1026},{"class":514,"line":1025},13,[1027,1031,1036],{"type":476,"tag":512,"props":1028,"children":1029},{"style":703},[1030],{"type":481,"value":982},{"type":476,"tag":512,"props":1032,"children":1033},{"style":985},[1034],{"type":481,"value":1035},"@return",{"type":476,"tag":512,"props":1037,"children":1038},{"style":991},[1039],{"type":481,"value":1040}," {boolean}\n",{"type":476,"tag":512,"props":1042,"children":1044},{"class":514,"line":1043},14,[1045],{"type":476,"tag":512,"props":1046,"children":1047},{"style":703},[1048],{"type":481,"value":722},{"type":476,"tag":512,"props":1050,"children":1052},{"class":514,"line":1051},15,[1053,1058,1063,1067,1072,1077,1081,1085,1090],{"type":476,"tag":512,"props":1054,"children":1055},{"style":728},[1056],{"type":481,"value":1057},"var",{"type":476,"tag":512,"props":1059,"children":1060},{"style":734},[1061],{"type":481,"value":1062}," hasPathSum",{"type":476,"tag":512,"props":1064,"children":1065},{"style":797},[1066],{"type":481,"value":800},{"type":476,"tag":512,"props":1068,"children":1069},{"style":728},[1070],{"type":481,"value":1071}," function",{"type":476,"tag":512,"props":1073,"children":1074},{"style":740},[1075],{"type":481,"value":1076}," (",{"type":476,"tag":512,"props":1078,"children":1079},{"style":746},[1080],{"type":481,"value":473},{"type":476,"tag":512,"props":1082,"children":1083},{"style":752},[1084],{"type":481,"value":755},{"type":476,"tag":512,"props":1086,"children":1087},{"style":746},[1088],{"type":481,"value":1089}," targetSum",{"type":476,"tag":512,"props":1091,"children":1092},{"style":740},[1093],{"type":481,"value":774},{"type":476,"tag":512,"props":1095,"children":1097},{"class":514,"line":1096},16,[1098,1104,1108,1112,1116,1120,1125,1130,1135],{"type":476,"tag":512,"props":1099,"children":1101},{"style":1100},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[1102],{"type":481,"value":1103},"  if",{"type":476,"tag":512,"props":1105,"children":1106},{"style":740},[1107],{"type":481,"value":1076},{"type":476,"tag":512,"props":1109,"children":1110},{"style":792},[1111],{"type":481,"value":473},{"type":476,"tag":512,"props":1113,"children":1114},{"style":797},[1115],{"type":481,"value":810},{"type":476,"tag":512,"props":1117,"children":1118},{"style":813},[1119],{"type":481,"value":881},{"type":476,"tag":512,"props":1121,"children":1122},{"style":740},[1123],{"type":481,"value":1124},") ",{"type":476,"tag":512,"props":1126,"children":1127},{"style":1100},[1128],{"type":481,"value":1129},"return",{"type":476,"tag":512,"props":1131,"children":1132},{"style":813},[1133],{"type":481,"value":1134}," false",{"type":476,"tag":512,"props":1136,"children":1137},{"style":752},[1138],{"type":481,"value":840},{"type":476,"tag":512,"props":1140,"children":1142},{"class":514,"line":1141},17,[1143,1147,1151,1155,1159,1163,1167,1171,1176,1181,1185,1189,1193,1197,1201,1205,1209,1213,1217,1221,1225],{"type":476,"tag":512,"props":1144,"children":1145},{"style":1100},[1146],{"type":481,"value":1103},{"type":476,"tag":512,"props":1148,"children":1149},{"style":740},[1150],{"type":481,"value":1076},{"type":476,"tag":512,"props":1152,"children":1153},{"style":792},[1154],{"type":481,"value":473},{"type":476,"tag":512,"props":1156,"children":1157},{"style":786},[1158],{"type":481,"value":789},{"type":476,"tag":512,"props":1160,"children":1161},{"style":792},[1162],{"type":481,"value":856},{"type":476,"tag":512,"props":1164,"children":1165},{"style":797},[1166],{"type":481,"value":810},{"type":476,"tag":512,"props":1168,"children":1169},{"style":813},[1170],{"type":481,"value":881},{"type":476,"tag":512,"props":1172,"children":1173},{"style":797},[1174],{"type":481,"value":1175}," &&",{"type":476,"tag":512,"props":1177,"children":1178},{"style":792},[1179],{"type":481,"value":1180}," root",{"type":476,"tag":512,"props":1182,"children":1183},{"style":786},[1184],{"type":481,"value":789},{"type":476,"tag":512,"props":1186,"children":1187},{"style":792},[1188],{"type":481,"value":910},{"type":476,"tag":512,"props":1190,"children":1191},{"style":797},[1192],{"type":481,"value":810},{"type":476,"tag":512,"props":1194,"children":1195},{"style":813},[1196],{"type":481,"value":881},{"type":476,"tag":512,"props":1198,"children":1199},{"style":740},[1200],{"type":481,"value":1124},{"type":476,"tag":512,"props":1202,"children":1203},{"style":1100},[1204],{"type":481,"value":1129},{"type":476,"tag":512,"props":1206,"children":1207},{"style":792},[1208],{"type":481,"value":1180},{"type":476,"tag":512,"props":1210,"children":1211},{"style":786},[1212],{"type":481,"value":789},{"type":476,"tag":512,"props":1214,"children":1215},{"style":792},[1216],{"type":481,"value":749},{"type":476,"tag":512,"props":1218,"children":1219},{"style":797},[1220],{"type":481,"value":810},{"type":476,"tag":512,"props":1222,"children":1223},{"style":792},[1224],{"type":481,"value":1089},{"type":476,"tag":512,"props":1226,"children":1227},{"style":752},[1228],{"type":481,"value":840},{"type":476,"tag":512,"props":1230,"children":1232},{"class":514,"line":1231},18,[1233,1238],{"type":476,"tag":512,"props":1234,"children":1235},{"style":1100},[1236],{"type":481,"value":1237},"  return",{"type":476,"tag":512,"props":1239,"children":1240},{"style":740},[1241],{"type":481,"value":1242}," (\n",{"type":476,"tag":512,"props":1244,"children":1246},{"class":514,"line":1245},19,[1247,1252,1256,1260,1264,1268,1272,1276,1281,1285,1289,1293,1297],{"type":476,"tag":512,"props":1248,"children":1249},{"style":734},[1250],{"type":481,"value":1251},"    hasPathSum",{"type":476,"tag":512,"props":1253,"children":1254},{"style":740},[1255],{"type":481,"value":743},{"type":476,"tag":512,"props":1257,"children":1258},{"style":792},[1259],{"type":481,"value":473},{"type":476,"tag":512,"props":1261,"children":1262},{"style":786},[1263],{"type":481,"value":789},{"type":476,"tag":512,"props":1265,"children":1266},{"style":792},[1267],{"type":481,"value":856},{"type":476,"tag":512,"props":1269,"children":1270},{"style":752},[1271],{"type":481,"value":755},{"type":476,"tag":512,"props":1273,"children":1274},{"style":792},[1275],{"type":481,"value":1089},{"type":476,"tag":512,"props":1277,"children":1278},{"style":797},[1279],{"type":481,"value":1280}," -",{"type":476,"tag":512,"props":1282,"children":1283},{"style":792},[1284],{"type":481,"value":1180},{"type":476,"tag":512,"props":1286,"children":1287},{"style":786},[1288],{"type":481,"value":789},{"type":476,"tag":512,"props":1290,"children":1291},{"style":792},[1292],{"type":481,"value":749},{"type":476,"tag":512,"props":1294,"children":1295},{"style":740},[1296],{"type":481,"value":1124},{"type":476,"tag":512,"props":1298,"children":1299},{"style":797},[1300],{"type":481,"value":1301},"||\n",{"type":476,"tag":512,"props":1303,"children":1305},{"class":514,"line":1304},20,[1306,1310,1314,1318,1322,1326,1330,1334,1338,1342,1346,1350],{"type":476,"tag":512,"props":1307,"children":1308},{"style":734},[1309],{"type":481,"value":1251},{"type":476,"tag":512,"props":1311,"children":1312},{"style":740},[1313],{"type":481,"value":743},{"type":476,"tag":512,"props":1315,"children":1316},{"style":792},[1317],{"type":481,"value":473},{"type":476,"tag":512,"props":1319,"children":1320},{"style":786},[1321],{"type":481,"value":789},{"type":476,"tag":512,"props":1323,"children":1324},{"style":792},[1325],{"type":481,"value":910},{"type":476,"tag":512,"props":1327,"children":1328},{"style":752},[1329],{"type":481,"value":755},{"type":476,"tag":512,"props":1331,"children":1332},{"style":792},[1333],{"type":481,"value":1089},{"type":476,"tag":512,"props":1335,"children":1336},{"style":797},[1337],{"type":481,"value":1280},{"type":476,"tag":512,"props":1339,"children":1340},{"style":792},[1341],{"type":481,"value":1180},{"type":476,"tag":512,"props":1343,"children":1344},{"style":786},[1345],{"type":481,"value":789},{"type":476,"tag":512,"props":1347,"children":1348},{"style":792},[1349],{"type":481,"value":749},{"type":476,"tag":512,"props":1351,"children":1352},{"style":740},[1353],{"type":481,"value":1354},")\n",{"type":476,"tag":512,"props":1356,"children":1358},{"class":514,"line":1357},21,[1359,1364],{"type":476,"tag":512,"props":1360,"children":1361},{"style":740},[1362],{"type":481,"value":1363},"  )",{"type":476,"tag":512,"props":1365,"children":1366},{"style":752},[1367],{"type":481,"value":840},{"type":476,"tag":512,"props":1369,"children":1371},{"class":514,"line":1370},22,[1372,1377],{"type":476,"tag":512,"props":1373,"children":1374},{"style":740},[1375],{"type":481,"value":1376},"}",{"type":476,"tag":512,"props":1378,"children":1379},{"style":752},[1380],{"type":481,"value":840},{"type":476,"tag":1382,"props":1383,"children":1384},"style",{},[1385],{"type":481,"value":1386},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":469,"searchDepth":595,"depth":595,"links":1388},[1389,1390],{"id":674,"depth":524,"text":674},{"id":679,"depth":524,"text":679,"children":1391},[1392],{"id":685,"depth":533,"text":688},"markdown","content:1.algorithm:3.leetcode:3.major:112.path-sum.md","content","1.algorithm/3.leetcode/3.major/112.path-sum.md","md",[1399,1401],{"_path":159,"title":158,"description":1400},"给定一个二叉树，找出其最小深度。",{"_path":165,"title":164,"description":1402},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",1714007214332]