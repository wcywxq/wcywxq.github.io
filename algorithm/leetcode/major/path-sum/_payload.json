[{"data":1,"prerenderedAt":1470},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/path-sum":500,"/algorithm/leetcode/major/path-sum-surround":1465},[4,269,298,468,476,485],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":467},"代码考核","/code-assessment",[302,367,460],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369,"children":370},"业务场景","/code-assessment/scene",[371,396,406,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457],{"title":372,"_path":373,"children":374},"Promise","/code-assessment/scene/promise",[375,378,381,384,387,390,393],{"title":376,"_path":377},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":379,"_path":380},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":382,"_path":383},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":385,"_path":386},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":388,"_path":389},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":391,"_path":392},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":394,"_path":395},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":397,"_path":398,"children":399},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[400,403],{"title":401,"_path":402},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":404,"_path":405},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":407,"_path":408},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":410,"_path":411},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":413,"_path":414},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":416,"_path":417},"倒计时","/code-assessment/scene/countdown",{"title":419,"_path":420},"日期格式化","/code-assessment/scene/date-format",{"title":422,"_path":423},"实现前端路由","/code-assessment/scene/frontend-route",{"title":425,"_path":426},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":428,"_path":429},"lodash.get","/code-assessment/scene/lodash-get",{"title":431,"_path":432},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":434,"_path":435},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":437,"_path":438},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":440,"_path":441},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":443,"_path":444},"随机数","/code-assessment/scene/random-number",{"title":446,"_path":447},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":449,"_path":450},"sku 算法实现","/code-assessment/scene/sku",{"title":452,"_path":453},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":455,"_path":456},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":458,"_path":459},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":461,"_path":462,"children":463},"Ts 类型挑战","/code-assessment/type-challeges",[464],{"title":465,"_path":466},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":469,"_path":470,"children":471,"icon":475},"项目","/project",[472],{"title":473,"_path":474},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":477,"_path":478,"children":479,"icon":484},"设计模式","/design-mode",[480,481],{"title":477,"_path":478},{"title":482,"_path":483},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":486,"_path":487,"children":488,"icon":499},"后端语言","/backend-languages",[489],{"title":490,"_path":491,"children":492},"Python","/backend-languages/python",[493,496],{"title":494,"_path":495},"基础","/backend-languages/python/base",{"title":497,"_path":498},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":162,"_dir":501,"_draft":502,"_partial":502,"_locale":503,"title":161,"description":504,"url":505,"body":506,"_type":1460,"_id":1461,"_source":1462,"_file":1463,"_extension":1464},"major",false,"","给你二叉树的根节点 root 和一个表示目标和的整数 targetSum 。判断该树中是否存在 根节点到叶子节点 的路径，这条路径上所有节点值相加等于目标和 targetSum 。如果存在，返回 true ；否则，返回 false 。","https://leetcode.cn/problems/path-sum",{"type":507,"children":508,"toc":1454},"root",[509,516,521,526,535,574,579,587,645,650,680,685,705,711,716,723,1448],{"type":510,"tag":511,"props":512,"children":513},"element","p",{},[514],{"type":515,"value":504},"text",{"type":510,"tag":511,"props":517,"children":518},{},[519],{"type":515,"value":520},"叶子节点 是指没有子节点的节点。",{"type":510,"tag":511,"props":522,"children":523},{},[524],{"type":515,"value":525},"示例 1：",{"type":510,"tag":511,"props":527,"children":528},{},[529],{"type":510,"tag":530,"props":531,"children":534},"img",{"alt":532,"src":533},"pathsum1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.112_pathsum1.png",[],{"type":510,"tag":536,"props":537,"children":540},"pre",{"className":538,"code":539,"language":515,"meta":503,"style":503},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n输出：true\n解释：等于目标和的根节点到叶节点路径如上图所示。\n",[541],{"type":510,"tag":542,"props":543,"children":544},"code",{"__ignoreMap":503},[545,556,565],{"type":510,"tag":546,"props":547,"children":550},"span",{"class":548,"line":549},"line",1,[551],{"type":510,"tag":546,"props":552,"children":553},{},[554],{"type":515,"value":555},"输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n",{"type":510,"tag":546,"props":557,"children":559},{"class":548,"line":558},2,[560],{"type":510,"tag":546,"props":561,"children":562},{},[563],{"type":515,"value":564},"输出：true\n",{"type":510,"tag":546,"props":566,"children":568},{"class":548,"line":567},3,[569],{"type":510,"tag":546,"props":570,"children":571},{},[572],{"type":515,"value":573},"解释：等于目标和的根节点到叶节点路径如上图所示。\n",{"type":510,"tag":511,"props":575,"children":576},{},[577],{"type":515,"value":578},"示例 2：",{"type":510,"tag":511,"props":580,"children":581},{},[582],{"type":510,"tag":530,"props":583,"children":586},{"alt":584,"src":585},"pathsum2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.112_pathsum2.png",[],{"type":510,"tag":536,"props":588,"children":590},{"className":538,"code":589,"language":515,"meta":503,"style":503},"输入：root = [1,2,3], targetSum = 5\n输出：false\n解释：树中存在两条根节点到叶子节点的路径：\n(1 --> 2): 和为 3\n(1 --> 3): 和为 4\n不存在 sum = 5 的根节点到叶子节点的路径。\n",[591],{"type":510,"tag":542,"props":592,"children":593},{"__ignoreMap":503},[594,602,610,618,627,636],{"type":510,"tag":546,"props":595,"children":596},{"class":548,"line":549},[597],{"type":510,"tag":546,"props":598,"children":599},{},[600],{"type":515,"value":601},"输入：root = [1,2,3], targetSum = 5\n",{"type":510,"tag":546,"props":603,"children":604},{"class":548,"line":558},[605],{"type":510,"tag":546,"props":606,"children":607},{},[608],{"type":515,"value":609},"输出：false\n",{"type":510,"tag":546,"props":611,"children":612},{"class":548,"line":567},[613],{"type":510,"tag":546,"props":614,"children":615},{},[616],{"type":515,"value":617},"解释：树中存在两条根节点到叶子节点的路径：\n",{"type":510,"tag":546,"props":619,"children":621},{"class":548,"line":620},4,[622],{"type":510,"tag":546,"props":623,"children":624},{},[625],{"type":515,"value":626},"(1 --> 2): 和为 3\n",{"type":510,"tag":546,"props":628,"children":630},{"class":548,"line":629},5,[631],{"type":510,"tag":546,"props":632,"children":633},{},[634],{"type":515,"value":635},"(1 --> 3): 和为 4\n",{"type":510,"tag":546,"props":637,"children":639},{"class":548,"line":638},6,[640],{"type":510,"tag":546,"props":641,"children":642},{},[643],{"type":515,"value":644},"不存在 sum = 5 的根节点到叶子节点的路径。\n",{"type":510,"tag":511,"props":646,"children":647},{},[648],{"type":515,"value":649},"示例 3：",{"type":510,"tag":536,"props":651,"children":653},{"className":538,"code":652,"language":515,"meta":503,"style":503},"输入：root = [], targetSum = 0\n输出：false\n解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",[654],{"type":510,"tag":542,"props":655,"children":656},{"__ignoreMap":503},[657,665,672],{"type":510,"tag":546,"props":658,"children":659},{"class":548,"line":549},[660],{"type":510,"tag":546,"props":661,"children":662},{},[663],{"type":515,"value":664},"输入：root = [], targetSum = 0\n",{"type":510,"tag":546,"props":666,"children":667},{"class":548,"line":558},[668],{"type":510,"tag":546,"props":669,"children":670},{},[671],{"type":515,"value":609},{"type":510,"tag":546,"props":673,"children":674},{"class":548,"line":567},[675],{"type":510,"tag":546,"props":676,"children":677},{},[678],{"type":515,"value":679},"解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",{"type":510,"tag":511,"props":681,"children":682},{},[683],{"type":515,"value":684},"提示：",{"type":510,"tag":686,"props":687,"children":688},"ul",{},[689,695,700],{"type":510,"tag":690,"props":691,"children":692},"li",{},[693],{"type":515,"value":694},"树中节点的数目在范围 [0, 5000] 内",{"type":510,"tag":690,"props":696,"children":697},{},[698],{"type":515,"value":699},"-1000 \u003C= Node.val \u003C= 1000",{"type":510,"tag":690,"props":701,"children":702},{},[703],{"type":515,"value":704},"-1000 \u003C= targetSum \u003C= 1000",{"type":510,"tag":706,"props":707,"children":709},"h2",{"id":708},"解题思路",[710],{"type":515,"value":708},{"type":510,"tag":706,"props":712,"children":714},{"id":713},"实现",[715],{"type":515,"value":713},{"type":510,"tag":717,"props":718,"children":720},"h3",{"id":719},"深度优先搜索-dfs",[721],{"type":515,"value":722},"深度优先搜索 - dfs",{"type":510,"tag":536,"props":724,"children":728},{"className":725,"code":726,"language":727,"meta":503,"style":503},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {boolean}\n */\nvar hasPathSum = function (root, targetSum) {\n  if (root === null) return false;\n  if (root.left === null && root.right === null) return root.val === targetSum;\n  return (\n    hasPathSum(root.left, targetSum - root.val) ||\n    hasPathSum(root.right, targetSum - root.val)\n  );\n};\n","js",[729],{"type":510,"tag":542,"props":730,"children":731},{"__ignoreMap":503},[732,741,749,757,813,876,929,982,991,1001,1009,1050,1084,1114,1122,1171,1214,1304,1318,1377,1430,1439],{"type":510,"tag":546,"props":733,"children":734},{"class":548,"line":549},[735],{"type":510,"tag":546,"props":736,"children":738},{"style":737},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[739],{"type":515,"value":740},"/**\n",{"type":510,"tag":546,"props":742,"children":743},{"class":548,"line":558},[744],{"type":510,"tag":546,"props":745,"children":746},{"style":737},[747],{"type":515,"value":748}," * Definition for a binary tree node.\n",{"type":510,"tag":546,"props":750,"children":751},{"class":548,"line":567},[752],{"type":510,"tag":546,"props":753,"children":754},{"style":737},[755],{"type":515,"value":756}," */\n",{"type":510,"tag":546,"props":758,"children":759},{"class":548,"line":620},[760,766,772,778,784,789,794,798,803,808],{"type":510,"tag":546,"props":761,"children":763},{"style":762},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[764],{"type":515,"value":765},"function",{"type":510,"tag":546,"props":767,"children":769},{"style":768},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[770],{"type":515,"value":771}," TreeNode",{"type":510,"tag":546,"props":773,"children":775},{"style":774},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[776],{"type":515,"value":777},"(",{"type":510,"tag":546,"props":779,"children":781},{"style":780},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[782],{"type":515,"value":783},"val",{"type":510,"tag":546,"props":785,"children":786},{"style":774},[787],{"type":515,"value":788},",",{"type":510,"tag":546,"props":790,"children":791},{"style":780},[792],{"type":515,"value":793}," left",{"type":510,"tag":546,"props":795,"children":796},{"style":774},[797],{"type":515,"value":788},{"type":510,"tag":546,"props":799,"children":800},{"style":780},[801],{"type":515,"value":802}," right",{"type":510,"tag":546,"props":804,"children":805},{"style":774},[806],{"type":515,"value":807},")",{"type":510,"tag":546,"props":809,"children":810},{"style":774},[811],{"type":515,"value":812}," {\n",{"type":510,"tag":546,"props":814,"children":815},{"class":548,"line":629},[816,822,827,831,836,841,846,851,856,862,867,871],{"type":510,"tag":546,"props":817,"children":819},{"style":818},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[820],{"type":515,"value":821},"  this",{"type":510,"tag":546,"props":823,"children":824},{"style":774},[825],{"type":515,"value":826},".",{"type":510,"tag":546,"props":828,"children":829},{"style":780},[830],{"type":515,"value":783},{"type":510,"tag":546,"props":832,"children":833},{"style":774},[834],{"type":515,"value":835}," =",{"type":510,"tag":546,"props":837,"children":838},{"style":780},[839],{"type":515,"value":840}," val",{"type":510,"tag":546,"props":842,"children":843},{"style":762},[844],{"type":515,"value":845}," ===",{"type":510,"tag":546,"props":847,"children":848},{"style":762},[849],{"type":515,"value":850}," undefined",{"type":510,"tag":546,"props":852,"children":853},{"style":762},[854],{"type":515,"value":855}," ?",{"type":510,"tag":546,"props":857,"children":859},{"style":858},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[860],{"type":515,"value":861}," 0",{"type":510,"tag":546,"props":863,"children":864},{"style":762},[865],{"type":515,"value":866}," :",{"type":510,"tag":546,"props":868,"children":869},{"style":780},[870],{"type":515,"value":840},{"type":510,"tag":546,"props":872,"children":873},{"style":774},[874],{"type":515,"value":875},";\n",{"type":510,"tag":546,"props":877,"children":878},{"class":548,"line":638},[879,883,887,892,896,900,904,908,912,917,921,925],{"type":510,"tag":546,"props":880,"children":881},{"style":818},[882],{"type":515,"value":821},{"type":510,"tag":546,"props":884,"children":885},{"style":774},[886],{"type":515,"value":826},{"type":510,"tag":546,"props":888,"children":889},{"style":780},[890],{"type":515,"value":891},"left",{"type":510,"tag":546,"props":893,"children":894},{"style":774},[895],{"type":515,"value":835},{"type":510,"tag":546,"props":897,"children":898},{"style":780},[899],{"type":515,"value":793},{"type":510,"tag":546,"props":901,"children":902},{"style":762},[903],{"type":515,"value":845},{"type":510,"tag":546,"props":905,"children":906},{"style":762},[907],{"type":515,"value":850},{"type":510,"tag":546,"props":909,"children":910},{"style":762},[911],{"type":515,"value":855},{"type":510,"tag":546,"props":913,"children":914},{"style":762},[915],{"type":515,"value":916}," null",{"type":510,"tag":546,"props":918,"children":919},{"style":762},[920],{"type":515,"value":866},{"type":510,"tag":546,"props":922,"children":923},{"style":780},[924],{"type":515,"value":793},{"type":510,"tag":546,"props":926,"children":927},{"style":774},[928],{"type":515,"value":875},{"type":510,"tag":546,"props":930,"children":932},{"class":548,"line":931},7,[933,937,941,946,950,954,958,962,966,970,974,978],{"type":510,"tag":546,"props":934,"children":935},{"style":818},[936],{"type":515,"value":821},{"type":510,"tag":546,"props":938,"children":939},{"style":774},[940],{"type":515,"value":826},{"type":510,"tag":546,"props":942,"children":943},{"style":780},[944],{"type":515,"value":945},"right",{"type":510,"tag":546,"props":947,"children":948},{"style":774},[949],{"type":515,"value":835},{"type":510,"tag":546,"props":951,"children":952},{"style":780},[953],{"type":515,"value":802},{"type":510,"tag":546,"props":955,"children":956},{"style":762},[957],{"type":515,"value":845},{"type":510,"tag":546,"props":959,"children":960},{"style":762},[961],{"type":515,"value":850},{"type":510,"tag":546,"props":963,"children":964},{"style":762},[965],{"type":515,"value":855},{"type":510,"tag":546,"props":967,"children":968},{"style":762},[969],{"type":515,"value":916},{"type":510,"tag":546,"props":971,"children":972},{"style":762},[973],{"type":515,"value":866},{"type":510,"tag":546,"props":975,"children":976},{"style":780},[977],{"type":515,"value":802},{"type":510,"tag":546,"props":979,"children":980},{"style":774},[981],{"type":515,"value":875},{"type":510,"tag":546,"props":983,"children":985},{"class":548,"line":984},8,[986],{"type":510,"tag":546,"props":987,"children":988},{"style":774},[989],{"type":515,"value":990},"}\n",{"type":510,"tag":546,"props":992,"children":994},{"class":548,"line":993},9,[995],{"type":510,"tag":546,"props":996,"children":998},{"emptyLinePlaceholder":997},true,[999],{"type":515,"value":1000},"\n",{"type":510,"tag":546,"props":1002,"children":1004},{"class":548,"line":1003},10,[1005],{"type":510,"tag":546,"props":1006,"children":1007},{"style":737},[1008],{"type":515,"value":740},{"type":510,"tag":546,"props":1010,"children":1012},{"class":548,"line":1011},11,[1013,1018,1023,1029,1034,1040,1045],{"type":510,"tag":546,"props":1014,"children":1015},{"style":737},[1016],{"type":515,"value":1017}," * ",{"type":510,"tag":546,"props":1019,"children":1020},{"style":774},[1021],{"type":515,"value":1022},"@",{"type":510,"tag":546,"props":1024,"children":1026},{"style":1025},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[1027],{"type":515,"value":1028},"param",{"type":510,"tag":546,"props":1030,"children":1031},{"style":774},[1032],{"type":515,"value":1033}," {",{"type":510,"tag":546,"props":1035,"children":1037},{"style":1036},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[1038],{"type":515,"value":1039},"TreeNode",{"type":510,"tag":546,"props":1041,"children":1042},{"style":774},[1043],{"type":515,"value":1044},"}",{"type":510,"tag":546,"props":1046,"children":1047},{"style":780},[1048],{"type":515,"value":1049}," root\n",{"type":510,"tag":546,"props":1051,"children":1053},{"class":548,"line":1052},12,[1054,1058,1062,1066,1070,1075,1079],{"type":510,"tag":546,"props":1055,"children":1056},{"style":737},[1057],{"type":515,"value":1017},{"type":510,"tag":546,"props":1059,"children":1060},{"style":774},[1061],{"type":515,"value":1022},{"type":510,"tag":546,"props":1063,"children":1064},{"style":1025},[1065],{"type":515,"value":1028},{"type":510,"tag":546,"props":1067,"children":1068},{"style":774},[1069],{"type":515,"value":1033},{"type":510,"tag":546,"props":1071,"children":1072},{"style":1036},[1073],{"type":515,"value":1074},"number",{"type":510,"tag":546,"props":1076,"children":1077},{"style":774},[1078],{"type":515,"value":1044},{"type":510,"tag":546,"props":1080,"children":1081},{"style":780},[1082],{"type":515,"value":1083}," targetSum\n",{"type":510,"tag":546,"props":1085,"children":1087},{"class":548,"line":1086},13,[1088,1092,1096,1101,1105,1110],{"type":510,"tag":546,"props":1089,"children":1090},{"style":737},[1091],{"type":515,"value":1017},{"type":510,"tag":546,"props":1093,"children":1094},{"style":774},[1095],{"type":515,"value":1022},{"type":510,"tag":546,"props":1097,"children":1098},{"style":1025},[1099],{"type":515,"value":1100},"return",{"type":510,"tag":546,"props":1102,"children":1103},{"style":774},[1104],{"type":515,"value":1033},{"type":510,"tag":546,"props":1106,"children":1107},{"style":1036},[1108],{"type":515,"value":1109},"boolean",{"type":510,"tag":546,"props":1111,"children":1112},{"style":774},[1113],{"type":515,"value":990},{"type":510,"tag":546,"props":1115,"children":1117},{"class":548,"line":1116},14,[1118],{"type":510,"tag":546,"props":1119,"children":1120},{"style":737},[1121],{"type":515,"value":756},{"type":510,"tag":546,"props":1123,"children":1125},{"class":548,"line":1124},15,[1126,1131,1136,1140,1145,1150,1154,1158,1163,1167],{"type":510,"tag":546,"props":1127,"children":1128},{"style":762},[1129],{"type":515,"value":1130},"var",{"type":510,"tag":546,"props":1132,"children":1133},{"style":768},[1134],{"type":515,"value":1135}," hasPathSum",{"type":510,"tag":546,"props":1137,"children":1138},{"style":774},[1139],{"type":515,"value":835},{"type":510,"tag":546,"props":1141,"children":1142},{"style":762},[1143],{"type":515,"value":1144}," function",{"type":510,"tag":546,"props":1146,"children":1147},{"style":774},[1148],{"type":515,"value":1149}," (",{"type":510,"tag":546,"props":1151,"children":1152},{"style":780},[1153],{"type":515,"value":507},{"type":510,"tag":546,"props":1155,"children":1156},{"style":774},[1157],{"type":515,"value":788},{"type":510,"tag":546,"props":1159,"children":1160},{"style":780},[1161],{"type":515,"value":1162}," targetSum",{"type":510,"tag":546,"props":1164,"children":1165},{"style":774},[1166],{"type":515,"value":807},{"type":510,"tag":546,"props":1168,"children":1169},{"style":774},[1170],{"type":515,"value":812},{"type":510,"tag":546,"props":1172,"children":1174},{"class":548,"line":1173},16,[1175,1180,1184,1188,1192,1196,1200,1205,1210],{"type":510,"tag":546,"props":1176,"children":1177},{"style":1025},[1178],{"type":515,"value":1179},"  if",{"type":510,"tag":546,"props":1181,"children":1182},{"style":774},[1183],{"type":515,"value":1149},{"type":510,"tag":546,"props":1185,"children":1186},{"style":780},[1187],{"type":515,"value":507},{"type":510,"tag":546,"props":1189,"children":1190},{"style":762},[1191],{"type":515,"value":845},{"type":510,"tag":546,"props":1193,"children":1194},{"style":762},[1195],{"type":515,"value":916},{"type":510,"tag":546,"props":1197,"children":1198},{"style":774},[1199],{"type":515,"value":807},{"type":510,"tag":546,"props":1201,"children":1202},{"style":1025},[1203],{"type":515,"value":1204}," return",{"type":510,"tag":546,"props":1206,"children":1207},{"style":1025},[1208],{"type":515,"value":1209}," false",{"type":510,"tag":546,"props":1211,"children":1212},{"style":774},[1213],{"type":515,"value":875},{"type":510,"tag":546,"props":1215,"children":1217},{"class":548,"line":1216},17,[1218,1222,1226,1230,1234,1238,1242,1246,1251,1256,1260,1264,1268,1272,1276,1280,1284,1288,1292,1296,1300],{"type":510,"tag":546,"props":1219,"children":1220},{"style":1025},[1221],{"type":515,"value":1179},{"type":510,"tag":546,"props":1223,"children":1224},{"style":774},[1225],{"type":515,"value":1149},{"type":510,"tag":546,"props":1227,"children":1228},{"style":780},[1229],{"type":515,"value":507},{"type":510,"tag":546,"props":1231,"children":1232},{"style":774},[1233],{"type":515,"value":826},{"type":510,"tag":546,"props":1235,"children":1236},{"style":780},[1237],{"type":515,"value":891},{"type":510,"tag":546,"props":1239,"children":1240},{"style":762},[1241],{"type":515,"value":845},{"type":510,"tag":546,"props":1243,"children":1244},{"style":762},[1245],{"type":515,"value":916},{"type":510,"tag":546,"props":1247,"children":1248},{"style":762},[1249],{"type":515,"value":1250}," &&",{"type":510,"tag":546,"props":1252,"children":1253},{"style":780},[1254],{"type":515,"value":1255}," root",{"type":510,"tag":546,"props":1257,"children":1258},{"style":774},[1259],{"type":515,"value":826},{"type":510,"tag":546,"props":1261,"children":1262},{"style":780},[1263],{"type":515,"value":945},{"type":510,"tag":546,"props":1265,"children":1266},{"style":762},[1267],{"type":515,"value":845},{"type":510,"tag":546,"props":1269,"children":1270},{"style":762},[1271],{"type":515,"value":916},{"type":510,"tag":546,"props":1273,"children":1274},{"style":774},[1275],{"type":515,"value":807},{"type":510,"tag":546,"props":1277,"children":1278},{"style":1025},[1279],{"type":515,"value":1204},{"type":510,"tag":546,"props":1281,"children":1282},{"style":780},[1283],{"type":515,"value":1255},{"type":510,"tag":546,"props":1285,"children":1286},{"style":774},[1287],{"type":515,"value":826},{"type":510,"tag":546,"props":1289,"children":1290},{"style":780},[1291],{"type":515,"value":783},{"type":510,"tag":546,"props":1293,"children":1294},{"style":762},[1295],{"type":515,"value":845},{"type":510,"tag":546,"props":1297,"children":1298},{"style":780},[1299],{"type":515,"value":1162},{"type":510,"tag":546,"props":1301,"children":1302},{"style":774},[1303],{"type":515,"value":875},{"type":510,"tag":546,"props":1305,"children":1307},{"class":548,"line":1306},18,[1308,1313],{"type":510,"tag":546,"props":1309,"children":1310},{"style":1025},[1311],{"type":515,"value":1312},"  return",{"type":510,"tag":546,"props":1314,"children":1315},{"style":774},[1316],{"type":515,"value":1317}," (\n",{"type":510,"tag":546,"props":1319,"children":1321},{"class":548,"line":1320},19,[1322,1327,1331,1335,1339,1343,1347,1351,1356,1360,1364,1368,1372],{"type":510,"tag":546,"props":1323,"children":1324},{"style":768},[1325],{"type":515,"value":1326},"    hasPathSum",{"type":510,"tag":546,"props":1328,"children":1329},{"style":774},[1330],{"type":515,"value":777},{"type":510,"tag":546,"props":1332,"children":1333},{"style":780},[1334],{"type":515,"value":507},{"type":510,"tag":546,"props":1336,"children":1337},{"style":774},[1338],{"type":515,"value":826},{"type":510,"tag":546,"props":1340,"children":1341},{"style":780},[1342],{"type":515,"value":891},{"type":510,"tag":546,"props":1344,"children":1345},{"style":774},[1346],{"type":515,"value":788},{"type":510,"tag":546,"props":1348,"children":1349},{"style":780},[1350],{"type":515,"value":1162},{"type":510,"tag":546,"props":1352,"children":1353},{"style":762},[1354],{"type":515,"value":1355}," -",{"type":510,"tag":546,"props":1357,"children":1358},{"style":780},[1359],{"type":515,"value":1255},{"type":510,"tag":546,"props":1361,"children":1362},{"style":774},[1363],{"type":515,"value":826},{"type":510,"tag":546,"props":1365,"children":1366},{"style":780},[1367],{"type":515,"value":783},{"type":510,"tag":546,"props":1369,"children":1370},{"style":774},[1371],{"type":515,"value":807},{"type":510,"tag":546,"props":1373,"children":1374},{"style":762},[1375],{"type":515,"value":1376}," ||\n",{"type":510,"tag":546,"props":1378,"children":1380},{"class":548,"line":1379},20,[1381,1385,1389,1393,1397,1401,1405,1409,1413,1417,1421,1425],{"type":510,"tag":546,"props":1382,"children":1383},{"style":768},[1384],{"type":515,"value":1326},{"type":510,"tag":546,"props":1386,"children":1387},{"style":774},[1388],{"type":515,"value":777},{"type":510,"tag":546,"props":1390,"children":1391},{"style":780},[1392],{"type":515,"value":507},{"type":510,"tag":546,"props":1394,"children":1395},{"style":774},[1396],{"type":515,"value":826},{"type":510,"tag":546,"props":1398,"children":1399},{"style":780},[1400],{"type":515,"value":945},{"type":510,"tag":546,"props":1402,"children":1403},{"style":774},[1404],{"type":515,"value":788},{"type":510,"tag":546,"props":1406,"children":1407},{"style":780},[1408],{"type":515,"value":1162},{"type":510,"tag":546,"props":1410,"children":1411},{"style":762},[1412],{"type":515,"value":1355},{"type":510,"tag":546,"props":1414,"children":1415},{"style":780},[1416],{"type":515,"value":1255},{"type":510,"tag":546,"props":1418,"children":1419},{"style":774},[1420],{"type":515,"value":826},{"type":510,"tag":546,"props":1422,"children":1423},{"style":780},[1424],{"type":515,"value":783},{"type":510,"tag":546,"props":1426,"children":1427},{"style":774},[1428],{"type":515,"value":1429},")\n",{"type":510,"tag":546,"props":1431,"children":1433},{"class":548,"line":1432},21,[1434],{"type":510,"tag":546,"props":1435,"children":1436},{"style":774},[1437],{"type":515,"value":1438},"  );\n",{"type":510,"tag":546,"props":1440,"children":1442},{"class":548,"line":1441},22,[1443],{"type":510,"tag":546,"props":1444,"children":1445},{"style":774},[1446],{"type":515,"value":1447},"};\n",{"type":510,"tag":1449,"props":1450,"children":1451},"style",{},[1452],{"type":515,"value":1453},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":503,"searchDepth":629,"depth":629,"links":1455},[1456,1457],{"id":708,"depth":558,"text":708},{"id":713,"depth":558,"text":713,"children":1458},[1459],{"id":719,"depth":567,"text":722},"markdown","content:1.algorithm:3.leetcode:3.major:112.path-sum.md","content","1.algorithm/3.leetcode/3.major/112.path-sum.md","md",[1466,1468],{"_path":159,"title":158,"description":1467},"给定一个二叉树，找出其最小深度。",{"_path":165,"title":164,"description":1469},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",1714054337117]