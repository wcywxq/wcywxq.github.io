[{"data":1,"prerenderedAt":1494},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/path-sum":524,"/algorithm/leetcode/major/path-sum-surround":1489},[4,269,298,492,500,509],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":491},"代码考核","/code-assessment",[302,391,484],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,375,382,385,388],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357,360,363,366,369,372],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"原型方法","/code-assessment/source/array/prototype-method",{"title":361,"_path":362},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":364,"_path":365},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":367,"_path":368},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":370,"_path":371},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":373,"_path":374},"二维数组","/code-assessment/source/array/2d-array",{"title":376,"_path":377,"children":378},"字符串 String","/code-assessment/source/string",[379],{"title":380,"_path":381},"repeat()","/code-assessment/source/string/repeat",{"title":383,"_path":384},"获取通用类型","/code-assessment/source/get-generic-type",{"title":386,"_path":387},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":389,"_path":390},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":392,"_path":393,"children":394},"业务场景","/code-assessment/scene",[395,420,430,433,436,439,442,445,448,451,454,457,460,463,466,469,472,475,478,481],{"title":396,"_path":397,"children":398},"Promise","/code-assessment/scene/promise",[399,402,405,408,411,414,417],{"title":400,"_path":401},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":403,"_path":404},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":406,"_path":407},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":409,"_path":410},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":412,"_path":413},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":415,"_path":416},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":418,"_path":419},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":421,"_path":422,"children":423},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[424,427],{"title":425,"_path":426},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":428,"_path":429},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":431,"_path":432},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":434,"_path":435},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":437,"_path":438},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":440,"_path":441},"倒计时","/code-assessment/scene/countdown",{"title":443,"_path":444},"日期格式化","/code-assessment/scene/date-format",{"title":446,"_path":447},"实现前端路由","/code-assessment/scene/frontend-route",{"title":449,"_path":450},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":452,"_path":453},"lodash.get","/code-assessment/scene/lodash-get",{"title":455,"_path":456},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":458,"_path":459},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":461,"_path":462},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":464,"_path":465},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":467,"_path":468},"随机数","/code-assessment/scene/random-number",{"title":470,"_path":471},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":473,"_path":474},"sku 算法实现","/code-assessment/scene/sku",{"title":476,"_path":477},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":479,"_path":480},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":482,"_path":483},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":485,"_path":486,"children":487},"Ts 类型挑战","/code-assessment/type-challeges",[488],{"title":489,"_path":490},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":493,"_path":494,"children":495,"icon":499},"项目","/project",[496],{"title":497,"_path":498},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":501,"_path":502,"children":503,"icon":508},"设计模式","/design-mode",[504,505],{"title":501,"_path":502},{"title":506,"_path":507},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":510,"_path":511,"children":512,"icon":523},"后端语言","/backend-languages",[513],{"title":514,"_path":515,"children":516},"Python","/backend-languages/python",[517,520],{"title":518,"_path":519},"基础","/backend-languages/python/base",{"title":521,"_path":522},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":162,"_dir":525,"_draft":526,"_partial":526,"_locale":527,"title":161,"description":528,"url":529,"body":530,"_type":1484,"_id":1485,"_source":1486,"_file":1487,"_extension":1488},"major",false,"","给你二叉树的根节点 root 和一个表示目标和的整数 targetSum 。判断该树中是否存在 根节点到叶子节点 的路径，这条路径上所有节点值相加等于目标和 targetSum 。如果存在，返回 true ；否则，返回 false 。","https://leetcode.cn/problems/path-sum",{"type":531,"children":532,"toc":1478},"root",[533,540,545,550,559,598,603,611,669,674,704,709,729,735,740,747,1472],{"type":534,"tag":535,"props":536,"children":537},"element","p",{},[538],{"type":539,"value":528},"text",{"type":534,"tag":535,"props":541,"children":542},{},[543],{"type":539,"value":544},"叶子节点 是指没有子节点的节点。",{"type":534,"tag":535,"props":546,"children":547},{},[548],{"type":539,"value":549},"示例 1：",{"type":534,"tag":535,"props":551,"children":552},{},[553],{"type":534,"tag":554,"props":555,"children":558},"img",{"alt":556,"src":557},"pathsum1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.112_pathsum1.png",[],{"type":534,"tag":560,"props":561,"children":564},"pre",{"className":562,"code":563,"language":539,"meta":527,"style":527},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n输出：true\n解释：等于目标和的根节点到叶节点路径如上图所示。\n",[565],{"type":534,"tag":566,"props":567,"children":568},"code",{"__ignoreMap":527},[569,580,589],{"type":534,"tag":570,"props":571,"children":574},"span",{"class":572,"line":573},"line",1,[575],{"type":534,"tag":570,"props":576,"children":577},{},[578],{"type":539,"value":579},"输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n",{"type":534,"tag":570,"props":581,"children":583},{"class":572,"line":582},2,[584],{"type":534,"tag":570,"props":585,"children":586},{},[587],{"type":539,"value":588},"输出：true\n",{"type":534,"tag":570,"props":590,"children":592},{"class":572,"line":591},3,[593],{"type":534,"tag":570,"props":594,"children":595},{},[596],{"type":539,"value":597},"解释：等于目标和的根节点到叶节点路径如上图所示。\n",{"type":534,"tag":535,"props":599,"children":600},{},[601],{"type":539,"value":602},"示例 2：",{"type":534,"tag":535,"props":604,"children":605},{},[606],{"type":534,"tag":554,"props":607,"children":610},{"alt":608,"src":609},"pathsum2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.112_pathsum2.png",[],{"type":534,"tag":560,"props":612,"children":614},{"className":562,"code":613,"language":539,"meta":527,"style":527},"输入：root = [1,2,3], targetSum = 5\n输出：false\n解释：树中存在两条根节点到叶子节点的路径：\n(1 --> 2): 和为 3\n(1 --> 3): 和为 4\n不存在 sum = 5 的根节点到叶子节点的路径。\n",[615],{"type":534,"tag":566,"props":616,"children":617},{"__ignoreMap":527},[618,626,634,642,651,660],{"type":534,"tag":570,"props":619,"children":620},{"class":572,"line":573},[621],{"type":534,"tag":570,"props":622,"children":623},{},[624],{"type":539,"value":625},"输入：root = [1,2,3], targetSum = 5\n",{"type":534,"tag":570,"props":627,"children":628},{"class":572,"line":582},[629],{"type":534,"tag":570,"props":630,"children":631},{},[632],{"type":539,"value":633},"输出：false\n",{"type":534,"tag":570,"props":635,"children":636},{"class":572,"line":591},[637],{"type":534,"tag":570,"props":638,"children":639},{},[640],{"type":539,"value":641},"解释：树中存在两条根节点到叶子节点的路径：\n",{"type":534,"tag":570,"props":643,"children":645},{"class":572,"line":644},4,[646],{"type":534,"tag":570,"props":647,"children":648},{},[649],{"type":539,"value":650},"(1 --> 2): 和为 3\n",{"type":534,"tag":570,"props":652,"children":654},{"class":572,"line":653},5,[655],{"type":534,"tag":570,"props":656,"children":657},{},[658],{"type":539,"value":659},"(1 --> 3): 和为 4\n",{"type":534,"tag":570,"props":661,"children":663},{"class":572,"line":662},6,[664],{"type":534,"tag":570,"props":665,"children":666},{},[667],{"type":539,"value":668},"不存在 sum = 5 的根节点到叶子节点的路径。\n",{"type":534,"tag":535,"props":670,"children":671},{},[672],{"type":539,"value":673},"示例 3：",{"type":534,"tag":560,"props":675,"children":677},{"className":562,"code":676,"language":539,"meta":527,"style":527},"输入：root = [], targetSum = 0\n输出：false\n解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",[678],{"type":534,"tag":566,"props":679,"children":680},{"__ignoreMap":527},[681,689,696],{"type":534,"tag":570,"props":682,"children":683},{"class":572,"line":573},[684],{"type":534,"tag":570,"props":685,"children":686},{},[687],{"type":539,"value":688},"输入：root = [], targetSum = 0\n",{"type":534,"tag":570,"props":690,"children":691},{"class":572,"line":582},[692],{"type":534,"tag":570,"props":693,"children":694},{},[695],{"type":539,"value":633},{"type":534,"tag":570,"props":697,"children":698},{"class":572,"line":591},[699],{"type":534,"tag":570,"props":700,"children":701},{},[702],{"type":539,"value":703},"解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",{"type":534,"tag":535,"props":705,"children":706},{},[707],{"type":539,"value":708},"提示：",{"type":534,"tag":710,"props":711,"children":712},"ul",{},[713,719,724],{"type":534,"tag":714,"props":715,"children":716},"li",{},[717],{"type":539,"value":718},"树中节点的数目在范围 [0, 5000] 内",{"type":534,"tag":714,"props":720,"children":721},{},[722],{"type":539,"value":723},"-1000 \u003C= Node.val \u003C= 1000",{"type":534,"tag":714,"props":725,"children":726},{},[727],{"type":539,"value":728},"-1000 \u003C= targetSum \u003C= 1000",{"type":534,"tag":730,"props":731,"children":733},"h2",{"id":732},"解题思路",[734],{"type":539,"value":732},{"type":534,"tag":730,"props":736,"children":738},{"id":737},"实现",[739],{"type":539,"value":737},{"type":534,"tag":741,"props":742,"children":744},"h3",{"id":743},"深度优先搜索-dfs",[745],{"type":539,"value":746},"深度优先搜索 - dfs",{"type":534,"tag":560,"props":748,"children":752},{"className":749,"code":750,"language":751,"meta":527,"style":527},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {boolean}\n */\nvar hasPathSum = function (root, targetSum) {\n  if (root === null) return false;\n  if (root.left === null && root.right === null) return root.val === targetSum;\n  return (\n    hasPathSum(root.left, targetSum - root.val) ||\n    hasPathSum(root.right, targetSum - root.val)\n  );\n};\n","js",[753],{"type":534,"tag":566,"props":754,"children":755},{"__ignoreMap":527},[756,765,773,781,837,900,953,1006,1015,1025,1033,1074,1108,1138,1146,1195,1238,1328,1342,1401,1454,1463],{"type":534,"tag":570,"props":757,"children":758},{"class":572,"line":573},[759],{"type":534,"tag":570,"props":760,"children":762},{"style":761},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[763],{"type":539,"value":764},"/**\n",{"type":534,"tag":570,"props":766,"children":767},{"class":572,"line":582},[768],{"type":534,"tag":570,"props":769,"children":770},{"style":761},[771],{"type":539,"value":772}," * Definition for a binary tree node.\n",{"type":534,"tag":570,"props":774,"children":775},{"class":572,"line":591},[776],{"type":534,"tag":570,"props":777,"children":778},{"style":761},[779],{"type":539,"value":780}," */\n",{"type":534,"tag":570,"props":782,"children":783},{"class":572,"line":644},[784,790,796,802,808,813,818,822,827,832],{"type":534,"tag":570,"props":785,"children":787},{"style":786},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[788],{"type":539,"value":789},"function",{"type":534,"tag":570,"props":791,"children":793},{"style":792},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[794],{"type":539,"value":795}," TreeNode",{"type":534,"tag":570,"props":797,"children":799},{"style":798},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[800],{"type":539,"value":801},"(",{"type":534,"tag":570,"props":803,"children":805},{"style":804},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[806],{"type":539,"value":807},"val",{"type":534,"tag":570,"props":809,"children":810},{"style":798},[811],{"type":539,"value":812},",",{"type":534,"tag":570,"props":814,"children":815},{"style":804},[816],{"type":539,"value":817}," left",{"type":534,"tag":570,"props":819,"children":820},{"style":798},[821],{"type":539,"value":812},{"type":534,"tag":570,"props":823,"children":824},{"style":804},[825],{"type":539,"value":826}," right",{"type":534,"tag":570,"props":828,"children":829},{"style":798},[830],{"type":539,"value":831},")",{"type":534,"tag":570,"props":833,"children":834},{"style":798},[835],{"type":539,"value":836}," {\n",{"type":534,"tag":570,"props":838,"children":839},{"class":572,"line":653},[840,846,851,855,860,865,870,875,880,886,891,895],{"type":534,"tag":570,"props":841,"children":843},{"style":842},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[844],{"type":539,"value":845},"  this",{"type":534,"tag":570,"props":847,"children":848},{"style":798},[849],{"type":539,"value":850},".",{"type":534,"tag":570,"props":852,"children":853},{"style":804},[854],{"type":539,"value":807},{"type":534,"tag":570,"props":856,"children":857},{"style":798},[858],{"type":539,"value":859}," =",{"type":534,"tag":570,"props":861,"children":862},{"style":804},[863],{"type":539,"value":864}," val",{"type":534,"tag":570,"props":866,"children":867},{"style":786},[868],{"type":539,"value":869}," ===",{"type":534,"tag":570,"props":871,"children":872},{"style":786},[873],{"type":539,"value":874}," undefined",{"type":534,"tag":570,"props":876,"children":877},{"style":786},[878],{"type":539,"value":879}," ?",{"type":534,"tag":570,"props":881,"children":883},{"style":882},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[884],{"type":539,"value":885}," 0",{"type":534,"tag":570,"props":887,"children":888},{"style":786},[889],{"type":539,"value":890}," :",{"type":534,"tag":570,"props":892,"children":893},{"style":804},[894],{"type":539,"value":864},{"type":534,"tag":570,"props":896,"children":897},{"style":798},[898],{"type":539,"value":899},";\n",{"type":534,"tag":570,"props":901,"children":902},{"class":572,"line":662},[903,907,911,916,920,924,928,932,936,941,945,949],{"type":534,"tag":570,"props":904,"children":905},{"style":842},[906],{"type":539,"value":845},{"type":534,"tag":570,"props":908,"children":909},{"style":798},[910],{"type":539,"value":850},{"type":534,"tag":570,"props":912,"children":913},{"style":804},[914],{"type":539,"value":915},"left",{"type":534,"tag":570,"props":917,"children":918},{"style":798},[919],{"type":539,"value":859},{"type":534,"tag":570,"props":921,"children":922},{"style":804},[923],{"type":539,"value":817},{"type":534,"tag":570,"props":925,"children":926},{"style":786},[927],{"type":539,"value":869},{"type":534,"tag":570,"props":929,"children":930},{"style":786},[931],{"type":539,"value":874},{"type":534,"tag":570,"props":933,"children":934},{"style":786},[935],{"type":539,"value":879},{"type":534,"tag":570,"props":937,"children":938},{"style":786},[939],{"type":539,"value":940}," null",{"type":534,"tag":570,"props":942,"children":943},{"style":786},[944],{"type":539,"value":890},{"type":534,"tag":570,"props":946,"children":947},{"style":804},[948],{"type":539,"value":817},{"type":534,"tag":570,"props":950,"children":951},{"style":798},[952],{"type":539,"value":899},{"type":534,"tag":570,"props":954,"children":956},{"class":572,"line":955},7,[957,961,965,970,974,978,982,986,990,994,998,1002],{"type":534,"tag":570,"props":958,"children":959},{"style":842},[960],{"type":539,"value":845},{"type":534,"tag":570,"props":962,"children":963},{"style":798},[964],{"type":539,"value":850},{"type":534,"tag":570,"props":966,"children":967},{"style":804},[968],{"type":539,"value":969},"right",{"type":534,"tag":570,"props":971,"children":972},{"style":798},[973],{"type":539,"value":859},{"type":534,"tag":570,"props":975,"children":976},{"style":804},[977],{"type":539,"value":826},{"type":534,"tag":570,"props":979,"children":980},{"style":786},[981],{"type":539,"value":869},{"type":534,"tag":570,"props":983,"children":984},{"style":786},[985],{"type":539,"value":874},{"type":534,"tag":570,"props":987,"children":988},{"style":786},[989],{"type":539,"value":879},{"type":534,"tag":570,"props":991,"children":992},{"style":786},[993],{"type":539,"value":940},{"type":534,"tag":570,"props":995,"children":996},{"style":786},[997],{"type":539,"value":890},{"type":534,"tag":570,"props":999,"children":1000},{"style":804},[1001],{"type":539,"value":826},{"type":534,"tag":570,"props":1003,"children":1004},{"style":798},[1005],{"type":539,"value":899},{"type":534,"tag":570,"props":1007,"children":1009},{"class":572,"line":1008},8,[1010],{"type":534,"tag":570,"props":1011,"children":1012},{"style":798},[1013],{"type":539,"value":1014},"}\n",{"type":534,"tag":570,"props":1016,"children":1018},{"class":572,"line":1017},9,[1019],{"type":534,"tag":570,"props":1020,"children":1022},{"emptyLinePlaceholder":1021},true,[1023],{"type":539,"value":1024},"\n",{"type":534,"tag":570,"props":1026,"children":1028},{"class":572,"line":1027},10,[1029],{"type":534,"tag":570,"props":1030,"children":1031},{"style":761},[1032],{"type":539,"value":764},{"type":534,"tag":570,"props":1034,"children":1036},{"class":572,"line":1035},11,[1037,1042,1047,1053,1058,1064,1069],{"type":534,"tag":570,"props":1038,"children":1039},{"style":761},[1040],{"type":539,"value":1041}," * ",{"type":534,"tag":570,"props":1043,"children":1044},{"style":798},[1045],{"type":539,"value":1046},"@",{"type":534,"tag":570,"props":1048,"children":1050},{"style":1049},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[1051],{"type":539,"value":1052},"param",{"type":534,"tag":570,"props":1054,"children":1055},{"style":798},[1056],{"type":539,"value":1057}," {",{"type":534,"tag":570,"props":1059,"children":1061},{"style":1060},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[1062],{"type":539,"value":1063},"TreeNode",{"type":534,"tag":570,"props":1065,"children":1066},{"style":798},[1067],{"type":539,"value":1068},"}",{"type":534,"tag":570,"props":1070,"children":1071},{"style":804},[1072],{"type":539,"value":1073}," root\n",{"type":534,"tag":570,"props":1075,"children":1077},{"class":572,"line":1076},12,[1078,1082,1086,1090,1094,1099,1103],{"type":534,"tag":570,"props":1079,"children":1080},{"style":761},[1081],{"type":539,"value":1041},{"type":534,"tag":570,"props":1083,"children":1084},{"style":798},[1085],{"type":539,"value":1046},{"type":534,"tag":570,"props":1087,"children":1088},{"style":1049},[1089],{"type":539,"value":1052},{"type":534,"tag":570,"props":1091,"children":1092},{"style":798},[1093],{"type":539,"value":1057},{"type":534,"tag":570,"props":1095,"children":1096},{"style":1060},[1097],{"type":539,"value":1098},"number",{"type":534,"tag":570,"props":1100,"children":1101},{"style":798},[1102],{"type":539,"value":1068},{"type":534,"tag":570,"props":1104,"children":1105},{"style":804},[1106],{"type":539,"value":1107}," targetSum\n",{"type":534,"tag":570,"props":1109,"children":1111},{"class":572,"line":1110},13,[1112,1116,1120,1125,1129,1134],{"type":534,"tag":570,"props":1113,"children":1114},{"style":761},[1115],{"type":539,"value":1041},{"type":534,"tag":570,"props":1117,"children":1118},{"style":798},[1119],{"type":539,"value":1046},{"type":534,"tag":570,"props":1121,"children":1122},{"style":1049},[1123],{"type":539,"value":1124},"return",{"type":534,"tag":570,"props":1126,"children":1127},{"style":798},[1128],{"type":539,"value":1057},{"type":534,"tag":570,"props":1130,"children":1131},{"style":1060},[1132],{"type":539,"value":1133},"boolean",{"type":534,"tag":570,"props":1135,"children":1136},{"style":798},[1137],{"type":539,"value":1014},{"type":534,"tag":570,"props":1139,"children":1141},{"class":572,"line":1140},14,[1142],{"type":534,"tag":570,"props":1143,"children":1144},{"style":761},[1145],{"type":539,"value":780},{"type":534,"tag":570,"props":1147,"children":1149},{"class":572,"line":1148},15,[1150,1155,1160,1164,1169,1174,1178,1182,1187,1191],{"type":534,"tag":570,"props":1151,"children":1152},{"style":786},[1153],{"type":539,"value":1154},"var",{"type":534,"tag":570,"props":1156,"children":1157},{"style":792},[1158],{"type":539,"value":1159}," hasPathSum",{"type":534,"tag":570,"props":1161,"children":1162},{"style":798},[1163],{"type":539,"value":859},{"type":534,"tag":570,"props":1165,"children":1166},{"style":786},[1167],{"type":539,"value":1168}," function",{"type":534,"tag":570,"props":1170,"children":1171},{"style":798},[1172],{"type":539,"value":1173}," (",{"type":534,"tag":570,"props":1175,"children":1176},{"style":804},[1177],{"type":539,"value":531},{"type":534,"tag":570,"props":1179,"children":1180},{"style":798},[1181],{"type":539,"value":812},{"type":534,"tag":570,"props":1183,"children":1184},{"style":804},[1185],{"type":539,"value":1186}," targetSum",{"type":534,"tag":570,"props":1188,"children":1189},{"style":798},[1190],{"type":539,"value":831},{"type":534,"tag":570,"props":1192,"children":1193},{"style":798},[1194],{"type":539,"value":836},{"type":534,"tag":570,"props":1196,"children":1198},{"class":572,"line":1197},16,[1199,1204,1208,1212,1216,1220,1224,1229,1234],{"type":534,"tag":570,"props":1200,"children":1201},{"style":1049},[1202],{"type":539,"value":1203},"  if",{"type":534,"tag":570,"props":1205,"children":1206},{"style":798},[1207],{"type":539,"value":1173},{"type":534,"tag":570,"props":1209,"children":1210},{"style":804},[1211],{"type":539,"value":531},{"type":534,"tag":570,"props":1213,"children":1214},{"style":786},[1215],{"type":539,"value":869},{"type":534,"tag":570,"props":1217,"children":1218},{"style":786},[1219],{"type":539,"value":940},{"type":534,"tag":570,"props":1221,"children":1222},{"style":798},[1223],{"type":539,"value":831},{"type":534,"tag":570,"props":1225,"children":1226},{"style":1049},[1227],{"type":539,"value":1228}," return",{"type":534,"tag":570,"props":1230,"children":1231},{"style":1049},[1232],{"type":539,"value":1233}," false",{"type":534,"tag":570,"props":1235,"children":1236},{"style":798},[1237],{"type":539,"value":899},{"type":534,"tag":570,"props":1239,"children":1241},{"class":572,"line":1240},17,[1242,1246,1250,1254,1258,1262,1266,1270,1275,1280,1284,1288,1292,1296,1300,1304,1308,1312,1316,1320,1324],{"type":534,"tag":570,"props":1243,"children":1244},{"style":1049},[1245],{"type":539,"value":1203},{"type":534,"tag":570,"props":1247,"children":1248},{"style":798},[1249],{"type":539,"value":1173},{"type":534,"tag":570,"props":1251,"children":1252},{"style":804},[1253],{"type":539,"value":531},{"type":534,"tag":570,"props":1255,"children":1256},{"style":798},[1257],{"type":539,"value":850},{"type":534,"tag":570,"props":1259,"children":1260},{"style":804},[1261],{"type":539,"value":915},{"type":534,"tag":570,"props":1263,"children":1264},{"style":786},[1265],{"type":539,"value":869},{"type":534,"tag":570,"props":1267,"children":1268},{"style":786},[1269],{"type":539,"value":940},{"type":534,"tag":570,"props":1271,"children":1272},{"style":786},[1273],{"type":539,"value":1274}," &&",{"type":534,"tag":570,"props":1276,"children":1277},{"style":804},[1278],{"type":539,"value":1279}," root",{"type":534,"tag":570,"props":1281,"children":1282},{"style":798},[1283],{"type":539,"value":850},{"type":534,"tag":570,"props":1285,"children":1286},{"style":804},[1287],{"type":539,"value":969},{"type":534,"tag":570,"props":1289,"children":1290},{"style":786},[1291],{"type":539,"value":869},{"type":534,"tag":570,"props":1293,"children":1294},{"style":786},[1295],{"type":539,"value":940},{"type":534,"tag":570,"props":1297,"children":1298},{"style":798},[1299],{"type":539,"value":831},{"type":534,"tag":570,"props":1301,"children":1302},{"style":1049},[1303],{"type":539,"value":1228},{"type":534,"tag":570,"props":1305,"children":1306},{"style":804},[1307],{"type":539,"value":1279},{"type":534,"tag":570,"props":1309,"children":1310},{"style":798},[1311],{"type":539,"value":850},{"type":534,"tag":570,"props":1313,"children":1314},{"style":804},[1315],{"type":539,"value":807},{"type":534,"tag":570,"props":1317,"children":1318},{"style":786},[1319],{"type":539,"value":869},{"type":534,"tag":570,"props":1321,"children":1322},{"style":804},[1323],{"type":539,"value":1186},{"type":534,"tag":570,"props":1325,"children":1326},{"style":798},[1327],{"type":539,"value":899},{"type":534,"tag":570,"props":1329,"children":1331},{"class":572,"line":1330},18,[1332,1337],{"type":534,"tag":570,"props":1333,"children":1334},{"style":1049},[1335],{"type":539,"value":1336},"  return",{"type":534,"tag":570,"props":1338,"children":1339},{"style":798},[1340],{"type":539,"value":1341}," (\n",{"type":534,"tag":570,"props":1343,"children":1345},{"class":572,"line":1344},19,[1346,1351,1355,1359,1363,1367,1371,1375,1380,1384,1388,1392,1396],{"type":534,"tag":570,"props":1347,"children":1348},{"style":792},[1349],{"type":539,"value":1350},"    hasPathSum",{"type":534,"tag":570,"props":1352,"children":1353},{"style":798},[1354],{"type":539,"value":801},{"type":534,"tag":570,"props":1356,"children":1357},{"style":804},[1358],{"type":539,"value":531},{"type":534,"tag":570,"props":1360,"children":1361},{"style":798},[1362],{"type":539,"value":850},{"type":534,"tag":570,"props":1364,"children":1365},{"style":804},[1366],{"type":539,"value":915},{"type":534,"tag":570,"props":1368,"children":1369},{"style":798},[1370],{"type":539,"value":812},{"type":534,"tag":570,"props":1372,"children":1373},{"style":804},[1374],{"type":539,"value":1186},{"type":534,"tag":570,"props":1376,"children":1377},{"style":786},[1378],{"type":539,"value":1379}," -",{"type":534,"tag":570,"props":1381,"children":1382},{"style":804},[1383],{"type":539,"value":1279},{"type":534,"tag":570,"props":1385,"children":1386},{"style":798},[1387],{"type":539,"value":850},{"type":534,"tag":570,"props":1389,"children":1390},{"style":804},[1391],{"type":539,"value":807},{"type":534,"tag":570,"props":1393,"children":1394},{"style":798},[1395],{"type":539,"value":831},{"type":534,"tag":570,"props":1397,"children":1398},{"style":786},[1399],{"type":539,"value":1400}," ||\n",{"type":534,"tag":570,"props":1402,"children":1404},{"class":572,"line":1403},20,[1405,1409,1413,1417,1421,1425,1429,1433,1437,1441,1445,1449],{"type":534,"tag":570,"props":1406,"children":1407},{"style":792},[1408],{"type":539,"value":1350},{"type":534,"tag":570,"props":1410,"children":1411},{"style":798},[1412],{"type":539,"value":801},{"type":534,"tag":570,"props":1414,"children":1415},{"style":804},[1416],{"type":539,"value":531},{"type":534,"tag":570,"props":1418,"children":1419},{"style":798},[1420],{"type":539,"value":850},{"type":534,"tag":570,"props":1422,"children":1423},{"style":804},[1424],{"type":539,"value":969},{"type":534,"tag":570,"props":1426,"children":1427},{"style":798},[1428],{"type":539,"value":812},{"type":534,"tag":570,"props":1430,"children":1431},{"style":804},[1432],{"type":539,"value":1186},{"type":534,"tag":570,"props":1434,"children":1435},{"style":786},[1436],{"type":539,"value":1379},{"type":534,"tag":570,"props":1438,"children":1439},{"style":804},[1440],{"type":539,"value":1279},{"type":534,"tag":570,"props":1442,"children":1443},{"style":798},[1444],{"type":539,"value":850},{"type":534,"tag":570,"props":1446,"children":1447},{"style":804},[1448],{"type":539,"value":807},{"type":534,"tag":570,"props":1450,"children":1451},{"style":798},[1452],{"type":539,"value":1453},")\n",{"type":534,"tag":570,"props":1455,"children":1457},{"class":572,"line":1456},21,[1458],{"type":534,"tag":570,"props":1459,"children":1460},{"style":798},[1461],{"type":539,"value":1462},"  );\n",{"type":534,"tag":570,"props":1464,"children":1466},{"class":572,"line":1465},22,[1467],{"type":534,"tag":570,"props":1468,"children":1469},{"style":798},[1470],{"type":539,"value":1471},"};\n",{"type":534,"tag":1473,"props":1474,"children":1475},"style",{},[1476],{"type":539,"value":1477},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":527,"searchDepth":653,"depth":653,"links":1479},[1480,1481],{"id":732,"depth":582,"text":732},{"id":737,"depth":582,"text":737,"children":1482},[1483],{"id":743,"depth":591,"text":746},"markdown","content:1.algorithm:3.leetcode:3.major:112.path-sum.md","content","1.algorithm/3.leetcode/3.major/112.path-sum.md","md",[1490,1492],{"_path":159,"title":158,"description":1491},"给定一个二叉树，找出其最小深度。",{"_path":165,"title":164,"description":1493},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",1714096143181]