[{"data":1,"prerenderedAt":1400},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/path-sum":463,"/algorithm/leetcode/major/path-sum-surround":1395},[4,266,295,440,448],{"title":5,"_path":6,"children":7,"icon":265},"算法","/algorithm",[8,28],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30,"children":31},"Leetcode 力扣","/algorithm/leetcode",[32,38,51],{"title":33,"_path":34,"children":35},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[36],{"title":37,"_path":34},"刷题索引",{"title":39,"_path":40,"children":41},"剑指 offer","/algorithm/leetcode/sword-ofter",[42,45,48],{"title":43,"_path":44},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":46,"_path":47},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":49,"_path":50},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":52,"_path":53,"children":54},"主题单","/algorithm/leetcode/major",[55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262],{"title":56,"_path":57},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":59,"_path":60},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":62,"_path":63},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":65,"_path":66},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":68,"_path":69},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":71,"_path":72},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":74,"_path":75},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":77,"_path":78},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":80,"_path":81},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":83,"_path":84},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":86,"_path":87},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":89,"_path":90},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":92,"_path":93},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":95,"_path":96},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":98,"_path":99},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":101,"_path":102},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":104,"_path":105},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":107,"_path":108},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":110,"_path":111},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":113,"_path":114},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":116,"_path":117},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":119,"_path":120},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":122,"_path":123},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":125,"_path":126},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":128,"_path":129},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":131,"_path":132},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":134,"_path":135},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":137,"_path":138},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":140,"_path":141},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":143,"_path":144},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":146,"_path":147},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":149,"_path":150},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":152,"_path":153},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":155,"_path":156},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":158,"_path":159},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":161,"_path":162},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":164,"_path":165},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":167,"_path":168},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":170,"_path":171},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":173,"_path":174},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":176,"_path":177},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":179,"_path":180},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":182,"_path":183},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":185,"_path":186},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":188,"_path":189},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":191,"_path":192},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":194,"_path":195},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":197,"_path":198},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":200,"_path":201},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":203,"_path":204},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":206,"_path":207},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":209,"_path":210},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":212,"_path":213},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":215,"_path":216},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":218,"_path":219},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":221,"_path":222},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":224,"_path":225},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":227,"_path":228},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":230,"_path":231},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":233,"_path":234},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":236,"_path":237},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":239,"_path":240},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":242,"_path":243},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":245,"_path":246},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":248,"_path":249},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":251,"_path":252},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":254,"_path":255},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":257,"_path":258},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":260,"_path":261},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":263,"_path":264},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":267,"_path":268,"children":269,"icon":294},"前端八股文","/frontend-endorsement",[270,281],{"title":271,"_path":272,"children":273},"构建工具","/frontend-endorsement/build-tools",[274],{"title":275,"_path":276,"children":277},"Webpack","/frontend-endorsement/build-tools/webpack",[278],{"title":279,"_path":280},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":282,"_path":283,"children":284},"Html","/frontend-endorsement/html",[285,288,291],{"title":286,"_path":287},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":289,"_path":290},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":292,"_path":293},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":296,"_path":297,"children":298,"icon":439},"前端代码考核","/frontend-code-assessment",[299,348,432],{"title":300,"_path":301,"children":302},"源码实现","/frontend-code-assessment/source",[303,328,341],{"title":304,"_path":305,"children":306},"原生 api","/frontend-code-assessment/source/native-api",[307,310,313,316,319,322,325],{"title":308,"_path":309},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":311,"_path":312},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":314,"_path":315},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":317,"_path":318},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":320,"_path":321},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":323,"_path":324},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":326,"_path":327},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":329,"_path":330,"children":331},"数组 Array","/frontend-code-assessment/source/array",[332,335,338],{"title":333,"_path":334},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":336,"_path":337},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":339,"_path":340},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":342,"_path":343,"children":344},"字符串 String","/frontend-code-assessment/source/string",[345],{"title":346,"_path":347},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":349,"_path":350,"children":351},"业务场景","/frontend-code-assessment/scene",[352,374,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429],{"title":353,"_path":354,"children":355},"Promise","/frontend-code-assessment/scene/promise",[356,359,362,365,368,371],{"title":357,"_path":358},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":360,"_path":361},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":363,"_path":364},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":366,"_path":367},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":369,"_path":370},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":372,"_path":373},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":375,"_path":376,"children":377},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[378],{"title":379,"_path":380},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":382,"_path":383},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":385,"_path":386},"倒计时","/frontend-code-assessment/scene/countdown",{"title":388,"_path":389},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":391,"_path":392},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":394,"_path":395},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":397,"_path":398},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":400,"_path":401},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":403,"_path":404},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":406,"_path":407},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":409,"_path":410},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":412,"_path":413},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":415,"_path":416},"随机数","/frontend-code-assessment/scene/random-number",{"title":418,"_path":419},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":421,"_path":422},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":424,"_path":425},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":427,"_path":428},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":430,"_path":431},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":433,"_path":434,"children":435},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[436],{"title":437,"_path":438},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":441,"_path":442,"children":443,"icon":447},"项目","/pro",[444],{"title":445,"_path":446},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":449,"_path":450,"children":451,"icon":462},"后端语言","/backend-languages",[452],{"title":453,"_path":454,"children":455},"Python","/backend-languages/python",[456,459],{"title":457,"_path":458},"基础","/backend-languages/python/base",{"title":460,"_path":461},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":159,"_dir":464,"_draft":465,"_partial":465,"_locale":466,"title":158,"description":467,"url":468,"body":469,"_type":1390,"_id":1391,"_source":1392,"_file":1393,"_extension":1394},"major",false,"","给你二叉树的根节点 root 和一个表示目标和的整数 targetSum 。判断该树中是否存在 根节点到叶子节点 的路径，这条路径上所有节点值相加等于目标和 targetSum 。如果存在，返回 true ；否则，返回 false 。","https://leetcode.cn/problems/path-sum",{"type":470,"children":471,"toc":1384},"root",[472,479,484,489,498,537,542,550,608,613,643,648,668,674,679,686,1378],{"type":473,"tag":474,"props":475,"children":476},"element","p",{},[477],{"type":478,"value":467},"text",{"type":473,"tag":474,"props":480,"children":481},{},[482],{"type":478,"value":483},"叶子节点 是指没有子节点的节点。",{"type":473,"tag":474,"props":485,"children":486},{},[487],{"type":478,"value":488},"示例 1：",{"type":473,"tag":474,"props":490,"children":491},{},[492],{"type":473,"tag":493,"props":494,"children":497},"img",{"alt":495,"src":496},"pathsum1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.112_pathsum1.png",[],{"type":473,"tag":499,"props":500,"children":503},"pre",{"className":501,"code":502,"language":478,"meta":466,"style":466},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n输出：true\n解释：等于目标和的根节点到叶节点路径如上图所示。\n",[504],{"type":473,"tag":505,"props":506,"children":507},"code",{"__ignoreMap":466},[508,519,528],{"type":473,"tag":509,"props":510,"children":513},"span",{"class":511,"line":512},"line",1,[514],{"type":473,"tag":509,"props":515,"children":516},{},[517],{"type":478,"value":518},"输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n",{"type":473,"tag":509,"props":520,"children":522},{"class":511,"line":521},2,[523],{"type":473,"tag":509,"props":524,"children":525},{},[526],{"type":478,"value":527},"输出：true\n",{"type":473,"tag":509,"props":529,"children":531},{"class":511,"line":530},3,[532],{"type":473,"tag":509,"props":533,"children":534},{},[535],{"type":478,"value":536},"解释：等于目标和的根节点到叶节点路径如上图所示。\n",{"type":473,"tag":474,"props":538,"children":539},{},[540],{"type":478,"value":541},"示例 2：",{"type":473,"tag":474,"props":543,"children":544},{},[545],{"type":473,"tag":493,"props":546,"children":549},{"alt":547,"src":548},"pathsum2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.112_pathsum2.png",[],{"type":473,"tag":499,"props":551,"children":553},{"className":501,"code":552,"language":478,"meta":466,"style":466},"输入：root = [1,2,3], targetSum = 5\n输出：false\n解释：树中存在两条根节点到叶子节点的路径：\n(1 --> 2): 和为 3\n(1 --> 3): 和为 4\n不存在 sum = 5 的根节点到叶子节点的路径。\n",[554],{"type":473,"tag":505,"props":555,"children":556},{"__ignoreMap":466},[557,565,573,581,590,599],{"type":473,"tag":509,"props":558,"children":559},{"class":511,"line":512},[560],{"type":473,"tag":509,"props":561,"children":562},{},[563],{"type":478,"value":564},"输入：root = [1,2,3], targetSum = 5\n",{"type":473,"tag":509,"props":566,"children":567},{"class":511,"line":521},[568],{"type":473,"tag":509,"props":569,"children":570},{},[571],{"type":478,"value":572},"输出：false\n",{"type":473,"tag":509,"props":574,"children":575},{"class":511,"line":530},[576],{"type":473,"tag":509,"props":577,"children":578},{},[579],{"type":478,"value":580},"解释：树中存在两条根节点到叶子节点的路径：\n",{"type":473,"tag":509,"props":582,"children":584},{"class":511,"line":583},4,[585],{"type":473,"tag":509,"props":586,"children":587},{},[588],{"type":478,"value":589},"(1 --> 2): 和为 3\n",{"type":473,"tag":509,"props":591,"children":593},{"class":511,"line":592},5,[594],{"type":473,"tag":509,"props":595,"children":596},{},[597],{"type":478,"value":598},"(1 --> 3): 和为 4\n",{"type":473,"tag":509,"props":600,"children":602},{"class":511,"line":601},6,[603],{"type":473,"tag":509,"props":604,"children":605},{},[606],{"type":478,"value":607},"不存在 sum = 5 的根节点到叶子节点的路径。\n",{"type":473,"tag":474,"props":609,"children":610},{},[611],{"type":478,"value":612},"示例 3：",{"type":473,"tag":499,"props":614,"children":616},{"className":501,"code":615,"language":478,"meta":466,"style":466},"输入：root = [], targetSum = 0\n输出：false\n解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",[617],{"type":473,"tag":505,"props":618,"children":619},{"__ignoreMap":466},[620,628,635],{"type":473,"tag":509,"props":621,"children":622},{"class":511,"line":512},[623],{"type":473,"tag":509,"props":624,"children":625},{},[626],{"type":478,"value":627},"输入：root = [], targetSum = 0\n",{"type":473,"tag":509,"props":629,"children":630},{"class":511,"line":521},[631],{"type":473,"tag":509,"props":632,"children":633},{},[634],{"type":478,"value":572},{"type":473,"tag":509,"props":636,"children":637},{"class":511,"line":530},[638],{"type":473,"tag":509,"props":639,"children":640},{},[641],{"type":478,"value":642},"解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",{"type":473,"tag":474,"props":644,"children":645},{},[646],{"type":478,"value":647},"提示：",{"type":473,"tag":649,"props":650,"children":651},"ul",{},[652,658,663],{"type":473,"tag":653,"props":654,"children":655},"li",{},[656],{"type":478,"value":657},"树中节点的数目在范围 [0, 5000] 内",{"type":473,"tag":653,"props":659,"children":660},{},[661],{"type":478,"value":662},"-1000 \u003C= Node.val \u003C= 1000",{"type":473,"tag":653,"props":664,"children":665},{},[666],{"type":478,"value":667},"-1000 \u003C= targetSum \u003C= 1000",{"type":473,"tag":669,"props":670,"children":672},"h2",{"id":671},"解题思路",[673],{"type":478,"value":671},{"type":473,"tag":669,"props":675,"children":677},{"id":676},"实现",[678],{"type":478,"value":676},{"type":473,"tag":680,"props":681,"children":683},"h3",{"id":682},"深度优先搜索-dfs",[684],{"type":478,"value":685},"深度优先搜索 - dfs",{"type":473,"tag":499,"props":687,"children":691},{"className":688,"code":689,"language":690,"meta":466,"style":466},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {boolean}\n */\nvar hasPathSum = function (root, targetSum) {\n  if (root === null) return false;\n  if (root.left === null && root.right === null) return root.val === targetSum;\n  return (\n    hasPathSum(root.left, targetSum - root.val) ||\n    hasPathSum(root.right, targetSum - root.val)\n  );\n};\n","js",[692],{"type":473,"tag":505,"props":693,"children":694},{"__ignoreMap":466},[695,704,712,720,772,838,891,944,953,963,971,998,1020,1038,1046,1091,1136,1226,1240,1299,1352,1365],{"type":473,"tag":509,"props":696,"children":697},{"class":511,"line":512},[698],{"type":473,"tag":509,"props":699,"children":701},{"style":700},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[702],{"type":478,"value":703},"/**\n",{"type":473,"tag":509,"props":705,"children":706},{"class":511,"line":521},[707],{"type":473,"tag":509,"props":708,"children":709},{"style":700},[710],{"type":478,"value":711}," * Definition for a binary tree node.\n",{"type":473,"tag":509,"props":713,"children":714},{"class":511,"line":530},[715],{"type":473,"tag":509,"props":716,"children":717},{"style":700},[718],{"type":478,"value":719}," */\n",{"type":473,"tag":509,"props":721,"children":722},{"class":511,"line":583},[723,729,735,741,747,753,758,762,767],{"type":473,"tag":509,"props":724,"children":726},{"style":725},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[727],{"type":478,"value":728},"function",{"type":473,"tag":509,"props":730,"children":732},{"style":731},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[733],{"type":478,"value":734}," TreeNode",{"type":473,"tag":509,"props":736,"children":738},{"style":737},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[739],{"type":478,"value":740},"(",{"type":473,"tag":509,"props":742,"children":744},{"style":743},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[745],{"type":478,"value":746},"val",{"type":473,"tag":509,"props":748,"children":750},{"style":749},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[751],{"type":478,"value":752},",",{"type":473,"tag":509,"props":754,"children":755},{"style":743},[756],{"type":478,"value":757}," left",{"type":473,"tag":509,"props":759,"children":760},{"style":749},[761],{"type":478,"value":752},{"type":473,"tag":509,"props":763,"children":764},{"style":743},[765],{"type":478,"value":766}," right",{"type":473,"tag":509,"props":768,"children":769},{"style":737},[770],{"type":478,"value":771},") {\n",{"type":473,"tag":509,"props":773,"children":774},{"class":511,"line":592},[775,781,787,792,798,803,808,814,819,824,829,833],{"type":473,"tag":509,"props":776,"children":778},{"style":777},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[779],{"type":478,"value":780},"  this",{"type":473,"tag":509,"props":782,"children":784},{"style":783},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[785],{"type":478,"value":786},".",{"type":473,"tag":509,"props":788,"children":790},{"style":789},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[791],{"type":478,"value":746},{"type":473,"tag":509,"props":793,"children":795},{"style":794},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[796],{"type":478,"value":797}," =",{"type":473,"tag":509,"props":799,"children":800},{"style":789},[801],{"type":478,"value":802}," val",{"type":473,"tag":509,"props":804,"children":805},{"style":794},[806],{"type":478,"value":807}," ===",{"type":473,"tag":509,"props":809,"children":811},{"style":810},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[812],{"type":478,"value":813}," undefined",{"type":473,"tag":509,"props":815,"children":816},{"style":794},[817],{"type":478,"value":818}," ?",{"type":473,"tag":509,"props":820,"children":821},{"style":810},[822],{"type":478,"value":823}," 0",{"type":473,"tag":509,"props":825,"children":826},{"style":794},[827],{"type":478,"value":828}," :",{"type":473,"tag":509,"props":830,"children":831},{"style":789},[832],{"type":478,"value":802},{"type":473,"tag":509,"props":834,"children":835},{"style":749},[836],{"type":478,"value":837},";\n",{"type":473,"tag":509,"props":839,"children":840},{"class":511,"line":601},[841,845,849,854,858,862,866,870,874,879,883,887],{"type":473,"tag":509,"props":842,"children":843},{"style":777},[844],{"type":478,"value":780},{"type":473,"tag":509,"props":846,"children":847},{"style":783},[848],{"type":478,"value":786},{"type":473,"tag":509,"props":850,"children":851},{"style":789},[852],{"type":478,"value":853},"left",{"type":473,"tag":509,"props":855,"children":856},{"style":794},[857],{"type":478,"value":797},{"type":473,"tag":509,"props":859,"children":860},{"style":789},[861],{"type":478,"value":757},{"type":473,"tag":509,"props":863,"children":864},{"style":794},[865],{"type":478,"value":807},{"type":473,"tag":509,"props":867,"children":868},{"style":810},[869],{"type":478,"value":813},{"type":473,"tag":509,"props":871,"children":872},{"style":794},[873],{"type":478,"value":818},{"type":473,"tag":509,"props":875,"children":876},{"style":810},[877],{"type":478,"value":878}," null",{"type":473,"tag":509,"props":880,"children":881},{"style":794},[882],{"type":478,"value":828},{"type":473,"tag":509,"props":884,"children":885},{"style":789},[886],{"type":478,"value":757},{"type":473,"tag":509,"props":888,"children":889},{"style":749},[890],{"type":478,"value":837},{"type":473,"tag":509,"props":892,"children":894},{"class":511,"line":893},7,[895,899,903,908,912,916,920,924,928,932,936,940],{"type":473,"tag":509,"props":896,"children":897},{"style":777},[898],{"type":478,"value":780},{"type":473,"tag":509,"props":900,"children":901},{"style":783},[902],{"type":478,"value":786},{"type":473,"tag":509,"props":904,"children":905},{"style":789},[906],{"type":478,"value":907},"right",{"type":473,"tag":509,"props":909,"children":910},{"style":794},[911],{"type":478,"value":797},{"type":473,"tag":509,"props":913,"children":914},{"style":789},[915],{"type":478,"value":766},{"type":473,"tag":509,"props":917,"children":918},{"style":794},[919],{"type":478,"value":807},{"type":473,"tag":509,"props":921,"children":922},{"style":810},[923],{"type":478,"value":813},{"type":473,"tag":509,"props":925,"children":926},{"style":794},[927],{"type":478,"value":818},{"type":473,"tag":509,"props":929,"children":930},{"style":810},[931],{"type":478,"value":878},{"type":473,"tag":509,"props":933,"children":934},{"style":794},[935],{"type":478,"value":828},{"type":473,"tag":509,"props":937,"children":938},{"style":789},[939],{"type":478,"value":766},{"type":473,"tag":509,"props":941,"children":942},{"style":749},[943],{"type":478,"value":837},{"type":473,"tag":509,"props":945,"children":947},{"class":511,"line":946},8,[948],{"type":473,"tag":509,"props":949,"children":950},{"style":737},[951],{"type":478,"value":952},"}\n",{"type":473,"tag":509,"props":954,"children":956},{"class":511,"line":955},9,[957],{"type":473,"tag":509,"props":958,"children":960},{"emptyLinePlaceholder":959},true,[961],{"type":478,"value":962},"\n",{"type":473,"tag":509,"props":964,"children":966},{"class":511,"line":965},10,[967],{"type":473,"tag":509,"props":968,"children":969},{"style":700},[970],{"type":478,"value":703},{"type":473,"tag":509,"props":972,"children":974},{"class":511,"line":973},11,[975,980,986,992],{"type":473,"tag":509,"props":976,"children":977},{"style":700},[978],{"type":478,"value":979}," * ",{"type":473,"tag":509,"props":981,"children":983},{"style":982},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[984],{"type":478,"value":985},"@param",{"type":473,"tag":509,"props":987,"children":989},{"style":988},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[990],{"type":478,"value":991}," {TreeNode}",{"type":473,"tag":509,"props":993,"children":995},{"style":994},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[996],{"type":478,"value":997}," root\n",{"type":473,"tag":509,"props":999,"children":1001},{"class":511,"line":1000},12,[1002,1006,1010,1015],{"type":473,"tag":509,"props":1003,"children":1004},{"style":700},[1005],{"type":478,"value":979},{"type":473,"tag":509,"props":1007,"children":1008},{"style":982},[1009],{"type":478,"value":985},{"type":473,"tag":509,"props":1011,"children":1012},{"style":988},[1013],{"type":478,"value":1014}," {number}",{"type":473,"tag":509,"props":1016,"children":1017},{"style":994},[1018],{"type":478,"value":1019}," targetSum\n",{"type":473,"tag":509,"props":1021,"children":1023},{"class":511,"line":1022},13,[1024,1028,1033],{"type":473,"tag":509,"props":1025,"children":1026},{"style":700},[1027],{"type":478,"value":979},{"type":473,"tag":509,"props":1029,"children":1030},{"style":982},[1031],{"type":478,"value":1032},"@return",{"type":473,"tag":509,"props":1034,"children":1035},{"style":988},[1036],{"type":478,"value":1037}," {boolean}\n",{"type":473,"tag":509,"props":1039,"children":1041},{"class":511,"line":1040},14,[1042],{"type":473,"tag":509,"props":1043,"children":1044},{"style":700},[1045],{"type":478,"value":719},{"type":473,"tag":509,"props":1047,"children":1049},{"class":511,"line":1048},15,[1050,1055,1060,1064,1069,1074,1078,1082,1087],{"type":473,"tag":509,"props":1051,"children":1052},{"style":725},[1053],{"type":478,"value":1054},"var",{"type":473,"tag":509,"props":1056,"children":1057},{"style":731},[1058],{"type":478,"value":1059}," hasPathSum",{"type":473,"tag":509,"props":1061,"children":1062},{"style":794},[1063],{"type":478,"value":797},{"type":473,"tag":509,"props":1065,"children":1066},{"style":725},[1067],{"type":478,"value":1068}," function",{"type":473,"tag":509,"props":1070,"children":1071},{"style":737},[1072],{"type":478,"value":1073}," (",{"type":473,"tag":509,"props":1075,"children":1076},{"style":743},[1077],{"type":478,"value":470},{"type":473,"tag":509,"props":1079,"children":1080},{"style":749},[1081],{"type":478,"value":752},{"type":473,"tag":509,"props":1083,"children":1084},{"style":743},[1085],{"type":478,"value":1086}," targetSum",{"type":473,"tag":509,"props":1088,"children":1089},{"style":737},[1090],{"type":478,"value":771},{"type":473,"tag":509,"props":1092,"children":1094},{"class":511,"line":1093},16,[1095,1101,1105,1109,1113,1117,1122,1127,1132],{"type":473,"tag":509,"props":1096,"children":1098},{"style":1097},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[1099],{"type":478,"value":1100},"  if",{"type":473,"tag":509,"props":1102,"children":1103},{"style":737},[1104],{"type":478,"value":1073},{"type":473,"tag":509,"props":1106,"children":1107},{"style":789},[1108],{"type":478,"value":470},{"type":473,"tag":509,"props":1110,"children":1111},{"style":794},[1112],{"type":478,"value":807},{"type":473,"tag":509,"props":1114,"children":1115},{"style":810},[1116],{"type":478,"value":878},{"type":473,"tag":509,"props":1118,"children":1119},{"style":737},[1120],{"type":478,"value":1121},") ",{"type":473,"tag":509,"props":1123,"children":1124},{"style":1097},[1125],{"type":478,"value":1126},"return",{"type":473,"tag":509,"props":1128,"children":1129},{"style":810},[1130],{"type":478,"value":1131}," false",{"type":473,"tag":509,"props":1133,"children":1134},{"style":749},[1135],{"type":478,"value":837},{"type":473,"tag":509,"props":1137,"children":1139},{"class":511,"line":1138},17,[1140,1144,1148,1152,1156,1160,1164,1168,1173,1178,1182,1186,1190,1194,1198,1202,1206,1210,1214,1218,1222],{"type":473,"tag":509,"props":1141,"children":1142},{"style":1097},[1143],{"type":478,"value":1100},{"type":473,"tag":509,"props":1145,"children":1146},{"style":737},[1147],{"type":478,"value":1073},{"type":473,"tag":509,"props":1149,"children":1150},{"style":789},[1151],{"type":478,"value":470},{"type":473,"tag":509,"props":1153,"children":1154},{"style":783},[1155],{"type":478,"value":786},{"type":473,"tag":509,"props":1157,"children":1158},{"style":789},[1159],{"type":478,"value":853},{"type":473,"tag":509,"props":1161,"children":1162},{"style":794},[1163],{"type":478,"value":807},{"type":473,"tag":509,"props":1165,"children":1166},{"style":810},[1167],{"type":478,"value":878},{"type":473,"tag":509,"props":1169,"children":1170},{"style":794},[1171],{"type":478,"value":1172}," &&",{"type":473,"tag":509,"props":1174,"children":1175},{"style":789},[1176],{"type":478,"value":1177}," root",{"type":473,"tag":509,"props":1179,"children":1180},{"style":783},[1181],{"type":478,"value":786},{"type":473,"tag":509,"props":1183,"children":1184},{"style":789},[1185],{"type":478,"value":907},{"type":473,"tag":509,"props":1187,"children":1188},{"style":794},[1189],{"type":478,"value":807},{"type":473,"tag":509,"props":1191,"children":1192},{"style":810},[1193],{"type":478,"value":878},{"type":473,"tag":509,"props":1195,"children":1196},{"style":737},[1197],{"type":478,"value":1121},{"type":473,"tag":509,"props":1199,"children":1200},{"style":1097},[1201],{"type":478,"value":1126},{"type":473,"tag":509,"props":1203,"children":1204},{"style":789},[1205],{"type":478,"value":1177},{"type":473,"tag":509,"props":1207,"children":1208},{"style":783},[1209],{"type":478,"value":786},{"type":473,"tag":509,"props":1211,"children":1212},{"style":789},[1213],{"type":478,"value":746},{"type":473,"tag":509,"props":1215,"children":1216},{"style":794},[1217],{"type":478,"value":807},{"type":473,"tag":509,"props":1219,"children":1220},{"style":789},[1221],{"type":478,"value":1086},{"type":473,"tag":509,"props":1223,"children":1224},{"style":749},[1225],{"type":478,"value":837},{"type":473,"tag":509,"props":1227,"children":1229},{"class":511,"line":1228},18,[1230,1235],{"type":473,"tag":509,"props":1231,"children":1232},{"style":1097},[1233],{"type":478,"value":1234},"  return",{"type":473,"tag":509,"props":1236,"children":1237},{"style":737},[1238],{"type":478,"value":1239}," (\n",{"type":473,"tag":509,"props":1241,"children":1243},{"class":511,"line":1242},19,[1244,1249,1253,1257,1261,1265,1269,1273,1278,1282,1286,1290,1294],{"type":473,"tag":509,"props":1245,"children":1246},{"style":731},[1247],{"type":478,"value":1248},"    hasPathSum",{"type":473,"tag":509,"props":1250,"children":1251},{"style":737},[1252],{"type":478,"value":740},{"type":473,"tag":509,"props":1254,"children":1255},{"style":789},[1256],{"type":478,"value":470},{"type":473,"tag":509,"props":1258,"children":1259},{"style":783},[1260],{"type":478,"value":786},{"type":473,"tag":509,"props":1262,"children":1263},{"style":789},[1264],{"type":478,"value":853},{"type":473,"tag":509,"props":1266,"children":1267},{"style":749},[1268],{"type":478,"value":752},{"type":473,"tag":509,"props":1270,"children":1271},{"style":789},[1272],{"type":478,"value":1086},{"type":473,"tag":509,"props":1274,"children":1275},{"style":794},[1276],{"type":478,"value":1277}," -",{"type":473,"tag":509,"props":1279,"children":1280},{"style":789},[1281],{"type":478,"value":1177},{"type":473,"tag":509,"props":1283,"children":1284},{"style":783},[1285],{"type":478,"value":786},{"type":473,"tag":509,"props":1287,"children":1288},{"style":789},[1289],{"type":478,"value":746},{"type":473,"tag":509,"props":1291,"children":1292},{"style":737},[1293],{"type":478,"value":1121},{"type":473,"tag":509,"props":1295,"children":1296},{"style":794},[1297],{"type":478,"value":1298},"||\n",{"type":473,"tag":509,"props":1300,"children":1302},{"class":511,"line":1301},20,[1303,1307,1311,1315,1319,1323,1327,1331,1335,1339,1343,1347],{"type":473,"tag":509,"props":1304,"children":1305},{"style":731},[1306],{"type":478,"value":1248},{"type":473,"tag":509,"props":1308,"children":1309},{"style":737},[1310],{"type":478,"value":740},{"type":473,"tag":509,"props":1312,"children":1313},{"style":789},[1314],{"type":478,"value":470},{"type":473,"tag":509,"props":1316,"children":1317},{"style":783},[1318],{"type":478,"value":786},{"type":473,"tag":509,"props":1320,"children":1321},{"style":789},[1322],{"type":478,"value":907},{"type":473,"tag":509,"props":1324,"children":1325},{"style":749},[1326],{"type":478,"value":752},{"type":473,"tag":509,"props":1328,"children":1329},{"style":789},[1330],{"type":478,"value":1086},{"type":473,"tag":509,"props":1332,"children":1333},{"style":794},[1334],{"type":478,"value":1277},{"type":473,"tag":509,"props":1336,"children":1337},{"style":789},[1338],{"type":478,"value":1177},{"type":473,"tag":509,"props":1340,"children":1341},{"style":783},[1342],{"type":478,"value":786},{"type":473,"tag":509,"props":1344,"children":1345},{"style":789},[1346],{"type":478,"value":746},{"type":473,"tag":509,"props":1348,"children":1349},{"style":737},[1350],{"type":478,"value":1351},")\n",{"type":473,"tag":509,"props":1353,"children":1355},{"class":511,"line":1354},21,[1356,1361],{"type":473,"tag":509,"props":1357,"children":1358},{"style":737},[1359],{"type":478,"value":1360},"  )",{"type":473,"tag":509,"props":1362,"children":1363},{"style":749},[1364],{"type":478,"value":837},{"type":473,"tag":509,"props":1366,"children":1368},{"class":511,"line":1367},22,[1369,1374],{"type":473,"tag":509,"props":1370,"children":1371},{"style":737},[1372],{"type":478,"value":1373},"}",{"type":473,"tag":509,"props":1375,"children":1376},{"style":749},[1377],{"type":478,"value":837},{"type":473,"tag":1379,"props":1380,"children":1381},"style",{},[1382],{"type":478,"value":1383},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":466,"searchDepth":592,"depth":592,"links":1385},[1386,1387],{"id":671,"depth":521,"text":671},{"id":676,"depth":521,"text":676,"children":1388},[1389],{"id":682,"depth":530,"text":685},"markdown","content:1.algorithm:3.leetcode:3.major:112.path-sum.md","content","1.algorithm/3.leetcode/3.major/112.path-sum.md","md",[1396,1398],{"_path":156,"title":155,"description":1397},"给定一个二叉树，找出其最小深度。",{"_path":162,"title":161,"description":1399},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",1713695846976]