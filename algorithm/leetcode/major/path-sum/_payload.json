[{"data":1,"prerenderedAt":1473},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/path-sum":503,"/algorithm/leetcode/major/path-sum-surround":1468},[4,269,298,471,479,488],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":470},"代码考核","/code-assessment",[302,370,463],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":371,"_path":372,"children":373},"业务场景","/code-assessment/scene",[374,399,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460],{"title":375,"_path":376,"children":377},"Promise","/code-assessment/scene/promise",[378,381,384,387,390,393,396],{"title":379,"_path":380},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":382,"_path":383},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":385,"_path":386},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":388,"_path":389},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":391,"_path":392},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":394,"_path":395},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":397,"_path":398},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":400,"_path":401,"children":402},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[403,406],{"title":404,"_path":405},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":407,"_path":408},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":410,"_path":411},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":413,"_path":414},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":416,"_path":417},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":419,"_path":420},"倒计时","/code-assessment/scene/countdown",{"title":422,"_path":423},"日期格式化","/code-assessment/scene/date-format",{"title":425,"_path":426},"实现前端路由","/code-assessment/scene/frontend-route",{"title":428,"_path":429},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":431,"_path":432},"lodash.get","/code-assessment/scene/lodash-get",{"title":434,"_path":435},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":437,"_path":438},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":440,"_path":441},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":443,"_path":444},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":446,"_path":447},"随机数","/code-assessment/scene/random-number",{"title":449,"_path":450},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":452,"_path":453},"sku 算法实现","/code-assessment/scene/sku",{"title":455,"_path":456},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":458,"_path":459},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":461,"_path":462},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":464,"_path":465,"children":466},"Ts 类型挑战","/code-assessment/type-challeges",[467],{"title":468,"_path":469},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":472,"_path":473,"children":474,"icon":478},"项目","/project",[475],{"title":476,"_path":477},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":480,"_path":481,"children":482,"icon":487},"设计模式","/design-mode",[483,484],{"title":480,"_path":481},{"title":485,"_path":486},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":489,"_path":490,"children":491,"icon":502},"后端语言","/backend-languages",[492],{"title":493,"_path":494,"children":495},"Python","/backend-languages/python",[496,499],{"title":497,"_path":498},"基础","/backend-languages/python/base",{"title":500,"_path":501},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":162,"_dir":504,"_draft":505,"_partial":505,"_locale":506,"title":161,"description":507,"url":508,"body":509,"_type":1463,"_id":1464,"_source":1465,"_file":1466,"_extension":1467},"major",false,"","给你二叉树的根节点 root 和一个表示目标和的整数 targetSum 。判断该树中是否存在 根节点到叶子节点 的路径，这条路径上所有节点值相加等于目标和 targetSum 。如果存在，返回 true ；否则，返回 false 。","https://leetcode.cn/problems/path-sum",{"type":510,"children":511,"toc":1457},"root",[512,519,524,529,538,577,582,590,648,653,683,688,708,714,719,726,1451],{"type":513,"tag":514,"props":515,"children":516},"element","p",{},[517],{"type":518,"value":507},"text",{"type":513,"tag":514,"props":520,"children":521},{},[522],{"type":518,"value":523},"叶子节点 是指没有子节点的节点。",{"type":513,"tag":514,"props":525,"children":526},{},[527],{"type":518,"value":528},"示例 1：",{"type":513,"tag":514,"props":530,"children":531},{},[532],{"type":513,"tag":533,"props":534,"children":537},"img",{"alt":535,"src":536},"pathsum1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.112_pathsum1.png",[],{"type":513,"tag":539,"props":540,"children":543},"pre",{"className":541,"code":542,"language":518,"meta":506,"style":506},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n输出：true\n解释：等于目标和的根节点到叶节点路径如上图所示。\n",[544],{"type":513,"tag":545,"props":546,"children":547},"code",{"__ignoreMap":506},[548,559,568],{"type":513,"tag":549,"props":550,"children":553},"span",{"class":551,"line":552},"line",1,[554],{"type":513,"tag":549,"props":555,"children":556},{},[557],{"type":518,"value":558},"输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n",{"type":513,"tag":549,"props":560,"children":562},{"class":551,"line":561},2,[563],{"type":513,"tag":549,"props":564,"children":565},{},[566],{"type":518,"value":567},"输出：true\n",{"type":513,"tag":549,"props":569,"children":571},{"class":551,"line":570},3,[572],{"type":513,"tag":549,"props":573,"children":574},{},[575],{"type":518,"value":576},"解释：等于目标和的根节点到叶节点路径如上图所示。\n",{"type":513,"tag":514,"props":578,"children":579},{},[580],{"type":518,"value":581},"示例 2：",{"type":513,"tag":514,"props":583,"children":584},{},[585],{"type":513,"tag":533,"props":586,"children":589},{"alt":587,"src":588},"pathsum2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.112_pathsum2.png",[],{"type":513,"tag":539,"props":591,"children":593},{"className":541,"code":592,"language":518,"meta":506,"style":506},"输入：root = [1,2,3], targetSum = 5\n输出：false\n解释：树中存在两条根节点到叶子节点的路径：\n(1 --> 2): 和为 3\n(1 --> 3): 和为 4\n不存在 sum = 5 的根节点到叶子节点的路径。\n",[594],{"type":513,"tag":545,"props":595,"children":596},{"__ignoreMap":506},[597,605,613,621,630,639],{"type":513,"tag":549,"props":598,"children":599},{"class":551,"line":552},[600],{"type":513,"tag":549,"props":601,"children":602},{},[603],{"type":518,"value":604},"输入：root = [1,2,3], targetSum = 5\n",{"type":513,"tag":549,"props":606,"children":607},{"class":551,"line":561},[608],{"type":513,"tag":549,"props":609,"children":610},{},[611],{"type":518,"value":612},"输出：false\n",{"type":513,"tag":549,"props":614,"children":615},{"class":551,"line":570},[616],{"type":513,"tag":549,"props":617,"children":618},{},[619],{"type":518,"value":620},"解释：树中存在两条根节点到叶子节点的路径：\n",{"type":513,"tag":549,"props":622,"children":624},{"class":551,"line":623},4,[625],{"type":513,"tag":549,"props":626,"children":627},{},[628],{"type":518,"value":629},"(1 --> 2): 和为 3\n",{"type":513,"tag":549,"props":631,"children":633},{"class":551,"line":632},5,[634],{"type":513,"tag":549,"props":635,"children":636},{},[637],{"type":518,"value":638},"(1 --> 3): 和为 4\n",{"type":513,"tag":549,"props":640,"children":642},{"class":551,"line":641},6,[643],{"type":513,"tag":549,"props":644,"children":645},{},[646],{"type":518,"value":647},"不存在 sum = 5 的根节点到叶子节点的路径。\n",{"type":513,"tag":514,"props":649,"children":650},{},[651],{"type":518,"value":652},"示例 3：",{"type":513,"tag":539,"props":654,"children":656},{"className":541,"code":655,"language":518,"meta":506,"style":506},"输入：root = [], targetSum = 0\n输出：false\n解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",[657],{"type":513,"tag":545,"props":658,"children":659},{"__ignoreMap":506},[660,668,675],{"type":513,"tag":549,"props":661,"children":662},{"class":551,"line":552},[663],{"type":513,"tag":549,"props":664,"children":665},{},[666],{"type":518,"value":667},"输入：root = [], targetSum = 0\n",{"type":513,"tag":549,"props":669,"children":670},{"class":551,"line":561},[671],{"type":513,"tag":549,"props":672,"children":673},{},[674],{"type":518,"value":612},{"type":513,"tag":549,"props":676,"children":677},{"class":551,"line":570},[678],{"type":513,"tag":549,"props":679,"children":680},{},[681],{"type":518,"value":682},"解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",{"type":513,"tag":514,"props":684,"children":685},{},[686],{"type":518,"value":687},"提示：",{"type":513,"tag":689,"props":690,"children":691},"ul",{},[692,698,703],{"type":513,"tag":693,"props":694,"children":695},"li",{},[696],{"type":518,"value":697},"树中节点的数目在范围 [0, 5000] 内",{"type":513,"tag":693,"props":699,"children":700},{},[701],{"type":518,"value":702},"-1000 \u003C= Node.val \u003C= 1000",{"type":513,"tag":693,"props":704,"children":705},{},[706],{"type":518,"value":707},"-1000 \u003C= targetSum \u003C= 1000",{"type":513,"tag":709,"props":710,"children":712},"h2",{"id":711},"解题思路",[713],{"type":518,"value":711},{"type":513,"tag":709,"props":715,"children":717},{"id":716},"实现",[718],{"type":518,"value":716},{"type":513,"tag":720,"props":721,"children":723},"h3",{"id":722},"深度优先搜索-dfs",[724],{"type":518,"value":725},"深度优先搜索 - dfs",{"type":513,"tag":539,"props":727,"children":731},{"className":728,"code":729,"language":730,"meta":506,"style":506},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {boolean}\n */\nvar hasPathSum = function (root, targetSum) {\n  if (root === null) return false;\n  if (root.left === null && root.right === null) return root.val === targetSum;\n  return (\n    hasPathSum(root.left, targetSum - root.val) ||\n    hasPathSum(root.right, targetSum - root.val)\n  );\n};\n","js",[732],{"type":513,"tag":545,"props":733,"children":734},{"__ignoreMap":506},[735,744,752,760,816,879,932,985,994,1004,1012,1053,1087,1117,1125,1174,1217,1307,1321,1380,1433,1442],{"type":513,"tag":549,"props":736,"children":737},{"class":551,"line":552},[738],{"type":513,"tag":549,"props":739,"children":741},{"style":740},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[742],{"type":518,"value":743},"/**\n",{"type":513,"tag":549,"props":745,"children":746},{"class":551,"line":561},[747],{"type":513,"tag":549,"props":748,"children":749},{"style":740},[750],{"type":518,"value":751}," * Definition for a binary tree node.\n",{"type":513,"tag":549,"props":753,"children":754},{"class":551,"line":570},[755],{"type":513,"tag":549,"props":756,"children":757},{"style":740},[758],{"type":518,"value":759}," */\n",{"type":513,"tag":549,"props":761,"children":762},{"class":551,"line":623},[763,769,775,781,787,792,797,801,806,811],{"type":513,"tag":549,"props":764,"children":766},{"style":765},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[767],{"type":518,"value":768},"function",{"type":513,"tag":549,"props":770,"children":772},{"style":771},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[773],{"type":518,"value":774}," TreeNode",{"type":513,"tag":549,"props":776,"children":778},{"style":777},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[779],{"type":518,"value":780},"(",{"type":513,"tag":549,"props":782,"children":784},{"style":783},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[785],{"type":518,"value":786},"val",{"type":513,"tag":549,"props":788,"children":789},{"style":777},[790],{"type":518,"value":791},",",{"type":513,"tag":549,"props":793,"children":794},{"style":783},[795],{"type":518,"value":796}," left",{"type":513,"tag":549,"props":798,"children":799},{"style":777},[800],{"type":518,"value":791},{"type":513,"tag":549,"props":802,"children":803},{"style":783},[804],{"type":518,"value":805}," right",{"type":513,"tag":549,"props":807,"children":808},{"style":777},[809],{"type":518,"value":810},")",{"type":513,"tag":549,"props":812,"children":813},{"style":777},[814],{"type":518,"value":815}," {\n",{"type":513,"tag":549,"props":817,"children":818},{"class":551,"line":632},[819,825,830,834,839,844,849,854,859,865,870,874],{"type":513,"tag":549,"props":820,"children":822},{"style":821},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[823],{"type":518,"value":824},"  this",{"type":513,"tag":549,"props":826,"children":827},{"style":777},[828],{"type":518,"value":829},".",{"type":513,"tag":549,"props":831,"children":832},{"style":783},[833],{"type":518,"value":786},{"type":513,"tag":549,"props":835,"children":836},{"style":777},[837],{"type":518,"value":838}," =",{"type":513,"tag":549,"props":840,"children":841},{"style":783},[842],{"type":518,"value":843}," val",{"type":513,"tag":549,"props":845,"children":846},{"style":765},[847],{"type":518,"value":848}," ===",{"type":513,"tag":549,"props":850,"children":851},{"style":765},[852],{"type":518,"value":853}," undefined",{"type":513,"tag":549,"props":855,"children":856},{"style":765},[857],{"type":518,"value":858}," ?",{"type":513,"tag":549,"props":860,"children":862},{"style":861},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[863],{"type":518,"value":864}," 0",{"type":513,"tag":549,"props":866,"children":867},{"style":765},[868],{"type":518,"value":869}," :",{"type":513,"tag":549,"props":871,"children":872},{"style":783},[873],{"type":518,"value":843},{"type":513,"tag":549,"props":875,"children":876},{"style":777},[877],{"type":518,"value":878},";\n",{"type":513,"tag":549,"props":880,"children":881},{"class":551,"line":641},[882,886,890,895,899,903,907,911,915,920,924,928],{"type":513,"tag":549,"props":883,"children":884},{"style":821},[885],{"type":518,"value":824},{"type":513,"tag":549,"props":887,"children":888},{"style":777},[889],{"type":518,"value":829},{"type":513,"tag":549,"props":891,"children":892},{"style":783},[893],{"type":518,"value":894},"left",{"type":513,"tag":549,"props":896,"children":897},{"style":777},[898],{"type":518,"value":838},{"type":513,"tag":549,"props":900,"children":901},{"style":783},[902],{"type":518,"value":796},{"type":513,"tag":549,"props":904,"children":905},{"style":765},[906],{"type":518,"value":848},{"type":513,"tag":549,"props":908,"children":909},{"style":765},[910],{"type":518,"value":853},{"type":513,"tag":549,"props":912,"children":913},{"style":765},[914],{"type":518,"value":858},{"type":513,"tag":549,"props":916,"children":917},{"style":765},[918],{"type":518,"value":919}," null",{"type":513,"tag":549,"props":921,"children":922},{"style":765},[923],{"type":518,"value":869},{"type":513,"tag":549,"props":925,"children":926},{"style":783},[927],{"type":518,"value":796},{"type":513,"tag":549,"props":929,"children":930},{"style":777},[931],{"type":518,"value":878},{"type":513,"tag":549,"props":933,"children":935},{"class":551,"line":934},7,[936,940,944,949,953,957,961,965,969,973,977,981],{"type":513,"tag":549,"props":937,"children":938},{"style":821},[939],{"type":518,"value":824},{"type":513,"tag":549,"props":941,"children":942},{"style":777},[943],{"type":518,"value":829},{"type":513,"tag":549,"props":945,"children":946},{"style":783},[947],{"type":518,"value":948},"right",{"type":513,"tag":549,"props":950,"children":951},{"style":777},[952],{"type":518,"value":838},{"type":513,"tag":549,"props":954,"children":955},{"style":783},[956],{"type":518,"value":805},{"type":513,"tag":549,"props":958,"children":959},{"style":765},[960],{"type":518,"value":848},{"type":513,"tag":549,"props":962,"children":963},{"style":765},[964],{"type":518,"value":853},{"type":513,"tag":549,"props":966,"children":967},{"style":765},[968],{"type":518,"value":858},{"type":513,"tag":549,"props":970,"children":971},{"style":765},[972],{"type":518,"value":919},{"type":513,"tag":549,"props":974,"children":975},{"style":765},[976],{"type":518,"value":869},{"type":513,"tag":549,"props":978,"children":979},{"style":783},[980],{"type":518,"value":805},{"type":513,"tag":549,"props":982,"children":983},{"style":777},[984],{"type":518,"value":878},{"type":513,"tag":549,"props":986,"children":988},{"class":551,"line":987},8,[989],{"type":513,"tag":549,"props":990,"children":991},{"style":777},[992],{"type":518,"value":993},"}\n",{"type":513,"tag":549,"props":995,"children":997},{"class":551,"line":996},9,[998],{"type":513,"tag":549,"props":999,"children":1001},{"emptyLinePlaceholder":1000},true,[1002],{"type":518,"value":1003},"\n",{"type":513,"tag":549,"props":1005,"children":1007},{"class":551,"line":1006},10,[1008],{"type":513,"tag":549,"props":1009,"children":1010},{"style":740},[1011],{"type":518,"value":743},{"type":513,"tag":549,"props":1013,"children":1015},{"class":551,"line":1014},11,[1016,1021,1026,1032,1037,1043,1048],{"type":513,"tag":549,"props":1017,"children":1018},{"style":740},[1019],{"type":518,"value":1020}," * ",{"type":513,"tag":549,"props":1022,"children":1023},{"style":777},[1024],{"type":518,"value":1025},"@",{"type":513,"tag":549,"props":1027,"children":1029},{"style":1028},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[1030],{"type":518,"value":1031},"param",{"type":513,"tag":549,"props":1033,"children":1034},{"style":777},[1035],{"type":518,"value":1036}," {",{"type":513,"tag":549,"props":1038,"children":1040},{"style":1039},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[1041],{"type":518,"value":1042},"TreeNode",{"type":513,"tag":549,"props":1044,"children":1045},{"style":777},[1046],{"type":518,"value":1047},"}",{"type":513,"tag":549,"props":1049,"children":1050},{"style":783},[1051],{"type":518,"value":1052}," root\n",{"type":513,"tag":549,"props":1054,"children":1056},{"class":551,"line":1055},12,[1057,1061,1065,1069,1073,1078,1082],{"type":513,"tag":549,"props":1058,"children":1059},{"style":740},[1060],{"type":518,"value":1020},{"type":513,"tag":549,"props":1062,"children":1063},{"style":777},[1064],{"type":518,"value":1025},{"type":513,"tag":549,"props":1066,"children":1067},{"style":1028},[1068],{"type":518,"value":1031},{"type":513,"tag":549,"props":1070,"children":1071},{"style":777},[1072],{"type":518,"value":1036},{"type":513,"tag":549,"props":1074,"children":1075},{"style":1039},[1076],{"type":518,"value":1077},"number",{"type":513,"tag":549,"props":1079,"children":1080},{"style":777},[1081],{"type":518,"value":1047},{"type":513,"tag":549,"props":1083,"children":1084},{"style":783},[1085],{"type":518,"value":1086}," targetSum\n",{"type":513,"tag":549,"props":1088,"children":1090},{"class":551,"line":1089},13,[1091,1095,1099,1104,1108,1113],{"type":513,"tag":549,"props":1092,"children":1093},{"style":740},[1094],{"type":518,"value":1020},{"type":513,"tag":549,"props":1096,"children":1097},{"style":777},[1098],{"type":518,"value":1025},{"type":513,"tag":549,"props":1100,"children":1101},{"style":1028},[1102],{"type":518,"value":1103},"return",{"type":513,"tag":549,"props":1105,"children":1106},{"style":777},[1107],{"type":518,"value":1036},{"type":513,"tag":549,"props":1109,"children":1110},{"style":1039},[1111],{"type":518,"value":1112},"boolean",{"type":513,"tag":549,"props":1114,"children":1115},{"style":777},[1116],{"type":518,"value":993},{"type":513,"tag":549,"props":1118,"children":1120},{"class":551,"line":1119},14,[1121],{"type":513,"tag":549,"props":1122,"children":1123},{"style":740},[1124],{"type":518,"value":759},{"type":513,"tag":549,"props":1126,"children":1128},{"class":551,"line":1127},15,[1129,1134,1139,1143,1148,1153,1157,1161,1166,1170],{"type":513,"tag":549,"props":1130,"children":1131},{"style":765},[1132],{"type":518,"value":1133},"var",{"type":513,"tag":549,"props":1135,"children":1136},{"style":771},[1137],{"type":518,"value":1138}," hasPathSum",{"type":513,"tag":549,"props":1140,"children":1141},{"style":777},[1142],{"type":518,"value":838},{"type":513,"tag":549,"props":1144,"children":1145},{"style":765},[1146],{"type":518,"value":1147}," function",{"type":513,"tag":549,"props":1149,"children":1150},{"style":777},[1151],{"type":518,"value":1152}," (",{"type":513,"tag":549,"props":1154,"children":1155},{"style":783},[1156],{"type":518,"value":510},{"type":513,"tag":549,"props":1158,"children":1159},{"style":777},[1160],{"type":518,"value":791},{"type":513,"tag":549,"props":1162,"children":1163},{"style":783},[1164],{"type":518,"value":1165}," targetSum",{"type":513,"tag":549,"props":1167,"children":1168},{"style":777},[1169],{"type":518,"value":810},{"type":513,"tag":549,"props":1171,"children":1172},{"style":777},[1173],{"type":518,"value":815},{"type":513,"tag":549,"props":1175,"children":1177},{"class":551,"line":1176},16,[1178,1183,1187,1191,1195,1199,1203,1208,1213],{"type":513,"tag":549,"props":1179,"children":1180},{"style":1028},[1181],{"type":518,"value":1182},"  if",{"type":513,"tag":549,"props":1184,"children":1185},{"style":777},[1186],{"type":518,"value":1152},{"type":513,"tag":549,"props":1188,"children":1189},{"style":783},[1190],{"type":518,"value":510},{"type":513,"tag":549,"props":1192,"children":1193},{"style":765},[1194],{"type":518,"value":848},{"type":513,"tag":549,"props":1196,"children":1197},{"style":765},[1198],{"type":518,"value":919},{"type":513,"tag":549,"props":1200,"children":1201},{"style":777},[1202],{"type":518,"value":810},{"type":513,"tag":549,"props":1204,"children":1205},{"style":1028},[1206],{"type":518,"value":1207}," return",{"type":513,"tag":549,"props":1209,"children":1210},{"style":1028},[1211],{"type":518,"value":1212}," false",{"type":513,"tag":549,"props":1214,"children":1215},{"style":777},[1216],{"type":518,"value":878},{"type":513,"tag":549,"props":1218,"children":1220},{"class":551,"line":1219},17,[1221,1225,1229,1233,1237,1241,1245,1249,1254,1259,1263,1267,1271,1275,1279,1283,1287,1291,1295,1299,1303],{"type":513,"tag":549,"props":1222,"children":1223},{"style":1028},[1224],{"type":518,"value":1182},{"type":513,"tag":549,"props":1226,"children":1227},{"style":777},[1228],{"type":518,"value":1152},{"type":513,"tag":549,"props":1230,"children":1231},{"style":783},[1232],{"type":518,"value":510},{"type":513,"tag":549,"props":1234,"children":1235},{"style":777},[1236],{"type":518,"value":829},{"type":513,"tag":549,"props":1238,"children":1239},{"style":783},[1240],{"type":518,"value":894},{"type":513,"tag":549,"props":1242,"children":1243},{"style":765},[1244],{"type":518,"value":848},{"type":513,"tag":549,"props":1246,"children":1247},{"style":765},[1248],{"type":518,"value":919},{"type":513,"tag":549,"props":1250,"children":1251},{"style":765},[1252],{"type":518,"value":1253}," &&",{"type":513,"tag":549,"props":1255,"children":1256},{"style":783},[1257],{"type":518,"value":1258}," root",{"type":513,"tag":549,"props":1260,"children":1261},{"style":777},[1262],{"type":518,"value":829},{"type":513,"tag":549,"props":1264,"children":1265},{"style":783},[1266],{"type":518,"value":948},{"type":513,"tag":549,"props":1268,"children":1269},{"style":765},[1270],{"type":518,"value":848},{"type":513,"tag":549,"props":1272,"children":1273},{"style":765},[1274],{"type":518,"value":919},{"type":513,"tag":549,"props":1276,"children":1277},{"style":777},[1278],{"type":518,"value":810},{"type":513,"tag":549,"props":1280,"children":1281},{"style":1028},[1282],{"type":518,"value":1207},{"type":513,"tag":549,"props":1284,"children":1285},{"style":783},[1286],{"type":518,"value":1258},{"type":513,"tag":549,"props":1288,"children":1289},{"style":777},[1290],{"type":518,"value":829},{"type":513,"tag":549,"props":1292,"children":1293},{"style":783},[1294],{"type":518,"value":786},{"type":513,"tag":549,"props":1296,"children":1297},{"style":765},[1298],{"type":518,"value":848},{"type":513,"tag":549,"props":1300,"children":1301},{"style":783},[1302],{"type":518,"value":1165},{"type":513,"tag":549,"props":1304,"children":1305},{"style":777},[1306],{"type":518,"value":878},{"type":513,"tag":549,"props":1308,"children":1310},{"class":551,"line":1309},18,[1311,1316],{"type":513,"tag":549,"props":1312,"children":1313},{"style":1028},[1314],{"type":518,"value":1315},"  return",{"type":513,"tag":549,"props":1317,"children":1318},{"style":777},[1319],{"type":518,"value":1320}," (\n",{"type":513,"tag":549,"props":1322,"children":1324},{"class":551,"line":1323},19,[1325,1330,1334,1338,1342,1346,1350,1354,1359,1363,1367,1371,1375],{"type":513,"tag":549,"props":1326,"children":1327},{"style":771},[1328],{"type":518,"value":1329},"    hasPathSum",{"type":513,"tag":549,"props":1331,"children":1332},{"style":777},[1333],{"type":518,"value":780},{"type":513,"tag":549,"props":1335,"children":1336},{"style":783},[1337],{"type":518,"value":510},{"type":513,"tag":549,"props":1339,"children":1340},{"style":777},[1341],{"type":518,"value":829},{"type":513,"tag":549,"props":1343,"children":1344},{"style":783},[1345],{"type":518,"value":894},{"type":513,"tag":549,"props":1347,"children":1348},{"style":777},[1349],{"type":518,"value":791},{"type":513,"tag":549,"props":1351,"children":1352},{"style":783},[1353],{"type":518,"value":1165},{"type":513,"tag":549,"props":1355,"children":1356},{"style":765},[1357],{"type":518,"value":1358}," -",{"type":513,"tag":549,"props":1360,"children":1361},{"style":783},[1362],{"type":518,"value":1258},{"type":513,"tag":549,"props":1364,"children":1365},{"style":777},[1366],{"type":518,"value":829},{"type":513,"tag":549,"props":1368,"children":1369},{"style":783},[1370],{"type":518,"value":786},{"type":513,"tag":549,"props":1372,"children":1373},{"style":777},[1374],{"type":518,"value":810},{"type":513,"tag":549,"props":1376,"children":1377},{"style":765},[1378],{"type":518,"value":1379}," ||\n",{"type":513,"tag":549,"props":1381,"children":1383},{"class":551,"line":1382},20,[1384,1388,1392,1396,1400,1404,1408,1412,1416,1420,1424,1428],{"type":513,"tag":549,"props":1385,"children":1386},{"style":771},[1387],{"type":518,"value":1329},{"type":513,"tag":549,"props":1389,"children":1390},{"style":777},[1391],{"type":518,"value":780},{"type":513,"tag":549,"props":1393,"children":1394},{"style":783},[1395],{"type":518,"value":510},{"type":513,"tag":549,"props":1397,"children":1398},{"style":777},[1399],{"type":518,"value":829},{"type":513,"tag":549,"props":1401,"children":1402},{"style":783},[1403],{"type":518,"value":948},{"type":513,"tag":549,"props":1405,"children":1406},{"style":777},[1407],{"type":518,"value":791},{"type":513,"tag":549,"props":1409,"children":1410},{"style":783},[1411],{"type":518,"value":1165},{"type":513,"tag":549,"props":1413,"children":1414},{"style":765},[1415],{"type":518,"value":1358},{"type":513,"tag":549,"props":1417,"children":1418},{"style":783},[1419],{"type":518,"value":1258},{"type":513,"tag":549,"props":1421,"children":1422},{"style":777},[1423],{"type":518,"value":829},{"type":513,"tag":549,"props":1425,"children":1426},{"style":783},[1427],{"type":518,"value":786},{"type":513,"tag":549,"props":1429,"children":1430},{"style":777},[1431],{"type":518,"value":1432},")\n",{"type":513,"tag":549,"props":1434,"children":1436},{"class":551,"line":1435},21,[1437],{"type":513,"tag":549,"props":1438,"children":1439},{"style":777},[1440],{"type":518,"value":1441},"  );\n",{"type":513,"tag":549,"props":1443,"children":1445},{"class":551,"line":1444},22,[1446],{"type":513,"tag":549,"props":1447,"children":1448},{"style":777},[1449],{"type":518,"value":1450},"};\n",{"type":513,"tag":1452,"props":1453,"children":1454},"style",{},[1455],{"type":518,"value":1456},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":506,"searchDepth":632,"depth":632,"links":1458},[1459,1460],{"id":711,"depth":561,"text":711},{"id":716,"depth":561,"text":716,"children":1461},[1462],{"id":722,"depth":570,"text":725},"markdown","content:1.algorithm:3.leetcode:3.major:112.path-sum.md","content","1.algorithm/3.leetcode/3.major/112.path-sum.md","md",[1469,1471],{"_path":159,"title":158,"description":1470},"给定一个二叉树，找出其最小深度。",{"_path":165,"title":164,"description":1472},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",1714056094018]