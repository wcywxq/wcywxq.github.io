[{"data":1,"prerenderedAt":1389},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/path-sum":452,"/algorithm/leetcode/major/path-sum-surround":1384},[4,259,287,431,438],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately",{"title":260,"_path":261,"children":262},"前端八股文","/frontend-endorsement",[263,274],{"title":264,"_path":265,"children":266},"构建工具","/frontend-endorsement/build-tools",[267],{"title":268,"_path":269,"children":270},"Webpack","/frontend-endorsement/build-tools/webpack",[271],{"title":272,"_path":273},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":275,"_path":276,"children":277},"Html","/frontend-endorsement/html",[278,281,284],{"title":279,"_path":280},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":282,"_path":283},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":285,"_path":286},"离线存储","/frontend-endorsement/html/offline-storage",{"title":288,"_path":289,"children":290},"前端代码考核","/frontend-code-assessment",[291,340,424],{"title":292,"_path":293,"children":294},"源码实现","/frontend-code-assessment/source",[295,320,333],{"title":296,"_path":297,"children":298},"原生 api","/frontend-code-assessment/source/native-api",[299,302,305,308,311,314,317],{"title":300,"_path":301},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":303,"_path":304},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":306,"_path":307},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":309,"_path":310},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":312,"_path":313},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":315,"_path":316},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":318,"_path":319},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":321,"_path":322,"children":323},"数组 Array","/frontend-code-assessment/source/array",[324,327,330],{"title":325,"_path":326},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":328,"_path":329},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":331,"_path":332},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":334,"_path":335,"children":336},"字符串 String","/frontend-code-assessment/source/string",[337],{"title":338,"_path":339},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":341,"_path":342,"children":343},"业务场景","/frontend-code-assessment/scene",[344,366,373,376,379,382,385,388,391,394,397,400,403,406,409,412,415,418,421],{"title":345,"_path":346,"children":347},"Promise","/frontend-code-assessment/scene/promise",[348,351,354,357,360,363],{"title":349,"_path":350},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":352,"_path":353},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":355,"_path":356},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":358,"_path":359},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":361,"_path":362},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":364,"_path":365},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":367,"_path":368,"children":369},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[370],{"title":371,"_path":372},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":374,"_path":375},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":377,"_path":378},"倒计时","/frontend-code-assessment/scene/countdown",{"title":380,"_path":381},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":383,"_path":384},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":386,"_path":387},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":389,"_path":390},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":392,"_path":393},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":395,"_path":396},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":398,"_path":399},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":401,"_path":402},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":404,"_path":405},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":407,"_path":408},"随机数","/frontend-code-assessment/scene/random-number",{"title":410,"_path":411},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":413,"_path":414},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":416,"_path":417},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":419,"_path":420},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":422,"_path":423},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":425,"_path":426,"children":427},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[428],{"title":429,"_path":430},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":432,"_path":433,"children":434},"项目","/pro",[435],{"title":436,"_path":437},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":439,"_path":440,"children":441},"后端语言","/backend-languages",[442],{"title":443,"_path":444,"children":445},"Python","/backend-languages/python",[446,449],{"title":447,"_path":448},"基础","/backend-languages/python/base",{"title":450,"_path":451},"函数","/backend-languages/python/function",{"_path":153,"_dir":453,"_draft":454,"_partial":454,"_locale":455,"title":152,"description":456,"url":457,"body":458,"_type":1379,"_id":1380,"_source":1381,"_file":1382,"_extension":1383},"major",false,"","给你二叉树的根节点 root 和一个表示目标和的整数 targetSum 。判断该树中是否存在 根节点到叶子节点 的路径，这条路径上所有节点值相加等于目标和 targetSum 。如果存在，返回 true ；否则，返回 false 。","https://leetcode.cn/problems/path-sum",{"type":459,"children":460,"toc":1373},"root",[461,468,473,478,487,526,531,539,597,602,632,637,657,663,668,675,1367],{"type":462,"tag":463,"props":464,"children":465},"element","p",{},[466],{"type":467,"value":456},"text",{"type":462,"tag":463,"props":469,"children":470},{},[471],{"type":467,"value":472},"叶子节点 是指没有子节点的节点。",{"type":462,"tag":463,"props":474,"children":475},{},[476],{"type":467,"value":477},"示例 1：",{"type":462,"tag":463,"props":479,"children":480},{},[481],{"type":462,"tag":482,"props":483,"children":486},"img",{"alt":484,"src":485},"pathsum1","/img/code_leetcode_No.112_pathsum1.png",[],{"type":462,"tag":488,"props":489,"children":492},"pre",{"className":490,"code":491,"language":467,"meta":455,"style":455},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n输出：true\n解释：等于目标和的根节点到叶节点路径如上图所示。\n",[493],{"type":462,"tag":494,"props":495,"children":496},"code",{"__ignoreMap":455},[497,508,517],{"type":462,"tag":498,"props":499,"children":502},"span",{"class":500,"line":501},"line",1,[503],{"type":462,"tag":498,"props":504,"children":505},{},[506],{"type":467,"value":507},"输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n",{"type":462,"tag":498,"props":509,"children":511},{"class":500,"line":510},2,[512],{"type":462,"tag":498,"props":513,"children":514},{},[515],{"type":467,"value":516},"输出：true\n",{"type":462,"tag":498,"props":518,"children":520},{"class":500,"line":519},3,[521],{"type":462,"tag":498,"props":522,"children":523},{},[524],{"type":467,"value":525},"解释：等于目标和的根节点到叶节点路径如上图所示。\n",{"type":462,"tag":463,"props":527,"children":528},{},[529],{"type":467,"value":530},"示例 2：",{"type":462,"tag":463,"props":532,"children":533},{},[534],{"type":462,"tag":482,"props":535,"children":538},{"alt":536,"src":537},"pathsum2","/img/code_leetcode_No.112_pathsum2.png",[],{"type":462,"tag":488,"props":540,"children":542},{"className":490,"code":541,"language":467,"meta":455,"style":455},"输入：root = [1,2,3], targetSum = 5\n输出：false\n解释：树中存在两条根节点到叶子节点的路径：\n(1 --> 2): 和为 3\n(1 --> 3): 和为 4\n不存在 sum = 5 的根节点到叶子节点的路径。\n",[543],{"type":462,"tag":494,"props":544,"children":545},{"__ignoreMap":455},[546,554,562,570,579,588],{"type":462,"tag":498,"props":547,"children":548},{"class":500,"line":501},[549],{"type":462,"tag":498,"props":550,"children":551},{},[552],{"type":467,"value":553},"输入：root = [1,2,3], targetSum = 5\n",{"type":462,"tag":498,"props":555,"children":556},{"class":500,"line":510},[557],{"type":462,"tag":498,"props":558,"children":559},{},[560],{"type":467,"value":561},"输出：false\n",{"type":462,"tag":498,"props":563,"children":564},{"class":500,"line":519},[565],{"type":462,"tag":498,"props":566,"children":567},{},[568],{"type":467,"value":569},"解释：树中存在两条根节点到叶子节点的路径：\n",{"type":462,"tag":498,"props":571,"children":573},{"class":500,"line":572},4,[574],{"type":462,"tag":498,"props":575,"children":576},{},[577],{"type":467,"value":578},"(1 --> 2): 和为 3\n",{"type":462,"tag":498,"props":580,"children":582},{"class":500,"line":581},5,[583],{"type":462,"tag":498,"props":584,"children":585},{},[586],{"type":467,"value":587},"(1 --> 3): 和为 4\n",{"type":462,"tag":498,"props":589,"children":591},{"class":500,"line":590},6,[592],{"type":462,"tag":498,"props":593,"children":594},{},[595],{"type":467,"value":596},"不存在 sum = 5 的根节点到叶子节点的路径。\n",{"type":462,"tag":463,"props":598,"children":599},{},[600],{"type":467,"value":601},"示例 3：",{"type":462,"tag":488,"props":603,"children":605},{"className":490,"code":604,"language":467,"meta":455,"style":455},"输入：root = [], targetSum = 0\n输出：false\n解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",[606],{"type":462,"tag":494,"props":607,"children":608},{"__ignoreMap":455},[609,617,624],{"type":462,"tag":498,"props":610,"children":611},{"class":500,"line":501},[612],{"type":462,"tag":498,"props":613,"children":614},{},[615],{"type":467,"value":616},"输入：root = [], targetSum = 0\n",{"type":462,"tag":498,"props":618,"children":619},{"class":500,"line":510},[620],{"type":462,"tag":498,"props":621,"children":622},{},[623],{"type":467,"value":561},{"type":462,"tag":498,"props":625,"children":626},{"class":500,"line":519},[627],{"type":462,"tag":498,"props":628,"children":629},{},[630],{"type":467,"value":631},"解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",{"type":462,"tag":463,"props":633,"children":634},{},[635],{"type":467,"value":636},"提示：",{"type":462,"tag":638,"props":639,"children":640},"ul",{},[641,647,652],{"type":462,"tag":642,"props":643,"children":644},"li",{},[645],{"type":467,"value":646},"树中节点的数目在范围 [0, 5000] 内",{"type":462,"tag":642,"props":648,"children":649},{},[650],{"type":467,"value":651},"-1000 \u003C= Node.val \u003C= 1000",{"type":462,"tag":642,"props":653,"children":654},{},[655],{"type":467,"value":656},"-1000 \u003C= targetSum \u003C= 1000",{"type":462,"tag":658,"props":659,"children":661},"h2",{"id":660},"解题思路",[662],{"type":467,"value":660},{"type":462,"tag":658,"props":664,"children":666},{"id":665},"实现",[667],{"type":467,"value":665},{"type":462,"tag":669,"props":670,"children":672},"h3",{"id":671},"深度优先搜索-dfs",[673],{"type":467,"value":674},"深度优先搜索 - dfs",{"type":462,"tag":488,"props":676,"children":680},{"className":677,"code":678,"language":679,"meta":455,"style":455},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {boolean}\n */\nvar hasPathSum = function (root, targetSum) {\n  if (root === null) return false;\n  if (root.left === null && root.right === null) return root.val === targetSum;\n  return (\n    hasPathSum(root.left, targetSum - root.val) ||\n    hasPathSum(root.right, targetSum - root.val)\n  );\n};\n","js",[681],{"type":462,"tag":494,"props":682,"children":683},{"__ignoreMap":455},[684,693,701,709,761,827,880,933,942,952,960,987,1009,1027,1035,1080,1125,1215,1229,1288,1341,1354],{"type":462,"tag":498,"props":685,"children":686},{"class":500,"line":501},[687],{"type":462,"tag":498,"props":688,"children":690},{"style":689},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[691],{"type":467,"value":692},"/**\n",{"type":462,"tag":498,"props":694,"children":695},{"class":500,"line":510},[696],{"type":462,"tag":498,"props":697,"children":698},{"style":689},[699],{"type":467,"value":700}," * Definition for a binary tree node.\n",{"type":462,"tag":498,"props":702,"children":703},{"class":500,"line":519},[704],{"type":462,"tag":498,"props":705,"children":706},{"style":689},[707],{"type":467,"value":708}," */\n",{"type":462,"tag":498,"props":710,"children":711},{"class":500,"line":572},[712,718,724,730,736,742,747,751,756],{"type":462,"tag":498,"props":713,"children":715},{"style":714},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[716],{"type":467,"value":717},"function",{"type":462,"tag":498,"props":719,"children":721},{"style":720},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[722],{"type":467,"value":723}," TreeNode",{"type":462,"tag":498,"props":725,"children":727},{"style":726},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[728],{"type":467,"value":729},"(",{"type":462,"tag":498,"props":731,"children":733},{"style":732},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[734],{"type":467,"value":735},"val",{"type":462,"tag":498,"props":737,"children":739},{"style":738},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[740],{"type":467,"value":741},",",{"type":462,"tag":498,"props":743,"children":744},{"style":732},[745],{"type":467,"value":746}," left",{"type":462,"tag":498,"props":748,"children":749},{"style":738},[750],{"type":467,"value":741},{"type":462,"tag":498,"props":752,"children":753},{"style":732},[754],{"type":467,"value":755}," right",{"type":462,"tag":498,"props":757,"children":758},{"style":726},[759],{"type":467,"value":760},") {\n",{"type":462,"tag":498,"props":762,"children":763},{"class":500,"line":581},[764,770,776,781,787,792,797,803,808,813,818,822],{"type":462,"tag":498,"props":765,"children":767},{"style":766},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[768],{"type":467,"value":769},"  this",{"type":462,"tag":498,"props":771,"children":773},{"style":772},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[774],{"type":467,"value":775},".",{"type":462,"tag":498,"props":777,"children":779},{"style":778},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[780],{"type":467,"value":735},{"type":462,"tag":498,"props":782,"children":784},{"style":783},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[785],{"type":467,"value":786}," =",{"type":462,"tag":498,"props":788,"children":789},{"style":778},[790],{"type":467,"value":791}," val",{"type":462,"tag":498,"props":793,"children":794},{"style":783},[795],{"type":467,"value":796}," ===",{"type":462,"tag":498,"props":798,"children":800},{"style":799},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[801],{"type":467,"value":802}," undefined",{"type":462,"tag":498,"props":804,"children":805},{"style":783},[806],{"type":467,"value":807}," ?",{"type":462,"tag":498,"props":809,"children":810},{"style":799},[811],{"type":467,"value":812}," 0",{"type":462,"tag":498,"props":814,"children":815},{"style":783},[816],{"type":467,"value":817}," :",{"type":462,"tag":498,"props":819,"children":820},{"style":778},[821],{"type":467,"value":791},{"type":462,"tag":498,"props":823,"children":824},{"style":738},[825],{"type":467,"value":826},";\n",{"type":462,"tag":498,"props":828,"children":829},{"class":500,"line":590},[830,834,838,843,847,851,855,859,863,868,872,876],{"type":462,"tag":498,"props":831,"children":832},{"style":766},[833],{"type":467,"value":769},{"type":462,"tag":498,"props":835,"children":836},{"style":772},[837],{"type":467,"value":775},{"type":462,"tag":498,"props":839,"children":840},{"style":778},[841],{"type":467,"value":842},"left",{"type":462,"tag":498,"props":844,"children":845},{"style":783},[846],{"type":467,"value":786},{"type":462,"tag":498,"props":848,"children":849},{"style":778},[850],{"type":467,"value":746},{"type":462,"tag":498,"props":852,"children":853},{"style":783},[854],{"type":467,"value":796},{"type":462,"tag":498,"props":856,"children":857},{"style":799},[858],{"type":467,"value":802},{"type":462,"tag":498,"props":860,"children":861},{"style":783},[862],{"type":467,"value":807},{"type":462,"tag":498,"props":864,"children":865},{"style":799},[866],{"type":467,"value":867}," null",{"type":462,"tag":498,"props":869,"children":870},{"style":783},[871],{"type":467,"value":817},{"type":462,"tag":498,"props":873,"children":874},{"style":778},[875],{"type":467,"value":746},{"type":462,"tag":498,"props":877,"children":878},{"style":738},[879],{"type":467,"value":826},{"type":462,"tag":498,"props":881,"children":883},{"class":500,"line":882},7,[884,888,892,897,901,905,909,913,917,921,925,929],{"type":462,"tag":498,"props":885,"children":886},{"style":766},[887],{"type":467,"value":769},{"type":462,"tag":498,"props":889,"children":890},{"style":772},[891],{"type":467,"value":775},{"type":462,"tag":498,"props":893,"children":894},{"style":778},[895],{"type":467,"value":896},"right",{"type":462,"tag":498,"props":898,"children":899},{"style":783},[900],{"type":467,"value":786},{"type":462,"tag":498,"props":902,"children":903},{"style":778},[904],{"type":467,"value":755},{"type":462,"tag":498,"props":906,"children":907},{"style":783},[908],{"type":467,"value":796},{"type":462,"tag":498,"props":910,"children":911},{"style":799},[912],{"type":467,"value":802},{"type":462,"tag":498,"props":914,"children":915},{"style":783},[916],{"type":467,"value":807},{"type":462,"tag":498,"props":918,"children":919},{"style":799},[920],{"type":467,"value":867},{"type":462,"tag":498,"props":922,"children":923},{"style":783},[924],{"type":467,"value":817},{"type":462,"tag":498,"props":926,"children":927},{"style":778},[928],{"type":467,"value":755},{"type":462,"tag":498,"props":930,"children":931},{"style":738},[932],{"type":467,"value":826},{"type":462,"tag":498,"props":934,"children":936},{"class":500,"line":935},8,[937],{"type":462,"tag":498,"props":938,"children":939},{"style":726},[940],{"type":467,"value":941},"}\n",{"type":462,"tag":498,"props":943,"children":945},{"class":500,"line":944},9,[946],{"type":462,"tag":498,"props":947,"children":949},{"emptyLinePlaceholder":948},true,[950],{"type":467,"value":951},"\n",{"type":462,"tag":498,"props":953,"children":955},{"class":500,"line":954},10,[956],{"type":462,"tag":498,"props":957,"children":958},{"style":689},[959],{"type":467,"value":692},{"type":462,"tag":498,"props":961,"children":963},{"class":500,"line":962},11,[964,969,975,981],{"type":462,"tag":498,"props":965,"children":966},{"style":689},[967],{"type":467,"value":968}," * ",{"type":462,"tag":498,"props":970,"children":972},{"style":971},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[973],{"type":467,"value":974},"@param",{"type":462,"tag":498,"props":976,"children":978},{"style":977},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[979],{"type":467,"value":980}," {TreeNode}",{"type":462,"tag":498,"props":982,"children":984},{"style":983},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[985],{"type":467,"value":986}," root\n",{"type":462,"tag":498,"props":988,"children":990},{"class":500,"line":989},12,[991,995,999,1004],{"type":462,"tag":498,"props":992,"children":993},{"style":689},[994],{"type":467,"value":968},{"type":462,"tag":498,"props":996,"children":997},{"style":971},[998],{"type":467,"value":974},{"type":462,"tag":498,"props":1000,"children":1001},{"style":977},[1002],{"type":467,"value":1003}," {number}",{"type":462,"tag":498,"props":1005,"children":1006},{"style":983},[1007],{"type":467,"value":1008}," targetSum\n",{"type":462,"tag":498,"props":1010,"children":1012},{"class":500,"line":1011},13,[1013,1017,1022],{"type":462,"tag":498,"props":1014,"children":1015},{"style":689},[1016],{"type":467,"value":968},{"type":462,"tag":498,"props":1018,"children":1019},{"style":971},[1020],{"type":467,"value":1021},"@return",{"type":462,"tag":498,"props":1023,"children":1024},{"style":977},[1025],{"type":467,"value":1026}," {boolean}\n",{"type":462,"tag":498,"props":1028,"children":1030},{"class":500,"line":1029},14,[1031],{"type":462,"tag":498,"props":1032,"children":1033},{"style":689},[1034],{"type":467,"value":708},{"type":462,"tag":498,"props":1036,"children":1038},{"class":500,"line":1037},15,[1039,1044,1049,1053,1058,1063,1067,1071,1076],{"type":462,"tag":498,"props":1040,"children":1041},{"style":714},[1042],{"type":467,"value":1043},"var",{"type":462,"tag":498,"props":1045,"children":1046},{"style":720},[1047],{"type":467,"value":1048}," hasPathSum",{"type":462,"tag":498,"props":1050,"children":1051},{"style":783},[1052],{"type":467,"value":786},{"type":462,"tag":498,"props":1054,"children":1055},{"style":714},[1056],{"type":467,"value":1057}," function",{"type":462,"tag":498,"props":1059,"children":1060},{"style":726},[1061],{"type":467,"value":1062}," (",{"type":462,"tag":498,"props":1064,"children":1065},{"style":732},[1066],{"type":467,"value":459},{"type":462,"tag":498,"props":1068,"children":1069},{"style":738},[1070],{"type":467,"value":741},{"type":462,"tag":498,"props":1072,"children":1073},{"style":732},[1074],{"type":467,"value":1075}," targetSum",{"type":462,"tag":498,"props":1077,"children":1078},{"style":726},[1079],{"type":467,"value":760},{"type":462,"tag":498,"props":1081,"children":1083},{"class":500,"line":1082},16,[1084,1090,1094,1098,1102,1106,1111,1116,1121],{"type":462,"tag":498,"props":1085,"children":1087},{"style":1086},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[1088],{"type":467,"value":1089},"  if",{"type":462,"tag":498,"props":1091,"children":1092},{"style":726},[1093],{"type":467,"value":1062},{"type":462,"tag":498,"props":1095,"children":1096},{"style":778},[1097],{"type":467,"value":459},{"type":462,"tag":498,"props":1099,"children":1100},{"style":783},[1101],{"type":467,"value":796},{"type":462,"tag":498,"props":1103,"children":1104},{"style":799},[1105],{"type":467,"value":867},{"type":462,"tag":498,"props":1107,"children":1108},{"style":726},[1109],{"type":467,"value":1110},") ",{"type":462,"tag":498,"props":1112,"children":1113},{"style":1086},[1114],{"type":467,"value":1115},"return",{"type":462,"tag":498,"props":1117,"children":1118},{"style":799},[1119],{"type":467,"value":1120}," false",{"type":462,"tag":498,"props":1122,"children":1123},{"style":738},[1124],{"type":467,"value":826},{"type":462,"tag":498,"props":1126,"children":1128},{"class":500,"line":1127},17,[1129,1133,1137,1141,1145,1149,1153,1157,1162,1167,1171,1175,1179,1183,1187,1191,1195,1199,1203,1207,1211],{"type":462,"tag":498,"props":1130,"children":1131},{"style":1086},[1132],{"type":467,"value":1089},{"type":462,"tag":498,"props":1134,"children":1135},{"style":726},[1136],{"type":467,"value":1062},{"type":462,"tag":498,"props":1138,"children":1139},{"style":778},[1140],{"type":467,"value":459},{"type":462,"tag":498,"props":1142,"children":1143},{"style":772},[1144],{"type":467,"value":775},{"type":462,"tag":498,"props":1146,"children":1147},{"style":778},[1148],{"type":467,"value":842},{"type":462,"tag":498,"props":1150,"children":1151},{"style":783},[1152],{"type":467,"value":796},{"type":462,"tag":498,"props":1154,"children":1155},{"style":799},[1156],{"type":467,"value":867},{"type":462,"tag":498,"props":1158,"children":1159},{"style":783},[1160],{"type":467,"value":1161}," &&",{"type":462,"tag":498,"props":1163,"children":1164},{"style":778},[1165],{"type":467,"value":1166}," root",{"type":462,"tag":498,"props":1168,"children":1169},{"style":772},[1170],{"type":467,"value":775},{"type":462,"tag":498,"props":1172,"children":1173},{"style":778},[1174],{"type":467,"value":896},{"type":462,"tag":498,"props":1176,"children":1177},{"style":783},[1178],{"type":467,"value":796},{"type":462,"tag":498,"props":1180,"children":1181},{"style":799},[1182],{"type":467,"value":867},{"type":462,"tag":498,"props":1184,"children":1185},{"style":726},[1186],{"type":467,"value":1110},{"type":462,"tag":498,"props":1188,"children":1189},{"style":1086},[1190],{"type":467,"value":1115},{"type":462,"tag":498,"props":1192,"children":1193},{"style":778},[1194],{"type":467,"value":1166},{"type":462,"tag":498,"props":1196,"children":1197},{"style":772},[1198],{"type":467,"value":775},{"type":462,"tag":498,"props":1200,"children":1201},{"style":778},[1202],{"type":467,"value":735},{"type":462,"tag":498,"props":1204,"children":1205},{"style":783},[1206],{"type":467,"value":796},{"type":462,"tag":498,"props":1208,"children":1209},{"style":778},[1210],{"type":467,"value":1075},{"type":462,"tag":498,"props":1212,"children":1213},{"style":738},[1214],{"type":467,"value":826},{"type":462,"tag":498,"props":1216,"children":1218},{"class":500,"line":1217},18,[1219,1224],{"type":462,"tag":498,"props":1220,"children":1221},{"style":1086},[1222],{"type":467,"value":1223},"  return",{"type":462,"tag":498,"props":1225,"children":1226},{"style":726},[1227],{"type":467,"value":1228}," (\n",{"type":462,"tag":498,"props":1230,"children":1232},{"class":500,"line":1231},19,[1233,1238,1242,1246,1250,1254,1258,1262,1267,1271,1275,1279,1283],{"type":462,"tag":498,"props":1234,"children":1235},{"style":720},[1236],{"type":467,"value":1237},"    hasPathSum",{"type":462,"tag":498,"props":1239,"children":1240},{"style":726},[1241],{"type":467,"value":729},{"type":462,"tag":498,"props":1243,"children":1244},{"style":778},[1245],{"type":467,"value":459},{"type":462,"tag":498,"props":1247,"children":1248},{"style":772},[1249],{"type":467,"value":775},{"type":462,"tag":498,"props":1251,"children":1252},{"style":778},[1253],{"type":467,"value":842},{"type":462,"tag":498,"props":1255,"children":1256},{"style":738},[1257],{"type":467,"value":741},{"type":462,"tag":498,"props":1259,"children":1260},{"style":778},[1261],{"type":467,"value":1075},{"type":462,"tag":498,"props":1263,"children":1264},{"style":783},[1265],{"type":467,"value":1266}," -",{"type":462,"tag":498,"props":1268,"children":1269},{"style":778},[1270],{"type":467,"value":1166},{"type":462,"tag":498,"props":1272,"children":1273},{"style":772},[1274],{"type":467,"value":775},{"type":462,"tag":498,"props":1276,"children":1277},{"style":778},[1278],{"type":467,"value":735},{"type":462,"tag":498,"props":1280,"children":1281},{"style":726},[1282],{"type":467,"value":1110},{"type":462,"tag":498,"props":1284,"children":1285},{"style":783},[1286],{"type":467,"value":1287},"||\n",{"type":462,"tag":498,"props":1289,"children":1291},{"class":500,"line":1290},20,[1292,1296,1300,1304,1308,1312,1316,1320,1324,1328,1332,1336],{"type":462,"tag":498,"props":1293,"children":1294},{"style":720},[1295],{"type":467,"value":1237},{"type":462,"tag":498,"props":1297,"children":1298},{"style":726},[1299],{"type":467,"value":729},{"type":462,"tag":498,"props":1301,"children":1302},{"style":778},[1303],{"type":467,"value":459},{"type":462,"tag":498,"props":1305,"children":1306},{"style":772},[1307],{"type":467,"value":775},{"type":462,"tag":498,"props":1309,"children":1310},{"style":778},[1311],{"type":467,"value":896},{"type":462,"tag":498,"props":1313,"children":1314},{"style":738},[1315],{"type":467,"value":741},{"type":462,"tag":498,"props":1317,"children":1318},{"style":778},[1319],{"type":467,"value":1075},{"type":462,"tag":498,"props":1321,"children":1322},{"style":783},[1323],{"type":467,"value":1266},{"type":462,"tag":498,"props":1325,"children":1326},{"style":778},[1327],{"type":467,"value":1166},{"type":462,"tag":498,"props":1329,"children":1330},{"style":772},[1331],{"type":467,"value":775},{"type":462,"tag":498,"props":1333,"children":1334},{"style":778},[1335],{"type":467,"value":735},{"type":462,"tag":498,"props":1337,"children":1338},{"style":726},[1339],{"type":467,"value":1340},")\n",{"type":462,"tag":498,"props":1342,"children":1344},{"class":500,"line":1343},21,[1345,1350],{"type":462,"tag":498,"props":1346,"children":1347},{"style":726},[1348],{"type":467,"value":1349},"  )",{"type":462,"tag":498,"props":1351,"children":1352},{"style":738},[1353],{"type":467,"value":826},{"type":462,"tag":498,"props":1355,"children":1357},{"class":500,"line":1356},22,[1358,1363],{"type":462,"tag":498,"props":1359,"children":1360},{"style":726},[1361],{"type":467,"value":1362},"}",{"type":462,"tag":498,"props":1364,"children":1365},{"style":738},[1366],{"type":467,"value":826},{"type":462,"tag":1368,"props":1369,"children":1370},"style",{},[1371],{"type":467,"value":1372},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":455,"searchDepth":581,"depth":581,"links":1374},[1375,1376],{"id":660,"depth":510,"text":660},{"id":665,"depth":510,"text":665,"children":1377},[1378],{"id":671,"depth":519,"text":674},"markdown","content:1.algorithm:3.leetcode:3.major:112.path-sum.md","content","1.algorithm/3.leetcode/3.major/112.path-sum.md","md",[1385,1387],{"_path":150,"title":149,"description":1386},"给定一个二叉树，找出其最小深度。",{"_path":156,"title":155,"description":1388},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",1713457421810]