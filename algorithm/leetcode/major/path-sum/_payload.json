[{"data":1,"prerenderedAt":1448},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/path-sum":478,"/algorithm/leetcode/major/path-sum-surround":1443},[4,269,298,446,454,463],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":445},"代码考核","/code-assessment",[302,351,438],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/code-assessment/scene",[355,377,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432,435],{"title":356,"_path":357,"children":358},"Promise","/code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[381,384],{"title":382,"_path":383},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":385,"_path":386},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":388,"_path":389},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":391,"_path":392},"倒计时","/code-assessment/scene/countdown",{"title":394,"_path":395},"日期格式化","/code-assessment/scene/date-format",{"title":397,"_path":398},"实现前端路由","/code-assessment/scene/frontend-route",{"title":400,"_path":401},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":403,"_path":404},"lodash.get","/code-assessment/scene/lodash-get",{"title":406,"_path":407},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":409,"_path":410},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":412,"_path":413},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":415,"_path":416},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":418,"_path":419},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":421,"_path":422},"随机数","/code-assessment/scene/random-number",{"title":424,"_path":425},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":427,"_path":428},"sku 算法实现","/code-assessment/scene/sku",{"title":430,"_path":431},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":433,"_path":434},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":436,"_path":437},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":439,"_path":440,"children":441},"Ts 类型挑战","/code-assessment/type-challeges",[442],{"title":443,"_path":444},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":447,"_path":448,"children":449,"icon":453},"项目","/project",[450],{"title":451,"_path":452},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":455,"_path":456,"children":457,"icon":462},"设计模式","/design-mode",[458,459],{"title":455,"_path":456},{"title":460,"_path":461},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":464,"_path":465,"children":466,"icon":477},"后端语言","/backend-languages",[467],{"title":468,"_path":469,"children":470},"Python","/backend-languages/python",[471,474],{"title":472,"_path":473},"基础","/backend-languages/python/base",{"title":475,"_path":476},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":162,"_dir":479,"_draft":480,"_partial":480,"_locale":481,"title":161,"description":482,"url":483,"body":484,"_type":1438,"_id":1439,"_source":1440,"_file":1441,"_extension":1442},"major",false,"","给你二叉树的根节点 root 和一个表示目标和的整数 targetSum 。判断该树中是否存在 根节点到叶子节点 的路径，这条路径上所有节点值相加等于目标和 targetSum 。如果存在，返回 true ；否则，返回 false 。","https://leetcode.cn/problems/path-sum",{"type":485,"children":486,"toc":1432},"root",[487,494,499,504,513,552,557,565,623,628,658,663,683,689,694,701,1426],{"type":488,"tag":489,"props":490,"children":491},"element","p",{},[492],{"type":493,"value":482},"text",{"type":488,"tag":489,"props":495,"children":496},{},[497],{"type":493,"value":498},"叶子节点 是指没有子节点的节点。",{"type":488,"tag":489,"props":500,"children":501},{},[502],{"type":493,"value":503},"示例 1：",{"type":488,"tag":489,"props":505,"children":506},{},[507],{"type":488,"tag":508,"props":509,"children":512},"img",{"alt":510,"src":511},"pathsum1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.112_pathsum1.png",[],{"type":488,"tag":514,"props":515,"children":518},"pre",{"className":516,"code":517,"language":493,"meta":481,"style":481},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n输出：true\n解释：等于目标和的根节点到叶节点路径如上图所示。\n",[519],{"type":488,"tag":520,"props":521,"children":522},"code",{"__ignoreMap":481},[523,534,543],{"type":488,"tag":524,"props":525,"children":528},"span",{"class":526,"line":527},"line",1,[529],{"type":488,"tag":524,"props":530,"children":531},{},[532],{"type":493,"value":533},"输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n",{"type":488,"tag":524,"props":535,"children":537},{"class":526,"line":536},2,[538],{"type":488,"tag":524,"props":539,"children":540},{},[541],{"type":493,"value":542},"输出：true\n",{"type":488,"tag":524,"props":544,"children":546},{"class":526,"line":545},3,[547],{"type":488,"tag":524,"props":548,"children":549},{},[550],{"type":493,"value":551},"解释：等于目标和的根节点到叶节点路径如上图所示。\n",{"type":488,"tag":489,"props":553,"children":554},{},[555],{"type":493,"value":556},"示例 2：",{"type":488,"tag":489,"props":558,"children":559},{},[560],{"type":488,"tag":508,"props":561,"children":564},{"alt":562,"src":563},"pathsum2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.112_pathsum2.png",[],{"type":488,"tag":514,"props":566,"children":568},{"className":516,"code":567,"language":493,"meta":481,"style":481},"输入：root = [1,2,3], targetSum = 5\n输出：false\n解释：树中存在两条根节点到叶子节点的路径：\n(1 --> 2): 和为 3\n(1 --> 3): 和为 4\n不存在 sum = 5 的根节点到叶子节点的路径。\n",[569],{"type":488,"tag":520,"props":570,"children":571},{"__ignoreMap":481},[572,580,588,596,605,614],{"type":488,"tag":524,"props":573,"children":574},{"class":526,"line":527},[575],{"type":488,"tag":524,"props":576,"children":577},{},[578],{"type":493,"value":579},"输入：root = [1,2,3], targetSum = 5\n",{"type":488,"tag":524,"props":581,"children":582},{"class":526,"line":536},[583],{"type":488,"tag":524,"props":584,"children":585},{},[586],{"type":493,"value":587},"输出：false\n",{"type":488,"tag":524,"props":589,"children":590},{"class":526,"line":545},[591],{"type":488,"tag":524,"props":592,"children":593},{},[594],{"type":493,"value":595},"解释：树中存在两条根节点到叶子节点的路径：\n",{"type":488,"tag":524,"props":597,"children":599},{"class":526,"line":598},4,[600],{"type":488,"tag":524,"props":601,"children":602},{},[603],{"type":493,"value":604},"(1 --> 2): 和为 3\n",{"type":488,"tag":524,"props":606,"children":608},{"class":526,"line":607},5,[609],{"type":488,"tag":524,"props":610,"children":611},{},[612],{"type":493,"value":613},"(1 --> 3): 和为 4\n",{"type":488,"tag":524,"props":615,"children":617},{"class":526,"line":616},6,[618],{"type":488,"tag":524,"props":619,"children":620},{},[621],{"type":493,"value":622},"不存在 sum = 5 的根节点到叶子节点的路径。\n",{"type":488,"tag":489,"props":624,"children":625},{},[626],{"type":493,"value":627},"示例 3：",{"type":488,"tag":514,"props":629,"children":631},{"className":516,"code":630,"language":493,"meta":481,"style":481},"输入：root = [], targetSum = 0\n输出：false\n解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",[632],{"type":488,"tag":520,"props":633,"children":634},{"__ignoreMap":481},[635,643,650],{"type":488,"tag":524,"props":636,"children":637},{"class":526,"line":527},[638],{"type":488,"tag":524,"props":639,"children":640},{},[641],{"type":493,"value":642},"输入：root = [], targetSum = 0\n",{"type":488,"tag":524,"props":644,"children":645},{"class":526,"line":536},[646],{"type":488,"tag":524,"props":647,"children":648},{},[649],{"type":493,"value":587},{"type":488,"tag":524,"props":651,"children":652},{"class":526,"line":545},[653],{"type":488,"tag":524,"props":654,"children":655},{},[656],{"type":493,"value":657},"解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",{"type":488,"tag":489,"props":659,"children":660},{},[661],{"type":493,"value":662},"提示：",{"type":488,"tag":664,"props":665,"children":666},"ul",{},[667,673,678],{"type":488,"tag":668,"props":669,"children":670},"li",{},[671],{"type":493,"value":672},"树中节点的数目在范围 [0, 5000] 内",{"type":488,"tag":668,"props":674,"children":675},{},[676],{"type":493,"value":677},"-1000 \u003C= Node.val \u003C= 1000",{"type":488,"tag":668,"props":679,"children":680},{},[681],{"type":493,"value":682},"-1000 \u003C= targetSum \u003C= 1000",{"type":488,"tag":684,"props":685,"children":687},"h2",{"id":686},"解题思路",[688],{"type":493,"value":686},{"type":488,"tag":684,"props":690,"children":692},{"id":691},"实现",[693],{"type":493,"value":691},{"type":488,"tag":695,"props":696,"children":698},"h3",{"id":697},"深度优先搜索-dfs",[699],{"type":493,"value":700},"深度优先搜索 - dfs",{"type":488,"tag":514,"props":702,"children":706},{"className":703,"code":704,"language":705,"meta":481,"style":481},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {boolean}\n */\nvar hasPathSum = function (root, targetSum) {\n  if (root === null) return false;\n  if (root.left === null && root.right === null) return root.val === targetSum;\n  return (\n    hasPathSum(root.left, targetSum - root.val) ||\n    hasPathSum(root.right, targetSum - root.val)\n  );\n};\n","js",[707],{"type":488,"tag":520,"props":708,"children":709},{"__ignoreMap":481},[710,719,727,735,791,854,907,960,969,979,987,1028,1062,1092,1100,1149,1192,1282,1296,1355,1408,1417],{"type":488,"tag":524,"props":711,"children":712},{"class":526,"line":527},[713],{"type":488,"tag":524,"props":714,"children":716},{"style":715},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[717],{"type":493,"value":718},"/**\n",{"type":488,"tag":524,"props":720,"children":721},{"class":526,"line":536},[722],{"type":488,"tag":524,"props":723,"children":724},{"style":715},[725],{"type":493,"value":726}," * Definition for a binary tree node.\n",{"type":488,"tag":524,"props":728,"children":729},{"class":526,"line":545},[730],{"type":488,"tag":524,"props":731,"children":732},{"style":715},[733],{"type":493,"value":734}," */\n",{"type":488,"tag":524,"props":736,"children":737},{"class":526,"line":598},[738,744,750,756,762,767,772,776,781,786],{"type":488,"tag":524,"props":739,"children":741},{"style":740},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[742],{"type":493,"value":743},"function",{"type":488,"tag":524,"props":745,"children":747},{"style":746},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[748],{"type":493,"value":749}," TreeNode",{"type":488,"tag":524,"props":751,"children":753},{"style":752},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[754],{"type":493,"value":755},"(",{"type":488,"tag":524,"props":757,"children":759},{"style":758},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[760],{"type":493,"value":761},"val",{"type":488,"tag":524,"props":763,"children":764},{"style":752},[765],{"type":493,"value":766},",",{"type":488,"tag":524,"props":768,"children":769},{"style":758},[770],{"type":493,"value":771}," left",{"type":488,"tag":524,"props":773,"children":774},{"style":752},[775],{"type":493,"value":766},{"type":488,"tag":524,"props":777,"children":778},{"style":758},[779],{"type":493,"value":780}," right",{"type":488,"tag":524,"props":782,"children":783},{"style":752},[784],{"type":493,"value":785},")",{"type":488,"tag":524,"props":787,"children":788},{"style":752},[789],{"type":493,"value":790}," {\n",{"type":488,"tag":524,"props":792,"children":793},{"class":526,"line":607},[794,800,805,809,814,819,824,829,834,840,845,849],{"type":488,"tag":524,"props":795,"children":797},{"style":796},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[798],{"type":493,"value":799},"  this",{"type":488,"tag":524,"props":801,"children":802},{"style":752},[803],{"type":493,"value":804},".",{"type":488,"tag":524,"props":806,"children":807},{"style":758},[808],{"type":493,"value":761},{"type":488,"tag":524,"props":810,"children":811},{"style":752},[812],{"type":493,"value":813}," =",{"type":488,"tag":524,"props":815,"children":816},{"style":758},[817],{"type":493,"value":818}," val",{"type":488,"tag":524,"props":820,"children":821},{"style":740},[822],{"type":493,"value":823}," ===",{"type":488,"tag":524,"props":825,"children":826},{"style":740},[827],{"type":493,"value":828}," undefined",{"type":488,"tag":524,"props":830,"children":831},{"style":740},[832],{"type":493,"value":833}," ?",{"type":488,"tag":524,"props":835,"children":837},{"style":836},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[838],{"type":493,"value":839}," 0",{"type":488,"tag":524,"props":841,"children":842},{"style":740},[843],{"type":493,"value":844}," :",{"type":488,"tag":524,"props":846,"children":847},{"style":758},[848],{"type":493,"value":818},{"type":488,"tag":524,"props":850,"children":851},{"style":752},[852],{"type":493,"value":853},";\n",{"type":488,"tag":524,"props":855,"children":856},{"class":526,"line":616},[857,861,865,870,874,878,882,886,890,895,899,903],{"type":488,"tag":524,"props":858,"children":859},{"style":796},[860],{"type":493,"value":799},{"type":488,"tag":524,"props":862,"children":863},{"style":752},[864],{"type":493,"value":804},{"type":488,"tag":524,"props":866,"children":867},{"style":758},[868],{"type":493,"value":869},"left",{"type":488,"tag":524,"props":871,"children":872},{"style":752},[873],{"type":493,"value":813},{"type":488,"tag":524,"props":875,"children":876},{"style":758},[877],{"type":493,"value":771},{"type":488,"tag":524,"props":879,"children":880},{"style":740},[881],{"type":493,"value":823},{"type":488,"tag":524,"props":883,"children":884},{"style":740},[885],{"type":493,"value":828},{"type":488,"tag":524,"props":887,"children":888},{"style":740},[889],{"type":493,"value":833},{"type":488,"tag":524,"props":891,"children":892},{"style":740},[893],{"type":493,"value":894}," null",{"type":488,"tag":524,"props":896,"children":897},{"style":740},[898],{"type":493,"value":844},{"type":488,"tag":524,"props":900,"children":901},{"style":758},[902],{"type":493,"value":771},{"type":488,"tag":524,"props":904,"children":905},{"style":752},[906],{"type":493,"value":853},{"type":488,"tag":524,"props":908,"children":910},{"class":526,"line":909},7,[911,915,919,924,928,932,936,940,944,948,952,956],{"type":488,"tag":524,"props":912,"children":913},{"style":796},[914],{"type":493,"value":799},{"type":488,"tag":524,"props":916,"children":917},{"style":752},[918],{"type":493,"value":804},{"type":488,"tag":524,"props":920,"children":921},{"style":758},[922],{"type":493,"value":923},"right",{"type":488,"tag":524,"props":925,"children":926},{"style":752},[927],{"type":493,"value":813},{"type":488,"tag":524,"props":929,"children":930},{"style":758},[931],{"type":493,"value":780},{"type":488,"tag":524,"props":933,"children":934},{"style":740},[935],{"type":493,"value":823},{"type":488,"tag":524,"props":937,"children":938},{"style":740},[939],{"type":493,"value":828},{"type":488,"tag":524,"props":941,"children":942},{"style":740},[943],{"type":493,"value":833},{"type":488,"tag":524,"props":945,"children":946},{"style":740},[947],{"type":493,"value":894},{"type":488,"tag":524,"props":949,"children":950},{"style":740},[951],{"type":493,"value":844},{"type":488,"tag":524,"props":953,"children":954},{"style":758},[955],{"type":493,"value":780},{"type":488,"tag":524,"props":957,"children":958},{"style":752},[959],{"type":493,"value":853},{"type":488,"tag":524,"props":961,"children":963},{"class":526,"line":962},8,[964],{"type":488,"tag":524,"props":965,"children":966},{"style":752},[967],{"type":493,"value":968},"}\n",{"type":488,"tag":524,"props":970,"children":972},{"class":526,"line":971},9,[973],{"type":488,"tag":524,"props":974,"children":976},{"emptyLinePlaceholder":975},true,[977],{"type":493,"value":978},"\n",{"type":488,"tag":524,"props":980,"children":982},{"class":526,"line":981},10,[983],{"type":488,"tag":524,"props":984,"children":985},{"style":715},[986],{"type":493,"value":718},{"type":488,"tag":524,"props":988,"children":990},{"class":526,"line":989},11,[991,996,1001,1007,1012,1018,1023],{"type":488,"tag":524,"props":992,"children":993},{"style":715},[994],{"type":493,"value":995}," * ",{"type":488,"tag":524,"props":997,"children":998},{"style":752},[999],{"type":493,"value":1000},"@",{"type":488,"tag":524,"props":1002,"children":1004},{"style":1003},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[1005],{"type":493,"value":1006},"param",{"type":488,"tag":524,"props":1008,"children":1009},{"style":752},[1010],{"type":493,"value":1011}," {",{"type":488,"tag":524,"props":1013,"children":1015},{"style":1014},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[1016],{"type":493,"value":1017},"TreeNode",{"type":488,"tag":524,"props":1019,"children":1020},{"style":752},[1021],{"type":493,"value":1022},"}",{"type":488,"tag":524,"props":1024,"children":1025},{"style":758},[1026],{"type":493,"value":1027}," root\n",{"type":488,"tag":524,"props":1029,"children":1031},{"class":526,"line":1030},12,[1032,1036,1040,1044,1048,1053,1057],{"type":488,"tag":524,"props":1033,"children":1034},{"style":715},[1035],{"type":493,"value":995},{"type":488,"tag":524,"props":1037,"children":1038},{"style":752},[1039],{"type":493,"value":1000},{"type":488,"tag":524,"props":1041,"children":1042},{"style":1003},[1043],{"type":493,"value":1006},{"type":488,"tag":524,"props":1045,"children":1046},{"style":752},[1047],{"type":493,"value":1011},{"type":488,"tag":524,"props":1049,"children":1050},{"style":1014},[1051],{"type":493,"value":1052},"number",{"type":488,"tag":524,"props":1054,"children":1055},{"style":752},[1056],{"type":493,"value":1022},{"type":488,"tag":524,"props":1058,"children":1059},{"style":758},[1060],{"type":493,"value":1061}," targetSum\n",{"type":488,"tag":524,"props":1063,"children":1065},{"class":526,"line":1064},13,[1066,1070,1074,1079,1083,1088],{"type":488,"tag":524,"props":1067,"children":1068},{"style":715},[1069],{"type":493,"value":995},{"type":488,"tag":524,"props":1071,"children":1072},{"style":752},[1073],{"type":493,"value":1000},{"type":488,"tag":524,"props":1075,"children":1076},{"style":1003},[1077],{"type":493,"value":1078},"return",{"type":488,"tag":524,"props":1080,"children":1081},{"style":752},[1082],{"type":493,"value":1011},{"type":488,"tag":524,"props":1084,"children":1085},{"style":1014},[1086],{"type":493,"value":1087},"boolean",{"type":488,"tag":524,"props":1089,"children":1090},{"style":752},[1091],{"type":493,"value":968},{"type":488,"tag":524,"props":1093,"children":1095},{"class":526,"line":1094},14,[1096],{"type":488,"tag":524,"props":1097,"children":1098},{"style":715},[1099],{"type":493,"value":734},{"type":488,"tag":524,"props":1101,"children":1103},{"class":526,"line":1102},15,[1104,1109,1114,1118,1123,1128,1132,1136,1141,1145],{"type":488,"tag":524,"props":1105,"children":1106},{"style":740},[1107],{"type":493,"value":1108},"var",{"type":488,"tag":524,"props":1110,"children":1111},{"style":746},[1112],{"type":493,"value":1113}," hasPathSum",{"type":488,"tag":524,"props":1115,"children":1116},{"style":752},[1117],{"type":493,"value":813},{"type":488,"tag":524,"props":1119,"children":1120},{"style":740},[1121],{"type":493,"value":1122}," function",{"type":488,"tag":524,"props":1124,"children":1125},{"style":752},[1126],{"type":493,"value":1127}," (",{"type":488,"tag":524,"props":1129,"children":1130},{"style":758},[1131],{"type":493,"value":485},{"type":488,"tag":524,"props":1133,"children":1134},{"style":752},[1135],{"type":493,"value":766},{"type":488,"tag":524,"props":1137,"children":1138},{"style":758},[1139],{"type":493,"value":1140}," targetSum",{"type":488,"tag":524,"props":1142,"children":1143},{"style":752},[1144],{"type":493,"value":785},{"type":488,"tag":524,"props":1146,"children":1147},{"style":752},[1148],{"type":493,"value":790},{"type":488,"tag":524,"props":1150,"children":1152},{"class":526,"line":1151},16,[1153,1158,1162,1166,1170,1174,1178,1183,1188],{"type":488,"tag":524,"props":1154,"children":1155},{"style":1003},[1156],{"type":493,"value":1157},"  if",{"type":488,"tag":524,"props":1159,"children":1160},{"style":752},[1161],{"type":493,"value":1127},{"type":488,"tag":524,"props":1163,"children":1164},{"style":758},[1165],{"type":493,"value":485},{"type":488,"tag":524,"props":1167,"children":1168},{"style":740},[1169],{"type":493,"value":823},{"type":488,"tag":524,"props":1171,"children":1172},{"style":740},[1173],{"type":493,"value":894},{"type":488,"tag":524,"props":1175,"children":1176},{"style":752},[1177],{"type":493,"value":785},{"type":488,"tag":524,"props":1179,"children":1180},{"style":1003},[1181],{"type":493,"value":1182}," return",{"type":488,"tag":524,"props":1184,"children":1185},{"style":1003},[1186],{"type":493,"value":1187}," false",{"type":488,"tag":524,"props":1189,"children":1190},{"style":752},[1191],{"type":493,"value":853},{"type":488,"tag":524,"props":1193,"children":1195},{"class":526,"line":1194},17,[1196,1200,1204,1208,1212,1216,1220,1224,1229,1234,1238,1242,1246,1250,1254,1258,1262,1266,1270,1274,1278],{"type":488,"tag":524,"props":1197,"children":1198},{"style":1003},[1199],{"type":493,"value":1157},{"type":488,"tag":524,"props":1201,"children":1202},{"style":752},[1203],{"type":493,"value":1127},{"type":488,"tag":524,"props":1205,"children":1206},{"style":758},[1207],{"type":493,"value":485},{"type":488,"tag":524,"props":1209,"children":1210},{"style":752},[1211],{"type":493,"value":804},{"type":488,"tag":524,"props":1213,"children":1214},{"style":758},[1215],{"type":493,"value":869},{"type":488,"tag":524,"props":1217,"children":1218},{"style":740},[1219],{"type":493,"value":823},{"type":488,"tag":524,"props":1221,"children":1222},{"style":740},[1223],{"type":493,"value":894},{"type":488,"tag":524,"props":1225,"children":1226},{"style":740},[1227],{"type":493,"value":1228}," &&",{"type":488,"tag":524,"props":1230,"children":1231},{"style":758},[1232],{"type":493,"value":1233}," root",{"type":488,"tag":524,"props":1235,"children":1236},{"style":752},[1237],{"type":493,"value":804},{"type":488,"tag":524,"props":1239,"children":1240},{"style":758},[1241],{"type":493,"value":923},{"type":488,"tag":524,"props":1243,"children":1244},{"style":740},[1245],{"type":493,"value":823},{"type":488,"tag":524,"props":1247,"children":1248},{"style":740},[1249],{"type":493,"value":894},{"type":488,"tag":524,"props":1251,"children":1252},{"style":752},[1253],{"type":493,"value":785},{"type":488,"tag":524,"props":1255,"children":1256},{"style":1003},[1257],{"type":493,"value":1182},{"type":488,"tag":524,"props":1259,"children":1260},{"style":758},[1261],{"type":493,"value":1233},{"type":488,"tag":524,"props":1263,"children":1264},{"style":752},[1265],{"type":493,"value":804},{"type":488,"tag":524,"props":1267,"children":1268},{"style":758},[1269],{"type":493,"value":761},{"type":488,"tag":524,"props":1271,"children":1272},{"style":740},[1273],{"type":493,"value":823},{"type":488,"tag":524,"props":1275,"children":1276},{"style":758},[1277],{"type":493,"value":1140},{"type":488,"tag":524,"props":1279,"children":1280},{"style":752},[1281],{"type":493,"value":853},{"type":488,"tag":524,"props":1283,"children":1285},{"class":526,"line":1284},18,[1286,1291],{"type":488,"tag":524,"props":1287,"children":1288},{"style":1003},[1289],{"type":493,"value":1290},"  return",{"type":488,"tag":524,"props":1292,"children":1293},{"style":752},[1294],{"type":493,"value":1295}," (\n",{"type":488,"tag":524,"props":1297,"children":1299},{"class":526,"line":1298},19,[1300,1305,1309,1313,1317,1321,1325,1329,1334,1338,1342,1346,1350],{"type":488,"tag":524,"props":1301,"children":1302},{"style":746},[1303],{"type":493,"value":1304},"    hasPathSum",{"type":488,"tag":524,"props":1306,"children":1307},{"style":752},[1308],{"type":493,"value":755},{"type":488,"tag":524,"props":1310,"children":1311},{"style":758},[1312],{"type":493,"value":485},{"type":488,"tag":524,"props":1314,"children":1315},{"style":752},[1316],{"type":493,"value":804},{"type":488,"tag":524,"props":1318,"children":1319},{"style":758},[1320],{"type":493,"value":869},{"type":488,"tag":524,"props":1322,"children":1323},{"style":752},[1324],{"type":493,"value":766},{"type":488,"tag":524,"props":1326,"children":1327},{"style":758},[1328],{"type":493,"value":1140},{"type":488,"tag":524,"props":1330,"children":1331},{"style":740},[1332],{"type":493,"value":1333}," -",{"type":488,"tag":524,"props":1335,"children":1336},{"style":758},[1337],{"type":493,"value":1233},{"type":488,"tag":524,"props":1339,"children":1340},{"style":752},[1341],{"type":493,"value":804},{"type":488,"tag":524,"props":1343,"children":1344},{"style":758},[1345],{"type":493,"value":761},{"type":488,"tag":524,"props":1347,"children":1348},{"style":752},[1349],{"type":493,"value":785},{"type":488,"tag":524,"props":1351,"children":1352},{"style":740},[1353],{"type":493,"value":1354}," ||\n",{"type":488,"tag":524,"props":1356,"children":1358},{"class":526,"line":1357},20,[1359,1363,1367,1371,1375,1379,1383,1387,1391,1395,1399,1403],{"type":488,"tag":524,"props":1360,"children":1361},{"style":746},[1362],{"type":493,"value":1304},{"type":488,"tag":524,"props":1364,"children":1365},{"style":752},[1366],{"type":493,"value":755},{"type":488,"tag":524,"props":1368,"children":1369},{"style":758},[1370],{"type":493,"value":485},{"type":488,"tag":524,"props":1372,"children":1373},{"style":752},[1374],{"type":493,"value":804},{"type":488,"tag":524,"props":1376,"children":1377},{"style":758},[1378],{"type":493,"value":923},{"type":488,"tag":524,"props":1380,"children":1381},{"style":752},[1382],{"type":493,"value":766},{"type":488,"tag":524,"props":1384,"children":1385},{"style":758},[1386],{"type":493,"value":1140},{"type":488,"tag":524,"props":1388,"children":1389},{"style":740},[1390],{"type":493,"value":1333},{"type":488,"tag":524,"props":1392,"children":1393},{"style":758},[1394],{"type":493,"value":1233},{"type":488,"tag":524,"props":1396,"children":1397},{"style":752},[1398],{"type":493,"value":804},{"type":488,"tag":524,"props":1400,"children":1401},{"style":758},[1402],{"type":493,"value":761},{"type":488,"tag":524,"props":1404,"children":1405},{"style":752},[1406],{"type":493,"value":1407},")\n",{"type":488,"tag":524,"props":1409,"children":1411},{"class":526,"line":1410},21,[1412],{"type":488,"tag":524,"props":1413,"children":1414},{"style":752},[1415],{"type":493,"value":1416},"  );\n",{"type":488,"tag":524,"props":1418,"children":1420},{"class":526,"line":1419},22,[1421],{"type":488,"tag":524,"props":1422,"children":1423},{"style":752},[1424],{"type":493,"value":1425},"};\n",{"type":488,"tag":1427,"props":1428,"children":1429},"style",{},[1430],{"type":493,"value":1431},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":481,"searchDepth":607,"depth":607,"links":1433},[1434,1435],{"id":686,"depth":536,"text":686},{"id":691,"depth":536,"text":691,"children":1436},[1437],{"id":697,"depth":545,"text":700},"markdown","content:1.algorithm:3.leetcode:3.major:112.path-sum.md","content","1.algorithm/3.leetcode/3.major/112.path-sum.md","md",[1444,1446],{"_path":159,"title":158,"description":1445},"给定一个二叉树，找出其最小深度。",{"_path":165,"title":164,"description":1447},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",1714046225168]