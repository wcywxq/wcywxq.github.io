[{"data":1,"prerenderedAt":1394},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/path-sum":457,"/algorithm/leetcode/major/path-sum-surround":1389},[4,260,289,434,442],{"title":5,"_path":6,"children":7,"icon":259},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":261,"_path":262,"children":263,"icon":288},"前端八股文","/frontend-endorsement",[264,275],{"title":265,"_path":266,"children":267},"构建工具","/frontend-endorsement/build-tools",[268],{"title":269,"_path":270,"children":271},"Webpack","/frontend-endorsement/build-tools/webpack",[272],{"title":273,"_path":274},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":276,"_path":277,"children":278},"Html","/frontend-endorsement/html",[279,282,285],{"title":280,"_path":281},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":283,"_path":284},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":286,"_path":287},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":290,"_path":291,"children":292,"icon":433},"前端代码考核","/frontend-code-assessment",[293,342,426],{"title":294,"_path":295,"children":296},"源码实现","/frontend-code-assessment/source",[297,322,335],{"title":298,"_path":299,"children":300},"原生 api","/frontend-code-assessment/source/native-api",[301,304,307,310,313,316,319],{"title":302,"_path":303},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":305,"_path":306},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":308,"_path":309},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":311,"_path":312},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":314,"_path":315},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":317,"_path":318},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":320,"_path":321},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":323,"_path":324,"children":325},"数组 Array","/frontend-code-assessment/source/array",[326,329,332],{"title":327,"_path":328},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":330,"_path":331},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":333,"_path":334},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":336,"_path":337,"children":338},"字符串 String","/frontend-code-assessment/source/string",[339],{"title":340,"_path":341},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":343,"_path":344,"children":345},"业务场景","/frontend-code-assessment/scene",[346,368,375,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423],{"title":347,"_path":348,"children":349},"Promise","/frontend-code-assessment/scene/promise",[350,353,356,359,362,365],{"title":351,"_path":352},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":354,"_path":355},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":357,"_path":358},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":360,"_path":361},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":363,"_path":364},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":366,"_path":367},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":369,"_path":370,"children":371},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[372],{"title":373,"_path":374},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":376,"_path":377},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":379,"_path":380},"倒计时","/frontend-code-assessment/scene/countdown",{"title":382,"_path":383},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":385,"_path":386},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":388,"_path":389},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":391,"_path":392},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":394,"_path":395},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":397,"_path":398},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":400,"_path":401},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":403,"_path":404},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":406,"_path":407},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":409,"_path":410},"随机数","/frontend-code-assessment/scene/random-number",{"title":412,"_path":413},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":415,"_path":416},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":418,"_path":419},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":421,"_path":422},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":424,"_path":425},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":427,"_path":428,"children":429},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[430],{"title":431,"_path":432},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":435,"_path":436,"children":437,"icon":441},"项目","/pro",[438],{"title":439,"_path":440},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":443,"_path":444,"children":445,"icon":456},"后端语言","/backend-languages",[446],{"title":447,"_path":448,"children":449},"Python","/backend-languages/python",[450,453],{"title":451,"_path":452},"基础","/backend-languages/python/base",{"title":454,"_path":455},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":153,"_dir":458,"_draft":459,"_partial":459,"_locale":460,"title":152,"description":461,"url":462,"body":463,"_type":1384,"_id":1385,"_source":1386,"_file":1387,"_extension":1388},"major",false,"","给你二叉树的根节点 root 和一个表示目标和的整数 targetSum 。判断该树中是否存在 根节点到叶子节点 的路径，这条路径上所有节点值相加等于目标和 targetSum 。如果存在，返回 true ；否则，返回 false 。","https://leetcode.cn/problems/path-sum",{"type":464,"children":465,"toc":1378},"root",[466,473,478,483,492,531,536,544,602,607,637,642,662,668,673,680,1372],{"type":467,"tag":468,"props":469,"children":470},"element","p",{},[471],{"type":472,"value":461},"text",{"type":467,"tag":468,"props":474,"children":475},{},[476],{"type":472,"value":477},"叶子节点 是指没有子节点的节点。",{"type":467,"tag":468,"props":479,"children":480},{},[481],{"type":472,"value":482},"示例 1：",{"type":467,"tag":468,"props":484,"children":485},{},[486],{"type":467,"tag":487,"props":488,"children":491},"img",{"alt":489,"src":490},"pathsum1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.112_pathsum1.png",[],{"type":467,"tag":493,"props":494,"children":497},"pre",{"className":495,"code":496,"language":472,"meta":460,"style":460},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n输出：true\n解释：等于目标和的根节点到叶节点路径如上图所示。\n",[498],{"type":467,"tag":499,"props":500,"children":501},"code",{"__ignoreMap":460},[502,513,522],{"type":467,"tag":503,"props":504,"children":507},"span",{"class":505,"line":506},"line",1,[508],{"type":467,"tag":503,"props":509,"children":510},{},[511],{"type":472,"value":512},"输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n",{"type":467,"tag":503,"props":514,"children":516},{"class":505,"line":515},2,[517],{"type":467,"tag":503,"props":518,"children":519},{},[520],{"type":472,"value":521},"输出：true\n",{"type":467,"tag":503,"props":523,"children":525},{"class":505,"line":524},3,[526],{"type":467,"tag":503,"props":527,"children":528},{},[529],{"type":472,"value":530},"解释：等于目标和的根节点到叶节点路径如上图所示。\n",{"type":467,"tag":468,"props":532,"children":533},{},[534],{"type":472,"value":535},"示例 2：",{"type":467,"tag":468,"props":537,"children":538},{},[539],{"type":467,"tag":487,"props":540,"children":543},{"alt":541,"src":542},"pathsum2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.112_pathsum2.png",[],{"type":467,"tag":493,"props":545,"children":547},{"className":495,"code":546,"language":472,"meta":460,"style":460},"输入：root = [1,2,3], targetSum = 5\n输出：false\n解释：树中存在两条根节点到叶子节点的路径：\n(1 --> 2): 和为 3\n(1 --> 3): 和为 4\n不存在 sum = 5 的根节点到叶子节点的路径。\n",[548],{"type":467,"tag":499,"props":549,"children":550},{"__ignoreMap":460},[551,559,567,575,584,593],{"type":467,"tag":503,"props":552,"children":553},{"class":505,"line":506},[554],{"type":467,"tag":503,"props":555,"children":556},{},[557],{"type":472,"value":558},"输入：root = [1,2,3], targetSum = 5\n",{"type":467,"tag":503,"props":560,"children":561},{"class":505,"line":515},[562],{"type":467,"tag":503,"props":563,"children":564},{},[565],{"type":472,"value":566},"输出：false\n",{"type":467,"tag":503,"props":568,"children":569},{"class":505,"line":524},[570],{"type":467,"tag":503,"props":571,"children":572},{},[573],{"type":472,"value":574},"解释：树中存在两条根节点到叶子节点的路径：\n",{"type":467,"tag":503,"props":576,"children":578},{"class":505,"line":577},4,[579],{"type":467,"tag":503,"props":580,"children":581},{},[582],{"type":472,"value":583},"(1 --> 2): 和为 3\n",{"type":467,"tag":503,"props":585,"children":587},{"class":505,"line":586},5,[588],{"type":467,"tag":503,"props":589,"children":590},{},[591],{"type":472,"value":592},"(1 --> 3): 和为 4\n",{"type":467,"tag":503,"props":594,"children":596},{"class":505,"line":595},6,[597],{"type":467,"tag":503,"props":598,"children":599},{},[600],{"type":472,"value":601},"不存在 sum = 5 的根节点到叶子节点的路径。\n",{"type":467,"tag":468,"props":603,"children":604},{},[605],{"type":472,"value":606},"示例 3：",{"type":467,"tag":493,"props":608,"children":610},{"className":495,"code":609,"language":472,"meta":460,"style":460},"输入：root = [], targetSum = 0\n输出：false\n解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",[611],{"type":467,"tag":499,"props":612,"children":613},{"__ignoreMap":460},[614,622,629],{"type":467,"tag":503,"props":615,"children":616},{"class":505,"line":506},[617],{"type":467,"tag":503,"props":618,"children":619},{},[620],{"type":472,"value":621},"输入：root = [], targetSum = 0\n",{"type":467,"tag":503,"props":623,"children":624},{"class":505,"line":515},[625],{"type":467,"tag":503,"props":626,"children":627},{},[628],{"type":472,"value":566},{"type":467,"tag":503,"props":630,"children":631},{"class":505,"line":524},[632],{"type":467,"tag":503,"props":633,"children":634},{},[635],{"type":472,"value":636},"解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",{"type":467,"tag":468,"props":638,"children":639},{},[640],{"type":472,"value":641},"提示：",{"type":467,"tag":643,"props":644,"children":645},"ul",{},[646,652,657],{"type":467,"tag":647,"props":648,"children":649},"li",{},[650],{"type":472,"value":651},"树中节点的数目在范围 [0, 5000] 内",{"type":467,"tag":647,"props":653,"children":654},{},[655],{"type":472,"value":656},"-1000 \u003C= Node.val \u003C= 1000",{"type":467,"tag":647,"props":658,"children":659},{},[660],{"type":472,"value":661},"-1000 \u003C= targetSum \u003C= 1000",{"type":467,"tag":663,"props":664,"children":666},"h2",{"id":665},"解题思路",[667],{"type":472,"value":665},{"type":467,"tag":663,"props":669,"children":671},{"id":670},"实现",[672],{"type":472,"value":670},{"type":467,"tag":674,"props":675,"children":677},"h3",{"id":676},"深度优先搜索-dfs",[678],{"type":472,"value":679},"深度优先搜索 - dfs",{"type":467,"tag":493,"props":681,"children":685},{"className":682,"code":683,"language":684,"meta":460,"style":460},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {boolean}\n */\nvar hasPathSum = function (root, targetSum) {\n  if (root === null) return false;\n  if (root.left === null && root.right === null) return root.val === targetSum;\n  return (\n    hasPathSum(root.left, targetSum - root.val) ||\n    hasPathSum(root.right, targetSum - root.val)\n  );\n};\n","js",[686],{"type":467,"tag":499,"props":687,"children":688},{"__ignoreMap":460},[689,698,706,714,766,832,885,938,947,957,965,992,1014,1032,1040,1085,1130,1220,1234,1293,1346,1359],{"type":467,"tag":503,"props":690,"children":691},{"class":505,"line":506},[692],{"type":467,"tag":503,"props":693,"children":695},{"style":694},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[696],{"type":472,"value":697},"/**\n",{"type":467,"tag":503,"props":699,"children":700},{"class":505,"line":515},[701],{"type":467,"tag":503,"props":702,"children":703},{"style":694},[704],{"type":472,"value":705}," * Definition for a binary tree node.\n",{"type":467,"tag":503,"props":707,"children":708},{"class":505,"line":524},[709],{"type":467,"tag":503,"props":710,"children":711},{"style":694},[712],{"type":472,"value":713}," */\n",{"type":467,"tag":503,"props":715,"children":716},{"class":505,"line":577},[717,723,729,735,741,747,752,756,761],{"type":467,"tag":503,"props":718,"children":720},{"style":719},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[721],{"type":472,"value":722},"function",{"type":467,"tag":503,"props":724,"children":726},{"style":725},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[727],{"type":472,"value":728}," TreeNode",{"type":467,"tag":503,"props":730,"children":732},{"style":731},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[733],{"type":472,"value":734},"(",{"type":467,"tag":503,"props":736,"children":738},{"style":737},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[739],{"type":472,"value":740},"val",{"type":467,"tag":503,"props":742,"children":744},{"style":743},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[745],{"type":472,"value":746},",",{"type":467,"tag":503,"props":748,"children":749},{"style":737},[750],{"type":472,"value":751}," left",{"type":467,"tag":503,"props":753,"children":754},{"style":743},[755],{"type":472,"value":746},{"type":467,"tag":503,"props":757,"children":758},{"style":737},[759],{"type":472,"value":760}," right",{"type":467,"tag":503,"props":762,"children":763},{"style":731},[764],{"type":472,"value":765},") {\n",{"type":467,"tag":503,"props":767,"children":768},{"class":505,"line":586},[769,775,781,786,792,797,802,808,813,818,823,827],{"type":467,"tag":503,"props":770,"children":772},{"style":771},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[773],{"type":472,"value":774},"  this",{"type":467,"tag":503,"props":776,"children":778},{"style":777},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[779],{"type":472,"value":780},".",{"type":467,"tag":503,"props":782,"children":784},{"style":783},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[785],{"type":472,"value":740},{"type":467,"tag":503,"props":787,"children":789},{"style":788},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[790],{"type":472,"value":791}," =",{"type":467,"tag":503,"props":793,"children":794},{"style":783},[795],{"type":472,"value":796}," val",{"type":467,"tag":503,"props":798,"children":799},{"style":788},[800],{"type":472,"value":801}," ===",{"type":467,"tag":503,"props":803,"children":805},{"style":804},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[806],{"type":472,"value":807}," undefined",{"type":467,"tag":503,"props":809,"children":810},{"style":788},[811],{"type":472,"value":812}," ?",{"type":467,"tag":503,"props":814,"children":815},{"style":804},[816],{"type":472,"value":817}," 0",{"type":467,"tag":503,"props":819,"children":820},{"style":788},[821],{"type":472,"value":822}," :",{"type":467,"tag":503,"props":824,"children":825},{"style":783},[826],{"type":472,"value":796},{"type":467,"tag":503,"props":828,"children":829},{"style":743},[830],{"type":472,"value":831},";\n",{"type":467,"tag":503,"props":833,"children":834},{"class":505,"line":595},[835,839,843,848,852,856,860,864,868,873,877,881],{"type":467,"tag":503,"props":836,"children":837},{"style":771},[838],{"type":472,"value":774},{"type":467,"tag":503,"props":840,"children":841},{"style":777},[842],{"type":472,"value":780},{"type":467,"tag":503,"props":844,"children":845},{"style":783},[846],{"type":472,"value":847},"left",{"type":467,"tag":503,"props":849,"children":850},{"style":788},[851],{"type":472,"value":791},{"type":467,"tag":503,"props":853,"children":854},{"style":783},[855],{"type":472,"value":751},{"type":467,"tag":503,"props":857,"children":858},{"style":788},[859],{"type":472,"value":801},{"type":467,"tag":503,"props":861,"children":862},{"style":804},[863],{"type":472,"value":807},{"type":467,"tag":503,"props":865,"children":866},{"style":788},[867],{"type":472,"value":812},{"type":467,"tag":503,"props":869,"children":870},{"style":804},[871],{"type":472,"value":872}," null",{"type":467,"tag":503,"props":874,"children":875},{"style":788},[876],{"type":472,"value":822},{"type":467,"tag":503,"props":878,"children":879},{"style":783},[880],{"type":472,"value":751},{"type":467,"tag":503,"props":882,"children":883},{"style":743},[884],{"type":472,"value":831},{"type":467,"tag":503,"props":886,"children":888},{"class":505,"line":887},7,[889,893,897,902,906,910,914,918,922,926,930,934],{"type":467,"tag":503,"props":890,"children":891},{"style":771},[892],{"type":472,"value":774},{"type":467,"tag":503,"props":894,"children":895},{"style":777},[896],{"type":472,"value":780},{"type":467,"tag":503,"props":898,"children":899},{"style":783},[900],{"type":472,"value":901},"right",{"type":467,"tag":503,"props":903,"children":904},{"style":788},[905],{"type":472,"value":791},{"type":467,"tag":503,"props":907,"children":908},{"style":783},[909],{"type":472,"value":760},{"type":467,"tag":503,"props":911,"children":912},{"style":788},[913],{"type":472,"value":801},{"type":467,"tag":503,"props":915,"children":916},{"style":804},[917],{"type":472,"value":807},{"type":467,"tag":503,"props":919,"children":920},{"style":788},[921],{"type":472,"value":812},{"type":467,"tag":503,"props":923,"children":924},{"style":804},[925],{"type":472,"value":872},{"type":467,"tag":503,"props":927,"children":928},{"style":788},[929],{"type":472,"value":822},{"type":467,"tag":503,"props":931,"children":932},{"style":783},[933],{"type":472,"value":760},{"type":467,"tag":503,"props":935,"children":936},{"style":743},[937],{"type":472,"value":831},{"type":467,"tag":503,"props":939,"children":941},{"class":505,"line":940},8,[942],{"type":467,"tag":503,"props":943,"children":944},{"style":731},[945],{"type":472,"value":946},"}\n",{"type":467,"tag":503,"props":948,"children":950},{"class":505,"line":949},9,[951],{"type":467,"tag":503,"props":952,"children":954},{"emptyLinePlaceholder":953},true,[955],{"type":472,"value":956},"\n",{"type":467,"tag":503,"props":958,"children":960},{"class":505,"line":959},10,[961],{"type":467,"tag":503,"props":962,"children":963},{"style":694},[964],{"type":472,"value":697},{"type":467,"tag":503,"props":966,"children":968},{"class":505,"line":967},11,[969,974,980,986],{"type":467,"tag":503,"props":970,"children":971},{"style":694},[972],{"type":472,"value":973}," * ",{"type":467,"tag":503,"props":975,"children":977},{"style":976},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[978],{"type":472,"value":979},"@param",{"type":467,"tag":503,"props":981,"children":983},{"style":982},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[984],{"type":472,"value":985}," {TreeNode}",{"type":467,"tag":503,"props":987,"children":989},{"style":988},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[990],{"type":472,"value":991}," root\n",{"type":467,"tag":503,"props":993,"children":995},{"class":505,"line":994},12,[996,1000,1004,1009],{"type":467,"tag":503,"props":997,"children":998},{"style":694},[999],{"type":472,"value":973},{"type":467,"tag":503,"props":1001,"children":1002},{"style":976},[1003],{"type":472,"value":979},{"type":467,"tag":503,"props":1005,"children":1006},{"style":982},[1007],{"type":472,"value":1008}," {number}",{"type":467,"tag":503,"props":1010,"children":1011},{"style":988},[1012],{"type":472,"value":1013}," targetSum\n",{"type":467,"tag":503,"props":1015,"children":1017},{"class":505,"line":1016},13,[1018,1022,1027],{"type":467,"tag":503,"props":1019,"children":1020},{"style":694},[1021],{"type":472,"value":973},{"type":467,"tag":503,"props":1023,"children":1024},{"style":976},[1025],{"type":472,"value":1026},"@return",{"type":467,"tag":503,"props":1028,"children":1029},{"style":982},[1030],{"type":472,"value":1031}," {boolean}\n",{"type":467,"tag":503,"props":1033,"children":1035},{"class":505,"line":1034},14,[1036],{"type":467,"tag":503,"props":1037,"children":1038},{"style":694},[1039],{"type":472,"value":713},{"type":467,"tag":503,"props":1041,"children":1043},{"class":505,"line":1042},15,[1044,1049,1054,1058,1063,1068,1072,1076,1081],{"type":467,"tag":503,"props":1045,"children":1046},{"style":719},[1047],{"type":472,"value":1048},"var",{"type":467,"tag":503,"props":1050,"children":1051},{"style":725},[1052],{"type":472,"value":1053}," hasPathSum",{"type":467,"tag":503,"props":1055,"children":1056},{"style":788},[1057],{"type":472,"value":791},{"type":467,"tag":503,"props":1059,"children":1060},{"style":719},[1061],{"type":472,"value":1062}," function",{"type":467,"tag":503,"props":1064,"children":1065},{"style":731},[1066],{"type":472,"value":1067}," (",{"type":467,"tag":503,"props":1069,"children":1070},{"style":737},[1071],{"type":472,"value":464},{"type":467,"tag":503,"props":1073,"children":1074},{"style":743},[1075],{"type":472,"value":746},{"type":467,"tag":503,"props":1077,"children":1078},{"style":737},[1079],{"type":472,"value":1080}," targetSum",{"type":467,"tag":503,"props":1082,"children":1083},{"style":731},[1084],{"type":472,"value":765},{"type":467,"tag":503,"props":1086,"children":1088},{"class":505,"line":1087},16,[1089,1095,1099,1103,1107,1111,1116,1121,1126],{"type":467,"tag":503,"props":1090,"children":1092},{"style":1091},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[1093],{"type":472,"value":1094},"  if",{"type":467,"tag":503,"props":1096,"children":1097},{"style":731},[1098],{"type":472,"value":1067},{"type":467,"tag":503,"props":1100,"children":1101},{"style":783},[1102],{"type":472,"value":464},{"type":467,"tag":503,"props":1104,"children":1105},{"style":788},[1106],{"type":472,"value":801},{"type":467,"tag":503,"props":1108,"children":1109},{"style":804},[1110],{"type":472,"value":872},{"type":467,"tag":503,"props":1112,"children":1113},{"style":731},[1114],{"type":472,"value":1115},") ",{"type":467,"tag":503,"props":1117,"children":1118},{"style":1091},[1119],{"type":472,"value":1120},"return",{"type":467,"tag":503,"props":1122,"children":1123},{"style":804},[1124],{"type":472,"value":1125}," false",{"type":467,"tag":503,"props":1127,"children":1128},{"style":743},[1129],{"type":472,"value":831},{"type":467,"tag":503,"props":1131,"children":1133},{"class":505,"line":1132},17,[1134,1138,1142,1146,1150,1154,1158,1162,1167,1172,1176,1180,1184,1188,1192,1196,1200,1204,1208,1212,1216],{"type":467,"tag":503,"props":1135,"children":1136},{"style":1091},[1137],{"type":472,"value":1094},{"type":467,"tag":503,"props":1139,"children":1140},{"style":731},[1141],{"type":472,"value":1067},{"type":467,"tag":503,"props":1143,"children":1144},{"style":783},[1145],{"type":472,"value":464},{"type":467,"tag":503,"props":1147,"children":1148},{"style":777},[1149],{"type":472,"value":780},{"type":467,"tag":503,"props":1151,"children":1152},{"style":783},[1153],{"type":472,"value":847},{"type":467,"tag":503,"props":1155,"children":1156},{"style":788},[1157],{"type":472,"value":801},{"type":467,"tag":503,"props":1159,"children":1160},{"style":804},[1161],{"type":472,"value":872},{"type":467,"tag":503,"props":1163,"children":1164},{"style":788},[1165],{"type":472,"value":1166}," &&",{"type":467,"tag":503,"props":1168,"children":1169},{"style":783},[1170],{"type":472,"value":1171}," root",{"type":467,"tag":503,"props":1173,"children":1174},{"style":777},[1175],{"type":472,"value":780},{"type":467,"tag":503,"props":1177,"children":1178},{"style":783},[1179],{"type":472,"value":901},{"type":467,"tag":503,"props":1181,"children":1182},{"style":788},[1183],{"type":472,"value":801},{"type":467,"tag":503,"props":1185,"children":1186},{"style":804},[1187],{"type":472,"value":872},{"type":467,"tag":503,"props":1189,"children":1190},{"style":731},[1191],{"type":472,"value":1115},{"type":467,"tag":503,"props":1193,"children":1194},{"style":1091},[1195],{"type":472,"value":1120},{"type":467,"tag":503,"props":1197,"children":1198},{"style":783},[1199],{"type":472,"value":1171},{"type":467,"tag":503,"props":1201,"children":1202},{"style":777},[1203],{"type":472,"value":780},{"type":467,"tag":503,"props":1205,"children":1206},{"style":783},[1207],{"type":472,"value":740},{"type":467,"tag":503,"props":1209,"children":1210},{"style":788},[1211],{"type":472,"value":801},{"type":467,"tag":503,"props":1213,"children":1214},{"style":783},[1215],{"type":472,"value":1080},{"type":467,"tag":503,"props":1217,"children":1218},{"style":743},[1219],{"type":472,"value":831},{"type":467,"tag":503,"props":1221,"children":1223},{"class":505,"line":1222},18,[1224,1229],{"type":467,"tag":503,"props":1225,"children":1226},{"style":1091},[1227],{"type":472,"value":1228},"  return",{"type":467,"tag":503,"props":1230,"children":1231},{"style":731},[1232],{"type":472,"value":1233}," (\n",{"type":467,"tag":503,"props":1235,"children":1237},{"class":505,"line":1236},19,[1238,1243,1247,1251,1255,1259,1263,1267,1272,1276,1280,1284,1288],{"type":467,"tag":503,"props":1239,"children":1240},{"style":725},[1241],{"type":472,"value":1242},"    hasPathSum",{"type":467,"tag":503,"props":1244,"children":1245},{"style":731},[1246],{"type":472,"value":734},{"type":467,"tag":503,"props":1248,"children":1249},{"style":783},[1250],{"type":472,"value":464},{"type":467,"tag":503,"props":1252,"children":1253},{"style":777},[1254],{"type":472,"value":780},{"type":467,"tag":503,"props":1256,"children":1257},{"style":783},[1258],{"type":472,"value":847},{"type":467,"tag":503,"props":1260,"children":1261},{"style":743},[1262],{"type":472,"value":746},{"type":467,"tag":503,"props":1264,"children":1265},{"style":783},[1266],{"type":472,"value":1080},{"type":467,"tag":503,"props":1268,"children":1269},{"style":788},[1270],{"type":472,"value":1271}," -",{"type":467,"tag":503,"props":1273,"children":1274},{"style":783},[1275],{"type":472,"value":1171},{"type":467,"tag":503,"props":1277,"children":1278},{"style":777},[1279],{"type":472,"value":780},{"type":467,"tag":503,"props":1281,"children":1282},{"style":783},[1283],{"type":472,"value":740},{"type":467,"tag":503,"props":1285,"children":1286},{"style":731},[1287],{"type":472,"value":1115},{"type":467,"tag":503,"props":1289,"children":1290},{"style":788},[1291],{"type":472,"value":1292},"||\n",{"type":467,"tag":503,"props":1294,"children":1296},{"class":505,"line":1295},20,[1297,1301,1305,1309,1313,1317,1321,1325,1329,1333,1337,1341],{"type":467,"tag":503,"props":1298,"children":1299},{"style":725},[1300],{"type":472,"value":1242},{"type":467,"tag":503,"props":1302,"children":1303},{"style":731},[1304],{"type":472,"value":734},{"type":467,"tag":503,"props":1306,"children":1307},{"style":783},[1308],{"type":472,"value":464},{"type":467,"tag":503,"props":1310,"children":1311},{"style":777},[1312],{"type":472,"value":780},{"type":467,"tag":503,"props":1314,"children":1315},{"style":783},[1316],{"type":472,"value":901},{"type":467,"tag":503,"props":1318,"children":1319},{"style":743},[1320],{"type":472,"value":746},{"type":467,"tag":503,"props":1322,"children":1323},{"style":783},[1324],{"type":472,"value":1080},{"type":467,"tag":503,"props":1326,"children":1327},{"style":788},[1328],{"type":472,"value":1271},{"type":467,"tag":503,"props":1330,"children":1331},{"style":783},[1332],{"type":472,"value":1171},{"type":467,"tag":503,"props":1334,"children":1335},{"style":777},[1336],{"type":472,"value":780},{"type":467,"tag":503,"props":1338,"children":1339},{"style":783},[1340],{"type":472,"value":740},{"type":467,"tag":503,"props":1342,"children":1343},{"style":731},[1344],{"type":472,"value":1345},")\n",{"type":467,"tag":503,"props":1347,"children":1349},{"class":505,"line":1348},21,[1350,1355],{"type":467,"tag":503,"props":1351,"children":1352},{"style":731},[1353],{"type":472,"value":1354},"  )",{"type":467,"tag":503,"props":1356,"children":1357},{"style":743},[1358],{"type":472,"value":831},{"type":467,"tag":503,"props":1360,"children":1362},{"class":505,"line":1361},22,[1363,1368],{"type":467,"tag":503,"props":1364,"children":1365},{"style":731},[1366],{"type":472,"value":1367},"}",{"type":467,"tag":503,"props":1369,"children":1370},{"style":743},[1371],{"type":472,"value":831},{"type":467,"tag":1373,"props":1374,"children":1375},"style",{},[1376],{"type":472,"value":1377},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":460,"searchDepth":586,"depth":586,"links":1379},[1380,1381],{"id":665,"depth":515,"text":665},{"id":670,"depth":515,"text":670,"children":1382},[1383],{"id":676,"depth":524,"text":679},"markdown","content:1.algorithm:3.leetcode:3.major:112.path-sum.md","content","1.algorithm/3.leetcode/3.major/112.path-sum.md","md",[1390,1392],{"_path":150,"title":149,"description":1391},"给定一个二叉树，找出其最小深度。",{"_path":156,"title":155,"description":1393},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",1713597606642]