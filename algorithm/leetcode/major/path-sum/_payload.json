[{"data":1,"prerenderedAt":1476},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/path-sum":506,"/algorithm/leetcode/major/path-sum-surround":1471},[4,269,298,474,482,491],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":473},"代码考核","/code-assessment",[302,373,466],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":374,"_path":375,"children":376},"业务场景","/code-assessment/scene",[377,402,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463],{"title":378,"_path":379,"children":380},"Promise","/code-assessment/scene/promise",[381,384,387,390,393,396,399],{"title":382,"_path":383},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":385,"_path":386},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":388,"_path":389},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":391,"_path":392},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":394,"_path":395},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":397,"_path":398},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":400,"_path":401},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":403,"_path":404,"children":405},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[406,409],{"title":407,"_path":408},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":410,"_path":411},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":413,"_path":414},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":416,"_path":417},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":419,"_path":420},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":422,"_path":423},"倒计时","/code-assessment/scene/countdown",{"title":425,"_path":426},"日期格式化","/code-assessment/scene/date-format",{"title":428,"_path":429},"实现前端路由","/code-assessment/scene/frontend-route",{"title":431,"_path":432},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":434,"_path":435},"lodash.get","/code-assessment/scene/lodash-get",{"title":437,"_path":438},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":440,"_path":441},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":443,"_path":444},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":446,"_path":447},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":449,"_path":450},"随机数","/code-assessment/scene/random-number",{"title":452,"_path":453},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":455,"_path":456},"sku 算法实现","/code-assessment/scene/sku",{"title":458,"_path":459},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":461,"_path":462},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":464,"_path":465},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":467,"_path":468,"children":469},"Ts 类型挑战","/code-assessment/type-challeges",[470],{"title":471,"_path":472},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":475,"_path":476,"children":477,"icon":481},"项目","/project",[478],{"title":479,"_path":480},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":483,"_path":484,"children":485,"icon":490},"设计模式","/design-mode",[486,487],{"title":483,"_path":484},{"title":488,"_path":489},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":492,"_path":493,"children":494,"icon":505},"后端语言","/backend-languages",[495],{"title":496,"_path":497,"children":498},"Python","/backend-languages/python",[499,502],{"title":500,"_path":501},"基础","/backend-languages/python/base",{"title":503,"_path":504},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":162,"_dir":507,"_draft":508,"_partial":508,"_locale":509,"title":161,"description":510,"url":511,"body":512,"_type":1466,"_id":1467,"_source":1468,"_file":1469,"_extension":1470},"major",false,"","给你二叉树的根节点 root 和一个表示目标和的整数 targetSum 。判断该树中是否存在 根节点到叶子节点 的路径，这条路径上所有节点值相加等于目标和 targetSum 。如果存在，返回 true ；否则，返回 false 。","https://leetcode.cn/problems/path-sum",{"type":513,"children":514,"toc":1460},"root",[515,522,527,532,541,580,585,593,651,656,686,691,711,717,722,729,1454],{"type":516,"tag":517,"props":518,"children":519},"element","p",{},[520],{"type":521,"value":510},"text",{"type":516,"tag":517,"props":523,"children":524},{},[525],{"type":521,"value":526},"叶子节点 是指没有子节点的节点。",{"type":516,"tag":517,"props":528,"children":529},{},[530],{"type":521,"value":531},"示例 1：",{"type":516,"tag":517,"props":533,"children":534},{},[535],{"type":516,"tag":536,"props":537,"children":540},"img",{"alt":538,"src":539},"pathsum1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.112_pathsum1.png",[],{"type":516,"tag":542,"props":543,"children":546},"pre",{"className":544,"code":545,"language":521,"meta":509,"style":509},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n输出：true\n解释：等于目标和的根节点到叶节点路径如上图所示。\n",[547],{"type":516,"tag":548,"props":549,"children":550},"code",{"__ignoreMap":509},[551,562,571],{"type":516,"tag":552,"props":553,"children":556},"span",{"class":554,"line":555},"line",1,[557],{"type":516,"tag":552,"props":558,"children":559},{},[560],{"type":521,"value":561},"输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n",{"type":516,"tag":552,"props":563,"children":565},{"class":554,"line":564},2,[566],{"type":516,"tag":552,"props":567,"children":568},{},[569],{"type":521,"value":570},"输出：true\n",{"type":516,"tag":552,"props":572,"children":574},{"class":554,"line":573},3,[575],{"type":516,"tag":552,"props":576,"children":577},{},[578],{"type":521,"value":579},"解释：等于目标和的根节点到叶节点路径如上图所示。\n",{"type":516,"tag":517,"props":581,"children":582},{},[583],{"type":521,"value":584},"示例 2：",{"type":516,"tag":517,"props":586,"children":587},{},[588],{"type":516,"tag":536,"props":589,"children":592},{"alt":590,"src":591},"pathsum2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.112_pathsum2.png",[],{"type":516,"tag":542,"props":594,"children":596},{"className":544,"code":595,"language":521,"meta":509,"style":509},"输入：root = [1,2,3], targetSum = 5\n输出：false\n解释：树中存在两条根节点到叶子节点的路径：\n(1 --> 2): 和为 3\n(1 --> 3): 和为 4\n不存在 sum = 5 的根节点到叶子节点的路径。\n",[597],{"type":516,"tag":548,"props":598,"children":599},{"__ignoreMap":509},[600,608,616,624,633,642],{"type":516,"tag":552,"props":601,"children":602},{"class":554,"line":555},[603],{"type":516,"tag":552,"props":604,"children":605},{},[606],{"type":521,"value":607},"输入：root = [1,2,3], targetSum = 5\n",{"type":516,"tag":552,"props":609,"children":610},{"class":554,"line":564},[611],{"type":516,"tag":552,"props":612,"children":613},{},[614],{"type":521,"value":615},"输出：false\n",{"type":516,"tag":552,"props":617,"children":618},{"class":554,"line":573},[619],{"type":516,"tag":552,"props":620,"children":621},{},[622],{"type":521,"value":623},"解释：树中存在两条根节点到叶子节点的路径：\n",{"type":516,"tag":552,"props":625,"children":627},{"class":554,"line":626},4,[628],{"type":516,"tag":552,"props":629,"children":630},{},[631],{"type":521,"value":632},"(1 --> 2): 和为 3\n",{"type":516,"tag":552,"props":634,"children":636},{"class":554,"line":635},5,[637],{"type":516,"tag":552,"props":638,"children":639},{},[640],{"type":521,"value":641},"(1 --> 3): 和为 4\n",{"type":516,"tag":552,"props":643,"children":645},{"class":554,"line":644},6,[646],{"type":516,"tag":552,"props":647,"children":648},{},[649],{"type":521,"value":650},"不存在 sum = 5 的根节点到叶子节点的路径。\n",{"type":516,"tag":517,"props":652,"children":653},{},[654],{"type":521,"value":655},"示例 3：",{"type":516,"tag":542,"props":657,"children":659},{"className":544,"code":658,"language":521,"meta":509,"style":509},"输入：root = [], targetSum = 0\n输出：false\n解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",[660],{"type":516,"tag":548,"props":661,"children":662},{"__ignoreMap":509},[663,671,678],{"type":516,"tag":552,"props":664,"children":665},{"class":554,"line":555},[666],{"type":516,"tag":552,"props":667,"children":668},{},[669],{"type":521,"value":670},"输入：root = [], targetSum = 0\n",{"type":516,"tag":552,"props":672,"children":673},{"class":554,"line":564},[674],{"type":516,"tag":552,"props":675,"children":676},{},[677],{"type":521,"value":615},{"type":516,"tag":552,"props":679,"children":680},{"class":554,"line":573},[681],{"type":516,"tag":552,"props":682,"children":683},{},[684],{"type":521,"value":685},"解释：由于树是空的，所以不存在根节点到叶子节点的路径。\n",{"type":516,"tag":517,"props":687,"children":688},{},[689],{"type":521,"value":690},"提示：",{"type":516,"tag":692,"props":693,"children":694},"ul",{},[695,701,706],{"type":516,"tag":696,"props":697,"children":698},"li",{},[699],{"type":521,"value":700},"树中节点的数目在范围 [0, 5000] 内",{"type":516,"tag":696,"props":702,"children":703},{},[704],{"type":521,"value":705},"-1000 \u003C= Node.val \u003C= 1000",{"type":516,"tag":696,"props":707,"children":708},{},[709],{"type":521,"value":710},"-1000 \u003C= targetSum \u003C= 1000",{"type":516,"tag":712,"props":713,"children":715},"h2",{"id":714},"解题思路",[716],{"type":521,"value":714},{"type":516,"tag":712,"props":718,"children":720},{"id":719},"实现",[721],{"type":521,"value":719},{"type":516,"tag":723,"props":724,"children":726},"h3",{"id":725},"深度优先搜索-dfs",[727],{"type":521,"value":728},"深度优先搜索 - dfs",{"type":516,"tag":542,"props":730,"children":734},{"className":731,"code":732,"language":733,"meta":509,"style":509},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {boolean}\n */\nvar hasPathSum = function (root, targetSum) {\n  if (root === null) return false;\n  if (root.left === null && root.right === null) return root.val === targetSum;\n  return (\n    hasPathSum(root.left, targetSum - root.val) ||\n    hasPathSum(root.right, targetSum - root.val)\n  );\n};\n","js",[735],{"type":516,"tag":548,"props":736,"children":737},{"__ignoreMap":509},[738,747,755,763,819,882,935,988,997,1007,1015,1056,1090,1120,1128,1177,1220,1310,1324,1383,1436,1445],{"type":516,"tag":552,"props":739,"children":740},{"class":554,"line":555},[741],{"type":516,"tag":552,"props":742,"children":744},{"style":743},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[745],{"type":521,"value":746},"/**\n",{"type":516,"tag":552,"props":748,"children":749},{"class":554,"line":564},[750],{"type":516,"tag":552,"props":751,"children":752},{"style":743},[753],{"type":521,"value":754}," * Definition for a binary tree node.\n",{"type":516,"tag":552,"props":756,"children":757},{"class":554,"line":573},[758],{"type":516,"tag":552,"props":759,"children":760},{"style":743},[761],{"type":521,"value":762}," */\n",{"type":516,"tag":552,"props":764,"children":765},{"class":554,"line":626},[766,772,778,784,790,795,800,804,809,814],{"type":516,"tag":552,"props":767,"children":769},{"style":768},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[770],{"type":521,"value":771},"function",{"type":516,"tag":552,"props":773,"children":775},{"style":774},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[776],{"type":521,"value":777}," TreeNode",{"type":516,"tag":552,"props":779,"children":781},{"style":780},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[782],{"type":521,"value":783},"(",{"type":516,"tag":552,"props":785,"children":787},{"style":786},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[788],{"type":521,"value":789},"val",{"type":516,"tag":552,"props":791,"children":792},{"style":780},[793],{"type":521,"value":794},",",{"type":516,"tag":552,"props":796,"children":797},{"style":786},[798],{"type":521,"value":799}," left",{"type":516,"tag":552,"props":801,"children":802},{"style":780},[803],{"type":521,"value":794},{"type":516,"tag":552,"props":805,"children":806},{"style":786},[807],{"type":521,"value":808}," right",{"type":516,"tag":552,"props":810,"children":811},{"style":780},[812],{"type":521,"value":813},")",{"type":516,"tag":552,"props":815,"children":816},{"style":780},[817],{"type":521,"value":818}," {\n",{"type":516,"tag":552,"props":820,"children":821},{"class":554,"line":635},[822,828,833,837,842,847,852,857,862,868,873,877],{"type":516,"tag":552,"props":823,"children":825},{"style":824},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[826],{"type":521,"value":827},"  this",{"type":516,"tag":552,"props":829,"children":830},{"style":780},[831],{"type":521,"value":832},".",{"type":516,"tag":552,"props":834,"children":835},{"style":786},[836],{"type":521,"value":789},{"type":516,"tag":552,"props":838,"children":839},{"style":780},[840],{"type":521,"value":841}," =",{"type":516,"tag":552,"props":843,"children":844},{"style":786},[845],{"type":521,"value":846}," val",{"type":516,"tag":552,"props":848,"children":849},{"style":768},[850],{"type":521,"value":851}," ===",{"type":516,"tag":552,"props":853,"children":854},{"style":768},[855],{"type":521,"value":856}," undefined",{"type":516,"tag":552,"props":858,"children":859},{"style":768},[860],{"type":521,"value":861}," ?",{"type":516,"tag":552,"props":863,"children":865},{"style":864},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[866],{"type":521,"value":867}," 0",{"type":516,"tag":552,"props":869,"children":870},{"style":768},[871],{"type":521,"value":872}," :",{"type":516,"tag":552,"props":874,"children":875},{"style":786},[876],{"type":521,"value":846},{"type":516,"tag":552,"props":878,"children":879},{"style":780},[880],{"type":521,"value":881},";\n",{"type":516,"tag":552,"props":883,"children":884},{"class":554,"line":644},[885,889,893,898,902,906,910,914,918,923,927,931],{"type":516,"tag":552,"props":886,"children":887},{"style":824},[888],{"type":521,"value":827},{"type":516,"tag":552,"props":890,"children":891},{"style":780},[892],{"type":521,"value":832},{"type":516,"tag":552,"props":894,"children":895},{"style":786},[896],{"type":521,"value":897},"left",{"type":516,"tag":552,"props":899,"children":900},{"style":780},[901],{"type":521,"value":841},{"type":516,"tag":552,"props":903,"children":904},{"style":786},[905],{"type":521,"value":799},{"type":516,"tag":552,"props":907,"children":908},{"style":768},[909],{"type":521,"value":851},{"type":516,"tag":552,"props":911,"children":912},{"style":768},[913],{"type":521,"value":856},{"type":516,"tag":552,"props":915,"children":916},{"style":768},[917],{"type":521,"value":861},{"type":516,"tag":552,"props":919,"children":920},{"style":768},[921],{"type":521,"value":922}," null",{"type":516,"tag":552,"props":924,"children":925},{"style":768},[926],{"type":521,"value":872},{"type":516,"tag":552,"props":928,"children":929},{"style":786},[930],{"type":521,"value":799},{"type":516,"tag":552,"props":932,"children":933},{"style":780},[934],{"type":521,"value":881},{"type":516,"tag":552,"props":936,"children":938},{"class":554,"line":937},7,[939,943,947,952,956,960,964,968,972,976,980,984],{"type":516,"tag":552,"props":940,"children":941},{"style":824},[942],{"type":521,"value":827},{"type":516,"tag":552,"props":944,"children":945},{"style":780},[946],{"type":521,"value":832},{"type":516,"tag":552,"props":948,"children":949},{"style":786},[950],{"type":521,"value":951},"right",{"type":516,"tag":552,"props":953,"children":954},{"style":780},[955],{"type":521,"value":841},{"type":516,"tag":552,"props":957,"children":958},{"style":786},[959],{"type":521,"value":808},{"type":516,"tag":552,"props":961,"children":962},{"style":768},[963],{"type":521,"value":851},{"type":516,"tag":552,"props":965,"children":966},{"style":768},[967],{"type":521,"value":856},{"type":516,"tag":552,"props":969,"children":970},{"style":768},[971],{"type":521,"value":861},{"type":516,"tag":552,"props":973,"children":974},{"style":768},[975],{"type":521,"value":922},{"type":516,"tag":552,"props":977,"children":978},{"style":768},[979],{"type":521,"value":872},{"type":516,"tag":552,"props":981,"children":982},{"style":786},[983],{"type":521,"value":808},{"type":516,"tag":552,"props":985,"children":986},{"style":780},[987],{"type":521,"value":881},{"type":516,"tag":552,"props":989,"children":991},{"class":554,"line":990},8,[992],{"type":516,"tag":552,"props":993,"children":994},{"style":780},[995],{"type":521,"value":996},"}\n",{"type":516,"tag":552,"props":998,"children":1000},{"class":554,"line":999},9,[1001],{"type":516,"tag":552,"props":1002,"children":1004},{"emptyLinePlaceholder":1003},true,[1005],{"type":521,"value":1006},"\n",{"type":516,"tag":552,"props":1008,"children":1010},{"class":554,"line":1009},10,[1011],{"type":516,"tag":552,"props":1012,"children":1013},{"style":743},[1014],{"type":521,"value":746},{"type":516,"tag":552,"props":1016,"children":1018},{"class":554,"line":1017},11,[1019,1024,1029,1035,1040,1046,1051],{"type":516,"tag":552,"props":1020,"children":1021},{"style":743},[1022],{"type":521,"value":1023}," * ",{"type":516,"tag":552,"props":1025,"children":1026},{"style":780},[1027],{"type":521,"value":1028},"@",{"type":516,"tag":552,"props":1030,"children":1032},{"style":1031},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[1033],{"type":521,"value":1034},"param",{"type":516,"tag":552,"props":1036,"children":1037},{"style":780},[1038],{"type":521,"value":1039}," {",{"type":516,"tag":552,"props":1041,"children":1043},{"style":1042},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[1044],{"type":521,"value":1045},"TreeNode",{"type":516,"tag":552,"props":1047,"children":1048},{"style":780},[1049],{"type":521,"value":1050},"}",{"type":516,"tag":552,"props":1052,"children":1053},{"style":786},[1054],{"type":521,"value":1055}," root\n",{"type":516,"tag":552,"props":1057,"children":1059},{"class":554,"line":1058},12,[1060,1064,1068,1072,1076,1081,1085],{"type":516,"tag":552,"props":1061,"children":1062},{"style":743},[1063],{"type":521,"value":1023},{"type":516,"tag":552,"props":1065,"children":1066},{"style":780},[1067],{"type":521,"value":1028},{"type":516,"tag":552,"props":1069,"children":1070},{"style":1031},[1071],{"type":521,"value":1034},{"type":516,"tag":552,"props":1073,"children":1074},{"style":780},[1075],{"type":521,"value":1039},{"type":516,"tag":552,"props":1077,"children":1078},{"style":1042},[1079],{"type":521,"value":1080},"number",{"type":516,"tag":552,"props":1082,"children":1083},{"style":780},[1084],{"type":521,"value":1050},{"type":516,"tag":552,"props":1086,"children":1087},{"style":786},[1088],{"type":521,"value":1089}," targetSum\n",{"type":516,"tag":552,"props":1091,"children":1093},{"class":554,"line":1092},13,[1094,1098,1102,1107,1111,1116],{"type":516,"tag":552,"props":1095,"children":1096},{"style":743},[1097],{"type":521,"value":1023},{"type":516,"tag":552,"props":1099,"children":1100},{"style":780},[1101],{"type":521,"value":1028},{"type":516,"tag":552,"props":1103,"children":1104},{"style":1031},[1105],{"type":521,"value":1106},"return",{"type":516,"tag":552,"props":1108,"children":1109},{"style":780},[1110],{"type":521,"value":1039},{"type":516,"tag":552,"props":1112,"children":1113},{"style":1042},[1114],{"type":521,"value":1115},"boolean",{"type":516,"tag":552,"props":1117,"children":1118},{"style":780},[1119],{"type":521,"value":996},{"type":516,"tag":552,"props":1121,"children":1123},{"class":554,"line":1122},14,[1124],{"type":516,"tag":552,"props":1125,"children":1126},{"style":743},[1127],{"type":521,"value":762},{"type":516,"tag":552,"props":1129,"children":1131},{"class":554,"line":1130},15,[1132,1137,1142,1146,1151,1156,1160,1164,1169,1173],{"type":516,"tag":552,"props":1133,"children":1134},{"style":768},[1135],{"type":521,"value":1136},"var",{"type":516,"tag":552,"props":1138,"children":1139},{"style":774},[1140],{"type":521,"value":1141}," hasPathSum",{"type":516,"tag":552,"props":1143,"children":1144},{"style":780},[1145],{"type":521,"value":841},{"type":516,"tag":552,"props":1147,"children":1148},{"style":768},[1149],{"type":521,"value":1150}," function",{"type":516,"tag":552,"props":1152,"children":1153},{"style":780},[1154],{"type":521,"value":1155}," (",{"type":516,"tag":552,"props":1157,"children":1158},{"style":786},[1159],{"type":521,"value":513},{"type":516,"tag":552,"props":1161,"children":1162},{"style":780},[1163],{"type":521,"value":794},{"type":516,"tag":552,"props":1165,"children":1166},{"style":786},[1167],{"type":521,"value":1168}," targetSum",{"type":516,"tag":552,"props":1170,"children":1171},{"style":780},[1172],{"type":521,"value":813},{"type":516,"tag":552,"props":1174,"children":1175},{"style":780},[1176],{"type":521,"value":818},{"type":516,"tag":552,"props":1178,"children":1180},{"class":554,"line":1179},16,[1181,1186,1190,1194,1198,1202,1206,1211,1216],{"type":516,"tag":552,"props":1182,"children":1183},{"style":1031},[1184],{"type":521,"value":1185},"  if",{"type":516,"tag":552,"props":1187,"children":1188},{"style":780},[1189],{"type":521,"value":1155},{"type":516,"tag":552,"props":1191,"children":1192},{"style":786},[1193],{"type":521,"value":513},{"type":516,"tag":552,"props":1195,"children":1196},{"style":768},[1197],{"type":521,"value":851},{"type":516,"tag":552,"props":1199,"children":1200},{"style":768},[1201],{"type":521,"value":922},{"type":516,"tag":552,"props":1203,"children":1204},{"style":780},[1205],{"type":521,"value":813},{"type":516,"tag":552,"props":1207,"children":1208},{"style":1031},[1209],{"type":521,"value":1210}," return",{"type":516,"tag":552,"props":1212,"children":1213},{"style":1031},[1214],{"type":521,"value":1215}," false",{"type":516,"tag":552,"props":1217,"children":1218},{"style":780},[1219],{"type":521,"value":881},{"type":516,"tag":552,"props":1221,"children":1223},{"class":554,"line":1222},17,[1224,1228,1232,1236,1240,1244,1248,1252,1257,1262,1266,1270,1274,1278,1282,1286,1290,1294,1298,1302,1306],{"type":516,"tag":552,"props":1225,"children":1226},{"style":1031},[1227],{"type":521,"value":1185},{"type":516,"tag":552,"props":1229,"children":1230},{"style":780},[1231],{"type":521,"value":1155},{"type":516,"tag":552,"props":1233,"children":1234},{"style":786},[1235],{"type":521,"value":513},{"type":516,"tag":552,"props":1237,"children":1238},{"style":780},[1239],{"type":521,"value":832},{"type":516,"tag":552,"props":1241,"children":1242},{"style":786},[1243],{"type":521,"value":897},{"type":516,"tag":552,"props":1245,"children":1246},{"style":768},[1247],{"type":521,"value":851},{"type":516,"tag":552,"props":1249,"children":1250},{"style":768},[1251],{"type":521,"value":922},{"type":516,"tag":552,"props":1253,"children":1254},{"style":768},[1255],{"type":521,"value":1256}," &&",{"type":516,"tag":552,"props":1258,"children":1259},{"style":786},[1260],{"type":521,"value":1261}," root",{"type":516,"tag":552,"props":1263,"children":1264},{"style":780},[1265],{"type":521,"value":832},{"type":516,"tag":552,"props":1267,"children":1268},{"style":786},[1269],{"type":521,"value":951},{"type":516,"tag":552,"props":1271,"children":1272},{"style":768},[1273],{"type":521,"value":851},{"type":516,"tag":552,"props":1275,"children":1276},{"style":768},[1277],{"type":521,"value":922},{"type":516,"tag":552,"props":1279,"children":1280},{"style":780},[1281],{"type":521,"value":813},{"type":516,"tag":552,"props":1283,"children":1284},{"style":1031},[1285],{"type":521,"value":1210},{"type":516,"tag":552,"props":1287,"children":1288},{"style":786},[1289],{"type":521,"value":1261},{"type":516,"tag":552,"props":1291,"children":1292},{"style":780},[1293],{"type":521,"value":832},{"type":516,"tag":552,"props":1295,"children":1296},{"style":786},[1297],{"type":521,"value":789},{"type":516,"tag":552,"props":1299,"children":1300},{"style":768},[1301],{"type":521,"value":851},{"type":516,"tag":552,"props":1303,"children":1304},{"style":786},[1305],{"type":521,"value":1168},{"type":516,"tag":552,"props":1307,"children":1308},{"style":780},[1309],{"type":521,"value":881},{"type":516,"tag":552,"props":1311,"children":1313},{"class":554,"line":1312},18,[1314,1319],{"type":516,"tag":552,"props":1315,"children":1316},{"style":1031},[1317],{"type":521,"value":1318},"  return",{"type":516,"tag":552,"props":1320,"children":1321},{"style":780},[1322],{"type":521,"value":1323}," (\n",{"type":516,"tag":552,"props":1325,"children":1327},{"class":554,"line":1326},19,[1328,1333,1337,1341,1345,1349,1353,1357,1362,1366,1370,1374,1378],{"type":516,"tag":552,"props":1329,"children":1330},{"style":774},[1331],{"type":521,"value":1332},"    hasPathSum",{"type":516,"tag":552,"props":1334,"children":1335},{"style":780},[1336],{"type":521,"value":783},{"type":516,"tag":552,"props":1338,"children":1339},{"style":786},[1340],{"type":521,"value":513},{"type":516,"tag":552,"props":1342,"children":1343},{"style":780},[1344],{"type":521,"value":832},{"type":516,"tag":552,"props":1346,"children":1347},{"style":786},[1348],{"type":521,"value":897},{"type":516,"tag":552,"props":1350,"children":1351},{"style":780},[1352],{"type":521,"value":794},{"type":516,"tag":552,"props":1354,"children":1355},{"style":786},[1356],{"type":521,"value":1168},{"type":516,"tag":552,"props":1358,"children":1359},{"style":768},[1360],{"type":521,"value":1361}," -",{"type":516,"tag":552,"props":1363,"children":1364},{"style":786},[1365],{"type":521,"value":1261},{"type":516,"tag":552,"props":1367,"children":1368},{"style":780},[1369],{"type":521,"value":832},{"type":516,"tag":552,"props":1371,"children":1372},{"style":786},[1373],{"type":521,"value":789},{"type":516,"tag":552,"props":1375,"children":1376},{"style":780},[1377],{"type":521,"value":813},{"type":516,"tag":552,"props":1379,"children":1380},{"style":768},[1381],{"type":521,"value":1382}," ||\n",{"type":516,"tag":552,"props":1384,"children":1386},{"class":554,"line":1385},20,[1387,1391,1395,1399,1403,1407,1411,1415,1419,1423,1427,1431],{"type":516,"tag":552,"props":1388,"children":1389},{"style":774},[1390],{"type":521,"value":1332},{"type":516,"tag":552,"props":1392,"children":1393},{"style":780},[1394],{"type":521,"value":783},{"type":516,"tag":552,"props":1396,"children":1397},{"style":786},[1398],{"type":521,"value":513},{"type":516,"tag":552,"props":1400,"children":1401},{"style":780},[1402],{"type":521,"value":832},{"type":516,"tag":552,"props":1404,"children":1405},{"style":786},[1406],{"type":521,"value":951},{"type":516,"tag":552,"props":1408,"children":1409},{"style":780},[1410],{"type":521,"value":794},{"type":516,"tag":552,"props":1412,"children":1413},{"style":786},[1414],{"type":521,"value":1168},{"type":516,"tag":552,"props":1416,"children":1417},{"style":768},[1418],{"type":521,"value":1361},{"type":516,"tag":552,"props":1420,"children":1421},{"style":786},[1422],{"type":521,"value":1261},{"type":516,"tag":552,"props":1424,"children":1425},{"style":780},[1426],{"type":521,"value":832},{"type":516,"tag":552,"props":1428,"children":1429},{"style":786},[1430],{"type":521,"value":789},{"type":516,"tag":552,"props":1432,"children":1433},{"style":780},[1434],{"type":521,"value":1435},")\n",{"type":516,"tag":552,"props":1437,"children":1439},{"class":554,"line":1438},21,[1440],{"type":516,"tag":552,"props":1441,"children":1442},{"style":780},[1443],{"type":521,"value":1444},"  );\n",{"type":516,"tag":552,"props":1446,"children":1448},{"class":554,"line":1447},22,[1449],{"type":516,"tag":552,"props":1450,"children":1451},{"style":780},[1452],{"type":521,"value":1453},"};\n",{"type":516,"tag":1455,"props":1456,"children":1457},"style",{},[1458],{"type":521,"value":1459},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":509,"searchDepth":635,"depth":635,"links":1461},[1462,1463],{"id":714,"depth":564,"text":714},{"id":719,"depth":564,"text":719,"children":1464},[1465],{"id":725,"depth":573,"text":728},"markdown","content:1.algorithm:3.leetcode:3.major:112.path-sum.md","content","1.algorithm/3.leetcode/3.major/112.path-sum.md","md",[1472,1474],{"_path":159,"title":158,"description":1473},"给定一个二叉树，找出其最小深度。",{"_path":165,"title":164,"description":1475},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",1714058126526]