[{"data":1,"prerenderedAt":1204},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/sqrtx":540,"/algorithm/leetcode/major/sqrtx-surround":1199},[4,269,298,508,516,525],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":507},"代码考核","/code-assessment",[302,401,500],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,334,350,378,385,392,395,398],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333},"extends","/code-assessment/source/native-api/extends",{"title":335,"_path":336,"children":337},"函数 Function","/code-assessment/source/function",[338,341,344,347],{"title":339,"_path":340},"函数防抖","/code-assessment/source/function/debounce",{"title":342,"_path":343},"函数节流","/code-assessment/source/function/throttle",{"title":345,"_path":346},"函数柯理化","/code-assessment/source/function/curry",{"title":348,"_path":349},"函数睡眠","/code-assessment/source/function/sleep",{"title":351,"_path":352,"children":353},"数组 Array","/code-assessment/source/array",[354,357,360,363,366,369,372,375],{"title":355,"_path":356},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":358,"_path":359},"数组扁平化","/code-assessment/source/array/flat",{"title":361,"_path":362},"原型方法","/code-assessment/source/array/prototype-method",{"title":364,"_path":365},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":367,"_path":368},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":370,"_path":371},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":373,"_path":374},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":376,"_path":377},"二维数组","/code-assessment/source/array/2d-array",{"title":379,"_path":380,"children":381},"字符串 String","/code-assessment/source/string",[382],{"title":383,"_path":384},"repeat()","/code-assessment/source/string/repeat",{"title":386,"_path":387,"children":388},"集合 Set","/code-assessment/source/set",[389],{"title":390,"_path":391},"遍历集合","/code-assessment/source/set/traverse",{"title":393,"_path":394},"获取通用类型","/code-assessment/source/get-generic-type",{"title":396,"_path":397},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":399,"_path":400},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":402,"_path":403,"children":404},"业务场景","/code-assessment/scene",[405,436,446,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497],{"title":406,"_path":407,"children":408},"Promise","/code-assessment/scene/promise",[409,412,415,418,421,424,427,430,433],{"title":410,"_path":411},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":413,"_path":414},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":416,"_path":417},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":419,"_path":420},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":422,"_path":423},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":425,"_path":426},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":428,"_path":429},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":431,"_path":432},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":434,"_path":435},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":437,"_path":438,"children":439},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[440,443],{"title":441,"_path":442},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":444,"_path":445},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":447,"_path":448},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":450,"_path":451},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":453,"_path":454},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":456,"_path":457},"倒计时","/code-assessment/scene/countdown",{"title":459,"_path":460},"日期格式化","/code-assessment/scene/date-format",{"title":462,"_path":463},"实现前端路由","/code-assessment/scene/frontend-route",{"title":465,"_path":466},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":468,"_path":469},"lodash.get","/code-assessment/scene/lodash-get",{"title":471,"_path":472},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":474,"_path":475},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":477,"_path":478},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":480,"_path":481},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":483,"_path":484},"随机数","/code-assessment/scene/random-number",{"title":486,"_path":487},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":489,"_path":490},"sku 算法实现","/code-assessment/scene/sku",{"title":492,"_path":493},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":495,"_path":496},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":498,"_path":499},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":501,"_path":502,"children":503},"Ts 类型挑战","/code-assessment/type-challeges",[504],{"title":505,"_path":506},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":509,"_path":510,"children":511,"icon":515},"项目","/project",[512],{"title":513,"_path":514},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":517,"_path":518,"children":519,"icon":524},"设计模式","/design-mode",[520,521],{"title":517,"_path":518},{"title":522,"_path":523},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":526,"_path":527,"children":528,"icon":539},"后端语言","/backend-languages",[529],{"title":530,"_path":531,"children":532},"Python","/backend-languages/python",[533,536],{"title":534,"_path":535},"基础","/backend-languages/python/base",{"title":537,"_path":538},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":135,"_dir":541,"_draft":542,"_partial":542,"_locale":543,"title":134,"description":544,"url":545,"body":546,"_type":1194,"_id":1195,"_source":1196,"_file":1197,"_extension":1198},"major",false,"","给你一个非负整数 x ，计算并返回 x 的 算术平方根 。","https://leetcode.cn/problems/sqrtx",{"type":547,"children":548,"toc":1188},"root",[549,556,561,566,571,601,606,637,642,652,658,663,669,1182],{"type":550,"tag":551,"props":552,"children":553},"element","p",{},[554],{"type":555,"value":544},"text",{"type":550,"tag":551,"props":557,"children":558},{},[559],{"type":555,"value":560},"由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。",{"type":550,"tag":551,"props":562,"children":563},{},[564],{"type":555,"value":565},"注意：不允许使用任何内置指数函数和算符，例如 pow(x, 0.5) 或者 x ** 0.5 。",{"type":550,"tag":551,"props":567,"children":568},{},[569],{"type":555,"value":570},"示例 1：",{"type":550,"tag":572,"props":573,"children":576},"pre",{"className":574,"code":575,"language":555,"meta":543,"style":543},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：x = 4\n输出：2\n",[577],{"type":550,"tag":578,"props":579,"children":580},"code",{"__ignoreMap":543},[581,592],{"type":550,"tag":582,"props":583,"children":586},"span",{"class":584,"line":585},"line",1,[587],{"type":550,"tag":582,"props":588,"children":589},{},[590],{"type":555,"value":591},"输入：x = 4\n",{"type":550,"tag":582,"props":593,"children":595},{"class":584,"line":594},2,[596],{"type":550,"tag":582,"props":597,"children":598},{},[599],{"type":555,"value":600},"输出：2\n",{"type":550,"tag":551,"props":602,"children":603},{},[604],{"type":555,"value":605},"示例 2：",{"type":550,"tag":572,"props":607,"children":609},{"className":574,"code":608,"language":555,"meta":543,"style":543},"输入：x = 8\n输出：2\n解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。\n",[610],{"type":550,"tag":578,"props":611,"children":612},{"__ignoreMap":543},[613,621,628],{"type":550,"tag":582,"props":614,"children":615},{"class":584,"line":585},[616],{"type":550,"tag":582,"props":617,"children":618},{},[619],{"type":555,"value":620},"输入：x = 8\n",{"type":550,"tag":582,"props":622,"children":623},{"class":584,"line":594},[624],{"type":550,"tag":582,"props":625,"children":626},{},[627],{"type":555,"value":600},{"type":550,"tag":582,"props":629,"children":631},{"class":584,"line":630},3,[632],{"type":550,"tag":582,"props":633,"children":634},{},[635],{"type":555,"value":636},"解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。\n",{"type":550,"tag":551,"props":638,"children":639},{},[640],{"type":555,"value":641},"提示：",{"type":550,"tag":643,"props":644,"children":645},"ul",{},[646],{"type":550,"tag":647,"props":648,"children":649},"li",{},[650],{"type":555,"value":651},"0 \u003C= x \u003C= 2^31 - 1",{"type":550,"tag":653,"props":654,"children":656},"h2",{"id":655},"解题思路",[657],{"type":555,"value":655},{"type":550,"tag":653,"props":659,"children":661},{"id":660},"实现",[662],{"type":555,"value":660},{"type":550,"tag":664,"props":665,"children":667},"h3",{"id":666},"二分查找",[668],{"type":555,"value":666},{"type":550,"tag":572,"props":670,"children":674},{"className":671,"code":672,"language":673,"meta":543,"style":543},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} x\n * @return {number}\n */\nvar mySqrt = function (x) {\n  let left = 0;\n  let right = x;\n  let answer = -1;\n  while (left \u003C= right) {\n    let middle = left + ((right - left) >> 1);\n    if (middle * middle \u003C= x) {\n      answer = middle;\n      left = middle + 1;\n    } else {\n      right = middle - 1;\n    }\n  }\n  return answer;\n};\n","js",[675],{"type":550,"tag":578,"props":676,"children":677},{"__ignoreMap":543},[678,687,729,758,767,813,842,868,899,934,998,1041,1062,1091,1109,1138,1147,1156,1173],{"type":550,"tag":582,"props":679,"children":680},{"class":584,"line":585},[681],{"type":550,"tag":582,"props":682,"children":684},{"style":683},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[685],{"type":555,"value":686},"/**\n",{"type":550,"tag":582,"props":688,"children":689},{"class":584,"line":594},[690,695,701,707,712,718,723],{"type":550,"tag":582,"props":691,"children":692},{"style":683},[693],{"type":555,"value":694}," * ",{"type":550,"tag":582,"props":696,"children":698},{"style":697},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[699],{"type":555,"value":700},"@",{"type":550,"tag":582,"props":702,"children":704},{"style":703},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[705],{"type":555,"value":706},"param",{"type":550,"tag":582,"props":708,"children":709},{"style":697},[710],{"type":555,"value":711}," {",{"type":550,"tag":582,"props":713,"children":715},{"style":714},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[716],{"type":555,"value":717},"number",{"type":550,"tag":582,"props":719,"children":720},{"style":697},[721],{"type":555,"value":722},"}",{"type":550,"tag":582,"props":724,"children":726},{"style":725},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[727],{"type":555,"value":728}," x\n",{"type":550,"tag":582,"props":730,"children":731},{"class":584,"line":630},[732,736,740,745,749,753],{"type":550,"tag":582,"props":733,"children":734},{"style":683},[735],{"type":555,"value":694},{"type":550,"tag":582,"props":737,"children":738},{"style":697},[739],{"type":555,"value":700},{"type":550,"tag":582,"props":741,"children":742},{"style":703},[743],{"type":555,"value":744},"return",{"type":550,"tag":582,"props":746,"children":747},{"style":697},[748],{"type":555,"value":711},{"type":550,"tag":582,"props":750,"children":751},{"style":714},[752],{"type":555,"value":717},{"type":550,"tag":582,"props":754,"children":755},{"style":697},[756],{"type":555,"value":757},"}\n",{"type":550,"tag":582,"props":759,"children":761},{"class":584,"line":760},4,[762],{"type":550,"tag":582,"props":763,"children":764},{"style":683},[765],{"type":555,"value":766}," */\n",{"type":550,"tag":582,"props":768,"children":770},{"class":584,"line":769},5,[771,777,783,788,793,798,803,808],{"type":550,"tag":582,"props":772,"children":774},{"style":773},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[775],{"type":555,"value":776},"var",{"type":550,"tag":582,"props":778,"children":780},{"style":779},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[781],{"type":555,"value":782}," mySqrt",{"type":550,"tag":582,"props":784,"children":785},{"style":697},[786],{"type":555,"value":787}," =",{"type":550,"tag":582,"props":789,"children":790},{"style":773},[791],{"type":555,"value":792}," function",{"type":550,"tag":582,"props":794,"children":795},{"style":697},[796],{"type":555,"value":797}," (",{"type":550,"tag":582,"props":799,"children":800},{"style":725},[801],{"type":555,"value":802},"x",{"type":550,"tag":582,"props":804,"children":805},{"style":697},[806],{"type":555,"value":807},")",{"type":550,"tag":582,"props":809,"children":810},{"style":697},[811],{"type":555,"value":812}," {\n",{"type":550,"tag":582,"props":814,"children":816},{"class":584,"line":815},6,[817,822,827,831,837],{"type":550,"tag":582,"props":818,"children":819},{"style":773},[820],{"type":555,"value":821},"  let",{"type":550,"tag":582,"props":823,"children":824},{"style":725},[825],{"type":555,"value":826}," left",{"type":550,"tag":582,"props":828,"children":829},{"style":697},[830],{"type":555,"value":787},{"type":550,"tag":582,"props":832,"children":834},{"style":833},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[835],{"type":555,"value":836}," 0",{"type":550,"tag":582,"props":838,"children":839},{"style":697},[840],{"type":555,"value":841},";\n",{"type":550,"tag":582,"props":843,"children":845},{"class":584,"line":844},7,[846,850,855,859,864],{"type":550,"tag":582,"props":847,"children":848},{"style":773},[849],{"type":555,"value":821},{"type":550,"tag":582,"props":851,"children":852},{"style":725},[853],{"type":555,"value":854}," right",{"type":550,"tag":582,"props":856,"children":857},{"style":697},[858],{"type":555,"value":787},{"type":550,"tag":582,"props":860,"children":861},{"style":725},[862],{"type":555,"value":863}," x",{"type":550,"tag":582,"props":865,"children":866},{"style":697},[867],{"type":555,"value":841},{"type":550,"tag":582,"props":869,"children":871},{"class":584,"line":870},8,[872,876,881,885,890,895],{"type":550,"tag":582,"props":873,"children":874},{"style":773},[875],{"type":555,"value":821},{"type":550,"tag":582,"props":877,"children":878},{"style":725},[879],{"type":555,"value":880}," answer",{"type":550,"tag":582,"props":882,"children":883},{"style":697},[884],{"type":555,"value":787},{"type":550,"tag":582,"props":886,"children":887},{"style":773},[888],{"type":555,"value":889}," -",{"type":550,"tag":582,"props":891,"children":892},{"style":833},[893],{"type":555,"value":894},"1",{"type":550,"tag":582,"props":896,"children":897},{"style":697},[898],{"type":555,"value":841},{"type":550,"tag":582,"props":900,"children":902},{"class":584,"line":901},9,[903,908,912,917,922,926,930],{"type":550,"tag":582,"props":904,"children":905},{"style":703},[906],{"type":555,"value":907},"  while",{"type":550,"tag":582,"props":909,"children":910},{"style":697},[911],{"type":555,"value":797},{"type":550,"tag":582,"props":913,"children":914},{"style":725},[915],{"type":555,"value":916},"left",{"type":550,"tag":582,"props":918,"children":919},{"style":697},[920],{"type":555,"value":921}," \u003C=",{"type":550,"tag":582,"props":923,"children":924},{"style":725},[925],{"type":555,"value":854},{"type":550,"tag":582,"props":927,"children":928},{"style":697},[929],{"type":555,"value":807},{"type":550,"tag":582,"props":931,"children":932},{"style":697},[933],{"type":555,"value":812},{"type":550,"tag":582,"props":935,"children":937},{"class":584,"line":936},10,[938,943,948,952,956,961,966,971,975,979,983,988,993],{"type":550,"tag":582,"props":939,"children":940},{"style":773},[941],{"type":555,"value":942},"    let",{"type":550,"tag":582,"props":944,"children":945},{"style":725},[946],{"type":555,"value":947}," middle",{"type":550,"tag":582,"props":949,"children":950},{"style":697},[951],{"type":555,"value":787},{"type":550,"tag":582,"props":953,"children":954},{"style":725},[955],{"type":555,"value":826},{"type":550,"tag":582,"props":957,"children":958},{"style":773},[959],{"type":555,"value":960}," +",{"type":550,"tag":582,"props":962,"children":963},{"style":697},[964],{"type":555,"value":965}," ((",{"type":550,"tag":582,"props":967,"children":968},{"style":725},[969],{"type":555,"value":970},"right",{"type":550,"tag":582,"props":972,"children":973},{"style":773},[974],{"type":555,"value":889},{"type":550,"tag":582,"props":976,"children":977},{"style":725},[978],{"type":555,"value":826},{"type":550,"tag":582,"props":980,"children":981},{"style":697},[982],{"type":555,"value":807},{"type":550,"tag":582,"props":984,"children":985},{"style":773},[986],{"type":555,"value":987}," >>",{"type":550,"tag":582,"props":989,"children":990},{"style":833},[991],{"type":555,"value":992}," 1",{"type":550,"tag":582,"props":994,"children":995},{"style":697},[996],{"type":555,"value":997},");\n",{"type":550,"tag":582,"props":999,"children":1001},{"class":584,"line":1000},11,[1002,1007,1011,1016,1021,1025,1029,1033,1037],{"type":550,"tag":582,"props":1003,"children":1004},{"style":703},[1005],{"type":555,"value":1006},"    if",{"type":550,"tag":582,"props":1008,"children":1009},{"style":697},[1010],{"type":555,"value":797},{"type":550,"tag":582,"props":1012,"children":1013},{"style":725},[1014],{"type":555,"value":1015},"middle",{"type":550,"tag":582,"props":1017,"children":1018},{"style":773},[1019],{"type":555,"value":1020}," *",{"type":550,"tag":582,"props":1022,"children":1023},{"style":725},[1024],{"type":555,"value":947},{"type":550,"tag":582,"props":1026,"children":1027},{"style":697},[1028],{"type":555,"value":921},{"type":550,"tag":582,"props":1030,"children":1031},{"style":725},[1032],{"type":555,"value":863},{"type":550,"tag":582,"props":1034,"children":1035},{"style":697},[1036],{"type":555,"value":807},{"type":550,"tag":582,"props":1038,"children":1039},{"style":697},[1040],{"type":555,"value":812},{"type":550,"tag":582,"props":1042,"children":1044},{"class":584,"line":1043},12,[1045,1050,1054,1058],{"type":550,"tag":582,"props":1046,"children":1047},{"style":725},[1048],{"type":555,"value":1049},"      answer",{"type":550,"tag":582,"props":1051,"children":1052},{"style":697},[1053],{"type":555,"value":787},{"type":550,"tag":582,"props":1055,"children":1056},{"style":725},[1057],{"type":555,"value":947},{"type":550,"tag":582,"props":1059,"children":1060},{"style":697},[1061],{"type":555,"value":841},{"type":550,"tag":582,"props":1063,"children":1065},{"class":584,"line":1064},13,[1066,1071,1075,1079,1083,1087],{"type":550,"tag":582,"props":1067,"children":1068},{"style":725},[1069],{"type":555,"value":1070},"      left",{"type":550,"tag":582,"props":1072,"children":1073},{"style":697},[1074],{"type":555,"value":787},{"type":550,"tag":582,"props":1076,"children":1077},{"style":725},[1078],{"type":555,"value":947},{"type":550,"tag":582,"props":1080,"children":1081},{"style":773},[1082],{"type":555,"value":960},{"type":550,"tag":582,"props":1084,"children":1085},{"style":833},[1086],{"type":555,"value":992},{"type":550,"tag":582,"props":1088,"children":1089},{"style":697},[1090],{"type":555,"value":841},{"type":550,"tag":582,"props":1092,"children":1094},{"class":584,"line":1093},14,[1095,1100,1105],{"type":550,"tag":582,"props":1096,"children":1097},{"style":697},[1098],{"type":555,"value":1099},"    }",{"type":550,"tag":582,"props":1101,"children":1102},{"style":703},[1103],{"type":555,"value":1104}," else",{"type":550,"tag":582,"props":1106,"children":1107},{"style":697},[1108],{"type":555,"value":812},{"type":550,"tag":582,"props":1110,"children":1112},{"class":584,"line":1111},15,[1113,1118,1122,1126,1130,1134],{"type":550,"tag":582,"props":1114,"children":1115},{"style":725},[1116],{"type":555,"value":1117},"      right",{"type":550,"tag":582,"props":1119,"children":1120},{"style":697},[1121],{"type":555,"value":787},{"type":550,"tag":582,"props":1123,"children":1124},{"style":725},[1125],{"type":555,"value":947},{"type":550,"tag":582,"props":1127,"children":1128},{"style":773},[1129],{"type":555,"value":889},{"type":550,"tag":582,"props":1131,"children":1132},{"style":833},[1133],{"type":555,"value":992},{"type":550,"tag":582,"props":1135,"children":1136},{"style":697},[1137],{"type":555,"value":841},{"type":550,"tag":582,"props":1139,"children":1141},{"class":584,"line":1140},16,[1142],{"type":550,"tag":582,"props":1143,"children":1144},{"style":697},[1145],{"type":555,"value":1146},"    }\n",{"type":550,"tag":582,"props":1148,"children":1150},{"class":584,"line":1149},17,[1151],{"type":550,"tag":582,"props":1152,"children":1153},{"style":697},[1154],{"type":555,"value":1155},"  }\n",{"type":550,"tag":582,"props":1157,"children":1159},{"class":584,"line":1158},18,[1160,1165,1169],{"type":550,"tag":582,"props":1161,"children":1162},{"style":703},[1163],{"type":555,"value":1164},"  return",{"type":550,"tag":582,"props":1166,"children":1167},{"style":725},[1168],{"type":555,"value":880},{"type":550,"tag":582,"props":1170,"children":1171},{"style":697},[1172],{"type":555,"value":841},{"type":550,"tag":582,"props":1174,"children":1176},{"class":584,"line":1175},19,[1177],{"type":550,"tag":582,"props":1178,"children":1179},{"style":697},[1180],{"type":555,"value":1181},"};\n",{"type":550,"tag":1183,"props":1184,"children":1185},"style",{},[1186],{"type":555,"value":1187},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":543,"searchDepth":769,"depth":769,"links":1189},[1190,1191],{"id":655,"depth":594,"text":655},{"id":660,"depth":594,"text":660,"children":1192},[1193],{"id":666,"depth":630,"text":666},"markdown","content:1.algorithm:3.leetcode:3.major:69.sqrtx.md","content","1.algorithm/3.leetcode/3.major/69.sqrtx.md","md",[1200,1202],{"_path":132,"title":131,"description":1201},"给你两个二进制字符串 a 和 b ，以二进制字符串的形式返回它们的和。",{"_path":138,"title":137,"description":1203},"假设你正在爬楼梯。需要 n 阶你才能到达楼顶。",1714099274791]