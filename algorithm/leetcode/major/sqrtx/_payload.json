[{"data":1,"prerenderedAt":1099},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/sqrtx":460,"/algorithm/leetcode/major/sqrtx-surround":1094},[4,263,292,437,445],{"title":5,"_path":6,"children":7,"icon":262},"算法","/algorithm",[8,25],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27,"children":28},"Leetcode 力扣","/algorithm/leetcode",[29,35,48],{"title":30,"_path":31,"children":32},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[33],{"title":34,"_path":31},"刷题索引",{"title":36,"_path":37,"children":38},"剑指 offer","/algorithm/leetcode/sword-ofter",[39,42,45],{"title":40,"_path":41},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":43,"_path":44},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":46,"_path":47},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":49,"_path":50,"children":51},"主题单","/algorithm/leetcode/major",[52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259],{"title":53,"_path":54},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":56,"_path":57},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":59,"_path":60},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":62,"_path":63},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":65,"_path":66},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":68,"_path":69},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":71,"_path":72},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":74,"_path":75},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":77,"_path":78},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":80,"_path":81},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":83,"_path":84},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":86,"_path":87},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":89,"_path":90},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":92,"_path":93},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":95,"_path":96},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":98,"_path":99},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":101,"_path":102},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":104,"_path":105},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":107,"_path":108},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":110,"_path":111},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":113,"_path":114},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":116,"_path":117},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":119,"_path":120},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":122,"_path":123},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":125,"_path":126},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":128,"_path":129},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":131,"_path":132},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":134,"_path":135},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":137,"_path":138},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":140,"_path":141},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":143,"_path":144},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":146,"_path":147},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":149,"_path":150},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":152,"_path":153},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":155,"_path":156},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":158,"_path":159},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":161,"_path":162},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":164,"_path":165},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":167,"_path":168},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":170,"_path":171},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":173,"_path":174},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":176,"_path":177},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":179,"_path":180},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":182,"_path":183},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":185,"_path":186},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":188,"_path":189},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":191,"_path":192},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":194,"_path":195},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":197,"_path":198},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":200,"_path":201},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":203,"_path":204},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":206,"_path":207},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":209,"_path":210},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":212,"_path":213},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":215,"_path":216},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":218,"_path":219},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":221,"_path":222},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":224,"_path":225},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":227,"_path":228},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":230,"_path":231},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":233,"_path":234},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":236,"_path":237},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":239,"_path":240},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":242,"_path":243},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":245,"_path":246},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":248,"_path":249},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":251,"_path":252},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":254,"_path":255},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":257,"_path":258},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":260,"_path":261},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":264,"_path":265,"children":266,"icon":291},"前端八股文","/frontend-endorsement",[267,278],{"title":268,"_path":269,"children":270},"构建工具","/frontend-endorsement/build-tools",[271],{"title":272,"_path":273,"children":274},"Webpack","/frontend-endorsement/build-tools/webpack",[275],{"title":276,"_path":277},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":279,"_path":280,"children":281},"Html","/frontend-endorsement/html",[282,285,288],{"title":283,"_path":284},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":286,"_path":287},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":289,"_path":290},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":293,"_path":294,"children":295,"icon":436},"前端代码考核","/frontend-code-assessment",[296,345,429],{"title":297,"_path":298,"children":299},"源码实现","/frontend-code-assessment/source",[300,325,338],{"title":301,"_path":302,"children":303},"原生 api","/frontend-code-assessment/source/native-api",[304,307,310,313,316,319,322],{"title":305,"_path":306},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":308,"_path":309},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":311,"_path":312},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":314,"_path":315},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":317,"_path":318},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":320,"_path":321},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":323,"_path":324},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":326,"_path":327,"children":328},"数组 Array","/frontend-code-assessment/source/array",[329,332,335],{"title":330,"_path":331},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":333,"_path":334},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":336,"_path":337},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":339,"_path":340,"children":341},"字符串 String","/frontend-code-assessment/source/string",[342],{"title":343,"_path":344},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":346,"_path":347,"children":348},"业务场景","/frontend-code-assessment/scene",[349,371,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426],{"title":350,"_path":351,"children":352},"Promise","/frontend-code-assessment/scene/promise",[353,356,359,362,365,368],{"title":354,"_path":355},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":357,"_path":358},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":360,"_path":361},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":363,"_path":364},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":366,"_path":367},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":369,"_path":370},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":372,"_path":373,"children":374},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[375],{"title":376,"_path":377},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":379,"_path":380},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":382,"_path":383},"倒计时","/frontend-code-assessment/scene/countdown",{"title":385,"_path":386},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":388,"_path":389},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":391,"_path":392},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":394,"_path":395},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":397,"_path":398},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":400,"_path":401},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":403,"_path":404},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":406,"_path":407},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":409,"_path":410},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":412,"_path":413},"随机数","/frontend-code-assessment/scene/random-number",{"title":415,"_path":416},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":418,"_path":419},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":421,"_path":422},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":424,"_path":425},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":427,"_path":428},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":430,"_path":431,"children":432},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[433],{"title":434,"_path":435},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":438,"_path":439,"children":440,"icon":444},"项目","/pro",[441],{"title":442,"_path":443},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":446,"_path":447,"children":448,"icon":459},"后端语言","/backend-languages",[449],{"title":450,"_path":451,"children":452},"Python","/backend-languages/python",[453,456],{"title":454,"_path":455},"基础","/backend-languages/python/base",{"title":457,"_path":458},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":129,"_dir":461,"_draft":462,"_partial":462,"_locale":463,"title":128,"description":464,"url":465,"body":466,"_type":1089,"_id":1090,"_source":1091,"_file":1092,"_extension":1093},"major",false,"","给你一个非负整数 x ，计算并返回 x 的 算术平方根 。","https://leetcode.cn/problems/sqrtx",{"type":467,"children":468,"toc":1083},"root",[469,476,481,486,491,521,526,557,562,572,578,583,589,1077],{"type":470,"tag":471,"props":472,"children":473},"element","p",{},[474],{"type":475,"value":464},"text",{"type":470,"tag":471,"props":477,"children":478},{},[479],{"type":475,"value":480},"由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。",{"type":470,"tag":471,"props":482,"children":483},{},[484],{"type":475,"value":485},"注意：不允许使用任何内置指数函数和算符，例如 pow(x, 0.5) 或者 x ** 0.5 。",{"type":470,"tag":471,"props":487,"children":488},{},[489],{"type":475,"value":490},"示例 1：",{"type":470,"tag":492,"props":493,"children":496},"pre",{"className":494,"code":495,"language":475,"meta":463,"style":463},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：x = 4\n输出：2\n",[497],{"type":470,"tag":498,"props":499,"children":500},"code",{"__ignoreMap":463},[501,512],{"type":470,"tag":502,"props":503,"children":506},"span",{"class":504,"line":505},"line",1,[507],{"type":470,"tag":502,"props":508,"children":509},{},[510],{"type":475,"value":511},"输入：x = 4\n",{"type":470,"tag":502,"props":513,"children":515},{"class":504,"line":514},2,[516],{"type":470,"tag":502,"props":517,"children":518},{},[519],{"type":475,"value":520},"输出：2\n",{"type":470,"tag":471,"props":522,"children":523},{},[524],{"type":475,"value":525},"示例 2：",{"type":470,"tag":492,"props":527,"children":529},{"className":494,"code":528,"language":475,"meta":463,"style":463},"输入：x = 8\n输出：2\n解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。\n",[530],{"type":470,"tag":498,"props":531,"children":532},{"__ignoreMap":463},[533,541,548],{"type":470,"tag":502,"props":534,"children":535},{"class":504,"line":505},[536],{"type":470,"tag":502,"props":537,"children":538},{},[539],{"type":475,"value":540},"输入：x = 8\n",{"type":470,"tag":502,"props":542,"children":543},{"class":504,"line":514},[544],{"type":470,"tag":502,"props":545,"children":546},{},[547],{"type":475,"value":520},{"type":470,"tag":502,"props":549,"children":551},{"class":504,"line":550},3,[552],{"type":470,"tag":502,"props":553,"children":554},{},[555],{"type":475,"value":556},"解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。\n",{"type":470,"tag":471,"props":558,"children":559},{},[560],{"type":475,"value":561},"提示：",{"type":470,"tag":563,"props":564,"children":565},"ul",{},[566],{"type":470,"tag":567,"props":568,"children":569},"li",{},[570],{"type":475,"value":571},"0 \u003C= x \u003C= 2^31 - 1",{"type":470,"tag":573,"props":574,"children":576},"h2",{"id":575},"解题思路",[577],{"type":475,"value":575},{"type":470,"tag":573,"props":579,"children":581},{"id":580},"实现",[582],{"type":475,"value":580},{"type":470,"tag":584,"props":585,"children":587},"h3",{"id":586},"二分查找",[588],{"type":475,"value":586},{"type":470,"tag":492,"props":590,"children":594},{"className":591,"code":592,"language":593,"meta":463,"style":463},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number} x\n * @return {number}\n */\nvar mySqrt = function (x) {\n  let left = 0;\n  let right = x;\n  let answer = -1;\n  while (left \u003C= right) {\n    let middle = left + ((right - left) >> 1);\n    if (middle * middle \u003C= x) {\n      answer = middle;\n      left = middle + 1;\n    } else {\n      right = middle - 1;\n    }\n  }\n  return answer;\n};\n","js",[595],{"type":470,"tag":498,"props":596,"children":597},{"__ignoreMap":463},[598,607,633,650,659,703,734,760,791,823,892,931,952,981,1000,1029,1038,1047,1064],{"type":470,"tag":502,"props":599,"children":600},{"class":504,"line":505},[601],{"type":470,"tag":502,"props":602,"children":604},{"style":603},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[605],{"type":475,"value":606},"/**\n",{"type":470,"tag":502,"props":608,"children":609},{"class":504,"line":514},[610,615,621,627],{"type":470,"tag":502,"props":611,"children":612},{"style":603},[613],{"type":475,"value":614}," * ",{"type":470,"tag":502,"props":616,"children":618},{"style":617},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[619],{"type":475,"value":620},"@param",{"type":470,"tag":502,"props":622,"children":624},{"style":623},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[625],{"type":475,"value":626}," {number}",{"type":470,"tag":502,"props":628,"children":630},{"style":629},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[631],{"type":475,"value":632}," x\n",{"type":470,"tag":502,"props":634,"children":635},{"class":504,"line":550},[636,640,645],{"type":470,"tag":502,"props":637,"children":638},{"style":603},[639],{"type":475,"value":614},{"type":470,"tag":502,"props":641,"children":642},{"style":617},[643],{"type":475,"value":644},"@return",{"type":470,"tag":502,"props":646,"children":647},{"style":623},[648],{"type":475,"value":649}," {number}\n",{"type":470,"tag":502,"props":651,"children":653},{"class":504,"line":652},4,[654],{"type":470,"tag":502,"props":655,"children":656},{"style":603},[657],{"type":475,"value":658}," */\n",{"type":470,"tag":502,"props":660,"children":662},{"class":504,"line":661},5,[663,669,675,681,686,692,698],{"type":470,"tag":502,"props":664,"children":666},{"style":665},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[667],{"type":475,"value":668},"var",{"type":470,"tag":502,"props":670,"children":672},{"style":671},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[673],{"type":475,"value":674}," mySqrt",{"type":470,"tag":502,"props":676,"children":678},{"style":677},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[679],{"type":475,"value":680}," =",{"type":470,"tag":502,"props":682,"children":683},{"style":665},[684],{"type":475,"value":685}," function",{"type":470,"tag":502,"props":687,"children":689},{"style":688},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[690],{"type":475,"value":691}," (",{"type":470,"tag":502,"props":693,"children":695},{"style":694},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[696],{"type":475,"value":697},"x",{"type":470,"tag":502,"props":699,"children":700},{"style":688},[701],{"type":475,"value":702},") {\n",{"type":470,"tag":502,"props":704,"children":706},{"class":504,"line":705},6,[707,712,718,722,728],{"type":470,"tag":502,"props":708,"children":709},{"style":665},[710],{"type":475,"value":711},"  let",{"type":470,"tag":502,"props":713,"children":715},{"style":714},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[716],{"type":475,"value":717}," left",{"type":470,"tag":502,"props":719,"children":720},{"style":677},[721],{"type":475,"value":680},{"type":470,"tag":502,"props":723,"children":725},{"style":724},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[726],{"type":475,"value":727}," 0",{"type":470,"tag":502,"props":729,"children":731},{"style":730},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[732],{"type":475,"value":733},";\n",{"type":470,"tag":502,"props":735,"children":737},{"class":504,"line":736},7,[738,742,747,751,756],{"type":470,"tag":502,"props":739,"children":740},{"style":665},[741],{"type":475,"value":711},{"type":470,"tag":502,"props":743,"children":744},{"style":714},[745],{"type":475,"value":746}," right",{"type":470,"tag":502,"props":748,"children":749},{"style":677},[750],{"type":475,"value":680},{"type":470,"tag":502,"props":752,"children":753},{"style":714},[754],{"type":475,"value":755}," x",{"type":470,"tag":502,"props":757,"children":758},{"style":730},[759],{"type":475,"value":733},{"type":470,"tag":502,"props":761,"children":763},{"class":504,"line":762},8,[764,768,773,777,782,787],{"type":470,"tag":502,"props":765,"children":766},{"style":665},[767],{"type":475,"value":711},{"type":470,"tag":502,"props":769,"children":770},{"style":714},[771],{"type":475,"value":772}," answer",{"type":470,"tag":502,"props":774,"children":775},{"style":677},[776],{"type":475,"value":680},{"type":470,"tag":502,"props":778,"children":779},{"style":677},[780],{"type":475,"value":781}," -",{"type":470,"tag":502,"props":783,"children":784},{"style":724},[785],{"type":475,"value":786},"1",{"type":470,"tag":502,"props":788,"children":789},{"style":730},[790],{"type":475,"value":733},{"type":470,"tag":502,"props":792,"children":794},{"class":504,"line":793},9,[795,801,805,810,815,819],{"type":470,"tag":502,"props":796,"children":798},{"style":797},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[799],{"type":475,"value":800},"  while",{"type":470,"tag":502,"props":802,"children":803},{"style":688},[804],{"type":475,"value":691},{"type":470,"tag":502,"props":806,"children":807},{"style":714},[808],{"type":475,"value":809},"left",{"type":470,"tag":502,"props":811,"children":812},{"style":677},[813],{"type":475,"value":814}," \u003C=",{"type":470,"tag":502,"props":816,"children":817},{"style":714},[818],{"type":475,"value":746},{"type":470,"tag":502,"props":820,"children":821},{"style":688},[822],{"type":475,"value":702},{"type":470,"tag":502,"props":824,"children":826},{"class":504,"line":825},10,[827,832,837,841,845,850,855,860,864,868,873,878,883,888],{"type":470,"tag":502,"props":828,"children":829},{"style":665},[830],{"type":475,"value":831},"    let",{"type":470,"tag":502,"props":833,"children":834},{"style":714},[835],{"type":475,"value":836}," middle",{"type":470,"tag":502,"props":838,"children":839},{"style":677},[840],{"type":475,"value":680},{"type":470,"tag":502,"props":842,"children":843},{"style":714},[844],{"type":475,"value":717},{"type":470,"tag":502,"props":846,"children":847},{"style":677},[848],{"type":475,"value":849}," +",{"type":470,"tag":502,"props":851,"children":852},{"style":688},[853],{"type":475,"value":854}," ((",{"type":470,"tag":502,"props":856,"children":857},{"style":714},[858],{"type":475,"value":859},"right",{"type":470,"tag":502,"props":861,"children":862},{"style":677},[863],{"type":475,"value":781},{"type":470,"tag":502,"props":865,"children":866},{"style":714},[867],{"type":475,"value":717},{"type":470,"tag":502,"props":869,"children":870},{"style":688},[871],{"type":475,"value":872},") ",{"type":470,"tag":502,"props":874,"children":875},{"style":677},[876],{"type":475,"value":877},">>",{"type":470,"tag":502,"props":879,"children":880},{"style":724},[881],{"type":475,"value":882}," 1",{"type":470,"tag":502,"props":884,"children":885},{"style":688},[886],{"type":475,"value":887},")",{"type":470,"tag":502,"props":889,"children":890},{"style":730},[891],{"type":475,"value":733},{"type":470,"tag":502,"props":893,"children":895},{"class":504,"line":894},11,[896,901,905,910,915,919,923,927],{"type":470,"tag":502,"props":897,"children":898},{"style":797},[899],{"type":475,"value":900},"    if",{"type":470,"tag":502,"props":902,"children":903},{"style":688},[904],{"type":475,"value":691},{"type":470,"tag":502,"props":906,"children":907},{"style":714},[908],{"type":475,"value":909},"middle",{"type":470,"tag":502,"props":911,"children":912},{"style":677},[913],{"type":475,"value":914}," *",{"type":470,"tag":502,"props":916,"children":917},{"style":714},[918],{"type":475,"value":836},{"type":470,"tag":502,"props":920,"children":921},{"style":677},[922],{"type":475,"value":814},{"type":470,"tag":502,"props":924,"children":925},{"style":714},[926],{"type":475,"value":755},{"type":470,"tag":502,"props":928,"children":929},{"style":688},[930],{"type":475,"value":702},{"type":470,"tag":502,"props":932,"children":934},{"class":504,"line":933},12,[935,940,944,948],{"type":470,"tag":502,"props":936,"children":937},{"style":714},[938],{"type":475,"value":939},"      answer",{"type":470,"tag":502,"props":941,"children":942},{"style":677},[943],{"type":475,"value":680},{"type":470,"tag":502,"props":945,"children":946},{"style":714},[947],{"type":475,"value":836},{"type":470,"tag":502,"props":949,"children":950},{"style":730},[951],{"type":475,"value":733},{"type":470,"tag":502,"props":953,"children":955},{"class":504,"line":954},13,[956,961,965,969,973,977],{"type":470,"tag":502,"props":957,"children":958},{"style":714},[959],{"type":475,"value":960},"      left",{"type":470,"tag":502,"props":962,"children":963},{"style":677},[964],{"type":475,"value":680},{"type":470,"tag":502,"props":966,"children":967},{"style":714},[968],{"type":475,"value":836},{"type":470,"tag":502,"props":970,"children":971},{"style":677},[972],{"type":475,"value":849},{"type":470,"tag":502,"props":974,"children":975},{"style":724},[976],{"type":475,"value":882},{"type":470,"tag":502,"props":978,"children":979},{"style":730},[980],{"type":475,"value":733},{"type":470,"tag":502,"props":982,"children":984},{"class":504,"line":983},14,[985,990,995],{"type":470,"tag":502,"props":986,"children":987},{"style":688},[988],{"type":475,"value":989},"    } ",{"type":470,"tag":502,"props":991,"children":992},{"style":797},[993],{"type":475,"value":994},"else",{"type":470,"tag":502,"props":996,"children":997},{"style":688},[998],{"type":475,"value":999}," {\n",{"type":470,"tag":502,"props":1001,"children":1003},{"class":504,"line":1002},15,[1004,1009,1013,1017,1021,1025],{"type":470,"tag":502,"props":1005,"children":1006},{"style":714},[1007],{"type":475,"value":1008},"      right",{"type":470,"tag":502,"props":1010,"children":1011},{"style":677},[1012],{"type":475,"value":680},{"type":470,"tag":502,"props":1014,"children":1015},{"style":714},[1016],{"type":475,"value":836},{"type":470,"tag":502,"props":1018,"children":1019},{"style":677},[1020],{"type":475,"value":781},{"type":470,"tag":502,"props":1022,"children":1023},{"style":724},[1024],{"type":475,"value":882},{"type":470,"tag":502,"props":1026,"children":1027},{"style":730},[1028],{"type":475,"value":733},{"type":470,"tag":502,"props":1030,"children":1032},{"class":504,"line":1031},16,[1033],{"type":470,"tag":502,"props":1034,"children":1035},{"style":688},[1036],{"type":475,"value":1037},"    }\n",{"type":470,"tag":502,"props":1039,"children":1041},{"class":504,"line":1040},17,[1042],{"type":470,"tag":502,"props":1043,"children":1044},{"style":688},[1045],{"type":475,"value":1046},"  }\n",{"type":470,"tag":502,"props":1048,"children":1050},{"class":504,"line":1049},18,[1051,1056,1060],{"type":470,"tag":502,"props":1052,"children":1053},{"style":797},[1054],{"type":475,"value":1055},"  return",{"type":470,"tag":502,"props":1057,"children":1058},{"style":714},[1059],{"type":475,"value":772},{"type":470,"tag":502,"props":1061,"children":1062},{"style":730},[1063],{"type":475,"value":733},{"type":470,"tag":502,"props":1065,"children":1067},{"class":504,"line":1066},19,[1068,1073],{"type":470,"tag":502,"props":1069,"children":1070},{"style":688},[1071],{"type":475,"value":1072},"}",{"type":470,"tag":502,"props":1074,"children":1075},{"style":730},[1076],{"type":475,"value":733},{"type":470,"tag":1078,"props":1079,"children":1080},"style",{},[1081],{"type":475,"value":1082},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":463,"searchDepth":661,"depth":661,"links":1084},[1085,1086],{"id":575,"depth":514,"text":575},{"id":580,"depth":514,"text":580,"children":1087},[1088],{"id":586,"depth":550,"text":586},"markdown","content:1.algorithm:3.leetcode:3.major:69.sqrtx.md","content","1.algorithm/3.leetcode/3.major/69.sqrtx.md","md",[1095,1097],{"_path":126,"title":125,"description":1096},"给你两个二进制字符串 a 和 b ，以二进制字符串的形式返回它们的和。",{"_path":132,"title":131,"description":1098},"假设你正在爬楼梯。需要 n 阶你才能到达楼顶。",1713626403278]