[{"data":1,"prerenderedAt":1223},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/sqrtx":559,"/algorithm/leetcode/major/sqrtx-surround":1218},[4,272,318,536,544],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":317},"八股文","/endorsement",[276,286,293,304],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"JavaScript","/endorsement/javascript",[290],{"title":291,"_path":292},"语法和数据类型","/endorsement/javascript/grammar-data-types",{"title":294,"_path":295,"children":296},"构建工具","/endorsement/build-tools",[297],{"title":298,"_path":299,"children":300},"Webpack","/endorsement/build-tools/webpack",[301],{"title":302,"_path":303},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":305,"_path":306,"children":307},"Html","/endorsement/html",[308,311,314],{"title":309,"_path":310},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":312,"_path":313},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":315,"_path":316},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":319,"_path":320,"children":321,"icon":535},"代码考核","/code-assessment",[322,427,528],{"title":323,"_path":324,"children":325},"源码实现","/code-assessment/source",[326,360,376,404,411,418,421,424],{"title":327,"_path":328,"children":329},"原生 api","/code-assessment/source/native-api",[330,333,336,339,342,345,348,351,354,357],{"title":331,"_path":332},"polyfill","/code-assessment/source/native-api/polyfill",{"title":334,"_path":335},"ajax","/code-assessment/source/native-api/ajax",{"title":337,"_path":338},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":340,"_path":341},"new 操作符","/code-assessment/source/native-api/new",{"title":343,"_path":344},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":346,"_path":347},"定时器","/code-assessment/source/native-api/timer",{"title":349,"_path":350},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":352,"_path":353},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":355,"_path":356},"extends","/code-assessment/source/native-api/extends",{"title":358,"_path":359},"Promise","/code-assessment/source/native-api/promise",{"title":361,"_path":362,"children":363},"函数 Function","/code-assessment/source/function",[364,367,370,373],{"title":365,"_path":366},"函数防抖","/code-assessment/source/function/debounce",{"title":368,"_path":369},"函数节流","/code-assessment/source/function/throttle",{"title":371,"_path":372},"函数柯理化","/code-assessment/source/function/curry",{"title":374,"_path":375},"函数睡眠","/code-assessment/source/function/sleep",{"title":377,"_path":378,"children":379},"数组 Array","/code-assessment/source/array",[380,383,386,389,392,395,398,401],{"title":381,"_path":382},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":384,"_path":385},"数组扁平化","/code-assessment/source/array/flat",{"title":387,"_path":388},"原型方法","/code-assessment/source/array/prototype-method",{"title":390,"_path":391},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":393,"_path":394},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":396,"_path":397},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":399,"_path":400},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":402,"_path":403},"二维数组","/code-assessment/source/array/2d-array",{"title":405,"_path":406,"children":407},"字符串 String","/code-assessment/source/string",[408],{"title":409,"_path":410},"repeat()","/code-assessment/source/string/repeat",{"title":412,"_path":413,"children":414},"集合 Set","/code-assessment/source/set",[415],{"title":416,"_path":417},"遍历集合","/code-assessment/source/set/traverse",{"title":419,"_path":420},"获取通用类型","/code-assessment/source/get-generic-type",{"title":422,"_path":423},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":425,"_path":426},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":428,"_path":429,"children":430},"业务场景","/code-assessment/scene",[431,461,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525],{"title":358,"_path":432,"children":433},"/code-assessment/scene/promise",[434,437,440,443,446,449,452,455,458],{"title":435,"_path":436},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":438,"_path":439},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":441,"_path":442},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":444,"_path":445},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":447,"_path":448},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":450,"_path":451},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":453,"_path":454},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":456,"_path":457},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":459,"_path":460},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":462,"_path":463,"children":464},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[465,468],{"title":466,"_path":467},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":469,"_path":470},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":472,"_path":473},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":475,"_path":476},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":478,"_path":479},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":481,"_path":482},"倒计时","/code-assessment/scene/countdown",{"title":484,"_path":485},"日期格式化","/code-assessment/scene/date-format",{"title":487,"_path":488},"实现前端路由","/code-assessment/scene/frontend-route",{"title":490,"_path":491},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":493,"_path":494},"lodash.get","/code-assessment/scene/lodash-get",{"title":496,"_path":497},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":499,"_path":500},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":502,"_path":503},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":505,"_path":506},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":508,"_path":509},"随机数","/code-assessment/scene/random-number",{"title":511,"_path":512},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":514,"_path":515},"sku 算法实现","/code-assessment/scene/sku",{"title":517,"_path":518},"整数分割","/code-assessment/scene/split-number",{"title":520,"_path":521},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":523,"_path":524},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":526,"_path":527},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":529,"_path":530,"children":531},"Ts 类型挑战","/code-assessment/type-challeges",[532],{"title":533,"_path":534},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":537,"_path":538,"children":539,"icon":543},"项目","/project",[540],{"title":541,"_path":542},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":545,"_path":546,"children":547,"icon":558},"后端语言","/backend-languages",[548],{"title":549,"_path":550,"children":551},"Python","/backend-languages/python",[552,555],{"title":553,"_path":554},"基础","/backend-languages/python/base",{"title":556,"_path":557},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":135,"_dir":560,"_draft":561,"_partial":561,"_locale":562,"title":134,"description":563,"url":564,"body":565,"_type":1213,"_id":1214,"_source":1215,"_file":1216,"_extension":1217},"major",false,"","给你一个非负整数 x ，计算并返回 x 的 算术平方根 。","https://leetcode.cn/problems/sqrtx",{"type":566,"children":567,"toc":1207},"root",[568,575,580,585,590,620,625,656,661,671,677,682,688,1201],{"type":569,"tag":570,"props":571,"children":572},"element","p",{},[573],{"type":574,"value":563},"text",{"type":569,"tag":570,"props":576,"children":577},{},[578],{"type":574,"value":579},"由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。",{"type":569,"tag":570,"props":581,"children":582},{},[583],{"type":574,"value":584},"注意：不允许使用任何内置指数函数和算符，例如 pow(x, 0.5) 或者 x ** 0.5 。",{"type":569,"tag":570,"props":586,"children":587},{},[588],{"type":574,"value":589},"示例 1：",{"type":569,"tag":591,"props":592,"children":595},"pre",{"className":593,"code":594,"language":574,"meta":562,"style":562},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：x = 4\n输出：2\n",[596],{"type":569,"tag":597,"props":598,"children":599},"code",{"__ignoreMap":562},[600,611],{"type":569,"tag":601,"props":602,"children":605},"span",{"class":603,"line":604},"line",1,[606],{"type":569,"tag":601,"props":607,"children":608},{},[609],{"type":574,"value":610},"输入：x = 4\n",{"type":569,"tag":601,"props":612,"children":614},{"class":603,"line":613},2,[615],{"type":569,"tag":601,"props":616,"children":617},{},[618],{"type":574,"value":619},"输出：2\n",{"type":569,"tag":570,"props":621,"children":622},{},[623],{"type":574,"value":624},"示例 2：",{"type":569,"tag":591,"props":626,"children":628},{"className":593,"code":627,"language":574,"meta":562,"style":562},"输入：x = 8\n输出：2\n解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。\n",[629],{"type":569,"tag":597,"props":630,"children":631},{"__ignoreMap":562},[632,640,647],{"type":569,"tag":601,"props":633,"children":634},{"class":603,"line":604},[635],{"type":569,"tag":601,"props":636,"children":637},{},[638],{"type":574,"value":639},"输入：x = 8\n",{"type":569,"tag":601,"props":641,"children":642},{"class":603,"line":613},[643],{"type":569,"tag":601,"props":644,"children":645},{},[646],{"type":574,"value":619},{"type":569,"tag":601,"props":648,"children":650},{"class":603,"line":649},3,[651],{"type":569,"tag":601,"props":652,"children":653},{},[654],{"type":574,"value":655},"解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。\n",{"type":569,"tag":570,"props":657,"children":658},{},[659],{"type":574,"value":660},"提示：",{"type":569,"tag":662,"props":663,"children":664},"ul",{},[665],{"type":569,"tag":666,"props":667,"children":668},"li",{},[669],{"type":574,"value":670},"0 \u003C= x \u003C= 2^31 - 1",{"type":569,"tag":672,"props":673,"children":675},"h2",{"id":674},"解题思路",[676],{"type":574,"value":674},{"type":569,"tag":672,"props":678,"children":680},{"id":679},"实现",[681],{"type":574,"value":679},{"type":569,"tag":683,"props":684,"children":686},"h3",{"id":685},"二分查找",[687],{"type":574,"value":685},{"type":569,"tag":591,"props":689,"children":693},{"className":690,"code":691,"language":692,"meta":562,"style":562},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} x\n * @return {number}\n */\nvar mySqrt = function (x) {\n  let left = 0;\n  let right = x;\n  let answer = -1;\n  while (left \u003C= right) {\n    let middle = left + ((right - left) >> 1);\n    if (middle * middle \u003C= x) {\n      answer = middle;\n      left = middle + 1;\n    } else {\n      right = middle - 1;\n    }\n  }\n  return answer;\n};\n","js",[694],{"type":569,"tag":597,"props":695,"children":696},{"__ignoreMap":562},[697,706,748,777,786,832,861,887,918,953,1017,1060,1081,1110,1128,1157,1166,1175,1192],{"type":569,"tag":601,"props":698,"children":699},{"class":603,"line":604},[700],{"type":569,"tag":601,"props":701,"children":703},{"style":702},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[704],{"type":574,"value":705},"/**\n",{"type":569,"tag":601,"props":707,"children":708},{"class":603,"line":613},[709,714,720,726,731,737,742],{"type":569,"tag":601,"props":710,"children":711},{"style":702},[712],{"type":574,"value":713}," * ",{"type":569,"tag":601,"props":715,"children":717},{"style":716},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[718],{"type":574,"value":719},"@",{"type":569,"tag":601,"props":721,"children":723},{"style":722},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[724],{"type":574,"value":725},"param",{"type":569,"tag":601,"props":727,"children":728},{"style":716},[729],{"type":574,"value":730}," {",{"type":569,"tag":601,"props":732,"children":734},{"style":733},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[735],{"type":574,"value":736},"number",{"type":569,"tag":601,"props":738,"children":739},{"style":716},[740],{"type":574,"value":741},"}",{"type":569,"tag":601,"props":743,"children":745},{"style":744},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[746],{"type":574,"value":747}," x\n",{"type":569,"tag":601,"props":749,"children":750},{"class":603,"line":649},[751,755,759,764,768,772],{"type":569,"tag":601,"props":752,"children":753},{"style":702},[754],{"type":574,"value":713},{"type":569,"tag":601,"props":756,"children":757},{"style":716},[758],{"type":574,"value":719},{"type":569,"tag":601,"props":760,"children":761},{"style":722},[762],{"type":574,"value":763},"return",{"type":569,"tag":601,"props":765,"children":766},{"style":716},[767],{"type":574,"value":730},{"type":569,"tag":601,"props":769,"children":770},{"style":733},[771],{"type":574,"value":736},{"type":569,"tag":601,"props":773,"children":774},{"style":716},[775],{"type":574,"value":776},"}\n",{"type":569,"tag":601,"props":778,"children":780},{"class":603,"line":779},4,[781],{"type":569,"tag":601,"props":782,"children":783},{"style":702},[784],{"type":574,"value":785}," */\n",{"type":569,"tag":601,"props":787,"children":789},{"class":603,"line":788},5,[790,796,802,807,812,817,822,827],{"type":569,"tag":601,"props":791,"children":793},{"style":792},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[794],{"type":574,"value":795},"var",{"type":569,"tag":601,"props":797,"children":799},{"style":798},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[800],{"type":574,"value":801}," mySqrt",{"type":569,"tag":601,"props":803,"children":804},{"style":716},[805],{"type":574,"value":806}," =",{"type":569,"tag":601,"props":808,"children":809},{"style":792},[810],{"type":574,"value":811}," function",{"type":569,"tag":601,"props":813,"children":814},{"style":716},[815],{"type":574,"value":816}," (",{"type":569,"tag":601,"props":818,"children":819},{"style":744},[820],{"type":574,"value":821},"x",{"type":569,"tag":601,"props":823,"children":824},{"style":716},[825],{"type":574,"value":826},")",{"type":569,"tag":601,"props":828,"children":829},{"style":716},[830],{"type":574,"value":831}," {\n",{"type":569,"tag":601,"props":833,"children":835},{"class":603,"line":834},6,[836,841,846,850,856],{"type":569,"tag":601,"props":837,"children":838},{"style":792},[839],{"type":574,"value":840},"  let",{"type":569,"tag":601,"props":842,"children":843},{"style":744},[844],{"type":574,"value":845}," left",{"type":569,"tag":601,"props":847,"children":848},{"style":716},[849],{"type":574,"value":806},{"type":569,"tag":601,"props":851,"children":853},{"style":852},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[854],{"type":574,"value":855}," 0",{"type":569,"tag":601,"props":857,"children":858},{"style":716},[859],{"type":574,"value":860},";\n",{"type":569,"tag":601,"props":862,"children":864},{"class":603,"line":863},7,[865,869,874,878,883],{"type":569,"tag":601,"props":866,"children":867},{"style":792},[868],{"type":574,"value":840},{"type":569,"tag":601,"props":870,"children":871},{"style":744},[872],{"type":574,"value":873}," right",{"type":569,"tag":601,"props":875,"children":876},{"style":716},[877],{"type":574,"value":806},{"type":569,"tag":601,"props":879,"children":880},{"style":744},[881],{"type":574,"value":882}," x",{"type":569,"tag":601,"props":884,"children":885},{"style":716},[886],{"type":574,"value":860},{"type":569,"tag":601,"props":888,"children":890},{"class":603,"line":889},8,[891,895,900,904,909,914],{"type":569,"tag":601,"props":892,"children":893},{"style":792},[894],{"type":574,"value":840},{"type":569,"tag":601,"props":896,"children":897},{"style":744},[898],{"type":574,"value":899}," answer",{"type":569,"tag":601,"props":901,"children":902},{"style":716},[903],{"type":574,"value":806},{"type":569,"tag":601,"props":905,"children":906},{"style":792},[907],{"type":574,"value":908}," -",{"type":569,"tag":601,"props":910,"children":911},{"style":852},[912],{"type":574,"value":913},"1",{"type":569,"tag":601,"props":915,"children":916},{"style":716},[917],{"type":574,"value":860},{"type":569,"tag":601,"props":919,"children":921},{"class":603,"line":920},9,[922,927,931,936,941,945,949],{"type":569,"tag":601,"props":923,"children":924},{"style":722},[925],{"type":574,"value":926},"  while",{"type":569,"tag":601,"props":928,"children":929},{"style":716},[930],{"type":574,"value":816},{"type":569,"tag":601,"props":932,"children":933},{"style":744},[934],{"type":574,"value":935},"left",{"type":569,"tag":601,"props":937,"children":938},{"style":716},[939],{"type":574,"value":940}," \u003C=",{"type":569,"tag":601,"props":942,"children":943},{"style":744},[944],{"type":574,"value":873},{"type":569,"tag":601,"props":946,"children":947},{"style":716},[948],{"type":574,"value":826},{"type":569,"tag":601,"props":950,"children":951},{"style":716},[952],{"type":574,"value":831},{"type":569,"tag":601,"props":954,"children":956},{"class":603,"line":955},10,[957,962,967,971,975,980,985,990,994,998,1002,1007,1012],{"type":569,"tag":601,"props":958,"children":959},{"style":792},[960],{"type":574,"value":961},"    let",{"type":569,"tag":601,"props":963,"children":964},{"style":744},[965],{"type":574,"value":966}," middle",{"type":569,"tag":601,"props":968,"children":969},{"style":716},[970],{"type":574,"value":806},{"type":569,"tag":601,"props":972,"children":973},{"style":744},[974],{"type":574,"value":845},{"type":569,"tag":601,"props":976,"children":977},{"style":792},[978],{"type":574,"value":979}," +",{"type":569,"tag":601,"props":981,"children":982},{"style":716},[983],{"type":574,"value":984}," ((",{"type":569,"tag":601,"props":986,"children":987},{"style":744},[988],{"type":574,"value":989},"right",{"type":569,"tag":601,"props":991,"children":992},{"style":792},[993],{"type":574,"value":908},{"type":569,"tag":601,"props":995,"children":996},{"style":744},[997],{"type":574,"value":845},{"type":569,"tag":601,"props":999,"children":1000},{"style":716},[1001],{"type":574,"value":826},{"type":569,"tag":601,"props":1003,"children":1004},{"style":792},[1005],{"type":574,"value":1006}," >>",{"type":569,"tag":601,"props":1008,"children":1009},{"style":852},[1010],{"type":574,"value":1011}," 1",{"type":569,"tag":601,"props":1013,"children":1014},{"style":716},[1015],{"type":574,"value":1016},");\n",{"type":569,"tag":601,"props":1018,"children":1020},{"class":603,"line":1019},11,[1021,1026,1030,1035,1040,1044,1048,1052,1056],{"type":569,"tag":601,"props":1022,"children":1023},{"style":722},[1024],{"type":574,"value":1025},"    if",{"type":569,"tag":601,"props":1027,"children":1028},{"style":716},[1029],{"type":574,"value":816},{"type":569,"tag":601,"props":1031,"children":1032},{"style":744},[1033],{"type":574,"value":1034},"middle",{"type":569,"tag":601,"props":1036,"children":1037},{"style":792},[1038],{"type":574,"value":1039}," *",{"type":569,"tag":601,"props":1041,"children":1042},{"style":744},[1043],{"type":574,"value":966},{"type":569,"tag":601,"props":1045,"children":1046},{"style":716},[1047],{"type":574,"value":940},{"type":569,"tag":601,"props":1049,"children":1050},{"style":744},[1051],{"type":574,"value":882},{"type":569,"tag":601,"props":1053,"children":1054},{"style":716},[1055],{"type":574,"value":826},{"type":569,"tag":601,"props":1057,"children":1058},{"style":716},[1059],{"type":574,"value":831},{"type":569,"tag":601,"props":1061,"children":1063},{"class":603,"line":1062},12,[1064,1069,1073,1077],{"type":569,"tag":601,"props":1065,"children":1066},{"style":744},[1067],{"type":574,"value":1068},"      answer",{"type":569,"tag":601,"props":1070,"children":1071},{"style":716},[1072],{"type":574,"value":806},{"type":569,"tag":601,"props":1074,"children":1075},{"style":744},[1076],{"type":574,"value":966},{"type":569,"tag":601,"props":1078,"children":1079},{"style":716},[1080],{"type":574,"value":860},{"type":569,"tag":601,"props":1082,"children":1084},{"class":603,"line":1083},13,[1085,1090,1094,1098,1102,1106],{"type":569,"tag":601,"props":1086,"children":1087},{"style":744},[1088],{"type":574,"value":1089},"      left",{"type":569,"tag":601,"props":1091,"children":1092},{"style":716},[1093],{"type":574,"value":806},{"type":569,"tag":601,"props":1095,"children":1096},{"style":744},[1097],{"type":574,"value":966},{"type":569,"tag":601,"props":1099,"children":1100},{"style":792},[1101],{"type":574,"value":979},{"type":569,"tag":601,"props":1103,"children":1104},{"style":852},[1105],{"type":574,"value":1011},{"type":569,"tag":601,"props":1107,"children":1108},{"style":716},[1109],{"type":574,"value":860},{"type":569,"tag":601,"props":1111,"children":1113},{"class":603,"line":1112},14,[1114,1119,1124],{"type":569,"tag":601,"props":1115,"children":1116},{"style":716},[1117],{"type":574,"value":1118},"    }",{"type":569,"tag":601,"props":1120,"children":1121},{"style":722},[1122],{"type":574,"value":1123}," else",{"type":569,"tag":601,"props":1125,"children":1126},{"style":716},[1127],{"type":574,"value":831},{"type":569,"tag":601,"props":1129,"children":1131},{"class":603,"line":1130},15,[1132,1137,1141,1145,1149,1153],{"type":569,"tag":601,"props":1133,"children":1134},{"style":744},[1135],{"type":574,"value":1136},"      right",{"type":569,"tag":601,"props":1138,"children":1139},{"style":716},[1140],{"type":574,"value":806},{"type":569,"tag":601,"props":1142,"children":1143},{"style":744},[1144],{"type":574,"value":966},{"type":569,"tag":601,"props":1146,"children":1147},{"style":792},[1148],{"type":574,"value":908},{"type":569,"tag":601,"props":1150,"children":1151},{"style":852},[1152],{"type":574,"value":1011},{"type":569,"tag":601,"props":1154,"children":1155},{"style":716},[1156],{"type":574,"value":860},{"type":569,"tag":601,"props":1158,"children":1160},{"class":603,"line":1159},16,[1161],{"type":569,"tag":601,"props":1162,"children":1163},{"style":716},[1164],{"type":574,"value":1165},"    }\n",{"type":569,"tag":601,"props":1167,"children":1169},{"class":603,"line":1168},17,[1170],{"type":569,"tag":601,"props":1171,"children":1172},{"style":716},[1173],{"type":574,"value":1174},"  }\n",{"type":569,"tag":601,"props":1176,"children":1178},{"class":603,"line":1177},18,[1179,1184,1188],{"type":569,"tag":601,"props":1180,"children":1181},{"style":722},[1182],{"type":574,"value":1183},"  return",{"type":569,"tag":601,"props":1185,"children":1186},{"style":744},[1187],{"type":574,"value":899},{"type":569,"tag":601,"props":1189,"children":1190},{"style":716},[1191],{"type":574,"value":860},{"type":569,"tag":601,"props":1193,"children":1195},{"class":603,"line":1194},19,[1196],{"type":569,"tag":601,"props":1197,"children":1198},{"style":716},[1199],{"type":574,"value":1200},"};\n",{"type":569,"tag":1202,"props":1203,"children":1204},"style",{},[1205],{"type":574,"value":1206},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":562,"searchDepth":788,"depth":788,"links":1208},[1209,1210],{"id":674,"depth":613,"text":674},{"id":679,"depth":613,"text":679,"children":1211},[1212],{"id":685,"depth":649,"text":685},"markdown","content:1.algorithm:3.leetcode:3.major:69.sqrtx.md","content","1.algorithm/3.leetcode/3.major/69.sqrtx.md","md",[1219,1221],{"_path":132,"title":131,"description":1220},"给你两个二进制字符串 a 和 b ，以二进制字符串的形式返回它们的和。",{"_path":138,"title":137,"description":1222},"假设你正在爬楼梯。需要 n 阶你才能到达楼顶。",1717735569660]